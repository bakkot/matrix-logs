2012-04-01
[22:45:28.0000] <Hixie>
back, fwiw

[22:45:32.0000] <Hixie>
abarth: why so?

[22:59:46.0000] <abarth>
Hixie: we're just reading about seamless and srcdoc

[22:59:55.0000] <abarth>
Hixie: reading how the two interact

[03:31:12.0000] <annevk>
https://dvcs.w3.org/hg/domcrypt/shortlog is somewhat confusing

[03:49:45.0000] <AryehGregor>
So, exciting tip: if you're taking your computer from America, and it has a power supply that supports both 110V and 220V, make sure that before you hook it up to 220V, you check that you don't have to flip a switch or anything.

[03:50:05.0000] <AryehGregor>
Otherwise you might need to make an unexpected trip to the computer store.

[03:50:24.0000] <AryehGregor>
(Apparently, the Hebrew term for a power supply is ספק כח.)

[03:50:25.0000] <j_wright>
thanks edison

[05:43:56.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=641821#c59

[05:44:07.0000] <annevk>
didn't Gecko argue against that initially?

[05:44:09.0000] <annevk>
oh well

[05:44:33.0000] <annevk>
good to see people read the spec carefully when implementing...

[05:45:04.0000] <Ms2ger>
Gecko is a rendering engine, it can't argue against anything :)

[05:50:23.0000] <annevk>
you know what I mean

[05:51:31.0000] <Ms2ger>
You know Mozillians' comments are almost always in a personal capacity :)

[05:52:46.0000] <annevk>
it was either sicking or smaug so it doesn't matter much in this case

[05:57:37.0000] <Ms2ger>
Speak of the devil

[05:58:51.0000] <smaug____>
/me is not a devil, just a friendly dragon

[05:59:31.0000] <smaug____>
annevk: argue agains what?

[05:59:53.0000] <smaug____>
against

[06:00:34.0000] <smaug____>
/me needs to still file bugs found in the spec during the week

[06:00:55.0000] <annevk>
having two records for a replace operation

[06:01:38.0000] <smaug____>
annevk: in some cases there sure are many records

[06:01:53.0000] <smaug____>
there is the record removing the new node from its old parent

[06:02:09.0000] <smaug____>
then record adding to the new parent

[06:02:25.0000] <smaug____>
the latter can be combined with removing the old node

[06:02:55.0000] <smaug____>
I need to  still check what latest webkit does

[06:03:03.0000] <smaug____>
/me doesn't know how to update chrome

[06:10:12.0000] <annevk>
I was referring to the comment in that bug...

[06:10:17.0000] <annevk>
it was not about adopting

[06:10:27.0000] <annevk>
you'll always need a separate record for that

[07:48:58.0000] <AryehGregor>
When is .isTrusted supposed to be true?

[07:49:09.0000] <AryehGregor>
/me wonders if input events from execCommand() should have it true or false

[07:49:29.0000] <annevk>
false

[07:49:36.0000] <AryehGregor>
Okay, why?

[07:50:54.0000] <AryehGregor>
Should it be true if the execCommand() is triggered by a user action (e.g., hitting a key triggers document.execCommand("insertText"))?

[07:52:29.0000] <annevk>
hmm, I guess input is some kind of corner case

[07:52:44.0000] <annevk>
isTrusted is true when the spec says to dispatch the event

[07:52:54.0000] <annevk>
e.g. readystatechange on XMLHttpRequest will have it set to true

[07:53:01.0000] <AryehGregor>
The spec for execCommand() says to dispatch the command.

[07:53:07.0000] <AryehGregor>
The author can invoke execCommand(), of course.

[07:53:31.0000] <zewt>
annevk: seems like it should be true in this case, if the event object is constructed by execCommand and can't be arbitrarily manipulated

[07:53:54.0000] <zewt>
that is, it's always seemed to me that !isTrusted means "this object was constructed by hand"

[07:54:02.0000] <zewt>
or something like that

[07:54:07.0000] <annevk>
yeah, something like that

[07:54:10.0000] <annevk>
:)

[07:54:34.0000] <annevk>
not sure it's actually needed

[07:55:28.0000] <zewt>
hmm

[07:55:37.0000] <zewt>
form.click() results in !isTrusted

[07:55:54.0000] <zewt>
(in FF)

[07:55:58.0000] <zewt>
which seems odd

[07:56:16.0000] <zewt>
at least to how i've intuitively viewed isTrusted

[07:56:28.0000] <zewt>
(personally I've never found isTrusted to be terribly useful, anyway...)

[07:57:32.0000] <annevk>
so in Gecko it might be user-initiated; something to do with their XBL impl

[07:57:46.0000] <zewt>
(when are you ever not required to trust other scripts on the page, anyway?)

[07:58:09.0000] <annevk>
XBL

[07:58:28.0000] <zewt>
xbl isn't relevant to web pages...

[07:58:53.0000] <annevk>
I'm not saying having isTrusted makes sense

[07:59:08.0000] <zewt>
weird, didn't know webkit (or at least chrome) doesn't have form.click (or maybe I did and I forgot, since I've been over this territory before)

[07:59:09.0000] <annevk>
maybe file a bug on DOM 3 Events?

[07:59:25.0000] <annevk>
I just specced isTrusted because it was there...

[07:59:28.0000] <zewt>
i'm sure it won't be removed so I won't waste my time

[07:59:40.0000] <annevk>
the new editor is far more reasonable

[07:59:50.0000] <zewt>
not important enough (to me) to spend time arguing for that anyway (if anyone else wants to, go for it)

[07:59:50.0000] <annevk>
and we could at least learn what it's for

[07:59:51.0000] <Ms2ger>
3249   // Click() is never called from native code, but it may be

[07:59:51.0000] <Ms2ger>
3250   // called from chrome JS. Mark this event trusted if Click()

[07:59:51.0000] <Ms2ger>
3251   // is called from chrome code.

[07:59:56.0000] <annevk>
yeah I might

[08:01:31.0000] <zewt>
if it doesn't do anything meaningful, it could also just always be true, which would be less likely to break pages (still not guaranteed, though) and simplify things

[08:01:50.0000] <annevk>
hmm

[08:01:56.0000] <annevk>
is it even supported in every browser?

[08:02:18.0000] <zewt>
someone might still be using it for other unintended purposes, like "did I initiate the event or did the user"

[08:02:51.0000] <zewt>
(which you can always do by tacking a property on the event when you create it, of course)

[08:03:36.0000] <zewt>
seems to not be there in chrome

[08:04:25.0000] <zewt>
don't have ie9 handy

[08:06:19.0000] <Ms2ger>
If it's in D3E, IE probably has it

[10:20:43.0000] <Ms2ger>
TabAtkins, nicely done

[10:22:43.0000] <annevk>
that does look pretty

[10:29:10.0000] <kennyluck>
oh my goodness.

[10:59:08.0000] <gsnedders>
"Design"

[10:59:09.0000] <gsnedders>
"W3C"

[10:59:14.0000] <gsnedders>
I think my brain just imploded.

[10:59:57.0000] <gsnedders>
Just wow. It's really quite well done.

[16:13:12.0000] <heycam>
Hixie, on HTMLCanvasElement the "_callback" argument can now be named just "callback" (argument identifiers don't need to be escaped when they're any of the names at http://dev.w3.org/2006/webapi/WebIDL/#prod-ArgumentNameKeyword)


2012-04-02
[17:05:18.0000] <zewt>
wow, nobody in webgl understands how web specs work *at all*

[17:05:22.0000] <zewt>
"I think that we should mandate that as soon as a feature becomes available without prefix, support for the prefix should be dropped."

[17:05:29.0000] <zewt>
as if specs can force browsers to do things

[23:13:22.0000] <boblet>
can anyone give me an example showing the difference between s and del elements, where content that would be appropriate for one is not for the other? I’d like to check I understand the difference…

[23:26:56.0000] <zcorpan>
doesn't the spec have examples?

[23:49:24.0000] <boblet>
zcorpan: the spec uses an old price being replaced by a new price for s, and completed todo items, closed bugs, replaced words, and a removed table column for del. However I’m not sure why del wouldn’t be appropriate for the old price, or s for e.g. replaced words

[23:51:00.0000] <boblet>
for example, if an online newspaper misquoted someone, they’d want to show both the incorrect text (for context) and the new text. semantically it seems like s and ins, but I’d probably use del and ins to use @datetime on del

[23:53:52.0000] <zcorpan>
s+ins seems bogus

[23:56:58.0000] <zcorpan>
if you fixed a misquote, it seems like a deletion and addition, so del+ins (if you want to keep the misquoted text, otherwise just remove the misquoted text altogether)

[23:57:23.0000] <zcorpan>
(and don't use ins in that case)

[23:57:48.0000] <boblet>
zcorpan: s seems possible for a misquote under “no longer accurate”, but I’m also iffy about it. The only examples of s are obsolete prices (with new sale price) and sold out events. I’m wondering what other content would be appropriate for s

[23:59:05.0000] <zcorpan>
a misquote wasn't accurate to begin with :-)

[23:59:59.0000] <boblet>
:) any other examples you can think of?

[00:01:33.0000] <zcorpan>
*shrug*

[00:02:26.0000] <boblet>
zcorpan: thanks

[00:08:04.0000] <annevk>
false descriptions

[00:08:29.0000] <annevk>
he's a <s>piece of work</s> nice guy

[00:08:37.0000] <annevk>
or some such

[00:12:50.0000] <zcorpan>
name changes, maybe

[00:12:50.0000] <zcorpan>
<h1>Introducing <s>Crap</s> <s>Dirt</s> Dash</h1>

[00:13:51.0000] <annevk>
hsivonen: did you just write "when they" as "one day"?

[00:13:59.0000] <annevk>
hsivonen: because otherwise I'm not sure what you wrote

[00:16:50.0000] <hsivonen>
annevk: yes. speech recognition for the lose

[00:17:42.0000] <annevk>
oh, if it was all dictated that's quite good then I guess

[00:18:45.0000] <zcorpan>
annevk: did you get anywhere with big5?

[00:19:35.0000] <annevk>
I haven't done much during the weekend, I have some kind of headache I can't seem to get rid of

[00:20:13.0000] <zcorpan>
:-/

[00:21:13.0000] <zcorpan>
hmm

[00:21:16.0000] <zcorpan>
Simons-MacBook-Pro:Dotnetdotcom zcorpan$ grep -aFic "big5" web200904

[00:21:16.0000] <zcorpan>
8882

[00:21:50.0000] <annevk>
it occurs in content too, but that's a lot higher

[00:23:06.0000] <annevk>
actually it's not

[00:23:24.0000] <zcorpan>
do you want the subset with pages that contain "big5"?

[00:23:26.0000] <annevk>
if I search for big5 through the data you gave me I get 8511

[00:24:40.0000] <zcorpan>
oh

[00:26:01.0000] <annevk>
hmm, but if I do the same grep I get 5780

[00:26:54.0000] <zcorpan>
that's weird. does the i flag not work with F?

[00:28:09.0000] <annevk>
I think my Python script might be wrong somehow

[00:28:57.0000] <zcorpan>
grep -aPc "[bB][iI][gG]5" web200904

[00:28:58.0000] <zcorpan>
8892

[00:29:43.0000] <zcorpan>
grep -aFizHZ "big5" web200904 > big5-all.txt resulted in a 91MB file

[00:30:21.0000] <annevk>
yeah my Python script must be wrong

[00:31:01.0000] <annevk>
though how exactly...

[00:31:03.0000] <annevk>
bytes = open("big5.txt", "rb").read()

[00:31:03.0000] <annevk>
find = b"big5"

[00:31:03.0000] <annevk>
found = b""

[00:31:03.0000] <annevk>
c = 0

[00:31:03.0000] <annevk>
for b in bytes:

[00:31:03.0000] <annevk>
    if b.lower() in find:

[00:31:03.0000] <annevk>
        found += b.lower()

[00:31:04.0000] <annevk>
    else:

[00:31:05.0000] <annevk>
        if found == find:

[00:31:05.0000] <annevk>
            c +=1

[00:31:06.0000] <annevk>
        found = b""

[00:31:06.0000] <annevk>
print c

[00:31:52.0000] <zcorpan>
/me is uploading it zipped (18MB) over 3G

[00:32:07.0000] <annevk>
why are you on 3G?

[00:32:17.0000] <zcorpan>
on the train

[00:38:16.0000] <annevk>
with the script above I get more results than you

[00:38:22.0000] <annevk>
11k

[00:39:07.0000] <annevk>
zcorpan: is the grep thing just substring matches or are there other conditions?

[00:40:14.0000] <zcorpan>
your script seems to miss a count in e.g. "big55"

[00:40:14.0000] <zcorpan>
should be just substring

[00:41:02.0000] <annevk>
then I would get even higher numbers

[00:41:32.0000] <zcorpan>
/me switching trains

[00:41:39.0000] <annevk>
running it on the 29MiB file gives 11k results

[00:41:44.0000] <annevk>
oh well

[00:46:52.0000] <hsivonen>
http://lists.w3.org/Archives/Public/www-tag/2012Apr/0010.html

[00:49:01.0000] <annevk>
my MacBook crashed hard

[00:49:14.0000] <annevk>
lots of pretty colored lines on the screen

[00:49:35.0000] <zcorpan>
annevk: textedit finds 11669 "big5"s in big5.txt

[00:49:51.0000] <zcorpan>
annevk: and 15564 in big5-all.txt

[00:50:02.0000] <zcorpan>
annevk: maybe the grep count counts "lines"

[00:50:32.0000] <annevk>
that's the same amount I found

[00:50:35.0000] <annevk>
exact

[00:51:01.0000] <annevk>
great, so my scripts are not entirely buggy

[00:51:20.0000] <zcorpan>
it's buggy for the input i gave :-)

[00:52:40.0000] <annevk>
hence "not entirely"

[00:55:12.0000] <annevk>
the problem is that I haven't really found a way to analyze the data properly

[00:55:38.0000] <annevk>
there's about a 1000 files in what you gave me

[00:56:35.0000] <annevk>
and over 600000 potential code points in the PUA / HKSCS range

[00:57:27.0000] <annevk>
so far I thought of writing a tokenizer to strip out the HTTP related bits and store the HTML bits each in one file

[00:57:39.0000] <annevk>
then maybe have some statistics on a per file basis and study a couple of them

[01:01:09.0000] <MikeSmith>
hsivonen: "There really are spoons."

[01:02:54.0000] <hsivonen>
MikeSmith: did I sent more misdictated email?

[01:03:06.0000] <MikeSmith>
hsivonen: no, see the reply

[01:03:11.0000] <MikeSmith>
from Pat Hayes

[01:03:31.0000] <MikeSmith>
to the www-tag message you cited

[01:03:34.0000] <hsivonen>
I see

[01:05:03.0000] <MikeSmith>
bz implementing ruby support?

[01:05:08.0000] <MikeSmith>
https://bugzilla.mozilla.org/show_bug.cgi?id=256274

[01:05:26.0000] <annevk>
www-tag is top of my list of lists I am considering to unsubscribe from

[01:05:40.0000] <MikeSmith>
oh, maybe he's just merging existing patches to the tip

[01:07:26.0000] <hsivonen>
MikeSmith: looks like it. it has been on his list of things to do

[01:07:33.0000] <MikeSmith>
ok

[01:07:38.0000] <MikeSmith>
good to see

[01:07:45.0000] <annevk>
original patch seems to be from Hajime Shiozawa

[01:08:18.0000] <zcorpan>
annevk: simon.html5.org/dump/big5-all.txt.zip

[01:09:20.0000] <hsivonen>
annevk: IIRC, the original needed some additional attention from bz

[01:15:56.0000] <annevk>
thanks zcorpan, even more data I don't know what to do with :p

[01:19:55.0000] <MikeSmith>
is the list of encoding names in the Encodings spec the complete list that the spec will contain?

[01:20:38.0000] <MikeSmith>
I realize some of the ones you have there you haven't specced out yet, but I just mean is that the complete outline at least

[01:20:39.0000] <annevk>
MikeSmith: unless someone finds another encoding we need to add

[01:20:46.0000] <MikeSmith>
OK

[01:21:05.0000] <annevk>
MikeSmith: and it has been suggested to remove the remaining IBM encodings

[01:21:12.0000] <MikeSmith>
oh

[01:21:13.0000] <annevk>
as well as iso-2022-cn

[01:21:21.0000] <MikeSmith>
why?

[01:21:27.0000] <annevk>
stronger case for the latter

[01:21:33.0000] <annevk>
because not all browsers implement them

[01:22:02.0000] <MikeSmith>
OK

[01:22:40.0000] <MikeSmith>
so the criteria for what's included is that it's limited to the set of encodings that all browsers support, right?

[01:22:41.0000] <annevk>
zcorpan: seems you did not upload a complete file

[01:22:54.0000] <annevk>
zcorpan: it downloads 14MiB and does not recognize it as a zip file

[01:23:29.0000] <annevk>
MikeSmith: or something that's needed for compatibility

[01:23:40.0000] <MikeSmith>
OK

[01:24:01.0000] <annevk>
MikeSmith: and potentially something that's really useful, but "better than utf-8" has not been found yet to my knowledge :)

[01:26:03.0000] <MikeSmith>
annevk: so that's basically what I already told Richard but I think at some point he's going to ask you himself, and maybe ask about specific encodings

[01:27:04.0000] <annevk>
MikeSmith: cool

[01:27:31.0000] <MikeSmith>
annevk: would publishing this as a deliverable of the i18n WG be an option?

[01:27:51.0000] <MikeSmith>
that would put it in the same case as the charmod spec

[01:28:14.0000] <MikeSmith>
does HTML5 normatively reference charmod? or do any other specs?

[01:28:44.0000] <MikeSmith>
I mean it would put it in the same status as charmod as far as W3C publication

[01:31:15.0000] <annevk>
I thought i18n didn't do RECs?

[01:31:26.0000] <annevk>
but charmod is a REC

[01:31:31.0000] <MikeSmith>
yeah

[01:31:33.0000] <annevk>
so that might be okay

[01:31:52.0000] <MikeSmith>
I'm not so clear on status of charmod

[01:31:59.0000] <MikeSmith>
is it actually a REC?

[01:32:03.0000] <annevk>
http://www.w3.org/TR/charmod/ says so

[01:32:13.0000] <annevk>
a frequently violated REC

[01:32:29.0000] <MikeSmith>
yeah, I see it is

[01:33:51.0000] <annevk>
oh sweet

[01:33:58.0000] <annevk>
the original Prince of Persia code is going online

[01:34:04.0000] <annevk>
I hope someone makes that playable in a browser

[01:35:00.0000] <zcorpan>
annevk: try again

[01:35:49.0000] <annevk>
trying again

[01:39:26.0000] <annevk>
I think it worked

[01:44:12.0000] <annevk>
it did and it seems I hit the bug zcorpan found in my script

[01:44:24.0000] <annevk>
/me finds 15537 hits for big5

[02:30:14.0000] <annevk>
in the larger dataset not every file uses correct HTTP line endings

[02:31:23.0000] <Ms2ger>
Breaking news: people violate HTTP

[02:32:00.0000] <annevk>
the problem is I need to change my simplistic tokenizer

[02:32:01.0000] <jgraham>
HTTP working group being treated for shock.

[02:32:23.0000] <annevk>
I guess I should eat 0D when followed by 0A and otherwise use 0A

[02:32:58.0000] <annevk>
or not worry about the larger dataset for now

[02:33:09.0000] <annevk>
/me does that

[02:46:35.0000] <annevk>
only a third of the files defines HTTP level charset

[02:46:51.0000] <annevk>
of which a tenth is not big5/big5-hkscs

[02:47:32.0000] <annevk>
and of those 34 a couple are bogus, some utf-8, iso-8859-1, ms950, and x-ms950-hkscs

[02:47:58.0000] <annevk>
bogus is actually either the empty string or b"null"

[02:48:06.0000] <annevk>
(i.e. those bytes, no quotes)

[02:48:22.0000] <annevk>
oh, and one euc_kr

[02:48:38.0000] <annevk>
which is also bogus, as it should be euc-kr to be recognized

[02:49:50.0000] <annevk>
the way I search for charset is somewhat bogus too btw, but the cheat is justified for the dataset :)

[03:02:53.0000] <annevk>
zcorpan: hmm

[03:03:02.0000] <annevk>
zcorpan: are we sure they give the raw data?

[03:05:19.0000] <annevk>
zcorpan: if I open a couple of test pages, decoding them as utf-8 gives better results :/

[03:06:40.0000] <annevk>
what's the dataset source again?

[03:07:25.0000] <annevk>
ah http://dotnetdotcom.org/

[03:09:20.0000] <annevk>
to be clear, in processing I only opened files with the "b" flag set

[03:13:36.0000] <annevk>
Philip`: know anything about that?

[03:15:18.0000] <zcorpan>
annevk: also for big5.txt ?

[03:22:42.0000] <annevk>
zcorpan: you mean big5-all.txt?

[03:22:55.0000] <annevk>
zcorpan: this was on big5-.txt

[03:24:56.0000] <annevk>
big5.txt

[03:26:20.0000] <annevk>
I looked at the first 50 files

[03:27:21.0000] <annevk>
lots have big5 in HTTP set

[03:27:29.0000] <annevk>
but no big5 in the actual data

[03:33:43.0000] <zcorpan>
annevk: i meant big5.txt. big5-all.txt was zipped so might have been tampered with by zipping or unzipping, was my thought

[03:35:37.0000] <annevk>
it seems sort of plausible they have done normalization given the zero byte delimited files

[03:35:59.0000] <annevk>
but it's clearly not great for this

[03:38:13.0000] <annevk>
I think I'll email the dotnetdotcom guys just to be sure

[03:38:32.0000] <zcorpan>
textwrangler can't open big5.txt, but has no problems opening utf-8 files with nulls

[03:41:51.0000] <annevk>
well, there's no encoding conversion going on locally

[03:41:52.0000] <annevk>
bytes = open("big5.txt", "rb").read()

[03:41:54.0000] <annevk>
and

[03:41:59.0000] <annevk>
newbytes = open("test-" + str(c) + "." + charset + ".html", "wb")

[03:42:27.0000] <annevk>
the rest is just iterating over, testing on, and writing bytes

[03:52:39.0000] <annevk>
emailed dotdot

[04:13:36.0000] <annevk>
zcorpan: so yeah e.g. the euc_kr file which has big5 in <meta>, has EF BF BD as byte sequence which is UTF-8 for FFFD and is nothing in either other encoding

[04:14:03.0000] <zcorpan>
annevk: ok :(

[04:14:37.0000] <annevk>
and it has the same sequences in big5.txt as it has in my split out files

[04:14:42.0000] <annevk>
when I use a hex editor

[04:14:58.0000] <zcorpan>
too bad

[04:15:16.0000] <annevk>
I could prolly write a custom utf-8 decoder to find out why big5.txt cannot be opened in TextWrangler, but I'm not sure that's worth it

[04:44:01.0000] <annevk>
zcorpan: you could maybe quickly verify to be a 100% sure by checking some utf-16 data in the set

[04:44:11.0000] <annevk>
zcorpan: as additional sanity check

[04:46:20.0000] <Philip`>
The dotbot data can't contain any UTF-16 pages since it can't represent 0x00 bytes

[04:46:51.0000] <annevk>
doh

[04:47:14.0000] <Philip`>
/me never tried looking to see what they actually do with 0x00 bytes (maybe reject that page, or drop those bytes, or truncate, or whatever)

[04:47:25.0000] <annevk>
windows-1252 data with octets over > 0x7F works too

[04:49:38.0000] <zcorpan>
grep -aPc "^Content-Type\s*:\s*text/html\s*;\s*charset\s*=\s*[\"']?utf-16" web200904

[04:49:39.0000] <zcorpan>
0

[04:54:19.0000] <zcorpan>
annevk: you could see what you find in http://webcrawl.s3.amazonaws.com/web.short.gz

[04:55:01.0000] <zcorpan>
annevk: maybe grep screws things up

[04:57:08.0000] <annevk>
no

[04:57:16.0000] <annevk>
search for windows-1252

[04:57:29.0000] <annevk>
first octet sequence I find in that document is C3 96

[04:57:46.0000] <annevk>
it's a German document, and in UTF-8 that is Ö

[04:58:12.0000] <annevk>
and that is followed by sterreich so I think it is indeed normalized :(

[04:58:26.0000] <Philip`>
/me notes that grep can screw things up if you don't run it with LANG=C

[04:58:52.0000] <annevk>
I'm just looking through the file zcorpan pointed out in a hex editor

[04:58:57.0000] <annevk>
nothing grep can screw up here

[04:59:08.0000] <annevk>
so sad panda face

[04:59:27.0000] <annevk>
big sad panda face

[05:00:06.0000] <zcorpan>
so i guess you need to go shopping for a different data set, or do a crawl yourself

[05:03:36.0000] <jgraham>
Probably wouldn't be that hard to do a custom crawl that just got the kind of data you want (i.e. rejected any pages that aren't the encoding you care about without storing them)

[05:05:15.0000] <Philip`>
Depends if by "crawl" you mean actually parsing pages and following links and trying to get a not disasterously biased dataset, or just downloading random pages from lists on dmoz.org or wherever

[05:05:59.0000] <jgraham>
Well the extent that you need to actually parse pages to do it is rather limited

[05:06:09.0000] <jgraham>
You just need to find things that look like URLs

[05:06:13.0000] <Ms2ger>
Doesn't the dotbot data give you the URLs as well?

[05:06:39.0000] <zcorpan>
Ms2ger: yes, but many urls are probably dead by now

[05:06:48.0000] <zcorpan>
http://s3.amazonaws.com/alexa-static/top-1m.csv.zip might be a useful starting point

[05:06:59.0000] <annevk>
what is that?

[05:07:10.0000] <zcorpan>
alexa's top 1 million sites

[05:07:10.0000] <Ms2ger>
Sounds like Alexa's top 1 million pages

[05:07:34.0000] <annevk>
is there a way to get all the URLs from the dotbot pages who have big5 somewhere?

[05:07:37.0000] <zcorpan>
it'll only give you front pages

[05:08:03.0000] <annevk>
'cause then I could just download the dotbot pages again

[05:08:11.0000] <Philip`>
jgraham: Most are relative URLs, so you need some way to resolve them properly, and it's quite possible the URLs include non-ASCII characters so you need to decode the pages first

[05:08:24.0000] <annevk>
and those that don't 404 and are still big5 would be useful

[05:09:11.0000] <zcorpan>
Philip`: can you think of a good way to do that?

[05:09:15.0000] <Philip`>
and you probably want to avoid following links like <script>..."<a href='"+url+"'>"... etc, so you can't just dumbly tokenise everything

[05:09:49.0000] <jgraham>
Philip`: Sure, decoding is necessary

[05:10:18.0000] <jgraham>
Philip`: But only picking absolute urls is fine because it biases you towards covering many different sites, not lots of data from the same site

[05:10:20.0000] <Philip`>
I guess the harder part is trying to avoid downloading a zillion pages from database-driven sites and no pages from anywhere else

[05:10:56.0000] <jgraham>
(which one also does by storing some sort of map of domain -> # pages and capping the number of pages per domain)

[05:11:51.0000] <Philip`>
zcorpan: If you're finding the pages with grep -z, maybe you could add "-B2" so it prints the preceding two 'lines' (which includes the URL)?

[05:12:13.0000] <zcorpan>
ooh, clever

[05:12:37.0000] <annevk>
given the URL encoding stuff having everything in utf-8 makes perfect sense

[05:12:57.0000] <annevk>
although not necessarily for query parts, but maybe they do something special there too

[05:27:47.0000] <zcorpan>
annevk: http://simon.html5.org/dump/big5-all-with-urls.txt.zip - i'll leave it to you to parse out the urls :-)

[05:38:55.0000] <annevk>
ooh, that includes all the data?

[05:38:56.0000] <annevk>
hmm

[05:39:01.0000] <annevk>
guess that's not much of a problem

[06:16:26.0000] <davidb>
oat

[06:19:19.0000] <Ms2ger>
Morning

[06:27:49.0000] <mattwest>
What is everybody's thoughts about using the <article> element to wrap the content of standard web page. For example something like an about page.

[06:40:23.0000] <annevk>
alright so I make a string from start of file or 0A until I hit 00, append that to list of URLs and carry on...

[06:41:41.0000] <annevk>
zcorpan: can you actually make this one for the smaller big5.txt?

[06:41:52.0000] <annevk>
zcorpan: I think that contained more accurate data, this includes stuff such as big5.gif

[06:55:39.0000] <zewt>
Web Application Store Community Group Launched

[06:55:39.0000] <zewt>
				

[06:55:45.0000] <zewt>
april fool's was yesterday, guys

[06:56:35.0000] <zcorpan>
annevk: http://simon.html5.org/dump/big5-with-urls.txt.zip

[06:56:52.0000] <zcorpan>
LANG=C grep -aEizB2 "(content(-type[[:space:]]*:|=[[:space:]]*[\"']?)[[:space:]]*text/html[[:space:]]*;|<meta[[:space:]])[[:space:]]*charset[[:space:]]*=[[:space:]]*[\"']?(big5|cn-big5|csbig5|x-x-big5|big5-hkscs)" web200904 > big5-with-urls.txt

[06:57:26.0000] <zewt>
i just died a little in my mouth

[06:58:10.0000] <annevk>
one internet awarded to zcorpan

[06:59:18.0000] <zewt>
as soon as grep seriously expects me to say [[:anything:]], it's time to switch to perlre

[06:59:33.0000] <zewt>
it's near the top of the ridiculous-syntax list

[06:59:41.0000] <zcorpan>
-z doesn't work with -P :(

[07:00:20.0000] <zewt>
i'd write a real script first, heh

[07:00:26.0000] <zewt>
anyway off to work

[07:00:30.0000] <zcorpan>
this was simpler

[07:44:15.0000] <annevk>
zcorpan: I'll have to look up HTML rendering for that

[07:45:20.0000] <annevk>
zcorpan: prolly 18px

[07:45:34.0000] <zcorpan>
annevk: the quiz is on twitter :-P

[07:45:36.0000] <annevk>
root margin doesn't collapse iirc

[07:46:44.0000] <Ms2ger>
/me thinks the best part of http://dev.w3.org/csswg/css3-tables-algorithms/Overview.src.htm is that it was written in MS Word

[07:47:34.0000] <zcorpan>
Ms2ger: LOL

[07:48:02.0000] <Ms2ger>
<meta name=Generator content="Microsoft Word 12 (filtered)">

[07:48:16.0000] <annevk>
kind of insane that the return value of urllib2.urlopen() does not expose response codes

[07:48:34.0000] <annevk>
there might be a reason to have XMLHttpRequest in Python after all

[07:49:21.0000] <Ms2ger>
You should talk to lckl luke

[07:49:38.0000] <jgraham>
annevk: The built in urllib is kind of icky

[07:49:50.0000] <jgraham>
You probably want to use httplib2 or requests instead

[07:50:08.0000] <annevk>
I'm using urllib2

[07:50:34.0000] <jgraham>
Well, like I said, that's your first problem

[07:51:10.0000] <jgraham>
(I mean it's not *unusable*, it's just that both the above mentioned libs are *better*)

[07:51:15.0000] <annevk>
isn't urllib2 the one written by Joe Gregorio and now finally included by Python?

[07:51:41.0000] <jgraham>
Not in any version of python I know about at least

[07:51:51.0000] <jgraham>
httplib2 is the one he wrote

[07:52:08.0000] <annevk>
so what is urllib2 then?

[07:52:38.0000] <jgraham>
Part of the standard library

[07:52:44.0000] <annevk>
hmm okay

[07:52:54.0000] <annevk>
stuff is confusing

[07:53:09.0000] <jgraham>
That partially relplaces urllib, which is also part of the standard library

[07:53:14.0000] <Ms2ger>
We need a urllib5, I guess

[07:53:17.0000] <jgraham>
Not python's finest moment

[07:53:40.0000] <jgraham>
Anyway, all the cool kids are using requests these days

[07:53:59.0000] <jgraham>
http://docs.python-requests.org/en/latest/index.html

[07:54:10.0000] <jgraham>
Although httplib2 is a fine choice also

[07:55:10.0000] <annevk>
not helping reduce my headache

[07:55:17.0000] <annevk>
but requests does look nice

[07:55:38.0000] <jgraham>
"pip install requests" -> no more headache

[07:55:46.0000] <jgraham>
(not medical advice)

[07:57:14.0000] <annevk>
ooh

[07:57:23.0000] <annevk>
but I can use the undocumented getcode() method too

[08:11:43.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1442

[08:29:45.0000] <annevk>
this new strategy works btw

[08:30:01.0000] <annevk>
it'll take a while to get all the data downloaded, but I have some big5 pages now

[08:35:23.0000] <karlcow>
"You might be intrigued by the existence of two separate URL modules in Python - urllib and urllib2. Even more intriguing: they are not alternatives for each other. " — http://www.hacksparrow.com/python-difference-between-urllib-and-urllib2.html

[08:35:59.0000] <karlcow>
the support for Web standards in python std lib is kind of subpar in general

[08:36:35.0000] <Ms2ger>
Well, it's kind of subpar in browsers too

[08:36:42.0000] <annevk>
but then standards such as URL are subpar too

[08:37:06.0000] <karlcow>
and then if you thought there were not enough choices http://pypi.python.org/pypi/urllib3/

[08:37:06.0000] <Ms2ger>
"The Interwebs: We're Subpar"

[08:37:08.0000] <karlcow>
;)

[08:37:23.0000] <karlcow>
Ms2ger: hmm nice tag line :)

[08:37:43.0000] <Ms2ger>
Maybe something for MikeSmith's platform page :)

[08:38:42.0000] <karlcow>
http://urllib3.readthedocs.org/

[08:39:29.0000] <karlcow>
https://github.com/shazow/urllib3

[09:07:36.0000] <dglazkov>
good morning, Whatwg!

[09:09:34.0000] <jgraham>
dglazkov: 33% -> FAIL

[09:10:35.0000] <dglazkov>
good evening, jgraham?

[09:10:48.0000] <jgraham>
Ooh, much better :)

[09:11:16.0000] <dglazkov>
moderately crappy evening, jgraham!

[09:11:22.0000] <dglazkov>
/me aims to please

[09:11:31.0000] <jgraham>
:)

[09:12:47.0000] <Ms2ger>
Reasonable afternoon, dglazkov

[09:15:13.0000] <dglazkov>
reasonable indeed! The cafe downstairs is serving sardines and seaweed salad for breakfast. <3

[09:22:38.0000] <jgraham>
Oh, is today at google btought to you by the letter "s"?

[09:22:42.0000] <jgraham>
*brought

[09:22:47.0000] <jgraham>
Which number is it?

[09:44:57.0000] <MikeSmith>
annevk: so apparently i18n WG was chartered to do RECs when charmod was published, but not any longer

[09:49:58.0000] <annevk>
MikeSmith: makes sense

[10:17:37.0000] <dglazkov>
jgraham: number 1, of course! :)

[11:09:43.0000] <dglazkov>
http://infrequently.org/2012/04/bedrock/

[11:35:16.0000] <tantek>
slightlyoff - LOL at "Fault tollerence" [sic] - http://infrequently.org/12/eclipsecon/#23

[11:36:50.0000] <tantek>
(found linked from your bedrock article that dglazkov dropped into the channel)

[11:52:39.0000] <annevk>
dglazkov: looks like the same message as earlier

[11:55:12.0000] <annevk>
dglazkov: it would be more interesting once someone outlined how say <textarea> would be implemented using these low-level primitives, including styling, text selection, etc.

[12:13:37.0000] <dglazkov>
annevk: yup

[12:14:30.0000] <dglazkov>
annevk: textarea is already pretty much done that way in WebKit -- just the long tail of one-off reconciliation tweaks remain.

[12:15:28.0000] <dglazkov>
annevk: a similar experiment for me is implementing innerHTML.

[12:23:43.0000] <zcorpan>
http://simon.html5.org/csspubquiz

[12:26:33.0000] <Ms2ger>
Semantic markup and twitter? Fascinating combination

[12:31:48.0000] <zcorpan>
all my quizzes so far are actual things i've stumbled upon, all but one in relation to the quirks spec

[13:56:35.0000] <Hixie>
someone asks if there's an equivalent of me but for JS -- who should I send them to for JS feedback?

[13:57:02.0000] <gsnedders>
There isn't.

[13:57:13.0000] <gsnedders>
es-discuss if you want a mailing list

[13:57:21.0000] <Ms2ger>
You?

[13:57:38.0000] <Hixie>
es-discuss@ what domain again? mozilla.org?

[13:57:43.0000] <gsnedders>
Hixie: Yeah

[13:57:45.0000] <Hixie>
thanks

[13:57:49.0000] <gsnedders>
If you want private feedback, join ECMA and TC39.

[14:01:43.0000] <Hixie>
anyone have an opinion on http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-January/034489.html ?

[14:02:34.0000] <Ms2ger>
I don't know anything about it, so I default to assuming dbaron is right

[14:03:19.0000] <Hixie>
yeah me too :-)

[14:23:41.0000] <rubys1>
Brendan is the closest thing to a BDFL for JS

[14:24:01.0000] <gsnedders>
Still a long way from it, though

[14:25:44.0000] <rubys1>
Hixie: got a minute?  Apparently your proposal <http://krijnhoetmer.nl/irc-logs/whatwg/20120328#l-1010> wasn't as controversial as I would have expected.

[14:27:12.0000] <Hixie>
rubys1: sure, sup

[14:27:37.0000] <rubys1>
a few questions, and perhaps we can wrap this up quickly.  Do you have any thoughts on what template would be used?

[14:28:04.0000] <Hixie>
/me follows the link to work out what we're talking about

[14:28:28.0000] <Hixie>
template?

[14:28:43.0000] <Hixie>
you mean what boilerplate? as little as possible, i'd hope

[14:29:51.0000] <rubys1>
that's probably sufficient for my purposes right now.  Making it look different than a WG draft was the spirit of the question.  Sounds like that would be fine with you.  Agreed?

[14:30:57.0000] <Hixie>
sure

[14:31:03.0000] <Hixie>
could even be more or less identical to the whatwg version

[14:31:08.0000] <Hixie>
though without the scripts, i guess

[14:31:48.0000] <rubys1>
Next question, would you want to keep this as is, or would you plan on changing it: http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#is-this-html5? ?

[14:32:31.0000] <Hixie>
it would presumably have to be clarified a bit

[14:32:46.0000] <rubys1>
Last question:

[14:33:58.0000] <rubys1>
when we last talked, I proposed http://dev.w3.org/html5/2dcontext-hixie/, given what you are intending, is the following OK as a URL: http://dev.w3.org/html/spec-hixie/

[14:34:17.0000] <rubys1>
note html, not html5, not html-next, simply html.

[14:36:39.0000] <Hixie>
while that would be ideal in retrospect, i think it's probably best from a pragmatic position if we just leave all the html stuff and derivatives in the html5/ directory

[14:36:48.0000] <Hixie>
makes life easier when dealing with cvs tree fragments

[14:37:16.0000] <Hixie>
(spec-whatwg would probably be more in line with how the spec is described, too)

[14:37:46.0000] <Hixie>
(there's a number of specs in dev.w3.org/html5/... that are not what the w3c calls "html5" but fall under the buzzword "html5", e.g. websockets, iirc)

[14:38:06.0000] <Hixie>
(so i don't think it'd be especially controversial to keep using html5/...)

[14:40:13.0000] <rubys1>
I'm just gathering data at the moment.  This may or may not be controversial; at the moment, I just want to know what is being proposed.  In any case, I've got the answers I need to proceed.  If you think of anything more, feel free to ping me.

[14:41:01.0000] <Hixie>
k

[14:41:19.0000] <Hixie>
rubys1: what would the purpose be of having a copy of the whatwg spec in dev.w3.org?

[14:41:35.0000] <Hixie>
rubys1: i don't have a problem doing it, but it does seem like it might be a bit confusing for people

[14:42:01.0000] <Hixie>
rubys1: (and we do have a lot of confusion surrounding this already, sadly)

[14:42:57.0000] <rubys1>
I thought it would be controversial because of exactly that reason.  But since you proposed it, I followed through and asked around, and didn't find any pushback.  In fact, some liked the idea.

[14:44:12.0000] <Hixie>
rubys1: oh i wasn't so much proposing it as saying that i would be happy to do it if you thought it would address some need. i'm just unclear on what need it solves.

[14:44:30.0000] <Ms2ger>
Hixie, so... Creating a new StorageEvent does set e.key to the empty string in Chrome and Gecko

[14:45:02.0000] <Hixie>
Ms2ger: yeah, i figured that might change things. seems better to just keep things consistent though, long-term.

[14:45:25.0000] <Ms2ger>
Works for me, just wanted to make sure you're aware

[14:46:24.0000] <Hixie>
yeah, i was. thanks for checking though.

[14:46:54.0000] <Hixie>
i think this is only the second or so issue that's arisen from that huge patch heycam did way back when we added nullable annotations to html

[14:47:03.0000] <Hixie>
pretty impressively low rate of errors

[14:47:20.0000] <Ms2ger>
I wish I had such a rate for my own specs :)

[14:48:20.0000] <Hixie>
that's all heycam; my own changes of that nature have way more bugs :-)

[14:48:29.0000] <Hixie>
that's why i didn't want to do it in the first place :-)

[14:49:55.0000] <zcorpan>
Ms2ger: speaking of spec bugs, do you consider http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1443 a spec bug?

[14:53:59.0000] <Ms2ger>
Fascinating case

[14:57:48.0000] <Ms2ger>
So the spec expects a 'foo--' element and a comment whose value is 'y</foo' as siblings?

[14:58:51.0000] <Ms2ger>
I'd say probably a spec bug, yes

[14:59:21.0000] <zcorpan>
well the spec says to copy over the children of the root element

[14:59:31.0000] <zcorpan>
the comment isn't a child of the root element

[14:59:47.0000] <zcorpan>
so it gets dropped on the floor per spec

[15:00:08.0000] <zcorpan>
but one might expect this to throw an exception

[15:01:14.0000] <Ms2ger>
I would

[15:01:32.0000] <Ms2ger>
Oh, that's even better

[15:02:05.0000] <Ms2ger>
Hixie, was that your intention for http://www.whatwg.org/specs/web-apps/current-work/multipage/the-xhtml-syntax.html#xml-fragment-parsing-algorithm ? :)

[15:02:46.0000] <Hixie>
hm?

[15:03:10.0000] <Hixie>
what's the question?

[15:03:16.0000] <Ms2ger>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1443

[15:04:11.0000] <Ms2ger>
The spec parses "<foo-->" + input + "</foo-->"

[15:04:48.0000] <Hixie>
what browser should i be testing that in? chrome gives me a TypeError

[15:05:05.0000] <Ms2ger>
Gecko follows the spec

[15:06:20.0000] <Hixie>
won't you abort on step 5?

[15:06:26.0000] <Hixie>
with a SyntaxError?

[15:06:35.0000] <zcorpan>
no

[15:06:49.0000] <Hixie>
why not

[15:06:57.0000] <Hixie>
oh sorry

[15:07:00.0000] <zcorpan>
innerHTML prepends the string with the start tag and appends with end tag

[15:07:06.0000] <Hixie>
i thought foo == <html/>

[15:07:07.0000] <Hixie>
my bad

[15:08:44.0000] <Hixie>
i cannot honestly say i'd considered this case

[15:08:45.0000] <Hixie>
jesus

[15:08:51.0000] <Hixie>
who came up with this :-P

[15:09:03.0000] <zcorpan>
take a guess :-P

[15:09:09.0000] <Hixie>
me? :-P

[15:09:21.0000] <zcorpan>
nope :-)

[15:09:29.0000] <Hixie>
i think it would make sense to have the fragment parsing algorithm check for other siblings and throw

[15:09:41.0000] <Hixie>
possibly throwing a WhatWereYouThinkingError

[15:10:02.0000] <Ms2ger>
OperaQAError

[15:10:06.0000] <zcorpan>
heh

[15:10:30.0000] <zcorpan>
LOLzcorpanDontTestAllFuckingEdgeCasesOKError

[15:10:36.0000] <Hixie>
alternatively, between steps 3 and 4 have it check that you're not in the middle of a token

[15:10:40.0000] <Hixie>
and if so bail

[15:11:21.0000] <Ms2ger>
Alternatively, have annevk write an XML spec with a fragment parsing algorithm

[15:12:17.0000] <Hixie>
i'm happy to do either of the two changes i describe, or have anne take it over if he's not too busy with other specs

[15:12:25.0000] <Hixie>
either way, file a bug

[15:12:31.0000] <Hixie>
i agree we don't want what is there now

[15:12:44.0000] <Hixie>
PS. mark the bug "trivial" :-P

[15:13:23.0000] <zcorpan>
/me files

[15:33:16.0000] <gsnedders>
zcorpan: a && b returns a if a is false

[15:33:29.0000] <gsnedders>
zcorpan: (otherwise it returns b)

[15:34:07.0000] <gsnedders>
zcorpan: i.e., it returns a value x st ToBoolean(x) = ToBoolean(a) && ToBoolean(b)

[15:34:34.0000] <gsnedders>
Wait, no, I can't read.

[15:34:36.0000] <gsnedders>
That's not you!

[15:34:37.0000] <gsnedders>
Gah!

[16:50:51.0000] <Hixie>
does anyone implement startOffsetTime or can i rename it?

[16:51:33.0000] <smaug____>
can't find such thing in Gecko

[16:53:10.0000] <Hixie>
ok looks like nobody i tested implements it

[16:53:32.0000] <Hixie>
/me changes it to startDate


2012-04-03
[17:00:58.0000] <TabAtkins>
You mean starDate.

[17:02:28.0000] <Hixie>
oops

[17:02:34.0000] <Hixie>
wait, no

[17:02:55.0000] <Hixie>
i thought you meant i had actually done that

[17:03:04.0000] <TabAtkins>
You need to quit listening to me.

[17:03:26.0000] <Hixie>
indeed

[17:03:26.0000] <Hixie>
:-P

[17:17:19.0000] <zewt>
http://groups.google.com/group/mongodb-user/browse_thread/thread/04d5a8148a9cc557 and you thought initMouseEvent had too many arguments

[17:17:31.0000] <zewt>
message = struct.pack("<i", 16 + len(data))\n\nerror: pack requires exactly 3415645423173094629 arguments\n')

[17:26:44.0000] <TabAtkins>
Hahaha

[19:07:44.0000] <roc_>
Hixie: I thought Opera tried to implement it

[19:09:11.0000] <roc>
Hixie: by the way, I have a question about Workers ... what would you think of an extension to postMessage that takes an extra string argument representing the global-scope function to be invoked (instead of the onpostmessage handler)?

[19:13:17.0000] <Hixie>
roc: yeah, opera were the ones asking for the rename

[19:13:18.0000] <zewt>
i wouldn't like having global functions in my workers executable like that; it's exposing something as an API that i probably didn't intend to be

[19:13:34.0000] <zewt>
prefer to have the entry points better defined

[19:14:22.0000] <Hixie>
roc: for Worker.postMessage?

[19:14:39.0000] <Hixie>
roc: that sounds pretty messed up, especially once we do cross-origin workers :-)

[19:14:47.0000] <Hixie>
roc: can't the other end implement that manually if they want to?

[19:15:13.0000] <Hixie>
function (event) { self[event.data.function].apply(event.data.arguments) } or some such

[19:18:04.0000] <roc>
yes

[19:18:10.0000] <roc>
perhaps you could chime in on this thread: http://lists.w3.org/Archives/Public/public-audio/2012JanMar/0343.html

[19:18:36.0000] <roc>
one of your friends at Google wants to add something like that

[19:18:45.0000] <zewt>
... and he's discussing it on public-audio?

[19:18:57.0000] <roc>
it's specifically for audio (or media) processing

[19:19:21.0000] <zewt>
if it's a worker feature, it's not

[19:19:45.0000] <Hixie>
roc: your e-mail seems to pretty much summarise what i would say :-)

[19:19:55.0000] <roc>
the idea is you might have a Worker handling several different kinds of processing and he wants to be able to dispatch to particular processing callbacks instead of a single event handler like I'm proposing

[19:20:17.0000] <roc>
Hixie: OK, but your input might carry more weight

[19:20:45.0000] <Hixie>
if there's a working group in which the same argument from two different people carries different weight with the relevant spec editor, that should be stamped out immediately

[19:20:46.0000] <roc>
Hixie: I know you don't approve of such authority, but it's still a reality

[19:20:56.0000] <zewt>
Hixie: severe idealism :)

[19:23:34.0000] <Hixie>
roc: do you have a link to the e-mail in which Dmitry first suggests it

[19:23:36.0000] <Hixie>
?

[19:25:25.0000] <roc>
http://lists.w3.org/Archives/Public/public-audio/2012JanMar/0245.html

[19:25:55.0000] <roc>
item 2

[19:26:29.0000] <Hixie>
thanks

[19:27:02.0000] <Hixie>
what is onprocessmedia?

[19:27:14.0000] <roc>
that's my proposal

[19:27:38.0000] <roc>
https://dvcs.w3.org/hg/audio/raw-file/tip/streams/StreamProcessing.html#worker-processing

[19:28:44.0000] <Hixie>
oh so you pass a worker to the audio system and it starts sending these special messages?

[19:28:50.0000] <roc>
yes

[19:29:12.0000] <Hixie>
if you have a custom mechanism like that why not just have a way to register lots of different event handlers with different event names?

[19:29:39.0000] <Hixie>
a bit like what EventSource does

[19:29:59.0000] <Hixie>
or indeed without using event handlers at all, if cpu is a concern

[19:30:06.0000] <Hixie>
just have a dedicated registration mechanism

[19:31:05.0000] <Hixie>
worker.registerMediaHandler('handlerType', function (whateverIsNeeded) {});

[19:31:21.0000] <Hixie>
not sure how the UA decides what to send to the worker, so i'm not sure how you decide the handlerTypes

[19:31:29.0000] <Hixie>
bbiab

[19:56:08.0000] <roc>
right now onprocessmedia is like onmessage, it's not a full-fledged event handler, just a Function? callback

[19:56:28.0000] <roc>
a dedicated registration system seems like overkill

[19:57:27.0000] <roc>
the page author always chooses which callback should be invoked, there's no types or anything like that to dispatch on. Each callback represents a different kind of processing effect supported by the worker.

[19:57:55.0000] <roc>
in the simple case, each Worker only supports one kind of processing and the onprocessmedia callback is fine

[22:01:54.0000] <Hixie>
roc: onmessage is a fully fledged event handler

[22:02:29.0000] <Hixie>
roc: i don't really understand why there's a need for a dispatching thing then. or how it would work.

[22:05:05.0000] <roc>
"[TreatNonCallableAsNull] attribute Function? onmessage;" ... that's a fully fledged event handler?

[22:07:44.0000] <Hixie>
that's just an attribute. what makes it fully fledged is "The following are the event handlers (and their corresponding event handler event types) that must be supported, as IDL attributes, by objects implementing the DedicatedWorkerGlobalScope interface: Event handler: onmessage Event handler event type: message"

[22:07:57.0000] <roc>
ok

[22:08:12.0000] <roc>
when you associate a worker with an audio stream, the idea is that normally the UA perodically invokes whatever was assigned to the onprocessmedia callback to process the audio. Dmitry argues that we might want to associate a single worker with multiple streams (to save resources), and furthermore that the processing required for each stream might be different, so we should support the...

[22:08:14.0000] <roc>
...ability to pass the name of a function which gets called

[22:08:28.0000] <roc>
instead of routing everything through the single callback

[22:08:40.0000] <Hixie>
ah

[22:08:43.0000] <Hixie>
huh

[22:08:47.0000] <Hixie>
interesting

[22:08:55.0000] <Hixie>
wouldn't such a worker be stateful?

[22:08:57.0000] <roc>
he claims that's more convenient and more performant than doing dispatch manually

[22:08:59.0000] <roc>
yes

[22:08:59.0000] <Hixie>
even if it only did one thing?

[22:09:06.0000] <roc>
these workers are stateful

[22:09:08.0000] <Hixie>
so you wouldn't want to dispatch based on a different method

[22:09:13.0000] <Hixie>
you'd want to dispatch based on state

[22:09:27.0000] <roc>
no, the dispatch isn't stateful

[22:10:07.0000] <roc>
the dispatch is for cases like "stream A wants the echo effect, stream B wants the high-pass filter effect, and stream C wants the fade effect"

[22:10:18.0000] <Hixie>
what if streams A and B want an echo effect

[22:10:50.0000] <roc>
then they'd both specify the same effect function I guess

[22:11:06.0000] <Hixie>
wouldn't that then mean that the echoes would stomp on each other?

[22:11:27.0000] <roc>
ah

[22:11:29.0000] <Hixie>
if i were designing a system to support that, i would have an event that fires when a media thingy starts using the worker, and that handler would have a handle that you can use to register a callback (not dom event based) for that media thingy.

[22:11:45.0000] <roc>
the per-stream state should be attached as expandos to the event object passed into the callback, which is defined to be one per stream

[22:12:04.0000] <Hixie>
so you're passing the same object again and again?

[22:12:07.0000] <roc>
yes

[22:12:17.0000] <Hixie>
please don't make it inherit from Event

[22:12:30.0000] <roc>
too late, but I can fix that. Why?

[22:12:47.0000] <Hixie>
what you're describing is nothing like events, it's some weird new callback system

[22:13:06.0000] <Hixie>
Event objects have all kinds of dispatch state

[22:13:13.0000] <roc>
why? just because of the reuse?

[22:13:34.0000] <Hixie>
DOM Events have a number of key characteristics:

[22:13:41.0000] <Hixie>
- you can register more than one handler for each event type

[22:13:50.0000] <Hixie>
- they have a dispatch mechanism and can be redispatched

[22:14:00.0000] <Hixie>
- they have bubbling and capture modes

[22:14:14.0000] <Hixie>
- they can be cancelled, or have propagation aborted

[22:14:26.0000] <Hixie>
and all kinds of other subtle things

[22:14:29.0000] <Hixie>
you just want a callback

[22:14:35.0000] <roc>
ok

[22:14:36.0000] <Hixie>
which is passed a dedicated object over and over

[22:14:37.0000] <roc>
thanks

[22:14:39.0000] <roc>
I gotta go for now

[22:14:42.0000] <Hixie>
k

[22:14:42.0000] <roc>
I'll look into that

[22:14:43.0000] <Hixie>
ttyl

[22:14:51.0000] <Hixie>
cc me on the next mail in that thread

[22:14:55.0000] <Hixie>
and i can chip in advice if you like

[22:18:41.0000] <Hixie>
hober, tantek, TabAtkins: did we ever decide where we were meeting tomorrow?

[22:20:37.0000] <tantek>
I remember lunch.

[22:20:41.0000] <tantek>
in Mountain View

[22:20:52.0000] <tantek>
Hixie, shall we meet at your usual spot?

[22:21:04.0000] <Hixie>
the b43 lobby?

[22:21:08.0000] <Hixie>
works for me

[22:21:15.0000] <tantek>
oh new usual spot ok

[22:21:23.0000] <Hixie>
what was the old usual spot? :-)

[22:21:41.0000] <tantek>
the place where you've always ordered the same one dish

[22:21:47.0000] <Hixie>
oh la fiesta

[22:21:54.0000] <Hixie>
still only ever ordered that one dish btw!

[22:22:07.0000] <Hixie>
no i think hober and TabAtkins planned to meet at google

[22:22:35.0000] <tantek>
"at Google" is a bit vague ;)

[22:22:43.0000] <Hixie>
hence my asking :-)

[22:25:55.0000] <Hixie>
TabAtkins, hober, tantek: ok i'm going to assume we'll meet at the b43 lobby at whatever time it is tab organised. if you decide otherwise, drop me an e-mail or /msg me or something.

[22:26:00.0000] <Hixie>
back later

[22:43:55.0000] <tantek>
Hixie, cool. looks like about a 4 mile bike ride from Mozilla / Castro st.

[22:44:06.0000] <tantek>
I'm going to assume noon unless I hear otherwise

[00:32:28.0000] <annevk>
didn't realize Web IDL has both octet and byte...

[00:32:32.0000] <annevk>
and byte is signed

[00:41:54.0000] <hsivonen>
annevk: that's confusing

[00:44:44.0000] <annevk>
sure is

[00:45:00.0000] <annevk>
I have asked for removal of byte and to then rename octet to byte

[00:45:16.0000] <annevk>
which seems more in line with terminology used throughout the platform

[00:49:09.0000] <annevk>
oh right, I keep forgetting why I got up at all thus far

[01:05:39.0000] <annevk>
Ms2ger: did anolis stop recognizing [PUBLISH] ?

[01:11:14.0000] <Ms2ger>
What about it?

[01:12:34.0000] <annevk>
it didn't get replaced when generating a draft

[01:12:54.0000] <Ms2ger>
/me tries to remember what it did

[01:13:13.0000] <annevk>
it's the w3.org/TR/shortname/ link

[01:15:48.0000] <Ms2ger>
Seems to be [LATEST] in the source...

[01:16:01.0000] <annevk>
oh

[01:16:24.0000] <annevk>
maybe I never published CORS before :)

[01:16:32.0000] <annevk>
using anolis that is

[01:20:03.0000] <annevk>
that seems to be it

[01:20:06.0000] <annevk>
thanks Ms2ger

[01:20:13.0000] <Ms2ger>
Np

[01:21:34.0000] <Ms2ger>
The docs for Bert's tool don't mention it either

[01:23:00.0000] <annevk>
I probably assumed it was called PUBLISH for some reason

[01:23:52.0000] <Ms2ger>
That could be it

[01:24:52.0000] <annevk>
took a good twenty minutes or so figuring out the wording for two groups and making it right

[01:24:55.0000] <annevk>
and it's probably wrong

[01:30:18.0000] <annevk>
took me a while to get zcorpan's testcase

[01:30:37.0000] <annevk>
parsing fun

[01:34:58.0000] <Ms2ger>
Yeah

[01:37:14.0000] <annevk>
I now have a list of 609 responding URLs that don't declare utf-8 or iso-8859-1 in their content-type declaration

[01:37:37.0000] <annevk>
I guess I should start fetching the raw data and run some byte analyze scripts

[01:44:04.0000] <vcvc>
hi

[01:44:26.0000] <annevk>
hey hey

[01:46:37.0000] <annevk>
I'm on a role in #csspubquiz :)

[01:46:58.0000] <Ms2ger>
A role? :)

[01:47:08.0000] <jgraham>
Yup, he's a wizard

[01:47:42.0000] <Ms2ger>
/me puts on his ro... Nvm

[01:47:52.0000] <smaug____>
so, will there be webapps wg f2f next month

[01:48:19.0000] <Ms2ger>
Apparently

[01:48:27.0000] <annevk>
spelling is overrated

[01:48:33.0000] <annevk>
this is not reddit

[01:49:39.0000] <Ms2ger>
20ish people registered for WebApps

[01:49:53.0000] <Ms2ger>
I guess that's more efficient than the 200 last time

[01:57:35.0000] <smaug____>
but is it still useful meeting...

[01:57:50.0000] <smaug____>
perhaps I could try to get rid of file system api

[01:58:27.0000] <jgraham>
/me stands back as smaug____ lights blue touch paper

[02:00:28.0000] <annevk>
what's the fastest way to do a byte case-insensitive match on a file-like object in Python?

[02:01:52.0000] <jgraham>
Probably using regexp

[02:02:11.0000] <jgraham>
Although byte-case-insensitive doesn't really mean much to me

[02:02:47.0000] <jgraham>
YOu are either matching bytes, which don't have a case, or matching characters, which do

[02:03:19.0000] <annevk>
i'm matching against bytes but I want "B" and "b" to be the same

[02:03:40.0000] <Ms2ger>
But those aren't bytes ;)

[02:03:44.0000] <annevk>
maybe I should just give up on this and deal with it in post processing

[02:04:02.0000] <annevk>
Ms2ger: b"B" and b"b" then...

[02:04:52.0000] <zcorpan>
do you need it to be fast? do you look at each byte anyway?

[02:05:34.0000] <annevk>
former

[02:06:00.0000] <annevk>
but it's premature optimization, can do it later when everything is on disk

[02:06:44.0000] <zcorpan>
yeah i'd do it when you're looking at each byte anyway :-)

[02:10:27.0000] <zcorpan>
using URLs for schemes would be ... interesting

[02:11:13.0000] <annevk>
because of the Xzibit Yo Dawg meme?

[02:14:12.0000] <zcorpan>
right

[02:23:29.0000] <annevk>
did not know that file.read() could fail :(

[02:24:02.0000] <jgraham>
Seems pretty likely e.g. if the data doesn't exist anymore

[02:24:32.0000] <annevk>
well I just fetched it

[02:25:44.0000] <jgraham>
Hmm, I dunno how urllib works in that way

[02:25:55.0000] <jgraham>
s/way/regard/

[02:50:20.0000] <zcorpan>
https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/PageVisibility/Overview.html#sec-processing-model is a bit weird for how it defines "unload a document"

[02:51:09.0000] <zcorpan>
it seems to basically override the algorithm in the html spec, but then says to "continue" that algorithm

[03:19:01.0000] <gsnedders>
/me hates window.attachEvent

[03:20:08.0000] <gsnedders>
The fact that keeping it breaks some sites, but not keeping it seems to break even more…

[03:21:50.0000] <roc>
we don't have it

[03:22:00.0000] <Ms2ger>
You should use Gecko ;)

[03:23:18.0000] <jgraham>
roc: You have never had it, so sites don't depend on it in the codepaths they send you down

[03:23:35.0000] <smaug____>
very true

[03:23:47.0000] <roc>
change your UA to Gecko

[03:24:02.0000] <smaug____>
gsnedders: you could start warn about attachEvent

[03:24:17.0000] <smaug____>
warning may or may not help

[03:24:19.0000] <jgraham>
I think doing that in the past (UA changing) probably got us into this mess :)

[03:25:09.0000] <smaug____>
does IE still support attachEvent

[03:25:27.0000] <smaug____>
in the non-legacy mode

[03:25:37.0000] <jgraham>
Probably if you didn't do the magic dance to get into standards mode

[03:26:06.0000] <Ms2ger>
/me has a look

[03:26:17.0000] <Ms2ger>
Where does this attachEvent thing live?

[03:26:33.0000] <jgraham>
Well since gsnedders hates window.attachEvent…

[03:28:11.0000] <Ms2ger>
Still there with <!doctype html> in IE10

[03:28:29.0000] <smaug____>
boo

[03:28:45.0000] <Ms2ger>
Exactly my thoughts

[03:30:00.0000] <Ms2ger>
/me adds a test

[03:30:24.0000] <gsnedders>
roc: UA changing should probably make web developers hate us.

[03:30:45.0000] <Ms2ger>
s//more/

[03:31:33.0000] <Ms2ger>
/me goes back to fixing storage

[03:31:34.0000] <gsnedders>
(What we do now is apply the same hiding as document.all to window.attachEvent, which helps us avoid going down IE codepaths, which fixes a lot of the sites that having it breaks)

[04:15:39.0000] <sedovsek>
Hey!

[04:15:40.0000] <sedovsek>
http://www.youtube.com/watch?feature=player_detailpage&v=q_O9_C2ZjoA#t=145s

[04:15:46.0000] <sedovsek>
Does anyone know how this video was made?

[04:16:55.0000] <Ms2ger>
paul_irish probably does

[04:24:45.0000] <annevk>
sweet

[04:24:46.0000] <annevk>
http://lists.w3.org/Archives/Public/www-archive/2012Apr/0008.html

[04:24:51.0000] <annevk>
I was afraid that would be marked as spam

[04:25:03.0000] <annevk>
wait what

[04:25:07.0000] <annevk>
why did it inline the .txt file

[04:25:10.0000] <annevk>
aaaaaaah

[04:25:46.0000] <Ms2ger>
Woo, Infraware's got more tests

[04:26:58.0000] <jgraham>
/me wonders who infraware actually are

[04:27:55.0000] <jgraham>
Medical transcription?

[04:28:14.0000] <jgraham>
Ah, probably the korean one

[04:29:24.0000] <Ms2ger>
Yep

[04:34:31.0000] <charlvn>
annevk: multipart messages with a mime type of text/plain will usually get treated like the "mail body" by most mail systems (that i know of)

[04:34:55.0000] <charlvn>
it doesn't have a good way of knowing what the mail body is because the mail body is also sent as a text/plain in the multipart

[04:35:13.0000] <charlvn>
so the mail body is usually "append all text/plain attachments"

[04:39:29.0000] <annevk>
well it sucks

[04:40:15.0000] <annevk>
the email arrived in my inbox perfectly fine

[04:42:10.0000] <Ms2ger>
Yay, another bug

[04:43:04.0000] <annevk>
Ms2ger: yeah, at some point we should write down new terminology rules; return means terminate; throw is not caught; etc.

[04:43:15.0000] <Ms2ger>
Yeah

[04:43:43.0000] <annevk>
prolly give it the same sane default as in programming...

[04:44:05.0000] <Ms2ger>
This would all be so much easier if we wrote in C++ ;)

[04:44:09.0000] <jgraham>
Copy the ES5 sepc

[04:44:13.0000] <jgraham>
*spec

[04:44:27.0000] <Ms2ger>
INTELLECTUAL PROPERTY VIOLATION

[04:48:11.0000] <jgraham>
That's NS_ERROR_INTELLECTUAL_PROPERTY_VIOLATION to you :p

[04:53:21.0000] <Ms2ger>
Hey, we fixed that for DOMExceptions

[04:57:26.0000] <matjas>
I hope you guys don’t mind me posting a #csspubquiz question.

[04:58:06.0000] <gsnedders>
You shall be hanged, drawn, and quartered!

[04:58:27.0000] <annevk>
matjas: zcorpan "forked" without asking, should be no problem

[04:58:33.0000] <zcorpan>
matjas: do it :-)

[04:58:45.0000] <annevk>
there you go :)

[04:58:46.0000] <matjas>
zcorpan: http://twitter.com/mathias/status/187146793132371968

[04:59:30.0000] <Ms2ger>
Empty string?

[04:59:45.0000] <matjas>
Ms2ger: yep

[05:01:37.0000] <annevk>
#whatwg regulars should probably not be allowed to reply

[05:01:55.0000] <annevk>
usually within minutes the answer is found

[05:02:18.0000] <gsnedders>
Probably a lot of the people who see on Twitter don't follow #whatwg though

[05:02:54.0000] <Ms2ger>
Well, if *we* can't find it... ;)

[05:06:54.0000] <zcorpan>
hsivonen: changing from ascii to utf-8 midstream also affects resolving URLs, so links can go from working to not working or vice versa during parsing

[05:07:32.0000] <matjas>
haha thomasfuchs just asked “is it on http://en.wikipedia.org/wiki/List_of_typefaces?” — I’d be lying if I said no

[05:09:03.0000] <zcorpan>
you could say that it doesn't have a bullet point dedicated to it on that page

[05:09:25.0000] <zcorpan>
or go with "yes and no" :-P

[05:11:47.0000] <matjas>
I’d rather troll

[05:12:46.0000] <zcorpan>
matjas: i think i found a bug. try two spaces

[05:13:10.0000] <matjas>
zcorpan: good catch. will fix

[05:13:45.0000] <zcorpan>
or anything that begins with a space

[05:16:26.0000] <zcorpan>
matjas: another: foo 1

[05:17:07.0000] <matjas>
zcorpan: what’s wrong with `font-family: foo\ 1;`?

[05:17:11.0000] <matjas>
the space is escaped

[05:17:14.0000] <matjas>
so it’s all 1 identifier

[05:17:55.0000] <zcorpan>
oh, right!

[05:19:21.0000] <matjas>
looks weird huh

[05:19:34.0000] <matjas>
but most of the time it’s more readable than escaping the first char of the next identifier

[05:19:55.0000] <zcorpan>
yeah

[05:28:46.0000] <annevk>
zcorpan: how would it affect URLs zcorpan if you have not encountered non-ASCII yet?

[05:30:21.0000] <annevk>
I like how it's completely useless

[05:30:53.0000] <zcorpan>
annevk: entities

[05:31:58.0000] <annevk>
hmm yeah, and then you'd have to use windows-1252?

[05:32:04.0000] <annevk>
for the query part

[05:32:12.0000] <zcorpan>
yes

[05:32:25.0000] <annevk>
URLs are evil

[05:33:53.0000] <zcorpan>
or other escapes in js

[05:40:17.0000] <hsivonen>
Can someone who has been paying attention explain to me how aria-describedat differs from adding a longdesc to every element?

[05:40:58.0000] <jgraham>
Someone has been paying attention?

[05:44:02.0000] <annevk>
hsivonen: maybe no ties to legacy content? it always looked like a recipe for failure to me

[05:44:13.0000] <hsivonen>
annevk: good point

[05:51:38.0000] <hsivonen>
/me marks everything concerning httprange-14 as read

[05:51:56.0000] <annevk>
hardly any sites uses bytes in the problematic range it turns out

[06:22:02.0000] <zewt>
Ms2ger: uh, wow, way to be a dick on the tracker

[06:25:14.0000] <zewt>
and way to close a ticket without responding in any way to the issues raised; very poor show

[06:30:00.0000] <Ms2ger>
zewt, did you notice I actually fixed the bug before the troll came in?

[06:30:45.0000] <zewt>
uh, what?

[06:30:53.0000] <zewt>
i'm a troll, now?

[06:31:29.0000] <Ms2ger>
Ugh

[06:31:32.0000] <Ms2ger>
I'm sorry

[06:31:48.0000] <zewt>
i'm going to go take a shower, I don't like getting pissed off at 8:30am because of spec shit

[06:32:07.0000] <Ms2ger>
I thought that was the other Glenn :/

[06:33:06.0000] <AryehGregor>
Ms2ger, I know this is a radical idea, but maybe you could resolve bugs primarily based on their content instead of the filer?  Just saying.

[06:36:11.0000] <hsivonen>
/me wonders what bug this was

[06:37:55.0000] <AryehGregor>
It's really annoying that XChat starts all my window titles with "XChat: AryehGregor @ FreeNode / #" or such.  It makes it impossible to tell which is which when they're minimized.

[06:38:03.0000] <AryehGregor>
/me Googles and finds he can try forcing the titles with xdotool

[06:41:41.0000] <AryehGregor>
for SEARCH in '#developers' '#chromium' '#mediawiki' '#wikimedia-tech' '#webkit' '#whatwg' '#wikimedia-operations'; do xdotool search --name $SEARCH set_window --name $SEARCH --icon-name $SEARCH; done

[06:41:54.0000] <AryehGregor>
Yay.

[06:54:12.0000] <AryehGregor>
Of course, they reset after a while, so clearly I need to run it from a cron job.

[06:54:13.0000] <AryehGregor>
Yay Linux!

[06:56:29.0000] <Philip`>
Just put a "while true; do ...; done" around it

[06:56:42.0000] <AryehGregor>
To be friendly to system resources, I should add a sleep statement.

[06:57:06.0000] <Philip`>
You've (presumably) got a multi-core CPU, you might as well make use of it

[06:57:52.0000] <Philip`>
One core dedicated to renaming windows doesn't seem that bad a plan

[06:58:04.0000] <zewt>
AryehGregor: amazon is annoying like that, too; unlike every other search-based website, they put their name at the start of <title>

[06:58:57.0000] <AryehGregor>
Philip`, I compile with -j16.

[06:59:08.0000] <AryehGregor>
(thus it only takes 15 minutes to compile Gecko from scratch)

[07:00:11.0000] <jgraham>
Does that work?! I mean whenever I compile with -j(something > 2 or so) my system becomes unusably laggy until the compile is done

[07:00:23.0000] <jgraham>
Not that I have compiled Gecko recently

[07:00:41.0000] <AryehGregor>
jgraham, works fine for me on Ubuntu 11.10.

[07:00:44.0000] <AryehGregor>
What OS do you use?

[07:00:46.0000] <Ms2ger>
wfm with -j12

[07:01:00.0000] <jgraham>
Hmm, could be my old ubuntu.

[07:01:05.0000] <jgraham>
10.04

[07:01:13.0000] <zewt>
jgraham: as long as you're not using so many processes you're running out of memory, it shouldn't

[07:01:15.0000] <Philip`>
-j$numcores seems very laggy for me if I'm running it inside VirtualBox, but otherwise it's fine (assuming sufficient RAM)

[07:01:16.0000] <zewt>
afk work

[07:01:28.0000] <jgraham>
Maybe I just need more RAM

[07:01:31.0000] <zewt>
(this isn't everyone's day job :| )

[07:01:37.0000] <AryehGregor>
jgraham, try nice -n 19 if it's really a CPU-bound problem.

[07:01:38.0000] <Philip`>
(Ubuntu in VirtualBox in Win7, in particular)

[07:02:12.0000] <jgraham>
Or maybe the Opera build is sufficiently different from the Gecko build that there is some difference

[07:02:30.0000] <AryehGregor>
How much RAM do you have?

[07:02:34.0000] <AryehGregor>
I found that 8G wasn't really enough.

[07:02:38.0000] <AryehGregor>
16 is fine.

[07:02:39.0000] <jgraham>
Not enough :)

[07:02:59.0000] <Philip`>
I think the general rule is "if you can afford it, it's not enough"

[07:02:59.0000] <AryehGregor>
RAM is stupidly cheap.

[07:03:18.0000] <jgraham>
/me doesn't really compile that often atm but will get more RAM before he moves onto a project where he has to 

[07:03:51.0000] <Ms2ger>
You could move onto the Mozilla project ;)

[07:04:40.0000] <Philip`>
You could reimplement Opera's build system to work the same as Mozilla's, and see if that makes a difference

[07:05:06.0000] <Ms2ger>
Would not recommend

[07:07:02.0000] <AryehGregor>
/me notes that Linus Torvalds claims he can compile the Linux kernel from scratch in 15 seconds with no ccache or anything, as long as the files are in memory

[07:07:14.0000] <AryehGregor>
(of course, it's a custom compile that leaves out all the stuff he doesn't need)

[07:07:38.0000] <AryehGregor>
I see large parts of the Gecko build with close to 0% CPU/disk usage, so I suspect it's not optimal.

[07:07:44.0000] <Ms2ger>
Not at all

[07:08:11.0000] <AryehGregor>
Rebuilding Gecko with ccache and an objdir when *nothing has changed* takes 45 seconds for me.

[07:08:26.0000] <AryehGregor>
Can someone fix that plz?  :(

[07:13:03.0000] <Philip`>
Was the work on pymake meant to help fix that?

[07:13:41.0000] <Ms2ger>
Pymake was more because gnu make is dog slow on windows

[07:13:48.0000] <Ms2ger>
And loves deadlocking

[07:14:32.0000] <Philip`>
Ah, so it won't make much difference on Linux?

[07:15:00.0000] <Ms2ger>
I don't know

[07:15:11.0000] <Ms2ger>
Probably not

[07:18:04.0000] <smaug____>
/me wonders why AryehGregor needs to rebuild gecko if nothing has changed

[07:18:49.0000] <Ms2ger>
/me whacks smaug____ 

[07:18:57.0000] <AryehGregor>
smaug____, well, sometimes I'm lazy and don't want to manually copy tests or something like that.  I don't actually have to, but the point is stuff I didn't change should take ~0s to rebuild.

[07:19:18.0000] <AryehGregor>
It might have to be relinked, but it shouldn't spend 45s going into and out of subdirectories and saying "nothing to do".

[07:19:25.0000] <AryehGregor>
Like, can it at least do that in parallel?

[07:20:46.0000] <Ms2ger>
Not always

[07:22:13.0000] <smaug____>
there are dependencies..

[08:51:53.0000] <dglazkov>
good morning/afternoon/evening/night, Whatwg!

[08:53:04.0000] <Ms2ger>
Good day

[08:53:41.0000] <Hixie>
'sup

[08:57:41.0000] <hober>
yo

[08:59:08.0000] <Velmont>
'lo

[08:59:13.0000] <Hixie>
hober: is there a spec i should be reading up on to be ready for our meeting?

[08:59:22.0000] <Hixie>
(for fullscreen)

[08:59:37.0000] <Ms2ger>
Fullscreen? :)

[09:00:37.0000] <Hixie>
i was thinking the answer might be something like "display"

[09:00:56.0000] <Ms2ger>
A spec for display? Hah

[09:14:47.0000] <hober>
yeah

[09:14:51.0000] <hober>
/me digs up a link to the ED

[09:15:13.0000] <hober>
https://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html

[09:22:25.0000] <Hixie>
hober: cool, thanks

[09:22:40.0000] <Hixie>
hober: in case you didn't see the discussion last night, plan as far as i am aware is to meet in the b43 lobby

[09:27:40.0000] <hober>
ok

[09:27:41.0000] <hober>
at noon?

[09:31:07.0000] <Hixie>
i believe so

[09:42:51.0000] <Hixie>
i'm dropping initialTime

[09:45:19.0000] <TabAtkins>
AryehGregor: Come back to Google and you can use -j300

[09:45:35.0000] <TabAtkins>
3 minutes or so to build WebKit from scratch. ^_^

[09:46:44.0000] <Ms2ger>
TabAtkins--

[09:48:28.0000] <TabAtkins>
Ms2ger: Not my fault we've got server farms to lean on.

[09:49:39.0000] <TabAtkins>
It probably wouldn't be that expensive to set up an Amazon cluster to get similar results.

[09:51:32.0000] <jgraham>
Mozilla have a large pool of build slaves, right? So all you really need to do is kill off the other developers so they are always free

[09:52:43.0000] <Ms2ger>
What? Why would you want to go through a build farm for your local builds?

[09:52:44.0000] <TabAtkins>
Or just get more build slaves.

[09:52:59.0000] <TabAtkins>
Ms2ger: Because then you can parallelize your build?

[09:53:12.0000] <jgraham>
Ms2ger: Well if it is significantly faster…

[10:27:43.0000] <[tm]>
Qt going full 5

[10:28:36.0000] <[tm]>
we got a great big convoy

[10:34:35.0000] <Ms2ger>
/me wishes Opera would implement the StorageEvent ctro

[10:35:36.0000] <[tm]>
ctro?

[10:35:54.0000] <TabAtkins>
constructor, presumably.

[10:36:06.0000] <[tm]>
ah

[10:36:16.0000] <Ms2ger>
ctor, but I can't type either

[10:36:37.0000] <annevk>
file a bug

[10:37:03.0000] <Ms2ger>
Link?

[10:37:28.0000] <[tm]>
i think we should change our theme song to full fathom five

[10:37:56.0000] <[tm]>
instead of whatever happened to the teenage dream

[10:38:33.0000] <annevk>
Ms2ger: https://bugs.opera.com/wizarddesktop/

[10:41:06.0000] <Ms2ger>
DSK-360666

[10:41:09.0000] <Ms2ger>
Nice number

[10:43:28.0000] <annevk>
since I'm superstitious I made that CORE-45500

[10:44:01.0000] <Ms2ger>
You are?

[11:39:18.0000] <Hixie>
TabAtkins: fyi i'm in b43 lobby

[11:39:26.0000] <TabAtkins>
Hixie: I'll be there shortly.

[11:40:00.0000] <Hixie>
well don't bother rushing, our guests aren't here yet ;-)

[11:40:14.0000] <TabAtkins>
tantek said he'll be a bit late. Conservative estimate is 12:30

[11:40:18.0000] <Hixie>
i just figured it was easier to just sit here when i got in rather than find another couch them move :-)

[11:40:26.0000] <Hixie>
k

[12:25:05.0000] <annevk>
WebGL https://www.w3.org/Bugs/Public/show_bug.cgi?id=16604 :/

[13:41:57.0000] <jamesr>
zewt, blue text is how i know an email is from an @microsoft.com

[14:05:28.0000] <jsbell>
annevk: another Encoding spec glitch: "escape state" --> "escape start state"

[14:06:43.0000] <annevk>
cheers, will take a look tomorrow

[14:52:36.0000] <Hixie>
roc_: yt?

[15:00:25.0000] <roc>
yes

[15:01:52.0000] <Hixie>
roc: i am told you have a concern over introducing a new stacking context for making fullscreen and modal <dialog>s work -- can you elaborate on that?

[15:03:54.0000] <roc>
I think it'll be OK if it's done properly

[15:04:13.0000] <roc>
people were proposing language like "<dialog> displays on top of everything else" which isn't precise enough

[15:04:22.0000] <Hixie>
ah ok

[15:04:27.0000] <Hixie>
so how's this:

[15:04:43.0000] <roc>
because obviously that breaks as soon as two specs say that :-)

[15:05:16.0000] <Hixie>
we introduce a new stacking context between layers 9 and 10 of CSS 2.1 Appendix E, and define two operations, "push" and "yank". "push" adds an element to this layer, above all the things on it already. "yank" removes the element from this layer.

[15:05:32.0000] <Hixie>
stacking contexts in this layer are not affected by things like clip/mask/opacity of their elements

[15:05:41.0000] <Hixie>
of their ancestor elements, rather

[15:06:06.0000] <Hixie>
z-index is ignored on this layer

[15:06:32.0000] <Hixie>
positioning in the plane is done as normal, the only effect here is on z-axis stacking

[15:06:48.0000] <roc>
I'm not sure what those ignore/not-affected-by comments mean

[15:06:52.0000] <Hixie>
(alternatively, positioning on the plane is always done per position:absolute)

[15:07:02.0000] <roc>
what about CSS transforms?

[15:07:11.0000] <Hixie>
it means the element is rendered as if its box was a sibling of the root element

[15:07:19.0000] <Hixie>
of the root element's box

[15:07:40.0000] <roc>
how does this affect getBoundingClientRect on ancestors of such elements?

[15:07:45.0000] <roc>
oh, never mind

[15:08:03.0000] <roc>
so this affects layout as well as rendering?

[15:08:36.0000] <Hixie>
probably, though i could go either way on that

[15:08:42.0000] <Hixie>
seems simplest if it does

[15:09:16.0000] <roc>
this is almost like a new 'position' scheme

[15:09:27.0000] <Hixie>
yes

[15:09:30.0000] <TabAtkins>
Kinda, but not really, since you still want positioning to work.

[15:09:36.0000] <TabAtkins>
Like you want dialogs to be position:center.

[15:09:57.0000] <roc>
the basic idea seems reasonable but it feels quite invasive, lots of CSS things could be affected

[15:10:01.0000] <TabAtkins>
And the actual layering is outside of CSS, based on the stack.

[15:10:19.0000] <Hixie>
definitely invasive

[15:10:33.0000] <roc>
can stuff escape from an <iframe> in this model?

[15:10:49.0000] <TabAtkins>
I think so, yes.

[15:10:59.0000] <TabAtkins>
You want to be able to fullscreen Youtube videos embedded via iframe.

[15:11:27.0000] <roc>
well, we currently support that without having things escape from <iframe>

[15:11:34.0000] <TabAtkins>
How so?

[15:11:36.0000] <roc>
by fullscreening the <iframe> first

[15:11:42.0000] <TabAtkins>
Oh, okay.

[15:12:00.0000] <TabAtkins>
So do authors have to do two fullscreen requests?

[15:12:14.0000] <Hixie>
yeah for anything inside iframes you fullscreen all the browsing context containers first

[15:12:15.0000] <roc>
the current fullscreen approach is good because it's not invasive at all

[15:12:28.0000] <roc>
TabAtkins: no, it's automatic.

[15:12:30.0000] <Hixie>
nothing should ever be able to escape its viewport

[15:12:38.0000] <TabAtkins>
Sure, putting all the browsing context containers on the stack below the actual fullscreened element is fine.

[15:12:44.0000] <Hixie>
different stack

[15:12:51.0000] <Hixie>
each browsing context / viewport gets its own stack

[15:12:54.0000] <roc>
the thing is

[15:13:12.0000] <TabAtkins>
Hixie: Ah, I see.

[15:13:24.0000] <roc>
if you want an <iframe>'d widget to show a <dialog>, you really don't want to fullscreen the <iframe> and you want the <dialog> to be visible outside the <iframe> viewport. Don't you?>

[15:13:40.0000] <Hixie>
you never want anything outside an <iframe>

[15:13:44.0000] <Hixie>
that's a security disaster

[15:13:47.0000] <roc>
yes

[15:13:49.0000] <roc>
but

[15:13:51.0000] <TabAtkins>
Hixie: If you alert() in an iframe, it escapes.

[15:13:56.0000] <roc>
we have a conflict here

[15:14:06.0000] <gsnedders>
Likewise print

[15:14:08.0000] <roc>
<dialog> users will want their dialogs to escape

[15:14:15.0000] <zcorpan>
do we want outlines in the page to show when an element is fullscreened?

[15:14:16.0000] <TabAtkins>
I'm probably okay with "welp, that's not a big deal".

[15:14:23.0000] <roc>
<dialog> in a widget's small <iframe> will be pretty useless

[15:14:26.0000] <Hixie>
i don't see why <dialog> users would want anything different than what they're getting today with <div>

[15:14:43.0000] <hober>
<dialog> shouldn't escape the <iframe> it's in

[15:14:59.0000] <hober>
<dialog>s don't escape the main browsing context

[15:15:25.0000] <roc>
Hixie: I can see why they'd want more. I'm OK with not giving it to them.

[15:16:52.0000] <zcorpan>
annevk: have you considered 'outline' and fullscreen?

[15:16:59.0000] <roc>
Are there strong reasons to require this special escaping magic? Is it too hard to make authors hang <dialog>s off the root element?

[15:17:27.0000] <Hixie>
roc: the solution that's used by current widgets is to just spawn another iframe the size of the dialog, fwiw. That's fine by me.

[15:17:34.0000] <Hixie>
roc: the problem is with nesting dialogs and fullscreen

[15:17:43.0000] <Hixie>
roc: and making sure the layering still works

[15:18:01.0000] <Hixie>
zcorpan: in practice nobody puts outlines at layer 10 and we should just remove that from the spec

[15:18:33.0000] <roc>
we do

[15:18:48.0000] <Hixie>
how do you make them be affected by transforms then?

[15:18:53.0000] <Hixie>
or opacity?

[15:19:05.0000] <zcorpan>
opera does afaict

[15:19:46.0000] <roc>
Hixie: I dunno. "code" :-)

[15:20:00.0000] <Hixie>
i don't see how you can do 'opacity' while putting outlines in layer 10

[15:20:04.0000] <TabAtkins>
So you don't draw them at layer 10, you draw them at a magical undocumented layer.

[15:20:06.0000] <Hixie>
opacity composites atomically

[15:21:23.0000] <TabAtkins>
Plus, doesn't drawing at layer 10 imply that the entire outline overlaps any elements that may be above the element?

[15:21:23.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1444 - i don't see the outline in gecko or webkit

[15:21:25.0000] <roc>
I don't understand what you think the problem is

[15:21:52.0000] <TabAtkins>
roc: See zcorpan's test case.

[15:22:10.0000] <TabAtkins>
If you drew outlines at layer 10, you'd see the outline drawn above the covering div.

[15:23:13.0000] <zcorpan>
why does css have layer 10? what makes outlines so important they have to be visible above everything else?

[15:23:27.0000] <Hixie>
"accessibility"

[15:23:50.0000] <zcorpan>
-_-

[15:32:26.0000] <Hixie>
actually i guess we should put hte layer after layer 10, and just say that outlines in these elements are always rendered atomically in this layer.

[15:37:40.0000] <roc>
sorry yes, I was wrong, we put them in layer 7.

[15:38:00.0000] <roc>
we could easily put them in layer 10, not sure why I thought we had

[15:38:11.0000] <roc>
anyway

[15:40:02.0000] <Hixie>
TabAtkins: actually position:center as you described it at lunch isn't what we'd want for <dialog>

[15:40:18.0000] <TabAtkins>
Really?  Seems fine to me.

[15:40:25.0000] <Hixie>
TabAtkins: for <dialog> the top position has to be based on the scroll position at the time the dialog is shown

[15:40:38.0000] <TabAtkins>
Ah.

[15:40:52.0000] <TabAtkins>
For modals too?

[15:40:56.0000] <Hixie>
yeah

[15:41:03.0000] <Hixie>
otherwise scrolling breaks for dialogs that are taller than the viewport

[15:41:10.0000] <TabAtkins>
Okay.

[15:41:19.0000] <TabAtkins>
It's fine to just define it as abspos with a particular static position.

[15:41:39.0000] <Hixie>
i expect we'll have to define some custom positioning actually, but i haven't looked at the issue closely recently

[15:42:12.0000] <TabAtkins>
Nah, if you want document-scrolling to scroll the dialog, then just use abspos with a custom static position.

[15:42:34.0000] <Hixie>
if the width changes i need the dialog to stay horizontally centered

[15:42:52.0000] <Hixie>
maybe i can do that with margins

[15:42:59.0000] <Hixie>
i'll have to examine it more closely

[15:42:59.0000] <TabAtkins>
That doesn't let you adjust it (because using anything other than 'auto' in trbl would make it position relative to containing block instead).

[15:43:13.0000] <TabAtkins>
Yes, left:0; right:0; margin-left: auto; margin-right: auto;.

[15:44:38.0000] <Hixie>
does anything other than background-* apply to ::backdrop?

[15:44:48.0000] <TabAtkins>
Sure, why not let everything apply?

[15:45:09.0000] <TabAtkins>
I never see good reasons to artificially limit these unless absolutely necessary.

[15:45:29.0000] <Hixie>
dunno, is there ever a need for 'display:inline' to apply to it, say?

[15:45:38.0000] <Hixie>
seems like htat's just asking for trouble

[15:45:47.0000] <roc>
Hixie: currently we disallow an element from going fullscreen if there's an existing fullscreen element that's not its ancestor

[15:45:57.0000] <roc>
are we doing something similar for <dialog??

[15:45:58.0000] <TabAtkins>
Since it's in the layer, it's forced to a block-level display.

[15:46:04.0000] <TabAtkins>
roc: Yes, I think.

[15:46:21.0000] <TabAtkins>
But I'm not sure.

[15:46:36.0000] <Hixie>
roc: when there's no fullscreen elements around, any <dialog> can be showModal()ed

[15:47:21.0000] <Hixie>
roc: there's some implications for when you do it to a <Dialog> that's an ancestor of one already showing

[15:47:22.0000] <roc>
the way we handle the "make the fullscreen element escape from opacity/transforms/etc of its ancestors" problem currently, is that we have a pseudoclass for elements that are ancestors of the fullscreen element, and we set their opacity/transform etc to none with UA CSS rules

[15:47:42.0000] <Hixie>
roc: yeah

[15:47:54.0000] <roc>
which works for fullscreen since those ancestors are typically not visible anyway

[15:48:01.0000] <roc>
but less so for <dialog>

[15:48:03.0000] <TabAtkins>
roc: That's weird if the ancestors are visible.

[15:48:05.0000] <Hixie>
well, they can be visible

[15:48:09.0000] <TabAtkins>
And yeah, generally unusable for dialog.

[15:49:56.0000] <roc>
it's tempting to make go-fullscreen and show-dialog move the element to the end of the DOM :-)

[15:49:59.0000] <Hixie>
actually i think it works fine if you make a (previously-visible) ancestor of a modal dialog itself modal. the complication is when the ancestor is display:none

[15:50:17.0000] <TabAtkins>
roc: And log mutation records?

[15:50:20.0000] <zcorpan>
and we don't set outline. would need to set outline on all elements except the fullscreen element and its descendants, not only ancestors of the fullscreen element

[15:50:21.0000] <Hixie>
but i think the solution there is just that in that case nothing visible happens

[15:50:42.0000] <roc>
TabAtkins: I don't think I'm serious. It would break stuff.

[15:50:50.0000] <TabAtkins>
Yeah, I know. ^_^

[15:50:54.0000] <roc>
but

[15:51:21.0000] <roc>
having elements punch all the way out of effects from CSS containers, while still inheriting style from those containers, seems super painful :-(

[15:51:35.0000] <Hixie>
why?

[15:51:51.0000] <Hixie>
(just trying to understand the constraints)

[15:51:58.0000] <roc>
It's a new behavior

[15:52:02.0000] <Hixie>
(i believe you that's it's painful!)

[15:52:05.0000] <roc>
breaks existing CSS invariants

[15:52:42.0000] <Hixie>
my mental model was that you just move the element's boxes into a different part of the render tree

[15:52:51.0000] <Hixie>
and act as if it's display:none in the original tree

[15:53:16.0000] <roc>
yeah, it's actually pretty easy for us to implement that way

[15:53:28.0000] <TabAtkins>
Yeah, moving the render tree around is sensical.

[15:53:30.0000] <roc>
however

[15:53:45.0000] <roc>
understanding all the implications of that, for the CSS spec, is hard

[15:53:51.0000] <Hixie>
(notably, there's no double-rendering going on, which is the usual complication)

[15:54:26.0000] <TabAtkins>
roc: The implications are pretty reasonable, I think.

[15:54:37.0000] <TabAtkins>
If you're literally just mutating the box tree.

[15:54:38.0000] <roc>
so of course, the sensible thing to do would be to rush out the obvious implementation and let someone else clean up the mess

[15:55:16.0000] <roc>
it wouldn't be so bad if the CSS specs weren't generally confused about box tree vs element tree

[15:55:42.0000] <TabAtkins>
There's a lot less of that left than there used to be, at least. :/

[15:55:44.0000] <Hixie>
yeah, i really wish we had someone to do the "CSS5" treatment on the box model and related areas

[15:55:50.0000] <TabAtkins>
Big thing that's still broken to me is the table fix-up.

[15:57:21.0000] <Hixie>
ok so new stacking layer with all its css implications, push and yank algorithms, and the new pseudo for backdrops

[15:57:24.0000] <Hixie>
am i missing anything?

[15:57:41.0000] <roc>
Hixie: so I think perhaps the way to go is to define a new positioning scheme, say position:viewport, which behaves like fixed but escapes from all ancestor effects, might be the way to go

[15:58:20.0000] <Hixie>
roc: that's basically what i'm proposing, except without the new value. we need the existing 'position' values to control the positioning.

[15:58:47.0000] <Hixie>
roc: since e.g. fullscreen wants to be position:fixed, but <Dialog> wants to be position:absolute or position:center, typically

[15:59:08.0000] <Hixie>
roc: also, we wouldn't want the author to be able to put elements into this layer from CSS, since if we did that we'd lose the ordering

[15:59:15.0000] <Hixie>
roc: which is the most important aspect of this :-)

[15:59:16.0000] <roc>
how would your new thing behave with position:static, then?

[15:59:28.0000] <Hixie>
to quote from the e-mail i'm writing to whatwg:

[15:59:33.0000] <Hixie>
  The 'position' property for elements in one of these stacks computes to

[15:59:33.0000] <Hixie>
  'absolute', 'fixed', or 'center' if that is its specifed value, and to

[15:59:33.0000] <Hixie>
  'absolute' if the specified value is anything else.

[15:59:45.0000] <roc>
ok

[16:00:41.0000] <roc>
er wait

[16:01:20.0000] <roc>
so how does a position:absolute <dialog> element inside a transformed element behave? It somehow gets its layout from the transformed element but isn't affected by the transform?

[16:01:40.0000] <Hixie>
to quote from my e-mail again:

[16:01:40.0000] <Hixie>
  The containing block for such an element is the initial containing

[16:01:41.0000] <Hixie>
  block, same as for the root element.

[16:02:08.0000] <Hixie>
(so the transform has no effect)

[16:02:22.0000] <Hixie>
(not sure what you mean by "gets its layout")

[16:02:24.0000] <roc>
what is the static position for left/top?

[16:03:04.0000] <roc>
also

[16:03:37.0000] <Hixie>
hm, good point, have to define the static position

[16:03:42.0000] <roc>
the CSS Regions people redefined initial containing block so that it's a property of elements, there's no longer "the initial containing block"

[16:03:57.0000] <Hixie>
o_O

[16:04:16.0000] <Hixie>
see, this is why there should only be one CSS spec and it should be continuously maintained

[16:04:27.0000] <roc>
actually I'm not sure what ended up happening there, but you might want to check

[16:05:04.0000] <roc>
Hixie: at this point I should probably just wait for you to post the email

[16:05:26.0000] <roc>
the general direction seems scary, but I can't think of a better approach

[16:05:53.0000] <Hixie>
roc: your feedback has been very helpful so far, please don't hesitate to keep talking :-)

[16:06:36.0000] <roc>
yeah, but I've got work to do :-)

[16:06:42.0000] <Hixie>
fair enough :-)

[16:08:07.0000] <Hixie>
is http://dev.w3.org/csswg/css3-regions/Overview.src.html the regions spec?

[16:08:29.0000] <astearns>
yep

[16:08:33.0000] <Hixie>
it doesn't seem to redefine containing block

[16:08:35.0000] <Hixie>
it defers to 2.1

[16:08:43.0000] <astearns>
The edges of the first region in a region chain associated with a named flow establish the rectangle that is the containing block used for absolutely positioned elements in the named flow which do not have an ancestor with a ‘position’ of ‘absolute’, ‘relative’ or ‘fixed’ (see [CSS21]). That first region rectangle is used as the containing block instead of the initial containing block.

[16:08:54.0000] <astearns>
that's it

[16:09:17.0000] <Hixie>
ah ok

[16:09:20.0000] <Hixie>
that seems harmless enough

[16:09:26.0000] <astearns>
we hope so :)

[16:09:27.0000] <Hixie>
since i'm just bypassing the whole tree

[16:13:52.0000] <Hixie>
ok, e-mail away


2012-04-04
[17:01:32.0000] <tantek>
Thanks for the discussion and write-up Hixie. Looking forward to seeing the full(-)screen/dialog stuff make progress.

[17:01:44.0000] <tantek>
Now, as far as fullscreen vs full-screen vs fullScreen ...

[17:01:47.0000] <hober>
indeed

[17:09:11.0000] <TabAtkins>
I think we should use :fullScreen in CSS, and full-screen in JS.

[17:35:41.0000] <jwalden>
/me tries to add to this discussion, thinks it is self-beclowning enough that he need not contribute

[19:01:20.0000] <Hixie>
TabAtkins: wow you almost had me responding to you there

[19:01:33.0000] <Hixie>
TabAtkins: i need to update my troll detector's firmware!

[20:13:23.0000] <MikeSmith>
heh, "self-beclowning"

[00:17:43.0000] <charlvn>
#tkkrlab

[00:18:03.0000] <charlvn>
ah sorry, ignore that, didn't type the command correctly

[00:40:28.0000] <smaug____>
annevk: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-mutationobserver-observe context object should be target, not options

[00:42:26.0000] <Ms2ger>
smaug____, why's that?

[00:43:16.0000] <smaug____>
Ms2ger: well, I don't understand how context object can be options

[00:43:32.0000] <annevk>
smaug____: we can just say it is for those substeps

[00:43:47.0000] <annevk>
childList etc. are all discussed in the context of options then

[00:43:51.0000] <Ms2ger>
It's just with(options) { foo(childList); }

[00:43:59.0000] <Ms2ger>
Instead of foo(options.childList)

[00:44:22.0000] <annevk>
it's only for 1

[00:44:47.0000] <smaug____>
ah

[00:44:55.0000] <smaug____>
so it is not for 2.

[00:45:11.0000] <smaug____>
strangely worded

[00:45:26.0000] <annevk>
how would you word it?

[00:45:53.0000] <smaug____>
well, don't talk about context object A in 1. and context object B in 2.

[00:47:28.0000] <annevk>
that would make them much more verbose

[00:48:51.0000] <annevk>
but if this is hard to comprehend, maybe we should do that

[00:49:03.0000] <annevk>
if someone else tells me the same thing I'll take a look

[00:49:17.0000] <smaug____>
both I and sicking were reading that last week

[00:49:27.0000] <smaug____>
and thought that there was something odd

[00:49:51.0000] <smaug____>
also, that doesn't say what happens to transient observers

[00:50:23.0000] <smaug____>
er, perhaps it does

[00:50:44.0000] <smaug____>
but I think it is not right

[00:51:11.0000] <smaug____>
existing transient observers should be removed, I think, when calling observe()

[01:12:22.0000] <annevk>
fullscreen proposal looks good

[01:12:35.0000] <annevk>
apart from the missing bits or the bits I'm missing :p

[01:45:36.0000] <annevk>
smaug____: when do you plan on removing the prefix?

[01:45:52.0000] <annevk>
smaug____: having a prefix does not help if we want people to move away from the old API

[01:56:58.0000] <annevk>
http://rumotan.com/guan/modules/tinyd3/ multiple doctypes, incompatible encoding declarations, multiple root elements, good times

[01:57:29.0000] <annevk>
but apart from how to deal with big5, I think most of what a user agent has to do there is actually now defined

[01:57:39.0000] <annevk>
we've come a long way since 2004 :)

[01:58:29.0000] <jgraham>
(this comment was redacted for cynicism)

[02:28:32.0000] <smaug____>
annevk: I agree

[02:28:52.0000] <smaug____>
annevk: need to stabilize the API still a bit, IMO

[02:29:15.0000] <smaug____>
add that takeMutation() or something similar

[02:29:25.0000] <smaug____>
takeMutations()

[02:30:01.0000] <smaug____>
annevk: what is Opera's plan

[02:30:10.0000] <smaug____>
/me should ask also MS

[02:30:31.0000] <smaug____>
When will MS release IE10?

[02:34:08.0000] <annevk>
we're fine with the API, just need to free up resources

[02:36:14.0000] <annevk>
takeMutations() sounds pretty terrible btw

[02:38:30.0000] <smaug____>
foo.take*() is used often in gecko, when the idea is to return some existing object(s) and drop the reference to those in foo

[02:38:59.0000] <smaug____>
but perhaps it is a bit ugly name :)

[02:41:14.0000] <annevk>
what is the problem with having disconnect() return them?

[02:41:21.0000] <annevk>
the pending records

[02:41:27.0000] <annevk>
that seems quite clean to me

[02:41:49.0000] <smaug____>
that sounds very odd

[02:41:56.0000] <smaug____>
that disconnect() returns anything

[02:42:06.0000] <annevk>
yeah maybe

[02:42:17.0000] <smaug____>
also, I think we want a method to take the current records, but still keep observing

[02:42:36.0000] <smaug____>
fetch() doesn't sound too bad

[02:42:49.0000] <annevk>
fetch is network related usually

[02:42:54.0000] <annevk>
getPendingRecords() ?

[02:43:36.0000] <smaug____>
get* doesn't indicate that the records are dropped in the observer

[02:46:40.0000] <annevk>
maybe it should be takeMutationRecords

[02:47:12.0000] <annevk>
all sounds bad :(

[02:47:13.0000] <smaug____>
takeRecords() ?

[02:47:18.0000] <smaug____>
yeah

[02:47:44.0000] <annevk>
takeRecords() is better than takeMutations at least

[02:48:18.0000] <annevk>
and it returns sequence<MutationRecord> I guess

[02:48:22.0000] <annevk>
hmm

[02:50:58.0000] <annevk>
whoa https://www.gov.uk/designprinciples is pretty awesome

[02:54:57.0000] <Ms2ger>
Much as I hate github, https://github.com/alphagov is nice

[03:24:29.0000] <jgraham>
Yeah, the people doing UK Government we/open access data stuff seem to be pretty awesome

[03:24:43.0000] <jgraham>
Oh, that was the same words annevk used.

[03:24:51.0000] <jgraham>
I didn't mean to do that

[03:27:17.0000] <jgraham>
s/we/web/

[03:27:37.0000] <jgraham>
So many errors. I should really have said anything at all.

[03:28:03.0000] <annevk>
was that intentional? :)

[03:28:47.0000] <jgraham>
Fuck

[03:28:49.0000] <jgraham>
No

[03:28:53.0000] <annevk>
if it's any consolation, I'm amused

[03:29:01.0000] <jgraham>
Good, good

[03:30:03.0000] <annevk>
zcorpan: btw re fullscreen, I decided that layout would be someone else's problem

[03:30:30.0000] <annevk>
zcorpan: it seems I might have to define it after all though, but at least Hixie worked out how (mostly)

[03:30:42.0000] <annevk>
(re some comment on outline from late last night)

[03:34:01.0000] <jgraham>
(having siad all of that one of the examples on that page about what not to do actually poited to a really interesting page about keeping bees. Which in turn allowed me to find an even more interesting page about keeping pigs and the regulations associated with that)

[03:34:36.0000] <Ms2ger>
siad?

[03:35:17.0000] <jgraham>
I know

[03:35:36.0000] <Philip`>
poited?

[03:35:38.0000] <annevk>
jgraham is the gsnedders of typing today :p

[03:35:54.0000] <jgraham>
gsnedders is full of fail?

[03:35:55.0000] <Ms2ger>
Oh, brun

[03:36:15.0000] <annevk>
jgraham: didn't mean it quite like that

[03:36:21.0000] <annevk>
oh well

[03:36:23.0000] <jgraham>
:)

[03:36:38.0000] <annevk>
so some of these big5 pages like the trailing "..." thing too

[03:36:58.0000] <annevk>
but they are probably implemented using PHP or so with no respect for lead and trail bytes

[03:36:59.0000] <zcorpan>
what thing?

[03:37:20.0000] <annevk>
"This sentence is too l..."

[03:37:36.0000] <annevk>
so you get a lead byte followed by a .

[03:38:05.0000] <annevk>
which is invalid of course and is invalid in each browser, and ends up as noise in my data

[03:38:29.0000] <zcorpan>
ah

[03:38:43.0000] <Philip`>
"... an AML2 ‘report of a pig movement’ form ..." - surely that'd generate a huge amount of paperwork unless you tie your pig down to stop it wandering around

[03:39:31.0000] <jgraham>
I imagine it work like geolocation events.

[03:40:00.0000] <zcorpan>
i've seen stuff like "See my résum&acut..." too

[03:40:48.0000] <zcorpan>
er, wrong entity, but you get the idea

[03:41:57.0000] <Ms2ger>
You mean "See my <a href=resume>r�sum&eacut..."

[03:45:21.0000] <annevk>
20 2E 2E 2E is also used it seems

[03:45:30.0000] <annevk>
preceded by a lead byte

[03:46:05.0000] <annevk>
alright, so the errors are indeed actual errors in the pages

[03:50:55.0000] <annevk>
oops, made an error

[03:51:09.0000] <annevk>
in the A3 byte checking

[03:52:45.0000] <annevk>
instead of about 50 pages using quite a few A3 reserved stuff, there's only two pages with one sequence each

[03:53:04.0000] <annevk>
#win

[03:58:11.0000] <annevk>
in one page it's inside a <meta>; in the other page it doesn't render correctly anywhere...

[04:02:49.0000] <annevk>
I wish the component when filing bugs would always be HTML5 spec

[04:05:13.0000] <zcorpan>
why did that bug get the wrong component?

[04:05:28.0000] <zcorpan>
Hixie: ^ ( https://www.w3.org/Bugs/Public/show_bug.cgi?id=16635 )

[04:05:54.0000] <zcorpan>
it got 'other hixie drafts'

[04:06:54.0000] <annevk>
all bugs filed via WHATWG get that

[04:07:15.0000] <annevk>
it changed quite some time ago

[04:07:25.0000] <zcorpan>
oh?

[04:08:08.0000] <zcorpan>
oh well

[04:08:11.0000] <annevk>
I've been meaning to ask Hixie to change that around, because more than one silly revert requests was because of that

[04:08:27.0000] <annevk>
not that anyone cares about that anymore these days, so maybe that's why I forgot

[04:30:29.0000] <annevk>
http://speakerdeck.com/u/jaffathecake/p/application-cache-douchebag mwaha

[04:31:15.0000] <annevk>
appcache is hard

[04:34:36.0000] <annevk>
some of this content is rather weird

[04:34:38.0000] <annevk>
"Strongly agree!!! Letting unlimited pregnant ladies come to HK to deliver is ridiculous! We shall follow what Western countries are doing: stop letting pregnant ladies in. "

[04:34:55.0000] <annevk>
some kind of forum thread

[04:37:50.0000] <annevk>
<center><table border=0><tr><td valign=top><html><head><meta http-equiv=Content-Type content="text/html; charset=big5">

[04:37:55.0000] <annevk>
:)

[04:41:07.0000] <Ms2ger>
Well said, HolyEagle

[04:42:19.0000] <Ms2ger>
I love how that site uses document.layers

[04:47:05.0000] <annevk>
HolyEagle knows where it's at

[04:48:31.0000] <jarek>
why SVG filters renders so slow on user agents? Is it a technical limitation or does the implementation is just unoptimised?

[04:48:49.0000] <Ms2ger>
Because nobody uses them, I guess

[04:48:59.0000] <jarek>
even simple gausian blur can lock Chrome when you zoom it in

[04:49:14.0000] <jarek>
oops, sorry for typos

[04:49:14.0000] <jgraham>
/me guesses the right answer is "yes"

[04:49:24.0000] <jgraham>
and probably would still be if you s/or/and/

[04:49:54.0000] <jgraham>
That is, I wouldn't be surprised if there are SVG filters that are intrinsically slow

[04:50:12.0000] <jgraham>
But I would be surprised if they are optimised in implementations

[04:50:16.0000] <jgraham>
+well

[04:51:12.0000] <jarek>
I have noticed that even professional software such as Adobe Illustrator "cheats" when rendering filters

[04:51:46.0000] <annevk>
found this page that has no DOCTYPE, encoded in big5, tries to nest <form> inside <tr> (one <table>, three <tr>, three nested <form>), and the kicker is that the form submits to some URL wiht a query parameter whose value contains big5 encoded characters

[04:52:37.0000] <jarek>
so it looks like it's impossible to render them in real time without high CPU usage

[04:53:56.0000] <annevk>
jarek: should probably bring that up on public-gfx⊙wo or some such

[04:54:33.0000] <jarek>
annevk: no, I don't want W3C to stop adding new filters :P

[04:55:00.0000] <jarek>
annevk: I should rather nag the vendors to implement GPU accelerated rendering

[05:36:12.0000] <roc>
yeah

[06:42:30.0000] <annevk>
Ms2ger: or did something change and are you willing to publish DOM Parsing through the HTML WW now?

[06:42:35.0000] <annevk>
euh, WG

[06:42:46.0000] <Ms2ger>
Nothing changed, why?

[06:43:01.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2012Apr/0027.html

[06:44:08.0000] <Ms2ger>
/me shrugs

[06:44:11.0000] <annevk>
the HTML WG, where the chairs are robots, the editors don't care, and a few people circlejerk

[06:45:31.0000] <Ms2ger>
One more abandoned spec in the HTMLWG, news at 10

[06:45:45.0000] <annevk>
heh

[06:45:50.0000] <annevk>
it's not exactly abandoned

[06:47:51.0000] <annevk>
make it modular, make it modular, make it modular

[06:48:23.0000] <annevk>
but oh god, once you do that and decentralize development, people get upset

[06:48:56.0000] <annevk>
decentralized extensibility please, developed centralized please

[06:49:06.0000] <Ms2ger>
I wonder if they're going to stick a "Copyright W3C" onto it to prevent forks

[06:51:47.0000] <Ms2ger>
Heh

[06:52:10.0000] <Ms2ger>
Web Workers still references Web DOM Core

[06:53:15.0000] <annevk>
I guess Julian only cares about IETF draft references

[06:54:19.0000] <Ms2ger>
And code points

[06:54:40.0000] <annevk>
not the Encoding spec though

[06:55:13.0000] <annevk>
maybe it needs more references

[06:55:52.0000] <annevk>
at some point I should reference 1) Unicode and 2) all the old silly specs that were wrong

[06:56:34.0000] <zcorpan>
why do you need to reference the wrong specs?

[06:57:03.0000] <annevk>
we do that in DOM4 too, for people who are interested in prior work

[06:57:14.0000] <Ms2ger>
Is position:center a thing?

[06:58:47.0000] <annevk>
Ms2ger: http://dev.w3.org/csswg/css3-positioning/#center-positioning

[06:58:54.0000] <annevk>
Ms2ger: it's been floating around on www-style for ages

[07:00:12.0000] <annevk>
http://webkitmemes.tumblr.com/post/20464202966/meanwhile-in-the-reviewers-lounge lol

[07:00:28.0000] <Ms2ger>
Yay, concesus!

[07:00:56.0000] <Ms2ger>
http://s3.amazonaws.com/data.tumblr.com/tumblr_m1v3rkjMvL1rrf1eeo1_1280.jpg?AWSAccessKeyId=AKIAI6WLSGT7Y3ET7ADQ&Expires=1333634508&Signature=9yoalJSJC6bZgj%2FvsRzlv47%2Bxfc%3D

[07:05:32.0000] <matjas>
zcorpan: https://github.com/douglascrockford/JSLint/issues/114#issuecomment-4766052 what just happened

[07:06:10.0000] <MikeSmith>
Ms2ger: thanks for writing up warnings for the DOM specs

[07:06:22.0000] <Ms2ger>
Yw

[07:07:36.0000] <annevk>
matjas: old news man

[07:07:59.0000] <matjas>
annevk: no I mean… you actually got crockford to fix something

[07:08:18.0000] <matjas>
well, new to me

[07:08:34.0000] <Velmont>
:-)

[07:23:03.0000] <annevk>
bdo, bdo:matches([dir=ltr i], [dir=rtl i])

[07:23:14.0000] <annevk>
why does the second selector matter?

[07:24:28.0000] <zcorpan>
matjas: apparently it's harder to get someone to fix jshint

[07:25:25.0000] <Ms2ger>
annevk, specificity?

[07:26:43.0000] <annevk>
Ms2ger: yeah guess so

[07:26:46.0000] <annevk>
Ms2ger: also, http://lists.w3.org/Archives/Public/public-html/2012Feb/0479.html

[07:27:19.0000] <Ms2ger>
"Ms2ger @ Mozilla" <ms2ger⊙gc>

[07:27:20.0000] <Ms2ger>
Hah

[07:29:36.0000] <zcorpan>
it seems mighty weird to use the escalation process for drafts that are not owned by the html wg

[07:31:56.0000] <jgraham>
s/ for drafts.*//

[07:32:01.0000] <Ms2ger>
What he said

[07:32:11.0000] <annevk>
stop escalating things jgraham :p

[07:32:12.0000] <zcorpan>
why do i keep getting empty emails from dave.penkler⊙hc ?

[07:32:17.0000] <annevk>
zcorpan: me too

[07:32:36.0000] <annevk>
if I ever meet him, I might tell him to fix his email client

[07:32:39.0000] <zcorpan>
/me marks as spam

[07:33:02.0000] <annevk>
lots of www-tag ends up in my spam folder these days

[07:33:40.0000] <Ms2ger>
You've got a good spam filter, then

[07:33:49.0000] <zcorpan>
why are you subscribed to www-tag?

[07:34:55.0000] <annevk>
I found it interesting at one point and then never reevaluated my position

[07:50:11.0000] <annevk>
so out of the 609 pages that did not fail to download, 22 have "problematic" sequences

[07:50:26.0000] <annevk>
and 2 of those are big5-hkscs so they're probably not problematic

[07:52:26.0000] <jgraham>
So 3% of pages? That is quite a lot

[07:56:10.0000] <annevk>
yes

[07:56:29.0000] <annevk>
but only 0.01% of the characters or so

[07:56:54.0000] <annevk>
the problem is however there's no interoperability

[07:57:10.0000] <annevk>
see http://lists.w3.org/Archives/Public/www-archive/2012Apr/0019.html for the data

[07:59:29.0000] <annevk>
oh shit

[08:01:30.0000] <annevk>
off by one error

[08:01:32.0000] <annevk>
teehee

[08:01:38.0000] <annevk>
all the URLs are wrong

[08:02:55.0000] <annevk>
:(

[08:07:29.0000] <jgraham>
Wow, some range of emotions there

[08:07:59.0000] <annevk>
still sick

[08:08:09.0000] <annevk>
corrected data is here: http://lists.w3.org/Archives/Public/www-archive/2012Apr/0020.html

[08:10:02.0000] <annevk>
I think I just got misattributed http://infrequently.org/2012/04/one-for-dave-and-david/

[08:12:52.0000] <jgraham>
I have no memory of anyone saying that the disconnect between host objects and native objects is pure awesome that has to be preserved

[08:13:43.0000] <jgraham>
I do remember people saying that his solutions were naive and didn't account for the realities of the platform as it exists today

[08:13:59.0000] <gsnedders>
Nobody said that.

[08:15:09.0000] <jgraham>
Nobody said what?

[08:15:33.0000] <gsnedders>
That the differences between host and native objects are pure awesome.

[08:15:54.0000] <gsnedders>
ES6 is totally redefining what host objects do, and limiting what they can do.

[08:16:33.0000] <jgraham>
Well it can't limit what they can do to less than they actually do do

[08:16:45.0000] <jgraham>
Or it can but it will be a work of fiction

[08:16:54.0000] <gsnedders>
jgraham: It already does that.

[08:17:13.0000] <gsnedders>
jgraham: With stuff like the limitations on property attributes and stuff.

[08:17:18.0000] <jgraham>
Anyway Alex seems to be attacking a strawman

[08:17:49.0000] <gsnedders>
I think basically all ES engine APIs allow the host object contract to be violated.

[08:18:22.0000] <annevk>
/me adds comment

[08:18:45.0000] <annevk>
someone said something like that

[08:19:10.0000] <annevk>
I think Hixie thought the separation made sense, but I'm not sure to the same extent as Alex makes it seem

[08:19:26.0000] <annevk>
thought/thinks, dunno, and I've no idea what I think either

[08:21:39.0000] <jgraham>
I'm pretty sure that the degree to which it was "like that" is less than entirely

[08:22:24.0000] <jgraham>
Anyway, I agree with your comment that this requires change on the js side as well as the DOM side

[08:23:01.0000] <gsnedders>
(FWIW, in 2006 ES4 was still going on, so it seems hardly surprising that nothing came of that, when most of the work was basically just rewriting ES3 afterwards)

[08:23:44.0000] <annevk>
sure there's a ton of explanations why it didn't end up awesome

[08:24:06.0000] <jgraham>
Sure. The hsitory of the platform is riddled with tragedy and missed oppertunities.

[08:24:21.0000] <gsnedders>
ES6 will have binary data, at least.

[08:24:22.0000] <annevk>
I guess we should figure out how to avoid that in the future

[08:24:36.0000] <annevk>
I still think doing JavaScript elsewhere would help

[08:24:58.0000] <gsnedders>
The big issue was wasting years on ES4.

[08:25:21.0000] <gsnedders>
Should we have continued down that route after MS said they wouldn't impl it? Hard to know.

[08:25:31.0000] <annevk>
prolly

[08:25:38.0000] <annevk>
MS wouldn't implement XHR2 either

[08:25:59.0000] <gsnedders>
The market is a very difference place now than then, though, so beckoning to them seems more sensible then than now.

[08:26:00.0000] <annevk>
or unencumbered fonts

[08:26:12.0000] <gsnedders>
Still, ES4 was probably too far fetched.

[08:26:14.0000] <annevk>
XHR2 happened in 2006 too

[08:26:26.0000] <gsnedders>
It would've taken years to get impls of.

[08:26:29.0000] <jgraham>
Yeah Microsoft aren't anything special on the web these days.

[08:26:50.0000] <annevk>
yeah dunno about ES4 either

[08:27:17.0000] <jgraham>
I'm pretty sure everyone agrees that ES4 has an element of second system syndrone

[08:27:25.0000] <annevk>
but it doesn't seem to me that ES is being developed with what's needed by APIs

[08:27:40.0000] <annevk>
at least I hardly get the impression the JavaScript guys look at the platform side much

[08:27:50.0000] <jgraham>
It isn't clear to me why ES releases have to be huge numbered things

[08:27:58.0000] <jgraham>
Why not add one feature at a time

[08:28:03.0000] <gsnedders>
Not only that, but far too much cutting-edge research going into something unproven.

[08:28:18.0000] <jgraham>
With an overall design arc of course

[08:28:29.0000] <gsnedders>
jgraham: Depends what changes you want. Syntax changes it makes a fair bit of sense for, you know you either get SyntaxError or you have all of these features.

[08:28:51.0000] <jgraham>
Well syntax changes are pretty mcuh evil anyway

[08:28:53.0000] <gsnedders>
*while still being mostly unproven

[08:29:09.0000] <gsnedders>
jgraham: But if you want to further a language, almost certainly needed.

[08:29:19.0000] <gsnedders>
What language continues to be developed without syntax changes?

[08:29:20.0000] <jgraham>
Probably

[08:29:47.0000] <jgraham>
Given some import mechanism one could allow individual feature to be imported

[08:30:05.0000] <jgraham>
"use strict;destructuring;let"

[08:30:09.0000] <jgraham>
and then later

[08:30:16.0000] <jgraham>
"use v6"

[08:30:24.0000] <jgraham>
that implies a set of features

[08:30:32.0000] <gsnedders>
jgraham: The idea as of ES5 was "use strict"; "destructuring"; "let";

[08:30:38.0000] <gsnedders>
i.e., each is a separate string

[08:30:49.0000] <jgraham>
Do you mean 5?

[08:30:54.0000] <gsnedders>
Yes.

[08:31:04.0000] <gsnedders>
That was the idea.

[08:31:11.0000] <gsnedders>
Obviously there was only one pragma then.

[08:31:17.0000] <jgraham>
Oh.

[08:31:33.0000] <gsnedders>
In ES6 we just have new semantics within modules and not outwith.

[08:31:59.0000] <jgraham>
Anyway, more incremental development would be good

[08:32:14.0000] <gsnedders>
I think most of the limit is getting consensus and editorial resources.

[08:32:26.0000] <jgraham>
Better communications between the people developing the platform APIs and the language would be good

[08:32:32.0000] <gsnedders>
And it's not clear how to speed that up.

[08:32:52.0000] <jgraham>
Well it isn't as much of a problem in HTML/WebApps/etc.

[08:33:55.0000] <gsnedders>
Yeah, but it's not massively surprising that the language becomes a box, seeming it is a fairly disjoint part of impls, so people tend not to touch so much outwith it, as is the case with DOM and stuff.

[08:35:27.0000] <Ms2ger>
It's even more fun if you try to spec something inside that box with WebIDL

[08:35:27.0000] <jgraham>
That isn't entirely true

[08:35:51.0000] <jgraham>
I mean plenty of people that work on javascript engines alsop work on other parts of the browser

[08:36:05.0000] <jgraham>
It's just that they're typically not on es-discuss

[08:36:09.0000] <gsnedders>
jgraham: Outside of Opera, who?

[08:36:19.0000] <jgraham>
People at Mozilla afaict

[08:36:34.0000] <jgraham>
Not the major contributers to the ES engine perhaps

[08:36:36.0000] <gsnedders>
Most of the work on SM comes from people working full time on it.

[08:36:43.0000] <jgraham>
But people

[08:37:10.0000] <Ms2ger>
Some JS people work on bindings over here

[08:37:14.0000] <gsnedders>
Well, sure. But people who only do occasional work on it probably are less inclined to get involved with it.

[08:37:20.0000] <Ms2ger>
Not many venture out further, though, I think

[08:37:57.0000] <hober>
Hixie: if you could review http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-194 at some point today, that would be awesome.

[08:38:16.0000] <hober>
Hixie: specifically, i'd like to be able to say something to the effect of " When asked, the editor has indicated that this prose description is unambiguous and detailed enough for him to make the requested changes." :)

[08:39:02.0000] <hober>
Hixie: also, any other comments / questions / suggestions you might have would be much appreciated. (same goes for the rest of you, of course.)

[08:39:57.0000] <hober>
the sooner i finish this cp, the sooner i can work on the "defense of canvas v5" cp

[08:40:51.0000] <Ms2ger>
Or you could get useful work done :)

[08:44:25.0000] <annevk>
added another comment

[08:44:40.0000] <annevk>
http://infrequently.org/2012/04/one-for-dave-and-david/comment-page-1/#comment-239690

[09:00:03.0000] <jgraham>
I thought that bz did some SpiderMonkey work, sometimes. I though smaug____ was changing the gc recently?

[09:00:19.0000] <smaug____>
gc? no

[09:00:27.0000] <smaug____>
I've been hacking cc

[09:00:34.0000] <jgraham>
Oh, then I misunderstood something

[09:00:40.0000] <jgraham>
Happens all the time :)

[09:01:35.0000] <hober>
Ms2ger: that's what the whatwg is for :)

[09:02:33.0000] <Ms2ger>
jgraham, well, bz... Not all of us can keep all the C++ that goes into Firefox in our heads :)

[09:03:14.0000] <jgraham>
Right, I didn't say it was normal humans :)

[09:15:44.0000] <gsnedders>
s/humans//

[09:15:53.0000] <gsnedders>
/me still has no evidence that bz is human

[09:16:12.0000] <gsnedders>
(Has a physical existance, yes, but not whether he's human.(

[09:16:23.0000] <gsnedders>
s/\($/)/

[09:16:40.0000] <gsnedders>
I really can't type today…

[09:16:48.0000] <jgraham>
I don't even know what would count as evidence that someone is human

[09:17:43.0000] <jgraham>
I believe he has managed to procreate successfully? But that could be with another non-human.

[09:18:01.0000] <gsnedders>
Or could be some weird cross-species thing.

[09:21:20.0000] <dglazkov>
good morning, Whatwg!

[09:31:37.0000] <annevk>
http://paul.kinlan.me/dear-appcache/ use #?

[09:52:06.0000] <gsnedders>
DOM5, defined entirely by a set of ES6 algorithms (as opposed to the English of DOM4)?

[09:53:14.0000] <gsnedders>
Stuff like making tagName [[Writeable: false]] when it first gets added to the document is trivial in ES, difficult in WebIDL.

[09:55:22.0000] <annevk>
but I think he got that wrong

[09:55:33.0000] <MikeSmith>
hsivonen: you around? I wanted to ask you about possibility of using org.whattf.syntax.Driver for command-line validation

[09:55:38.0000] <annevk>
you don't want it to change ever, because tagName relates to what the object exposes

[09:56:07.0000] <annevk>
temporal mutability might be nice though; we might have designed events differently i imagine

[09:58:24.0000] <MikeSmith>
hsivonen: I don't completely understand that code, but it seems like it enables validation without actually running the validator as a web service; if so, it would be great to extend is so it can just take a list of local files as args

[10:06:15.0000] <MikeSmith>
https://lists.webkit.org/pipermail/webkit-dev/2012-April/020174.html

[10:06:58.0000] <smaug____>
seriously

[10:08:19.0000] <smaug____>
/me so much hopes webkit community would fight for the open web

[10:10:04.0000] <gsnedders>
annevk: R

[10:10:14.0000] <gsnedders>
*Right, it would involve mutating the [[Prototype]

[10:11:18.0000] <Ms2ger>
smaug____, Google publishes a draft, Google forces an implementation through, Google uses the feature on their websites... I wonder what these have in common

[10:11:33.0000] <gsnedders>
Ms2ger: Apple

[10:11:53.0000] <gsnedders>
Oh, wait, no, the other one!

[10:12:14.0000] <Ms2ger>
gsnedders, Opera did it fir... I guess not

[10:12:24.0000] <gsnedders>
Ms2ger: No, that was video. :P

[10:12:41.0000] <gsnedders>
Until you reach the part of actually shipping a final implementation.

[10:12:51.0000] <Ms2ger>
Hah, final implementation

[10:13:04.0000] <gsnedders>
Well…

[10:13:11.0000] <gsnedders>
You know what I mean. :P

[10:14:28.0000] <Ms2ger>
Opera did it last?

[10:15:11.0000] <gsnedders>
Shipping a release with it included.

[10:15:37.0000] <gsnedders>
We were the first to ship any build with it included, the ones who pushed for the spec… and the last to release.

[10:15:42.0000] <Ms2ger>
See

[10:15:48.0000] <Ms2ger>
Don't push for a spec

[10:16:00.0000] <Ms2ger>
Let someone else write the spec *after* that

[10:16:03.0000] <Ms2ger>
Like Opera QA

[10:16:26.0000] <gsnedders>
I think the push for a spec was, "we think a video element would be cool, kthxbai"

[10:16:41.0000] <gsnedders>
And then people were like "O RLY?"

[10:16:50.0000] <gsnedders>
And then others were like "YA RLY."

[10:16:52.0000] <Ms2ger>
Oh, I thought it was "an audio JS object would be cool"

[10:17:42.0000] <gsnedders>
Oh, no, it was already in the spec by the time we implemented it, and had been for a while.

[10:17:47.0000] <gsnedders>
Just nobody gave a shit.

[10:18:03.0000] <gsnedders>
Or at least not to do much about it.

[10:26:09.0000] <annevk>
gsnedders: if ES6 gets bytes, are they aware of the encoding API?

[10:26:33.0000] <annevk>
gsnedders: do they envision changes to platform APIs, or are they not looking at it from that perspective?

[10:28:10.0000] <gsnedders>
annevk: The aim was to get something such that Typed arrays can be redefined in terms of it

[10:28:22.0000] <gsnedders>
annevk: And I don't think encoding APIs have been discussed

[10:29:50.0000] <Hixie>
hober: yt?

[10:29:52.0000] <gsnedders>
annevk: But you'd be better off asking someone actually on TC39

[10:29:57.0000] <hober>
Hixie: yo

[10:30:06.0000] <Hixie>
hober: what's the expected implementation of for=""?

[10:30:41.0000] <annevk>
gsnedders: I like using you as proxy :)

[10:31:01.0000] <gsnedders>
annevk: I tend not to speak to anyone on TC39 :P

[10:31:07.0000] <annevk>
details

[10:31:11.0000] <Hixie>
hober: (isn't the usual UI going to be going from the video to the transcript, rather than going from the link to the transcript, to the video?)

[10:31:42.0000] <hober>
the usual ui for usual users would simply be clicking on the transcript link

[10:32:00.0000] <tantek>
rel=transcript?

[10:32:03.0000] <hober>
but using for="" allows AT to expose the fact that the video has a transcript associated with it

[10:32:09.0000] <hober>
tantek: yup

[10:32:21.0000] <annevk>
can't you do the same trick we do with blockquote

[10:32:28.0000] <hober>
(and it allows the transcript to be exposed in default and/or custom video controls)

[10:32:31.0000] <annevk>
paragraph preceding/following with a link that has rel=transcript

[10:32:38.0000] <Hixie>
hober: so the UA is expected to walk every <a> element in the DOM to look for elements that point to the video?

[10:33:00.0000] <tantek>
sounds like we're crossing over into media-info microformats like stuff

[10:33:12.0000] <hober>
Hixie: unfortunately

[10:33:15.0000] <tantek>
here's a video, a license for it, a transcript, author etc.

[10:33:18.0000] <Hixie>
hober: that seems like a non-starter

[10:33:25.0000] <hober>
Hixie: the relationship is many-to-one

[10:33:31.0000] <hober>
because one media element may have many transcripts

[10:33:50.0000] <Hixie>
hober: one transcript could apply to many media elements, too :-)

[10:33:51.0000] <hober>
<video transcript=foo></video...<a id=foo> only lets you point at one

[10:34:05.0000] <hober>
Hixie: i think that would be a much less common case

[10:34:15.0000] <Hixie>
hober: if we do this at all, which frankly i think is silly, why not make transcript="" a space-separated idref?

[10:34:16.0000] <tantek>
make transcript attr multivalued then like class

[10:34:26.0000] <tantek>
IDRefs

[10:34:57.0000] <hober>
Hixie: that could work

[10:35:13.0000] <Hixie>
hober: honestly though this seems like a waste of time, nobody's actually going to use this, and the few who do use it can just use aria-describedby

[10:35:17.0000] <hober>
/me adds that design to the list of considered designs

[10:36:30.0000] <hober>
Hixie: well, waste of time or not, the CP deadline is today, and the other CP on the table is worse :/ i'm hoping nessy submits a zero-edit "punt this until html.next" CP too; she said she might

[10:37:06.0000] <Hixie>
hober: if this was a whatwg proposal, i would reject it on the basis of lack of serious use cases and no indication that any implementor was actually going to do anything with it, that <track> already provides what is necessary for accessibility, and that just having a link in the page markup was plenty sufficient to handle the remaining use cases.

[10:38:13.0000] <Hixie>
hober: honestly i think i prefer the other CP. It is far less invasive and I can easily just put it in the W3C copy and forget about it.

[10:38:50.0000] <hober>
between <video transcript="url"> and <video transcript="idref idref idref"></video>, which do you prefer?

[10:39:22.0000] <Hixie>
which is more likely to get implemented?

[10:40:35.0000] <hober>
i don't know what other UAs plan to do, and we of course don't comment on our future feature plans. :)

[10:40:36.0000] <annevk>
neither

[10:40:49.0000] <annevk>
the former is longdesc which is terrible

[10:40:53.0000] <hober>
that said, <video transcript="url"> suffers from the metacrap problem

[10:41:28.0000] <annevk>
the latter is for/id name/map stuff which is also terrible and even worse if there's no observable effect

[10:41:32.0000] <hober>
and <video transcript="idref idref idref"></video> encourages the transcript link to be visible & in prose near the video element, which is where we want people to put these links

[10:41:47.0000] <Hixie>
it doesn't encourage anything

[10:41:50.0000] <Hixie>
nobody's gonna use it

[10:42:43.0000] <Hixie>
people who have transcripts are gonna put them wherever they get the most use of their own accord

[10:42:49.0000] <Hixie>
and most people aren't gonna have transcripts

[10:43:49.0000] <hober>
i think putting <video transcript="url"> in the (htmlwg) spec would be damaging, so i'm trying to prevent that.

[10:43:50.0000] <hober>
one way of preventing that is to simply punt on the problem, which is what nessy's cp will cover (assuming she writes it)

[10:44:30.0000] <hober>
another way is to try to come up with a design that gets you a programmatic association but that doesn't suffer from the metacrap/longdesc problem

[10:46:06.0000] <annevk>
is any of the change proposals backed by research into current practice?

[10:46:24.0000] <annevk>
because if not, a zero change CP is the only way to go

[10:46:45.0000] <annevk>
cannot add obscure HTML features based on speculation

[10:47:14.0000] <annevk>
especially if you can get very close using aria-describedby

[10:47:23.0000] <Hixie>
hober: what would it damage?

[10:47:24.0000] <hober>
I'd be perfectly happy if my CP lost to a zero-edit CP in the poll

[10:48:02.0000] <annevk>
why not just make the zero change CP then?

[10:48:23.0000] <hober>
Hixie: authors would make the same sorts of authoring errors that they make with longdesc="", so ATs & UAs would be more likely to not expose transcript="" by default

[10:51:42.0000] <Hixie>
hober: if the damage you are concerned about is just "waste authors' time", then rel=transcript causes the same damage.

[10:52:42.0000] <hober>
heh

[10:54:38.0000] <webben>
@transcript could be surfaced as an icon in the default video controls

[10:55:23.0000] <webben>
that video has controls makes the situation somewhat different to img@longdesc

[10:56:13.0000] <Hixie>
webben: if any user agent actually wants to do that, that changes matters dramatically

[10:56:28.0000] <Hixie>
webben: i am currently working for the assumption that nobody is actually going to write any code for this stuff.

[10:56:41.0000] <Hixie>
webben: in which case, my only concern is optimising for minimal impact on the spec.

[10:57:12.0000] <Hixie>
annevk: yes, if you fullscreen something in an iframe, you have to fullscreen the iframe as well.

[10:57:32.0000] <MikeSmith>
https://lists.webkit.org/pipermail/webkit-dev/2012-April/020175.html

[10:58:19.0000] <annevk>
Hixie: mkay

[10:58:31.0000] <annevk>
Hixie: so the idea is that in Fullscreen we define this new CSS layout thingie?

[10:58:32.0000] <Hixie>
annevk: (i suggest the UAs do that automatically)

[10:58:37.0000] <Hixie>
annevk: yeah

[10:58:56.0000] <annevk>
Hixie: CSS needs maintenance

[10:59:07.0000] <annevk>
but okay

[11:00:41.0000] <Hixie>
yeah tell me about it

[11:00:45.0000] <Hixie>
you volunteering? :-)

[11:01:08.0000] <annevk>
/me looks at fake calendar

[11:01:15.0000] <annevk>
/me suggests 2020

[11:01:43.0000] <Ms2ger>
annevk, well, that's before HTML5, so, excellent!

[11:02:25.0000] <annevk>
oh, I accidentally 10 years

[11:02:56.0000] <annevk>
I once wanted to define CSS parsing more coherently, but even that I haven't managed to do

[11:03:01.0000] <MikeSmith>
"actually define how the content is encrypted" vs hand-waving

[11:03:07.0000] <annevk>
defining the layout true seems so much harder

[11:03:10.0000] <Ms2ger>
ohunt++

[11:03:26.0000] <annevk>
yeah

[11:03:31.0000] <annevk>
with the Dart debacle too

[11:03:49.0000] <annevk>
one can count on ohunt

[11:03:50.0000] <Ms2ger>
annevk, oh, I bet glazou would like it if you started defining layout in a spec whose name doesn't start with "CSS"

[11:04:05.0000] <gsnedders>
DOM Layout.

[11:04:18.0000] <annevk>
oh hey look, I'm forking CSS 2.1 Appendix E

[11:04:22.0000] <hober>
Web Layout :)

[11:04:49.0000] <gsnedders>
annevk: Can you fork App. H too?

[11:05:02.0000] <annevk>
Ms2ger: I'm arranging a small bunker in my backyard

[11:05:23.0000] <Ms2ger>
gsnedders, dammit, I wanted to joke about that, but I had to check which letter it was :(

[11:05:29.0000] <Ms2ger>
annevk, small?

[11:06:04.0000] <annevk>
for one person, in case glazou decides to go thermonuclear on this

[11:06:15.0000] <annevk>
gsnedders: done and done

[11:31:43.0000] <annevk>
so :fullscreen matches the fullscreen element

[11:31:54.0000] <annevk>
is there going to be a :modaldialog thing or some such?

[11:32:13.0000] <Hixie>
<dialog>

[11:32:15.0000] <Hixie>
er

[11:32:23.0000] <Hixie>
i guess the selector wouldn't have hte angle brackets!

[11:32:43.0000] <annevk>
for the non-modal case I guess you might have several dialogs open

[11:32:57.0000] <Hixie>
yes

[11:33:02.0000] <Hixie>
those don't end up on the stack

[11:33:09.0000] <Hixie>
they're just regular abs-pos

[11:33:39.0000] <annevk>
ah okay, so twitter user profile dialogs end up on the stack, but G+ user profile dialogs don't

[11:37:12.0000] <Hixie>
G+ user profile dialogs? you mean the hovercard things?

[11:37:38.0000] <annevk>
yeah

[11:38:25.0000] <Hixie>
sounds right

[11:41:31.0000] <annevk>
okay, I'll have a first attempt done somewhere in the next couple of days I hope

[11:41:40.0000] <rafaelw_>
smaug___: shall we make a call about MutationObserver::take() ?

[11:41:46.0000] <rafaelw_>
I'd like to start prepping a webkit patch.

[11:42:00.0000] <rafaelw_>
annevk: also: ^^

[11:42:06.0000] <annevk>
takeRecords() ?

[11:42:11.0000] <annevk>
just take() wfm

[11:42:25.0000] <annevk>
or maybe releaseRecords() ?

[11:42:42.0000] <rafaelw_>
i mildly prefer empty() or clear() to take*, but I'll leave it entirely to your & olli's judgement.

[11:43:03.0000] <smaug____>
release... doesn't sound something which returns the records

[11:43:04.0000] <Velmont>
Strange behaviour of anne.

[11:43:31.0000] <annevk>
oops, sorry

[11:43:42.0000] <smaug____>
rafaelw_: empty() and clear() don't sound like they would return something

[11:43:43.0000] <rafaelw_>
;-)

[11:44:16.0000] <smaug____>
takeRecords() should be pretty clear

[11:44:16.0000] <annevk>
is there any spec which does something similar?

[11:44:27.0000] <rafaelw_>
heh. (was just typing the same question).

[11:44:39.0000] <annevk>
I don't like introducing new patterns, because people always break them

[11:44:51.0000] <smaug____>
nothing comes to my minds

[11:45:03.0000] <smaug____>
mind even

[11:45:25.0000] <rafaelw_>
retrieveRecords() ?

[11:45:27.0000] <Ms2ger>
A dragon has many minds?

[11:48:45.0000] <smaug____>
retrieve() or reclaim() ?

[11:49:11.0000] <annevk>
free() :)

[11:49:16.0000] <rafaelw_>
i think i prefer retrieve() to take(). are you guys ok with retrieve()?

[11:49:29.0000] <annevk>
sort of, it's harder to spell

[11:49:36.0000] <smaug____>
yeah, harder to spell

[11:50:12.0000] <rafaelw_>
if both you guys want take(), i'll defer to the majority.

[11:50:22.0000] <annevk>
well, I don't like take either :)

[11:50:33.0000] <rafaelw_>
annevk: what do you like?

[11:50:35.0000] <smaug____>
and annevk doesn't like fetch()

[11:50:41.0000] <Ms2ger>
Don't let Hixie see you, designing things in committee ;)

[11:51:38.0000] <annevk>
rafaelw_: I haven't been able to come up with anything I really like; takeRecords() seems least problematic thus far

[11:51:39.0000] <smaug____>
fetchRecords() ?

[11:52:01.0000] <Ms2ger>
Fentoooon!

[11:52:05.0000] <Ms2ger>
Ahem

[11:52:25.0000] <rafaelw_>
sounds like we have a winner.

[11:52:29.0000] <rafaelw_>
smaug___ ?

[11:52:37.0000] <smaug____>
takeRecords() ?

[11:52:40.0000] <annevk>
the annoying thing with fetch is that everything network hangs around that term; that's why I'd like to avoid it

[11:52:53.0000] <rafaelw_>
yup. annevk: true.

[11:52:53.0000] <smaug____>
takeRecords() is ok to me

[11:53:08.0000] <rafaelw_>
i'm fine with takeRecords(). it's not ideal, but i don't have any better ideas.

[11:53:22.0000] <annevk>
rafaelw_: same here :/

[11:53:27.0000] <annevk>
ok lets do takeRecords()

[11:53:28.0000] <Ms2ger>
Pink

[11:54:04.0000] <annevk>
feel free to note that in the bug

[11:54:26.0000] <rafaelw_>
done.

[11:54:27.0000] <annevk>
it'll be added to the spec within the next couple of days

[11:54:32.0000] <rafaelw_>
cool.

[11:56:11.0000] <smaug____>
so, takeRecords() returns a sequence of records

[11:56:33.0000] <smaug____>
hmm, should the callback have a sequence as a parameter

[11:56:41.0000] <smaug____>
/me doesn't know if that affects to anything

[11:57:04.0000] <jwalden>
anyone know if it's possible to load a log page from the krijnlogger with more than a single line highlighted, but not highlighted for everyone?

[11:59:13.0000] <smaug____>
rafaelw_: should takeRecords() return null or empty array if there are no records

[11:59:13.0000] <smaug____>
I think empty

[11:59:55.0000] <rafaelw_>
agree

[12:00:30.0000] <smaug____>
also, takeRecords() just takes the current records (removes them from the queue), and does nothing else, right?

[12:01:54.0000] <aklein>
smaug____: re: sequence, I think the callback should technically take a sequence, not an array, though I don't believe it matters at all given that the DOM doesn't hold onto a reference to that argument

[12:02:29.0000] <smaug____>
aklein: yeah, that is what I was thinking too

[12:13:44.0000] <annevk>
can make it sequence throughout

[12:14:03.0000] <annevk>
that's prolly better

[12:14:42.0000] <annevk>
heycam|away: should a callback be passed a platform array or sequence?

[12:14:57.0000] <annevk>
heycam|away: might be good to outlaw one of the two

[12:16:38.0000] <smaug____>
ok, done. Now the boring part, writing tests

[12:18:00.0000] <Ms2ger>
smaug____, think of it as "finding bugs" :)

[12:18:29.0000] <smaug____>
that is why we have Jesse

[12:19:22.0000] <Ms2ger>
Hah

[12:26:19.0000] <Hixie>
hober: we decided on showModal([anchor]), right? not <dialog modal>?

[12:30:59.0000] <smaug____>
will showModal work like showModalDialog ?

[12:31:12.0000] <smaug____>
I assume so

[12:31:32.0000] <Ms2ger>
Badly?

[12:31:42.0000] <annevk>
I think the idea was to avoid that

[12:33:06.0000] <smaug____>
or does the showModal have just callback which is called when the dialog is closed?

[12:33:21.0000] <smaug____>
s/callback/event dispatched/

[12:33:30.0000] <annevk>
I think so

[12:33:39.0000] <annevk>
anyway, I should sleep and get better

[12:33:57.0000] <hober>
Hixie: I don't remember; it's in the CP

[12:33:59.0000] <Ms2ger>
/me kicks annevk out

[12:34:26.0000] <hober>
/me digs up the link

[12:34:40.0000] <Hixie>
smaug____: showModal() just adds an "open" attribute to the <dialog> and prevents anything outside the dialog from being focused or receiving events; the callback is an event fired on the <dialog> itself.

[12:34:47.0000] <Hixie>
smaug____: it's not like showModalDialog()

[12:34:53.0000] <rafaelw_>
smaugg___: yes. Just the current records and does nothing else.

[12:35:01.0000] <Hixie>
hober: i'll go with showModal()

[12:35:06.0000] <Hixie>
hober: can't work out how to make modal="" work

[12:35:11.0000] <hober>
Hixie: the CP has <dialog modal> and dialog.show([anchor])

[12:35:33.0000] <hober>
Hixie: how is it any harder than showModal()?

[12:35:46.0000] <Hixie>
what happens if the attribute is removed?

[12:36:12.0000] <hober>
yeah, fair enough

[12:36:31.0000] <hober>
i'm surprised we didn't catch that at the time

[12:37:56.0000] <hober>
with showModal(), how do you style modals differently from non-modals?

[12:37:59.0000] <hober>
:modal?

[12:41:32.0000] <Hixie>
you don't

[12:42:48.0000] <Hixie>
(what's the use case?)

[12:44:15.0000] <hober>
non-modals often look quite different than modals, but authors can target different dialogs in a variety of ways, so it's no big deal

[12:45:03.0000] <Hixie>
oh if it's just a matter of looks, then yeah, the class attribute

[12:45:28.0000] <hober>
fine by me

[12:50:33.0000] <linclark>
Hixie: do you have a minute for a question about itemref? I'm planning out microdata support for Drupal 8

[12:51:12.0000] <Hixie>
sure

[12:51:49.0000] <linclark>
great, thanks

[12:52:03.0000] <linclark>
I'm testing an example page with validator nu

[12:52:03.0000] <linclark>
http://validator.nu/?doc=http%3A%2F%2Flin-clark.com%2Fsites%2Fdefault%2Ffiles%2Fmicrodata.php

[12:52:24.0000] <linclark>
basically, I'm using itemref for every field, even ones that are nested inside the itemscope

[12:52:41.0000] <linclark>
Validator NU gives me an error, but it works in Phillips parser and in mine

[12:53:59.0000] <linclark>
I didn't see anywhere in the spec where it said that itemref-ed elements couldn't be children of the referencing item

[12:54:04.0000] <linclark>
but I may have missed it

[12:54:39.0000] <linclark>
or it may be right here: "Properties that are not descendants of the element with the itemscope attribute can be associated with the item using the itemref attribute. "

[12:55:46.0000] <Hixie>
that sentence isn't normative

[12:55:52.0000] <Hixie>
but let me look for the normative version

[12:56:02.0000] <hober>
annevk Hixie: you might find http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-194-6 more to your liking

[12:56:22.0000] <Hixie>
hober: that certainly works for me :-)

[12:58:19.0000] <Hixie>
linclark: yeah, it's an error because of the step that says "7. If current is already in memory, there is a microdata error" in the definition of "the properties of an item"

[12:58:40.0000] <Hixie>
linclark: the error is ignored, so it'll work, but it's non-conforming, because it usually means there was an authoring mistake

[12:58:51.0000] <Ms2ger>
hober, "experiemental"

[12:59:21.0000] <linclark>
Hixie: ahh, thanks... do you think it would be poor form for Drupal to handle properties that way?

[12:59:39.0000] <Hixie>
linclark: it would be poor form for drupal to do something non-conforming, yes :-)

[12:59:52.0000] <linclark>
Hixie: the problem is that the item doesn't know which of its properties will be displayed inside it

[12:59:53.0000] <Hixie>
linclark: it's easy to work around, though; just make the itemscope be on a <meta> element

[13:00:04.0000] <Hixie>
linclark: instead of a <div>

[13:00:06.0000] <linclark>
Hixie: ok, cool, thanks!

[13:00:29.0000] <Hixie>
linclark: np

[13:00:54.0000] <Hixie>
linclark: when designing this we assumed most people would want to mark up subtrees as being a particular item with a bunch of properties, as opposed to having properties all over the place

[13:01:05.0000] <Hixie>
linclark: which is why this is less than aethetically ideal

[13:01:09.0000] <Hixie>
linclark: for your case

[13:01:15.0000] <linclark>
Hixie: that's the assumption that Drupal 7 core makes too, but Drupal 8 is blowing that to pieces

[13:01:27.0000] <Hixie>
k

[13:01:29.0000] <hober>
Ms2ger: thanks. i really need to get around to fixing flyspell-mode on this laptop...

[13:01:35.0000] <Ms2ger>
Np

[13:02:32.0000] <Hixie>
gotta go, bbiab

[13:42:57.0000] <eseidel>
ah, Hixie is around :)

[14:02:39.0000] <jarek>
is there anything like innerHTML for SVG?

[14:05:15.0000] <jarek>
http://lists.w3.org/Archives/Public/public-html-bugzilla/2012Apr/0051.html

[14:05:31.0000] <jarek>
says it's should be on Element.prototype, but I can't get it to work on any browser

[14:05:45.0000] <jarek>
was that introduced just recently?

[14:06:29.0000] <gsnedders>
jarek: Been in the spec for a while, not implemented

[14:07:18.0000] <jarek>
should't it be called innerSVG?

[14:12:32.0000] <roc>
no

[14:12:52.0000] <roc>
then we'd need innerXML, innerMathML, etc

[14:14:24.0000] <jarek>
it would make more sense to deprecate innerHTML and introduce innerContent

[14:14:44.0000] <roc>
not worth it

[14:18:51.0000] <espadrine>
Hey everyone, the coremob w3c group has released an Acid3-like test bundle for mobile phones at http://www.rng.io/

[14:18:52.0000] <espadrine>
Explanation is at https://developers.facebook.com/html5/blog/post/2012/04/04/the-methodology-behind-ringmark/

[14:18:52.0000] <espadrine>
Ring 1 intends to test for support of DRM, which is a little controversial (euphemism) but the effort is good

[14:23:57.0000] <Hixie>
eseidel: wassup?

[14:24:17.0000] <Hixie>
jarek: what do you mean by "deprecarte"?

[14:24:21.0000] <Hixie>
"deprecate", even

[14:24:44.0000] <tantek>
espadrine - so that's the not-so-hidden agenda, an attempt to get DRM interop by way of an acid-test like approach.

[14:24:54.0000] <jgraham>
espadrine: Well there is no spec for DRM at the moment so I don't see how that will happen

[14:24:56.0000] <tantek>
1 DRM Ring to control them all

[14:25:01.0000] <tantek>
:P

[14:25:29.0000] <jgraham>
tantek: "DRM ... interop" I'm not sure I follow

[14:25:36.0000] <tantek>
jgraham - LOL

[14:26:30.0000] <espadrine>
tantek: if it's any consolation, the spec they are working on states: "codecs are evil. Thoughts?"

[14:26:49.0000] <jarek>
Hixie: I mean leave innerHTML in the spec for backward compatibility, but introduce new property that would have name that actually makes sense

[14:26:54.0000] <jgraham>
espadrine: I think that is more Robin than Facebook

[14:27:10.0000] <Hixie>
jarek: so basically just add another attribute that does the same thing?

[14:27:15.0000] <Hixie>
jarek: that would just add bloat

[14:27:43.0000] <jarek>
Hixie: I have even better idea - make SVG part of HTML, then innerHTML would make perfect sense

[14:27:57.0000] <Hixie>
jarek: SVG is part of HTML. :-)

[14:28:05.0000] <Hixie>
(for some definition of "part of")

[14:28:11.0000] <Hixie>
anyway

[14:28:12.0000] <Hixie>
see /topic

[14:28:23.0000] <jarek>
Hixie: but it's still XML, you can't write it using HTML grammar

[14:28:29.0000] <jgraham>
It is disappointing that the blog post talks about "features offered by iOS and Android", since those aren't browsers

[14:28:30.0000] <Hixie>
yes you can

[14:29:26.0000] <jarek>
Hixie: you mean when SVG is embeded directly in HTML, I do not have to close SVG tags?

[14:29:57.0000] <Hixie>
jarek: you have to follow the syntax rules described in the HTML specification

[14:30:30.0000] <espadrine>
jgraham: true, I assume they meant safari for iOS and Android's default browser

[14:30:37.0000] <Hixie>
jarek: see http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1450

[14:30:52.0000] <eseidel>
Hixie: would like to talka bout <iframe seamless>

[14:30:58.0000] <Hixie>
eseidel: shoot

[14:31:33.0000] <eseidel>
Hixie: you intend <iframe seamless> to remain a replaced element, yet "act like" a block, correct?

[14:32:00.0000] <Hixie>
eseidel: not sure what you mean by "act like a block"

[14:32:10.0000] <eseidel>
Hixie: it's supposed to fill its parent width

[14:32:19.0000] <Hixie>
eseidel: it's supposed to do what it says here: http://www.whatwg.org/specs/web-apps/current-work/#attr-iframe-seamless

[14:32:28.0000] <jgraham>
espadrine: Probably. Not a very healthy attitude that the only browser that matters is the one that ships with the device. Too much like designing only for IE.

[14:32:35.0000] <eseidel>
yup, i'm aware :)

[14:32:39.0000] <Hixie>
eseidel: which, as far as width goes, means "In visual media, in a CSS-supporting user agent: the user agent should set the intrinsic width of the iframe to the width that the element would have if it was a non-replaced block-level element with 'width: auto'."

[14:33:28.0000] <jarek>
is there any hope that the baseVal/animVal stuff will be dropped from SVG2 spec?

[14:33:29.0000] <eseidel>
Hixie: this is thus unaffected by the display type

[14:33:47.0000] <eseidel>
so iframe.style.display should remain "inline"

[14:34:01.0000] <jarek>
it breaks pretty much all HTML DOM frameworks like jQuery

[14:34:23.0000] <eseidel>
Hixie: and I assume, that it should shrink-wrap, as a block would, when floated

[14:34:28.0000] <Hixie>
eseidel: iframe.style.display returns the value specified in the style="" attribute, so typically it will remain the empty string

[14:34:48.0000] <eseidel>
Hixie: sory, window.getComputedStyle(iframe).display then :)

[14:34:49.0000] <jgraham>
jarek: Did you send feedback to the wg?

[14:36:01.0000] <Hixie>
eseidel: if you float it, then "the width that the element would have if it was a non-replaced block-level element with 'width: auto'" would be zero, presumably

[14:36:32.0000] <Hixie>
eseidel: though i think that could probably be better defined

[14:36:33.0000] <eseidel>
Hixie: when you float a block, it shrink wraps around its kids, is my understanding

[14:36:44.0000] <eseidel>
that's the behavior I've currently implemented

[14:36:50.0000] <Hixie>
eseidel: the iframe has no kids

[14:36:54.0000] <Hixie>
eseidel: if it's not replaced

[14:36:59.0000] <ojan>
Hixie: that's gross

[14:37:07.0000] <ojan>
Hixie: it should shrink-wrap!

[14:37:26.0000] <Hixie>
ojan: i'm not talking about what a good design should be, i'm just answering questions about what the spec says today

[14:37:36.0000] <eseidel>
Hixie: that's fine, those are the qeustions I'm answering :)

[14:37:37.0000] <ojan>
Hixie: oh sure...i was telling eseidel that the spec should change

[14:37:39.0000] <eseidel>
askgin, rather

[14:37:45.0000] <Hixie>
ojan: i'm happy to talk about changing what the spec says, but that's a different conversation :-)

[14:37:53.0000] <ojan>
Hixie: fair enough

[14:38:00.0000] <eseidel>
Hixie: so your interpretation of the currnet spec, is that when floated the width shoudl be 0

[14:38:05.0000] <Hixie>
ojan: (i think you're probably right that it should change)

[14:38:35.0000] <Hixie>
eseidel: well, the current spec actually says something which as ojan says is pretty dumb, which is that its contents, namely the fallback markup between the <iframe></iframe> tags, would be shrink-wrapped

[14:38:51.0000] <eseidel>
is ee.

[14:38:52.0000] <Hixie>
eseidel: typically that's empty so it would be zero width

[14:39:40.0000] <eseidel>
ojan was suggeting earlier an interpretation would be to just force iframe to be display: block in this mode

[14:39:42.0000] <ojan>
Hixie: i think the computedStyle of display on <iframe seamless> should be block and that we should pretend that the iframe's contentDocument's children are it's children

[14:40:04.0000] <Hixie>
eseidel: 'float' forces display:block anyway

[14:40:05.0000] <eseidel>
ojan: obviously you don't mean firstChild spanning docs :)

[14:40:34.0000] <eseidel>
Hixie: correct

[14:40:34.0000] <ojan>
Hixie: and that you should be able to do <iframe seamless style="display:inline-block"> to get a shrink-wrapped seamless iframe

[14:41:01.0000] <ojan>
Hixie: and in that case the computedstyle would obviously be display:inline-block

[14:41:02.0000] <Hixie>
ojan: well it needs to be a replaced element

[14:41:17.0000] <Hixie>
ojan: whether it's block or inline doesn't much matter, i don't see why we wouldn't just leave it be what the author set it to

[14:41:20.0000] <ojan>
Hixie: i'm not really sure what the implications of being replaced are

[14:41:27.0000] <eseidel>
/me neither

[14:41:48.0000] <ojan>
Hixie: it seems more consistent with e.g. coerciing display of a floated element to block

[14:41:55.0000] <Hixie>
see http://www.w3.org/TR/CSS21/visudet.html

[14:42:10.0000] <Hixie>
e.g. 'width' doesn't apply to non-replaced inline elements

[14:42:35.0000] <Hixie>
'padding' doesn't apply to replaced block elements

[14:43:09.0000] <Hixie>
basically anything that's like an image or form control is replaced

[14:43:24.0000] <Hixie>
anyway

[14:43:40.0000] <Hixie>
i agree that shrink-wrapping the contents makes sense if the element is unconstrained

[14:43:50.0000] <Hixie>
spec needs to change to say that

[14:43:55.0000] <Hixie>
can you file a bug or send mail to whatwg?

[14:44:06.0000] <ojan>
sure

[14:44:14.0000] <Hixie>
awesome, thanks

[14:44:29.0000] <Hixie>
(looks like i just didn't think of the case of a seamless iframe not being in flow)

[14:46:42.0000] <Hixie>
specifically i think the spec needs to say that for in-flow, block-level seamless iframes, the width is the width of the containing block minus the inline-progression-direction margins and borders

[14:47:05.0000] <Hixie>
and that for other cases, the width is the intrinsic width of the root element's box in the document in the iframe

[14:47:08.0000] <Hixie>
or some such

[14:47:20.0000] <eseidel>
Hixie: further clarification would certainly be helpful :)

[14:48:31.0000] <ojan>
Hixie: by deafult, iframe's are display:inline, right? so...by that definition, to get display:block style rendering you'd need to set seamless and display:block, no?

[14:49:04.0000] <ojan>
Hixie: is intrinsic width == shrink-wrapped width?

[14:49:09.0000] <eseidel>
ojan: it's unclear what display: block would change, other than the max-width interaction

[14:49:26.0000] <ojan>
eseidel: inlines don't fill their containers width

[14:49:38.0000] <eseidel>
ojan: except seamless iframes, hack their way into doing so

[14:49:46.0000] <eseidel>
ojan: unless constrained by max-width

[14:50:13.0000] <Hixie>
ojan: yeah, you'd need to set display:block if you wanted the iframe to act like a block

[14:50:13.0000] <ojan>
eseidel: i'm just commenting on Hixies use of "block-level" above...by default iframe's aren't block-level

[14:50:29.0000] <Hixie>
ojan: otherwise it'll just sit on the line (like an inline-block, more or less)

[14:50:38.0000] <ojan>
Hixie: hm...not sure how i feel about that...i guess that's ok

[14:50:51.0000] <eseidel>
ojan: I need to write a test for what happens when <iframe seamless style="max-width: "> is on a line, that it doesn't force the other content on that line to the next line

[14:51:02.0000] <Hixie>
ojan: "intrinsic width" is an input into the css model. "shrink-wrapped width" is a nebulous concept I'd have to define better.

[14:51:10.0000] <ojan>
Hixie: but it seems by far the common case will that be people will want display:block

[14:51:28.0000] <Hixie>
ojan: that's usually the case with iframes in general

[14:51:46.0000] <ojan>
Hixie: would you be opposed to adding iframe[seamless] { display: block } to the UA stylesheet?

[14:52:04.0000] <ojan>
Hixie: btw, i'll put all this in an email to whatwg@ when we're done.

[14:52:23.0000] <Hixie>
ojan: not overly opposed, but it's yet more magic, which is often a bad sign

[14:53:24.0000] <ojan>
Hixie: ok...i'll send an email...we'll see what others think

[14:53:49.0000] <ojan>
Hixie: i dont' feel strongly about this...i'm on the fence...but it seems like it is what developers will want 90% of the time

[14:54:19.0000] <ojan>
/me goes to compose this email

[14:54:27.0000] <ojan>
sigh...i was going to write code today :(

[14:54:42.0000] <Hixie>
ojan: well like i said, i think it's what they want 98% of the time with <iframe> regardless of seamless

[14:55:01.0000] <ojan>
Hixie: sure...but they can't have it with non-seamless iframes :)

[14:55:18.0000] <ojan>
Hixie: oh...i guess they could if not for back-compat issues

[14:55:20.0000] <Hixie>
they can just set iframe { display: block; width: 100%; border: 0; }

[14:55:23.0000] <Hixie>
in their CSS

[14:55:26.0000] <ojan>
yeah

[14:55:27.0000] <Hixie>
just like with seamless ones :-)

[14:55:46.0000] <Hixie>
we don't turn off teh default border on iframe[seamless] either, do we?

[14:56:01.0000] <ojan>
Hixie: we should!

[14:56:03.0000] <Hixie>
and i guarantee they don't want that

[14:56:19.0000] <ojan>
Hixie: in a sense it's more magic...in another sense...when you're explaining how seamless works to someone...you can say that it roughly makes an iframe act like a div

[14:57:17.0000] <Hixie>
i'm not especialy opposed

[14:57:21.0000] <ojan>
Hixie: also if only width:100% did the right thing!

[14:57:30.0000] <Hixie>
i think the argument is more compelling if we also turn off the border

[14:57:30.0000] <ojan>
Hixie: as in...in the presense of padding

[14:57:37.0000] <ojan>
Hixie: i agree

[14:57:41.0000] <ojan>
Hixie: and i think we should

[14:57:54.0000] <Hixie>
oh actually we do

[14:57:55.0000] <Hixie>
iframe:not([seamless]) { border: 2px inset; }

[14:58:34.0000] <eseidel>
ha

[14:58:38.0000] <eseidel>
webkit doesn't have tha tyet

[14:58:40.0000] <eseidel>
but I'l add it

[14:58:55.0000] <eseidel>
I had to turn it off manually in my tests

[14:59:26.0000] <Hixie>
that's pretty buried in the spec, not surprised you missed it

[15:00:44.0000] <abarth>
eseidel: we have -webkit-not

[15:00:52.0000] <abarth>
I think ojan implemented it

[15:01:10.0000] <Hixie>
why -webkit-?

[15:01:15.0000] <Hixie>
:not() is ancient

[15:01:23.0000] <ojan>
abarth: no...i had a patch up for extending it, but we've had :not for ages

[15:01:33.0000] <ojan>
abarth: my patch bit-rotted and never landed though

[15:01:33.0000] <abarth>
ah, ok

[15:01:52.0000] <ojan>
abarth: the latest selectors spec has it take a comma separated list instead of a single selector

[15:02:08.0000] <ojan>
abarth: but there's a bunch of tests out there that enforce that it take a single selector

[15:02:13.0000] <abarth>
maybe I misunderstood what eseidel meant

[15:02:25.0000] <ojan>
abarth: and i wasn't able to get the test authors to change their tests (or respond to my emails at all)

[15:02:31.0000] <ojan>
abarth: the whole thing is pretty lame

[15:02:48.0000] <ojan>
abarth: yeah...not sure what eseidel  is saying

[15:02:53.0000] <ojan>
that should work

[15:03:21.0000] <ojan>
oh, i think he's just saying that we havne't added that to the UA stylesheet yet

[15:03:56.0000] <ojan>
eseidel: we need to be careful how we add that bit since :not  and [seamless] are both super expensive

[15:05:01.0000] <eseidel>
abarth, ojan, I was noting that our html.css rule is simpler

[15:05:10.0000] <eseidel>
no :not([seamless])

[15:05:22.0000] <eseidel>
ojan: how super-expensive?

[15:05:33.0000] <eseidel>
ojan: you think that adding that qualifier will show up in the plg?

[15:05:34.0000] <eseidel>
plt

[15:06:15.0000] <ojan>
eseidel: might. not sure

[15:06:29.0000] <ojan>
eseidel: antti would have a better sense of the perf implications.

[15:06:31.0000] <eseidel>
ojan: I'm just going to be naive :)

[15:07:03.0000] <ojan>
eseidel: but there are def cases where we don't use CSS for attribute/not selectors and instead use C++ code to make the style be correct because of the perf issues

[15:07:20.0000] <ojan>
eseidel: anyways...we should probably stop spamming whatwg with webkit implementation details :)

[15:07:23.0000] <eseidel>
ojan: k

[15:07:28.0000] <eseidel>
ojan: I appreciate the warning

[15:07:40.0000] <eseidel>
ojan: oh, sorry, thought we wer ein #webkit

[15:08:38.0000] <Hixie>
you're welcome to spam the channel with implementation details

[15:08:44.0000] <Hixie>
it prevents us from climbing the ivory tower

[15:24:50.0000] <roc>
I would expect ":not([seamless])" to be ultra-expensive and "iframe:not([seamless])" to be very inexpensive

[15:29:28.0000] <Hixie>
i don't suppose anyone wants to spec me an 'anchor-point' CSS property and its corresponding logic

[15:30:40.0000] <Hixie>
for someone who left the css working group i sure seem to end up inventing a lot of css stuff

[15:32:48.0000] <tantek>
inventing or depending on? ;)

[15:32:56.0000] <Hixie>
inventing and speccing

[15:33:25.0000] <Hixie>
TabAtkins: do i have to do anything special with respect to transitions, style canonicalisation and serialisation, CSSOM, etc, if I create a new property? Or is the CSS2.1 style of property definition still the state of the art?

[15:33:48.0000] <tantek>
the latest state of the art for that is in the CSS spec template

[15:34:09.0000] <roc>
what does anchor-point do?

[15:34:21.0000] <tantek>
for animation just say animatable:no until someone comes up with a use-case :)

[15:35:00.0000] <hober>
i assume anchor-point is for positioning non-modal dialogs

[15:35:20.0000] <tantek>
the point which things can be position:center'd relative to presumably

[15:35:25.0000] <Hixie>
roc: defines which point in one box should be aligned with which point in another box when you show a non-modal dialog aligned with another element

[15:35:30.0000] <tantek>
Hixie, here is said CSS spec template: http://dev.w3.org/csswg/css-module/Overview.src.html

[15:35:47.0000] <Hixie>
roc: (consider the "tooltip"-like popup windows with arrows that point to new features in web apps these days)

[15:35:50.0000] <Hixie>
tantek: thanks

[15:36:10.0000] <roc>
how are you going to reference another box? how are you going to deal with cyclic dependencies?

[15:36:14.0000] <tantek>
also - that template is not frozen - please feel free to make suggested improvements etc.

[15:36:59.0000] <Hixie>
tantek: is there any documentation about what the various liens mean?

[15:37:19.0000] <Hixie>
roc: the first box is the <Dialog> element, that's the one being positioned, and the box to which you are anchoring is the argument to the show() method

[15:37:31.0000] <Hixie>
tantek: lines, even

[15:37:41.0000] <Hixie>
tantek: specifically "Animatable" and "Canonical order"

[15:38:04.0000] <roc>
oh, so the target box/element isn't specified in the CSS rule, but is implicit DOM state?

[15:38:17.0000] <tantek>
Hixie, let's see, this helps for computable: http://wiki.csswg.org/spec/computed-values

[15:38:30.0000] <Hixie>
roc: yeah. might be explicit DOM state, haven't figured that out yet.

[15:39:40.0000] <tantek>
Hixie, I couldn't find docs for those lines either, hence omitted them from CSS3-UI LCWD2 until someone steps up to define them. This action was not appreciated by the wg (or at least some members thereof)

[15:39:50.0000] <tantek>
This has some additional guidance: http://wiki.csswg.org/spec/format-update

[15:39:51.0000] <Hixie>
tantek: heh

[15:40:28.0000] <Hixie>
tantek: so how do i specify how a transition between two values works?

[15:40:46.0000] <tantek>
since then I've decided I can just put "animatable: no" until someone complains and then I can make them document real world use-cases

[15:40:55.0000] <tantek>
great question

[15:41:26.0000] <Hixie>
i'm assuming "great question" is the usual euphemism for "you have stepped into a political landmine, please wait while i step out of the way" :-P

[15:41:53.0000] <tantek>
"great question" means AFAIK no well defined answer

[15:42:17.0000] <Hixie>
ok i found documentation for the "animatable" line: http://www.w3.org/TR/css3-transitions/#animatable-properties

[15:42:35.0000] <tantek>
political landmines are much "easier" to deal with as all you have to do is trigger them and then analyze the results

[15:42:48.0000] <tantek>
I believe tabatkins has had to address that question in flexbox so he may be able to help

[15:46:43.0000] <zewt>
are there any political unit tests

[15:50:33.0000] <tantek>
zewt, it's not clear it is possible to construct political unit tests as such test cases typically involve a lot of context (thus not "unit"), and political user agents also typically exhibit an observer effect, making tests not necessarily repeatable. http://en.wikipedia.org/wiki/Observer_effect_%28physics%29#Social_sciences

[15:51:12.0000] <zewt>
you need fixtures that reproduce the responses of other entities in the system

[15:52:12.0000] <tantek>
or the ability to reset a political user agent to a previous state or a known initial state

[15:52:26.0000] <zewt>
transactional users

[15:54:29.0000] <zewt>
like when you mention something as a "here's an idea but it's a really bad one" aside, then people LATCH ONTO IT and you just wish you could rollback to before you even mentioned it

[15:57:21.0000] <tantek>
unless your intention was to honeypot such folks into being distracted by it

[16:05:17.0000] <Hixie>
i can't work out what is expected for the "canonical order" line

[16:05:34.0000] <Hixie>
it seems to me what is needed isn't a canonical order but a canonical serialisation

[16:08:28.0000] <tantek>
like every property should specify its canonical DOM serialization?

[16:11:23.0000] <Hixie>
well for most properties it follows straight from the grammar

[16:11:31.0000] <Hixie>
but occasionally there are complications, yeah

[16:11:39.0000] <Hixie>
i'm assuming that's what this line is about

[16:14:47.0000] <Hixie>
bbl

[16:22:38.0000] <heycam>
annevk, I would use a sequence if you just want a JS Array object to be passed to the callback, and an array type if you want the callback to be able to modify the array and the DOM object to be able to notice that

[16:53:11.0000] <zewt>
heycam: sequence vs. array must be in the top three of idl things people get confused about, heh

[16:53:40.0000] <heycam>
zewt, definitely

[16:53:53.0000] <heycam>
might have been better to use a word other than "array" for array types

[16:54:01.0000] <zewt>
is it basically the difference between returning a vector<int> vs. an int*?

[16:54:25.0000] <heycam>
pretty much, except that with the int* case the DOM object can also notice when you set values, change the array length, etc.

[16:54:43.0000] <heycam>
it's much more like an object with indexed properties and a length property

[16:54:52.0000] <zewt>
does it "notice", or does it have to compare after the fact?

[16:55:11.0000] <heycam>
well I would say that it can notice

[16:55:59.0000] <zewt>
eg. does it effectively override the setter, so it can detect changes immediately, or is it more like keeping a copy of the original data and comparing afterwards

[16:56:06.0000] <heycam>
yeah the former

[16:56:13.0000] <zewt>
(the former being quicker for large sets of data, but presumably with more overhead to JS)

[16:56:42.0000] <heycam>
because if you have an IDL attribute of type whatever[], then you can manipulate it and the DOM object can respond immediately

[16:56:42.0000] <zewt>
(well, more memory efficient, I should say)


2012-04-05
[17:31:49.0000] <zewt>
bikeshedding contest: a word for "parameters" that isn't a plural (and is preferably less verbose than "configuration")

[17:32:52.0000] <zewt>
(bugs me that webgl says "has *context creation parameters*"; defined abstractions like that are usually singular, which seems more concrete)

[17:33:21.0000] <zewt>
"setup" doesn't really sound right

[17:35:15.0000] <tantek>
zewt, argv :P

[17:54:25.0000] <zewt>
wow. someone trying to use "doesn't spec java bindings" as an argument? that's a pretty big alarm bell that someone's reaching for arguments. heh

[18:18:17.0000] <Hixie>
heycam|away: re http://lists.w3.org/Archives/Public/public-svg-wg/2012JanMar/0192.html :

[18:18:52.0000] <Hixie>
heycam|away: addHitRegion() only makes sense in an immediate-mode bitmap world, you don't need it or anything like it in the retained-mode svg vector world

[18:19:04.0000] <Hixie>
heycam|away: as far as matrix objects go i'm happy to use whatever

[18:19:16.0000] <Hixie>
heycam|away: (i used SVGMatrix because that's what mozilla people suggested)

[23:06:27.0000] <smaug____>
rafaelw_: ping

[23:06:33.0000] <smaug____>
(probably a bit late for you )

[23:09:57.0000] <zcorpan>
margins won't collapse at the top or bottom of seamless iframes

[23:10:23.0000] <zcorpan>
but maybe that's not a problem

[23:11:02.0000] <smaug____>
(all the special casing for seamless feels horrible, but I don't complain, yet :) )

[23:12:02.0000] <smaug____>
aklein: ping

[23:12:25.0000] <zcorpan>
i agree with display:block default style (since inline gives the annoying line height spacing thing everyone hates) and margin:0

[23:17:49.0000] <hsivonen>
MikeSmith: I suppose org.whattf.syntax.Driver could be extended with full validator functionality. Now it's jus a minimal Jing harness

[23:19:58.0000] <smaug____>
does DOM4 say anything about garbage collection or similar?

[23:20:03.0000] <smaug____>
/me can't find anything

[23:26:58.0000] <zcorpan>
smaug____: what do you expect it to say?

[23:30:13.0000] <zcorpan>
i wonder who to cc from webkit and microsoft about changes to shared workers

[23:33:00.0000] <smaug____>
zcorpan: it should say something about ownership of MutationObserver

[23:33:02.0000] <smaug____>
I filed a bug

[23:49:26.0000] <zcorpan>
hmm. <annotation-xml> complicates innerHTML if we want to support foreign content with innerHTML

[23:49:47.0000] <zcorpan>
well, you need to check an attribute on the context element

[23:49:54.0000] <zcorpan>
i guess that's simple enough

[23:51:10.0000] <zcorpan>
also, the escape foreign lands thing doesn't make much sense in the fragment case, but i don't know what to do about that

[23:51:58.0000] <smaug____>
innerHTML reminds me... hsivonen, how hard would it support innerHTML in svg elements?

[23:52:12.0000] <zcorpan>
at least it needs to have a check not to pop the root element in the fragment case

[23:52:27.0000] <zcorpan>
smaug____: that's what i'm investigating :-)

[23:52:32.0000] <smaug____>
hsivonen: I mean in gecko

[23:52:35.0000] <zcorpan>
oh

[23:52:43.0000] <smaug____>
ah, there can be some spec issues too :)

[23:52:54.0000] <zcorpan>
well the spec is totally broken for innerHTML on non-html elements currently

[23:53:04.0000] <zcorpan>
the insertion mode is "in body"

[23:53:09.0000] <zcorpan>
so you get HTML elements

[23:54:02.0000] <zcorpan>
but the fix is more complicated than just changing the insertion mode to foreign content...

[23:54:50.0000] <zcorpan>
see https://www.w3.org/Bugs/Public/show_bug.cgi?id=16635

[23:58:20.0000] <hsivonen>
smaug____: not at all hard

[23:58:52.0000] <hsivonen>
smaug____: the code is pretty much there. we're just annoying by putting the IDL on HTML elements instead of all elements

[23:59:16.0000] <hsivonen>
IIRC, I've fixed the parser code ahead of spec

[23:59:19.0000] <hsivonen>
/me checks

[00:03:16.0000] <zcorpan>
hsivonen: what changes are needed to make innerHTML do the right thing on svg and mathml elements, including elements that are MathML text integration points and HTML integration points?

[00:03:35.0000] <hsivonen>
smaug____: oops. there seems to be a bug in the case where the namespace is not HTML but the local name matches "script", "plaintext", "xmp", "textarea", "title", "style", et.

[00:05:50.0000] <hsivonen>
zcorpan: "reset the insertion mode" needs to be able to handle non-HTML at the start of the algorithm...

[00:06:29.0000] <zcorpan>
hsivonen: right, but i think more changes are needed

[00:06:42.0000] <zcorpan>
hsivonen: consider setting innerHTML to "<b>x"

[00:06:49.0000] <zcorpan>
hsivonen: that will pop the root element per spec

[00:06:54.0000] <zcorpan>
oops

[00:07:33.0000] <hsivonen>
zcorpan: looking at this stuff more carefully, it might be that the code I have here is very buggy...

[00:07:48.0000] <hsivonen>
anyway, it shouldn't be too hard

[00:08:06.0000] <hsivonen>
we should definitely add innerHTML for SVG and MathML elements

[00:11:03.0000] <zcorpan>
commented on the bug

[00:11:08.0000] <zcorpan>
i agree we should

[00:12:08.0000] <zcorpan>
i started to write down proposed spec changes, but then i stopped when it came to <annotation-xml>, <annotation-xml encoding=text/html>, <mglyph>, etc

[00:12:24.0000] <zcorpan>
because i wasn't confident that i'd get it right

[00:18:31.0000] <Ms2ger>
MikeSmith, ping?

[00:21:24.0000] <annevk>
better get ourselves some Java bindings!

[00:27:19.0000] <annevk>
<input type=range> is called a Range Element by Microsoft

[00:27:23.0000] <annevk>
that's so confusing

[00:29:01.0000] <Ms2ger>
Well, we have Java bindings

[00:29:30.0000] <zcorpan>
http://www.amazon.com/Range-Kleen-Replacement-Plug-Element/dp/B000FNJ5RG%3FSubscriptionId%3DAKIAILSHYYTFIVPWUY6Q%26tag%3Dduckduckgo-z-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB000FNJ5RG

[01:04:44.0000] <annevk>
Ms2ger: I know, not sure whether to reply or not

[01:36:19.0000] <annevk>
smaug____: so it's very easy to spec takeRecords() as return copy of X and then empty X

[01:36:57.0000] <smaug____>
yup

[01:37:00.0000] <annevk>
smaug____: the alternative is something like remove all Y from X and then return Y in the same order but that does not account for the empty list

[01:37:19.0000] <annevk>
are you happy if the spec just says copy?

[01:37:23.0000] <annevk>
you can implement whatever of course

[01:37:38.0000] <smaug____>
yeah

[01:37:43.0000] <annevk>
k

[01:38:15.0000] <smaug____>
just make it clear that if there are no records, empty array is returned

[01:44:50.0000] <annevk>
I'll make it clear record queue is always a list, sure

[01:47:04.0000] <annevk>
slow dvcs.w3.org is slow

[01:47:49.0000] <annevk>
Ms2ger: not sure making the redirect of mozilla.org to en-US permanent in the draft was sensible btw

[01:49:19.0000] <annevk>
specced

[01:50:12.0000] <charlvn>
have any of you guys/girls tried out jsoup? it's a bit hacky but it's a powerful library

[01:52:54.0000] <smaug____>
w3.org is slow...

[01:53:17.0000] <RobbertAtWork>
smaug____: w3 is slow, yes

[01:53:49.0000] <RobbertAtWork>
smaug____: w3.org loads snappy for me though

[01:54:05.0000] <MikeSmith>
Ms2ger: here now

[01:54:39.0000] <charlvn>
time curl www.w3.org gives me 0m0.543s

[01:54:55.0000] <Ms2ger>
/me tries to remember

[01:55:02.0000] <smaug____>
I'm trying to load DOM4, so it is dvcs.w3.org

[01:55:06.0000] <Ms2ger>
annevk, it's a 301, apparently

[01:55:23.0000] <annevk>
Ms2ger: seems that even Mozilla makes mistakes

[01:55:27.0000] <Ms2ger>
annevk, :)

[01:55:41.0000] <Ms2ger>
MikeSmith, it would be nice if http://dev.w3.org/html5/tests/ had a pointer to the hg repo

[01:56:32.0000] <MikeSmith>
Ms2ger: you mean an index page?

[01:56:50.0000] <Ms2ger>
Or in the readme file, at least

[01:57:39.0000] <MikeSmith>
or maybe I should just have it redirect?

[01:57:57.0000] <Ms2ger>
wfm

[01:58:02.0000] <MikeSmith>
OK

[01:58:08.0000] <smaug____>
no, I can't get dvcs.w3.org to load

[01:58:31.0000] <MikeSmith>
oh

[01:58:37.0000] <MikeSmith>
that's a different problem

[01:58:39.0000] <Ms2ger>
smaug____, clone https://bitbucket.org/ms2ger/dom-core :)

[01:58:40.0000] <MikeSmith>
wow

[01:59:13.0000] <MikeSmith>
I can't get it load either

[01:59:28.0000] <Ms2ger>
'How do you scare off a flock of web developers? �Java! Java!�'

[01:59:41.0000] <niloy>
lolz

[02:00:19.0000] <annevk>
smaug____: updated http://dom.spec.whatwg.org/ for the occasion

[02:00:36.0000] <smaug____>
thanks

[02:01:41.0000] <Ms2ger>
annevk, hmm, when did I get a Mozilla link?

[02:01:46.0000] <MikeSmith>
smaug____: please try now

[02:01:51.0000] <annevk>
Ms2ger: also, you only updated one mozilla.org link, the one from Aryeh

[02:01:54.0000] <Ms2ger>
Yeah

[02:02:03.0000] <MikeSmith>
still responding slowly

[02:02:10.0000] <Ms2ger>
I didn't think I had one

[02:02:16.0000] <smaug____>
MikeSmith: works now

[02:02:20.0000] <MikeSmith>
I just restarted the web server

[02:02:34.0000] <Ms2ger>
annevk, want to revert me? :)

[02:03:02.0000] <MikeSmith>
load on that machine is still pretty high

[02:03:08.0000] <annevk>
Ms2ger: I'll just fix it instead and it'll go with the next commit

[02:03:13.0000] <annevk>
whenever that is

[02:03:16.0000] <Ms2ger>
Alright

[02:04:20.0000] <MikeSmith>
Mem:    524504k total,   518140k used,     6364k free,     1548k buffers

[02:04:21.0000] <MikeSmith>
Swap:   524280k total,   275388k used,   248892k free,    10408k cached

[02:04:41.0000] <Ms2ger>
Ddos?

[02:04:46.0000] <MikeSmith>
using a lot of swap space

[02:05:00.0000] <smaug____>
that is not much memory

[02:05:03.0000] <MikeSmith>
Ms2ger: some spider probably yeah

[02:05:04.0000] <smaug____>
total

[02:05:13.0000] <annevk>
is someone making sure the CSS specs that define OM stuff are doing the right thing?

[02:05:16.0000] <MikeSmith>
smaug____: yeah, it's not a big machine

[02:05:21.0000] <Ms2ger>
Nah

[02:05:23.0000] <MikeSmith>
annevk: heh

[02:05:27.0000] <annevk>
because as much as the CSS WG likes to bitch at other groups for not informing them, they're certainly not informing us

[02:06:03.0000] <MikeSmith>
annevk: I think asking "is someone making sure the CSS specs do ..." with respect to each other, you get the same answer

[02:06:06.0000] <annevk>
sort of curious with respect to events and such

[02:06:13.0000] <annevk>
MikeSmith: mwaha

[02:07:38.0000] <annevk>
anyone know what's been happening with WebVTT?

[02:07:47.0000] <annevk>
I haven't had any requests with respect to my validator

[02:08:24.0000] <MikeSmith>
now dvcs.w3.org is unresponsive again

[02:09:08.0000] <MikeSmith>
tailing the apache access.log I don't see any problems

[02:09:59.0000] <MikeSmith>
hmm

[02:10:12.0000] <MikeSmith>
I do see a lot of this in the error logs:

[02:10:14.0000] <MikeSmith>
[Thu Apr 05 09:10:44 2012] [error] [client 49.128.35.6] Script timed out before returning headers: hgweb.wsgi, referer: http://dvcs.w3.org/hg/csswg/log/tip/css3-animations/Overview.src.html

[02:11:39.0000] <MikeSmith>
every 2 seconds

[02:13:58.0000] <Ms2ger>
Same IP?

[02:15:42.0000] <MikeSmith>
hmm

[02:15:44.0000] <MikeSmith>
[Thu Apr 05 09:08:31 2012] [error] server is within MinSpareThreads of MaxClients, consider raising the MaxClients setting

[02:15:44.0000] <MikeSmith>
[Thu Apr 05 09:09:28 2012] [error] server reached MaxClients setting, consider raising the MaxClients setting

[02:15:51.0000] <MikeSmith>
Ms2ger: no, different clients

[02:16:02.0000] <MikeSmith>
I think the above was the problem

[02:16:13.0000] <MikeSmith>
it seems to have re-stabiized

[02:16:19.0000] <MikeSmith>
stabilized now

[02:17:00.0000] <MikeSmith>
if we keep having problems I guess I can try raising the maxclients value

[02:20:35.0000] <MikeSmith>
load is back down to normal now

[02:21:20.0000] <MikeSmith>
ok, next time if anybody has problems with dvcs.w3.org please ping me so I can get on there and look

[02:23:25.0000] <zcorpan>
hsivonen: your input for https://www.w3.org/Bugs/Public/show_bug.cgi?id=16635 would be appreciated, when you have time :-)

[02:24:26.0000] <MikeSmith>
Ms2ger: I redirected to http://w3c-test.org/html/tests/ instead

[02:24:47.0000] <MikeSmith>
if you think we should redirect it to dvcs.w3.org, I will change it to that

[02:25:09.0000] <Ms2ger>
Fine with me

[02:25:17.0000] <MikeSmith>
OK

[02:26:07.0000] <zcorpan>
TabAtkins: http://www.w3.org/TR/css3-hyperlinks/ is a spec that should get the "don't look at this" treatment, right?

[02:27:23.0000] <Ms2ger>
Wow, http://dev.w3.org/csswg/css3-cascade/ has got a nice header

[02:28:08.0000] <Ms2ger>
zcorpan, that treatment still hasn't made it to TR/...

[02:29:38.0000] <Ms2ger>
Also, I didn't want to see http://www.youtube.com/watch?v=qmJKhois7E8

[02:32:43.0000] <MikeSmith>
Ms2ger: then you probably wouldn't like the alternate one where he's naked

[02:32:57.0000] <Ms2ger>
No. I would not.

[02:37:35.0000] <annevk>
http://www.nature.com/press_releases/linkeddata.html as long as they're not releasing the articles, I'm kind of missing why this is a big deal

[02:39:31.0000] <jgraham>
I guess citation data can be mildly interesting. But yeah, not too big a deal. Unless you are an RDF-head I guess in which case ever time someone publishes a triple it's a big deal

[02:45:28.0000] <annevk>
hmm

[02:45:37.0000] <annevk>
http://www.w3.org/TR/CSS21/zindex.html contradicts other parts of CSS 2.1

[02:45:49.0000] <annevk>
where it is said that the root element and body element set the background of the canvas

[02:45:50.0000] <zcorpan>
hey it's almost a decade ago first version of xhtml2 was published

[02:46:11.0000] <MikeSmith>
" The platform uses standard vocabularies such as Dublin Core, FOAF, PRISM, BIBO and OWL" .. OWL is a vocabulary?

[02:46:12.0000] <zcorpan>
http://www.w3.org/TR/2002/WD-xhtml2-20020805/

[02:46:20.0000] <MikeSmith>
/me goes to read OWL spec for first time

[02:46:24.0000] <MikeSmith>
zcorpan: party time

[02:46:36.0000] <annevk>
champagne!

[02:47:27.0000] <annevk>
omg that text is terrible

[02:47:35.0000] <annevk>
talks about elements, forgets about pseudo-elements

[02:47:44.0000] <annevk>
oh no

[02:47:46.0000] <MikeSmith>
one thing is, I looked back at mail archives and such, and it seems like the XHTML WG really stopped working on XHTML2 in 2006 or so

[02:47:48.0000] <annevk>
that's scoped by some box at the top

[02:48:21.0000] <annevk>
so it's just a confusing mix of terminology, but I guess that makes sense given the patchwork that CSS 2.1 is

[02:48:28.0000] <MikeSmith>
I think instead they were pretty much just working on RDFa, along with the whole XHTML 1 modularization thing

[02:48:59.0000] <MikeSmith>
annevk: I wonder who actually wrote that

[02:49:21.0000] <annevk>
Appendix E is pretty much Hixie I think

[02:49:35.0000] <MikeSmith>
oh

[02:50:00.0000] <annevk>
it has a list, for starters, and in general defines things more clearly than most of CSS

[02:50:40.0000] <MikeSmith>
"Elaborate description of Stacking Contexts" sounds like a heading that Hixie would mint

[02:50:56.0000] <annevk>
I think that is mostly because it has to start with an E

[02:51:02.0000] <MikeSmith>
ah

[02:51:04.0000] <MikeSmith>
yeah

[02:51:08.0000] <MikeSmith>
I seem to remember this now

[02:51:10.0000] <annevk>
CSS 2.1 has a nice joke with the appendices

[02:51:12.0000] <MikeSmith>
or maybe another case

[02:51:17.0000] <MikeSmith>
yeah

[02:51:41.0000] <jgraham>
"Extended" would have been more utilitarian

[02:52:24.0000] <MikeSmith>
Evil

[02:54:00.0000] <annevk>
well CSS 2.1 is cute, but if we're talking about how it should be done better than it should probably not look like this at all

[02:54:10.0000] <annevk>
defining a core piece of layout in an appendix is insane

[02:54:58.0000] <MikeSmith>
hey guys I got instagram on my Android handset so feel free to unfollow my twitter now

[02:55:20.0000] <MikeSmith>
https://twitter.com/#!/sideshowbarker/status/187419744058613760

[02:56:06.0000] <annevk>
oh yes, burgers without buns

[02:56:09.0000] <annevk>
I remember that place

[02:56:28.0000] <MikeSmith>
annevk: about CSS 2.1, it's like Star Trek original vs Star Trek the Next Generation

[02:56:34.0000] <MikeSmith>
you have to love both for what they are

[02:57:27.0000] <annevk>
yeah, that's prolly why some people secretly (and not so secretly) think HTML4 is better than HTML

[02:57:52.0000] <MikeSmith>
yeah

[02:58:01.0000] <MikeSmith>
and some people shop at Walmart

[03:02:44.0000] <hsivonen>
hmm. is it expected that the Windows installer of LibreOffice is unsigned?

[03:03:34.0000] <MikeSmith>
/me wonders why hsivonen is installing anything on Windows

[03:04:02.0000] <zcorpan>
hsivonen: the normal procedure on windows is to click through any security warnings

[03:10:06.0000] <hsivonen>
awesome. they sign using GPG but don't use the kind of signing Windows can verify

[03:27:24.0000] <MikeSmith>
it will be really interesting to see how the Encrypted Media Extensions work for WebKit progresses

[03:27:36.0000] <MikeSmith>
re https://lists.webkit.org/pipermail/webkit-dev/2012-April/020182.html

[03:33:14.0000] <Tuju>
hi, is there an irc channel for xml-related discussion?

[03:34:07.0000] <zcorpan>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/images/parsing-model-overview.svg should have fill="none" instead of fill="transparent" (transparent is invalid svg, apparently)

[03:34:32.0000] <annevk>
Tuju: dunno, but you can try here

[03:34:47.0000] <annevk>
Tuju: as far as browsers and XML go, this channel knows a fair bit

[03:35:33.0000] <Tuju>
annevk: ack. I'm wonder how i could do enumeration with xml-schema, so that instead of enumerating string choices, i would enumerate tag choices.

[03:36:06.0000] <annevk>
RobbertAtWork: ^^

[03:36:34.0000] <Tuju>
annevk: http://modweb.org/apache.scd see the customLog entry.

[03:36:44.0000] <MikeSmith>
Tuju: Ankh on #w3c might have a clue

[03:36:47.0000] <MikeSmith>
or he should at least

[03:36:57.0000] <MikeSmith>
since he's responsible for all the XML work at W3C

[03:37:04.0000] <Tuju>
MikeSmith: ack, sounds good. :)

[03:37:13.0000] <MikeSmith>
he's asleep now though

[03:37:16.0000] <MikeSmith>
or should be

[03:37:26.0000] <MikeSmith>
he lives in Toronto

[03:37:45.0000] <Tuju>
irc should run over xml and include localization metainfo....

[03:37:45.0000] <RobbertAtWork>
Tuju: Do you mean <xs:choice>? http://www.w3.org/TR/xmlschema11-1/#element-choice

[03:37:59.0000] <Ms2ger>
zcorpan, looks like that's my fault :)

[03:38:35.0000] <Tuju>
RobbertAtWork: hmm.....

[03:39:20.0000] <RobbertAtWork>
Tuju: Like this: <xs:choice><xs:element ref="p"/><xs:element ref="table"/><xs:element ref="ol"/></xs:choice>

[03:40:12.0000] <zcorpan>
Ms2ger: (╯°□°)╯︵ ┻━┻

[03:41:34.0000] <Tuju>
RobbertAtWork: http://www.w3schools.com/Schema/el_choice.asp    actually that looks very good.

[03:42:06.0000] <annevk>
Tuju: http://w3fools.com/

[03:42:55.0000] <RobbertAtWork>
annevk: come on, have you ever tried reading the XSD spec? it's… it's… special.

[03:43:36.0000] <Tuju>
RobbertAtWork: i agree. it should have more examples to illustrate the very condensated content. just like xhtml and html specs have.

[03:44:10.0000] <annevk>
RobbertAtWork: everyone sane knows XSD is best avoided :)

[03:45:03.0000] <Tuju>
annevk: anyway, funny site name and i guess they've a point in that statement.

[03:45:42.0000] <Tuju>
thou best way to fight against it would be by providing better content that would push that schools.com domain out of search engine results.

[03:46:31.0000] <annevk>
yeah

[03:47:15.0000] <Tuju>
and i don't mind if they're wrong in something, eventually xmllint will complain anyway.

[03:54:13.0000] <Ms2ger>
zcorpan, hmm?

[03:55:28.0000] <zcorpan>
Ms2ger: "Y U RITE INVALID SVG"

[03:55:46.0000] <Ms2ger>
"It works"

[03:56:04.0000] <Ms2ger>
What did you expect me to do, read the SVG spec?

[03:56:11.0000] <zcorpan>
no, test in opera :-)

[03:56:37.0000] <zcorpan>
anyway, i guess the svg spec will be fixed to support transparent eventually

[03:59:17.0000] <Tuju>
RobbertAtWork: it works and even scarier thing is that i changed it quite a bit and got syntax correct without typos and everything at first try.

[03:59:18.0000] <annevk>
I disagree with it being invalid SVG btw

[03:59:37.0000] <annevk>
SVG says it takes a CSS color, CSS colors evolved since CSS 2.0, deal with it

[03:59:39.0000] <Tuju>
RobbertAtWork: thanks, you saved my morning.

[03:59:58.0000] <Ms2ger>
zcorpan, heh, I guess I indeed didn't test in Opera

[04:01:18.0000] <foolip>
annevk, about http://lists.w3.org/Archives/Public/www-archive/2012Apr/0020.html

[04:01:38.0000] <foolip>
do you have a table of both alternatives in their original context?

[04:02:34.0000] <shepazu>
I think I agree with annevk… SVG1.1 didn't know about "transparent", but I don't see why a browser that knows SVG and CSS colors shouldn't allow it (in fact, it probably should allow it)

[04:02:50.0000] <annevk>
big5.json has about 7 different ways to decode the byte sequences foolip

[04:03:15.0000] <annevk>
foolip: or has 7 mapping tables, anyway

[04:03:50.0000] <zcorpan>
annevk: ah, then we should just fix opera

[04:04:09.0000] <foolip>
annevk, oh, that many

[04:04:57.0000] <annevk>
foolip: the interesting ones are "firefox", "internetexplorer" and one that ends in "-hk" I think

[04:05:12.0000] <annevk>
foolip: the rest is more or less the same

[04:08:41.0000] <zcorpan>
make an html page with a table with iframes with the first column being decoded as big5-firefox and encoded to utf-8, etc, and maybe with <mark>s around the interesting words, for easy comparison :-)

[04:11:28.0000] <foolip>
annevk, I'm looking at the pages manually, the first was actually UTF-8 thrown in at random

[04:12:36.0000] <annevk>
foolip: ah interesting, I expect that might have happened more often

[04:12:41.0000] <annevk>
foolip: these pages are weird

[04:13:10.0000] <foolip>
annevk, should I send a reply to www-archive, or how?

[04:13:22.0000] <annevk>
foolip: either that or on the WHATWG list

[04:13:35.0000] <foolip>
ok, I'll see how many I have time to check

[04:13:40.0000] <annevk>
foolip: I'll write up a summary at some point I guess on my blog or somewhere and then update the spec

[04:13:55.0000] <annevk>
currently working on forking Appendix E of CSS

[04:20:34.0000] <Tuju>
RobbertAtWork: any idea is it possible to embed metainformation, like explanation of those tags into schema, strings that could be used when creating a xml file based on that schema?

[04:20:47.0000] <Tuju>
or should it be in own file?

[04:21:43.0000] <RobbertAtWork>
Tuju: http://www.w3schools.com/schema/el_annotation.asp

[04:22:26.0000] <Tuju>
RobbertAtWork: aaaah, exactly something like that. :)

[04:38:01.0000] <annevk>
how are

[04:38:02.0000] <annevk>
"An element in this layer is rendered in the CSS model as an atomic unit

[04:38:03.0000] <annevk>
  that is a sibling to the root element;"

[04:38:03.0000] <annevk>
and

[04:38:09.0000] <annevk>
"The containing block for such an element is the initial containing

[04:38:09.0000] <annevk>
  block"

[04:38:11.0000] <annevk>
different?

[04:39:37.0000] <annevk>
/me reads more of CSS 2.1 than he wants

[04:40:18.0000] <zcorpan>
annevk: that happened to me as well when trying to define quirks :-)

[04:40:19.0000] <annevk>
nope it's different

[04:41:15.0000] <annevk>
I was pretty close to defining some parts of CSS in a better way at some point, but there just seemed to be too much negative inertia in the CSS group

[04:41:29.0000] <annevk>
so I worked on other problems instead, e.g. Encoding

[05:00:14.0000] <hsivonen>
I wonder how velocity changes would work under negative inertia

[05:00:58.0000] <annevk>
oops :)

[05:02:00.0000] <annevk>
what I meant is that the focus always is on how to publish and organize things; rather than on how to solve the big problems

[05:03:02.0000] <jgraham>
hsivonen: Well the simple newton's law effect would be like inverting the direction of the force

[05:03:07.0000] <zcorpan>
annevk wants big bangs

[05:03:37.0000] <jgraham>
i.e. F = m (dv/dt) uner m->(-m) is equivalent to F->(-F)

[05:04:08.0000] <jgraham>
Needless to say this would cause complications :)

[05:38:02.0000] <annevk>
hmm, so I guess I should have some algorithms for updating the fullscreen element stack

[05:38:11.0000] <annevk>
and have those invoke the top layer stack algo

[05:38:27.0000] <annevk>
not such a bad sick day

[05:50:29.0000] <annevk>
matjas: eum, css3-hyperlink is obsolete

[05:53:28.0000] <zcorpan>
argh, how did i manage to double post?

[05:53:37.0000] <zcorpan>
and why did i get the indentation wrong

[05:54:33.0000] <annevk>
aliens

[05:55:09.0000] <Ms2ger>
Predator

[05:55:30.0000] <annevk>
now fight

[05:56:47.0000] <charlvn>
don't fight, be kawaii like VA http://www.youtube.com/user/VenusAngelic

[05:58:05.0000] <zcorpan>
bugzilla goes to great lengths to prevent accidental double-post of a bug, but doesn't mind double-post of comments

[05:59:03.0000] <AryehGregor>
. . . It's got to have been like ten years since I've heard anyone say "kawaii".

[05:59:38.0000] <Ms2ger>
^

[06:01:30.0000] <charlvn>
AryehGregor: you definitely don't hang out with japanophiles then

[06:01:44.0000] <AryehGregor>
charlvn, well, I used to, around the time that Pokémon was trendy.

[06:02:11.0000] <charlvn>
AryehGregor: eh, yes that has definitely been a while then :P

[06:03:28.0000] <charlvn>
actually kawaii isn't so bad, wait until they start about moe moe and maid cafes, then the conversation is turning full-out otaku

[06:05:38.0000] <charlvn>
on an unrelated note, i have been toying with using jsoup from python using jython and combining that with pygments

[06:06:05.0000] <charlvn>
the end result is extremely hacky but minimalist code (sounds a bit like perl)

[06:06:08.0000] <charlvn>
https://gist.github.com/2310803

[06:06:42.0000] <matjas>
annevk: obsoleted by …?

[06:06:49.0000] <Ms2ger>
HTML

[06:07:06.0000] <annevk>
matjas: sanity and also HTML

[06:07:23.0000] <matjas>
hah

[06:07:42.0000] <annevk>
unfortunately TR/ documents are hard to correct

[06:07:46.0000] <annevk>
even if they're only drafts

[06:07:54.0000] <annevk>
so they will confuse people for years

[06:08:02.0000] <annevk>
in this case eight years now

[06:22:08.0000] <hsivonen>
No new IE6 countdown champions this year yet. :-(

[06:26:03.0000] <zcorpan>
hsivonen: any firefox 3.6 countdowns?

[06:36:30.0000] <annevk>
Hixie: http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html has your top layer thing now

[06:36:41.0000] <annevk>
zcorpan: will look at your Fullscreen bugs in a minute

[06:39:56.0000] <zcorpan>
annevk: s/remove/pop/ ?

[06:40:42.0000] <zcorpan>
or isn't it pop? :-)

[06:41:05.0000] <annevk>
not if I define empty in terms of remove

[06:41:17.0000] <annevk>
well could still be

[06:41:24.0000] <annevk>
remove just seemed safer

[06:41:41.0000] <zcorpan>
k

[06:41:47.0000] <annevk>
but maybe I should call it add instead of push then

[06:41:53.0000] <annevk>
and have add perform a push operation

[06:42:05.0000] <annevk>
meh

[06:46:43.0000] <zcorpan>
ok now a quiz i don't know the full answer to :-)

[06:48:21.0000] <annevk>
App H

[06:48:34.0000] <Ms2ger>
^

[06:48:36.0000] <annevk>
the appendices themselve

[06:48:55.0000] <annevk>
/me goes back to fixing bugs

[06:49:04.0000] <Ms2ger>
\o/

[06:49:33.0000] <zcorpan>
annevk: i know those too, but i suspect there are more

[06:52:18.0000] <annevk>
zcorpan: I think orange might be an easter egg

[06:53:16.0000] <annevk>
zcorpan: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16449 nitpicking much? :p

[06:53:48.0000] <zcorpan>
can't help it! :-)

[06:53:52.0000] <zcorpan>
what's with orange?

[06:54:08.0000] <annevk>
it was added for fun

[06:54:23.0000] <annevk>
or for the glory of the Dutch

[06:54:26.0000] <annevk>
prolly the latter

[07:15:36.0000] <charlvn>
if you put the orange and the green together it looks more like the flag of ireland

[07:16:39.0000] <zcorpan>
annevk: pretty responsive spec work with fullscreen

[07:17:18.0000] <annevk>
I like <dialog>

[07:19:25.0000] <zcorpan>
annevk: some Its should be It's

[07:20:56.0000] <zcorpan>
"rendered as an atomic unit as it were a sibling of the root element." missing an "if"

[07:21:30.0000] <annevk>
yup

[07:25:11.0000] <zcorpan>
annevk: aren't width/height unnecessary to set when all of top/right/bottom/left are set?

[07:25:26.0000] <zcorpan>
they get ignored anyway, i think

[07:25:47.0000] <annevk>
these are from roc's styles

[07:25:57.0000] <annevk>
I haven't really thought hard about that

[07:26:10.0000] <annevk>
I wonder more why there's no newline after the namespace declaration

[07:26:24.0000] <annevk>
bug in Opera

[07:26:28.0000] <annevk>
baaah

[07:26:55.0000] <annevk>
zcorpan: are you sure that is the case even for replaced elements?

[07:27:03.0000] <annevk>
zcorpan: I think they might get intrinsic sizing

[07:27:11.0000] <annevk>
zcorpan: which is not what we want for e.g. <iframe>

[07:27:34.0000] <annevk>
zcorpan: you're making me read CSS 2.1 again

[07:27:37.0000] <annevk>
this is a sad day

[07:28:53.0000] <annevk>
zcorpan: see http://www.w3.org/TR/CSS21/visudet.html#abs-replaced-width for why we likely need height/width

[07:28:54.0000] <zcorpan>
oh. that may well be true

[07:29:01.0000] <zcorpan>
ok

[07:30:03.0000] <zcorpan>
didn't know about that

[07:31:00.0000] <zcorpan>
also, i was wrong about what gets ignored

[07:31:23.0000] <zcorpan>
in case of over-constraining for non-replaced

[07:33:17.0000] <zcorpan>
annevk: to make it easier to put the fullscreen styles in the same style sheet as the rest of the ua styles, maybe you should make html the default namespace and use *|*:fullscreen

[07:35:51.0000] <annevk>
not unreasonable

[07:36:23.0000] <annevk>
done

[08:17:01.0000] <annevk>
foolip: did you get anywhere? I might take another look then

[08:17:14.0000] <foolip>
annevk, I'm about half way through

[08:17:29.0000] <annevk>
wow cool

[08:17:59.0000] <foolip>
annevk, it would help a lot if you could help me distill big5.json to the different options that there are for each weird sequence

[08:18:24.0000] <foolip>
now I'm just testing with the browsers that I have, and in some cases none of them do the right thing

[08:18:53.0000] <annevk>
I have these two functions

[08:18:54.0000] <annevk>
def get_index(lead, trail):

[08:18:55.0000] <annevk>
    row = 0xFE-0xA1 + RANGE + 1

[08:18:55.0000] <annevk>
    cell = (trail-0xA1 + RANGE) if trail > (0x7E+1) else trail - 0x40

[08:18:55.0000] <annevk>
    return (lead-0x81) * row + cell

[08:18:59.0000] <annevk>
and

[08:19:05.0000] <annevk>
def get_bytes(index):

[08:19:06.0000] <annevk>
    row = 0xFE-0xA1 + RANGE + 1

[08:19:06.0000] <annevk>
    lead = (index / row) + 0x81

[08:19:06.0000] <annevk>
    cell = index % row

[08:19:06.0000] <annevk>
    trail = (cell + 0xA1 - RANGE)  if cell > RANGE else cell + 0x40

[08:19:06.0000] <annevk>
    return (lead, trail)

[08:19:38.0000] <annevk>
by using get_index you can use the position in any of the browsers' arrays

[08:20:28.0000] <annevk>
if you have some code point, by first finding it in the index and then using get_bytes on its position, you can do the reverse

[08:21:00.0000] <foolip>
annevk, ok, let me try that with some of the results I have

[08:21:26.0000] <annevk>
oh sorry

[08:21:31.0000] <annevk>
you also need

[08:21:32.0000] <annevk>
RANGE = 0x7E-0x40+1

[08:21:52.0000] <annevk>
(with apologies to hsivonen)

[08:22:04.0000] <foolip>
http://html5.org/temp/big5.json is up to date?

[08:22:28.0000] <annevk>
yes, I doubt the mapping has changed the last week :)

[08:22:37.0000] <foolip>
:P

[08:27:30.0000] <annevk>
so TR/dom we published today lacks takeRecords()?

[08:27:32.0000] <annevk>
haha

[08:29:04.0000] <Ms2ger>
Well, yes

[08:31:24.0000] <dglazkov>
good morning, Wha?...wg!

[08:32:16.0000] <foolip>
annevk, judging from the results so far, just using the -hk tables will fix these pages

[08:34:00.0000] <annevk>
wb dglazkov

[08:34:22.0000] <annevk>
foolip: sweet

[09:56:46.0000] <annevk>
jsbell: btw, apparently ES6 will get some kind of byte representation, might want to check with them just in case they have encoding API plans too

[09:57:28.0000] <annevk>
jsbell: https://mail.mozilla.org/listinfo/es-discuss

[09:57:35.0000] <annevk>
/me is not subscribed

[09:57:38.0000] <jsbell>
annevk: I follow es-discuss

[09:57:49.0000] <jsbell>
binary types for es6 haven't come up in ages

[09:58:42.0000] <jsbell>
annevk: latest thinking *should* be summarized in the "binary data" section of http://wiki.ecmascript.org/doku.php?id=harmony:proposals

[09:59:26.0000] <jsbell>
Last active discussion I heard was that reality would be accepted and everything would be built on top of Typed Array ArrayBuffers, but again there hasn't been active discussion recently.

[10:01:55.0000] <jsbell>
but thanks for the heads-up. I should ping dherman

[10:08:50.0000] <foolip>
annevk, I hope you're not in a hurry, I'll have to wait until next week to finish up the email

[10:09:51.0000] <Ms2ger>
foolip, noooooooo ;)

[10:14:28.0000] <TabAtkins>
zcorpan: Yes, it absolutely should get the "dont' look at me" treatment.  I don't think it's in the repo, though.

[10:17:34.0000] <Ms2ger>
I guess it's in the MO folder

[10:24:12.0000] <TabAtkins>
Hixie: The "Canonical Order" line is just to define the serialization order.  The serialization of the individual bits is defined by the datatype of the bit.

[10:47:17.0000] <annevk>
foolip: k, I might dig into gbk then

[10:47:45.0000] <annevk>
jsbell: cool

[10:56:22.0000] <danbri>
Hixie, how/where would you prefer to receive a proposal for multiple types in Microdata?

[10:56:23.0000] <Hixie>
abarth: Michal raises an interesting point regarding not leaking to advertisers the origin of the top-level page, since that would be a privacy leak if they can in any way (e.g. IP address, broader fingerprint) identify the user

[10:56:52.0000] <Hixie>
danbri: nowhere. :-) i would like to hear about concrete use cases for multiple types in the whatwg list, though.

[10:57:09.0000] <TabAtkins>
Hixie: Maybe sandboxes can't read up past the barrier?

[10:57:24.0000] <danbri>
if you get concrete use cases, is there some prayer you'll change the spec, or that ship has sailed?

[10:57:43.0000] <Hixie>
danbri: if there are convincing concrete use cases and implementors wishing to implement, it's never too late

[10:57:57.0000] <Hixie>
danbri: (the point being that syntax proposals should come after we've established that there's a problem -- so far all the discussions proposing multiple unrelated types have been theoretical use cases at best)

[10:58:03.0000] <Hixie>
TabAtkins: that might work

[10:58:34.0000] <danbri>
ok, i'll pull things together in w3c wiki and make a whatwg email of it

[10:59:04.0000] <Hixie>
danbri: the shorter the better, fwiw. i tend to find that the longer the description of the use case, the more vague and hand-wavy it is.

[10:59:19.0000] <Hixie>
danbri: the ideal use case is something like Foo Corp (a real company) is trying to do X and Y and cannot.

[10:59:38.0000] <danbri>
ok.

[11:00:00.0000] <Hixie>
danbri: as opposed to "maybe one day there will be two companies and they will support different vocabularies covering similar topics and it would be nice if we could in theory support both"

[11:00:28.0000] <Hixie>
danbri: or "today there are three vocabs for topic X, none of them actually implemented, but on the off-chance that one of them eventually is, and to hedge our bets, we'd like to use all three today"

[11:00:45.0000] <zcorpan>
"and to solve this I've developed RDF, now suck it up"

[11:00:55.0000] <Hixie>
danbri: both of which are rather uncompelling use cases (if nobody is consuming the data, why bother producing it, let alone producing it in two different vocabs)

[11:01:01.0000] <danbri>
schema.org (a group of engineers from several big companies) are trying to avoid going insane by having everything in their schema. And so they want 3rd parties to be able to declare subclasses directly. But they can't commit to maintaining a giant mush of all the 3rd party stuff out there, so will write consumer code only for known classes. Multiple types would all partial understanding, with 3rd parties adding detai

[11:01:02.0000] <danbri>
l while central schema has a useful core.

[11:01:38.0000] <Hixie>
danbri: schema.org's multiple type use case is already supported, since they just have a single vocabulary.

[11:01:54.0000] <Hixie>
common to all types

[11:02:06.0000] <Hixie>
(albeit with some properties only valid on some types)

[11:02:18.0000] <danbri>
no, because we want 3rd parties to be able to extend that vocab without having to agree everything with us.

[11:02:46.0000] <Hixie>
they can do that too, by just using URLs for their extension points (who is consuming their extension properties anyway?)

[11:03:47.0000] <Hixie>
("extension" isn't a concrete use case, btw)

[11:03:52.0000] <TabAtkins>
So the use-case is "I want to publish data using a schema.org vocab so it'll get picked up by the googlebot, but I want to add additional details that aren't in the official vocab.".

[11:03:58.0000] <TabAtkins>
What are you doing with the additional details?

[11:04:07.0000] <TabAtkins>
I guess that's Hixie's "Who's consuming it?" question.

[11:04:16.0000] <Hixie>
yeah, as tab says, "I want to add additional details" isn't a concrete use case

[11:04:16.0000] <danbri>
so a single item description can have a type of e.g. http://schema.org/Person and http://historical-data.org/HistoricalPerson ?

[11:04:27.0000] <Hixie>
so long as both those types use the same vocabulary

[11:04:35.0000] <danbri>
Google are consuming it, amongst others

[11:04:46.0000] <Hixie>
google aren't consuming the non-schema.org extensions

[11:04:53.0000] <TabAtkins>
danbri: Google are consuming the schema.org properties, yes.  Who's consuming the extra ones you want to add?

[11:05:05.0000] <danbri>
but they want the non-schema.org extensions to be there

[11:05:22.0000] <danbri>
... so that if they are successful they can be consumed

[11:05:45.0000] <Hixie>
so just put them in the schema.org "namespace" and use a wiki to do first-come-first-served name registration

[11:05:49.0000] <Hixie>
same as rel=""

[11:05:57.0000] <Hixie>
so it's still all the same vocab

[11:06:35.0000] <Hixie>
bbiab

[11:48:47.0000] <manu-db>
hsivonen: We discussed your responses to ISSUE-130 and ISSUE-132 (@rel, @rev, @href and @src in HTML5+RDFa) today: http://www.w3.org/2010/02/rdfa/meetings/2012-04-05#Responses_to_Henri_Sivonen

[11:49:03.0000] <manu-db>
I'll do a formal response in the next few days, just giving you a heads-up.

[11:49:54.0000] <annevk>
Hixie: "just tied to sandbox" and then advertisers will demand not be sandboxed...

[11:50:20.0000] <annevk>
Hixie: that can happen already, but more so if fingerprinting features become available

[11:50:47.0000] <Hixie>
annevk: well, whatever solution we provide will be optional, so that argument applies to everything

[11:51:03.0000] <Hixie>
annevk: what do you mean by "fingerprinting features become available"?

[11:52:03.0000] <annevk>
disabling sandbox, you get ancestorOrigins

[11:54:43.0000] <Hixie>
we could fake it, i guess

[11:54:52.0000] <Hixie>
make ancestorOrigins act as if it only contained the parent

[11:55:00.0000] <Hixie>
so then you can't tell

[11:55:36.0000] <annevk>
Google can tell because of indexing

[11:55:42.0000] <annevk>
and others could do likewise

[11:56:22.0000] <annevk>
note to self for tomorrow: maybe instead of partial Element for Fullscreen put it on HTMLElement/SVGSvgElement

[11:56:31.0000] <annevk>
doesn't make much sense for <rect> and such

[11:56:58.0000] <Hixie>
well anyway my point is that the argument applies to any solution

[11:57:06.0000] <Hixie>
it's not special for sandboxing

[12:00:03.0000] <annevk>
ah yeah, so maybe we shouldn't do it

[12:00:44.0000] <annevk>
if the parent cooperates it can already be exposed of course, but this makes it a lot easier

[12:28:19.0000] <Hixie>
annevk: so how do you address the security issue in the non-advertising case?

[14:24:20.0000] <annevk>
Hixie: touche

[14:24:39.0000] <annevk>
touché, rather

[14:25:23.0000] <annevk>
I named Fullscreen a Living Standard btw now that you guys solved the final problem and I specced it

[14:32:01.0000] <rniwa>
AryehGregor: yt?

[14:33:20.0000] <annevk>
and yay, Notifications got an update finally

[14:33:24.0000] <annevk>
though it needs more work

[14:33:31.0000] <annevk>
maybe I should help out...

[14:33:57.0000] <annevk>
/me -> sleeep

[14:44:43.0000] <sedovsek>
annevk: I see you're going to fronteers.

[14:45:05.0000] <sedovsek>
Just spoted you among attendees on lanyrd, http://lanyrd.com/2012/fronteers/

[15:06:23.0000] <Hixie>
i wonder what the default value of anchor-point should be

[15:06:26.0000] <Hixie>
it could be 'auto'

[15:06:34.0000] <Hixie>
but then i wonder what algorithm to use to determine the anchor point

[15:06:40.0000] <Hixie>
it could be something really clever...

[15:06:45.0000] <TabAtkins>
Where's spec/proposal for dialogs that explains anchor-point?

[15:06:56.0000] <Hixie>
http://wiki.whatwg.org/wiki/Dialogs#Proposal

[15:07:01.0000] <Hixie>
"explains" may be a bit strong though

[15:07:13.0000] <TabAtkins>
"Proposes in a handwavey fashion" is sufficient.

[15:08:44.0000] <TabAtkins>
Urgh, this *really* needs the "position from an arbitrary box" proposal.

[15:08:55.0000] <TabAtkins>
Maybe not the full one on my blog, but a simplified one.

[15:08:55.0000] <Hixie>
ignore the point where it says "the anchor point is the center of the given element's first box", i want it to be "the anchor point is the anchor point of the given element's first box"

[15:09:15.0000] <Hixie>
i'm fine with using something else if there's a spec i can point to or if i can spec something better than what i'm doing

[15:09:51.0000] <TabAtkins>
Ok, so your intention is that the dialog and the passed element just align their anchor points?

[15:10:06.0000] <Hixie>
yeah

[15:10:26.0000] <Hixie>
the idea being that you'd put the dialog's image border's "<" bit at the anchor point of the dialog

[15:11:14.0000] <TabAtkins>
Okay, hm.  I don't think you actually want to specify the two anchor points separately.  The positioning element should specify both of them.

[15:12:03.0000] <Hixie>
happy to entertain proposals if you have any :-)

[15:15:16.0000] <TabAtkins>
Simplest method is to define "position-root: auto | <element-reference>;", which changes the positioning container for the element.  'auto' is the standard behavior, based on the 'position' value.

[15:15:26.0000] <TabAtkins>
Then just use t/r/b/l as normal.

[15:15:46.0000] <TabAtkins>
You need some cycle detection, unfortunately.

[15:16:07.0000] <Hixie>
how do i align a dialog so that the point 10px down its left edge is 1em down the target's right edge, with that?

[15:16:36.0000] <TabAtkins>
Ah, if you want to get that fancy, you want the fuller model that I present in http://www.xanthir.com/blog/b48H0

[15:17:19.0000] <TabAtkins>
Or, you may be able to get away with "position-root: auto | [ <element-reference> <position>? ];"

[15:17:23.0000] <Hixie>
(with my proposal, you just say  "anchor-point: right at 1em from top"  on the target,  "anchor-point: left at 10px from top"  on the dialog, and you call  dialog.show(target) )

[15:17:59.0000] <TabAtkins>
Hixie: How do you hang multiple dialogs off a single element?

[15:18:07.0000] <TabAtkins>
That want different anchor-points on the target?

[15:18:14.0000] <Hixie>
you don't

[15:18:40.0000] <Hixie>
(nobody showed an example of that in the list of use cases i'm using to design this)

[15:18:44.0000] <TabAtkins>
What's with all your "at" and "from" keywords?  What do those do?

[15:18:48.0000] <TabAtkins>
You're just specifying a point.

[15:19:01.0000] <TabAtkins>
"right 1em top" works.

[15:19:11.0000] <Hixie>
the syntax is  <edge> at [ <length> from ] <edge-on-other-axis>

[15:19:15.0000] <TabAtkins>
That's handled by the <position> type defined in V&U.

[15:19:44.0000] <TabAtkins>
That seems like a silly way to define a point on a box.

[15:20:01.0000] <Hixie>
how so?

[15:20:11.0000] <Hixie>
(it's a point on an edge, not a point on a box)

[15:20:22.0000] <TabAtkins>
Why are you restricting it to points on edge?

[15:20:36.0000] <Hixie>
because all the use cases are for aligning edges

[15:21:09.0000] <TabAtkins>
It doesn't make things any simpler, and actually complicates things by not just using the <position> syntax.

[15:21:41.0000] <TabAtkins>
Using <position> handles edge-aligning exactly as easily, with slightly less typing, and also handles more general cases.

[15:24:15.0000] <Hixie>
how do you do the equivalent of "right at 1em from bottom" with <position>?

[15:24:23.0000] <TabAtkins>
"right 1em bottom"

[15:24:36.0000] <TabAtkins>
Oh, sorry.

[15:24:39.0000] <TabAtkins>
"right bottom 1em"

[15:24:49.0000] <TabAtkins>
Misread your syntax because I'm so used to the ordering that <position> uses.  ^_^

[15:26:59.0000] <Hixie>
/me finally manages to follow links to the right spec and mumbles (a) something about living standards and (b) something about spec quality

[15:27:17.0000] <Hixie>
yeah, i guess <position> would work

[15:27:25.0000] <Hixie>
kinda ugly, but not fatally so

[15:27:41.0000] <TabAtkins>
Um. It's *exactly* your syntax, just without the useless extra keywords.

[15:28:04.0000] <Hixie>
the "useless extra keywords" are what makes it usable :-)

[15:29:45.0000] <TabAtkins>
Disagree, but whatever. ^_^  More importantly, <position> is used in several places, and having a new syntax for it, particularly one that orders the values differently, would be excessively confusing.

[15:30:06.0000] <Hixie>
i am already convinced :-)

[15:30:13.0000] <TabAtkins>
NO YOU MUST SUBMIT

[15:30:19.0000] <Hixie>
man, the chain of specs to get to <position> is a poor story though

[15:30:47.0000] <Hixie>
css3 values and units points to two different definitions, and the css3 background module's definition is just completely devoid of conformance criteria

[15:30:48.0000] <TabAtkins>
Hm? You go V&U to B&B.  I'd prefer defining it directly in V&U, but whatever.

[15:31:12.0000] <Hixie>
V&U points to CSS2.1 first, then B&B in a second sentence.

[15:31:52.0000] <TabAtkins>
Yeah, that's to avoid gating our Rec on B&B's status.

[15:31:52.0000] <Hixie>
and in fact the only normative chain is to 2.1, strictly speaking

[15:32:13.0000] <Hixie>
so i guess i'd have to reference b&b if i wanted to do a strictly correct job here

[15:32:25.0000] <TabAtkins>
No, you should reference V&U.

[15:32:37.0000] <Hixie>
then i don't get the b&b definition :-)

[15:32:45.0000] <Hixie>
since i'm hoping this won't remain my problem for long, i don't much care though

[15:33:45.0000] <TabAtkins>
Um, I don't understand.  In V&U it clearly says that the syntax for <position> is updated in B&B, and UAs that support B&B must interpret <position> as defined there.

[15:34:49.0000] <Hixie>
right

[15:34:55.0000] <Hixie>
but what if my ua doesn't support b&b?

[15:35:16.0000] <Hixie>
also, it's kinda special to define something as X and then say that it must be interpreted as X'. :-)

[15:35:27.0000] <TabAtkins>
That's how you do modules!

[15:35:32.0000] <Hixie>
modules are dumb

[15:35:44.0000] <Hixie>
especially on the web

[15:35:51.0000] <TabAtkins>
Shrug.

[15:35:59.0000] <TabAtkins>
It's an alternate formulation of the living standard.

[15:36:40.0000] <Hixie>
it's clearly nothing like the living standard since there's not one canonical url which is updated over time, but that's not the issue

[15:36:52.0000] <Hixie>
modularisation is orthogonal to living vs snapshot

[15:37:31.0000] <TabAtkins>
Not quite.  I challenge you to produce a snapshot document that's not modularized without being drastically out-of-date.

[15:37:51.0000] <TabAtkins>
Your choices are either "one document, living", or "modules, living or snapshot" if you want accurate specs.

[15:38:07.0000] <Hixie>
snapshot documents are always out of date

[15:38:13.0000] <Hixie>
that's the problem with snapshots :-)

[15:38:41.0000] <TabAtkins>
Sure, but you require modules if you want the out-of-date-ness to be minimized.

[15:39:32.0000] <Hixie>
nah, you can have rarely-updated living modules just like you can have frequently-updated monolithic RECs

[15:40:10.0000] <Hixie>
the rate of update is also orthogonal to living vs REC and module vs monolithic

[15:40:17.0000] <TabAtkins>
Frequently-updated monolithic RECs are a theoretical beast that's never been observed in reality.

[15:40:48.0000] <Hixie>
CSS 2.1 was a frequently-updated monolithic REC from about 2000 to 2006

[15:40:53.0000] <Hixie>
well

[15:40:58.0000] <Hixie>
frequently-updated monolithic CR

[15:41:38.0000] <Hixie>
not as frequent as you or i may wish these days, i'll grant you

[16:20:00.0000] <Hixie>
i wonder if we need an attribute a bit like "disabled" but that globally prevents a subtree from being focused or having anything within it activated, without actually making the descendants appear disabled

[16:20:28.0000] <Hixie>
so that semi-modal dialogs (dialogs that are locally modal but not across the entire web app) can be implemented

[16:20:37.0000] <TabAtkins>
Like "pointer-events:none"?

[16:20:45.0000] <Hixie>
but for tabbing and everything

[16:20:46.0000] <TabAtkins>
With more magic to prevent tabbing.

[16:20:54.0000] <TabAtkins>
"inert"

[16:20:57.0000] <Hixie>
and accesskey="", and ATs, and so on

[16:21:24.0000] <Hixie>
or maybe we should just have showModal() take an element relative to whom subtree the dialog should be modal

[16:21:31.0000] <Hixie>
to whose, rather

[16:26:51.0000] <Hixie>
nah, i think a global attribute is probably better

[16:27:01.0000] <Hixie>
there could be multiple subtrees to disable

[16:28:09.0000] <TabAtkins>
So the code that shows the dialog sprinkles some @inert aroudn the DOM, and the code that closes the dialog removes them?

[16:29:24.0000] <Hixie>
TabAtkins: i guess, yeah

[16:30:05.0000] <TabAtkins>
Do we expect UAs to offer their own ways to close non-modal dialogs?

[16:30:34.0000] <Hixie>
TabAtkins: might be useful for other scenarios too, e.g. i have an app with several mutually exclusive <section>s, but because I leave the inactive ones slightly visible in the background (when they have hidden=""), instead of making them display:none, I still need a way to make them inert

[16:30:46.0000] <Hixie>
i don't think i'd want to use <Dialog> for those really

[16:30:54.0000] <Hixie>
TabAtkins: no

[16:31:04.0000] <Hixie>
TabAtkins: non-modal dialogs are basically just <div>s

[16:33:47.0000] <TabAtkins>
Okay, then I'm okay with that.

[16:34:06.0000] <TabAtkins>
Since the only way to close a non-modal dialog would be through an author-provided function.

[16:35:14.0000] <Hixie>
i wonder if there's some overlap between this inert=""ness and the inertness we need in templates

[16:35:26.0000] <TabAtkins>
No.

[16:35:31.0000] <Hixie>
i'm guessing not (and that templates need much more)

[16:35:44.0000] <TabAtkins>
That "inertness" is more "no parsing implications to the surrounding content".

[16:35:53.0000] <TabAtkins>
Plus "no network activity".

[16:35:59.0000] <TabAtkins>
In addition to the inertness you want for this.

[16:43:28.0000] <Hixie>
yeah

[16:44:27.0000] <zewt>
grr

[16:44:36.0000] <zewt>
nothing is quite as frustrating as "if we change this we'll break some tests, so let's not do it"

[16:44:41.0000] <TabAtkins>
wtf

[16:44:45.0000] <TabAtkins>
Where?

[16:45:01.0000] <zewt>
tests being used as an excuse not to improve something is pretty much the exact opposite to why tests exist

[16:45:14.0000] <zewt>
Also, if the behavior is changed, the 1.0.1 conformance suite will no longer run on future WebGL implementations, because it tests passing null for WebGLObjects and expects that no exceptions are thrown.

[16:45:28.0000] <zewt>
not a hard "we can't do this because tests", but it shouldn't even be a consideration

[16:47:19.0000] <zewt>
also, surprise, webgl returning null on error causes lots of bugs in user code

[16:47:44.0000] <zewt>
also frustrating since the entire industry learned that C-style error handling is badly error prone a couple decades ago


2012-04-06
[00:53:16.0000] <annevk>
in WebKit, document.body.setAttribute() creates undefined="undefined"

[00:53:25.0000] <annevk>
that's still not fixed?

[00:56:58.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=315805

[00:57:31.0000] <AryehGregor>
annevk, that's a problem with their WebIDL bindings, right?  Don't all methods do that, pretty much?

[00:57:40.0000] <AryehGregor>
They don't throw on too few arguments being passed.

[00:59:18.0000] <annevk>
AryehGregor: f8dy fixed their IDL bindings, but I guess he never fixed the broken methods

[01:01:04.0000] <AryehGregor>
If he fixed the IDL bindings, how could that not throw?  It would have to have the params declared as optional or something.

[01:01:13.0000] <annevk>
right

[01:01:53.0000] <annevk>
make for DOM takes almost 10 seconds?

[01:01:59.0000] <annevk>
what is so difficult?

[01:38:16.0000] <annevk>
the problem with the namespace algorithms in DOM seems to be that they do not account for multiple attributes

[01:38:28.0000] <annevk>
I guess nobody looks at them and that's why we haven't noticed until now?

[01:38:34.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#locate-a-namespace-prefix

[01:38:53.0000] <annevk>
you could have multiple attributes xmlns:test="x" xmlns:test2="x" etc.

[01:39:03.0000] <annevk>
which local name you return is not defined

[01:39:19.0000] <annevk>
then in http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#locate-a-namespace you have the same problem

[01:39:54.0000] <annevk>
actually, in that case you can have only one such attribute I think

[01:40:52.0000] <annevk>
other question

[01:41:06.0000] <annevk>
should http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-element-setattributens have all those restrictions given that setAttribute() can be used to circumvent them?

[01:55:40.0000] <Von_Davidicus>
Hello...

[01:55:40.0000] <Ms2ger>
Or maybe add the restrictions to setAttribute? Or would that break facebook?

[01:55:40.0000] <Ms2ger>
Also, <!doctype html> on http://www.w3.org/TR/2012/WD-dom-20120405/ , I guess I'll have to believe that they mean it now

[01:55:40.0000] <annevk>
Ms2ger: I just removed those

[01:55:40.0000] <Ms2ger>
Oh

[01:55:40.0000] <annevk>
Ms2ger: nobody implements them

[01:55:40.0000] <Ms2ger>
Mm

[01:58:00.0000] <annevk>
Von_Davidicus: use <section> combined with <h1>

[01:59:26.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=742549 o_O

[02:01:50.0000] <Von_Davidicus>
I thought <h1> was the top-level header.

[02:02:17.0000] <annevk>
that changed with the introduction of <section>

[02:03:25.0000] <Von_Davidicus>
That seems a bit screwy with semantics, but then, I'm easily confuzzled.  :)

[02:04:48.0000] <annevk>
HTML is not entirely logical either, so that's fine :)

[02:06:13.0000] <Von_Davidicus>
Oh, don't I know it.  HTML seems really simple--right up until you try to -explain- it.

[02:09:19.0000] <Von_Davidicus>
So does <section> essentially reset the header numbering?  For example, I could have the headers in the main page, and then have, say, <section class="code_example"> and start the example heading over at <h1>?

[02:12:21.0000] <annevk>
yeah more or less

[02:12:47.0000] <annevk>
Von_Davidicus: reading http://www.whatwg.org/C#outline might help

[02:16:18.0000] <Von_Davidicus>
<!DOCTYPE HTML PUBLIC "ISO/IEC 15445:2000//DTD HyperText Markup Language//EN">

[02:16:18.0000] <Von_Davidicus>
				

[02:16:28.0000] <Von_Davidicus>
", will it still validate?

[02:16:35.0000] <Von_Davidicus>
And sorry for the linebrakes.

[02:16:53.0000] <annevk>
don't think so

[02:17:04.0000] <annevk>
try http://validator.nu/ to be sure

[02:17:22.0000] <Von_Davidicus>
/me was kidding.  :)

[02:17:41.0000] <annevk>
I think we do allow some old doctypes

[02:18:10.0000] <annevk>
but better to stick to <!doctype html>

[02:19:48.0000] <annevk>
Ms2ger: about features strings, can you ping eseidel somehow about which he wants to support?

[02:20:00.0000] <annevk>
Ms2ger: he was the one you were talking with this about that right?

[02:20:05.0000] <annevk>
Ms2ger: and maybe ask Gecko too?

[02:20:15.0000] <annevk>
Ms2ger: source code or otherwise :p

[02:22:38.0000] <annevk>
ooh

[02:22:45.0000] <annevk>
Mozilla just moved fullscreen to Element

[02:22:46.0000] <annevk>
hmm

[02:23:03.0000] <Von_Davidicus>
Another question, more serious this time:  how will XHTML5 handle character entity references?  I tried it and got Firefox's Yellow Screen of Death.

[02:25:46.0000] <annevk>
Von_Davidicus: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-xhtml-syntax.html#the-xhtml-syntax has some details

[02:25:54.0000] <annevk>
Von_Davidicus: best to just use HTML

[02:26:29.0000] <annevk>
Von_Davidicus: or stay away from named entities

[02:28:36.0000] <Von_Davidicus>
Okay.

[02:34:05.0000] <annevk>
http://trac.webkit.org/changeset/111028/trunk/Source/WebCore/dom/Document.idl

[02:34:07.0000] <annevk>
hmm

[02:34:11.0000] <annevk>
both Mozilla and W3C version

[02:34:19.0000] <annevk>
never mind that Fullscreen is not done at the W3C

[02:34:29.0000] <annevk>
at least not that I know of

[02:59:19.0000] <annevk>
haha

[02:59:21.0000] <annevk>
http://www.alistapart.com/authors/�/tantekcelik

[03:03:36.0000] <Von_Davidicus>
/me ponders whether or not to turn one of his pages from HTML 4.01 to HTML5

[03:09:33.0000] <Philip`>
Von_Davidicus: You shouldn't bother, unless it'll give any practical benefits to your page's users

[03:09:46.0000] <Philip`>
Better to spend the effort on more meaningful changes :-)

[03:11:00.0000] <Von_Davidicus>
Well, the page hasn't needed a change in a while.

[03:16:17.0000] <Ms2ger>
annevk, I dunno if I talked to anybody at webkit

[03:18:45.0000] <annevk>
Ms2ger: but I do

[03:18:48.0000] <annevk>
Ms2ger: https://bugs.webkit.org/show_bug.cgi?id=76214#c5

[03:19:36.0000] <Ms2ger>
Ah, indeed

[03:20:48.0000] <Von_Davidicus>
Hmmm...  if the "checked" attribute isn't allowed, how DO I preselect a checkbox?

[03:22:12.0000] <Von_Davidicus>
or, for that matter, "readonly"?

[03:22:53.0000] <annevk>
it is allowed

[03:22:56.0000] <Philip`>
Von_Davidicus: Who says it's not allowed?

[03:23:15.0000] <Von_Davidicus>
Well, the W3C validator I just checked my page on.

[03:24:45.0000] <Philip`>
It reports no error for me for e.g. "<!DOCTYPE html><title></title><input type=checkbox checked>"

[03:25:24.0000] <Philip`>
(though the spec doesn't allow readonly on checkboxes)

[03:26:15.0000] <Von_Davidicus>
The tags I'm having trouble with are:  <input name="Rods_Count" class="rod_count readonly" type="hidden" readonly="readonly" value="0">  and <input name="Rods_Choose" class="rod_check" type="hidden" checked="checked">.

[03:26:26.0000] <volkmar>
annevk: where is window.fullscreen spec'd?

[03:26:59.0000] <Philip`>
Von_Davidicus: checked is meaningless (hence not allowed) for type=hidden

[03:27:14.0000] <Philip`>
Same for readonly for type=hidden

[03:27:34.0000] <Von_Davidicus>
/me will thus have to redo some of his PHP.

[03:27:48.0000] <Philip`>
(http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#hidden-state-(type=hidden) gives the details)

[03:28:23.0000] <Von_Davidicus_>
And, possible, some of my JavaScript.

[03:28:50.0000] <Ms2ger>
annevk, http://wiki.whatwg.org/wiki/DOM_features should have all those that Gecko supports now

[03:29:02.0000] <Philip`>
Von_Davidicus: Why are you specifying those attributes here, when they don't make sense for hidden inputs?

[03:30:55.0000] <volkmar>
annevk: forget the question... I realize it's not part of a spec...

[03:31:01.0000] <annevk>
volkmar: that attribute does not exist; see http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html

[03:31:11.0000] <volkmar>
annevk: https://developer.mozilla.org/en/DOM/window.fullScreen

[03:31:48.0000] <Von_Davidicus_>
Because I need them there for my JavaScript to work.

[03:32:03.0000] <annevk>
volkmar: do we need that attribute for something?

[03:32:26.0000] <annevk>
volkmar: it seems you can already accomplish that using matchMedia and for element fullscreen you can check document.fullscreenElement

[03:32:45.0000] <annevk>
it's also incorrectly cased

[03:33:19.0000] <volkmar>
annevk: sadly, seems like document.fullscreenEnabled is cased mozFullScreenEnabled in Gecko

[03:33:37.0000] <annevk>
hopefully that's fixed when they unprefix

[03:33:51.0000] <Ms2ger>
Do we have a bug to unprefix?

[03:34:09.0000] <annevk>
Firefox is standardizing on "fullscreen" after all and so is the rest of the world

[03:34:18.0000] <annevk>
(in UI language)

[03:37:08.0000] <Von_Davidicus_>
Basically, my code assumed that every table row would have those elements in it--and the inputs were hidden if they weren't actually needed.

[03:41:36.0000] <annevk>
Ms2ger: haven't seen anything

[03:42:44.0000] <annevk>
I'm having a hard time to not prematurely merge big5 and big5-hkscs

[03:42:57.0000] <Ms2ger>
I'll file

[03:43:28.0000] <annevk>
cool

[03:43:47.0000] <annevk>
hopefully Gecko can create some sanity in the all the Fullscreen code out there

[03:44:31.0000] <annevk>
I haven't seen much community feedback btw; I guess it works good enough...

[03:44:42.0000] <Ms2ger>
Facebook uses it for photos, I hear

[03:44:53.0000] <annevk>
youtube, vimeo, etc. use it

[03:45:11.0000] <annevk>
but all with lots of code paths because of the prefixes, prefixed events, etc.

[03:45:13.0000] <annevk>
it's quite the mess

[03:50:37.0000] <volkmar>
annevk: fullscreen specs say "HTML defines under what conditions the fullscreen enabled flag is set"

[03:50:42.0000] <volkmar>
but I don't see anything in the html specs

[03:51:40.0000] <annevk>
yeah HTML needs to be updated

[03:52:03.0000] <annevk>
not sure if I filed a bug on that already

[03:52:18.0000] <annevk>
but basically, I think the latest was that <iframe allowfullscreen> sets that flag

[03:52:27.0000] <annevk>
for the document it contains

[03:52:39.0000] <annevk>
and it's set automatically for the top-level browsing context's document

[03:52:59.0000] <volkmar>
annevk: so, to know if a document is fullscreen, you have to do fullscreenElement != null, right?

[03:53:16.0000] <annevk>
to know if an element is fullscreen you do that

[03:53:29.0000] <annevk>
if you want to know if the user used some kind of UI you would use media queries

[03:54:09.0000] <volkmar>
so, a dev can't know if the page is currently fullscreen?

[03:55:06.0000] <annevk>
I just said the opposite

[03:55:14.0000] <volkmar>
sorry

[03:55:29.0000] <volkmar>
i meant, with a js api

[03:55:48.0000] <Von_Davidicus>
/me heads offline.

[03:56:04.0000] <annevk>
there's window.matchMedia

[03:56:30.0000] <Von_Davidicus_>
Thanks for the header element info.  :)

[03:56:43.0000] <annevk>
volkmar: http://dev.w3.org/csswg/cssom-view/#dom-window-matchmedia

[03:58:54.0000] <annevk>
yay foolip

[03:59:04.0000] <annevk>
one interwebs for foolip please

[04:00:08.0000] <Ms2ger>
Granted

[04:01:59.0000] <annevk>
seems I'm gonna take a break for a couple of hours

[04:02:05.0000] <annevk>
big5 can wait a little

[04:03:11.0000] <annevk>
volkmar: if you think fullscreen status of a document (other than fullscreen element) needs some kind of convenience attribute please email WHATWG

[04:03:36.0000] <annevk>
volkmar: I personally think media queries combined wit the API for them are fine, especially since the majority case will be an element fullscreen

[04:03:41.0000] <annevk>
with*

[04:04:59.0000] <Ms2ger>
What makes people even publish mixed-encoding pages?

[04:44:41.0000] <kennyluck>
Can someone give me some examples of invalid URL?

[04:44:50.0000] <kennyluck>
I know "%" is invalid in IE for one.

[06:14:14.0000] <annevk>
kennyluck: http://a b/

[06:14:19.0000] <annevk>
kennyluck: note the space

[06:14:31.0000] <annevk>
kennyluck: however, we might make make it so that all URLs can be resolved

[06:14:47.0000] <annevk>
kennyluck: and that failures happen at the network layer instead

[06:15:07.0000] <annevk>
kennyluck: kind of depends on the URL work, which MikeSmith is working on and abarth is sometimes

[06:15:31.0000] <annevk>
I might work on that after Encodings is done, dunno

[06:46:02.0000] <annevk>
foolip_: hey

[06:46:10.0000] <foolip_>
annevk, hi

[06:46:29.0000] <annevk>
foolip_: so those 22 pages where all the pages with bytes in the indicated ranges

[06:46:33.0000] <annevk>
s/where/were/

[06:47:23.0000] <annevk>
foolip_: all the pages with lead bytes under 0xA1 or in the 0xC6-0xC8 region

[06:47:39.0000] <foolip_>
annevk, do you think that skews the results?

[06:48:29.0000] <annevk>
not really, those are the ranges for which browsers have incompatible mappings

[06:48:39.0000] <annevk>
and for which big5 and big5-hkscs have incompatible mappings

[06:48:48.0000] <annevk>
everything else they agree on so that does not really matter

[06:49:05.0000] <annevk>
so I think that what you generated is fine

[06:49:11.0000] <annevk>
and just default to FFFD for the rest

[06:49:17.0000] <foolip_>
right, I was quite happy to see that the compatible intersection of big5 was a subset of the compatible intersection of big5-hkscs, save one mapping

[06:49:36.0000] <annevk>
the multiple code point stuff seems hairy though

[06:49:49.0000] <foolip_>
annevk, spec-wise or implementation-wise?

[06:50:28.0000] <annevk>
I guess we can special case it if there's only four

[06:50:30.0000] <foolip_>
The alternative is

[06:50:34.0000] <foolip_>
PUA

[06:50:49.0000] <Ms2ger>
Go wash your mouth

[06:51:05.0000] <annevk>
so

[06:51:06.0000] <annevk>
<U+00CA,U+0304> Ê̄

[06:51:09.0000] <foolip_>
annevk, yes, the official hkscs-2008 mapping listed only those 4

[06:51:13.0000] <annevk>
is there no NFC character for that?

[06:51:23.0000] <foolip_>
annevk, nope, at least not according to python unicodedata

[06:51:52.0000] <annevk>
we could also FFFD it given that we didn't find it in real usage

[06:52:23.0000] <foolip_>
It seems better to follow the spec when there is one, don't you think?

[06:52:33.0000] <foolip_>
or does it create other problems?

[06:52:54.0000] <foolip_>
I'll see what the surrounding characters were, these 4 seem a bit random...

[06:53:11.0000] <annevk>
dunno, I don't really have respect for legacy encoding standards and it makes both the encoder and decoder more complicated

[06:53:58.0000] <foolip_>
annevk, the surrounding characters are also various latin letters with diacritics, so it seems about right

[06:53:58.0000] <annevk>
so far all encoders work by just passing in one code point at a time and getting back some bytes

[06:54:14.0000] <annevk>
for this it would need state

[06:54:32.0000] <foolip_>
can't it just return more bytes?

[06:54:54.0000] <foolip_>
oh, encoder?

[06:55:05.0000] <foolip_>
why should we spec an encoder for big5?

[06:55:13.0000] <annevk>
URLs and <form>

[06:55:23.0000] <foolip_>
meh, so that's already web-exposed?

[06:55:27.0000] <annevk>
yes

[06:56:18.0000] <foolip_>
I'll see if the individual code points can be represented in Big5...

[06:57:13.0000] <annevk>
we could also not support it in the encoder

[06:57:27.0000] <annevk>
and if they're not in big5 they would turn into entities in the common case

[06:57:41.0000] <annevk>
and support them as some kind of special path in the decoder

[06:57:45.0000] <foolip_>
nope, big5-hkscs has no combining characters it seems, but python does actually support encoding these properly

[06:58:09.0000] <foolip_>
I would suggest special-casing them and seeing if implementors complain

[06:59:53.0000] <annevk>
does any browser implementation support them now though?

[07:00:03.0000] <annevk>
because if they don't, I'm not sure it's worth adding

[07:01:09.0000] <foolip_>
they all use PUA

[07:01:38.0000] <annevk>
oh right, except for Opera?

[07:01:41.0000] <foolip_>
right

[07:01:57.0000] <foolip_>
specing PUA seems worthwhile avoiding, IMHO

[07:02:12.0000] <annevk>
fair enough

[07:02:42.0000] <foolip_>
decoding them correctly seems sensible, for the encoder I'm quite sure just dropping them would do

[07:03:06.0000] <foolip_>
or what do encoders do with code points that can't be represented?

[07:03:07.0000] <annevk>
k

[07:03:17.0000] <annevk>
depends I think

[07:03:24.0000] <annevk>
form submission makes them entities

[07:03:28.0000] <annevk>
URLs might use "?"

[07:03:33.0000] <annevk>
/me forgot

[07:03:42.0000] <annevk>
I haven't really looked at encoders in detail yet

[07:03:53.0000] <annevk>
there's lots of XXX for encoders

[07:03:57.0000] <foolip_>
ok, so encoding the first half and escaping the second as an entity might do the job

[07:05:26.0000] <annevk>
where did you find the HKSCS standard btw?

[07:05:34.0000] <annevk>
(agreed btw with the encoder suggestion)

[07:06:01.0000] <foolip_>
annevk, http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/download_area/mapping_table_2008.htm

[07:06:12.0000] <foolip_>
I also checked it into the git repo

[07:08:20.0000] <annevk>
k sweet

[07:08:27.0000] <annevk>
I'll take a stab at updating the big5 algorithm

[07:09:01.0000] <foolip_>
annevk, great, I'm quite sure this would be an improvement even with the missing mappings

[07:09:14.0000] <annevk>
foolip_: 8862 => <U+00CA,U+0304> is that a big5.json like index? the 8862 number?

[07:09:44.0000] <foolip_>
annevk, the bytes \x88\x62, I used the notation in the HKSCS-2008 mapping table there

[07:09:52.0000] <annevk>
ah

[07:10:00.0000] <foolip_>
(and in list of missing mappings)

[07:10:29.0000] <annevk>
right

[07:11:43.0000] <foolip_>
annevk, I'll have a look at trying to categorize the missing mappings and perhaps asking the Chinese HTML IG if they know more.

[07:11:54.0000] <foolip_>
happy easter!

[07:12:24.0000] <annevk>
ah yeah, that might be a good idea

[07:12:25.0000] <annevk>
you too!

[07:12:38.0000] <foolip_>
some of the missing mappings smell a lot like they could be de-facto big5 extensions or something

[07:12:39.0000] <annevk>
oh and btw, we might standardize this through the W3C i18n WG at some point

[07:12:48.0000] <foolip_>
mkay

[07:12:59.0000] <annevk>
there's a lot of big5 extensions

[07:13:17.0000] <annevk>
http://en.wikipedia.org/wiki/Big5 has a bunch on that front

[07:13:30.0000] <annevk>
http://coq.no/character-tables/chinese-traditional/en too

[07:15:16.0000] <foolip_>
annevk, thanks, I'll have a look

[07:46:54.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#big5

[07:50:20.0000] <davidb>
at

[07:50:35.0000] <Ms2ger>
mozilla.com?

[07:51:53.0000] <annevk>
I guess I should fetch that script from foolip

[07:52:22.0000] <annevk>
generate myself a big5 index

[08:17:46.0000] <Velmont>
Ms2ger: Ohmy. :-) I should also test it again, -- but I've been on vacation for a while now (still am) -- so don't have my nice setup that I've got at the office.

[08:17:58.0000] <Ms2ger>
Pff, vacations

[08:18:11.0000] <Ms2ger>
Those are good to get work done :)

[08:18:49.0000] <Velmont>
Hehe. -- Well, I managed to fsck up the only two lines I changed, missing a var and actually not doing what I said I should do in an older comment. :S

[08:19:25.0000] <Ms2ger>
That's better than messing up lines you didn't change

[08:19:37.0000] <Velmont>
Guess that's true ;}

[08:37:47.0000] <annevk>
hmm

[08:37:58.0000] <annevk>
the first 900 or so positions have no mapping

[08:38:00.0000] <annevk>
weird

[08:38:18.0000] <annevk>
I now understand why foolip was wondering about that a little more

[09:12:04.0000] <fkm>
Hi there. I have a problem with the validator not accepting code that is valid according to the specs. The validator tells me that "The text content of element time was not in the required format: The literal did not satisfy the date or time format. <span><time>1991</time> ...de la planète Mars</span>". But according to the specs, the time element accepts "A valid non-negative integer representing a year <time>2011</time>".

[09:12:05.0000] <fkm>
The page in question is http://dev.snemelk.ch/pages/bonfire/iam/artist.html

[09:12:05.0000] <fkm>
The specs I have consulted are http://www.w3.org/TR/html5/the-time-element.html and http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-time-element

[09:12:05.0000] <fkm>
Am I missing something or is this a bug in the validator? I tried validator.w3.org and also the underlying validator.nu to see if the problem is with the implementation by the W3C but both tell me the same thing.

[09:15:48.0000] <Philip`>
fkm: http://bugzilla.validator.nu/show_bug.cgi?id=913 sounds like it might be relevant

[09:16:01.0000] <Philip`>
MikeSmith may know

[09:17:37.0000] <[tm]>
fkm: i think the validator code is not yup to date with the spec

[09:18:18.0000] <fkm>
Ok. In that case, there is still hope for me yet :-)

[09:18:27.0000] <fkm>
Thank you both for the feedback!

[09:18:36.0000] <[tm]>
either file a bug or comment on whatever existing one there might be

[09:19:19.0000] <[tm]>
time element should really just be dropped

[09:19:42.0000] <fkm>
I have prepared an email to the W3C validator mailing-list. But I guess I could post it on the validator.nu bug-tracker.

[09:19:45.0000] <[tm]>
it was a mistake to add it to begin with

[09:20:46.0000] <[tm]>
fkm:  yeah

[09:21:02.0000] <fkm>
I kind of like the time element. At least more than the new b, i and, u elements ;-)

[09:21:37.0000] <[tm]>
yeah well

[09:21:44.0000] <[tm]>
those aren't new

[09:21:56.0000] <Ms2ger>
annevk, so what are these code points supposed to map to now?

[09:22:09.0000] <annevk>
Ms2ger: not in a map, they'll become U+FFFD

[09:22:28.0000] <annevk>
Ms2ger: already implemented in Gecko

[09:22:35.0000] <Ms2ger>
Oh

[09:22:44.0000] <Ms2ger>
If I don't need to do anything, go ahead :)

[09:22:46.0000] <annevk>
well, not sure about trunk

[09:22:56.0000] <annevk>
did you change encodings already?

[09:22:59.0000] <Ms2ger>
I haven't changed much lately

[09:24:04.0000] <fkm>
[tm]: I know. But with HTML5 they have a new, "semantic" meaning. But it is not my place to question the HTML specs. I am too much of a rookie to go there.

[09:24:19.0000] <Ms2ger>
Hah

[09:24:36.0000] <Ms2ger>
It's the rookies that need to question the spec

[09:24:47.0000] <Ms2ger>
Because we all got used to it

[09:24:56.0000] <fkm>
I will keep that in mind :-)

[09:25:09.0000] <Ms2ger>
(Not on the meaning of b and i, though... Those have been discussed to death :))

[09:26:12.0000] <annevk>
fkm: it's always best to question things, but beware that you might not find logic, especially with web standards

[09:26:56.0000] <annevk>
I guess I could update my test

[09:32:17.0000] <[tm]>
if one of you in Belgium or Netherlands is interested in doing a three hour tutorial in Belgium this summer our fall, lemme know

[09:32:56.0000] <[tm]>
i doubt there is much money involved

[09:33:00.0000] <[tm]>
if any

[09:34:30.0000] <[tm]>
Benelux

[09:34:49.0000] <[tm]>
your Belgian villages have some crazy names

[09:35:21.0000] <annevk>
Benelux is actually 3 countries

[09:35:27.0000] <annevk>
not a place

[09:35:46.0000] <[tm]>
oh

[09:36:04.0000] <[tm]>
shows WTF i know

[09:36:13.0000] <annevk>
BElgium/NEtherlands/LUXembourg

[09:36:25.0000] <[tm]>
ah

[09:37:59.0000] <[tm]>
Hmm so i guess this is in the Netherlands

[09:38:07.0000] <[tm]>
+31

[09:39:18.0000] <[tm]>
man i can't super the crusade against alcohol

[09:41:09.0000] <annevk>
yeah that's NL

[09:41:22.0000] <[tm]>
alcohol is the only thing that makes attending most of these meetings and conferences tolerable

[09:42:26.0000] <[tm]>
telcons too

[09:42:37.0000] <TabAtkins>
It does kinda suck when half the conf occurs in bars that are too loud to have good discussion in, but feeling excluded by drinking at all is venturing too far into the "accomodate my personal preferences!" territory.

[09:44:25.0000] <annevk>
solve all the social problems!

[09:45:55.0000] <fkm>
Concerning the problem with the validator. Should I add my example as a testcase or an additional comment?

[09:45:55.0000] <[tm]>
the suggested alternative of after meetings at a coffee shop doesn't really cut it

[09:45:56.0000] <TabAtkins>
...huh.  I have absolutely no idea what this "Hypertext Layout, Reading Speed and Comprehension" thread is about.

[09:46:06.0000] <TabAtkins>
(Also he doesnt' use serial comma ARGH)

[09:46:38.0000] <TabAtkins>
As far as I can tell, someone decided to just collect a bunch of articles and say "Hey, these articles describe things vaguely related to what CSS3 Text cares about.  Enjoy!".

[09:46:40.0000] <[tm]>
that's like going to an AA meeting

[09:47:52.0000] <[tm]>
TabAtkins: is that from the www-style list?

[09:47:56.0000] <TabAtkins>
Yes.

[09:48:37.0000] <[tm]>
i think you're the only one still subscribed to that list

[09:48:44.0000] <TabAtkins>
hahaha

[09:48:48.0000] <hober>
not the only one

[09:49:31.0000] <[tm]>
ok two of you

[09:51:27.0000] <[tm]>
hober: btw you rock mightily for fighting the good fight on html WG CPs

[09:51:40.0000] <TabAtkins>
Indeed.

[09:51:42.0000] <TabAtkins>
I gave up.

[09:51:53.0000] <TabAtkins>
Not worth the effort when it's a coin-toss anyway.

[09:52:17.0000] <[tm]>
no comment

[09:52:29.0000] <[tm]>
expletive deleted

[09:54:23.0000] <hober>
[tm]: thanks! sometimes i think i'm the only one who takes seriously the charter requirement to seek convergence with the whatwg

[09:55:03.0000] <annevk>
Ms2ger: http://dump.testsuite.org/encoding/single-byte-test.html seems not much has landed

[09:56:48.0000] <Ms2ger>
Sounds right

[09:57:29.0000] <eseidel>
Ms2ger: what about feature strings?

[09:58:12.0000] <Ms2ger>
eseidel, we'd like to put a static list in DOM4

[09:58:24.0000] <Ms2ger>
And then lock the door and throw away the key

[09:58:35.0000] <TabAtkins>
Yes omg

[09:59:07.0000] <annevk>
http://wiki.whatwg.org/wiki/DOM_features has a start

[10:00:20.0000] <eseidel>
Ms2ger: I support

[10:01:04.0000] <hober>
yes, feature strings need to DIAF

[10:01:05.0000] <eseidel>
TabAtkins: ideally would like to only return YES for things which are requried for web compat

[10:01:11.0000] <Ms2ger>
Can either of you fill in the blanks for WebKit? :)

[10:01:15.0000] <eseidel>
Ms2ger: and NO for everythgin else

[10:01:21.0000] <Ms2ger>
Agreed

[10:01:59.0000] <TabAtkins>
Yeah.

[10:02:32.0000] <Ms2ger>
But first, data! :)

[10:02:50.0000] <eseidel>
Ms2ger: http://trac.webkit.org/browser/trunk/Source/WebCore/dom/DOMImplementation.cpp#L220

[10:03:10.0000] <eseidel>
Ms2ger: but it should be very very easy to write some simple js to test

[10:03:10.0000] <Ms2ger>
On the wiki! ;)

[10:03:20.0000] <eseidel>
Ms2ger: sorry, wiki's and I don't get along :)

[10:03:29.0000] <eseidel>
I'm a reader, not a writer :p

[10:04:52.0000] <annevk>
that is prolly sufficient

[10:05:16.0000] <annevk>
i'll just dump the link in the wiki

[10:06:58.0000] <Ms2ger>
eseidel, I love how it builds a hashset in isEvents3Feature, for one string :)

[10:07:49.0000] <annevk>
whoa, SVG went nuclear with features

[10:08:02.0000] <annevk>
what kind of code did they expect authors to write?

[10:08:11.0000] <Ms2ger>
Well

[10:08:14.0000] <shepazu>
annevk: huh?

[10:08:23.0000] <Ms2ger>
You can use them from markup too, iirc

[10:08:50.0000] <TabAtkins>
Yeah, the feature strings are used in <switch>

[10:12:45.0000] <eseidel>
Ms2ger: this is performance critcal code you're readnig here

[10:12:49.0000] <eseidel>
Ms2ger: we have our best men on it

[10:12:59.0000] <eseidel>
Ms2ger: namely, me. :)  (I think I wrote that section)

[10:13:15.0000] <Ms2ger>
Ah, so that's why we're winning the browser wars ;)

[10:14:02.0000] <eseidel>
oh, I just thought we were all singing kareoke at the local browser pub

[10:14:20.0000] <eseidel>
(and SVG was drunk in the corner, spouting about fonts and feature strings)

[10:14:20.0000] <Ms2ger>
Then I'd feel excluded :(

[10:14:33.0000] <Ms2ger>
They don't like letting AIs into bars...

[10:14:44.0000] <TabAtkins>
You and bz can go have AI fun somewhere.

[10:14:59.0000] <TabAtkins>
(Pretty sure the thing I met at SXSW was just a skinvelope controlled by bz.)

[10:15:16.0000] <Ms2ger>
We've done that enough when he was building me

[10:16:34.0000] <Ms2ger>
Also, TabAtkins, when are you going to write the box tree spec? :)

[10:17:30.0000] <TabAtkins>
After I write the parsing spec, which I'm in the middle of right now.

[10:17:37.0000] <TabAtkins>
Or actually, roughly in the beginning, but still.

[10:20:18.0000] <[tm]>
He refused to accept vice in exchange for his lulz

[10:25:31.0000] <annevk>
shepazu: just that has so many

[10:25:53.0000] <annevk>
TabAtkins: kind of jealous now

[10:27:50.0000] <annevk>
"WAI-Engage is an open forum for responsive development of material

[10:27:50.0000] <annevk>
supporting web accessibility, including support for Web Accessibility

[10:27:50.0000] <annevk>
Initiative (WAI) resources."

[10:27:50.0000] <annevk>
I don't even know what that means...

[10:41:42.0000] <Ms2ger>
TabAtkins, including zcorpan's quirks stuff?

[10:42:23.0000] <TabAtkins>
Ms2ger: Um, sure!

[10:42:29.0000] <TabAtkins>
/me has to actually look at that spec.

[10:45:50.0000] <moo-_->
I have this really ambitious idea: I'd like that sites could suggest color and background colour for tabs besides the site icon. I know it's not going to happen very easily, but if it were to happen how I should take this idea forward. creating chrome + ff add-ons supporting this, promoting them like mad and then hope it is adopted by the browsers themselves some point?

[10:46:27.0000] <moo-_->
this would be mostly for usability. add-ons like colorfultabs do this already, but you need to manually configure in the sites.

[10:46:28.0000] <TabAtkins>
That sounds like a bad idea that I would hate.

[10:47:08.0000] <jamesr>
TabAtkins: "That's a bad idea. You should feel bad."

[10:47:15.0000] <Philip`>
Sounds like it should be as popular as IE's scrollbar colouring CSS

[10:47:27.0000] <TabAtkins>
Well, moo-_- shouldn't feel bad.  I'm just saying, I would hate it.

[10:47:38.0000] <TabAtkins>
And since I'm clearly representative of all users...

[10:47:46.0000] <jamesr>
Philip`, you mean WebKit's? IE has that too?

[10:47:54.0000] <TabAtkins>
Pretty sure we copied IE there.

[10:48:38.0000] <moo-_->
TabAtkins: ok, let me ask then is there anything we could do to make tabs / windows / bookmarks / etc. more distinctive besides their favicon?

[10:48:51.0000] <Philip`>
jamesr: http://www.javascriptkit.com/howto/scrollbarcolor.shtml

[10:48:53.0000] <moo-_->
like all slashdot.org tabs would have (non-offending) green background

[10:49:03.0000] <Philip`>
/me didn't realise WebKit had done it

[10:49:12.0000] <jamesr>
Philip`, WebKit has pseudoes

[10:49:19.0000] <annevk>
moo-_-: there are some extensions for that

[10:49:25.0000] <jamesr>
http://www.webkit.org/blog/363/styling-scrollbars/:

[10:49:48.0000] <moo-_->
annevk: I am aware of that

[10:49:49.0000] <annevk>
given that Apple tries to get rid of the scrollbar creating pseudos for that was a silly idea

[10:50:00.0000] <moo-_->
annevk: but my point was more like that websites themselves could suggest the colours

[10:50:01.0000] <moo-_->
hmm

[10:50:08.0000] <annevk>
moo-_-: http://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F

[10:50:13.0000] <annevk>
moo-_-: might help

[10:50:48.0000] <moo-_->
annevk: thanks

[10:50:53.0000] <moo-_->
this is a starting point, at least

[10:50:59.0000] <moo-_->
:)

[10:50:59.0000] <annevk>
moo-_-: if there's interest from authors, browser UI people, no phishing problems, no security problems, it might have a chance...

[10:51:08.0000] <annevk>
moo-_-: but I doubt it somewhat

[10:51:35.0000] <annevk>
moo-_-: the extension could use some information from the page as a hint for the color

[10:52:30.0000] <dglazkov>
good ${time_of_day}, Whatwg!

[10:53:55.0000] <moo-_->
annevk: yep. my first idea was to have (all) extension authors to agree on some way to extract this information from HTML <head> <meta>

[10:57:08.0000] <annevk>
moo-_-: fwiw, Opera has this experimental thing with just having large tabs that show thumbnails of the pages

[10:57:30.0000] <annevk>
I don't use it because I have a smallish screen, but it has some potential I think

[10:58:01.0000] <moo-_->
annevk: I tried that feature... nice but takes little screen estate

[10:58:14.0000] <moo-_->
annevk: IE9 + Win8 also do this tab bar thumbnail thing

[10:58:29.0000] <moo-_->
but it is not good for visually grouping which pages came from which sites

[10:58:35.0000] <moo-_->
you still need to "read" thumbnails

[11:01:13.0000] <Ms2ger>
Good, dglazkov

[11:01:37.0000] <dglazkov>
${time_of_day | "morning"}

[11:16:01.0000] <annevk>
hsivonen: I like how it says "Note: I’ve also added the prefixes versions –moz, –webkit & –o for Mozilla, Webkit & Opera to be compatible with the other browsers. Never forget to do the same!" and then continues to just do that

[11:16:46.0000] <annevk>
hsivonen: but it's better than most browser advocacy

[11:22:07.0000] <TabAtkins>
Hrm.  I always forget what the \237 indicates in the CSS syntax definition of "non-ascii".

[11:22:18.0000] <TabAtkins>
(Defined as [^\0-\237].)

[11:22:46.0000] <annevk>
octal

[11:23:41.0000] <annevk>
which is 159 or 0x9F

[11:23:59.0000] <annevk>
iirc

[11:24:20.0000] <TabAtkins>
Yeah it is.  I just don't understand what the significance of 0x9f is.

[11:24:54.0000] <TabAtkins>
Oh, I was looking at an extended ascii chart, not at unicode.

[11:25:04.0000] <TabAtkins>
A0 is where the real characters start again.

[11:25:11.0000] <annevk>
it should be 0x7F

[11:25:21.0000] <annevk>
well dunno

[11:25:33.0000] <annevk>
CSS is weird

[11:25:35.0000] <TabAtkins>
0x80 to 0x9F are all non-printable control characters.

[11:25:44.0000] <TabAtkins>
So I guess it's sensical to cut those out too.

[11:25:50.0000] <TabAtkins>
But it's not really "non-ascii" then.  ^_^

[11:26:08.0000] <annevk>
well yeah, and there's a ton of other code points that are not actually "usable"

[11:26:13.0000] <TabAtkins>
Yeah.

[11:26:25.0000] <TabAtkins>
I'm guessing it was just a useful block to cut out, since it's adjacent to the ascii block.

[11:26:57.0000] <annevk>
I can already see them discussing this in a committee meeting

[11:27:12.0000] <annevk>
that's actually a rather funny thought

[11:28:11.0000] <TabAtkins>
hehe

[11:29:21.0000] <annevk>
only one decoder to go

[11:29:45.0000] <annevk>
never imagined it would take this long, but it's starting to look pretty neat

[11:33:10.0000] <TabAtkins>
Huh.  Why is parsing so complicated?

[11:33:12.0000] <Hixie>
dialog.show()/showModal() or dialog.open()/openModal()? I was going to use show() but the convention is to have a close() method and onclose handler

[11:33:16.0000] <TabAtkins>
It looks a lot easier when you use a grammar.

[11:33:45.0000] <TabAtkins>
Using "open" has an interesting parallel with <details open>

[11:34:23.0000] <Hixie>
we are going to have <dialog open>

[11:34:30.0000] <Hixie>
maybe that's a good reason not to use open()

[11:34:38.0000] <Hixie>
it would clash with the IDL attribute reflecting open=""

[11:34:42.0000] <Hixie>
looks like most APIs use showModal()

[11:34:52.0000] <Hixie>
as opposed to openModal()

[11:35:03.0000] <Hixie>
/me decides to stick with show

[11:35:24.0000] <annevk>
TabAtkins: yeah, CSS parsing is vastly more complicated than it needs to be

[11:35:43.0000] <annevk>
TabAtkins: mostly because of the grammar and nobody looking at handwriting a tokenizer

[11:36:48.0000] <Hixie>
css parsing is also complicated because the grammar didn't define any of the error handling

[11:37:02.0000] <Hixie>
so the error handling became semi-random, like html's

[11:37:15.0000] <Hixie>
(well, it defined some error handling, but only within the "forward-compatible grammar" set)

[11:38:03.0000] <TabAtkins>
annevk: Really, the complication is just that it's an ad-hoc grammar with lots of options at a lot of points, rather than the relatively simply HTML grammar (ignoring quirks and scripts).

[11:38:32.0000] <Hixie>
good thing i wasn't drinking anything when i read _that_

[11:38:52.0000] <TabAtkins>
Hixie: Dude, go look at your description of the types of tokens.  There's, like, 5 of them.

[11:39:22.0000] <Hixie>
ignoring quirks and scripts it's pretty simple, i agree :-)

[11:41:46.0000] <annevk>
I especially hate that escapes can occur everywhere

[11:42:27.0000] <annevk>
I would have removed that in 2000, if I was smarter back then

[11:44:50.0000] <Ms2ger>
Oh man

[11:44:57.0000] <Ms2ger>
If I had a time machine...

[11:45:24.0000] <Ms2ger>
Killing Hitler? Nah, I'd lock Bert and howcome in a room for a few hours

[11:45:43.0000] <TabAtkins>
...I'd create a Turing oracle and break open computation levels, brute-forcing my way to immediate godlike-AI.

[11:45:59.0000] <Hixie>
hah

[11:46:02.0000] <TabAtkins>
(And then be killed by it, because its value system doesn't recognize life as a useful thing.)

[11:46:12.0000] <TabAtkins>
(Or as a "thing" at all.)

[11:53:23.0000] <Hixie>
options for aligning these dialogs... use aps pos and define the static position as one that happens to result in the alignment i want; define that the element is in a positioning regime that ignores 'position' and 'float'; invent a new 'position' keyword that works like 'relative' but starts with the appropriate alignment rather than the static position (that one is harder since from CSS the new keyword would be useless without a way to define the link from one e

[11:57:13.0000] <Hixie>
hmm

[11:58:15.0000] <TabAtkins>
That cut off at "from one el" for me.

[12:00:07.0000] <Hixie>
from one element to another

[12:01:43.0000] <Hixie>
should it be possible to turn a <dialog> that's already open into a modal dialog? or should .showModal() do nothing or throw an exception if it is already open?

[12:01:50.0000] <TabAtkins>
So, the element() function provides a way to link one element to another. But right now it's defined to only take an id selector.

[12:02:00.0000] <Hixie>
(and should the answer be different if it's open and modal or open and not modal?)

[12:02:18.0000] <Hixie>
TabAtkins: the link between the elements is given by the argument to the show() method, it's not in CSS

[12:02:38.0000] <TabAtkins>
Hixie: Okay, so it's magic from CSS's perspective.  That's fine.

[12:02:49.0000] <Hixie>
right

[12:03:01.0000] <Hixie>
i'm just saying a new keyword would be kinda silly since there'd be no good way to use it in other contexts

[12:03:05.0000] <Hixie>
new position keyword

[12:03:28.0000] <Hixie>
i'm thinking either these elements should be forced into a new regime, or i should just use abs pos with a redefined static position

[12:03:52.0000] <TabAtkins>
Actually, I think you should just define a new position value.

[12:04:02.0000] <Hixie>
what would it mean if used on a random div?

[12:04:03.0000] <TabAtkins>
It's just as magic, but it can be picked up by CSS later.

[12:04:21.0000] <TabAtkins>
I'm thinking it woudl be equivalent to 'relative'.

[12:05:21.0000] <Hixie>
could work

[12:06:06.0000] <Hixie>
hmm

[12:06:26.0000] <Hixie>
how do i have a different rule for dialogs that were given an alignment system and dialogs that should just center themselves?

[12:06:39.0000] <Hixie>
could be magic, i suppose

[12:06:46.0000] <TabAtkins>
Magic for now.

[12:06:55.0000] <TabAtkins>
I'll review after you lay down some text.

[12:07:02.0000] <TabAtkins>
To make sure it's not hostile to what I want to do with 'position'.

[12:07:35.0000] <TabAtkins>
Lunch now to grab an interview candidate.

[12:07:48.0000] <Hixie>
hehe

[12:07:50.0000] <Hixie>
later

[12:15:15.0000] <annevk>
http://www.w3.org/2012/02/timed-text-wg-charter

[12:15:22.0000] <annevk>
o_O

[12:15:46.0000] <Ms2ger>
Wow

[12:15:47.0000] <annevk>
"A Section Edition of the Timed Text Markup Language (TTML) 1.0 Recommendation"

[12:15:57.0000] <Ms2ger>
LC: N/A

[12:16:01.0000] <Ms2ger>
CR: N/A

[12:16:08.0000] <Ms2ger>
PR: N/A

[12:16:14.0000] <Ms2ger>
Rec: November 2012

[12:16:18.0000] <annevk>
boom

[12:16:21.0000] <annevk>
headshot

[12:16:25.0000] <Hixie>
why "o_O" ?

[12:17:01.0000] <Hixie>
it's pretty normal for wgs to have their charters extended like this...

[12:17:22.0000] <Hixie>
(by "normal" i mean "common place" not "sensible")

[12:17:33.0000] <Ms2ger>
Well, charters

[12:17:41.0000] <Ms2ger>
The former was already ruled out

[12:18:05.0000] <annevk>
given https://www.w3.org/2000/09/dbwg/details?group=34314 it's highly surprising this is being extended

[12:18:36.0000] <annevk>
the o_O was for W3C continuing to put effort into something the community is not really behind

[12:18:43.0000] <Hixie>
um...

[12:18:46.0000] <Hixie>
the w3c does that all the time

[12:18:51.0000] <Hixie>
for some definition of "community"

[12:18:54.0000] <Hixie>
e.g. rdf...

[12:19:41.0000] <Ms2ger>
Heh, I don't think I've seen "not in good standing" before

[12:20:54.0000] <annevk>
Hixie: true, this feels a bit different, more like another XHTML 2.0 group

[12:21:50.0000] <annevk>
maybe I should reply with some comments

[12:22:38.0000] <Hixie>
xhtml2 lasted years past the point of the community not being really behind it

[12:22:48.0000] <Hixie>
xforms' charter only ran out last month

[12:23:09.0000] <Hixie>
(and their timeline has dates until september 2012, so i doubt they'll be closed)

[12:23:33.0000] <Hixie>
just let the group do it's stuff, the alternative is they come and try to force their ideas into our stuff :-P

[12:23:36.0000] <Hixie>
its

[12:25:34.0000] <Ms2ger>
(Also, for the interested people without member access: https://www.w3.org/2000/09/dbwg/details?group=34314&public=1)

[12:25:57.0000] <annevk>
ah thanks Ms2ger, didn't know that was available

[12:26:06.0000] <Ms2ger>
"The participants list is available publicly"

[12:26:12.0000] <Ms2ger>
4th bullet

[12:26:18.0000] <annevk>
Hixie: fair enough

[12:27:15.0000] <annevk>
Ms2ger: fascinating

[12:27:23.0000] <Ms2ger>
No kidding

[12:44:07.0000] <fkm>
I have another question about the validator. I am not sure if I understood the concept of flow and phrasing content correctly. The way I understand it, flow content is the same as block elements and phrasing content is the same as inline elements or innerHTML. Following this reasoning having inline elements as direct descendants of the body should not be valid. But the validator does not complain.

[12:44:07.0000] <fkm>
Here's an example: http://dev.snemelk.ch/tests/html5-content_model.html

[12:44:07.0000] <fkm>
Is there a flaw with my reasoning or is this another bug (out of sync problem) in the validator?

[12:46:15.0000] <annevk>
you should read the definitions more carefully probably

[12:46:44.0000] <fkm>
Ok. I will do that :-) Thank you!

[12:47:28.0000] <annevk>
and try to forget about block/inline-level

[12:48:09.0000] <fkm>
I will try. But old habits die hard ;-)

[12:51:13.0000] <Hixie>
fkm: to find out what is allowed in <body>, go to the body element's definition in the spec, and check it's "content model" description

[12:51:20.0000] <Hixie>
fkm: follow the links from that to see what the terms mean

[12:52:10.0000] <fkm>
Ok

[12:52:18.0000] <fkm>
/me has much to learn :-)

[12:52:33.0000] <fkm>
Thank you both for the pointers!

[14:58:37.0000] <zewt>
heh, gmail's gui editor has become next to unusable

[14:58:45.0000] <zewt>
delete one line of quotes, the entire block disappears

[15:00:41.0000] <TabAtkins>
Solution: stop using a gui editor.

[15:01:14.0000] <TabAtkins>
Or use the gui editor in the way most people do, bottomquoting the entire preceding message.

[15:01:47.0000] <zewt>
that's too much of a pain in the ass with gmail, because if you don't send the mail in gui mode, it sends a horribly pre-wrapped 80-column mail

[15:02:07.0000] <zewt>
so i'd have to switch back and forth each time (or manually formatting-kill every time)

[15:04:41.0000] <Hixie>
pine.

[15:05:13.0000] <zewt>
gross

[15:05:22.0000] <zewt>
i think i used that in highschool, heh

[15:05:46.0000] <Hixie>
that's what i use for all my e-mail. :-)

[15:06:01.0000] <zewt>
that must be why it takes you six months to reply to mail :P

[15:06:19.0000] <Hixie>
nah, it's the other way around

[15:06:30.0000] <Hixie>
it'd be longer with a gui editor

[15:14:56.0000] <TabAtkins>
/me just realized he doesn't have to match the grammar exactly with his parser; he just has to capture the same behavior.

[15:14:59.0000] <TabAtkins>
Duh.

[15:16:23.0000] <TabAtkins>
In particular, the grammar goes through some contortions to express things like "selectors can be basically anything!" and to produce a good structure for error-recovery.

[15:36:33.0000] <Hixie>
heycam|away: you should provide a spec subscription model for webidl like i have for html :-)


2012-04-07
[19:50:12.0000] <tantek>
from the archives: 5 years ago - "XML for Dummies" - http://flickr.com/photos/tantek/487522534/

[19:53:16.0000] <zewt>
who else is xml for?

[19:53:20.0000] <zewt>
(bam)

[00:36:02.0000] <annevk>
oh yes

[00:36:05.0000] <annevk>
yay hober

[00:38:27.0000] <Ms2ger>
Hrm

[00:38:57.0000] <Ms2ger>
One advantage to the previous D3E editors was that I didn't have to review so many changes...

[00:49:31.0000] <annevk>
I wish we'd be working on the UI Events spec already

[01:28:34.0000] <smaug____>
annevk: how is that link relevant?

[01:28:57.0000] <smaug____>
I was talking about setAttributeNS

[01:30:55.0000] <annevk>
sure once you use that all bets are off

[01:31:16.0000] <annevk>
but for HTML you can just use setAttribute to modify existing namespaced attributes

[01:32:53.0000] <smaug____>
you can, but you don't have to

[01:33:00.0000] <smaug____>
which is a problem

[01:33:19.0000] <smaug____>
so if you use setAttributeNS and filter is for  name, attribute handling gets trickier

[01:33:41.0000] <smaug____>
I think we should focus on non-namespaced attributes, and get them work better

[01:34:03.0000] <smaug____>
and in that case namespace is null, and localname == name

[01:34:03.0000] <annevk>
how would they work better?

[01:35:49.0000] <smaug____>
/me could point annevk to sicking's bugzilla comment :)

[01:36:39.0000] <annevk>
the scenario where you only care about non-namespaced attributes and yet lots of namespaced attributes are mutated seems pretty alien to me

[01:37:24.0000] <annevk>
and especially combined with the fact that'd you use the same attribute name in the non-namespace and a namespace

[01:38:19.0000] <annevk>
xlink:value doesn't exist btw

[01:38:35.0000] <smaug____>
xlink:href does

[01:38:51.0000] <Ms2ger>
xlink :(

[01:39:03.0000] <smaug____>
indeed

[01:39:09.0000] <annevk>
smaug____: yeah and when used in a non-namespaced context such as HTML it'll be prefixed

[01:39:24.0000] <annevk>
and then you can filter href, xlink:href and it's all cool

[01:40:13.0000] <annevk>
using your scheme observing link mutations in a HTML document that has some SVG becomes much harder

[01:40:24.0000] <smaug____>
annevk: why is it prefixed?

[01:40:34.0000] <smaug____>
if you use setAttributeNS

[01:40:40.0000] <annevk>
because it has to be to work in HTML

[01:40:53.0000] <annevk>
setAttributeNS doesn't change the prefix

[01:41:33.0000] <smaug____>
if you do htmlelement.setAttributeNS("xlinkns", "href", "http://foobar.com");

[01:42:38.0000] <annevk>
why optimize for unlikely scenarios?

[01:43:19.0000] <smaug____>
er

[01:43:31.0000] <smaug____>
optimize for the common scenario

[01:43:45.0000] <smaug____>
where attributes don't have namespace

[01:44:05.0000] <annevk>
right, and namespaced attributes have a fixed prefix

[01:44:26.0000] <smaug____>
namespaced attributes don't have a fixed prefix

[01:44:46.0000] <smaug____>
they have fixed prefix only for parsing purposes

[01:44:57.0000] <smaug____>
but you can create attributes also other ways

[01:45:20.0000] <smaug____>
and this API is about mutations, so it is expected that those other ways are used

[01:46:11.0000] <annevk>
setting an XLink attribute on an HTML element seems highly unlikely

[01:46:30.0000] <smaug____>
yes

[01:46:43.0000] <smaug____>
but setting it on an svg element isn't that unlikely

[01:46:54.0000] <annevk>
right, and there you want to observe it...

[01:48:09.0000] <smaug____>
so you can't use filters

[01:48:17.0000] <smaug____>
because namespaced aren't fixed

[01:48:25.0000] <smaug____>
er, namespaces

[01:51:40.0000] <smaug____>
er, namespace prefixes  :)

[02:01:18.0000] <annevk>
only if there's no such attribute with the same local name and namespace yet

[02:08:56.0000] <annevk>
hahaha

[02:09:11.0000] <annevk>
example.com is our number two most referenced URL

[03:12:28.0000] <Ms2ger>
zewt++

[05:02:37.0000] <Ms2ger>
The "bathtub" approach?

[06:23:37.0000] <zewt>
postincrement me, will you

[06:59:50.0000] <Ms2ger>
++zewt

[09:43:57.0000] <wycats>
I'm looking at the html5lib tokenizer tests, and they claim that tokenizing just plain "\u000B" is a parse error. The only place I can see reference to 000B is in the entity parsing algorithm. I don't see any reason for plain "\u000B" to enter the entity parsing algorithm. Why is it a parse error?

[09:43:59.0000] <wycats>
Hixie: ^

[09:48:28.0000] <Ms2ger>
I'm not sure if those parts of the tests are reliable

[09:50:39.0000] <Ms2ger>
Ah, but it is a tree builder err

[09:50:40.0000] <Ms2ger>
or

[09:51:14.0000] <Ms2ger>
wycats, ^

[09:51:32.0000] <wycats>
Ms2ger: hm

[09:51:33.0000] <wycats>
where?

[09:51:39.0000] <wycats>
I couldn't find it

[09:51:49.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#the-initial-insertion-mode

[09:52:07.0000] <Ms2ger>
Any non-space character before the doctype is a parse error

[09:52:52.0000] <wycats>
hm

[09:53:04.0000] <wycats>
this complicates the order in which I am writing the parser

[09:53:10.0000] <wycats>
I have to get the tree builder involved now

[09:53:27.0000] <wycats>
maybe I should just strip out parse errors from the tests for now?

[09:54:05.0000] <Ms2ger>
Well, AIUI, you can't write a standalone tokenizer

[10:06:44.0000] <Hixie>
wycats: i assume you mean a string consisting of just a single U+000B?

[10:06:54.0000] <Hixie>
wycats: that's an error for multiple reasons, including lack of DOCTYPE

[10:13:17.0000] <Philip`>
wycats: The html5lib tokenizer tests are meant to run without a tree constructor, including the parse errors

[10:14:47.0000] <wycats>
Hixie: it shouldn't be a tokenizer error, though

[10:14:54.0000] <wycats>
but Ms2ger is correct

[10:15:08.0000] <Hixie>
the spec doesn't distinguish between tokenizer errors and tree errors

[10:15:08.0000] <wycats>
on the other hand Philip` seems to be saying something different

[10:15:11.0000] <Hixie>
there's just parse errors

[10:15:16.0000] <wycats>
Hixie: I understand

[10:15:42.0000] <wycats>
my question is largely about the html5lib tests, and I would leave it at that except that Philip` seems to have some info about the tokenizer tests being designed to run without a tree constructor

[10:16:58.0000] <Hixie>
ah, i am not the right person to ask about those tests specifically :-)

[10:19:22.0000] <Philip`>
wycats: "Preprocessing the input stream" says it's a parse error

[10:19:34.0000] <wycats>
Hixie: no problem

[10:19:37.0000] <wycats>
Philip`: lemme look

[10:19:49.0000] <Philip`>
(along with many other characters)

[10:20:02.0000] <wycats>
aha!

[10:20:12.0000] <wycats>
the same characters that are parse errors in a character reference

[10:20:27.0000] <Philip`>
and html5lib treats the input stream as part of the tokenizer

[10:20:44.0000] <wycats>
Philip`: cool

[10:20:50.0000] <Philip`>
hence it being in the tokenizer tests

[10:21:00.0000] <wycats>
Philip`: if you're interested, what I'm working on is a browser polyfill for the HTML5 parser

[10:21:03.0000] <wycats>
mostly just for fun

[10:21:17.0000] <wycats>
there's a node-based one, but it's pretty tied up with node's streaming semantics

[10:21:30.0000] <wycats>
and I'm trying to stick closer to the spec for now, just for educational purposes

[10:25:00.0000] <Hixie>
annevk: every member in HTML has to change somehow, because I currently check for infinity/nan myself for every member.

[10:28:24.0000] <Ms2ger>
Only I always have to point out to people that you do :)

[10:31:28.0000] <Hixie>
it's not clear to me that moving it to a different spec is going to make that better ;-)

[10:31:49.0000] <wycats>
Philip`: so if I follow the preprocessing rules, that should be enough for the tests?

[10:33:13.0000] <Ms2ger>
I think the fact that WebIDL used to allow passing through NaN/Infinity, but you caught it somewhere between WebIDL and your algorithms made it particularly hard

[10:44:36.0000] <Philip`>
wycats: Yeah, preprocessing plus tokenizing should be enough for the tests

[10:45:36.0000] <Philip`>
though if you don't closely follow the spec then number/position of parse errors may change

[10:46:18.0000] <Philip`>
(I think validator.nu doesn't match parse errors precisely)

[10:46:35.0000] <wycats>
Philip`: my setup should guarantee the proper position of the parse errors

[10:47:04.0000] <wycats>
here's an example of a state definition: https://gist.github.com/2330820

[10:47:29.0000] <wycats>
token is the current token, next is the character that was just consumed

[10:47:33.0000] <wycats>
tokens is the token stream

[10:47:47.0000] <wycats>
errorState emits a parse error and switches states

[10:48:01.0000] <wycats>
as you can see, it's pretty close to the spec text, so the parse error positions should be exact

[10:49:22.0000] <wycats>
Philip`: is it expected to get two parse errors for character references containing the illegal characters?

[10:49:50.0000] <wycats>
once due to the preprocessing and once due to http://www.w3.org/TR/html5/tokenization.html#tokenizing-character-references

[10:50:26.0000] <Hixie>
sweet kittens did you really just reference the TR/ page version of the spec

[11:08:14.0000] <zewt>
awooga awooga

[13:01:03.0000] <Philip`>
wycats: I'm not quite sure what case you meant

[13:52:51.0000] <annevk>
Hixie: yeah have these generic rules at the top of the spec that are only overridden for canvas

[13:53:10.0000] <annevk>
Hixie: the new double aligns with those restrictions in throwing for Nan/Infinity

[13:53:28.0000] <annevk>
s/yeah/you/ ...

[13:53:34.0000] <Hixie>
yup

[14:13:33.0000] <wycats>
Philip`: ahh... the case I was looking at was &#..., which won't be invalid in the preprocessing phase

[14:13:37.0000] <wycats>
because it's just a number there

[14:14:55.0000] <annevk>
wycats: what are you writing the parser in?

[14:18:51.0000] <Philip`>
wycats: Indeed

[14:21:53.0000] <wycats>
annevk: JS

[14:22:10.0000] <wycats>
so far I'm probably 70% done with the tokenizer

[14:22:20.0000] <wycats>
I'm missing doctype, script, and entities in attribute values

[14:22:57.0000] <wycats>
annevk: specifically, browser-friendly JS

[14:23:08.0000] <wycats>
there's something written in node, but it makes heavy use of Node's streaming stuff

[14:23:40.0000] <wycats>
I also wanted the code to somewhat resemble the spec for pedagogical reasons

[14:23:43.0000] <annevk>
wycats: did you have a look at flanagan's code?

[14:23:58.0000] <wycats>
annevk: I googled hard and didn't find anything

[14:24:00.0000] <wycats>
link please

[14:24:16.0000] <annevk>
wycats: http://www.davidflanagan.com/2011/10/html-parsing-wi.html

[14:24:26.0000] <annevk>
wycats: https://github.com/andreasgal/dom.js/blob/master/src/impl/HTMLParser.js

[14:25:18.0000] <wycats>
I hope my code will not end up to be 250k

[14:25:20.0000] <wycats>
but unknown

[14:25:22.0000] <wycats>
maybe it will

[14:25:48.0000] <annevk>
probably a lot of it is the named character references

[14:25:55.0000] <wycats>
hm bigger problem

[14:26:02.0000] <wycats>
it seems to heavily use ES5 features

[14:26:15.0000] <wycats>
https://github.com/andreasgal/dom.js/blob/master/src/impl/HTMLParser.js#L155

[14:26:37.0000] <wycats>
half the point of what I'm doing is as a polyfill for browsers without HTML5 parsers

[14:26:41.0000] <wycats>
so I can't use new features

[14:26:46.0000] <annevk>
kk

[14:26:50.0000] <wycats>
:/

[14:26:53.0000] <wycats>
too bad

[14:26:54.0000] <annevk>
anyway, you might be able to borrow some

[14:26:55.0000] <gsnedders>
How are you getting the original HTML to reparse?

[14:27:15.0000] <wycats>
gsnedders: it's for things like innerHTML

[14:27:20.0000] <wycats>
where you have the string already

[14:27:23.0000] <wycats>
and you want a document fragment

[14:27:41.0000] <wycats>
if all goes well, I'll also be able to prototype the context-free parser stuff

[14:28:05.0000] <wycats>
the stuff from the <template> discussion


2012-04-08
[18:30:42.0000] <dbaron>
fyi (re http://lists.w3.org/Archives/Public/public-html/2012Apr/0033.html ) -- I'm probably not planning to write up an objection to the Media TF (in case someone else wants to)

[23:58:11.0000] <annevk>
man, these JavaScript conference peeps sure have a sense for drama

[00:05:14.0000] <othermaciej>
?

[01:09:53.0000] <annevk>
hmm, gbk seems more or less similar

[01:29:48.0000] <annevk>
so the main difference between browsers seems to be the amount of PUA

[01:30:17.0000] <annevk>
and then there's some subtle differences between the two-byte mapping in gbk and gb18030 in Chrome/Gecko

[01:30:24.0000] <annevk>
but in Opera they are identical

[01:40:57.0000] <annevk>
http://lists.w3.org/Archives/Public/www-archive/2012Apr/0030.html

[02:54:10.0000] <annevk>
ok that's specced

[02:54:18.0000] <annevk>
now four byte sequences...

[02:54:22.0000] <annevk>
ugh

[03:07:52.0000] <smaug____>
annevk must be some sort of masochist ;)

[03:11:55.0000] <annevk>
smaug____: slow weekend :)

[03:13:48.0000] <smaug____>
hmm, I guess you don't really have Easter in Holland

[03:14:18.0000] <annevk>
we do

[03:14:27.0000] <smaug____>
at least the time I was in Amsterdam during Easter, it was hardly see anything special

[03:14:53.0000] <annevk>
yeah, you might eat an extra egg or so, or find chocolate eggs if you're a kid

[03:15:27.0000] <smaug____>
comparing to Finland where the country is closed from mid-Thursday to the end of Monday

[03:16:38.0000] <annevk>
the gym is closed today, I think the supermarket is open, but I haven't checked

[04:09:59.0000] <kennyluck>
muh, "Please ensure that your comment is descriptive enough that the editor can understand it."

[04:10:26.0000] <kennyluck>
What is the algorithm used behind?

[06:21:26.0000] <kennyluck>
(text.length <= 5) || (text.indexOf(' ') == text.lastIndexOf(' ')) huh

[06:21:51.0000] <kennyluck>
I was going to send "(editorial) s/pseudo-elements/pseudo-classes/". I guess I'll just add " " at the end.

[06:23:03.0000] <kennyluck>
This conditional looks useless though. All the junk I see on public-html-bugzlla pass this.

[06:23:03.0000] <kennyluck>
s

[06:23:04.0000] <kennyluck>
a

[06:23:05.0000] <kennyluck>
y,

[06:23:06.0000] <kennyluck>
 

[06:23:14.0000] <kennyluck>
say, "please help me"

[06:27:32.0000] <Philip`>
kennyluck: Surely the reason the junk you see on public-html-bugzilla passes that conditional, is that junk that doesn't pass the conditional doesn't get posted to public-html-bugzilla

[06:28:43.0000] <kennyluck>
Philip`, oh. So this is not something new?

[06:29:12.0000] <kennyluck>
Hmm.. makes sense.

[06:29:39.0000] <Philip`>
I think the junk filter has been there quite a while

[06:30:38.0000] <kennyluck>
Hmm… I guess I am just too unlucky for this case :(

[06:35:10.0000] <kennyluck>
Typo reports would fail this not surprisingly though. I see "s/ECMAScript/JavaScipt/" filed for the HTML5diff document, for example.

[06:35:59.0000] <zewt>
heh, nothing's annoying quite like "fiddle with your message to satisfy the arbitrary filters" filters

[06:36:28.0000] <zewt>
like stackoverflow that refuses to post a comment if it's less than like 15 characters, so I ended up adding junk to comment responses like "yep"

[07:17:36.0000] <jarek>
Hi

[07:17:52.0000] <jarek>
is the usage of custom namespace inside SVG documents considered to be a bad practice?

[07:19:01.0000] <jarek>
the current trend at W3C is to HTMLize the SVG syntax, is that correct?

[07:19:40.0000] <annevk>
dunno about W3C

[07:19:54.0000] <jarek>
if I'm developing SVG editor and I would like to identify some groups as layers, should I be doing it via custom XML namespace (like Inkscape) or should I be using element.dataset?

[07:20:43.0000] <annevk>
dataset is only for things pertaining to the document itself

[07:20:56.0000] <annevk>
e.g. a script library or some such

[07:21:06.0000] <annevk>
it's not supposed to have meaning outside the document

[07:22:21.0000] <jarek>
annevk: so something like <g data-layer-id="circles"></g> would not be semantic?

[07:22:51.0000] <jarek>
it feels cleaner than XML namespace, especially if SVG document is going to be embedded directly in HTML5

[07:23:35.0000] <jarek>
btw, are there any plans to standardize SVG layers?

[07:24:06.0000] <jarek>
those can be easily emulated with groups, but each SVG editor uses different naming scheme

[07:24:46.0000] <annevk>
XML namespaces don't work in HTML

[07:25:08.0000] <jarek>
annevk: really? I think that answers me question

[07:25:51.0000] <jarek>
s/me/my

[07:26:40.0000] <jarek>
I can't use XML namespace if my editor will be implemented on top of HTML5

[07:30:38.0000] <jgraham>
jarek: That sounds like a reasonable usecase for data- to me

[07:31:14.0000] <jgraham>
since the data is not intended to be consumed by arbitary third party tools

[07:31:53.0000] <zewt>
jgraham: but it seems like tools shouldn't be generating data into data-, since if you use another tool on the same document that also uses data-, you're in the same namespace

[07:31:59.0000] <zewt>
at least, that seems to be the theory

[07:32:09.0000] <jgraham>
Although I would use a name like data-mysvgedit-layer="circles" where 'mysvgedit' is something reasobaly unique to your tool

[07:32:23.0000] <zewt>
(easily worked around--add your own namespace on top, eg. data-product-whatever)

[07:32:32.0000] <jgraham>
zewt: We seem to eb agreeing :)

[07:32:35.0000] <jgraham>
*be

[07:33:01.0000] <zewt>
(but of course that also defeats the purpose of data-, which I've never bothered to use myself)

[07:33:20.0000] <jgraham>
I don't think it defeats the purpose of data- really

[07:33:25.0000] <zewt>
well, rather than defeats the purpose, it makes it unnecessary

[07:33:39.0000] <zewt>
as a namespacing tool, I mean

[07:34:27.0000] <zewt>
(if whatever the helper accessor is is supported, that's still useful, but not necessary)

[07:34:28.0000] <jgraham>
Well it allows for easy machine checking of validity compared to just mysvgedit-layers

[07:34:49.0000] <jarek>
is there something like iframe's sandbox attribute, but for SVG?

[07:34:54.0000] <jgraham>
And makes it even less likely that there will be collisions in the future

[07:35:05.0000] <jarek>
when you allow users to upload SVG images, you do not want them to inject any scripts

[07:35:26.0000] <jarek>
it looks like the only workaround at the moment is to either sanitize the SVG file or put it inside iframe

[07:35:45.0000] <zewt>
jgraham: if you're using a reasonable prefix, i think the chances of that are already small enough to not be worth uglifying things with a second prefix

[07:39:52.0000] <jarek>
CSS namespaces are pretty much dead

[07:40:06.0000] <jarek>
XHTML is almost dead as well

[07:40:20.0000] <jarek>
I guess it's safe to assume that SVG namespaces have no future

[07:42:16.0000] <jarek>
would would be really cool is if vendors could agree on some common CSS and SVG prefixes

[07:43:05.0000] <jarek>
s/would would/what would

[07:44:28.0000] <Philip`>
I thought data-* was currently only permitted on HTML elements, not on SVG elements

[07:44:54.0000] <jgraham>
Oh, that is probably true

[07:45:05.0000] <jgraham>
Silly artificial boundaries in the platform

[07:45:20.0000] <jarek>
Philip`: it's defined on Element.prototype

[07:45:59.0000] <jarek>
Philip`: if I recall correctly datasets on SVG were standardized recently

[07:46:25.0000] <jarek>
but they are already supported by Chrome

[07:47:03.0000] <Philip`>
I mean "permits" in a document conformance sense

[07:47:08.0000] <Philip`>
in which case the IDL is irrelevant

[07:47:25.0000] <Philip`>
and http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#embedding-custom-non-visible-data-with-the-data-*-attributes only states that it's allowed on HTML-namespace elements

[07:48:53.0000] <jarek>
then the spec needs to change

[07:49:00.0000] <Philip`>
That's quite probable

[07:49:06.0000] <jarek>
I see no reason why dataset should not be allowed on SVG elements

[07:49:18.0000] <Philip`>
Because of silly artificial boundaries in the platform

[07:50:30.0000] <Philip`>
I think adding custom data to SVG elements was one of the use cases considered when adding data-*, and the conclusion was "data-* would solve this problem but it's the SVG WG's responsibility to allow those attributes on their elements"

[07:51:10.0000] <Philip`>
I have no idea if the SVG WG has considered that (or even been told about it)

[07:55:26.0000] <jarek>
you mean SVG WG does not even follow HTML5 standarization? :P

[07:56:03.0000] <jarek>
someone should also tell them about element.classList

[08:08:41.0000] <jarek>
SVG attributes are written either in camelCase, lower-case-with-dashes or lowercasewithoutdashes

[08:08:43.0000] <jarek>
no cool

[08:08:46.0000] <jarek>
s/no/not

[08:12:23.0000] <jgraham>
Well IDL stuff is pretty easy to make work everywhere, just put it on Element

[13:57:36.0000] <jarek>
Hello

[13:57:46.0000] <jarek>
are there any plans for having 3d transforms on SVG elements?

[13:58:14.0000] <jarek>
there is already syntax for that in CSS3

[14:02:58.0000] <jarek>
3d transforms can't be described with 3x3 matrixes, right?

[14:22:37.0000] <gsnedders>
Anyone able to recommend any hotel in Madrid?

[14:31:14.0000] <jarek>
http://www.w3.org/TR/SVG-Transforms/#threed-translate-definition

[14:31:36.0000] <jarek>
^ that's interesting, is it implemented anywhere?

[14:46:00.0000] <remysharp>
not sure if I dreamt this, but isn't there a new method for executing on next event loop/tick - like setTimeout(foo, 10)?

[14:47:30.0000] <remysharp>
setImmediate - I didn't dream javascript - phew!

[14:54:02.0000] <zewt>
not mutually exclusive

[14:59:53.0000] <zewt>
gaaaaaaah

[15:00:26.0000] <zewt>
awesomeness is firefox crashing while spending half an hour trying to composite a message in jp

[15:00:46.0000] <zewt>
time for a test of session restoration!

[15:36:48.0000] <jgraham>
gsnedders: I have stayed at http://www.hostaladriano.com/ a couple of times. Hardly amazing but good/cheap enough to go back to

[15:36:59.0000] <jgraham>
Also very central

[16:14:00.0000] <heycam>
Philip`, yes, the SVG WG is planning on having data-* attributes on SVG elements


2012-04-09
[18:12:52.0000] <zewt>
hmm. what specs (other than webgl) have entry points that take numeric arrays (int[], float[])? can't think of any

[18:13:04.0000] <zewt>
every search engine ever written has been useless at searching for "int[]"

[20:30:35.0000] <Hixie>
i wish there was a way in CSS to say 'width: fill-the-container-but-for-the-purposes-of-shrink-wrap-act-as-if-you-had-a-width-of-0'

[00:13:30.0000] <annevk>
we're gonna mention "Document Object Model"? hmm

[00:14:45.0000] <Ms2ger`>
Oh, was that the first?

[00:14:47.0000] <annevk>
if we do <code>Text</code> we should also do <code>DocumentType</code> I think

[00:14:54.0000] <annevk>
I think so

[00:15:00.0000] <annevk>
I carefully avoided it thus far I think

[00:15:15.0000] <Ms2ger`>
I didn't find concept-text :)

[00:15:54.0000] <annevk>
fair enough

[00:31:09.0000] <annevk>
hmm

[00:31:21.0000] <annevk>
the shift_jis algorithm advertised everywhere is quite complex, but why...

[00:31:37.0000] <annevk>
compare:

[00:31:39.0000] <annevk>
JPROW = 94

[00:31:39.0000] <annevk>
def get_sjis_i2(lead, trail):

[00:31:39.0000] <annevk>
    leadoffset = 0xC1 if lead > 0x9F else 0x81

[00:31:39.0000] <annevk>
    trailoffset = 0x41 if trail > 0x7F else 0x40

[00:31:39.0000] <annevk>
    return (lead-leadoffset) * (2 * JPROW) + trail - trailoffset

[00:31:39.0000] <annevk>
def get_sjis_i1(lead, trail):

[00:31:40.0000] <annevk>
    adjust = 1 if trail < 0x9F else 0

[00:31:40.0000] <annevk>
    leadoffset = 0x70 if lead < 0xA0 else 0xB0

[00:31:41.0000] <annevk>
    trailoffset = (0x41 if trail > 0x7F else 0x40) if adjust else 0x9F

[00:31:41.0000] <annevk>
    return ((((lead - leadoffset) * 2) - adjust) - 0x21) * JPROW + trail - trailoffset

[00:32:52.0000] <annevk>
gives identical results

[00:46:37.0000] <annevk>
not enough shift_jis people here huh? :)

[01:32:31.0000] <annevk>
hmm

[01:32:33.0000] <annevk>
Gecko...

[01:32:34.0000] <annevk>
<meta charset=gbk><a></a><script>var a = document.getElementsByTagName("a")[0]; a.href = "?\u20AC"; alert(a.href) </script>

[01:32:38.0000] <annevk>
Y U NO WORK?!

[01:35:47.0000] <annevk>
but given an index (which I have) and a function to convert a point in an index to a byte sequence (which is not too hard), testing encoders should be fairly straightforward

[01:35:50.0000] <annevk>
except in Gecko

[01:41:51.0000] <annevk>
hmm

[01:41:58.0000] <annevk>
you have to account for duplicates somehow too

[05:33:26.0000] <Velmont>
Hixie: I think most do.

[05:34:53.0000] <Velmont>
Would be really cool to have in the css though, -- not too nice if you don't have tab-complete. fill-the-container-but-for-the-purposes-of-shrink-wrap-act-as-if-you-had-a-width-of-0 -- guess it'll also be hard to remember exactly. :P

[05:44:12.0000] <annevk>
seems like my alternative shift_js math is correct

[06:28:47.0000] <annevk>
oh hey, that thing I was talking about the other day is called a fencepost error

[06:28:48.0000] <annevk>
http://en.wikipedia.org/wiki/Off-by-one_error

[09:49:58.0000] <MikeSmith>
jzaefferer or scott_gonzalez if you're around, wanted to ask how many files total are in your test suite

[09:50:56.0000] <jzaefferer>
MikeSmith: About 300

[09:51:03.0000] <MikeSmith>
oh OK

[09:51:06.0000] <MikeSmith>
so that's fine

[09:51:34.0000] <TabAtkins>
Hixie: You can get that behavior by saying that the intrinsic width is 0, but it defaults to width:fill (defined in Writing Modes).

[09:52:26.0000] <MikeSmith>
jzaefferer: I put together a command-line validation client that won't require you to run the service to validate your files. But I'm waiting on hsivonen to get back to review the code before I land it

[09:52:26.0000] <Hixie>
TabAtkins: oh, cool

[09:52:33.0000] <Hixie>
TabAtkins: is that anywhere close to being implemented?

[09:52:52.0000] <MikeSmith>
jzaefferer: it will reduce your validation time to a few seconds

[09:52:59.0000] <TabAtkins>
Nobody's touched it, but it's just "what width:auto does for blocks", so implementation is trivial once someone cares about it.

[09:54:13.0000] <MikeSmith>
jzaefferer: minimum of 4 seconds or so to validate your 300 files, but validation time for each file will be reduced to 20ms or at most 100ms I think

[09:54:31.0000] <scott_gonzalez>
MikeSmith: That's great.

[09:55:26.0000] <MikeSmith>
will require a single jar file

[09:55:31.0000] <MikeSmith>
about 18MB

[09:56:46.0000] <MikeSmith>
which is the other thing I need to talk to hsivonen about

[09:57:11.0000] <MikeSmith>
we currently don't actually distribute any third-party cod

[09:57:15.0000] <MikeSmith>
*code

[09:57:48.0000] <Hixie>
TabAtkins: bummer

[09:58:25.0000] <MikeSmith>
scott_gonzalez: making a single jar available requires distributing 3rd-party code, so I want to make sure hsivonen  is OK with that before we do it

[09:58:54.0000] <scott_gonzalez>
ok

[10:14:25.0000] <TabAtkins>
Hixie: Are you using this for a spec, or for something real?

[10:14:31.0000] <Hixie>
real

[10:14:43.0000] <Hixie>
i come across it all the time

[10:14:46.0000] <TabAtkins>
Ah, never mind then.

[10:15:15.0000] <Hixie>
whenever i have something that shrinkwraps, e.g. a dialog or something, but it has to shrinkwrap around some widgets, and yet the dialog also contains text that can wrap

[10:15:24.0000] <Hixie>
and i'm happy for the text to wrap at whatever width the dialog ends up at

[10:16:28.0000] <TabAtkins>
Ah, but the dialog instead fills the parent, because the text is long enough to force that shrink-wrapping beahvior.

[10:16:32.0000] <TabAtkins>
Interesting.

[10:35:40.0000] <Hixie>
what should happen if you click or mouseover an element that is outside a modal dialog

[10:35:44.0000] <Hixie>
should i just ignore the event?

[10:36:05.0000] <Hixie>
or should i do something more subtle, like only kill click events or something

[10:38:03.0000] <Hixie>
i think i'll just kill all user interaction events and prevent all focusing of elements outside the modal subtree and its ancestors

[10:38:34.0000] <TabAtkins>
I think that's legit.

[10:40:17.0000] <Hixie>
i'm going to introduce inert="" as well while i do this, so that you can have semi-modal dialogs as some people have requested

[10:40:26.0000] <Hixie>
and make it use the same infrastructure

[10:55:49.0000] <Hixie>
ok inertism (inertia? :-) ) blocks user interaction events and makes things not focusable

[10:55:57.0000] <Hixie>
anything else it should block while i'm at it?

[10:55:58.0000] <Hixie>
(bbiab)

[10:57:33.0000] <scott_gonzalez>
Hixie: I don't recall the cross-browser specifics, but you might need to go into detail about how find/highlighting works while an inert element is open.

[10:58:58.0000] <scott_gonzalez>
A quick test shows that in Chrome if an element has focus and you bring up the find interface, you can search for text on the page and then press escape to create a range around the first result of the find, which moves focus to the range.

[10:59:31.0000] <scott_gonzalez>
I recall doing that a lot when I was testing modal plugins a few years ago to see how well they worked.

[11:16:41.0000] <rafaelw_>
annevk, smaug___, sicking: re: MutationObservers attributeFilter discussion.

[11:16:56.0000] <sicking>
rafaelw_: yes?

[11:16:59.0000] <rafaelw_>
question: MutationRecord.name (when type="attribute")

[11:17:14.0000] <rafaelw_>
in the case of xml, is that prefix:localName

[11:17:17.0000] <rafaelw_>
or just localName

[11:17:18.0000] <rafaelw_>
?

[11:18:13.0000] <sicking>
looking

[11:18:18.0000] <rafaelw_>
i.e. what information is reported in the MutationRecord.

[11:18:22.0000] <rafaelw_>
?

[11:18:33.0000] <sicking>
rafaelw_: note that attributes in the xlink namespace might not have a prefix

[11:18:41.0000] <sicking>
so they can have .name === .localName

[11:21:23.0000] <sicking>
rafaelw_: currently .attributeName is set to the name per spec, not localName

[11:21:33.0000] <sicking>
rafaelw_: lemme look what we do in our impl

[11:23:15.0000] <rafaelw_>
WebKit appears to report localName right now.

[11:23:17.0000] <rafaelw_>
;-(

[11:23:47.0000] <sicking>
yeah, we do the same in gecko

[11:23:50.0000] <sicking>
i prefer that behaviro

[11:23:54.0000] <sicking>
behavior

[11:24:02.0000] <rafaelw_>
reporting only localName?

[11:24:09.0000] <sicking>
.name is rarely useful from a correctness point of view

[11:24:45.0000] <sicking>
actually, especially in the case of mutation observers, when you are often observing someone else's code, it makes much more sense to ignore prefixes

[11:24:53.0000] <sicking>
yeah, we only report localName

[11:25:07.0000] <rafaelw_>
but won't it be ambiguous what happened?

[11:25:19.0000] <rafaelw_>
you may not know what attribute changed?

[11:28:54.0000] <TabAtkins>
Hixie: The word you're looking for is "inertness".

[11:29:59.0000] <TabAtkins>
Hixie: What happens if you start selecting non-inert text, and drag into inert text?

[11:30:17.0000] <TabAtkins>
Hixie: And did you handle accesskeys/etc?

[11:46:53.0000] <rafaelw_>
sicking: ^^. if only localName is reported, isn't that potentially ambiguous?

[11:54:16.0000] <smaug____>
rafaelw_: ?

[11:54:45.0000] <rafaelw_>
hey. trying to settle the attributeFilter question.

[11:55:04.0000] <rafaelw_>
the thing I was asking is what does MutationRecord.name report if type='attribute'

[11:55:08.0000] <rafaelw_>
name or localName.

[11:55:19.0000] <rafaelw_>
apparently the spec says name, but both of us implemented localName.

[11:55:26.0000] <smaug____>
yes

[11:55:36.0000] <rafaelw_>
and my question is: isn't that potentially ambiguous for XML?

[11:55:38.0000] <smaug____>
because localName actually makes sense ;)

[11:55:48.0000] <rafaelw_>
i.e. you won't know which attribute changed.

[11:55:57.0000] <smaug____>
how would it be more ambiguous than name ?

[11:56:27.0000] <rafaelw_>
if an element has foo:bar & foo2:bar and you get told that 'bar' changed.

[11:56:29.0000] <smaug____>
you need to check namespaceuri + localName

[11:57:01.0000] <rafaelw_>
i'm assuming that namespaceURI would be the same for both foo:bar and foo2:bar.

[11:57:36.0000] <rafaelw_>
maybe i'm missunderstanding how this all works. it looks to me like there are three things: namespaceURI, prefix and localName

[11:58:00.0000] <rafaelw_>
where name == prefix:localName

[12:00:00.0000] <rafaelw_>
smaug___: am I misunderstanding something?

[12:00:18.0000] <smaug____>
I don't think so

[12:00:20.0000] <smaug____>
:)

[12:00:36.0000] <smaug____>
rafaelw_: remember, namespaced attributes may not always have a prefix

[12:00:50.0000] <rafaelw_>
can the example i gave above occur?

[12:01:38.0000] <smaug____>
I would assume no, but I'm not actually sure

[12:02:50.0000] <smaug____>
rafaelw_: not possible http://www.w3.org/TR/REC-xml-names/#uniqAttrs

[12:02:53.0000] <rafaelw_>
you assume it doesn't currently, or it *can't*.

[12:03:42.0000] <smaug____>
foo:bar and foo2:bar where foo and foo2 are prefixes for the same namespace isn't possible

[12:06:09.0000] <rafaelw_>
i see.

[12:06:26.0000] <rafaelw_>
i get it know.

[12:06:39.0000] <rafaelw_>
thank you. ok, I agree. localName seems like the right thing.

[12:10:43.0000] <rafaelw_>
do we need a bug to change to spec to say that MutationRecord.name reports localName only?

[12:15:08.0000] <smaug____>
rafaelw_: I assume the spec would need to be changed in order to fix that that attributeFilter too

[12:15:18.0000] <smaug____>
not sure if annevk prefer separate bugs

[12:17:20.0000] <smaug____>
rafaelw_: btw, is the GC handling I proposed ok to you ?

[12:17:29.0000] <annevk>
it still seems wrong to me to standardize on local name given that most APIs around non-namespaced attributes care about qualified name

[12:17:46.0000] <annevk>
e.g. Attr.name, setAttribute(), getAttribute(), hasAttribute(), etc.

[12:20:11.0000] <rafaelw_>
smaug___: yp. GC handling is right. It's what we implemented (though we didn't have tests and it turns out we had a bug -- which is now fixed).

[12:28:40.0000] <Hixie>
scott_gonzalez, TabAtkins: thanks, will consider those points

[12:32:57.0000] <sicking>
rafaelw_: looking at attributeName + attributeNamespace should make it unambiguous

[12:33:00.0000] <sicking>
rafaelw_: sorry, i was unclear. We gecko only looks at localName + namespace of attributes

[12:33:04.0000] <sicking>
rafaelw_: what we don't look at is the name (== localName + prefix)

[12:33:08.0000] <sicking>
rafaelw_: looking at the name is generally more a convenience thing, since it's a single string trying to describe a tuple

[12:33:14.0000] <sicking>
rafaelw_: but it's more error prone since it breaks down if someone is using different prefixes than you think they are

[12:34:51.0000] <sicking>
rafaelw_: in other words, I think the behavior webkit and gecko has implemented is better than what the spec does since it's less error prone in all cases, and only harder to use in extremely rare edge cases

[12:38:21.0000] <rafaelw_>
i get it now. thanks.

[12:38:22.0000] <rafaelw_>
i agree.

[12:55:57.0000] <sicking>
rafaelw_: cool

[14:13:51.0000] <TabAtkins>
Hm.  If you were writing a parser for CSS, for a spec, would you do it as a flat tokenization phase followed by a full tree-build phase, or a more intelligent tokenization phase that handles some elements of the syntax, followed by a somewhat light tokenization phase?

[14:14:05.0000] <TabAtkins>
s/light tokenization/lighter tree-building/

[14:15:52.0000] <TabAtkins>
Basically I'm wondering if I should handle CSS's rule that statements/blocks can't end while there's an unmatched ([{ on the stack at the tokenizer or the tree-builder level.

[14:20:13.0000] <TabAtkins>
Hrm.  I think I should do the flat tokenization approach, which means rewriting some things.

[14:33:45.0000] <Hixie>
TabAtkins: imho the quicker you move things from dealing with characters and strings to something more abstract, the better, so i'd go with a light tokeniser at the top that turns things into tokens, and then some sort of processor on top of that to get something structured

[14:34:11.0000] <Hixie>
TabAtkins: but that's just because i like dealing with strongly typed tokens more than with strings and characters :-)

[14:35:33.0000] <TabAtkins>
Hixie: I think you're right.  Having to switch levels between raw characters and tokens is annoying.

[14:36:04.0000] <Hixie>
also don't forget you can have multiple levels, not just two

[14:36:26.0000] <Hixie>
like, one level to get tokens, one to wrap the tokens up into nested blocks, and then finally one to actually process the blocks

[14:36:30.0000] <TabAtkins>
It means the tokenizer has to do a bit more work in some cases, because I have much less contextual knowledge (I can't just say "oh, you're starting a selector. consume until you see '{' or EOF.)

[14:36:37.0000] <TabAtkins>
Yeah.

[14:36:55.0000] <Hixie>
yeah some of your tokens might be a bit special

[14:37:08.0000] <Hixie>
in CSS it's not so bad though because the escaping is the same everywhere and there's little ambiguity iirc

[14:37:25.0000] <Hixie>
e.g. an ident is an ident everywhere, whether it's a tag name or a property name or a media query type

[14:37:42.0000] <TabAtkins>
Yeah.

[14:37:47.0000] <Hixie>
(might be some exceptions but i can't think of any)

[14:37:48.0000] <TabAtkins>
Selectors are... weird.

[14:38:43.0000] <TabAtkins>
I think I need to parse ".foo" as a DELIM followed by an IDENT. :/

[14:38:43.0000] <Hixie>
can't you do almost everything using only the tokens ident, punctuation ([, (, {, :, +, >, spaces, etc), strings ("...", '...'), and comments (/*...*/)?

[14:39:03.0000] <Hixie>
oh and numbers

[14:39:04.0000] <TabAtkins>
Yeah, maybe.

[14:39:15.0000] <Hixie>
so the tokeniser can do \unescaping

[14:39:27.0000] <Hixie>
i dunno i'm saying this all from memory :-)

[14:39:35.0000] <Hixie>
anywho

[14:39:43.0000] <TabAtkins>
I want to be a touch smarter to I'll directly get PERCENTAGE and DIMENSION rather than NUMBER + IDENT, but basically yeah.

[14:40:57.0000] <Hixie>
you need context for that iirc

[14:41:03.0000] <Hixie>
consider font: 1em 1em;

[14:41:20.0000] <Hixie>
which is equivalent to font: initial; font-size: 1em; font-family: "1em";

[14:41:43.0000] <TabAtkins>
Nah, that's fine actually.  font-family parses a bunch of idents.  We regularized that last year.

[14:41:47.0000] <TabAtkins>
No special parsing rule there.

[14:41:55.0000] <Hixie>
really? font: 1em 1em is invalid now?

[14:41:57.0000] <TabAtkins>
I think it might allow numbers/dimensions too.

[14:42:24.0000] <TabAtkins>
The point is that font-family doesn't require anythign special until you actually parse the declaration itself.

[14:42:33.0000] <TabAtkins>
No special bheavior is needed at the lower levels.

[14:42:35.0000] <Hixie>
my point is that you have to treat "font:1em 1.0em" and "font:1em 1em" differently

[14:42:46.0000] <Hixie>
but i might be wrong i guess :-)

[14:43:08.0000] <Hixie>
should be easy to test what browsers do now that they support @font-face

[14:43:16.0000] <TabAtkins>
Ah, yes, it's all idents.

[14:43:24.0000] <TabAtkins>
font-family: 1em; is now invalid.

[14:46:18.0000] <Hixie>
good to know

[14:46:21.0000] <Hixie>
i wonder who implements that :-)

[14:47:07.0000] <Hixie>
webkit gets it right

[14:47:22.0000] <Hixie>
gecko too

[14:47:24.0000] <Hixie>
nice!

[14:49:43.0000] <TabAtkins>
Yeah, it was tracked in the CSS2.1 testsuite once we made the change, so people should have adjusted quickly.

[15:38:00.0000] <Hixie>
well accesskeys are proving a mite difficult

[15:38:53.0000] <Hixie>
i guess i could just make commands Disabled if they are inert

[15:41:33.0000] <TabAtkins>
That makes sense, I suppose.

[15:42:59.0000] <Hixie>
that would be awesome actually

[15:43:09.0000] <Hixie>
it would automatically disable everything in a menu that referenced commands in that section

[15:43:16.0000] <Hixie>
even if the menu wasn't inert

[16:09:51.0000] <zewt>
so, is feras planning to ignore everyone and go ahead with his broken design? welcome to the future, where web api design is still done by blunt coercion

[16:12:01.0000] <hober>
zewt: ?

[16:12:12.0000] <zewt>
oneTimeOnly

[16:14:56.0000] <hober>
oh, the blob url stuff?

[16:15:03.0000] <zewt>
yeah

[16:15:07.0000] <hober>
it's so broken

[16:15:11.0000] <hober>
it makes me sad

[16:15:19.0000] <Hixie>
implement it first and ship earlier

[16:15:23.0000] <Hixie>
that's how it works

[16:15:33.0000] <zewt>
basically it's the old story: microsoft implements something broken; microsoft goes "here's the api!"; everyone goes "this is broken, here's how to fix it"; microsoft puts fingers in ears and runs away

[16:15:51.0000] <Hixie>
welcoem to the web

[16:18:55.0000] <zewt>
heh, tickets like this help make sure I don't waste time filing bugs on firefox https://bugzilla.mozilla.org/show_bug.cgi?id=641509

[16:19:35.0000] <zewt>
basically about fifteen thousand people going "taking the message out of onbeforeunload breaks our stuff" and several explanations of why it's harmless to show it, and it gets ignored for a year then closed without reading any of it

[16:30:18.0000] <Hixie>
anyone know what i should do at the aria level for inert="" and inert subtrees generated by modal dialogs?

[16:30:24.0000] <Hixie>
s/generated/established/

[16:31:03.0000] <othermaciej>
Hixie: is "inert" close in function to "disabled"?

[16:31:15.0000] <Hixie>
yeah. i was thinking aria-disabled="" might work.

[16:31:41.0000] <Hixie>
does "Used in Roles:All elements of the base markup" mean that it can be applied to elements regardless of role?

[16:31:56.0000] <othermaciej>
yes

[16:33:02.0000] <Hixie>
ok, aria-disabled it is.

[16:52:24.0000] <Hixie>
what exception should i throw if you try to showModal() a dialog that's already showing?

[16:52:40.0000] <Hixie>
(if you show() a dialog that's already showing, i just do it. but it seems likely that showModal()ing twice is a bug.)

[16:56:17.0000] <dbaron>
what makes it the same?  Having the same URL?  (Including query and hash?)

[16:56:33.0000] <Hixie>
same <dialog> element

[16:57:04.0000] <Hixie>
(this is not showModalDialog())

[16:57:09.0000] <Hixie>
(it's <dialog>.showModal())

[16:57:17.0000] <dbaron>
ah

[16:58:15.0000] <Hixie>
i guess NotSupportedError


2012-04-10
[17:05:23.0000] <zewt>
"not supported" depending on state sort of seems odd

[17:06:16.0000] <Hixie>
InvalidStateError then?

[17:06:19.0000] <zewt>
InvalidStateE...yes

[17:06:32.0000] <Hixie>
k

[17:25:58.0000] <Hixie>
ok, <dialog> is taking shape

[17:26:13.0000] <Hixie>
probably be done tomorrow, if no hidden surprises come up

[17:27:00.0000] <tantek>
hidden surprise dialogs are no good

[17:27:05.0000] <Hixie>
heh

[17:27:21.0000] <Hixie>
oh, wait, i forgot about hte magic form stuff

[17:27:23.0000] <Hixie>
that'll take longer

[17:29:34.0000] <Hixie>
<form method=dialog> <input type=submit> </form>

[17:29:47.0000] <Hixie>
where the submit button closes the dialog and sets dialog.returnValue to submit button's value

[17:30:13.0000] <Hixie>
with all the form validation stuff happening as well of course

[17:30:26.0000] <Hixie>
hmm

[17:31:42.0000] <Hixie>
or i guess we could just have them use <form action="javascript:void(0)" onsubmit="parentElement.close()">

[17:31:46.0000] <Hixie>
but that seems lame

[17:32:20.0000] <Hixie>
then again, maybe instead of method=dialog, we should have method=none so it would work outside dialogs too

[17:32:31.0000] <Hixie>
and just do the closing-dialog behaviour be a magic thing if you happen to be inside a form?

[17:32:51.0000] <Hixie>
ok i'll think about it. if anyone has any ideas, paste them here or on the wiki.

[17:32:51.0000] <Hixie>
bbl.

[18:32:49.0000] <tantek>
Hixie - regarding having a form submit button close the dialog etc., could we do the same for modeless pop-up-window "dialogs"? That is, have some way for a form in a child window to close the window upon successful submission?

[18:33:10.0000] <tantek>
The specific use-cases I'm thinking of here are quite similar to the dialog use-cases, e.g. Plancast.com pops-up a twitter sign-in window, and many tweet buttons/links also pop-up a window for the user to complete their tweet and submit. Would be great if that submit could somehow close the child window.

[18:34:08.0000] <tantek>
(without requiring JS to be one for it to work, note Twitter's tweet actions themselves work without JS but the pop-up windows still require the user to manually close them when done)

[20:33:00.0000] <zewt>
site:whatwg.org/specs gives me tons of links under http://www.whatwg.org/specs/web-apps/2009-10-27/, http://www.whatwg.org/specs/web-apps/current-work/.w3c-html-core/ and other noise now ... wish thsoe would either be blocked from search engines or moved out of /specs

[20:37:12.0000] <Hixie>
if you give me a robots.txt that blocks what you want to block, i'll happily add it

[20:47:08.0000] <zewt>
well, I have no idea what all of the stuff under there is, heh

[21:49:59.0000] <zewt>
i find it painfully discouraging that i actually have to spend time arguing for not baking manual word-wrapping into a text format in 2012

[21:51:06.0000] <zewt>
feels like i'm trying to argue a language designer out of putting line numbers on every line and having GOTO N be the primary form of flow control

[22:26:04.0000] <WeirdAl>
rniwa: ping on UndoManager spec... what DOM mutation events / observer notifications are required to fire on undoing an action?

[22:26:40.0000] <WeirdAl>
DOMAttrModified & friends

[22:26:48.0000] <rniwa>
WeirdAl: hi. yes.

[22:27:04.0000] <WeirdAl>
:) I'm wondering if they're all required

[22:27:05.0000] <rniwa>
WeirdAl: mutations made by the undo manager are regular DOM mutations

[22:27:18.0000] <rniwa>
WeirdAl: they're.

[22:27:32.0000] <rniwa>
WeirdAl: however, DOM mutation events are deprecated API so I can be careless.

[22:27:41.0000] <WeirdAl>
mutation observers are replacing them

[22:27:53.0000] <WeirdAl>
so, no, you can't ;)

[22:27:54.0000] <rniwa>
WeirdAl: they should certainly be included in the mutation records that mutation observers receive

[22:29:46.0000] <WeirdAl>
Should there be at least a token mention about mutation observers in section 3.1?

[22:30:26.0000] <WeirdAl>
/me is planning on implementing a "partial DOM" which is non-compliant in many respects, but UndoManager he'll probably want to fully implement

[22:33:32.0000] <rniwa>
WeirdAl: that makes sense.

[22:33:47.0000] <rniwa>
WeirdAl: jsdom?

[22:33:50.0000] <rniwa>
WeirdAl: or dom.js?

[22:33:55.0000] <WeirdAl>
neither

[22:33:59.0000] <rniwa>
oh, i see.

[22:34:04.0000] <WeirdAl>
and no, not envjs

[22:34:29.0000] <WeirdAl>
I'm going off the deep end... I've been forced to conclude that I pretty much have to write my own for a special purpose

[22:34:53.0000] <rniwa>
/me thinking maybe I can use WeirdAl's partial dom for https://plus.google.com/105748986001435560355/posts/aDV61jgSNXj

[22:35:12.0000] <WeirdAl>
forget it, you won't want it :)

[22:35:22.0000] <rniwa>
WeirdAl: ?

[22:35:37.0000] <WeirdAl>
it won't be implementing HTML :D

[22:35:42.0000] <rniwa>
WeirdAl: I see.

[22:35:47.0000] <rniwa>
that's interesting

[22:35:50.0000] <WeirdAl>
at least, not for probably a year or so

[22:36:09.0000] <WeirdAl>
I'm looking more at the XML world... it's cleaner :)

[22:36:31.0000] <rniwa>
I see.

[22:36:41.0000] <rniwa>
WeirdAl: but I hear that XML world is doomed

[22:36:48.0000] <WeirdAl>
maybe it is

[22:37:04.0000] <WeirdAl>
but I think that's because we just don't have good tools to edit it

[22:37:11.0000] <WeirdAl>
we have tools

[22:37:19.0000] <WeirdAl>
they're just not that good at it

[22:38:45.0000] <WeirdAl>
more specifically, the XML languages we humans are most likely to edit - XHTML, MathML, SVG, XUL, XBL, etc. - those are the ones for which the tools frankly need a lot of work

[22:40:36.0000] <rniwa>
true

[22:40:48.0000] <rniwa>
WeirdAl: I want a good editor for MathML.

[22:41:14.0000] <WeirdAl>
best I've seen for free is Amaya, and it's rather painful to work with

[22:41:56.0000] <rniwa>
yeah...

[22:41:59.0000] <WeirdAl>
believe me, I'm working on a new kind of XML editor in my spare time, one where new XML languages are literally like Firefox addons

[22:42:55.0000] <WeirdAl>
but to get there, I'm trying to build the tools to build those addons

[22:46:56.0000] <zcorpan>
Hixie: the status box in http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#editing-0 looks like a bogus edit

[22:51:10.0000] <rniwa>
WeirdAl: i'll look forward to it :)

[22:51:14.0000] <Hixie>
zcorpan: feel free to fix it :-)

[22:59:23.0000] <zcorpan>
Hixie: i don't know what the previous state was... but, changed to something less inaccurate

[22:59:35.0000] <Hixie>
thanks

[00:45:02.0000] <annevk>
I wish the source code of the spider from http://dotnetdotcom.org/ was available so we could create a fresh index

[01:11:41.0000] <annevk>
what's the best way to represent an ordered dictionary in JSON?

[01:12:27.0000] <annevk>
it's about mapping one offset to another

[01:13:23.0000] <annevk>
e.g. 0:80, 36:A5, 50:B8, ..

[01:13:39.0000] <annevk>
nested array?

[01:13:45.0000] <annevk>
seems kind of ugly

[01:14:53.0000] <othermaciej>
array containing (the dictionary, an array of the keys in order)

[01:17:53.0000] <annevk>
I guess since the keys are sortable I could also do that during lookup...

[01:19:57.0000] <annevk>
kind of annoying that only gb18030 needs this special kind of index whereas all other encodings can do with a simple index

[01:20:17.0000] <annevk>
China, you're annoying!

[01:22:31.0000] <annevk>
back later

[01:46:21.0000] <david_carlisle>
rniwa: what kind of environment are you looking for an editor? personally I have  a biased view on the worls and use emacs for everything, but firefox addon http://www.maths-informatique-jeux.com/blog/frederic/?post/2010/11/14/Mozilla-MathML-Add-ons is  quite promising, or shockingly enough, Word isn't bad,  there are several others it depends what you want...

[02:03:48.0000] <Ms2ger>
Well done, public-webapps!

[02:04:00.0000] <Ms2ger>
January to March 2012 ... 1337 messages

[02:04:44.0000] <annevk>
nice

[02:11:04.0000] <annevk>
since the gb18030 index is so different from other indexes, should I give it a different name?

[02:11:13.0000] <annevk>
and if so, suggestions?

[02:22:35.0000] <MikeSmith>
Ms2ger: can you remind me, was somebody working already on testharness.js-enabling the canvas test suite?

[02:22:45.0000] <Ms2ger>
Indeed

[02:22:47.0000] <Ms2ger>
I was!

[02:22:56.0000] <Ms2ger>
It's in a bug somewhere

[02:22:56.0000] <MikeSmith>
oh cool

[02:23:05.0000] <Ms2ger>
Waiting for Philip`

[02:23:06.0000] <MikeSmith>
w3c bug?

[02:23:08.0000] <Ms2ger>
Yep

[02:23:10.0000] <MikeSmith>
oh

[02:23:20.0000] <MikeSmith>
waiting on Philip` to just land your changes?

[02:23:47.0000] <Ms2ger>
To see if it makes sense to him

[02:23:58.0000] <MikeSmith>
OK

[02:24:04.0000] <MikeSmith>
/me looks for the bug

[02:24:48.0000] <MikeSmith>
found it

[02:24:53.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=14191

[02:25:28.0000] <zcorpan>
annevk: index-gb18030-Y-U-DIFFERENT???.txt

[02:29:22.0000] <annevk>
heh

[02:29:48.0000] <annevk>
so the way gb18030 works is that there are 207 ranges

[02:30:45.0000] <annevk>
and by computing a number from the four bytes sequences

[02:30:56.0000] <annevk>
the ranges are basically offsets

[02:31:12.0000] <annevk>
consisting of "offset, code point offset"

[02:31:32.0000] <annevk>
you then find the last range whose offset is equal or less than the computed index

[02:31:43.0000] <annevk>
and then you do computed index - offset + code point offset

[02:31:54.0000] <annevk>
and you have a code point

[02:32:25.0000] <annevk>
on top of that you exclude computed indexes between 39419 and 189000 and anything greater than 1237575

[02:32:41.0000] <MikeSmith>
the webgl test runner is nice

[02:32:42.0000] <MikeSmith>
https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/tests/webgl-conformance-tests.html

[02:33:09.0000] <annevk>
so I guess I'll just call it index-gb18030 like the others and explain in prose look works differently

[02:33:25.0000] <annevk>
and in JSON I'll store it as an object of which you need to sort the keys yourself

[02:33:51.0000] <annevk>
and then publish the JSON for the indexes as indexes.json

[02:34:03.0000] <annevk>
and publish the index.py which generates the index-*.txt files

[02:34:09.0000] <annevk>
merge the single-byte encodings into it

[02:34:31.0000] <annevk>
and have a separate encodings.json which lists the encoding names and labels

[02:38:35.0000] <annevk>
http://i.imgur.com/vynW8.png o_O

[02:39:14.0000] <MikeSmith>
david_carlisle: btw, is MathML support still not enabled in Chrome?

[02:39:43.0000] <MikeSmith>
annevk: heh

[02:39:49.0000] <charlvn>
annevk: it's a pity we can't see the nationality of those people on the pic... i bet i know what the results will be :)

[02:41:00.0000] <Ms2ger>
Dutch? :)

[02:41:17.0000] <MikeSmith>
david_carlisle: OK, I see that it's still not

[02:41:23.0000] <Ms2ger>
MikeSmith, the webgl test harness, otoh, sucks badly

[02:41:43.0000] <david_carlisle>
MikeSmith: No, but there is a new person working on the mathml in the webkit codebase and google people are in teh reviewing loop this time, so things are looking better

[02:41:45.0000] <MikeSmith>
Ms2ger: yeah, I got about 10% through it and it crashes ever time

[02:41:58.0000] <Ms2ger>
Blame your graphics driver

[02:42:02.0000] <MikeSmith>
crashes in every browser I have tried with so far

[02:42:45.0000] <MikeSmith>
david_carlisle: given that it's enabled in Safari, I wonder why not in Chrome. Is the issue that it's too incomplete at this point?

[02:43:15.0000] <Ms2ger>
Because Chrome has *some* quality standards?

[02:43:19.0000] <charlvn>
Ms2ger: i had an idea of something a bit further west ;)

[02:43:49.0000] <MikeSmith>
david_carlisle: pages like http://www.mozilla.org/projects/mathml/demo/texvsmml.html seem to mostly render as expected

[02:43:55.0000] <MikeSmith>
in Safari

[02:43:56.0000] <david_carlisle>
MikeSmith: The stated reason is that it did not have relevant security review, whether there was actual security concerns or if that is just teh trump card to play to avoid doing anything I am not in a position to say:-0

[02:44:05.0000] <MikeSmith>
ah, OK

[02:44:28.0000] <Ms2ger>
annevk, hmm, fascinating how you were just looking at that page :)

[02:45:44.0000] <annevk>
recent changes to the WHATWG Wiki is one of the few speed dial things I have

[02:45:50.0000] <annevk>
so sometimes when I open a new tab I click it

[02:46:26.0000] <MikeSmith>
Ms2ger: found in source of WebGL test page: <script src="../../resources/js-test-pre.js"/>

[02:46:40.0000] <MikeSmith>
self-closing tag

[02:46:43.0000] <Ms2ger>
Yeah

[02:46:50.0000] <Ms2ger>
They come from webkit

[02:46:51.0000] <MikeSmith>
not a good sign

[02:47:06.0000] <zcorpan>
webkit still does that?

[02:49:05.0000] <MikeSmith>
hmm, that test runner doesn't think WebKit nightly supports WebGL

[02:49:27.0000] <annevk>
is

[02:49:32.0000] <annevk>
"this index works different from ..."

[02:49:39.0000] <annevk>
or "this index works differently from ..."

[02:49:48.0000] <Ms2ger>
than? ;)

[02:50:25.0000] <annevk>
This index works differently from all others as ...

[02:50:34.0000] <annevk>
This index works differently than all others as ...

[02:50:35.0000] <annevk>
?

[02:50:38.0000] <annevk>
don't think so

[02:50:46.0000] <annevk>
well maybe

[02:52:06.0000] <MikeSmith>
/me finds he has to do defaults write com.apple.Safari WebKitWebGLEnabled -bool YES

[02:56:19.0000] <MikeSmith>
fwiw, this is the crashy test: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/tests/conformance/context/context-creation-and-destruction.html

[02:56:47.0000] <MikeSmith>
WebKit is the only browser I've tried that it doesn't crash in

[03:00:55.0000] <MikeSmith>
Ms2ger: btw a couple of your apis-in-html-documents tests crash validator.nu when I try to validate them

[03:01:02.0000] <Ms2ger>
Nice

[03:01:24.0000] <MikeSmith>
figured out the fix already

[03:01:26.0000] <MikeSmith>
http://bugzilla.validator.nu/show_bug.cgi?id=917

[03:01:45.0000] <Ms2ger>
Also, is http://w3c-test.org/shepherd/ ever going to do something else than print an error message?

[03:01:57.0000] <MikeSmith>
talk to Berjon

[03:02:01.0000] <MikeSmith>
I didn't set that up

[03:02:28.0000] <MikeSmith>
and I'm not supposed to work on the framework code these days

[03:02:34.0000] <Ms2ger>
:(

[03:09:05.0000] <annevk>
Ms2ger: http://www.answers.com/topic/different

[03:10:10.0000] <zcorpan>
MikeSmith: messages about attributes on <input> really needs improving it seems

[03:11:11.0000] <charlvn>
lol: http://bugs.jquery.com/ticket/10891

[03:11:45.0000] <MikeSmith>
zcorpan: so last time I thought about how to solve that the thought I remember having is that it'd be best to do it in the JS for the Web UI

[03:12:01.0000] <Ms2ger>
Oh, lovely

[03:12:02.0000] <Ms2ger>
    if ( !window.opera ) {

[03:12:09.0000] <MikeSmith>
zcorpan: why do you mention it? somebody raised a new bug?

[03:12:19.0000] <Ms2ger>
This ringmark thing does seem like a good idea

[03:12:31.0000] <gsnedders>
Ms2ger: Why wouldn't you do browser sniffing?

[03:12:56.0000] <zcorpan>
MikeSmith: someone on help@whatwg

[03:13:03.0000] <MikeSmith>
ok

[03:13:18.0000] <Ms2ger>
I was already assuming it was useless

[03:13:27.0000] <Ms2ger>
Now, I'm certain

[03:13:52.0000] <MikeSmith>
zcorpan: I can try to write up something for it this week.

[03:14:00.0000] <zcorpan>
MikeSmith: cool

[03:14:52.0000] <hsivonen>
zcorpan: nice IE behavior

[03:15:03.0000] <hsivonen>
Ms2ger: ringmark checks for window.opera?

[03:15:30.0000] <Ms2ger>
Yep

[03:15:37.0000] <zcorpan>
hsivonen: ?

[03:15:54.0000] <hsivonen>
zcorpan: the <input name="nodeName"> thing

[03:16:12.0000] <hsivonen>
Ms2ger: :-(

[03:16:31.0000] <zcorpan>
hsivonen: i'm missing context :-)

[03:16:35.0000] <gsnedders>
Ms2ger: Where is the sniffing?

[03:17:38.0000] <Ms2ger>
      http://rng.io/dist/rings.js

[03:18:49.0000] <charlvn>
the nodeName thing is strange because i had a similar problem and ended up hacking jquery too in a slightly different way https://gist.github.com/2350137

[03:19:05.0000] <charlvn>
(i am stuck with using some third party libs)

[03:19:08.0000] <hsivonen>
zcorpan: oops. I misread who said what. the jquery link was given by charlvn

[03:19:20.0000] <zcorpan>
ah

[03:28:42.0000] <annevk>
teehee

[03:28:52.0000] <annevk>
all encodings now have a defined decoder algorithm

[03:28:55.0000] <annevk>
including gb18030

[03:29:02.0000] <annevk>
of course, there's a few bugs

[03:29:08.0000] <annevk>
but still

[03:45:40.0000] <zcorpan>
nice

[03:57:45.0000] <bga_>
gsnedders in Opera new Date(NaN).toJSON() throw RangeError but according spec it should return null

[03:59:56.0000] <gsnedders>
toJSON?

[04:00:21.0000] <gsnedders>
Oh, that does exist, but only on Date.

[04:42:34.0000] <annevk>
david_carlisle: btw, I'm pretty close to having a single JSON file that has the indexes for all encodings

[04:42:41.0000] <annevk>
david_carlisle: along the lines you suggested ages ago

[04:43:22.0000] <annevk>
david_carlisle: it took me a while to get the proper separation sorted out, as I didn't read up much history and just reverse engineered everything :)

[04:44:25.0000] <david_carlisle>
annevk: any more jobs I could give you?;-)

[04:49:04.0000] <annevk>
david_carlisle: heh, if they're as fascinating as this one, sure

[04:49:28.0000] <annevk>
this standard is probably the coolest thing I've worked on to date

[04:50:03.0000] <zcorpan>
cooler than css namespaces? :-)

[04:51:48.0000] <zcorpan>
/me wishes window.documetn was defined and returned window.document

[04:51:54.0000] <zcorpan>
i always make that typo

[04:55:37.0000] <annevk>
zcorpan: I'm not sarcastic, I really like working on the Encoding Standard

[04:56:02.0000] <Ms2ger>
/me puts up the sarcasm sign anyway

[04:57:23.0000] <annevk>
heh

[04:57:30.0000] <annevk>
I mean, if I didn't, why would I be doing it?

[04:58:10.0000] <zcorpan>
oh, i didn't think you were being sarcastic

[04:58:32.0000] <zcorpan>
anyway, document.head.outerHTML = 'x' is weird

[04:59:13.0000] <Ms2ger>
Fascinating

[05:00:03.0000] <zcorpan>
or '<link>x'

[05:00:04.0000] <Ms2ger>
zcorpan, are you writing tests? :)

[05:00:51.0000] <zcorpan>
i was gonna write tests for outerHTML in xml, but stumbles upon this thing when intending to check what happened when setting outerHTML on root in opera

[05:01:11.0000] <zcorpan>
s/s/d/

[05:12:01.0000] <hsivonen>
https://www.w3.org/2002/09/wbs/40318/issue-158-objection-poll/results looks like a success for the Decision Policy. </sarcasm>

[05:13:04.0000] <zcorpan>
LOL

[05:15:04.0000] <Ms2ger>
That's pretty much the best case scenario in terms of wasting people's time

[05:17:50.0000] <hsivonen>
hmm. LLVM is much larger than I thought

[05:18:02.0000] <hsivonen>
in terms of number of source files and compilation time

[06:08:00.0000] <MikeSmith>
annevk: congrats on getting all the encodings defined

[06:08:33.0000] <annevk>
now the encoders...

[06:08:35.0000] <annevk>
and the bugs

[06:08:50.0000] <MikeSmith>
and the test suite

[06:09:30.0000] <annevk>
you keep thinking you're at 80 percent, but it's barely 8

[06:14:24.0000] <zcorpan>
Ms2ger: http://html5.org/specs/dom-parsing.html#concept-serialize-xml - instead of throwing for ]]> in text node with serializeAsCDATA, i think you should serialize a cdata section up to the first "]]>" not including the ">", then emit the rest (including the ">") as text

[06:14:40.0000] <Ms2ger>
File a bug? :)

[06:15:18.0000] <zcorpan>
done

[06:22:27.0000] <annevk>
can't believe that in 2012 I have to write this in Python

[06:22:35.0000] <annevk>
def char(cp):

[06:22:35.0000] <annevk>
    if cp > 0xFFFF:

[06:22:35.0000] <annevk>
        hi, lo = divmod(cp-0x10000, 0x400)

[06:22:35.0000] <annevk>
        return unichr(0xD800+hi) + unichr(0xDC00+lo)

[06:22:35.0000] <annevk>
    return unichr(cp)

[06:22:44.0000] <annevk>
but then you need to do the same in JavaScript I guess

[06:23:03.0000] <annevk>
divmod is a pretty neat built-in though

[06:23:50.0000] <annevk>
david_carlisle: http://dvcs.w3.org/hg/encoding/raw-file/tip/indexes.json

[06:24:19.0000] <annevk>
normative indexes look a little prettier now

[06:24:20.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/index-big5.txt

[06:26:37.0000] <annevk>
where if you do some copy/pasting/searching you'll find browsers have many embarrassing font issues

[06:28:13.0000] <david_carlisle>
annevk: lovely! would be lovelier still in xml of course (but joking aside, looks good and .txt version looks nice too)

[06:28:44.0000] <annevk>
XML haha

[06:28:53.0000] <annevk>
they tried that

[06:28:57.0000] <annevk>
it got way complex

[06:29:25.0000] <annevk>
to actually get the simple gb18030 mappings I parsed some XML with a regular expression :p

[06:33:40.0000] <gsnedders>
jgraham: Seem to be going for your recommendation, so thanks!

[06:34:21.0000] <annevk>
zcorpan: you could also do (WindowProxy or MessagePort)?

[06:34:26.0000] <annevk>
zcorpan: might be cleaner

[06:34:50.0000] <annevk>
zcorpan: especially since these can be constructed via dictionary where you'll need to do some type checking

[06:38:41.0000] <david_carlisle>
annevk: do you need the double negative here "A byte never consists of more, nor less than exactly eight bits" or is this just "A byte consists of exactly eight bits"  (if there is a subtle distinction. could you make it less subtle:-)

[06:40:29.0000] <zcorpan>
annevk: oh, didn't know that worked for return values

[06:40:45.0000] <annevk>
david_carlisle: fair enough

[06:40:55.0000] <Tuju>
i've problem with xml namespace and getting xslt to match its elements

[06:41:27.0000] <Tuju>
if i remove all xmls etc attributes from xml root tag, it works, but with them it doesn't.

[06:41:44.0000] <Tuju>
how do i specify the namespace into xslt ?

[06:42:08.0000] <annevk>
use xmlns:prefix=namespace

[06:42:16.0000] <annevk>
and then use prefix in the XPath expressions?

[06:42:28.0000] <annevk>
dunno though, it's been at least half a decade since I played with XSLT

[06:43:15.0000] <Tuju>
hmmm

[06:43:44.0000] <david_carlisle>
Tuju:  as annevk said, or if you are using xslt2 set xpath-default-namespace then you don't need a prefix (this is the wrong channel for xslt questions though, no one here except me likes xml at all :-(

[06:43:48.0000] <Tuju>
annevk: i think you're in something, since after googling i saw something similar too, but haven't really found any good example.

[06:44:05.0000] <zcorpan>
hmm. i checked the first search result ddg gave me for xslt namespace prefix. opera crashed. clearly opera doesn't want me to spend time reading about this subject

[06:44:29.0000] <annevk>
david_carlisle: robbertbroersma does, but he's not here right now

[06:45:01.0000] <david_carlisle>
annevk:  I rest my case:-)

[06:52:42.0000] <MikeSmith>
all the git docs are generated using xslt, including the man pages / "git help foo" output

[06:52:55.0000] <MikeSmith>
take a look at the source of e.g. /usr/share/man/man1/git-pull.1.gz

[06:53:16.0000] <MikeSmith>
I know because I wrote the xslt that's used to generate them

[06:53:33.0000] <MikeSmith>
that said, I still don't count as somebody who likes xslt

[06:56:38.0000] <annevk>
foolip: you around?

[06:56:57.0000] <foolip>
annevk, yep

[06:57:00.0000] <annevk>
foolip: fwiw, the index data is now in the spec

[06:57:14.0000] <annevk>
foolip: I'm gonna take a look again at big5 now

[06:57:21.0000] <annevk>
foolip: to make it up to date with the thread

[06:57:39.0000] <foolip>
annevk, which index data, the two missing points?

[06:58:21.0000] <annevk>
foolip: sorry, the JSON file is now in the repository

[06:58:25.0000] <foolip>
annevk, ah

[06:58:29.0000] <foolip>
good

[06:59:01.0000] <annevk>
foolip: I have not updated the spec yet with respect to the big5 changes suggested as I lost track of what was being suggested after Øistein joined

[06:59:15.0000] <foolip>
annevk, I emailed public-html-ig-zh⊙wo asking for some souble checking: http://lists.w3.org/Archives/Public/public-html-ig-zh/2012Apr/0001.html

[06:59:26.0000] <foolip>
useful reply (in English) at http://lists.w3.org/Archives/Public/public-html-ig-zh/2012Apr/0002.html

[06:59:53.0000] <foolip>
it looks like at least one of the pages I looked at depends on the Firefox Big5 extensions, in other words that user must have posted using Firefox

[07:00:08.0000] <foolip>
however, AFAICT there's nothing that can be done to save it

[07:00:49.0000] <foolip>
annevk, I'll wait for a few more days to see if more replies come in and then summarize the changes that I agree should be made

[07:01:06.0000] <foolip>
It'll be fun to see if GBK and GB18030 are just as messy

[07:01:21.0000] <Ms2ger>
"fun"

[07:01:31.0000] <foolip>
BTW, I think we should merge them as well, we're bound to find pages labeled as GBK which are in fact GB18030

[07:01:31.0000] <annevk>
gbk and gb18030 were easy

[07:01:49.0000] <annevk>
apart from a flag they're effectively merged

[07:01:58.0000] <annevk>
see the spec

[07:02:05.0000] <foolip>
I've seen it, and the note

[07:02:13.0000] <foolip>
Is there a downside to not having the flag?

[07:02:30.0000] <annevk>
I removed the flag for the euro sign already

[07:02:39.0000] <annevk>
dunno about doing it for the rest

[07:02:43.0000] <annevk>
I guess we could

[07:02:58.0000] <foolip>
what does IE do?

[07:03:03.0000] <annevk>
but I don't think any implementation has them merged at this point

[07:03:51.0000] <foolip>
annevk, have you tried to search for pages labeled as GBK that would decode with less errors if treated as GB18030?

[07:04:01.0000] <annevk>
no I haven't

[07:04:19.0000] <annevk>
I've just checked what browsers did today and specced that, minus PUA

[07:04:34.0000] <foolip>
OK, fair enough

[07:04:56.0000] <annevk>
it's easy to merge though and I've no objections if implementors want to do that

[07:05:06.0000] <foolip>
I'm interested in doing some Big5 tests, is it http://dotnetdotcom.org/ I should be using?

[07:05:12.0000] <annevk>
we'd need to decide on whether to call it gbk or gb18030 and that's about it

[07:05:26.0000] <annevk>
foolip: you can only use that to find URLs

[07:05:38.0000] <annevk>
foolip: you then need to fetch the URLs yourself because their data is UTF-8 normalized

[07:05:59.0000] <annevk>
foolip: I'll wait with updating big5 then if you're going to post a summary later

[07:06:14.0000] <foolip>
annevk, do you already have the index file so that you could easily send me a list of URLs that claim to be big5* and gb*?

[07:06:42.0000] <annevk>
no zcorpan does, but last time I had to extract the URLs out of that data myself

[07:06:55.0000] <annevk>
I should still have that extract URLs script though

[07:07:07.0000] <foolip>
that would be useful, yeah

[07:08:23.0000] <annevk>
urls = []

[07:08:23.0000] <annevk>
url = ""

[07:08:23.0000] <annevk>
state = "start"

[07:08:23.0000] <annevk>
for b in open("big5-with-urls.txt", "rb").read():

[07:08:23.0000] <annevk>
    if state == "start" and b == "\x0A":

[07:08:23.0000] <annevk>
        state = "url"

[07:08:23.0000] <annevk>
    elif state == "url":

[07:08:24.0000] <annevk>
        if b in "\x0A\x0D":

[07:08:24.0000] <annevk>
            state = "start"

[07:08:25.0000] <annevk>
            url = ""

[07:08:25.0000] <annevk>
        elif b == "\x00":

[07:08:26.0000] <annevk>
            state = "appendurl"

[07:08:37.0000] <annevk>
    urlfile.write(url + "\n")

[07:08:54.0000] <annevk>
big5-with-urls.txt was the result of a grep zcorpan did

[07:08:59.0000] <foolip>
zcorpan, do you have big5-with-urls.txt or the script to produce it?

[07:09:27.0000] <annevk>
oh that script is not complete

[07:09:33.0000] <annevk>
I'll email it to www-archive

[07:09:34.0000] <zcorpan>
http://simon.html5.org/dump/big5-with-urls.txt.zip ?

[07:10:14.0000] <foolip>
zcorpan, would it be possible for you to grep me a gb-with-urls.txt.zip as well?

[07:10:15.0000] <zcorpan>
should i do a grep for gb* ?

[07:10:21.0000] <foolip>
that would be great, yes

[07:10:44.0000] <foolip>
are you catching both Content-Type header and <meta charset>?

[07:10:54.0000] <zcorpan>
yep

[07:11:00.0000] <foolip>
cool

[07:11:05.0000] <zcorpan>
do you want all the labels under "Legacy multi-byte Chinese (simplified) encodings" in the encoding spec?

[07:12:28.0000] <foolip>
zcorpan, chinese, csgb2312, ... yeah, I guess that's best

[07:12:40.0000] <foolip>
although I've never seen half of them

[07:14:21.0000] <zcorpan>
LANG=C grep -aEizB2 "(content(-type[[:space:]]*:|=[[:space:]]*[\"']?)[[:space:]]*text/html[[:space:]]*;|<meta[[:space:]])[[:space:]]*charset[[:space:]]*=[[:space:]]*[\"']?(chinese|csgb2312|csiso58gb231280|gb2312|gb_2312|gb_2312-80|gbk|iso-ir-58|x-gbk|gb18030|hz-gb-2312)" web200904 > gb-with-urls.txt

[07:15:01.0000] <zcorpan>
ping me in a few minutes and i'll upload it

[07:15:43.0000] <foolip>
zcorpan, is that dump from 2009 as the filename would suggest?

[07:16:04.0000] <annevk>
yes

[07:16:14.0000] <zcorpan>
yep

[07:16:30.0000] <foolip>
so basically dotnetdotcom.org is dead?

[07:16:47.0000] <annevk>
probably

[07:16:57.0000] <foolip>
too bad archive.org doesn't have some kind of index or "random page" function :(

[07:17:00.0000] <annevk>
I was saying earlier today it would be great to have a new source of data

[07:17:28.0000] <annevk>
per http://whois.domaintools.com/dotnetdotcom.org they have been maintaining their registration at least

[07:22:27.0000] <zcorpan>
that ended up being 862MB (before zipping) -- lemme run the python script

[07:26:12.0000] <zcorpan>
/me needs to free memory

[07:35:46.0000] <annevk>
Push SMS again

[07:36:10.0000] <zcorpan>
wow the python script is slow

[07:36:58.0000] <annevk>
well, you just fed it an order of magnitude more data than it worked on originally

[07:37:12.0000] <annevk>
prolly needs some time to get adjusted to these harsh conditions

[07:37:35.0000] <zcorpan>
i think it finished now

[07:37:49.0000] <zcorpan>
after about 7 minutes of cpu time

[07:37:56.0000] <annevk>
I'm surprised that actually worked

[07:38:09.0000] <annevk>
most have used a hell of a lot of memory

[07:39:18.0000] <zcorpan>
foolip: http://simon.html5.org/dump/gb-urls.txt.zip

[07:39:54.0000] <zcorpan>
annevk: 8GB, though the script didn't seem to use more than 1

[07:40:15.0000] <foolip>
zcorpan, great, so that's just a list of the URLs, then?

[07:40:22.0000] <zcorpan>
foolip: yep

[07:40:32.0000] <foolip>
thanks, I'll have a look at it tonight!

[07:41:05.0000] <annevk>
zcorpan: seems about right

[07:41:19.0000] <annevk>
zcorpan: it reads the whole fill into memory

[07:41:31.0000] <zcorpan>
yeah

[07:41:38.0000] <annevk>
zcorpan: that's probably what takes a long time

[07:41:58.0000] <annevk>
zcorpan: reading half a megabyte of encoding data is already slowish

[07:42:25.0000] <annevk>
well, reading and parsing as JSON

[07:43:02.0000] <zcorpan>
i found a python script that defined an iterator that could split on zero bytes the other day, but then found i didn't need it. i guess i should look for it again, it'll probably be useful later

[07:50:08.0000] <zcorpan>
maybe something from http://bytes.com/topic/python/answers/41987-canonical-way-dealing-null-separated-lines

[07:50:48.0000] <zcorpan>
but that doesn't have the indentation

[08:04:12.0000] <Tuju>
annevk: i still can't get that namespace to work

[08:04:19.0000] <Tuju>
it's tricky

[08:06:19.0000] <annevk>
Tuju: on xsl:stylesheet you declare xmlns:x="yournamespace"

[08:06:52.0000] <Tuju>
annevk: what i read, plain xmlns="example.com" would do default namespace, right?

[08:06:54.0000] <annevk>
Tuju: then in e.g. xsl:template you use match="//x:myElement"

[08:07:04.0000] <Tuju>
and then i would avoid writing that x: everywhere.

[08:07:09.0000] <annevk>
Tuju: no that's not how it works

[08:07:25.0000] <Tuju>
but it works in examples that they've used in many pages

[08:07:37.0000] <Tuju>
they don't write that x: in every xslt tag.

[08:07:37.0000] <annevk>
in XSLT?

[08:07:45.0000] <Tuju>
yup yup

[08:07:46.0000] <annevk>
maybe they're using XPath 2.0

[08:07:53.0000] <annevk>
dunno about that

[08:08:12.0000] <MikeSmith>
Tuju: http://www.mulberrytech.com/xsl/xsl-list/ is a good place to get xslt help

[08:08:33.0000] <Tuju>
http://linux.dd.com.au/wiki/XSLT_Tutorial for example that one

[08:08:57.0000] <zcorpan>
Tuju: if it worked when you removed xmlns, it means it matched against the no namespace

[08:09:00.0000] <Tuju>
annevk: that even doesn't declare the default one.

[08:09:42.0000] <Tuju>
i don't mind if i have one if it's been fixed once as default and doesn't need to be written into every tag.

[08:10:00.0000] <MikeSmith>
Tuju: that example input document is not in any namespace man

[08:10:20.0000] <MikeSmith>
that's why the stylesheet doesn't need to use namespace prefixes

[08:11:08.0000] <MikeSmith>
maybe you should just remove the namespace declarations from whatever your input source is

[08:11:18.0000] <Tuju>
MikeSmith: but if my input doc has a namespace, can't i just set it into default in my xslt?

[08:11:49.0000] <MikeSmith>
not in xslt 1.0 you can't, no

[08:11:59.0000] <MikeSmith>
or xpath 1.0

[08:12:01.0000] <Tuju>
if i just do one namespace declaration in input doc, i'd like to do same way in xslt too.

[08:12:32.0000] <Tuju>
MikeSmith: so there is no way around having that x: (orwhatever) in every god damn tag then?

[08:12:48.0000] <MikeSmith>
yeah there is

[08:12:59.0000] <MikeSmith>
make your input source not be in any namespace

[08:13:12.0000] <Tuju>
yes, but i rather not to do that.

[08:13:17.0000] <MikeSmith>
yeah well

[08:13:33.0000] <MikeSmith>
life is full of choices

[08:13:42.0000] <Tuju>
is there a way to get around it with xsltproc options?

[08:13:49.0000] <MikeSmith>
blame xml

[08:13:57.0000] <Tuju>
i don't want to, not yet. :)

[08:14:15.0000] <MikeSmith>
Tuju: no way to work around it with options in xsltproc no

[08:14:31.0000] <Tuju>
you ruined my day :)

[08:14:35.0000] <Tuju>
with facts.

[08:14:55.0000] <Tuju>
maybe i start writing those damn x:'s then...

[08:15:19.0000] <MikeSmith>
I could actually be wrong

[08:15:23.0000] <Tuju>
xml - solution if you really want to write chars a lot...

[08:15:51.0000] <MikeSmith>
you should not just trust anything I say about xslt

[08:16:01.0000] <Tuju>
MikeSmith: so far the empiric evidence implies that you're right.

[08:16:38.0000] <MikeSmith>
as david_carlisle pointed out, this is the last places you should turned to for quality help with xslt

[08:17:22.0000] <Tuju>
:)

[08:17:37.0000] <Tuju>
i'm afraid that this is the best in irc

[08:22:47.0000] <MikeSmith>
annevk: so what more needs to be defined about directionality in the Notifications spec?

[08:24:31.0000] <annevk>
general FYI: I changed terminology around indexes slightly

[08:24:47.0000] <annevk>
an index now is a list of pointers and corresponding code points

[08:25:31.0000] <annevk>
MikeSmith: there was a thread on that on the list

[08:25:43.0000] <annevk>
MikeSmith: I haven't really taken the time to study that yet

[08:25:47.0000] <MikeSmith>
ok

[08:25:53.0000] <annevk>
MikeSmith: in addition, there's quite a few flaws with the draft

[08:25:56.0000] <MikeSmith>
anyway, I pinged Richard about it

[08:26:07.0000] <annevk>
MikeSmith: I think the i18n guys raised it

[08:26:14.0000] <MikeSmith>
oh

[08:26:26.0000] <annevk>
MikeSmith: e.g. just says "object" instead of defining a dictionary

[08:26:32.0000] <annevk>
MikeSmith: doesn't use the proper HTML terminology

[08:26:47.0000] <annevk>
MikeSmith: I wonder if I should take some time to rewrite it using Anolis

[08:26:54.0000] <annevk>
MikeSmith: and fix most obvious bugs

[08:28:59.0000] <david_carlisle>
annevk:  you should write it in xmlspec xml and process it with xslt, You can always ping MikeSmith for any xslt help required

[08:30:12.0000] <MikeSmith>
I learned all the xslt I know from reading and copying and hacking Norm Walsh's code

[08:30:30.0000] <MikeSmith>
annevk: you dudes need to get over your obsession with anolis

[08:30:39.0000] <annevk>
david_carlisle: so much trolling :)

[08:30:50.0000] <annevk>
MikeSmith: there's nothing better

[08:31:11.0000] <annevk>
maybe a hybrid of anolis/respec would be, but that doesn't exist

[08:31:14.0000] <MikeSmith>
let's fix respec, if it's not doing what we need

[08:31:40.0000] <MikeSmith>
pytho-reactionaries living in the past man

[08:31:51.0000] <MikeSmith>
2012 is a JS world

[08:32:08.0000] <Ms2ger>
So, first, make it work so that it works with JS disabled

[08:32:21.0000] <annevk>
it's more that between writing specs and writing a tool to write specs, I prefer the former

[08:32:42.0000] <annevk>
also, I use Python a lot still to process data and generate things

[08:33:05.0000] <MikeSmith>
I prefer getting somebody else to both write specs for me and write tools for writing specs

[08:33:21.0000] <annevk>
I guess if a v8 shell or some such came installed I could switch some of that, but not sure if it's worth it

[08:33:31.0000] <Ms2ger>
Spidermonkey! ;)

[08:33:54.0000] <annevk>
MikeSmith: that's why you're a pimp :p

[08:34:02.0000] <MikeSmith>
heh

[08:35:12.0000] <annevk>
I think I agree with you in spirit, but respec does not do what I need, and anolis does, apart from it being slightly harder to pick up for newbies

[08:35:38.0000] <annevk>
and every spec that is generated with respec I sort of feel should be redone some day...

[08:36:08.0000] <annevk>
its reverse IDL'ing and such is just wrong

[08:36:33.0000] <MikeSmith>
yeah, agreed about that

[08:37:12.0000] <MikeSmith>
annevk: anyway, in other news I met with Martin Duerst the other day to talk about the URL spec and Encoding spec

[08:38:09.0000] <MikeSmith>
and he was generally not strongly unfavorable to both

[08:38:43.0000] <annevk>
not strongly unfavorable :)

[08:38:49.0000] <MikeSmith>
heh

[08:38:50.0000] <MikeSmith>
yeah

[08:40:01.0000] <MikeSmith>
also btw, the IRI WG is not going to take any position on the web+ scheme

[08:40:42.0000] <annevk>
how is URL going?

[08:40:50.0000] <MikeSmith>
it's not

[08:41:04.0000] <MikeSmith>
I don't want to work on it alone

[08:41:11.0000] <annevk>
lol http://dvcs.w3.org/hg/url/rev/dc617a4934cc

[08:41:12.0000] <karlcow>
http://pyjs.org/#Translator

[08:41:17.0000] <annevk>
MikeSmith: k

[08:41:29.0000] <annevk>
MikeSmith: it's top of my post-Encoding todo list

[08:41:35.0000] <Ms2ger>
MikeSmith, hah, you think that will work?

[08:41:44.0000] <MikeSmith>
:)

[08:41:46.0000] <Ms2ger>
Unless Hixie hires someone to do it :)

[08:42:03.0000] <Ms2ger>
That's the only reason I managed to get rid of DOM Range

[08:42:41.0000] <annevk>
I sort of have it in for the low-level stuff nowadays

[08:42:44.0000] <annevk>
Encoding, URL

[08:42:47.0000] <annevk>
MIME?

[08:42:51.0000] <karlcow>
url seems to be dead living draft

[08:42:53.0000] <annevk>
but, no rush

[08:43:00.0000] <MikeSmith>
annevk: mime sniffing!

[08:43:08.0000] <MikeSmith>
Ms2ger: :)

[08:43:16.0000] <MikeSmith>
annevk: Chris Weber has aggregated the WebKit tests into the set of tests he already made. So when you get time, we can start looking at those tests and then go from there

[08:43:24.0000] <annevk>
MikeSmith: well that's done, but parsing Content-Type and media-type and such is not

[08:43:44.0000] <annevk>
MikeSmith: yeah

[08:43:54.0000] <annevk>
the encoding stuff is taking somewhat longer than expected

[08:44:08.0000] <MikeSmith>
annevk: somebody I know is agitating me about the fact that the HTML spec references the mime-sniffing draft which is no longer being maintained as an IETF I.D.

[08:44:30.0000] <annevk>
blame Larry?

[08:44:49.0000] <MikeSmith>
um, er

[08:45:11.0000] <annevk>
"oh trololol i'm so experienced... lets split this all out... object object... tralala... to the IETF!"

[08:45:17.0000] <annevk>
happened to MIME sniff and URL

[08:45:25.0000] <annevk>
IETF is where HTML spec features go to die

[08:46:00.0000] <jwalden>
someone should send the DRM stuff over there, then

[08:46:08.0000] <Ms2ger>
jwalden++

[08:46:11.0000] <MikeSmith>
hahaha

[08:46:26.0000] <MikeSmith>
people who actually do active work at IETF are great

[08:46:32.0000] <MikeSmith>
Peter St. Andre

[08:46:37.0000] <MikeSmith>
Chris Weber

[08:47:06.0000] <MikeSmith>
and such

[08:47:25.0000] <jwalden>
/me doesn't doubt that :-)

[08:47:42.0000] <Ms2ger>
"New public mailing list for discussions on potential NFC work at  W3C"

[08:50:38.0000] <MikeSmith>
Mike Belshe seems to have deleted his tweet about the IETF from last week

[08:52:22.0000] <karlcow>
annevk: thanks for this. http://lists.w3.org/Archives/Public/www-archive/2012Apr/0034

[08:52:40.0000] <karlcow>
I have been advocating this for a while but failed each time. :/

[08:53:09.0000] <Ms2ger>
karlcow, I would suggest wiki.whatwg.org instead ;)

[08:53:25.0000] <karlcow>
Ms2ger: what is that? ;)

[08:53:34.0000] <Ms2ger>
A spam-infested hellscape

[08:54:41.0000] <annevk>
hmm http://commoncrawl.org/

[08:56:40.0000] <annevk>
looks complicated to use

[08:56:49.0000] <annevk>
but promises access  to billions of documents

[08:57:13.0000] <MikeSmith>
man some of the characters in http://dvcs.w3.org/hg/encoding/raw-file/tip/index-big5.txt are just crazy cool

[08:57:21.0000] <MikeSmith>
like 𥩔

[08:58:22.0000] <MikeSmith>
or even simpler ones like 竼

[08:58:39.0000] <MikeSmith>
japanese doesn't have these

[08:59:50.0000] <annevk>
and resources are stored in http://archive.org/web/researcher/ArcFileFormat.php which is of course a spec written along the lines of HTML4 but then with more skiing and alcohol

[09:00:03.0000] <MikeSmith>
heh

[09:00:45.0000] <MikeSmith>
I hope you're not denigrating alcohol

[09:01:32.0000] <annevk>
only when combined with spec writing

[09:02:30.0000] <MikeSmith>
it makes everything better

[09:02:35.0000] <MikeSmith>
well almost everything, up to a point

[09:04:07.0000] <MikeSmith>
nose-painting, provokes, and unprovokes, etc.

[09:04:47.0000] <MikeSmith>
the Porter's speech

[09:05:30.0000] <MikeSmith>
stand to and not stand to

[09:07:51.0000] <annevk>
heh ℡

[09:08:27.0000] <annevk>
monospace Ⅷ also falls apart

[09:16:33.0000] <TabAtkins>
Woo! http://www.w3.org/TR/css-variables/

[09:17:18.0000] <annevk>
wrong channel to cheer about TR/

[09:17:28.0000] <wilhelm>
Any implementations yet?

[09:17:37.0000] <TabAtkins>
wilhelm: Ours is in-progress.

[09:18:00.0000] <wilhelm>
Landing which year? (c:

[09:18:25.0000] <TabAtkins>
This year, hopefully. ^_^

[09:18:42.0000] <wilhelm>
Cool.

[09:20:57.0000] <beverloo>
any wip patches around?

[09:21:04.0000] <beverloo>
there is one for hierarchies :)

[09:21:22.0000] <TabAtkins>
Variables is quite a bit more involved, so I dunno.  Ask Luke, though.

[09:22:26.0000] <beverloo>
will do, thanks!

[09:25:00.0000] <MikeSmith>
um, webkit peoples, should you read the logs and find http://krijnhoetmer.nl/irc-logs/whatwg/20120410#l-358

[09:25:15.0000] <MikeSmith>
please don't send me angried DMs

[09:25:25.0000] <karlcow>
TabAtkins: do you know the bug number on the webkit project for CSS variables?

[09:25:29.0000] <TabAtkins>
TOO LATE

[09:25:32.0000] <TabAtkins>
karlcow: I do not.

[09:25:33.0000] <MikeSmith>
I was referring to http://krijnhoetmer.nl/irc-logs/whatwg/20120410#l-355

[09:26:31.0000] <MikeSmith>
whoever's writing self-closing script tags needs to wear a dunce cap and be subjected to a struggle session

[09:27:31.0000] <karlcow>
hmmm https://bugs.webkit.org/show_bug.cgi?id=46594

[09:27:49.0000] <karlcow>
Bug 46594 - [Meta] Finish CSS Variables implementation

[09:27:53.0000] <karlcow>
this is meta indeeed

[09:29:04.0000] <MikeSmith>
I like the way Joe Peck puts the quotes around "www-style" there

[09:29:25.0000] <MikeSmith>
reminds me of the way Bjorn likes to write HTML5 as "HTML5"

[09:30:15.0000] <TabAtkins>
Heh, that's... not a useful bug.

[09:47:56.0000] <karlcow>
https://bugs.webkit.org/show_bug.cgi?id=19660 the old version of css variables

[09:54:52.0000] <karlcow>
ok added css variables https://github.com/karlcow/browserfeatures/blob/master/bugsdb.json#L45

[10:24:11.0000] <Hixie>
hsivonen: the even funnier part of that poll is that hober's comment on that post were actually added after the poll closed, because he didn't notice the poll was closing

[10:24:27.0000] <Hixie>
hsivonen: gotta love the level of engagement the wg is getting

[10:42:11.0000] <annevk>
btw, is there a smarter way to do width = len(str(len(list)))?

[10:42:41.0000] <Ms2ger>
Eh

[10:42:54.0000] <Ms2ger>
The number of digits in the length of the list?

[10:43:26.0000] <annevk>
yeah, I use it for the width of the first column of the indexes

[10:43:35.0000] <Ms2ger>
That would be around log10(len(list))

[10:43:44.0000] <Ms2ger>
Not sure if it's called that in python

[10:44:12.0000] <annevk>
it's not really slow

[10:44:16.0000] <annevk>
was just wondering

[10:45:08.0000] <TabAtkins>
Yeah, log is what you need if you dont' want string parsing.

[10:45:34.0000] <TabAtkins>
Specifically, floor(log10(len(list)-1))+1

[10:45:35.0000] <Ms2ger>
There's no string *parsing* involved, per se

[10:45:43.0000] <TabAtkins>
Yeah.

[10:46:19.0000] <annevk>
so that looks way uglier :)

[10:46:46.0000] <TabAtkins>
Indeed it does.

[10:47:22.0000] <Ms2ger>
Are you sure those signs are right?

[10:47:57.0000] <TabAtkins>
Oh wait, remove one of those fenceposts.

[10:48:04.0000] <TabAtkins>
floor(log10(len(list)))+1

[10:48:28.0000] <TabAtkins>
I was remembering code that was doing that from the last index, rather than the length.

[10:48:30.0000] <Ms2ger>
list = []

[10:48:38.0000] <TabAtkins>
Screw your zero.

[11:46:14.0000] <Philip`>
/me is surprised to discover an OpenGL extension (GL_NV_path_rendering) whose API accepts SVG path strings (and PostScript path strings)

[11:48:07.0000] <Philip`>
(Seems to be supported on GeForce 8 and higher)

[11:49:57.0000] <Philip`>
/me wonders if it's meant to be used for hardware-accelerating actual SVG drawing

[11:51:27.0000] <smaug____>
Nvidia has been hiring browser+graphics experts

[11:52:15.0000] <annevk>
btw

[11:52:30.0000] <annevk>
the equivalent of my len(str(len(list))) hack is

[11:52:32.0000] <annevk>
import math

[11:52:40.0000] <annevk>
math.floor(math.log(len(list), 10))+1

[11:53:01.0000] <annevk>
that it's longer is about the nicest thing I can say about it

[11:55:22.0000] <Philip`>
annevk: If you're trying to measure the width of a column of text, the len(str(...)) approach seems much more semantically appropriate

[11:56:39.0000] <annevk>
my intuition is usually okay, but then I second guess myself into hell

[12:00:57.0000] <gsnedders>
smaug____: Any idea to work on what?

[12:02:02.0000] <smaug____>
dunno. I just happened to notice that they were hiring such devs to their Helsinki office

[12:05:24.0000] <hsivonen>
Philip`: leaking SVG/PS down to OpenGL seems weird

[12:06:00.0000] <hsivonen>
Philip`: is it assumed that the app sets the transform matrix so that original path coordinates can go unchanged all the way to GL?

[12:20:22.0000] <Hixie>
annevk: which is faster?

[12:24:01.0000] <Philip`>
hsivonen: Paths are constructed in a 2D plane with the specified coordinates, then multiplied by the global 3D modelview-projection-viewport matrices when they are rasterised

[12:24:31.0000] <Philip`>
hsivonen: so presumably the application is expected to use those matrices

[12:25:46.0000] <Philip`>
hsivonen: Oh, looks like there's also a TransformPath function which you can use as well as those global matrices

[12:26:59.0000] <Ms2ger>
/me pokes Philip` 

[12:27:07.0000] <Philip`>
/me falls off a cliff and dies

[12:27:26.0000] <annevk>
Hixie: haven't benchmarked

[12:27:27.0000] <Ms2ger>
We can't have that

[12:28:14.0000] <Ms2ger>
Philip`, puh-lease have a look at http://www.w3.org/Bugs/Public/show_bug.cgi?id=14191

[12:33:10.0000] <Hixie>
hmm

[12:33:37.0000] <Hixie>
should modal <dialog>s have a UA-implemented "cancel" mechanism, or should it be implemented by the author...

[12:33:50.0000] <Hixie>
i guess if we add <form method=dialog> then we should have a UA cancel too

[12:34:23.0000] <annevk>
letting clicking next to dialog dismiss it would sure be nice

[12:36:58.0000] <karlcow>
→ python -mtimeit -s 'x=range(10);from math import ceil,log' 'ceil(log(len(x),10))+1'

[12:36:59.0000] <karlcow>
1000000 loops, best of 3: 0.513 usec per loop

[12:36:59.0000] <karlcow>
→ python -mtimeit -s 'x=range(10)' 'len(str(x))'

[12:36:59.0000] <karlcow>
100000 loops, best of 3: 2.59 usec per loop

[12:37:22.0000] <Hixie>
annevk: by default?

[12:37:34.0000] <Hixie>
annevk: certainly i agree we should have an event to allow that, but i dunno about doing it by default

[12:40:02.0000] <annevk>
Hixie: dunno, my main interaction with modal dialogs is twitter

[12:40:09.0000] <annevk>
Hixie: twitter does that :)

[12:41:05.0000] <Philip`>
Ms2ger: The patch looks like it'll probably break non-W3C versions of the tests (undefined references to assert_true etc) - is that correct and/or intentional?

[12:41:29.0000] <Ms2ger>
Those exist?

[12:41:31.0000] <Ms2ger>
Oh

[12:41:49.0000] <Ms2ger>
Well, I guess I maintain one

[12:42:24.0000] <Philip`>
Apart from the Mochitest version, I don't think the others are currently used, so it's okay to intentionally break them

[12:42:32.0000] <Hixie>
annevk: doing it by default seems a bit dodgy for non-trivial dialogs

[12:43:23.0000] <Ms2ger>
I haven't checked... Let me have a look

[12:44:16.0000] <Philip`>
(The other versions were used at philip.html5.org but that's obsolete now and not updated)

[12:44:23.0000] <Ms2ger>
Philip`, Mochitests don't call _assert*, I don't think

[12:44:52.0000] <Philip`>
(though at least the philip.html5.org versions have a usable test-runner)

[12:45:51.0000] <Philip`>
Ms2ger: That's quite possibly true

[12:46:36.0000] <annevk>
Hixie: maybe there should be some way to signal the difference in markup? infobox versus requires user interaction

[12:46:56.0000] <Hixie>
hmm

[12:47:13.0000] <annevk>
Hixie: it seems the style features you get are desirable either way

[12:47:13.0000] <Hixie>
in other news, have you picked the name for the backdrop pseudo?

[12:47:23.0000] <annevk>
I called it ::backdrop

[12:47:28.0000] <annevk>
:)

[12:47:30.0000] <Hixie>
/me considers onbackdropclick

[12:47:44.0000] <annevk>
http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html#::backdrop-pseudo-element

[12:47:57.0000] <Ms2ger>
Philip`, testharness.js has at least three test runners, fwiw ;)

[12:48:10.0000] <annevk>
I guess I should file a bug on HTML for <iframe allowfullscreen> and generally integrating Fullscreen Hixie?

[12:48:21.0000] <Hixie>
(oh hey maybe you should spec the 'backdropclick' event actually)

[12:48:26.0000] <Hixie>
lgtm

[12:49:00.0000] <annevk>
I want the person that defines hit testing and the box model to do things like that...

[12:49:02.0000] <TabAtkins>
Wait, why backdropclick?

[12:49:15.0000] <annevk>
but I guess as long as we're patching the broken patchwork that's CSS...

[12:49:17.0000] <annevk>
I can do that

[12:49:26.0000] <Ms2ger>
!summon tantek

[12:50:37.0000] <Hixie>
TabAtkins: so you know when to close the dialog

[12:50:40.0000] <Hixie>
TabAtkins: if you want to

[12:51:21.0000] <TabAtkins>
Hm.  We're speccing that click events on pseudos dispatch to the superior parent, with a "pseudo" argument on the event object indicating which pseudo was clicked.

[12:51:39.0000] <TabAtkins>
Presumably the <dialog> is the superior parent of ::backdrop.

[12:52:28.0000] <Philip`>
Ms2ger: The _assertPixelApprox assertion message is missing the tolerance value, and statements should end in semicolons to be consistent, and maybe it'd be less ugly to put the failure messages in a 'var msg' instead of duplicating the code or something like that, but otherwise I don't see anything obvious enough to notice (though I find it hard to remember how the test system works)

[12:52:37.0000] <annevk>
TabAtkins: where is that?

[12:52:51.0000] <annevk>
ooh, so click would dispatch on dialog

[12:53:10.0000] <annevk>
and it would have .cssPsuedo set to "backdrop"?

[12:53:13.0000] <TabAtkins>
annevk: Trying to find it.  dbaron was talkinga bout it.

[12:53:15.0000] <TabAtkins>
Yeah.

[12:53:24.0000] <annevk>
kind of nice

[12:53:48.0000] <Hixie>
that works for me

[12:54:04.0000] <annevk>
someone still needs to define hit testing on boxes though

[12:54:18.0000] <annevk>
along with the mouse events and such

[12:54:23.0000] <Hixie>
/me giggles has his silly term "superior parent" is still in the vernacular

[12:54:27.0000] <Ms2ger>
Philip`, ok, thanks

[12:54:39.0000] <annevk>
heh

[12:54:51.0000] <annevk>
in DOM we'd have called that "associated element" or some such

[12:54:52.0000] <TabAtkins>
Hixie: I can't come up with a better term. :/

[12:55:05.0000] <Hixie>
yeah i couldn't either :-)

[12:55:11.0000] <TabAtkins>
pseudo-parent!

[12:55:24.0000] <TabAtkins>
Or pseudo-root.

[12:55:33.0000] <TabAtkins>
The element that roots the pseudo-tree the element is in.

[12:55:34.0000] <Ms2ger>
annevk, yeah, we associate a lot :)

[12:55:49.0000] <annevk>
we keep it simple :)

[13:13:18.0000] <karlcow>
hmmm can't find http://html5.org/tools/web-apps-tracker?from=7030&to=7031 in http://dev.w3.org/html5/2dcontext/

[13:13:33.0000] <karlcow>
I wonder if I'm looking at the wrong place

[13:13:58.0000] <Ms2ger>
Yep

[13:14:05.0000] <Ms2ger>
You're looking at <karlcow> hmmm can't find http://html5.org/tools/web-apps-tracker?from=7030&to=7031 in http://dev.w3.org/html5/2dcontext/

[13:14:08.0000] <hober>
karlcow: i assume syncing the 2dcontext draft is paused pending resolution of issue-201

[13:14:08.0000] <Ms2ger>
Er

[13:14:12.0000] <Ms2ger>
Ar http://dev.w3.org/html5/2dcontext/

[13:14:53.0000] <karlcow>
ah thanks hober

[13:15:51.0000] <Ms2ger>
/me stops trying to type

[13:17:24.0000] <karlcow>
http://www.w3.org/html/wg/tracker/issues/201

[14:22:37.0000] <ilhan>
Hi there! Is there anybody who will be interested to develop the Distributed Social Networking Protocol (dsnp) http://www.complang.org/dsnp/

[14:33:04.0000] <karlcow>
ilhan: http://www.complang.org/redmine/projects/dsnpd dead link, also http://www.complang.org/redmine/projects/choice-social

[14:33:55.0000] <karlcow>
and project seems dead http://www.complang.org/redmine/projects/dsnp/issues?set_filter=1

[14:37:15.0000] <ilhan>
karlcow: I've contacted with the author a half months ago, he is developing the project but very very very slowly now

[14:52:31.0000] <annevk>
'The “let” keyword has been unreserved in JavaScriptCore as reserving it caused compatibility problems.' aah

[14:52:44.0000] <TabAtkins>
wut

[14:53:00.0000] <TabAtkins>
Do they... do they think that ES will just *not use* 'let'?

[14:54:04.0000] <annevk>
just quoting from peter.sh

[14:57:50.0000] <rubys>
tabatkins: not being a reserved word does *not* mean that it won't be used.

[14:58:02.0000] <rubys>
it just means that var let=1; will still be valid.

[14:58:11.0000] <TabAtkins>
Ah, that's right.

[14:58:45.0000] <rubys>
there are extremely few places in the grammar where "token1 token2" is valid, so sequences that have 'let' immediately followed by a token may still be viable.

[14:58:49.0000] <TabAtkins>
Oh yeah, I remember some of this stuff.  ES6 is trying to unreserve more keywords, too, as there's often no reason to prevent a keyword from being an array key or such.

[14:59:05.0000] <TabAtkins>
object key, that is.

[14:59:10.0000] <rubys>
understood

[14:59:19.0000] <rubys>
some languages have no reserve words (REXX is one)

[14:59:24.0000] <rubys>
reserved*

[15:00:32.0000] <annevk>
ah yeah, I think that tripped me up actually in ES a number of times

[15:00:40.0000] <annevk>
and more recently in Web IDL

[16:45:55.0000] <Hixie>
hey TabAtkins, yt? is there a formal way of saying "apply the table at http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo " these days?

[16:46:31.0000] <TabAtkins>
What's the context?  You have an input display type, and want the computed value from the table?

[16:46:46.0000] <Hixie>
yeah

[16:46:52.0000] <Hixie>
i'm adding a new 'position' keyword like you suggested

[16:47:01.0000] <TabAtkins>
No formal way beyond what you just quoted.

[16:47:02.0000] <Hixie>
but need it to convert 'display' to block

[16:47:04.0000] <Hixie>
k

[16:47:16.0000] <Hixie>
so it's not in a css3 draft yet or anything

[16:47:22.0000] <TabAtkins>
Nah.

[16:47:25.0000] <Hixie>
k

[16:47:26.0000] <Hixie>
thanks

[16:47:32.0000] <TabAtkins>
That would be the Box Module, which no one wants to work on yet.

[16:47:40.0000] <TabAtkins>
Which means I think I'll do it at the end of the year or so.

[16:47:50.0000] <Hixie>
brave man

[16:51:37.0000] <Hixie>
ok!

[16:51:41.0000] <Hixie>
<dialog> is done, i believe

[16:51:43.0000] <Hixie>
oh crap

[16:51:49.0000] <Hixie>
i forgot <form method=dialog> again

[16:56:22.0000] <Hixie>
i wonder if i should somehow make method=dialog invalid if the <form> isn't in a <dialog>

[16:56:43.0000] <Hixie>
hm, when we talked about this earlier i think we decided it could be useful for other purposes huh

[16:57:02.0000] <TabAtkins>
Outside of a dialog, it would just be a form that never navigates, right?

[16:58:41.0000] <Hixie>
yeah

[16:59:11.0000] <TabAtkins>
Yeah, I'd find that useful.  I always forget exactly how I'm supposed to stop navigation, and end up just doing all of them.

[16:59:11.0000] <Hixie>
fallback behaviour is suboptimal in legacy UAs but not fatally so

[16:59:39.0000] <Hixie>
yeah i usually end up doing action="javascript:void(0)"


2012-04-11
[17:00:03.0000] <Hixie>
so for legacy purposes you could do method=dialog action="that"

[17:10:14.0000] <Hixie>
okie dokie

[17:10:19.0000] <Hixie>
<dialog> is now done! i think.

[17:10:43.0000] <Hixie>
(also inert="", though only in the whatwg copy)

[17:11:22.0000] <Hixie>
(not sure if i should limit method=dialog to the whatwg copy also... anyone? i guess it wasn't mentioned in your CP, right hober?)

[17:12:28.0000] <Hixie>
i guess i'll exclude it

[17:12:51.0000] <Hixie>
since maciej said to err on the side of caution with respect to the feature freeze

[17:16:49.0000] <Hixie>
oh, oops, i never got around to referencing FULLSCREEN

[17:21:28.0000] <hober>
yeah, we left the form integration for v2

[17:22:31.0000] <Hixie>
k, i've left that out of the w3c copy

[17:22:43.0000] <Hixie>
(it's like five lines...)

[17:22:50.0000] <Hixie>
(ok maybe five paragraphs)

[17:34:37.0000] <Hixie>
ok.

[17:34:42.0000] <Hixie>
NOW i have finished <dialog>.

[17:34:47.0000] <Hixie>
right?

[17:34:48.0000] <Hixie>
right?

[17:35:16.0000] <hober>
/me hopes so! :)

[17:41:25.0000] <Hixie>
checked in.

[17:41:53.0000] <Hixie>
tomorrow i begin on the CSP refactoring

[17:42:44.0000] <Hixie>
actually i guess i'll have to reply to these dialog e-mails first

[18:18:41.0000] <abarth>
Hixie: seamless has some pretty funny bugs

[18:18:58.0000] <abarth>
Hixie: turns out you can't ever load anything into a seamless iframe

[18:19:23.0000] <abarth>
Hixie: i'll send an email to whatwg to explain

[18:35:00.0000] <zewt>
sort of funny to see people recommending canvas features that are pretty much identical to opengl minus a decade or so

[18:36:13.0000] <zewt>
i guess not really, strictly speaking, since blend functions are still fixed

[18:36:52.0000] <Hixie>
abarth: heh, k

[18:37:10.0000] <abarth>
Hixie: it's not actually as bad as I thought, but there is a bug in there

[18:46:37.0000] <Hixie>
abarth: btw, i'm planning on starting the CSP/sandbox refactoring tomorrow

[18:46:43.0000] <abarth>
Hixie: thanks

[18:47:18.0000] <abarth>
I think the main trickiness is that we'll want to be able to sandbox top-level documents

[18:47:31.0000] <Hixie>
yup

[18:47:40.0000] <Hixie>
re: seamless - um, yeah, oops

[18:48:01.0000] <abarth>
I probably sent you an email about the sandbox stuff.  let me know if there's anything I can do to help

[18:48:39.0000] <Hixie>
i expect tomorrow i'll just be printing and reading the CSP spec :-)

[18:49:46.0000] <abarth>
the sandbox requirements use "as if", which is always kind of sketchy

[18:49:52.0000] <Hixie>
yeah

[00:02:26.0000] <annevk>
new cherry tomatoes at the AH

[00:02:29.0000] <annevk>
it's a good day

[00:07:04.0000] <nesta_>
annevk :)

[00:07:41.0000] <smaug____>
AH must be Albert Heijn or some such

[00:23:56.0000] <annevk>
smaug____: it is

[00:36:41.0000] <annevk>
I should use argument defaulting in XHR in general I guess

[00:36:50.0000] <annevk>
would simplify open() nicely

[00:43:51.0000] <Ms2ger>
Not much, I think

[00:44:46.0000] <annevk>
/me was dramatizing

[00:45:49.0000] <Ms2ger>
I only managed to use it for async

[01:01:30.0000] <wilhelm>
How stable is the chapter on the <time> element now? Was the feud of last year resolved?

[01:12:48.0000] <smaug____>
wilhelm: does any browser engine implement <time> ?

[01:12:59.0000] <smaug____>
looks like Opera

[01:13:07.0000] <smaug____>
ok, that is a better sign

[01:13:15.0000] <wilhelm>
smaug____: Opera implemented it before it was removed and put back again.

[01:13:57.0000] <smaug____>
ahaa

[01:14:30.0000] <smaug____>
in many cases I'd wait for 2+ implementations before calling anything stable

[01:17:08.0000] <wilhelm>
Indeed. I was merely wondering whether significant changes were planned, however. (I've returned my browser vendor hat, wearing the web developer hat today. “Let's use the <time> element!”, said one of the people I work with, pointing to documentation from, well, 2010. :)

[04:06:16.0000] <annevk>
heh 竼 is indeed cool

[04:06:27.0000] <annevk>
竼 MAN WITH BAZOOKA

[04:07:03.0000] <annevk>
(re some time yesterday MikeSmith)

[04:09:50.0000] <hsivonen>
material for Fake Unicode Consortium on G+

[04:13:50.0000] <hsivonen>
is it really the expectation that xmlDoc.load() fails if the caller is a document.open()ed document?

[04:21:49.0000] <zcorpan>
/me now follows FUC

[04:22:20.0000] <zcorpan>
hmm, it needs a K-something in the name

[06:15:30.0000] <zcorpan>
http://html5.validator.nu/?doc=https%3A%2F%2Fembed.spotify.com%2F%3Furi%3Dspotify%3Atrack%3A4bz7uB4edifWKJXSDxwHcs

[06:16:26.0000] <zcorpan>
(or check the Image Report)

[06:54:30.0000] <annevk>
http://blog.whatwg.org/weekly-fullscreen-dialog

[07:04:03.0000] <zcorpan>
man the spec for innerHTML in xml needs a rewrite

[07:06:26.0000] <zcorpan>
here's a starting point for the replacement that's probably better than what's currently there: ¯\(°_o)/¯

[07:12:33.0000] <zcorpan>
/me finds out about "xml:Father"

[07:16:02.0000] <annevk>
it's not SGML?

[07:16:09.0000] <annevk>
or is that mother?

[07:18:36.0000] <annevk>
I need context https://twitter.com/__farre__/status/190073001029550080

[07:18:38.0000] <annevk>
anyone?

[07:21:58.0000] <zcorpan>
i guess CORE-45384

[07:22:48.0000] <annevk>
heh

[07:55:38.0000] <tohava>
how would you recommend testing via javascript if a browser supports binary websocket frames?

[07:55:47.0000] <tohava>
also, does safari 5.1.5 support binary frames?

[08:00:47.0000] <zcorpan>
var binarySupported = (function(){ var s = new WebSocket('ws://example.invalid/'); s.close(); return 'binaryType' in s })();

[08:01:47.0000] <zcorpan>
per spec this should work but it doesn't in all browsers yet: var binarySupported = 'binaryType' in WebSocket.prototype;

[08:02:50.0000] <tomasf_>
tohava: I think Safari still only supports draft 00 web sockets, but I could be wrong

[08:03:21.0000] <tohava>
tomasf, safari does hixie-76, but for some reason autobahn automated tests insist it supports binary frames in some way, this is why i'm confused

[08:03:59.0000] <tomasf_>
aha

[08:04:34.0000] <zcorpan>
a testsuite should just go "FAIL" for -76

[08:39:30.0000] <Hixie>
wilhelm: i'm not aware of any outstanding feedback, but the htmlwg is still working through their bureaucracy dealing with the issues they raised on it months ago

[08:40:01.0000] <annevk>
http://www.peterkroener.de/die-karte-des-html5-universums/ is kind of cool

[08:40:12.0000] <annevk>
except WHATWG does not publish HTML5, but that's a minor typo

[09:32:01.0000] <MikeSmith>
I see the discussion in the coremob group has reached the point where it's clear that it's all about targeting the "Android 2.2 Froyo and iOS5 default browsers"

[09:32:06.0000] <MikeSmith>
that didn't take long

[09:33:16.0000] <MikeSmith>
wonder how long it will be before we have a "Best viewed in iOS or Android default browser." badge

[09:33:55.0000] <Ms2ger>
Never

[09:34:17.0000] <Ms2ger>
"Best viewed in iOS default browser", sure

[09:34:30.0000] <Ms2ger>
"Best viewed in Android default browser", sure

[09:34:41.0000] <Ms2ger>
But allowing both? Nah

[09:34:59.0000] <MikeSmith>
time to put WebGL into ring 0

[09:35:18.0000] <Ms2ger>
How about window.opera?

[09:35:27.0000] <MikeSmith>
yeah, that too

[09:36:24.0000] <MikeSmith>
I think the criteria for ring 0 should be that at least one browser project has shipped an implementation on a browser for mobile devices

[09:37:05.0000] <MikeSmith>
isn't the point of this effort to drive browser projects to actually implement support for the platform?

[09:38:20.0000] <MikeSmith>
it is really misguided to capitulate to restrictiing the feature set to only those which the majority market share browsers implement

[09:38:58.0000] <MikeSmith>
the intention seems to be to intentionally restrict things such that we have some browsers that pass everything in ring 0

[09:39:28.0000] <MikeSmith>
which is way different from the philosophy of the ACID tests, which were initially at least, Everybody Fails.

[09:40:09.0000] <MikeSmith>
setting up a test so that you intentionally restrict it in a way that ensures that particular browsers are always going to pass, that's .. wrong

[09:41:52.0000] <tantek>
MikeSmith, agreed.

[09:41:57.0000] <MikeSmith>
anyway, can at least look forward to the lulz forthcoming from further rationalizations about why this approach is good idea

[09:42:01.0000] <Ms2ger>
Is DRM in ring 0 already?

[09:42:05.0000] <MikeSmith>
heh

[09:42:25.0000] <MikeSmith>
Ms2ger: it will be when default Android and i0S support it

[09:43:57.0000] <MikeSmith>
I wonder if they understand how this makes the barrier of entry for lower market-share mobile browsers that much higher

[09:44:59.0000] <MikeSmith>
this is exactly like creating a conformance level for desktop that restricts itself to only what's implemented in IE9

[09:45:38.0000] <MikeSmith>
anyway, I guess I should shut up

[09:45:55.0000] <tantek>
no no, I think you're on a roll :)

[09:46:27.0000] <tantek>
MikeSmith - let me know when -webkit- prefixed properties make it into ring 0.

[09:46:37.0000] <Ms2ger>
They haven't yet?

[09:47:06.0000] <tantek>
then you'll know they're not even pretending to care about other browser engines.

[09:47:36.0000] <Ms2ger>
Surely we're all going to implement -webkit- prefixes?

[09:47:39.0000] <gsnedders>
tantek: I saw claims they already have.

[09:48:00.0000] <MikeSmith>
some of the apple-specific meta tags were in there before, iirc

[09:48:09.0000] <MikeSmith>
but I think they were since removed

[09:48:23.0000] <karlcow>
MikeSmith: I have the feeling that the audience is not defined. Marketers/Journalists or Browsers Implementers. The discussion seems to revolve around the first group. When the interesting question is what is needed for *Core* Mobile tech.

[09:48:49.0000] <MikeSmith>
um

[09:48:51.0000] <gsnedders>
If I want an HTML WYSIWYG editor, to edit really minimal content in — basically provided headers, lists, and paragraphs work fine, that's good for me.

[09:48:52.0000] <karlcow>
As usual, the tool displaying a score will become a certificate

[09:48:57.0000] <gsnedders>
*What do I want?

[09:49:07.0000] <tantek>
"Core" is political term

[09:49:38.0000] <MikeSmith>
karlcow: I don't think anybody is trying to target "Marketers/Journalists" here. not as far as I can see. at least I hope to god not

[09:49:52.0000] <MikeSmith>
tantek: as is "Open"

[09:50:01.0000] <MikeSmith>
which is why I pretty much avoid using "Open"

[09:50:53.0000] <Ms2ger>
"Web"?

[09:52:59.0000] <karlcow>
any kind of Proxy browsers, UCWeb, Opera Mini, Kindle Fire, etc. should they be included in the level 0 of requirements of what they should do. Which market needs are we trying to address? Which population with which revenues? etc.

[09:53:32.0000] <karlcow>
Ms2ger: Web is over philosophically and politically loaded ;) </joke>

[09:53:35.0000] <gsnedders>
karlcow: Well, Kindle Fire is fundementally different to UCWeb and Mini.

[09:53:37.0000] <MikeSmith>
totally unrelated, but on the good-news side, it's encouraging to see that abarth isn't totally against the proposal to update the parsing algorithm to support <template>

[09:53:55.0000] <karlcow>
gsnedders: agreed

[09:54:02.0000] <karlcow>
different type of use cases

[09:54:32.0000] <gsnedders>
UCWeb and Mini are *inherently* limited by their design. Kindle Fire shouldn't be black-box observably different from any other WebKit fork.

[09:54:38.0000] <MikeSmith>
and on the more good-news side, it looks like pointer lock is going to land in mozilla trunk soon

[09:56:12.0000] <MikeSmith>
back about ring 0, any test-y thing like this should reward browser projects for shipping feature support, not give them a disincentive for doing so

[09:56:19.0000] <MikeSmith>
e.g., case of WebGL support

[10:06:56.0000] <MikeSmith>
speaking purely hypothetically, this would be an especially misguided approach for platforms where users have no choice about which browser (engines) they are allowed to install on the devices they've purchased

[10:07:22.0000] <MikeSmith>
no I should really shut up

[10:14:53.0000] <tantek>
MikeSmith - difference between "Open" and "Core" is that "Open" tends to have fairly widely accepted principles and definitions, e.g. open source, open licenses etc. whereas "core" is always a one-off arbitrary distinction based on whoever is making the distinction - hence political.

[10:15:18.0000] <MikeSmith>
tantek: true I guess

[10:21:27.0000] <Ms2ger>
zcorpan: yes, it needs a rewrite

[10:21:30.0000] <Ms2ger>
Patches welcome

[10:44:43.0000] <MikeSmith>
I wonder how much more resources Mozilla could put on work for Firefox Mobile is i0S users had the choice to install it

[10:44:50.0000] <MikeSmith>
same thing for Opera Mobile

[11:00:14.0000] <hober>
annevk: hey, so we're in the notifications wg now, yay!

[11:00:42.0000] <MikeSmith>
hober: yeah, thanks

[11:00:56.0000] <MikeSmith>
and welcome :)

[11:01:55.0000] <MikeSmith>
this helps to ensure that plh is not going to tell me to shut down the notifications wg and tell us to move it to a CG

[11:02:12.0000] <MikeSmith>
we are only chartered until June

[11:02:35.0000] <MikeSmith>
and I suggest that we haul ass to publish a LC draft soon

[11:02:36.0000] <Ms2ger>
Shut it down anyway

[11:02:41.0000] <Ms2ger>
Along with the HTMLWG

[11:03:08.0000] <Ms2ger>
That one certainly has more "Community" than "Working"

[11:04:00.0000] <MikeSmith>
I'd be happy to shut down all WGs

[11:04:05.0000] <MikeSmith>
less work for me :)

[11:04:25.0000] <MikeSmith>
great idea to make the Web a free-for-all where

[11:04:42.0000] <MikeSmith>
... where a CG can bind its work to specific products

[11:05:03.0000] <MikeSmith>
so let's definitely do more of that

[11:05:04.0000] <zcorpan>
tohava: what if the user has a server on localhost? (i dunno if browsers allow cross-network websocket like that...)

[11:05:15.0000] <hober>
MikeSmith annevk: first thing on the notifications agenda for me is to try to drive the permissioning issue to some kind of conclusion

[11:05:34.0000] <MikeSmith>
hober: oh please yes

[11:05:36.0000] <hober>
but first, i've got to finish up this canvas hit testing CP. :/

[11:06:53.0000] <MikeSmith>
hober: btw, after the meetings in May I am planning to not head back home til Sunday, so if you have time on Saturday, I hope to paint the town red

[11:06:57.0000] <MikeSmith>
along with annevk

[11:07:14.0000] <hober>
I'm flying to Germany that Saturday for the CSS F2F

[11:07:21.0000] <hober>
but friday night, it's *on*

[11:07:31.0000] <MikeSmith>
了解

[11:09:19.0000] <MikeSmith>
effing CSS always seems to get in the way of unlimited debauchery

[11:10:22.0000] <zcorpan>
unlimited debauchery? wow

[11:10:53.0000] <zcorpan>
MikeSmith knows what the ultimate end point is

[11:11:09.0000] <zcorpan>
fuck standards

[11:11:30.0000] <MikeSmith>
that's one of the very few things I know anything about

[11:12:08.0000] <Ms2ger>
Standards or debauchery?

[11:12:21.0000] <MikeSmith>
I know nothing about standards

[11:12:41.0000] <MikeSmith>
standards just continue to find novel ways to confuse me

[11:12:52.0000] <Ms2ger>
You have no standards, that's something else ;)

[11:12:56.0000] <MikeSmith>
heh

[11:13:37.0000] <MikeSmith>
I am a world-class expert in debauchery

[11:13:41.0000] <MikeSmith>
Coxcombe, profligate, popinjay, rake, Bully Dawson, 道楽者

[11:13:56.0000] <MikeSmith>
I welcome anybody who wants to challenge me on that

[11:14:32.0000] <TabAtkins>
Cool, CSS Images 3 just went to CR.

[11:14:42.0000] <Ms2ger>
MikeSmith, a duel at dawn?

[11:14:57.0000] <MikeSmith>
Ms2ger: bring it on

[11:15:18.0000] <Ms2ger>
No thanks, my money is on you

[11:15:31.0000] <MikeSmith>
heh

[11:15:40.0000] <MikeSmith>
annevk: blog post don't mention location.parentOrigin. karlcow scooped you

[11:16:58.0000] <karlcow>
/me who was making the point of being fashionably late… here goes my reputation. Damn

[11:17:28.0000] <MikeSmith>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-April/035348.html is a great message btw

[11:17:55.0000] <MikeSmith>
[[

[11:17:59.0000] <MikeSmith>
I constantly fear that origin scoping for security mechanisms is too

[11:17:59.0000] <MikeSmith>
coarse-grained in many use cases, because the complexity of what lives

[11:18:01.0000] <MikeSmith>
in any single origin is growing pretty rapidly. Sites put

[11:18:02.0000] <MikeSmith>
attacker-controlled content inside framed gadgets or advertisements,

[11:18:04.0000] <MikeSmith>
and can't be reasonably expected to understand that if such a frame is

[11:18:05.0000] <MikeSmith>
navigated to in a particular way, it may circumvent an origin-scoped

[11:18:06.0000] <MikeSmith>
check.

[11:18:07.0000] <MikeSmith>
]]

[11:18:16.0000] <zcorpan>
nice - http://www.paciellogroup.com/blog/2012/04/html5-accessibility-chops-data-for-the-masses/

[11:19:04.0000] <MikeSmith>
zcorpan: Steve walks the walk

[11:19:36.0000] <Ms2ger>
Next: longdesc?

[11:21:46.0000] <MikeSmith>
I think Steve's conspicuous lack of public comment on longdesc makes his thoughts on it sorta conspicuous already

[11:22:14.0000] <MikeSmith>
when Steve has a strong position in support of something, he states it

[11:22:45.0000] <TabAtkins>
For example, he has a strong position that I am dumb as concrete.

[11:23:01.0000] <MikeSmith>
Steve ain't dumb

[11:23:48.0000] <MikeSmith>
he gets paid money to do real accessibility work for clients

[11:24:48.0000] <MikeSmith>
anyway, in general when you see other accessibility professionals in the group who do actual client/product work, and they don't come out strongly in support of something, that tells you somethng

[11:24:57.0000] <zcorpan>
https://bugzilla.mozilla.org/show_bug.cgi?id=708406 - anyone know where the data file went?

[11:26:13.0000] <zcorpan>
oh, there was an android version and a safari version

[11:27:32.0000] <MikeSmith>
zcorpan: sounds like you have complete support then

[11:31:37.0000] <MikeSmith>
/me looks around for tantek to mention something about "open"

[11:31:51.0000] <Ms2ger>
Core

[11:32:05.0000] <MikeSmith>
instead I'll just say, https://lists.webkit.org/pipermail/webkit-dev/2012-April/020182.html

[11:33:22.0000] <MikeSmith>
"sharded" has become a verb now?

[11:33:29.0000] <TabAtkins>
Yes?

[11:33:33.0000] <TabAtkins>
Has been for some time.

[11:33:49.0000] <karlcow>
hmm list of urls

[11:34:29.0000] <karlcow>
the only issue I have with the surveys we all do is that we have a tendency to use the home page, which is a very specific type of page on a Web site

[11:36:24.0000] <zcorpan>
stevef's data seems to have lost the URLs, which makes it slightly less useful :-|

[11:37:05.0000] <MikeSmith>
TabAtkins: I guess I don't get around enough

[11:37:50.0000] <karlcow>
zcorpan: what do you mean? "lost"

[11:39:31.0000] <zcorpan>
karlcow: the downloaded pages have names like index-123.html and no mapping to the original URL of the page, afaict

[11:40:16.0000] <karlcow>
aaaah

[11:40:23.0000] <karlcow>
in his sample

[11:40:29.0000] <zcorpan>
yeah

[11:40:54.0000] <karlcow>
Maybe it is just a matter of telling him if he has the reference

[11:41:35.0000] <zcorpan>
he usually reads the logs and replies on twitter :-)

[11:45:47.0000] <MikeSmith>
much cheerz to chaals for speaking wisdome

[11:45:54.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-coremob/2012Apr/0062.html

[11:46:32.0000] <MikeSmith>
"The picture in Asia is much more mixed." etc.

[11:47:07.0000] <MikeSmith>
though I suspect the response is effectively going to be, fuck asia

[11:47:50.0000] <MikeSmith>
because, who cares out those billions of people?

[11:48:15.0000] <MikeSmith>
since their web interactions don't translate into ad revenue

[11:49:14.0000] <MikeSmith>
this discussion process is really useful, actually

[11:50:15.0000] <MikeSmith>
in that it clarifies that the goal is to target users whose web interactions are the most monetizable

[12:09:40.0000] <abarth>
MikeSmith: I was skeptical of the <template> stuff at first, but I've come around.  It's not actually that nutty a change.

[12:10:39.0000] <MikeSmith>
abarth: yeah, understood

[12:12:19.0000] <karlcow>
MikeSmith: definitely useful. Doing devrel it is another drawback we have. People very often creates their Web site for the very local market and/or thinking they will only have local users with the new top smartphone. Mirror effect? "Users are what I see in the mirror in the morning"

[12:13:23.0000] <MikeSmith>
karlcow: that's actually a pretty smart business model for most orgs

[12:14:55.0000] <MikeSmith>
it's not as if users in Indonesia or Ukraine are generating much revenue for various corpo-web properties/services

[12:16:20.0000] <karlcow>
MikeSmith: for paid apps "maybe". For Ads revenues, I'm not that sure.

[12:16:59.0000] <karlcow>
that would be an interesting study to do.

[12:17:36.0000] <MikeSmith>
I think I know that the results of that study would be

[12:18:10.0000] <annevk>
MikeSmith: heh, location.targetOrigin was too obscure

[12:18:17.0000] <annevk>
MikeSmith: also, it's just an idea at this point

[12:18:22.0000] <isherman>
Hixie: Any ETA on when you'll have some time to look in more depth at [ http://wiki.whatwg.org/wiki/Autocomplete_Types ]?

[12:18:28.0000] <annevk>
yeah, leave...

[12:18:29.0000] <annevk>
:p

[12:18:37.0000] <annevk>
hober: yeah I noticed, that's awesome

[12:18:41.0000] <karlcow>
I guess also $socialNetwork have a population of users in developing countries just by the fact of immigration. Son, daughter, or friends studying in another rich country and driving the relations into using the $socialnetwork. This would be interesting to measure

[12:19:12.0000] <annevk>
hober: the permission stuff is a problem, the spec writing seems like a minor problem too, but maybe we can overcome that somehow

[12:19:18.0000] <annevk>
hober: or maybe you can help out ;)

[12:56:51.0000] <hober>
annevk: :)

[13:09:08.0000] <annevk>
I didn't know about ArrayBufferView

[13:09:21.0000] <annevk>
if I had we would not have had responseType = "arraybuffer"

[13:09:42.0000] <annevk>
many times bah

[13:10:07.0000] <annevk>
nn

[13:10:40.0000] <Ms2ger>
nn

[13:19:10.0000] <TabAtkins>
Man, ArrayBuffer is kinda broken all over the place.

[13:28:48.0000] <Ms2ger>
A true Web API

[13:29:49.0000] <TabAtkins>
Good point.

[13:35:40.0000] <jamesr>
created to avoid having to wait for tc39

[14:28:51.0000] <Hixie>
isherman: no current ETA but if it's on my list of things to prioritise. O(weeks), not months.

[14:29:08.0000] <isherman>
Hixie: Ok, thanks

[14:29:44.0000] <Hixie>
(sorry about the delay, i've been dealing with big feature issues that i'd been putting on the back burner for too long)

[14:30:01.0000] <Hixie>
(like the canvas v5 api additions, <dialog>, csp, web intents...)

[14:42:27.0000] <hober>
First pass on a canvas hit testing CP that restores the v5 Path object etc.; any comments / thoughts / suggestions for improvement? http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-201

[16:19:38.0000] <hober>
deafening response :)

[16:23:50.0000] <Velmont>
As always ;-)

[16:38:44.0000] <zewt>
googling specs is becoming useless; 'site:whatwg.org/specs "structured clone"' apparently no longer even returns http://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html


2012-04-12
[17:07:25.0000] <Hixie>
zewt: you're making your life too complicated. just googled [structured clone], no site: operator, no quotes, and the first hit for me is the whatwg spec.

[17:07:59.0000] <Hixie>
admittedly, the wrong page of it :-)

[17:08:57.0000] <Hixie>
but that's what "find in page" and the single page version are for is for

[17:09:02.0000] <Hixie>
s/is for//

[17:09:41.0000] <zewt>
Hixie: my first hit is http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html, which is entirely wrong

[17:10:08.0000] <zewt>
the entire reason i'm searching is to avoid destroying my browser with the single page spec. heh

[17:10:55.0000] <Hixie>
use a better browser :-)

[17:11:09.0000] <zewt>
there are no browsers that can quickly load that. heh

[17:11:45.0000] <Hixie>
i leave it open in a tab in chrome all the time with no problems

[17:11:46.0000] <zewt>
i think it's entirely reasonable to expect "site:whatwg.org/specs structured clone" to find the right page :) (and it used to!)

[17:11:58.0000] <zewt>
no idea what changed

[17:12:02.0000] <Hixie>
oh i'm not saying it shouldn't work :-)

[17:13:10.0000] <ginger>
yay! modal dialogs!

[17:45:02.0000] <Yuhong>
Also horrible: using "standard-compliance" when "boat anchor" is meant.

[18:58:41.0000] <zewt>
if i hear one more person that should know better claim that "#! breaks the web" ...

[19:01:40.0000] <heycam>
twitter.com/#!/bin/sh

[20:11:30.0000] <onr>
lol'd

[20:12:23.0000] <onr>
iirc, google requires #! to crawl ajaxed pages

[23:09:46.0000] <annevk>
every Typed Array thread ends up with lots of email

[23:10:06.0000] <annevk>
but I guess as long as people don't expect me to read through it all, I'm good

[23:15:26.0000] <heycam>
you need an TypedArrayThreadView to show you just the important ones

[23:15:47.0000] <annevk>
my filter is just reading what bz writes

[23:16:01.0000] <annevk>
and glenn

[23:16:06.0000] <annevk>
well zewt

[23:16:16.0000] <heycam>
good filter

[23:17:19.0000] <annevk>
per my filter we're going to change send() to only take ArrayBufferView

[23:17:31.0000] <annevk>
but responseType = "arraybuffer" is perfectly acceptable

[23:21:48.0000] <annevk>
btw hsivonen, do you still think we should change it to "full screen" given that Mozilla now names everything "fullscreen" (modulo the API)

[23:22:46.0000] <zcorpan>
Hixie: if scripting is disabled, should <form method=dialog> submit anyway? why is it called "dialog"?

[23:23:17.0000] <Hixie>
it's called dialog because it closes dialogs

[23:23:54.0000] <Hixie>
and if you want to support script-disabled cases, then don't use it, just cancel the submit even

[23:23:57.0000] <Hixie>
t

[23:23:59.0000] <annevk>
does create a weird asymmetry with XMLHttpRequest where method exclusively means HTTP method

[23:24:02.0000] <Hixie>
(or whatever it is you have to do)

[23:24:59.0000] <annevk>
but action="about:dialog" seems somewhat ugly

[23:25:28.0000] <nesta_>
good day! :)

[23:25:41.0000] <annevk>
good morning

[23:25:48.0000] <Hixie>
annevk: using action="" would mean you couldn't do legacy fallback

[23:26:10.0000] <annevk>
ah yeah, I saw you mentioning that

[23:26:21.0000] <Hixie>
not that i think anyone will really ever do that, but anyway

[23:29:42.0000] <Hixie>
abarth: btw the table at http://www.whatwg.org/specs/web-apps/current-work/#browsing-context-names may be of interest

[23:29:47.0000] <Hixie>
abarth: though it doesn't answer your question in this case

[23:30:01.0000] <Hixie>
abarth: since you're not targetting anything, you're just starting a navigation

[23:30:13.0000] <abarth>
looking

[23:30:39.0000] <abarth>
this is a nice table

[23:30:45.0000] <abarth>
i will convert it to a test suite

[23:30:56.0000] <Hixie>
heh

[23:31:27.0000] <Hixie>
abarth: that table suggests that seamless overrides sandbox, actually

[23:31:31.0000] <Hixie>
(that table is non-normative btw)

[23:31:47.0000] <abarth>
is my case different from "none specified, for links and form submissions	"

[23:31:49.0000] <abarth>
?

[23:32:38.0000] <Hixie>
ok, i've now read the spec

[23:32:47.0000] <Hixie>
the sandboxing override happens _before_ the seamless redirect

[23:32:51.0000] <Hixie>
so the table is correct

[23:33:08.0000] <Hixie>
and window.location = foo is equivalent to the top row, but scripted

[23:33:24.0000] <abarth>
so, we should navigate the master

[23:33:28.0000] <Hixie>
right

[23:33:31.0000] <Hixie>
if scripting is enabled

[23:33:33.0000] <abarth>
thanks!

[23:33:36.0000] <abarth>
yeah

[23:33:38.0000] <abarth>
will fix

[23:33:45.0000] <abarth>
I'm glad I asked

[23:34:05.0000] <Hixie>
i'll reply on the list as well in case anyone else cares

[23:35:46.0000] <Hixie>
Content-Type: text/plain; charset=UTF-8

[23:35:49.0000] <Hixie>
that's right, no?

[23:36:06.0000] <Hixie>
wtf

[23:36:08.0000] <abarth>
I think so

[23:37:07.0000] <Hixie>
why the hell is apache stripping my charset

[23:37:42.0000] <Hixie>
oh, it's not

[23:37:46.0000] <Hixie>
ok now i'm even more confused

[23:38:44.0000] <hsivonen>
should I reward the use of a bug tracker as a helpdesk by giving the answer: http://bugzilla.validator.nu/show_bug.cgi?id=918 ?

[23:42:17.0000] <zcorpan>
i'd say something like "don't use bugzilla for this. use <appropriate forum> instead. but the answer is <foo>. RESOLVED INVALID"

[23:44:15.0000] <Hixie>
or just create a component for helpdesk questions, they're gonna come anyway :-)

[23:47:11.0000] <Hixie>
gah, i hate all this crap in libraries and languages that tries to hide the difference between byte strings and unicode strings

[23:55:03.0000] <annevk>
what do you mean?

[23:56:34.0000] <Hixie>
like, if you read something from the console, it should just be a byte stream, and it should be impossible to concatenate it to a string "foo"

[23:56:43.0000] <Hixie>
because "foo" is a bunch of characters, not a byte stream

[23:57:07.0000] <Hixie>
unless you have an encoding to use to convert the byte stream to a character stream, it should remain a byte stream

[00:20:13.0000] <zcorpan>
so i guess websocket needs to s/ArrayBuffer/ArrayBufferView/ as well

[00:23:40.0000] <zcorpan>
/me finds out that the feedback form in the websocket spec on dev.w3.org doesn't work

[00:34:25.0000] <annevk>
who are involved in Fullscreen for the various browsers?

[00:34:29.0000] <annevk>
oh well

[00:35:12.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16709

[00:35:12.0000] <heycam>
annevk, chris pearce for us

[00:35:17.0000] <annevk>
ah

[00:35:45.0000] <annevk>
thanks, addedh im

[00:44:24.0000] <annevk>
bz being too short for W3C Bugzilla sucks

[00:44:39.0000] <annevk>
they could at least special case him

[00:55:25.0000] <annevk>
thanks foolip for http://lists.w3.org/Archives/Public/public-html-ig-zh/2012Apr/0007.html and other emails!

[00:55:45.0000] <annevk>
foolip: I'm following along with Google Translate :)

[00:56:12.0000] <foolip>
annevk, as you might have guessed, they're a bit worried about other Big5 extensions

[00:56:40.0000] <zcorpan>
foolip: any progress on the gb data?

[00:56:40.0000] <foolip>
/me checks how well Google Translate understands his Chinese...

[00:56:57.0000] <annevk>
I looked for Taiwanese browser market share, and it's IE + Chrome, then Firefox

[00:56:58.0000] <foolip>
zcorpan, no, I haven't had time yet

[00:57:05.0000] <annevk>
Firefox having like 10%

[00:57:12.0000] <annevk>
and IE about 60%

[00:57:39.0000] <foolip>
annevk, the only think I could see making a difference is if there is some font using PUA that is installed on virtually all Taiwanese windows machines

[00:57:41.0000] <annevk>
which seems to me that if those pages use Firefox extensions, they're not aimed at the majority

[00:58:01.0000] <annevk>
foolip: true

[00:58:11.0000] <foolip>
But so far I haven't heard of such a thing, so I hope it is not common...

[00:58:24.0000] <annevk>
foolip: Chrome does match IE pretty closely for PUA

[00:58:42.0000] <foolip>
Indeed, which is why it could potentially be a problem.

[01:00:04.0000] <annevk>
god I hate PUA

[01:00:09.0000] <annevk>
so much

[01:00:26.0000] <foolip>
I hope we succeed in killing it for Big5

[01:00:35.0000] <foolip>
Are there other encodings that use it?

[01:02:15.0000] <zcorpan>
utf-8? :-)

[01:02:32.0000] <foolip>
Yeah, of course :)

[01:02:51.0000] <annevk>
macintosh is the only index

[01:03:13.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/index-macintosh.txt

[01:03:22.0000] <annevk>
112	0xF8FF	 (<Private Use>)

[01:04:03.0000] <foolip>
Huh, what's it usually used for? Can it be destroyed?

[01:04:27.0000] <annevk>
it's Apple's logo

[01:04:34.0000] <annevk>
it's used all over

[01:05:09.0000] <annevk>
http://en.wikipedia.org/wiki/Private_Use_(Unicode)#Example_code_point_U.2BF8FF

[01:06:23.0000] <foolip>
Oh well, nothing to do about it I guess

[01:06:50.0000] <zcorpan>
that code point should just be grandfathered in unicode to become a proper character

[01:06:54.0000] <annevk>
the more scary trend is these icon fonts that use PUA all over

[01:07:08.0000] <annevk>
but when copy and pasted lose all original meaning

[01:07:51.0000] <annevk>
the technique has awesome benefits such as icons scaling with the text, etc.

[01:08:13.0000] <annevk>
but as far as semantics goes it's spacer gifs and tables for layout all over again

[01:08:31.0000] <zcorpan>
icon fonts should use ligatures and real words

[01:09:10.0000] <zcorpan>
like a ligature for "twitter" being an icon

[01:09:52.0000] <hsivonen>
zcorpan: indeed

[01:09:54.0000] <foolip>
zcorpan, do you mean that the Apple logo should be added to a new code point, or that U+F8FF should be redefined?

[01:10:05.0000] <zcorpan>
foolip: the latter

[01:10:42.0000] <hsivonen>
zcorpan: does OpenType place limits on the number of code points that can ligate into one glyph?

[01:11:17.0000] <zcorpan>
don't think so, there's one ligature that's a whole word in some font. don't recall what it is

[01:12:49.0000] <foolip>
zcorpan, I don't disagree, but Unicode politics seem pretty hard to navigate

[01:13:48.0000] <hsivonen>
I've seen whole-word ligatures in AAT fonts but I haven't seen them in OpenType fonts

[01:14:24.0000] <zcorpan>
oh. i don't recall whether this was OpenType or not

[01:14:36.0000] <hsivonen>
AAT Zapfino has a ligature for "Zapfino" and, IIRC, some AAT fonts when set to maximum ligatures ligate "Apple" to the Apple logo

[01:15:12.0000] <zcorpan>
Zapfino was probably what i was thinking of

[01:34:26.0000] <kennyluck>
Does anyone know why the CSS specs tend to have very few statements of conformance requirement? They are usually full of sloppy statements of facts.

[01:35:01.0000] <annevk>
writing specs is hard

[01:35:16.0000] <annevk>
doing so in committee doubly so

[01:35:35.0000] <kennyluck>
/me was using http://ln.hixie.ch/?start=1140242962&count=1 to categorize statements.

[01:36:05.0000] <kennyluck>
Well, using "must" or not seems more like a cultural problem than a technical one.

[01:36:47.0000] <annevk>
you don't use "must" in statements of fact

[01:37:27.0000] <Ms2ger>
Yeah, CSS doesn't bother with conformance requirements

[01:37:34.0000] <kennyluck>
annevk, I know. What I am saying is that you usually see fewer 'must's in CSS specs.

[01:39:06.0000] <annevk>
in terms of quality CSS is somewhere in the middle between HTML4 and HTML, erring towards HTML4 if not many people are looking or if they give up on the hard problems when people are looking

[01:39:53.0000] <annevk>
they're adding a bunch of new layout modules without understanding table layout

[01:40:20.0000] <annevk>
that seems irresponsible to me, but nobody cared much when I brought it up

[01:40:53.0000] <Ms2ger>
New stuff is more fun than old stuff, or so I hear

[01:41:13.0000] <annevk>
no man, legacy encodings are the shit :)

[01:41:34.0000] <Ms2ger>
s/the// :)

[01:41:39.0000] <annevk>
:p

[01:54:02.0000] <Von_Davidicus_>
Validation question:  How do I get the HTML5 validator to recognize that I'm using XHTML5, and thus the XML processing instruction isn't an error?

[01:54:23.0000] <annevk>
by not using text/html as MIME type

[01:54:54.0000] <annevk>
but since you didn't do that yourself, it's probably best to stick to HTML

[02:01:26.0000] <Von_Davidicus_>
Must be the way I'm validating it (by file upload)

[02:02:00.0000] <annevk>
file extension?

[02:03:09.0000] <Von_Davidicus_>
.xhtml

[02:03:30.0000] <Von_Davidicus_>
/me has a habit of using that file extension.

[02:07:52.0000] <annevk>
dunno then

[02:08:18.0000] <annevk>
you could set a Parser override just in case

[02:08:27.0000] <annevk>
to XML that is

[02:08:46.0000] <annevk>
assuming you're using http://validator.nu/

[02:09:21.0000] <Von_Davidicus_>
Whoops, my bad.  I had changed the extension to .html.

[02:09:43.0000] <Von_Davidicus_>
/me switches file back to "Nerd Mode"  :)

[02:18:38.0000] <kennyluck>
i think asking Firefox to drop certain big5 mapping is just like asking browsers to drop support for their proprietary CSS extension that is already used by some sites. It's neither beneficial to Firefox as a browser vendor nor to its users.

[02:19:31.0000] <annevk>
Firefox currently renders several big5 encoded sites incorrectly

[02:20:44.0000] <Von_Davidicus_>
Before I publish a statement, may I ask your opinions as to its accuracy?

[02:22:24.0000] <Von_Davidicus_>
I'm doing some writing on website coding.  The statement is:  "XHTML 2.0 was virtually booed off the web."

[02:22:26.0000] <kennyluck>
You can try data:application/xhtml+xml as a workaround.

[02:24:18.0000] <annevk>
kennyluck: also, fyi, Firefox has dropped proprietary extensions in the past to make the web better

[02:25:02.0000] <annevk>
kennyluck: but I'm curious what data you have that suggests Firefox's big5 behavior is better than that of other browsers because all the data I've looked at suggests otherwise

[02:29:00.0000] <kennyluck>
annevk, because it displays the Web archive of a BBS I visited everyday correctly → http://www.ptt.cc/bbs/C_Chat/M.1334222500.A.047.html

[02:30:10.0000] <kennyluck>
It gives me "いま俺の顔生涯最高にキモい自信がある" in Firefox and "俺生涯最高自信" in other browsers.

[02:31:23.0000] <kennyluck>
I almost never use HK sites so I might be selfish saying so though.

[02:33:31.0000] <kennyluck>
by the way, big5-hkscs gives "いま俺の𡟺生涯最高にキモい自信がある" which is a bit different too.

[02:36:37.0000] <annevk>
but that looks a lot closer already

[02:36:57.0000] <foolip>
kennyluck, how should "big5" be interpreted to fix the most number of sites?

[02:39:58.0000] <kennyluck>
foolip, I doubt we should fix that to be locale-dependent. As a non-HK person, the best for me seems to be "big5" maps to "big5-uao" in a zh-TW browser and "big5-hkscs" in a zh-HK browser.

[02:40:28.0000] <foolip>
kennyluck, so you think it *should* be locale-dependent?

[02:41:19.0000] <kennyluck>
foolip, probably just like how the default encoding is specced.

[02:41:20.0000] <kennyluck>
Yes

[02:41:39.0000] <kennyluck>
(though ironically the default encoding of zh-TW Firefox is UTF-8 instead of big5, which is not following the spec.)

[02:42:44.0000] <foolip>
kennyluck, do Windows machines in Taiwan have fonts using PUA that make this work in other browsers than Firefox, and how common is that?

[02:43:05.0000] <Von_Davidicus_>
annevk, may I get your opinion as to the accuracy of a statement I was hoping to put into an essay about HTML?

[02:43:23.0000] <kennyluck>
foolip, no data from me :(

[02:44:29.0000] <foolip>
kennyluck, do you know if .tw sites depending on Big5-UAO are common? FWIW, I use a few Taiwan sites regularly and have not encountered this problem in Opera

[02:46:51.0000] <kennyluck>
foolip, no I don't think it's common. But still, there's better chance for me to visit www.ptt.cc, which is the archive of the BBS I talked about (currently 80000 people online), than any HK site ever.

[02:47:36.0000] <foolip>
kennyluck, does that site only work properly in Firefox?

[02:51:18.0000] <kennyluck>
foolip, if you mean "the Japanese is correctly rendered", then Yes. But in reality not many people use Japanese in Taiwan anyway. I visit that forum, which is for discussions around Anime (admittedly *not* the WWW archive) quite often though.

[02:51:25.0000] <kennyluck>
I think it just somehow reaches a point that nobody cares too much. If the site cares about compatibility, it would just use utf-8.

[02:52:38.0000] <kennyluck>
But really, displaying more characters is like rendering effects. If there's script that blocks the whole functionality of a site than it indeed sounds more serious.

[02:53:18.0000] <kennyluck>
s/script/script that relies on big5 decoded as big5-hkscs/

[03:03:35.0000] <annevk>
kennyluck: sites written towards one browser will of course start rendering incorrectly

[03:04:00.0000] <annevk>
kennyluck: that's why you shouldn't code towards one browser, because browsers will typically evolve to work with most sites, rather than a few coded towards them

[03:06:47.0000] <kennyluck>
annevk, I think those who are knowledged about this problem would just tell you that those who create site like www.ptt.cc are not targeting specific browser, they just dump their database, which happened to be 'big5-uao' in reality, and tag the page as 'big5'.

[03:07:21.0000] <kennyluck>
I believe it's a fact that 'big5-uao' is more popular than 'big5-hkscs' in Taiwan, but I don't have data.

[03:08:16.0000] <annevk>
so how does IE render those sites correctly?

[03:08:27.0000] <annevk>
it seems you're saying people have installed specific fonts

[03:09:03.0000] <annevk>
or that Firefox's market share is misrepresented maybe

[03:11:54.0000] <kennyluck>
annevk, I have no idea. I have no idea how many percent of Taiwanese people install the 'big5-uao' package (which is irrelevant to fonts) either.

[03:13:11.0000] <kennyluck>
(Those who install the 'big5-uao' package on Windows will see 'big5' as 'big5-uao'.)

[03:13:39.0000] <annevk>
doesn't sound like it's irrelevant to fonts to me

[03:15:15.0000] <annevk>
http://bugs.ruby-lang.org/issues/show/1784 only mentions ptt.cc

[03:19:48.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16303 *sigh*

[03:19:53.0000] <annevk>
/me goes to work on something else

[03:20:41.0000] <annevk>
kennyluck: do you have a reference for that package btw?

[03:21:31.0000] <annevk>
kennyluck: the data I've seen thus far suggests hkscs is a better mapping, with the notable exception of ptt.cc

[03:25:51.0000] <kennyluck>
annevk, or to be more precise, the forums in ptt.cc that use Japanese regularly, which probably accounts for less than 5%.

[03:26:10.0000] <kennyluck>
The best link I can get is http://zh.wikipedia.org/wiki/Unicode%E8%A3%9C%E5%AE%8C%E8%A8%88%E7%95%AB .

[03:33:48.0000] <Philip`>
hsivonen: I believe OpenType allows ligatures matching on sequences of up to 65535 glyphs (the only limit is the uint16 in the file format)

[03:34:20.0000] <Philip`>
hsivonen: (http://www.microsoft.com/typography/otspec/GSUB.htm#LSF1 is the relevant thing)

[03:34:35.0000] <Philip`>
/me doesn't know if any implementations are stricter than that

[03:34:41.0000] <foolip>
kennyluck, if ptt.cc is the only notable site that would suffer, would approaching them and asking them to fix the problem be an option?

[03:34:44.0000] <annevk>
kennyluck: that wikipedia page seems to suggest the Windows big5 mapping table is altered, but says nothing about newer versions of Windows

[03:37:15.0000] <annevk>
foolip: we should probably have a site compat issue on that

[03:37:41.0000] <foolip>
annevk, on Big5-UAO?

[03:37:48.0000] <foolip>
oh, on ptt.cc

[03:37:56.0000] <foolip>
I guess you mean Open the Web?

[03:38:09.0000] <annevk>
yeah, dunno about Unicode-at-on in general

[03:38:26.0000] <foolip>
annevk, I'm writing an email about this, one sec

[03:41:52.0000] <hsivonen>
Philip`: thanks

[03:46:27.0000] <annevk>
oh great

[03:47:07.0000] <annevk>
so HTML says when URL encode for query gets a character that cannot be encoded a "?" is to be used instead

[03:47:19.0000] <annevk>
Gecko uses UTF-8 bytes instead

[03:47:29.0000] <annevk>
Chrome uses &#...; instead!

[03:47:34.0000] <annevk>
Opera follows spec

[03:47:45.0000] <annevk>
Safari follows Chrome

[03:48:59.0000] <zcorpan>
iirc the spec matches (old?) ie

[03:49:25.0000] <annevk>
IE9 emits raw bytes (after I changed test to use standards mode to make it work at all)

[03:49:31.0000] <annevk>
source code

[03:49:32.0000] <annevk>
<!doctype html><meta charset=tis-620><a></a><script>var a = document.getElementsByTagName("a")[0]; a.href = "?\ufffd"; alert(a.href) </script>

[03:49:48.0000] <annevk>
not sure what raw bytes means actually

[03:49:57.0000] <annevk>
the alert just had the character there

[03:50:32.0000] <annevk>
if I encodeURI() it I get utf-8...

[03:51:00.0000] <zcorpan>
i guess you should try following the link and see what the server gets

[03:52:03.0000] <annevk>
pretty sure IE will just put raw bytes on there

[03:54:23.0000] <annevk>
unsolved problems from 2009 http://annevankesteren.nl/2009/03/urls

[03:55:13.0000] <annevk>
oh yes

[03:55:14.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2009Mar/0321.html

[03:55:36.0000] <annevk>
"There are some small interop issues. IE6 (not sure about newer versions)  sends the query string as raw UTF-8 bytes rather than having them percent-escaped."

[04:01:27.0000] <kennyluck>
foolip, I think that's an option. I would guess not many people like this option though. Don't ask me for a reason because I truly don't know. But I think what would be more realistic and useful is to get IE people's commitment on shipping 'big5' to mean 'big5-hkscs'. Perhaps they have clear reasons for not doing so.

[04:03:25.0000] <kennyluck>
As my friend (Timothy Chien in the mailing list) told me, this might not be doable because IE might refuse to use anything besides the system's mapping tables.

[04:05:07.0000] <annevk>
hmm http://stackoverflow.com/questions/6763799/utf-8-encoding-issue-in-ie-query-parameters#comment8020739_6763799

[04:05:15.0000] <annevk>
sounds like this is some kind of WTF area

[04:09:18.0000] <zcorpan>
should we make the spec look at namespaced attributes? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1460

[04:11:26.0000] <annevk>
zcorpan: because? returning null there is fine no?

[04:14:10.0000] <zcorpan>
we look at elements with prefixes, but not at attributes with prefixes

[04:14:34.0000] <zcorpan>
seems inconsistent

[04:15:21.0000] <annevk>
that's only so you don't have to look for xmlns attributes

[04:15:33.0000] <annevk>
and only at xmlns:* attributes

[04:15:50.0000] <zcorpan>
the spec looks at xmlns attributes

[04:16:26.0000] <zcorpan>
the spec even picks up xmlns="" in no namespace; maybe that's bogus

[04:16:44.0000] <annevk>
you previously argued to do the simplest thing possible here

[04:16:58.0000] <zcorpan>
yeah, i did

[04:18:12.0000] <kennyluck>
annevk, I did some URL in CSS testing last week too → http://lists.w3.org/Archives/Public/www-style/2012Apr/0204 . I was very amused by how IE9 handles the url "%" :p

[04:18:35.0000] <zcorpan>
but innerHTML uses these methods

[04:19:37.0000] <zcorpan>
but i guess looking at namespaced attributes is overkill

[04:21:33.0000] <zcorpan>
maybe innerHTML shouldn't be using these methods in the first place

[04:22:31.0000] <Ms2ger>
You tell me :)

[04:23:05.0000] <annevk>
URLs doing decoding so massively different is annoying for testing decoders

[04:23:25.0000] <annevk>
well, the problem is mostly IE I guess

[04:24:12.0000] <annevk>
I wish Microsoft hang out in an IRC channel somewhere

[04:33:37.0000] <annevk>
oh sweet

[04:33:39.0000] <annevk>
IE is the worst

[04:34:28.0000] <annevk>
it does indeed use "?" over the wire

[04:35:36.0000] <annevk>
but to script it exposes the character itself

[04:36:22.0000] <annevk>
so some kind of normalization happens at the network layer, whereas other browsers do normalization upfront

[04:39:47.0000] <annevk>
so basically testing IE would involve network loads

[04:40:04.0000] <annevk>
fffffffuuuuuuuuuuuu

[05:04:28.0000] <nesta_>
annevk++ :)

[05:22:03.0000] <zcorpan>
and another quirk gets some tests http://simon.html5.org/test/quirks-mode/table-cell-width-calculation.html

[05:22:17.0000] <zcorpan>
time for coffee

[05:23:00.0000] <hsivonen>
Who has time to WONTFIX https://www.w3.org/Bugs/Public/show_bug.cgi?id=16711 with strong enough arguments to prevent escalation and reopening?

[05:25:08.0000] <annevk>
another question, who can make this fast:

[05:25:11.0000] <annevk>
results = []

[05:25:11.0000] <annevk>
for(i = 0; i < 0x10FFFF; i++) {

[05:25:11.0000] <annevk>
  t.href = "?" + cp_str(i)

[05:25:11.0000] <annevk>
  results.push(uhex(i) + "\t" + t.search)

[05:25:11.0000] <annevk>
}

[05:25:11.0000] <annevk>
r.textContent = results.join("\n")

[05:25:52.0000] <Ms2ger>
zcorpan++

[05:28:11.0000] <annevk>
until 0x10000 goes fast enough, but then CPU starts spinning mad

[05:28:49.0000] <zcorpan>
hsivonen: how about "Or else...?" :-)

[05:30:30.0000] <zcorpan>
annevk: what's cp_str?

[05:30:46.0000] <annevk>
function cp_str (cp) {

[05:30:46.0000] <annevk>
  if(cp < 0x10000)

[05:30:46.0000] <annevk>
    return String.fromCharCode(cp)

[05:30:46.0000] <annevk>
  cp -= 0x10000

[05:30:46.0000] <annevk>
  return String.fromCharCode(0xD800 + (cp >> 10), 0xDC00 + (cp & 0x3FF))

[05:30:46.0000] <annevk>
}

[05:32:17.0000] <Ms2ger>
return String.fromCharCode(0xD800 + (cp >> 10)) + String.fromCharCode(0xDC00 + (cp & 0x3FF)), maybe?

[05:34:50.0000] <annevk>
that is faster?

[05:35:05.0000] <annevk>
hsivonen: added a comment

[05:36:00.0000] <annevk>
hsivonen: and resolved INVALID for good measure

[05:36:38.0000] <Ms2ger>
It could be, up to you to test :)

[05:38:46.0000] <annevk>
hmm

[05:39:09.0000] <gsnedders>
annevk: What browser are you testing in?

[05:40:00.0000] <gsnedders>
Actually, nvm, won't hit that bug anyway.

[05:40:05.0000] <annevk>
Firefox/Opera Next/Chrome

[05:40:11.0000] <annevk>
CPU is spinning mad

[05:41:39.0000] <annevk>
Chrome / Opera done

[05:41:42.0000] <annevk>
Opera responsive

[05:41:47.0000] <annevk>
in Chrome the page cannot really be used

[05:41:55.0000] <annevk>
Firefox is not done, but has some kind of responsive page

[05:42:28.0000] <annevk>
hmm, looks like Firefox quit at E5F33	?%F3%A5%BC%B3

[05:42:52.0000] <hsivonen>
annevk: thanks

[05:44:39.0000] <annevk>
I guess once I add a way to filter out results that encode per default error handling ("?", "&#...", URL encoded utf-8 bytes) this might be okay

[05:44:50.0000] <zcorpan>
annevk: maybe you can have two nested loops to generate all possible surrogate pairs

[05:44:56.0000] <annevk>
Internet Explorer would still not be tested but bah

[05:45:48.0000] <annevk>
zcorpan: seems so unlogical that simple math would be the bottleneck here

[05:45:53.0000] <annevk>
illogical*

[05:46:18.0000] <Ms2ger>
/me points at the topic

[05:46:24.0000] <foolip>
kennyluck, are you sure that ptt.cc is actually purely Big5-UAO? Isn't it more likely that it's a random mix of Big5-HKSCS and Big5-UAO depending on what software/browser was used to post?

[05:47:04.0000] <hsivonen>
passing through bytes provided by whoever posted seems scary

[05:48:00.0000] <foolip>
hsivonen, indeed, but surely it's what 99% of the Web does?

[05:48:24.0000] <hsivonen>
99% of the Web is scary

[05:49:16.0000] <foolip>
/me nods

[05:49:28.0000] <kennyluck>
foolip, indeed. It would depend on what software is used to post, which this is case are telnet clients. As I said, only 5% of the sub-forums are affected by this.

[05:49:38.0000] <hsivonen>
if there's something good about Java, it's that it converts to UTF-16 upon input, so you don't get to pass through bytes

[05:50:14.0000] <Ms2ger>
That's a pretty big 'if' :)

[05:50:22.0000] <foolip>
kennyluck, do you have any contact with the site operators? it would be interesting to analyze a random selection of pages that use the byte sequences in question...

[05:53:39.0000] <zcorpan>
var high, low;

[05:53:39.0000] <zcorpan>
for (high = 0xd800; high < 0xdc00; ++high) {

[05:53:39.0000] <zcorpan>
  for (low = 0xdc00; low < 0xe000; ++low) {

[05:53:39.0000] <zcorpan>
    doStuff(String.fromCharCode(high, low));

[05:53:39.0000] <zcorpan>
  }

[05:53:39.0000] <zcorpan>
}

[05:54:25.0000] <foolip>
zcorpan, was that for me?

[05:54:32.0000] <zcorpan>
for annevk

[05:55:38.0000] <kennyluck>
foolip, yes. I do, actually, a friend of a friend. What would be best way to do this? Let me ask for a mail address for me. But what kind of analysis do you want to do? If you just want a random selection of the pages, the subpages of http://www.ptt.cc/bbs/C_Chat/index.html that has Japanese in it would do. Or do you want to get a list of softwares that are used to post to PTT?

[05:56:01.0000] <kennyluck>
I think a bunch of them are open source telnet clients.

[05:56:13.0000] <kennyluck>
s/for me/for you.

[05:57:06.0000] <foolip>
kennyluck, ideally, a list of every single page that uses any of the byte sequences that differ between hkscs and uao, but if that's hard to produce I guess a big enough random selection should allow me to find them myself

[05:57:37.0000] <annevk>
I thought Firefox was supposed to have a non-blocking UI?

[05:57:52.0000] <foolip>
kennyluck, even better would of course be to ask if they're aware of the problem and if they would be prepared to make some changes to fix it

[05:59:45.0000] <kennyluck>
foolip, that is… well, not very easy I would assume. It is basically a non-profit site, partly run by National Taiwan University, and I never think they actively maintain the underlying BBS software.

[06:00:09.0000] <foolip>
kennyluck, so perhaps just scraping it ourselves would be easier?

[06:00:20.0000] <foolip>
kennyluck, are there sub-forums in or about Cantonese?

[06:00:31.0000] <kennyluck>
foolip, good point. Yes.

[06:01:20.0000] <kennyluck>
It's basically a community site for everything.

[06:01:25.0000] <foolip>
kennyluck, do I need a special version of Windows to test if these pages display properly in non-Firefox browsers, with special font support?

[06:02:26.0000] <annevk>
even the U+0000 - U+007F range has some incompatible stuff, but that's due to using URLs I guess

[06:04:02.0000] <kennyluck>
foolip, I have no idea. I've been not using Windows for a while, but I would guess you can install the big5-uao package on every Windows. It pretty much just replaces the system's big5 encoding table, or this is what I heard.

[06:05:19.0000] <foolip>
kennyluck, do you have any idea where one would find this package? Googling "big5-uao" mostly finds Mozilla-related things...

[06:05:50.0000] <foolip>
In any case, unless this is installed on >50% of Taiwan Windows computers, I really don't see how it could change matters much...

[06:06:53.0000] <kennyluck>
foolip, you can google the phrase "unicode補完計畫". This is one page teaching this → http://www.techbang.com/posts/3350-let-win7-perfect-display-japanese-web-page

[06:07:37.0000] <foolip>
kennyluck, ah, that's the "Unicode 補完" you mentioned in your mail (which was very helpful, thank you!)

[06:08:30.0000] <kennyluck>
Wow, the steps are crazy. I wonder how many people go throughout these.

[06:10:56.0000] <foolip>
kennyluck, yeah, replacing CP950 in 18 steps really doesn't seem like something many would do...

[06:11:42.0000] <annevk>
that it's available does suggest the problem might be more widespread :/

[06:12:19.0000] <foolip>
kennyluck, also, the example used on that page (forum.tw.fdzone.org/viewthread.php?tid=324495) looks like it's only Japanese kana, which big5-hkscs would fix too

[06:12:56.0000] <foolip>
I think we should try to find a better sample of Taiwanese pages, but using what source?

[06:13:25.0000] <kennyluck>
Yeah, I wonder why people don't teach big5-hkscs instead. MS people are clearly not doing good evangelism.

[06:14:08.0000] <annevk>
all you get back from MS people is "use utf-8 or utf-16"

[06:14:18.0000] <annevk>
even if you ask questions specific to big5 :)

[06:14:26.0000] <foolip>
kennyluck, any advice you can give about how to proceed in order to minimize breakage for Taiwan users would be most helpful... :/

[06:15:07.0000] <foolip>
annevk, I assume that we don't have any locale-dependent mappings and that you won't consider spec'ing that?

[06:16:08.0000] <annevk>
if that's what's required we'll do that

[06:16:17.0000] <annevk>
currently we don't have that

[06:16:19.0000] <foolip>
Mr. Pragmatic :)

[06:17:07.0000] <foolip>
I know I don't want it, because I use both Hong Kong and Taiwan sites with an English locale...

[06:18:49.0000] <annevk>
it sounds pretty sucky indeed

[06:19:01.0000] <annevk>
but we already have local-dependent defaults

[06:20:06.0000] <kennyluck>
Yeah, i am pretty sure what they (Yuan and Timothy) want is what I said: "big5"="big5-uao" for zh-TW browsers.

[06:24:40.0000] <kennyluck>
foolip, ok,  so in case you are interested. PTT has a UTF-8 gateway "ssh bbsu⊙pc", which transcodes the content correctly for the page I gave you. This means that changing http://www.ptt.cc/ shouldn't be very hard *in theory*.

[06:26:07.0000] <kennyluck>
But really, I think the best way to make progress on this is to consult MS people working in Taiwan. They probably understand the problem better, esp. why they don't try to stop the grassroot big5-uao effort...

[06:34:49.0000] <annevk>
I reached out to their encoding expert, but he couldn't offer much help

[06:35:05.0000] <annevk>
kennyluck: see http://lists.w3.org/Archives/Public/www-archive/2012Mar/thread.html#msg46

[06:38:32.0000] <kennyluck>
annevk, foolip, hold on. I need to understand this a bit more. When you say IE treat 'big5'='big5-hkscs'. Do they render the Kanas or not? (Kanas are not rendered correctly in by Win7 Laptop, I wonder if this is locale-dependent.)

[06:39:04.0000] <foolip>
kennyluck, they have a single mapping that uses PUA, what it renders like really depends on the installed fonts

[06:39:19.0000] <annevk>
for windows-874 Chrome maps fullwidth ASCII back to ASCII, for windows-1252 they don't

[06:39:37.0000] <foolip>
even though the MingLiu_HKSCS font comes with Win7 by default, I'm not sure if it's used by IE

[06:40:22.0000] <kennyluck>
foolip, OK. now I see why people want to install the big5-uao package.

[06:41:12.0000] <foolip>
I think that a lot of these pages don't render correctly in most browsers, but we want a proper mapping to Unicode to make them work as well as they can...

[06:41:35.0000] <kennyluck>
Is there a similar package that does the *correct big5-hkscs* which doesn't map to PUA (HK-2008?)

[06:43:18.0000] <foolip>
kennyluck, Microsoft has stopped providing the hacked code page and just ship MingLiu_HKSCS with Win7, but I'm not exactly sure if any special steps are needed to make IE use it

[06:43:32.0000] <foolip>
A Hong Kong user would probably know.

[06:44:39.0000] <kennyluck>
foolip, yeah. I mean, as a normal user, I would be happy to learn something simple just to turn the Kanas on instead of the 18 steps 'big5-uao'.

[06:55:39.0000] <kennyluck>
Or I have the feeling that fixing this part of evangelism might be just too difficult. I wonder how bad it is if we just do locale-dependent 'big5'='big5-uao'. If we don't fix the whole thing, we'll just go into a suboptimal that "いま俺の顔生涯最高にキモい自信がある" (uao) is rendered as  "いま俺の𡟺生涯最高にキモい自信がある" (hkscs)

[06:56:46.0000] <annevk>
unless special fonts are used big5-uao is already broken in Chrome

[06:56:50.0000] <annevk>
and Internet Explorer

[06:57:03.0000] <annevk>
combined they have about 80% of the Taiwan market

[06:57:39.0000] <annevk>
Chrome about 15%

[06:57:46.0000] <annevk>
Firefox 10% last I looked

[06:58:02.0000] <annevk>
and Chrome does not use the table from Windows

[06:58:31.0000] <foolip>
kennyluck, the question is really if that page already works for a majority of Taiwan users. If it only works in Firefox, I'm not sure we should introduce locale-dependent mappings in order to fix it

[06:59:39.0000] <annevk>
yeah, it seems better that all browsers break it so that other pages become less broken and there's an incentive to fix the content

[07:00:10.0000] <foolip>
does anyone have a good source for the top million sites or something that I can scrape for taiwanese sites?

[07:00:39.0000] <foolip>
My hunch is that even in Taiwan, using the big5-hkscs mapping will be correct more often.

[07:01:54.0000] <annevk>
there's http://s3.amazonaws.com/alexa-static/top-1m.csv.zip but it's only front pages

[07:02:15.0000] <kennyluck>
I fear that it's not just the content that's broken. The fact that we still see pages educating people to install the big5-uao package is not neglectable.

[07:03:50.0000] <foolip>
kennyluck, I guess all we can do right now is speculate on how big the problem is. I'll try to get some kind of random scrape of the Taiwan Web...

[07:03:53.0000] <kennyluck>
foolip, I don't even find a clue on how to turn on big5-hkscs in IE as 'big5'. How could that be true?

[07:04:14.0000] <foolip>
kennyluck, it's always the case, big5 always maps to the same PUA code points

[07:04:42.0000] <foolip>
and the MingLiu_HKSCS font shipped with Win7 has glyphs for those code points

[07:05:02.0000] <foolip>
I don't know what font you need to make those PUA code points match Big5-UAO

[07:05:17.0000] <annevk>
kennyluck: I just read that article, did you see how in the end it says in Chrome you should simply select the big5-hkscs override?

[07:05:57.0000] <annevk>
kennyluck: and that it's pretty much only written for PTT

[07:06:44.0000] <kennyluck>
I need to go back to that page again...

[07:06:48.0000] <annevk>
so if even the Taiwanese suggest big5-hkscs in Chrome, it seems like using that by default would be an improvement

[07:06:57.0000] <annevk>
here is the URL http://www.techbang.com/posts/3350-let-win7-perfect-display-japanese-web-page

[07:08:04.0000] <hsivonen>
so sad that PUA is used for de facto standardization

[07:08:20.0000] <hsivonen>
not surprising of course

[07:08:46.0000] <foolip>
hsivonen, killing it for Big5 looks in the real of the possible, fortunately

[07:09:05.0000] <hsivonen>
PUA is the vendor prefixes of Unicode

[07:09:41.0000] <foolip>
yay, http://s3.amazonaws.com/alexa-static/top-1m.csv.zip has 2930 .tw domains

[07:10:33.0000] <zcorpan>
now do a site: search for each domain to get the top n pages of each domain :-)

[07:11:05.0000] <foolip>
zcorpan, can that be automated?

[07:11:42.0000] <zcorpan>
dunno, i guess most search engines have anti-DOS measures

[07:11:59.0000] <foolip>
obviously, ptt.cc is not on the list of top .tw sites, but I don't know how else to make a list like this :/

[07:12:40.0000] <zcorpan>
hmm, don't some search engines have a feature to search for pages in a particular language?

[07:12:59.0000] <foolip>
I would love a proxy server that saved all requests to disk so I could just let my web browser visit these pages, follow a few links, and then I have the pages to analyze on disk...

[07:17:23.0000] <Philip`>
zcorpan: Pick a common word in that language and then search for it?

[07:21:46.0000] <annevk>
weehee, all encoders are slightly different

[07:22:42.0000] <annevk>
^^ sarcastic

[07:28:59.0000] <hsivonen>
looks like Qt got memes before Opera or IE: http://qtmemes.tumblr.com/

[07:30:42.0000] <Philip`>
It seems to be getting quite metamemetic

[07:30:47.0000] <zcorpan>
well that'll be today's quirk testing

[07:31:48.0000] <annevk>
Opera: [red penguin] Follows standards. [blue pinguin] Alone.

[07:33:01.0000] <kennyluck>
foolip, so this is what I think as a user. 1) I open http://www.toysdaily.com/discuz/forum-24-2.html 2) I can't see the Kana presumably because of reasons related to fonts 3) I happen to know and only know 'big5-uao' as the way to turn Kana on 4) I start outputting Japanese content because I can read it now 5) I now output 'big5-uao'.

[07:33:10.0000] <Ms2ger>
http://qtmemes.tumblr.com/post/20183979051/we-have-qtwebkit-that-means-we-count-right

[07:33:21.0000] <kennyluck>
So yeah, intercepting 2) seems workable, but it really depends on IE.

[07:34:01.0000] <kennyluck>
Otherwise, I would still be tempted to install 'big5-uao' and then create incompatible content.

[07:35:30.0000] <annevk>
you cannot output big5-uao in Gecko I think

[07:35:39.0000] <annevk>
their encoder is restricted

[07:35:46.0000] <kennyluck>
annevk, ah. Good point.

[07:41:57.0000] <annevk>
also, Chrome users are apparently advised to just use big5-hkscs

[07:42:02.0000] <annevk>
Firefox users are not mentioned...

[07:45:24.0000] <kennyluck>
annevk, in any case I agree that expanding big5 to big5-hkscs or the intersection of big5-hkscs and big5-uao is making good progress, but I am not sure if it's optimal.

[07:47:28.0000] <annevk>
foolip: did you look at "firefox" vs "firefox-hk"?

[07:47:35.0000] <annevk>
foolip: ignoring PUA

[07:47:56.0000] <smaug____>
rniwa: ping

[07:48:04.0000] <smaug____>
rniwa: where should I send comments about undomanager

[07:48:39.0000] <annevk>
whatwg⊙wo has been used thus far

[07:49:24.0000] <kennyluck>
(re. you cannot output big5-uao in Gecko I think) But I might still output 'big5-uao' from IE. I think the extended mapping installed by the package isn't unidirectional like Gecko, but I am not very sure.

[07:50:00.0000] <annevk>
oh yeah, with that package IE can do damage

[07:55:16.0000] <annevk>
I guess we should figure out a) what's incompatible between hkscs and uao and b) how widespread uao is.

[07:58:52.0000] <annevk>
but not today, I have some things to do

[08:05:57.0000] <gsnedders>
hsivonen: I wonder how much would break moving away from the PUA for Big5.

[08:24:11.0000] <annevk>
gsnedders: everything that would break would already be broken in Opera; and the pages we looked at would work better with hkscs

[10:01:56.0000] <jsbell_>
http://www.corp.google.com/~jsbell/rampart - added left/right mouse click to place/rotate (in addition to space/control); added territory capture. (algorithm requires you can't surround the "seed" location, hence bisecting water)

[10:02:08.0000] <jsbell_>
Whoops, that would be the wrong channel

[10:03:52.0000] <jsbell>
(curses, our team's top secret plans to dominate the world via an obsession with an obscure 90's arcade game have been leaked)

[10:16:29.0000] <[tm]>
jsbell: 'you can't surround the "seed" location, hence bisecting water'

[10:17:25.0000] <[tm]>
I'm pretty sure you stole that from a Wallace Stevens poem

[10:18:43.0000] <jsbell>
heh

[10:29:21.0000] <rniwa>
smaug____: hi, i just replied to your message

[10:29:29.0000] <rniwa>
smaug____: sorry, I forgot to close my IRC client :\

[10:30:12.0000] <smaug____>
rniwa: thanks. It was just a first quick read-through

[10:33:07.0000] <rniwa>
smaug____: btw, since i've started hosting it on w3c repository, it might make sense for us to make public-webapps the place for discussion

[10:33:17.0000] <rniwa>
AryehGregor: what do you think?

[10:33:38.0000] <rniwa>
sadly, nobody had replied to my email about chartering undomanager in the editing community

[10:33:42.0000] <rniwa>
so not sure what's happening there

[10:33:48.0000] <rniwa>
but...

[10:34:28.0000] <smaug____>
rniwa: yeah, webapps should be ok

[10:34:33.0000] <Ms2ger>
rniwa, as long as you don't make it public-html :)

[10:34:49.0000] <smaug____>
(If I could get File system out from webapps, and undomanager in...)

[10:35:08.0000] <Ms2ger>
Did you comment on the charter? :)

[10:35:47.0000] <smaug____>
oh, yes, if the discussion happened in public-html, I would promise to not send any comments :)

[10:41:49.0000] <rniwa>
Ms2ger: I thought I did but maybe I didn't use that particular word or wasn't clear about it :\

[10:42:08.0000] <Ms2ger>
rniwa, hmm?

[10:43:13.0000] <smaug____>
rniwa: so, input element and textarea could just always have undomanager

[10:44:33.0000] <smaug____>
rniwa: DOMTransactionEvent doesn't really make it more undo related...

[10:44:43.0000] <rniwa>
smaug____: i know.

[10:45:01.0000] <rniwa>
smaug____: we should rename it to something like UndoRedoEvent

[10:45:06.0000] <smaug____>
rniwa: where is the event dispatched?

[10:45:13.0000] <smaug____>
to the Undomanager itself?

[10:45:19.0000] <smaug____>
or to the element?

[10:45:31.0000] <rniwa>
smaug____: to the element

[10:45:43.0000] <smaug____>
hmm

[10:45:44.0000] <rniwa>
smaug____: "When the user agent is required to fire a DOM transaction event for a DOM transaction t at an undo scope host h, the user agent must run the following steps:"

[10:45:52.0000] <smaug____>
right

[10:45:53.0000] <rniwa>
smaug____: so that it can bubble

[10:46:17.0000] <smaug____>
why does it need to bubble?

[10:46:35.0000] <smaug____>
nm

[10:46:37.0000] <rniwa>
smaug____: so... an important use case is to do something in response to undo/redo

[10:46:40.0000] <smaug____>
yes, it should bubble

[10:46:51.0000] <rniwa>
smaug____: for that, you don't necessary want to attach event listeners on all elements with undoManager

[10:48:16.0000] <rniwa>
smaug____, Ms2ger: since you're already here... do you know if Mozilla imports W3C tests and create reference files for them?

[10:48:43.0000] <rniwa>
smaug____, Ms2ger: we want to import CSS test suite but don't want to add thousands of pixel results.

[10:49:00.0000] <Ms2ger>
I've written some for 2.1 a while back

[10:49:05.0000] <smaug____>
I don't know about css tests

[10:49:15.0000] <rniwa>
Ms2ger: oh yeah?

[10:49:24.0000] <rniwa>
Ms2ger: do you know where they're located?

[10:49:31.0000] <Ms2ger>
Boring ones, for padding, IIRC

[10:49:44.0000] <Ms2ger>
https://bitbucket.org/ms2ger/css-tests

[10:49:55.0000] <rniwa>
Ms2ger: if you already have reference files, ideally, we don't want to re-invent reference files ourselves

[10:50:07.0000] <rniwa>
since Mozilla folks surely have more experience writing reference files

[10:50:14.0000] <Ms2ger>
I need to figure out how to get them reviewed and into the WG's repo

[10:50:31.0000] <rniwa>
Ms2ger: oh, so they're not in Mozilla's repository?

[10:50:46.0000] <Ms2ger>
No

[10:50:56.0000] <rniwa>
okay. so i guess we have the same problem then.

[10:51:09.0000] <Ms2ger>
We don't import any non-reftest CSS tests, I don't think

[10:51:20.0000] <rniwa>
Ms2ger: okay. makes sense.

[10:51:26.0000] <smaug____>
/me tries to figure out some non-DB-related synonym for transaction

[10:51:51.0000] <rniwa>
smaug____: we use UndoStep internally in WebKit

[10:52:03.0000] <smaug____>
that sounds ok

[10:52:07.0000] <rniwa>
annevk: hi annevk

[10:52:09.0000] <smaug____>
in gecko we do use transactions

[10:52:21.0000] <smaug____>
rniwa: undomanager is TransactionManager

[10:52:38.0000] <rniwa>
smaug____: yeah, but it's getting quite confusing in the world where we have IDB's transaction :\

[10:53:03.0000] <rniwa>
smaug____: we could just throw in "undo" prefix as well

[10:53:07.0000] <smaug____>
yeah. undo/redo/undoupdated ...

[10:53:07.0000] <rniwa>
so like undo-transaction

[10:53:08.0000] <annevk>
rniwa: good evening

[10:53:39.0000] <rniwa>
annevk: does opera import CSS2.1 test suite as pixel tests? (i.e. generate images)?

[10:54:05.0000] <rniwa>
annevk: we want to import newer css test suite but we've realized that they don't have reference files

[10:54:17.0000] <rniwa>
and we don't really want to generate thousands of png files :(

[10:54:29.0000] <annevk>
yeah, I objected to the CSS WG doing that

[10:54:34.0000] <annevk>
and then the whole group got mad

[10:54:37.0000] <annevk>
and glazou blamed Opera

[10:54:51.0000] <annevk>
and then they went ahead with their pixel tests instead of doing the test suite right...

[10:54:57.0000] <rniwa>
annevk: :(

[10:55:04.0000] <annevk>
gsnedders prolly knows what we do internally

[10:55:23.0000] <rniwa>
annevk: what if we said we don't want to import tests that are not reftests?

[10:55:40.0000] <annevk>
I think TabAtkins actually said it didn't matter to Google

[10:55:42.0000] <rniwa>
/me wonders if webkit community's decision will have an impact on CSS WG

[10:55:49.0000] <annevk>
but that would be a wise change of position I think

[10:56:05.0000] <rniwa>
annevk: yeah, pixel results make very little sense

[10:56:07.0000] <Ms2ger>
rniwa, the policy for CSS3 is reftest-only, IIRC

[10:56:24.0000] <rniwa>
annevk: it incurs way too much maintenance cost.

[10:56:27.0000] <rniwa>
Ms2ger: good!

[10:56:39.0000] <annevk>
Microsoft didn't care, and Gecko/WebKit people were kind of holding back because glazou blew up

[10:56:39.0000] <rniwa>
TabAtkins: do you know the details?

[10:56:39.0000] <astearns>
Ms2ger: it's reftest or testharness.js now

[10:56:58.0000] <annevk>
astearns: sweet

[10:57:07.0000] <rniwa>
annevk: I see.

[10:57:34.0000] <rniwa>
Ms2ger, annevk: it might make sense for Gecko/WebKit people to push CSS WG to have reference files

[10:57:41.0000] <Ms2ger>
astearns, well, requiring reftests for JS tests would be silly

[10:58:01.0000] <rniwa>
since neither of us want to import tests that are not reftests

[10:58:18.0000] <astearns>
Ms2ger: more silly than not allowing JS tests at all

[10:58:21.0000] <rniwa>
Ms2ger: testharness.js aren't reftests, right?

[10:58:49.0000] <astearns>
rniwa: correct

[10:59:06.0000] <astearns>
rniwa: and we just checked in testharness.js support in WebKit

[11:01:16.0000] <Ms2ger>
And so did I for Gecko :)

[11:01:59.0000] <Ms2ger>
rniwa, I can't speak for Mozilla, and I barely do anything to do with CSS, but you have my vote :)

[11:07:58.0000] <gsnedders>
rniwa: We have it as screenshot tests, yes

[11:08:11.0000] <gsnedders>
rniwa: We've converted some to reftests, but not entirely

[11:08:28.0000] <gsnedders>
rniwa: Never submitted to the WG after it became kinda obvious the WG didn't want them lest it delay REC

[11:08:41.0000] <rniwa>
gsnedders: :(

[11:08:46.0000] <rniwa>
gsnedders: that's my fear was well.

[11:09:02.0000] <gsnedders>
rniwa: The policy for CSS3 is reftest only, pretty much

[11:09:06.0000] <rniwa>
gsnedders: it seems like they won't accept our patches to add reference files even if we submitted them

[11:09:20.0000] <rniwa>
gsnedders: do you have your reference files publicly available somewhere?

[11:09:31.0000] <gsnedders>
rniwa: You can try, and argue that these tests will likely become part of CSS3 module test suites

[11:09:52.0000] <gsnedders>
rniwa: I don't think so.

[11:10:31.0000] <Ms2ger>
Now that 2.1 is a rec, I guess we can get them in

[11:10:38.0000] <gsnedders>
rniwa: But group the tests by their screenshot, and you realize CSS 2.1 test suite is in large part identical references.

[11:10:53.0000] <Ms2ger>
(Some of the refs in my repo are gsnedders's, I should note)

[11:10:55.0000] <gsnedders>
Ms2ger: Yeah, I guess, but I've moved on from caring about it now.

[11:11:19.0000] <gsnedders>
I've argued for this before, and I can't be fucked fighting to get them in.

[11:11:31.0000] <Ms2ger>
Anyway, if the WG doesn't want them, I'd prefer a shared fork, though

[11:11:48.0000] <rniwa>
Ms2ger: yeah, that's what i'm getting at

[11:12:02.0000] <rniwa>
Ms2ger: there's no point for each of us to re-do all the work

[11:12:07.0000] <gsnedders>
If you don't want to take the work that people have done, even though your requirements insist on them in future, then that's your own damned problem.

[11:12:10.0000] <rniwa>
Ms2ger: if we can just share the results

[11:12:21.0000] <gsnedders>
rniwa: That's the exact argument I made to the mailing list two years ago.

[11:12:27.0000] <gsnedders>
Nobody cared.

[11:12:29.0000] <gsnedders>
Literally.

[11:12:29.0000] <rniwa>
gsnedders: :(

[11:12:41.0000] <rniwa>
gsnedders: that's astoundingly annoying

[11:12:44.0000] <gsnedders>
Not even Mozilla people, who were the only others at the time to have a running reftest system.

[11:13:03.0000] <gsnedders>
WebKit people were inteested, but mainly in an in-the-future way.

[11:13:18.0000] <rniwa>
gsnedders: it's possible that future has come :D

[11:13:28.0000] <rniwa>
gsnedders: since we DO support reftests now

[11:13:38.0000] <astearns>
the future is here! rniwa has added support for reftests :)

[11:13:49.0000] <gsnedders>
Some of my refs may well assume 96dpi on tests that shouldn't.

[11:13:57.0000] <gsnedders>
astearns: Yeah, I'm well aware. :)

[11:14:09.0000] <rniwa>
gsnedders, astearns: we've had our own support for reftests, but we only added the support for W3C style reftests last winter

[11:14:29.0000] <gsnedders>
rniwa: Search for emails from me to public-css-testsuite and w3c-css-wg if you want the background

[11:14:39.0000] <rniwa>
gsnedders: okay.

[11:14:39.0000] <gsnedders>
rniwa: Yeah, you didn't even have that when I was working on this :)

[11:15:11.0000] <rniwa>
gsnedders, Ms2ger: anyway, it'll be great if we could share reference files even if W3C doesn't accept them

[11:15:43.0000] <rniwa>
gsnedders, Ms2ger: for webkit, I want to make sure we don't invent our own reference files that don't adequately exercise tests

[11:15:45.0000] <gsnedders>
rniwa: https://lists.w3.org/Archives/Member/w3c-css-wg/2010JulSep/0222.html is where I gave up

[11:15:50.0000] <gsnedders>
(Member only, etc)

[11:15:57.0000] <rniwa>
gsnedders: oh... it's member only

[11:16:28.0000] <rniwa>
gsnedders: i hear member-only mailing lists are terrible places to live in

[11:17:10.0000] <Ms2ger>
I hear some people are more polite if their emails are archived in public

[11:18:09.0000] <jamesr>
i hear some people are more polite if they aren't glazou

[11:18:19.0000] <Ms2ger>
No comment

[11:18:46.0000] <gsnedders>
rniwa: I may have sent some to public-css-testsuite

[11:19:17.0000] <gsnedders>
(chaals's response to that email is the truth, for those of you who can read them)

[11:19:25.0000] <gsnedders>
(references, that is)

[11:19:26.0000] <Ms2ger>
rniwa, I'm happy to help out writing some references, btw, but you'll probably have to poke me :)

[11:20:43.0000] <gsnedders>
rniwa: http://lists.w3.org/Archives/Public/public-css-testsuite/2010Sep/0030.html

[11:20:53.0000] <gsnedders>
"Attached is a diff to convert 830 tests to reftests (with a mere four

[11:20:54.0000] <gsnedders>
references!)."

[11:21:06.0000] <rniwa>
gsnedders: thanks!

[11:21:24.0000] <rniwa>
gsnedders, Ms2ger: I'll probably post something back on webkit-dev about this if you guys don't mind

[11:21:31.0000] <gsnedders>
The whole situation was ridiculous, really.

[11:21:36.0000] <rniwa>
we're having a big debate on how to import css tests

[11:21:50.0000] <gsnedders>
rniwa: tl;dr of the debate?

[11:21:52.0000] <Ms2ger>
rniwa, gsnedders, those are in my repo too

[11:21:54.0000] <rniwa>
and this reftest vs. pixel test thing is one major issue

[11:22:06.0000] <rniwa>
Ms2ger, gsnedders: so... we want to import tests as reftests

[11:22:31.0000] <gsnedders>
You don't want to go through all 10k tests and label them as pass or fail (or in your case, pass or xfail).

[11:22:33.0000] <rniwa>
but some of us (mainly me) don't want to invent our own reference files because there is a chance that our own reference files don't exercise the tests adaquately

[11:22:56.0000] <Ms2ger>
rniwa, isn't http://28.media.tumblr.com/tumblr_m284vvtgQT1rqvy12o1_1280.jpg argument enough in favour of reftests? :)

[11:23:02.0000] <rniwa>
e.g. there could be a bug that affects both the test and the reference file same way and end up hiding the bug

[11:23:06.0000] <gsnedders>
/me may have borrowed summer interns for a day to label them

[11:24:32.0000] <annevk>
Ms2ger: brilliant

[11:24:36.0000] <Ms2ger>
Note to self: don't do internship at Opera the summer after MS dumps its tests

[11:24:51.0000] <Ms2ger>
Also: http://28.media.tumblr.com/tumblr_m1yh3dbdHf1rqvy12o1_r1_1280.jpg

[11:24:57.0000] <gsnedders>
Ms2ger: Heh, we're almost certainly never going to bring in a large dump of screenshot-based tests ever again

[11:27:06.0000] <matjas>
could some of you take a look at https://bugs.ecmascript.org/show_bug.cgi?id=277#c2? /cc zcorpan

[11:27:45.0000] <matjas>
IIRC all browsers except Firefox respect http://wiki.whatwg.org/wiki/Web_ECMAScript#Identifiers but it’s been a while since I tested

[11:27:47.0000] <Ms2ger>
v\u0061r x = 0

[11:27:50.0000] <Ms2ger>
Orly

[11:28:15.0000] <smaug____>
Ms2ger: that is good one

[11:28:17.0000] <gsnedders>
/me cringes at the thought of all that

[11:28:35.0000] <rniwa>
/me goes to his office

[11:28:47.0000] <Ms2ger>
matjas, unsurprisingly, Allen wasn't too happy to see you mention that :)

[11:29:27.0000] <matjas>
hey, I never said this should become part of ECMAScript

[11:29:45.0000] <matjas>
just how most browsers seem to do it

[11:30:22.0000] <gsnedders>
matjas: Then that's not relevant for es-discuss :P

[11:32:23.0000] <matjas>
I just mentioned it casually :) It was a Spidermonkey-specific thread anyway (as no other browser allows `function function() {}` etc.)

[11:32:33.0000] <matjas>
/me nerdrages

[11:32:57.0000] <gsnedders>
jgraham: Any idea whether you found the identifier nonsense needed for web compat?

[11:37:39.0000] <matjas>
var tru\u0065; /* "Expected identifier" error in IE9 */ console.log(fals\u0065) /* "Syntax error" in IE9 */

[11:37:46.0000] <matjas>
so Fx and IE agree

[11:53:39.0000] <Ms2ger>
Looks like pointer lock landed in Gecko

[11:58:20.0000] <smaug____>
yup

[12:38:59.0000] <Hixie>
abarth: any movement on http://www.w3.org/2011/webappsec/track/issues/6 ?

[12:39:35.0000] <abarth>
Hixie: we talked about it in the telecon yesterday

[12:39:52.0000] <Hixie>
so i should still do the refactoring?

[12:39:55.0000] <abarth>
as far as I can tell, everyone wants it, but moz hasn't implemented it and is trying to block the spec from progressing until they finish

[12:39:56.0000] <Hixie>
just making sure :-)

[12:40:07.0000] <Hixie>
abarth: ok so my plan with sandbox flags is as follows:

[12:40:42.0000] <Hixie>
- make it so that browsing contexts have the set of flags

[12:41:07.0000] <Hixie>
- make it so that documents have two copies of the set of flags: one called something like "the CSP flags" and one called the "effective flags"

[12:41:35.0000] <Hixie>
the effective flags is the boolean-or of the flags from the CSP flags, the browsing context flags, and all ancestor browsing context flags

[12:41:48.0000] <Hixie>
hm no that doesn't work

[12:41:56.0000] <Hixie>
csp needs to also affect decendant browsing contexts

[12:41:58.0000] <Hixie>
let me try again

[12:42:00.0000] <Hixie>
plan:

[12:42:58.0000] <Hixie>
hmm

[12:43:21.0000] <Hixie>
the basic idea is i move the real set of flags to Document

[12:43:28.0000] <Hixie>
so all the security checks use that

[12:43:35.0000] <Hixie>
and those are set by being fed from the various other sources

[12:43:44.0000] <Hixie>
CSP, containing <iframe>, and ancestor documents

[12:44:02.0000] <Hixie>
ok there we go, that's how we do it

[12:44:18.0000] <Ms2ger>
Die, IDBDatabaseException and IDBDatabaseException, die

[12:44:26.0000] <Hixie>
abarth: does that work for you?

[12:44:54.0000] <abarth>
(Sorry, I was replying to ojan on the list.  reading now)

[12:45:29.0000] <Hixie>
no worries

[12:45:39.0000] <abarth>
yes

[12:45:49.0000] <abarth>
that works exactly the same was as the code

[12:46:06.0000] <Hixie>
excellent

[12:46:07.0000] <Hixie>
ok

[12:46:09.0000] <Hixie>
that should be easy to spec

[12:46:10.0000] <abarth>
when the document is created, it boolean-ors together a bunch of sandbox flags from various sources

[12:46:13.0000] <Ms2ger>
Also, getting script crossorigin specced would be nice

[12:46:15.0000] <Hixie>
(though confusing for people to read)

[12:46:16.0000] <abarth>
it seems pretty clean

[12:47:02.0000] <Hixie>
yeah it's just confusing because in specs it's hard to make multiple copies of the same thing understandable

[12:47:07.0000] <Hixie>
much easier to do in code

[12:47:58.0000] <annevk>
Ms2ger: indexed DB, the slightly better DB (but is it really?), with lots of minor API issues

[12:48:17.0000] <Ms2ger>
annevk, hmm?

[12:49:18.0000] <annevk>
geez, BlobBuilder is still around

[12:49:34.0000] <annevk>
!summon arun

[12:50:38.0000] <Ms2ger>
Is that in HG already?

[12:51:43.0000] <annevk>
oh it's not Arun

[12:51:48.0000] <annevk>
it's from Eric

[12:51:50.0000] <annevk>
http://dev.w3.org/2009/dap/file-system/file-writer.html

[12:52:09.0000] <annevk>
but I guess the idea was that it was going to http://dev.w3.org/2006/webapi/FileAPI/

[12:52:28.0000] <annevk>
which has a constructor defined

[12:52:48.0000] <Ms2ger>
Ah, /dap/

[13:10:25.0000] <jgraham>
gsnedders: No idea

[13:12:59.0000] <jgraham>
rniwa: If you never learn anything else from Opera, learn that pixel based testing is a special form of hell

[13:13:16.0000] <rniwa>
jgraham: we also do have pixel tests :)

[13:13:27.0000] <rniwa>
jgraham: i know it's hard to maintain and all

[13:13:31.0000] <jgraham>
Probably not in the same way we do :)

[13:13:35.0000] <rniwa>
jgraham: but reftests have its own faults :\

[13:13:41.0000] <rniwa>
jgraham: okay.

[13:13:51.0000] <rniwa>
jgraham: we have pixel results for each port + platform though

[13:14:02.0000] <rniwa>
jgraham: so we have something like 6-8 PNGs per test :(

[13:14:40.0000] <Ms2ger>
rniwa, I think Opera has more platforms to test :)

[13:14:49.0000] <jgraham>
We have a flexible system that allows an arbitary number of results per test :)

[13:15:24.0000] <rniwa>
Ms2ger, jgraham: http://trac.webkit.org/browser/trunk/LayoutTests/platform/

[13:15:36.0000] <Ms2ger>
Oh, I know

[13:15:41.0000] <rniwa>
Ms2ger, jgraham: each one of them will have the same dir. structure as http://trac.webkit.org/browser/trunk/LayoutTests/

[13:15:48.0000] <rniwa>
(except platform of course)

[13:16:00.0000] <rniwa>
and contains -expected.png and/or -expected.txt

[13:19:59.0000] <jgraham>
rniwa: I don't really understand the concern about not making "good enough" references

[13:20:11.0000] <jgraham>
What are you testing here (I didn't read all the backscroll)

[13:21:00.0000] <rniwa>
jgraham: so if we import a test from CSS test suite that doesn't have a reference

[13:21:08.0000] <rniwa>
jgraham: and create our own home-brew reference file

[13:21:22.0000] <rniwa>
jgraham: then there's a possibility that the reference file doesn't address all intents of the test

[13:21:37.0000] <rniwa>
jgraham: i.e. it could fail to detect some bugs that the test author intended to test

[13:31:18.0000] <rniwa>
jgraham: to be honest with you, i'm not even sure if this is a practical concern or not.

[13:31:35.0000] <rniwa>
jgraham: we simply lack adequate experience with reftests

[13:32:09.0000] <Ms2ger>
Fwiw, fantasai would be very happy to accept references

[13:32:24.0000] <rniwa>
Ms2ger: for css 3?

[13:32:46.0000] <Ms2ger>
21

[13:32:54.0000] <TabAtkins>
For all.

[13:33:21.0000] <Ms2ger>
TabAtkins, also, I'm looking forward to you speccing ::first-letter :)

[13:33:42.0000] <TabAtkins>
Sigh.  I'll get there at some point.

[13:33:50.0000] <TabAtkins>
If fantasai doesn't beat me to it.

[13:34:17.0000] <Ms2ger>
* fantasai didn't want to touch pseudo elements

[13:34:22.0000] <rniwa>
Ms2ger: okay.

[13:34:26.0000] <Ms2ger>
I'm afraid you're out of luck on that count

[13:34:31.0000] <TabAtkins>
Damn.  All right.

[13:34:39.0000] <TabAtkins>
Well, I'll do Box Model at some point.

[13:34:46.0000] <TabAtkins>
I'm thinking end of year.

[13:34:50.0000] <rniwa>
Ms2ger, TabAtkins: can we convince CSS WG to convert the existing tests to reference tests?

[13:34:58.0000] <rniwa>
it's a no laughing matter for us

[13:35:14.0000] <TabAtkins>
rniwa: They don't need convincing, just manpower.

[13:35:18.0000] <Ms2ger>
I believe the open source answer to that is "patches accepted" :)

[13:35:21.0000] <TabAtkins>
We *hate* our existing non-reftests.

[13:35:24.0000] <rniwa>
because we don't want to add a couple thousand * 8-10 PNG files to our repository

[13:35:48.0000] <rniwa>
TabAtkins: but we've already had a proposal: http://lists.w3.org/Archives/Public/public-css-testsuite/2010Sep/0030.html

[13:35:55.0000] <rniwa>
TabAtkins: why did we not do this back then?

[13:36:04.0000] <Ms2ger>
"It would delay REC"

[13:36:22.0000] <rniwa>
Ms2ger: so since it's it's already REC'ed, its okay to change it now?

[13:36:34.0000] <TabAtkins>
rniwa: I presume Ms2ger is right.

[13:36:45.0000] <TabAtkins>
And yes, now that 2.1 is back into errata mode, just poke at it again.

[13:36:50.0000] <Ms2ger>
Unless Microsoft invents a new objection

[13:39:10.0000] <Ms2ger>
Anyway, off for today

[13:39:43.0000] <rniwa>
Ms2ger: LOL

[13:39:46.0000] <rniwa>
Ms2ger: hopefully not.

[13:40:05.0000] <rniwa>
TabAtkins: okay, let's do that.

[13:40:14.0000] <rniwa>
TabAtkins: it's totally worthwhile our time.

[13:40:22.0000] <rniwa>
TabAtkins: since Ms2ger and others already have reference files!

[13:40:39.0000] <Ms2ger>
Not a lot ;)

[13:45:01.0000] <jgraham>
rniwa: Mostly it doesn't seem like a real issue

[13:45:17.0000] <rniwa>
jgraham: WHAT IS?

[13:45:21.0000] <jgraham>
The only problem is cases where there are multiple possible acceptable renderings

[13:45:22.0000] <rniwa>
what is?*

[13:45:37.0000] <rniwa>
jgraham: I see. yeah, that'll be tricky i guess.

[13:45:41.0000] <jgraham>
The reference not capturing the full intent of the test

[13:45:48.0000] <TabAtkins>
Nah, you can provide tests with multiple acceptable refs.

[13:45:56.0000] <jgraham>
I mean you could have the same problem with a pixel reference

[13:46:10.0000] <jgraham>
TabAtkins: Depends how your test system is set up

[13:46:19.0000] <TabAtkins>
Shepherd is set up to allow that.

[13:46:29.0000] <TabAtkins>
Since we're discussing CSS tests. ^_^

[13:46:31.0000] <jgraham>
The Opera system doesn't cope with that at the moment

[13:46:38.0000] <jgraham>
Shepard is irrelevant

[13:46:43.0000] <jgraham>
(sorry peter)

[13:47:24.0000] <TabAtkins>
Is it Shepard or Shepherd?

[13:47:26.0000] <jgraham>
Specifically it's irrelevant to browser vendors who all have home-grown testing solutions designed to meet the requirements of running tests every day

[13:47:32.0000] <jgraham>
Ho you were right

[13:47:38.0000] <rniwa>
jgraham: I'd appreciate it if you could give us some insights into pros and cons of reftests

[13:47:40.0000] <jgraham>
I just can't spell and can't type

[13:47:48.0000] <jgraham>
so I have errors**2

[13:48:00.0000] <rniwa>
jgraham: in general, we totally lack any sort of expertise working with ref tests

[13:48:09.0000] <rniwa>
since we hadn't had support 'til very recently

[13:48:21.0000] <rniwa>
and even today, people don't write as much ref tests as they should

[13:49:53.0000] <jgraham>
rniwa: Pros - They don't require changes when you do things like add a new platform or change your text rendering in some way

[13:50:10.0000] <jgraham>
Cons - it can be more effort to think of a good reference

[13:50:52.0000] <jgraham>
Sometimes the ref and test can match for the wrong reasons (but it is usually possible to catch this either with a single pixel based test or a well chosen negative ref)

[13:51:02.0000] <jgraham>
(e.g. both could be blank)

[13:51:19.0000] <jgraham>
The pros massively outweigh the cons (at least for us)

[13:52:15.0000] <rniwa>
jgraham: ok.

[13:52:25.0000] <rniwa>
jgraham: can I quote you on that?

[13:52:30.0000] <jgraham>
rniwa: Of course

[13:52:32.0000] <rniwa>
jgraham: (webkit-dev)

[13:52:41.0000] <rniwa>
jgraham: great. i might also cc you on the thread.

[13:52:56.0000] <rniwa>
webkit needs someone with reftest knowledge badly :(

[13:54:17.0000] <jgraham>
rniwa: For example we recently changed some of our font rendering bits and had to re-label 13,500 screenshots

[13:54:51.0000] <rniwa>
jgraham: LOL

[13:54:57.0000] <rniwa>
jgraham: yeah... we have a similar issue.

[13:54:57.0000] <jgraham>
Happily we had already converted 50% of all screenshot tests to reftests

[13:55:05.0000] <rniwa>
jgraham: that's very nice.

[13:55:21.0000] <rniwa>
jgraham: we definitely need to do that for some of our regression tests

[13:55:27.0000] <jgraham>
Yeah, 25,000 tests wouldn't have been better :)

[13:58:58.0000] <rniwa>
jgraham: right...

[13:59:13.0000] <rniwa>
jgraham: although i think a good portion of our tests are js tests (i.e. text based)

[13:59:26.0000] <rniwa>
jgraham: so i think we have something like 10,000-15,000 pixel texts

[13:59:36.0000] <annevk>
rniwa: "Daniel Glazman from Opera has tried adding reference files for W3C's:" euh, that was Geoffrey Sneddon ;)

[13:59:45.0000] <rniwa>
annevk: oh oops :(

[13:59:51.0000] <rniwa>
annevk: will post the correction

[14:00:43.0000] <annevk>
rniwa: also, I hope you succeed!

[14:00:54.0000] <rniwa>
annevk: sorry about that :(

[14:01:05.0000] <jgraham>
rniwa: Yes, most of our tests are js-based these days

[14:01:12.0000] <rniwa>
annevk: i lost my IRC history prior to writing that email

[14:01:21.0000] <rniwa>
jgraham: yeah js-based tests are nice :D

[14:01:34.0000] <rniwa>
unless you introduce weird js regressions :(

[14:01:41.0000] <jgraham>
Overwhhelmingly so if you go per-result rather than per-file (screenshot/reftests return 1 result per file, js tests typically many)

[14:05:02.0000] <rniwa>
jgraham, annevk: posted correction :)

[14:06:12.0000] <rniwa>
jgraham: Thanks for the input. I really appreciate it.

[14:06:49.0000] <rniwa>
jgraham, annevk, TabAtkins: i think we should really posh the CSS WG to start accepting more reference files.

[14:06:57.0000] <rniwa>
FWIW, we already have some reference files

[14:07:05.0000] <rniwa>
and we're talking about creating one for each file we import

[14:07:17.0000] <rniwa>
so WebKit community can contribute a bit in this area :)

[14:07:37.0000] <rniwa>
(of course, nothing is set in stone but things are looking good)

[14:07:55.0000] <jgraham>
rniwa: I think that the plan is for all CSS3 tests to be reftests

[14:08:09.0000] <jgraham>
Certainly I will be unhappy if Opera start contributing non-reftests

[14:08:10.0000] <rniwa>
jgraham: but we still need CSS 2.1 tests, right?

[14:08:30.0000] <rniwa>
jgraham: or is the plan to replace the existing tests by new ones?

[14:08:43.0000] <jgraham>
rniwa: Well in reality yes, in W3C land, no

[14:09:00.0000] <TabAtkins>
Ideally we'll replace all the existing W3C CSS2.1 tests with refs.

[14:09:03.0000] <jgraham>
(that was an answer to your first question)

[14:09:06.0000] <TabAtkins>
Or at least, all the ones for which that is possible.

[14:09:18.0000] <rniwa>
TabAtkins: right. that's what we wanna do.

[14:09:33.0000] <rniwa>
jgraham: could you elaborate a little?

[14:09:43.0000] <rniwa>
jgraham: are you saying that people at CSS WG doesn't want to make any changes to CSS2.1?

[14:09:57.0000] <jgraham>
rniwa: We always need new tests that cover previously untested parts of a spec

[14:09:59.0000] <rniwa>
jgraham: or are they regarding CSS2.1 tests to be obsolete once CSS3 is REC'ed?

[14:10:05.0000] <rniwa>
jgraham: right.

[14:10:16.0000] <jgraham>
rniwa: But there is no Process requirement for further CSS 2.1 tests

[14:10:18.0000] <rniwa>
jgraham: but what about parts that are specified by the older spec?

[14:10:35.0000] <jgraham>
Since it is in Rec.

[14:10:44.0000] <jgraham>
(iirc)

[14:10:54.0000] <rniwa>
jgraham: so you're saying that W3C won't accept any changes?

[14:11:03.0000] <jgraham>
I think they likely will

[14:11:15.0000] <rniwa>
jgraham: okay. so we can just do that, no?

[14:11:18.0000] <jgraham>
But there isn't a great deal of motivation for people to do the work

[14:11:23.0000] <rniwa>
jgraham: I see.

[14:11:26.0000] <jgraham>
From the W3C side

[14:11:44.0000] <jgraham>
But TabAtkins will know more about the CSSWG

[14:12:02.0000] <rniwa>
jgraham: well, but i think we'll do the most of the work to create reference files though?

[14:12:08.0000] <rniwa>
jgraham: i guess W3C folks just need to review them

[14:12:29.0000] <jgraham>
Hopefully we can get ref equivalents to the existing tests, yes

[14:12:37.0000] <rniwa>
if you're saying that they're not willing to review those reference files, then that'll be a problem...

[14:12:47.0000] <TabAtkins>
Yes, the primary problem is having someone with the time and motivation to generate all the refs.

[14:13:00.0000] <rniwa>
but i'm hoping that if enough browser vendors show enough interests, we can convince the WG to spend some time on it

[14:13:08.0000] <rniwa>
TabAtkins: i think we're going to do it

[14:13:21.0000] <rniwa>
TabAtkins: at least that's what we've been discussing at webkit-dev

[14:13:29.0000] <rniwa>
TabAtkins: we're more concerned with how we upstream changes, etc...

[14:13:54.0000] <TabAtkins>
Cool.

[14:14:06.0000] <rniwa>
TabAtkins: I think everyone's agreeing that converting them on W3C repository is the best solution if we could do it without much overhead

[14:14:31.0000] <rniwa>
TabAtkins: althoug htere's some disagreement as to whether that should happen before or after we import tests in webkit

[14:28:19.0000] <jgraham>
rniwa: (my message to webkit-dev bounced since I'm not subscribed)

[14:28:42.0000] <rniwa>
jgraham: oh oops.

[14:28:48.0000] <rniwa>
i think someone needs to approve it

[14:28:56.0000] <rniwa>
(unfortuantely i don't have a privilege to do it)

[14:36:15.0000] <rniwa>
jgraham: I've just forwarded your email instead.

[14:36:20.0000] <rniwa>
jgraham: thanks for the replay btw

[14:40:37.0000] <rniwa>
/me is thrilled about the prospect that we can make a big step forward here

[14:44:05.0000] <jgraham>
rniwa: Thanks


2012-04-13
[18:10:19.0000] <TabAtkins>
Hixie: Typo in the parser section "Preprocessing the input stream" -> "explicit ignored" should be "explicitly ignored".

[20:30:22.0000] <Hixie>
TabAtkins: unless it's an area i'm in the middle of editing, it's best to send that kind of feedback to the bug system by just pasting the offending text and saying "typo" in the feedback box

[20:30:33.0000] <Hixie>
TabAtkins: just as quick as IRC, but I won't lose track of it :-)

[22:36:37.0000] <Von_Davidicus>
Hello, all.

[22:47:51.0000] <annevk>
oh hey, it's Friday the 13th

[22:48:38.0000] <Von_Davidicus>
Hello, annevk.  May I get your opinion as to the accuracy of a statement I wanted to put into an essay?

[22:49:02.0000] <jwalden>
friday, friday, gotta get down on friday

[22:49:08.0000] <annevk>
where is Neil deGrasse Tyson to point out Thursday the 12th is just as rare

[22:49:17.0000] <annevk>
jwalden: heh

[22:49:56.0000] <Von_Davidicus>
The statement is:  "XHTML 2.0 was virtually booed off the web."

[22:50:01.0000] <annevk>
Von_Davidicus: XHTML 2.0 got some attention, but was mostly not adopted because it was not backwards compatible, and the breaking changes didn't bring enough benefit to be worth the enormous transition cost

[22:50:37.0000] <Von_Davidicus>
Oh, okay.  From what I read, it was virtually rejected en masse.

[22:50:50.0000] <Von_Davidicus>
So basically, my statement is way off base?

[22:51:10.0000] <annevk>
in the end people were pretty opposed, in the beginning even Hixie cheered that effort on

[22:52:48.0000] <annevk>
see e.g. http://ln.hixie.ch/?start=1042630901&count=1

[22:53:52.0000] <Hixie>
Von_Davidicus: what do you mean by "virtually" in that sentence?

[22:54:11.0000] <Hixie>
Von_Davidicus: really it wasn't that xhtml2 was rejected, so much as it had no adoption

[22:54:36.0000] <Hixie>
annevk: i was supportive of the xhtml2 wg even as it was being shut down

[22:54:53.0000] <annevk>
:)

[22:54:53.0000] <Hixie>
annevk: i just didn't think what they were doing was being adopted (or had much chance of being adopted) :-)

[22:55:30.0000] <Von_Davidicus>
I know there was a lot of what XHTML2 that I was looking forward to.  <li><a...><img...> condensed into <li>?  Yes please.

[22:57:22.0000] <Von_Davidicus>
And what I meant by "virtually" was that there were some dissenting voices, the concept remained, but the majority of the developers gave xHTML 2.0 the thumbs-down.

[22:57:32.0000] <annevk>
oh, Chrome will be the second browser with <input type=date>

[22:57:36.0000] <jwalden>
yeah, see, that's not *really* a tangible benefit :-) a little cleaner looking, but it doesn't give any new functionality

[22:57:37.0000] <annevk>
only six years after Opera

[22:57:44.0000] <Hixie>
screw type=date

[22:57:47.0000] <Hixie>
where's type=color!

[22:57:56.0000] <Hixie>
and when will firefox do type=range!

[22:58:04.0000] <Hixie>
also i really want more browsers to do <meter>

[22:58:11.0000] <jwalden>
people adopt stuff that gives them functionality, but a bit of change half for change's sake just doesn't do much for people when it comes to brass tacks

[22:58:19.0000] <annevk>
Gecko is doing B2G instead of WF2

[22:58:23.0000] <Hixie>
also, why are browsers being so slow to implement <dialog>

[22:58:26.0000] <Hixie>
it's been in the spec for DAYS

[22:58:37.0000] <annevk>
ok now you're getting silly :p

[22:58:40.0000] <Hixie>
B2G?

[22:58:56.0000] <jwalden>
clearly dialog needs to be talked up more

[22:58:59.0000] <annevk>
https://wiki.mozilla.org/B2G

[22:59:15.0000] <Hixie>
<dialog> is gonna be awesome

[22:59:17.0000] <jwalden>
/me isn't sure what the current state for web forms is these days

[22:59:26.0000] <jwalden>
(in Gecko)

[22:59:26.0000] <annevk>
https://wiki.mozilla.org/B2G/FAQ is better actually

[22:59:35.0000] <Hixie>
annevk: ah, right

[23:00:03.0000] <annevk>
searching for your old XHTML 2.0 post I also found this one: http://ln.hixie.ch/?start=1180683614&order=1

[23:00:09.0000] <annevk>
a nice reminder of the old days

[23:00:22.0000] <annevk>
report a serious implementation issue, no progress for years

[23:04:05.0000] <annevk>
"DOMException.code is deprecated per DOM4 spec." it isn't really...

[23:04:09.0000] <annevk>
I guess a little bit

[23:04:11.0000] <annevk>
oh well

[23:10:17.0000] <Von_Davidicus>
Question:  Do you think XHTML 2.0 would have gained more traction if IE hadn't been so slow in adopting XHTML in general?

[23:13:10.0000] <jwalden>
more, I think yes

[23:13:18.0000] <jwalden>
much more?  less likely

[23:15:19.0000] <Von_Davidicus>
I've read that it would have helped if XHTML2.0 had a different name.  I mean, WML got somewhere.

[23:17:12.0000] <Hixie>
Von_Davidicus: WML didn't get much of anywhere except on devices that didn't already support HTML (so where there was no backcompat issue)

[23:17:24.0000] <Hixie>
Von_Davidicus: and when compat with HTML became an issue, it died

[23:18:41.0000] <Hixie>
XHTML2's main problem was that it was trying to replace something with a massive installed base, without offering a commensurate advantage

[23:18:58.0000] <Hixie>
if XHTML2 had been amazing, it could have overcome its backcompat issue

[23:19:06.0000] <Hixie>
but it barely did anything more than HTML4

[23:19:16.0000] <Hixie>
so there really was no incentive to use it at all

[23:19:22.0000] <Von_Davidicus>
Oh, and Hixie... you mentioned in your blog you'd never found a use for the style="" attribute.  I DID have one, though circumstances changed and it was removed.

[23:20:38.0000] <Hixie>
what was it?

[23:21:53.0000] <Von_Davidicus>
I had a page demonstrating all named colours--specifically, a table with the name, the hex, rgb, and hsl codes, AND a cell at the end of the row with the colour in question as a background.  Since those were the only elements in the entire WEBSITE that used those styles, I decided it was better to simply use the style="" attribute than to go through creating 100+ rules, one for each of those table cells.

[23:23:16.0000] <Von_Davidicus>
Later on, though, I did a webpage on that same website describing CSS values--along with a list of CSS colour names.  Now that I had two elements on the website using each styling, I decided to move the contents of the style="" attributes over to a stylesheet.

[23:26:14.0000] <MikeSmith>
the many problems with XHTML2 start with the fact that from its TOC you can't even tell what new features it might be adding

[23:26:38.0000] <MikeSmith>
instead you see the word "Module" about 75 times

[23:26:45.0000] <Von_Davidicus>
*Nods.*

[23:27:10.0000] <annevk>
MikeSmith: you should tell Jeff about that

[23:27:17.0000] <annevk>
MikeSmith: he seems to think we should modularize again

[23:27:37.0000] <MikeSmith>
then when you explore those modules you start to see that it's all the same stuff that was in HTML4, except now it has Modules

[23:28:00.0000] <Von_Davidicus>
What was the whole idea behind Modularizing?

[23:29:14.0000] <MikeSmith>
then once you've wasted a bunch of time doing that exploration you get to realizing what Hixie said about "no commensurate advantage"

[23:29:37.0000] <MikeSmith>
Von_Davidicus: ask the people who were in the XHTML WG

[23:29:43.0000] <Hixie>
Von_Davidicus: sounds like what you had was a graphic, not something that HTML would be really best used for

[23:30:02.0000] <Hixie>
Von_Davidicus: consider, how would you read it to someone on the phone?

[23:31:17.0000] <MikeSmith>
annevk: I've tried at least to make it clear to the team that modularization is not a priority to the actual implementors the spec is intended for

[23:32:18.0000] <MikeSmith>
and that it even causes problems for end users

[23:33:19.0000] <Von_Davidicus>
Good question, Hixie, but it was more a spreadsheet than anything, and the last cell in that table was simply a sample of the colour.  May I send you a link to the page in question?

[23:34:11.0000] <MikeSmith>
witness the case of Microdata, where because of the way it's split out, you have the HTML5 spec specifying conformance restraints but needing to do it while pretending that Microdata doesn't exist, and the separate W3C Microdata spec needing to override that with the actual constraints

[23:34:47.0000] <MikeSmith>
but many people read just the constraints in the HTML5 spec but don't see the ones in the Microdata spec

[23:35:15.0000] <MikeSmith>
there have been several validator bugs filed about this already

[23:35:41.0000] <Hixie>
Von_Davidicus: i'm familiar with the kind of page you mean, it's ok

[23:35:53.0000] <Hixie>
Von_Davidicus: i think something like svg might be more appropriate for those though

[23:38:16.0000] <Von_Davidicus>
Not really.  I wanted as many browsers as possible to be able to read the website, and older versions of Internet Exploder tend to get their knickers in a knot when SVG is involved.

[23:40:29.0000] <Hixie>
Von_Davidicus: ah, well, if the use case is "support IE", then I agree there's plenty of reasons to use style=""

[23:40:34.0000] <Hixie>
and <table> for layout, for that matter

[23:40:37.0000] <Hixie>
especially older IEs

[23:40:39.0000] <Hixie>
:-)

[23:40:45.0000] <Hixie>
i was asking more on a theoretical level

[23:41:05.0000] <Von_Davidicus>
Well, in this case, I use <table> for a spreadsheet-style webpage.

[23:51:34.0000] <zcorpan>
argh... why do spec editors feel the urge to "deprecate" stuff instead of jumping directly to the desired outcome and remove altogether directly

[23:55:17.0000] <smaug____>
what is wrong with deprecation?

[23:55:33.0000] <smaug____>
it is a strong hint that the stuff will go away at point

[23:55:43.0000] <zcorpan>
it doesn't work on the web

[23:55:56.0000] <zcorpan>
authors don't care if things are deprecated

[23:56:00.0000] <zcorpan>
they use what works

[23:57:38.0000] <Hixie>
yeah if you can't remove it straight away, you'll probably never remove it

[23:59:12.0000] <zcorpan>
right

[23:59:25.0000] <Von_Davidicus>
Who uses <font> these days?

[23:59:33.0000] <nesta_>
good morning! :)

[00:00:08.0000] <Ms2ger>
jwalden, the status of WF2 is that volkmar works on B2G instead

[00:00:28.0000] <jwalden>
plausible

[00:00:44.0000] <jwalden>
I had thought there was one or so other person looking at it, tho

[00:01:20.0000] <Von_Davidicus>
Question:  Should one still test websites in the Lynx browser?

[00:01:25.0000] <Ms2ger>
And K9O isn't going to help

[00:02:19.0000] <jwalden>
Von_Davidicus: depends on your target audience

[00:02:32.0000] <jwalden>
/me has occasionally found it useful to browse sites with lynx

[00:03:10.0000] <jwalden>
but anyone who uses lynx to browse is a bit of an edge case, for most sites

[00:04:24.0000] <zcorpan>
Von_Davidicus: of 8915 front pages from the top 10,000 sites, i see 1850 pages using a <font> tag

[00:05:00.0000] <zcorpan>
data set http://www.paciellogroup.com/blog/2012/04/html5-accessibility-chops-data-for-the-masses/ $ grep -aPihrc "<font\s" .

[00:05:52.0000] <zcorpan>
so more than 20%

[00:05:53.0000] <Von_Davidicus>
Target:  Mostly farmers, some of whom might be using browsers old enough that CSS support is dodgy.

[00:06:10.0000] <zcorpan>
that's more than pages using the html5 doctype in this data set

[00:07:54.0000] <Von_Davidicus>
I created a webpage for my dad's business, and I tested it in Lynx.

[00:20:03.0000] <annevk>
zcorpan: you mean the BlobBuilder stuff?

[00:20:13.0000] <annevk>
zcorpan: I don't get that either, just nuke it from the draft alright

[00:20:42.0000] <annevk>
if it turns out we absolutely must support BlobBuilder we can always add it back in

[00:20:58.0000] <Von_Davidicus>
Sorry, what is BlobBuilder?

[00:21:24.0000] <Ms2ger>
Something that will die a painful death soon enough

[00:21:58.0000] <smaug____>
hopefully not painful

[00:22:51.0000] <zcorpan>
annevk: yeah, but i recall seeing the same behavior before (dunno what it was about then)

[00:25:59.0000] <annevk>
zcorpan: init*Event() perhaps

[00:26:08.0000] <annevk>
zcorpan: Travis thought we should deprecate it first...

[00:26:15.0000] <annevk>
so much nonsense

[00:36:57.0000] <volkmar>
Ms2ger: i might have some minions this summer to do forms stuff

[00:45:33.0000] <Ms2ger>
http://24.media.tumblr.com/tumblr_m2efjw7RN61rrf1eeo1_1280.jpg

[00:47:24.0000] <Von_Davidicus>
/me chuckles

[00:49:05.0000] <Von_Davidicus>
Oh, question:  Will HTML5 bring back <marquee> and <blink>?  * :D Ducks bricks. :D *

[00:50:13.0000] <Ms2ger>
Both are specified in the HTML spec

[00:50:37.0000] <Von_Davidicus>
seriously?

[00:50:51.0000] <Ms2ger>
Yes

[00:51:18.0000] <Von_Davidicus>
Oh, my goodness, there it is.  TLTAAAW...

[00:53:15.0000] <Von_Davidicus>
Oh, sorry, I should explain that abbreviation.  It stands for "The Looney Tunes Are Alive And Well"; it's a phrase some of my friends and I use when we try to make what we think is an utterly ridiculous statement--and discover it's perfectly true.

[00:58:22.0000] <zcorpan>
https://twitter.com/AskDotCom/status/190521773945667584 LOL

[02:13:31.0000] <annevk>
zcorpan: seems kind of a weird reply

[02:24:37.0000] <zcorpan>
"If a type that is not one of DOMString [WebIDL], ArrayBuffer [TypedArrays], or Blob is used as a blobParts member, the user agent MUST throw an InvalidStateError." http://dev.w3.org/2006/webapi/FileAPI/#dfn-Blob

[02:24:47.0000] <zcorpan>
doesn't webidl throw TypeError already in that case?

[02:24:58.0000] <zcorpan>
or convert?

[02:28:52.0000] <Ms2ger>
/me sighs

[02:36:39.0000] <Ms2ger>
zcorpan, converts to DOMString, yes

[02:37:59.0000] <Ms2ger>
/me sends email

[02:38:13.0000] <zcorpan>
i filed a bug

[02:38:18.0000] <Ms2ger>
wfm

[02:38:28.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16721

[02:42:31.0000] <annevk>
also, should we reconsider that constructor in light of ES6 changes?

[02:42:52.0000] <annevk>
a signature of (options, data...) prolly makes more sense

[02:43:36.0000] <zcorpan>
maybe, but not right now :-)

[02:45:36.0000] <hsivonen>
sigh. I'm looking at script data escaped less than sign state :-(

[02:45:47.0000] <hsivonen>
I didn't want to look here again

[02:46:30.0000] <zcorpan>
why are you looking at it?

[02:47:11.0000] <hsivonen>
zcorpan: crash in View Source

[02:47:20.0000] <zcorpan>
ah

[02:47:58.0000] <hsivonen>
you are in a maze of state transitions all alike

[02:49:34.0000] <zcorpan>
you are likely to be eaten by the W3C grue

[02:50:18.0000] <hsivonen>
smaug____ is going to have fun reviewing this

[02:55:23.0000] <annevk>
hsivonen: pointer to patch?

[02:55:26.0000] <annevk>
/me is curious

[02:56:22.0000] <zcorpan>
so do i understand correctly that new Blob("foo") is equivalent to new Blob(["f", "o", "o"]) per webidl?

[02:57:17.0000] <Ms2ger>
What makes you think that?

[02:57:46.0000] <zcorpan>
or is it equivalent to new Blob(["foo"])?

[02:57:57.0000] <Ms2ger>
It throws a TypeError

[02:58:43.0000] <zcorpan>
ah

[02:58:55.0000] <Ms2ger>
http://dev.w3.org/2006/webapi/WebIDL/#es-sequence

[03:00:08.0000] <zcorpan>
ok

[03:00:12.0000] <zcorpan>
cheers

[03:01:14.0000] <zcorpan>
new Blob(window) doesn't throw though, since it supports indexed properties :-)

[03:01:46.0000] <hsivonen>
annevk: patch not ready yet

[03:02:20.0000] <Ms2ger>
zcorpan, and it will append "[object Window]", "[object Window]", "[object Window]", ... ?

[03:02:35.0000] <zcorpan>
yeah

[03:02:48.0000] <zcorpan>
i'm totally gonna test that case

[03:02:54.0000] <Ms2ger>
Do it! :)

[03:07:04.0000] <zcorpan>
seems you can also overwrite the toStrings on the windows

[03:09:59.0000] <annevk>
zcorpan: if we don't change it now we can't change it in the future

[03:10:05.0000] <annevk>
and we'll make arv_afk sad

[03:10:37.0000] <zcorpan>
well, we don't support es6 today and i'm supposed to write tests for Blob today

[03:10:52.0000] <Ms2ger>
No more innerHTML? :(

[03:10:58.0000] <zcorpan>
not today

[03:11:36.0000] <zcorpan>
the impl for that is finished (should match the spec as it is, roughly)

[03:12:24.0000] <zcorpan>
hint: gecko and webkit don't match the spec

[03:12:34.0000] <zcorpan>
for innerHTML in xml that is

[03:13:18.0000] <Ms2ger>
Unsurprising

[03:13:32.0000] <Ms2ger>
We've got someone rewriting our innerHTML implementation soon, though

[03:14:21.0000] <hsivonen>
Ms2ger: for XML?

[03:15:00.0000] <hsivonen>
Ms2ger: I thought what was about to get rewritten is the innerHTML getter in the HTML mode

[03:15:03.0000] <Ms2ger>
Not clear from the bug

[03:15:24.0000] <zcorpan>
/me was talking about the setter

[03:15:57.0000] <hsivonen>
Ms2ger: it's a perf bug basically and XML perf doesn't matter

[03:16:26.0000] <Ms2ger>
:)

[03:16:55.0000] <Ms2ger>
zcorpan, including the silly thing with the foo-- element you showed earlier?

[03:17:11.0000] <hsivonen>
Ms2ger: the context is doing badly on some benchmark

[03:17:18.0000] <Ms2ger>
Yeah

[03:17:30.0000] <Ms2ger>
/me doesn't care about benchmarks much

[03:17:44.0000] <zcorpan>
Ms2ger: that too

[03:19:39.0000] <zcorpan>
but in particular, gecko and webkit don't pick up the prefix from the element when there's no ns decl

[03:19:55.0000] <zcorpan>
and gecko likes throwing weird exceptions and webkit likes returning null, or some such

[03:21:18.0000] <Ms2ger>
Oh, we do like our weird exceptions

[03:22:03.0000] <annevk>
zcorpan: you're gonna file bugs on 'endings' not being defined and such?

[03:35:06.0000] <hsivonen>
the annoying thing about test cases is that they show your patch isn't done yet

[03:38:07.0000] <smaug____>
hsivonen: whaaaat

[03:38:11.0000] <smaug____>
what should I review now

[03:38:30.0000] <annevk>
hsivonen: sounds like writing a standard without sufficient tests

[03:38:36.0000] <smaug____>
/me scrolls up

[03:38:44.0000] <annevk>
hsivonen: or a standard with tests, but none written by zcorpan

[03:38:54.0000] <hsivonen>
smaug____: an upcoming patch for a view source crash

[03:39:22.0000] <Ms2ger>
smaug____, EVERYTHING! ;)

[03:40:38.0000] <smaug____>
noooouuu

[03:41:16.0000] <Ms2ger>
Bah, who reviewed our Blob ctor?

[03:41:16.0000] <smaug____>
but shadow dom proposal yes

[03:41:45.0000] <smaug____>
/me doesn't remember if he reviewed that. perhaps not

[03:41:51.0000] <Ms2ger>
sicking

[03:41:54.0000] <Ms2ger>
That explains a lot

[03:52:26.0000] <annevk>
Ms2ger: it doesn't even match the spec?

[03:52:47.0000] <annevk>
Ms2ger: I have the feeling sicking just guesses what the spec says and then instead of reading it, asks on the mailing list about it

[03:52:53.0000] <Ms2ger>
Not for new Blob(window), no :)

[03:52:55.0000] <annevk>
it's really weird

[04:09:02.0000] <hsivonen>
annevk: in case you are still curious, it turned out to be a 3-line fix: https://bugzilla.mozilla.org/attachment.cgi?id=614726&action=diff

[04:18:19.0000] <zcorpan>
ok does the endings values in new Blob([], {endings: ... }) include the quotes or not?

[04:22:50.0000] <Ms2ger>
'"transparent"' or "transparent"?

[04:24:19.0000] <zcorpan>
yeah

[04:25:15.0000] <Ms2ger>
The former, per spec, I guess

[04:29:13.0000] <zcorpan>
sigh, i'm not gonna get to writing tests with a spec like this

[04:29:33.0000] <Ms2ger>
Does WebIDL actually define to use the defaults for dictionaries?

[04:32:12.0000] <zcorpan>
when the argument is omitted, you mean?

[04:32:25.0000] <Ms2ger>
Yes

[04:32:45.0000] <Ms2ger>
It would be silly to use the default when the argument is present, no? :)

[04:33:19.0000] <zcorpan>
the property can still be omitted

[04:33:33.0000] <zcorpan>
new Blob([], {})

[04:34:21.0000] <Ms2ger>
Ah, no

[04:34:32.0000] <Ms2ger>
When the *property* is omitted, I can't read

[04:34:58.0000] <zcorpan>
http://dev.w3.org/2006/webapi/WebIDL/#dfn-dictionary-member-default-value

[04:36:19.0000] <zcorpan>
i guess webidl should treat omitted dictionary the same as an empty dictionary

[04:36:36.0000] <zcorpan>
to not have all specs need to say that

[04:41:08.0000] <Ms2ger>
"the value the dictionary member is to be considered to have when not present"

[04:41:18.0000] <Ms2ger>
That could come straight out of a CSS spec

[04:42:30.0000] <zcorpan>
heh

[04:51:38.0000] <zcorpan>
"If an invalid key is used or if the dictionary argument is invalid, user agents MUST throw an InvalidStateError."

[04:51:44.0000] <zcorpan>
aargh

[04:53:11.0000] <Ms2ger>
Yeah :/

[05:13:07.0000] <zcorpan>
/me wonders how to test endings:"native"

[05:14:40.0000] <Ms2ger>
confirm("Are you on Windows?");

[05:14:42.0000] <zcorpan>
i guess newlines will always either be one or two chars, so i can test for that

[05:40:04.0000] <zcorpan>
hmm so what should happen for {endings:"bogus"}

[05:40:37.0000] <zcorpan>
webidl only says to use the default value when the key is not present

[05:40:56.0000] <Ms2ger>
/me goes for throwing

[05:41:18.0000] <Ms2ger>
"If S is not one of E�s enumeration values, then throw a TypeError."

[05:42:22.0000] <zcorpan>
values aren't necessarily enumerated

[05:42:29.0000] <zcorpan>
e.g. type can be anything

[05:43:06.0000] <Ms2ger>
endings should be an enum, I guess

[05:43:28.0000] <Ms2ger>
So, is there a way to get the value of endings out again?

[05:44:08.0000] <zcorpan>
not directly

[05:44:37.0000] <zcorpan>
making endings enum might be a good idea

[05:58:37.0000] <smaug____>
someone should write a good article about MutationObserver

[05:59:00.0000] <smaug____>
/me is obviously trying to delegate some work.

[06:18:30.0000] <zcorpan>
/me decides to go with var isWin = navigator.platform.substr(0, 3) == 'Win'; to test native endings

[06:32:46.0000] <zcorpan>
what's an example of a platform array object?

[06:42:23.0000] <annevk>
smaug____: preferably one that can serve as introduction in the specification

[06:43:31.0000] <annevk>
hsivonen: code looks daunting

[06:43:57.0000] <annevk>
zcorpan: oh you found normative requirements around "endings", nice

[06:44:11.0000] <zcorpan>
does <select> support indexed properties?

[06:44:40.0000] <zcorpan>
it has getter Element item(unsigned long index); but i can't find that it says "supports indexed properties"

[06:45:58.0000] <annevk>
might be a bug then per IDL "getter" requirements

[06:46:41.0000] <zcorpan>
oh, the magic phrase is "determine the value of an indexed property"

[06:49:10.0000] <zcorpan>
hmm, no, the idl getter and long is enough

[06:49:35.0000] <zcorpan>
http://dev.w3.org/2006/webapi/WebIDL/#dfn-indexed-property-getter

[06:58:21.0000] <zcorpan>
heycam|away: you know if anything uses webidl "platform array object"?

[07:07:37.0000] <annevk>
zcorpan: fwiw, I often use "<code>stringvalue</code>" in specs, is that confusing?

[07:08:03.0000] <annevk>
though not entirely consistently if it's both a name and a potential string value

[07:08:13.0000] <annevk>
like say utf-8

[07:08:18.0000] <annevk>
that's unquoted

[07:08:53.0000] <zcorpan>
i think that's fine; file-api had <dfn>"native"</dfn>

[07:09:18.0000] <annevk>
oh

[07:09:29.0000] <zcorpan>
and "a DOMString which can take the values "transparent" or "native""

[07:09:51.0000] <annevk>
when spec writers don't pay attention to details it gets messy

[07:10:45.0000] <annevk>
anyway, back tonight

[07:24:41.0000] <zcorpan>
hmm. should new Blob() take ArrayBuffer or ArrayBufferView?

[07:25:06.0000] <zcorpan>
the latter, right?

[07:27:55.0000] <zcorpan>
man this is probably a record on bugs for a single feature for a day

[07:30:27.0000] <Ms2ger>
Blame Typed Arrays for that :)

[09:35:54.0000] <charlvn>
what's going on with this page - http://www.whattf.org/mailing-list - it's being returned as text/plain

[09:48:26.0000] <Hixie>
whattf?

[09:48:32.0000] <Hixie>
try whatwg :-)

[10:02:14.0000] <gsnedders>
Oh I bet I know what caused my Gmail account to get suspended again. I logged in from Windows… Or at least that's the only thing different about last night.

[10:16:55.0000] <charlvn>
Hixie: yeah it's been a very long time since i last looked at that site - not sure who is running / maintaining it

[10:17:23.0000] <charlvn>
the domain is registered by an Elika Etemad

[10:17:43.0000] <TabAtkins>
That would be fantasai from the CSSWG.

[10:18:06.0000] <charlvn>
ah

[10:18:25.0000] <charlvn>
strange that i recognise fantasai and not her real name :)

[10:18:27.0000] <Hixie>
gsnedders: send me an e-mail to ianh⊙gc and i'll poke around again

[10:19:30.0000] <charlvn>
talking about whatwg.org - the one block looks a little bit strange in firefox 11 on ubuntu 11.10 http://i.imgur.com/Odmex.png

[10:19:40.0000] <charlvn>
in chromium it's perfect http://i.imgur.com/zKaw9.png

[10:20:06.0000] <TabAtkins>
Different line-wrapping.

[10:20:26.0000] <charlvn>
yeah

[10:20:38.0000] <smaug____>
different font

[10:20:56.0000] <charlvn>
not that it really matters or anything, just something i noticed

[10:21:24.0000] <kbrosnan>
different fonts have different widths

[10:21:54.0000] <kbrosnan>
the one ubuntu chooses for the default font causes extra wrapping

[10:23:30.0000] <kbrosnan>
you can try using something like http://en.wikipedia.org/wiki/Liberation_fonts which has similar metrics to the MS core fonts

[10:27:50.0000] <tantek>
well this is an funny snapshot: http://www.whattf.org/specs/web-apps/current-work/

[10:29:09.0000] <charlvn>
7 July 2008 - nice

[10:29:54.0000] <charlvn>
ok i'm off - bbl

[10:46:35.0000] <annevk>
inbox explosion

[10:56:07.0000] <annevk>
kennyluck: online?

[10:56:22.0000] <annevk>
hmm, it seems to be 3AM in Tokyo

[10:57:59.0000] <kennyluck>
annevk, I am no longer in Tokyo, but what's up?

[10:58:29.0000] <annevk>
oh okay

[10:58:47.0000] <annevk>
kennyluck: wondering about a summary of the mailing list discussion since running it all through Google Translate would be cumbersome

[10:58:52.0000] <annevk>
where are you now?

[11:01:01.0000] <kennyluck>
annevk, I am in Beijing now. So, the mailing list discussion… I don't think there's any good progress, besides two Taiwanese friends of mine suggest that merging big5-hkscs into big5 is not a good idea.

[11:01:18.0000] <annevk>
btw, does anyone know if Gecko/WebKit have open bugs on fixing the way they represent characters in URL that cannot be expressed in a certain encoding?

[11:01:33.0000] <annevk>
kennyluck: k, but no data?

[11:01:44.0000] <annevk>
kennyluck: I saw something about a lang= attribute too

[11:02:16.0000] <annevk>
kennyluck: what's their solution when using Chrome?

[11:02:39.0000] <kennyluck>
I somehow come to think there's not likely to be more big5-hkscs than big5-uao in Taiwan for a very simple reason: big5-hkscs doesn't support Japanese well, and that was a main use case why people want to extend big5 at all.

[11:03:26.0000] <kennyluck>
annevk, nothing to scientific but I start to collect a list of those that are best decoded as big5-hkscs or big5-uao → http://www.w3.org/html/ig/zh/wiki/Big5#big5-uao

[11:03:34.0000] <kennyluck>
in terms of data

[11:03:59.0000] <kennyluck>
foolip is working on something that'll be more systematic.

[11:04:14.0000] <annevk>
yeah, the question is more I guess how much extended big5 there is in Taiwan to begin with

[11:04:40.0000] <annevk>
I've seen threads on people having to override Chrome because it does not do hkscs, I've seen no such thing about uao

[11:06:14.0000] <kennyluck>
annevk, for the @lang thing. A guy suggested that we might want to pick either big5-hkscs or big5-uao based on the @lang attribute, and I was replying and said it wasn't really help much because the in the list of urls foolip collected, there's only about 10% that has @lang specified.

[11:06:35.0000] <annevk>
kk

[11:06:42.0000] <kennyluck>
I think this idea is just not worthy.

[11:07:13.0000] <annevk>
which idea?

[11:07:27.0000] <kennyluck>
The lang idea.

[11:07:35.0000] <kennyluck>
annevk, by the way, I noticed that HK people use big5-uao too, specifically for Japanese content. I collected two examples in the link above.

[11:08:41.0000] <annevk>
good times

[11:09:43.0000] <annevk>
evolving big5 without coordination was such a stupid idea

[11:09:56.0000] <TabAtkins>
s/without coordination/

[11:10:10.0000] <TabAtkins>
s/evolving//

[11:12:16.0000] <kennyluck>
It's easier to collect big5-uao content: for example the sequence \x92\xd4 is 実 in big5-uao, a rather common Kanji, and 琔 in big5-hkscs, which is a rather uncommon Chinese character I can't pronouce. So if you Google 琔, you get those big5-uao pages, and that's because Google decodes content as big5-hkscs.

[11:13:28.0000] <kennyluck>
Well, a bunch of pages that actually use the char 琔, but a little bit that uses 実.

[11:14:04.0000] <kennyluck>
I haven't found a way to get big5-hkscs specific pages so I am waiting for foolip's work :p

[11:19:34.0000] <annevk>
I think foolip is looking at .tw pages only

[11:20:17.0000] <annevk>
pretty awesome he's helping out, he had a nice strategy for getting more content to study

[11:28:39.0000] <gsnedders>
Hixie: emailed, thx

[11:28:54.0000] <gsnedders>
Hixie: (and now you know my uni email :P)

[11:54:15.0000] <annevk>
zewt: you're not answering my question

[11:54:26.0000] <annevk>
zewt: my question was if there's anything that does not deal with CRLF

[11:54:36.0000] <annevk>
zewt: obviously the answer is not going to be Notepad, because that's all it deals with

[12:30:53.0000] <annevk>
in a """ Python block \n still works?

[12:31:15.0000] <gsnedders>
Yes.

[12:51:34.0000] <annevk>
ah shit

[12:51:45.0000] <annevk>
forgot to explain in my email why I limited things to 0x10000

[12:52:08.0000] <annevk>
btw, I tested some of the alternatives and none were really faster

[12:52:36.0000] <annevk>
the problem is in the amount of data (just over a million iterations), not the individual aspects

[12:53:16.0000] <annevk>
oh sweet, http://lists.w3.org/Archives/Public/www-archive/2012Apr/att-0039/test-x-mac-cyrillic.html run directly

[12:53:29.0000] <annevk>
XSS galore

[12:53:47.0000] <annevk>
(I didn't attempt to do anything nasty though)

[12:55:37.0000] <annevk>
email itself: http://lists.w3.org/Archives/Public/www-archive/2012Apr/0039.html

[13:03:54.0000] <zewt>
annevk: um, you don't want to be writing CRLF in *nix, heh

[13:04:56.0000] <zewt>
a great way to irritate users (who, being the weirdos running linux on a desktop, are even more likely to notice and complain about it)

[13:05:26.0000] <annevk>
dunno if I ever noticed that really

[13:05:55.0000] <annevk>
maybe my software was too evolved; I mean, dealing with CR, LF, and CRLF is a major hassle

[13:07:39.0000] <Ms2ger>
Eww, CRLFs

[13:09:27.0000] <zewt>
anyone know off-hand if {a:1, a:2} is guaranteed in JS to be {a:2} (and never a:1)?

[13:10:23.0000] <annevk>
zewt: per Web ECMAScript handmade dictionaries are ordered I think

[13:11:52.0000] <zewt>
i mean, the second duplicate 'a' always clobbers the first

[13:13:07.0000] <Ms2ger>
Yes, it does

[13:13:12.0000] <Ms2ger>
See http://es5.github.com/#x11.1.5

[13:13:18.0000] <zewt>
(not terribly important, just affects how I answer someone's question)

[13:13:22.0000] <annevk>
oh sweet, the tests when hosted on lists.w3.org are all screwed because of some default charset setting

[13:14:03.0000] <Ms2ger>
Chaaaaaaaaaarseeeeeeeeets

[13:14:20.0000] <zewt>
as a random gruntly aside, MongoDB by design depends on the order of dictionaries, which makes me unhappy

[13:14:51.0000] <annevk>
I don't understand why languages don't have ordered dictionaries by default

[13:15:12.0000] <annevk>
I think Python might have something now, but no convenient syntax

[13:15:24.0000] <zewt>
well, it seems like optimizing for it would compete with optimizing for fast lookups

[13:15:48.0000] <zewt>
python has ordereddict i think, but without a builtin syntax it's cumbersome

[13:17:18.0000] <annevk>
heh ordered dict support used html5lib as argument http://www.python.org/dev/peps/pep-0372/ it's in Python 2.7; I have 2.6

[13:50:26.0000] <annevk>
welcome https://lkml.org/lkml/2012/4/13/180 o_O

[13:50:59.0000] <annevk>
via mpt

[13:51:37.0000] <zewt>
where's that troll stench coming from

[14:59:17.0000] <Hixie>
abarth: i think a document's sandboxing flags must be set, when the Document is created, to the union of the sandboxing flags on the document's container iframe, and the sandboxing flags on the document's container iframe's document, and the sandboxing flags that come from CSP

[14:59:21.0000] <Hixie>
abarth: does that sound right?

[14:59:34.0000] <Hixie>
abarth: i think that automatically makes the flags transitive across multiple levels of nested iframes

[15:00:24.0000] <abarth>
correct

[15:01:08.0000] <Hixie>
ok

[15:01:11.0000] <Hixie>
that seems tractable

[15:01:24.0000] <abarth>
http://trac.webkit.org/browser/trunk/Source/WebCore/loader/FrameLoader.cpp#L3111

[15:01:35.0000] <abarth>
"m_forcedSandboxFlags" comes from CSP

[15:02:03.0000] <Hixie>
ooh, "forced", good terminology

[15:02:07.0000] <abarth>
and possibly from the app that's embedding WebKit, but that's not relevent for the spec

[15:04:04.0000] <abarth>
we compute them when we're initializing the security origin and such for the document: http://trac.webkit.org/browser/trunk/Source/WebCore/dom/Document.cpp#L4806

[15:53:08.0000] <Hixie>
abarth: ok, i've updated the spec

[15:53:28.0000] <abarth>
Hixie: thanks!

[15:53:58.0000] <Hixie>
abarth: there's a "forced sandboxing flag set" http://www.whatwg.org/specs/web-apps/current-work/#forced-sandboxing-flag-set

[15:54:11.0000] <Hixie>
abarth: that you should set on the resource as it is loaded, based on its HTTP headers

[15:54:42.0000] <Hixie>
just say something like "A resource with the foo header with the bar value has a /forced sandboxing flag set/ with the following flags set:"

[15:54:51.0000] <abarth>
ok

[15:54:54.0000] <abarth>
let me try to do that now

[15:55:02.0000] <Hixie>
and then copy the way i phrased it for iframes, here: http://www.whatwg.org/specs/web-apps/current-work/#attr-iframe-sandbox

[15:55:10.0000] <Hixie>
but note i'm about to add a new flag

[15:55:13.0000] <Hixie>
allow-popups

[15:55:32.0000] <abarth>
i defer to HTML to parse the string anyway

[15:55:33.0000] <Hixie>
maybe i should just give you a shorthand to set all the flags at once

[15:55:39.0000] <Hixie>
oh

[15:55:40.0000] <Hixie>
hm

[15:55:41.0000] <Hixie>
interesting

[15:55:48.0000] <abarth>
or, i would prefer that

[15:55:59.0000] <abarth>
i get a string from the header parsing algorithm

[15:56:09.0000] <abarth>
and i'd like to just have the HTML spec parse it

[15:56:16.0000] <Hixie>
ah ok

[15:56:17.0000] <Hixie>
hm

[15:56:29.0000] <Hixie>
ok, that will take longer. i'll get back to you!

[15:56:45.0000] <abarth>
directive-name    = "sandbox"

[15:56:46.0000] <abarth>
directive-value   = token *( 1*WSP token )

[15:56:46.0000] <abarth>
token             = &lt;token from RFC 2616&gt;

[15:57:09.0000] <abarth>
i can change that if necessary

[15:57:29.0000] <Hixie>
that's just your authoring conformance requirements, doesn't affect me at all

[15:57:35.0000] <Hixie>
but i'll give you a hook you can use

[15:58:09.0000] <abarth>
thx

[16:00:25.0000] <abarth>
        <p>When enforcing the <code>sandbox</code> directive, the user agent

[16:00:25.0000] <abarth>
        MUST parse the <code>directive-value</code> as an unordered set of unique

[16:00:25.0000] <abarth>
        space-separated tokens that are ASCII case-insensitive.  The user agent

[16:00:25.0000] <abarth>
        MUST include these tokens in the forced sandboxing flag set for the

[16:00:25.0000] <abarth>
        protected document.</p>

[16:00:59.0000] <abarth>
how does that look?  (I'll add links to the relevant definitions.)

[16:02:14.0000] <Hixie>
i'm doing the splitting for you

[16:02:51.0000] <Hixie>
(the /forced sandboxing flag set/ takes flags, not tokens)

[16:02:58.0000] <Hixie>
(the tokens actually remove certain flags)

[16:04:29.0000] <abarth>
ic

[16:05:13.0000] <abarth>
(yeah, I don't want to list the valid tokens because I'd like HTML to be able to add them without having to change the CSP spec)

[16:05:20.0000] <Hixie>
ok here's what you need to say:

[16:06:41.0000] <Hixie>
<p>[When enforcing the <code>sandbox</code> directive, ] the user agent MUST /parse the sandboxing directive/ using [the <code>directive-value</code>] as the /input/ and [the resource's] /forced sandboxing flag set/ as the output.</p>

[16:06:49.0000] <Hixie>
the bits in square brackets are whatever you need on your end

[16:07:19.0000] <abarth>
ok, great

[16:07:22.0000] <abarth>
thanks

[16:07:24.0000] <Hixie>
this has to be done as you receive the http headers, before i create teh Document

[16:08:25.0000] <abarth>
ok.  i've been writing these as static requirements, but I can change it to be triggered on receiving the header

[16:08:53.0000] <abarth>
the <meta> tag is gone now, so the only entry point is when processing headers

[16:09:25.0000] <abarth>
          <p>Upon receiving an HTTP response containing at least one

[16:09:25.0000] <abarth>
          <code>Content-Security-Policy</code> header field, the user agent

[16:09:25.0000] <abarth>
          MUST <a href="#enforce">enforce</a> the policy contained in the

[16:09:25.0000] <abarth>
          <em>first</em> such header field. The user agent MUST ignore

[16:09:25.0000] <abarth>
          subsequent such header fields.</p>

[16:09:38.0000] <abarth>
so, it looks like "enforce" gets called at the right time

[16:11:21.0000] <abarth>
yeah, we're using the "resource representation" terminology in this spec

[16:11:40.0000] <abarth>
so, that should all work out fine

[16:12:16.0000] <abarth>
it's slightly confusing that we call it the "protected document" even though it's really the HTTP response that will be used to create the document

[16:13:28.0000] <abarth>
tlr will be sad that I'm going to link to the whatwg version of the spec, but I don't think that can be helped :)

[16:15:15.0000] <Hixie>
the w3c version will actually contain this stuff too

[16:15:21.0000] <Hixie>
until someone asks for a revert, anyway

[16:15:25.0000] <abarth>
I think i'm going to rename "protected document" to "protected resource" to make it clearer that this is happening before the document is created

[16:15:36.0000] <Hixie>
yeah calling things documents that aren't Documents is confusing

[16:15:51.0000] <zewt>
docun'ts

[16:15:52.0000] <Hixie>
also even if you did have the <meta> it wouldn't matter here cos it's too late by the time you see hte <meta> to add sandboxing flags

[16:16:14.0000] <abarth>
yeah

[16:16:27.0000] <abarth>
if we add it back, i'll add a note explaining that

[16:16:30.0000] <Hixie>
ok allow-popups is next on the pile

[16:16:35.0000] <Hixie>
microsoft will be happy

[16:16:52.0000] <abarth>
how often does http://dev.w3.org/html5/spec/single-page.html update?

[16:17:05.0000] <abarth>
(or rather, is there a w3c version that has this stuff now?)

[16:17:10.0000] <Hixie>
should be

[16:17:59.0000] <Hixie>
MikeSmith: any idea why that's not updating?

[16:18:25.0000] <Hixie>
i imagine the date is wrong because they were publishing so the date is faked right now

[16:18:33.0000] <Hixie>
that's also why it'll say WD and not ED

[16:18:47.0000] <Hixie>
looks like it should work on my side

[16:19:32.0000] <Hixie>
dunno

[16:19:50.0000] <Hixie>
bbl

[16:27:09.0000] <abarth>
Hixie: ok, pushed.  thanks for your help!

[16:50:41.0000] <SlydidarSlider>
I'm not going to study logic, I don't want to... what? wait, what? :)

[16:51:45.0000] <SlydidarSlider>
bye

[16:51:57.0000] <SlydidarSlider>
/me waves


2012-04-14
[17:07:18.0000] <Von_Davidicus>
Is this statement accurate?  "The biggest difference between HTML 4.01 and HTML5 is that HTML5 has more elements you can work with."

[17:07:52.0000] <zewt>
...

[17:08:17.0000] <Von_Davidicus>
Should I take that as a no?

[17:08:36.0000] <Philip`>
Perhaps the biggest difference is that HTML5 is defined

[17:09:01.0000] <Von_Davidicus>
That's... rather vague.

[17:09:22.0000] <zewt>
no. not being defined is vague

[17:10:47.0000] <jarek>
Philip`: really? I though that no one knows what "HTML5" actually means

[17:12:20.0000] <jarek>
I guess the current common definition is "everything shiny done with HTML/CSS/SVG/JS"

[17:12:26.0000] <Von_Davidicus>
It apparently means HTML that is defined--which means it's not vague--which means it's defined--which means it's not vague--which means I've no idea what either Phillip` or zewt are talking about.

[17:12:40.0000] <Von_Davidicus>
:)

[17:13:38.0000] <Philip`>
jarek: I meant that the thing which I mean by the term HTML5 is defined (not that the term HTML is defined)

[17:14:21.0000] <Philip`>
Von_Davidicus: Perhaps a less vague statement: Perhaps the biggest difference is that HTML4 is largely undefined

[17:14:38.0000] <Philip`>
(That is, the thing referred to as HTML4, not the term HTML4)

[17:15:21.0000] <Von_Davidicus>
No less vague, I'm afraid--what does "defined" mean in this case?

[17:16:20.0000] <jarek>
there is HTML4 spec, I guess this makes it "defined"

[17:16:38.0000] <Philip`>
I mean there is a proper definition of how the language's features behave and interact

[17:17:24.0000] <Philip`>
whereas HTML4 is mainly a high-level list of features and you have to figure out the details yourself

[17:18:17.0000] <Von_Davidicus>
Please remember--there are those of us who simply type the code.  Some of us are better at it than others, but I'm one of those that start out with <?xml version="1.0" encoding="utf-8"?> (a pretentiousness habit, I know) and put the elements in order so I have something presentable to put on the web.

[17:21:17.0000] <Philip`>
(Random example: compare http://www.w3.org/TR/html4/types.html#h-6.5 vs http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#colors )

[17:22:26.0000] <Philip`>
(The features are basically comparable, but HTML5 unambiguously defines all the details you need to know whereas HTML4 doesn't bother)

[17:23:28.0000] <jcranmer>
another good example is encodings

[17:23:43.0000] <jcranmer>
HTML5 explains very clearly who wins out when attempting to figure out a document's encoding

[17:26:59.0000] <Von_Davidicus>
Okay, how about this statement:  "Q: Will learning HTML 4.01 hamper learning HTML5?   A:  No.  Even learning HTML 2.0 will do a world of good; the fundamentals haven't really changed, and most of the elements are still there."

[20:04:38.0000] <karlcow>
MikeSmith: ping?

[20:04:45.0000] <karlcow>
in case you are here

[20:04:47.0000] <karlcow>
http://dev.w3.org/html5/markup/table.html#table

[20:04:55.0000] <MikeSmith>
karlcow: yeah, I'm here

[20:05:40.0000] <karlcow>
I was reading this, because I didn't remember if a table could contain more than one thead

[20:05:40.0000] <karlcow>
"an optional caption element, followed by zero or more colgroup elements, followed by an optional thead element, followed by"

[20:06:02.0000] <karlcow>
and then I have an English grammar doubt

[20:06:13.0000] <Von_Davidicus>
...  What the heck did the "rules" attribute on tables do?

[20:06:30.0000] <MikeSmith>
what's the grammar issue?

[20:06:42.0000] <karlcow>
is "an optional caption element" equivalent to "one optional caption element"

[20:06:57.0000] <MikeSmith>
Hixie: not updating because I need to flip the boilerplate back to ED

[20:07:07.0000] <MikeSmith>
karlcow: yes

[20:07:34.0000] <karlcow>
ok. So each time I see "an" I shoud consider "one"

[20:07:41.0000] <MikeSmith>
yes

[20:07:45.0000] <MikeSmith>
same for "a"

[20:08:01.0000] <karlcow>
yup

[20:08:04.0000] <karlcow>
thanks

[20:08:14.0000] <karlcow>
so there is only one head allowed.

[20:08:16.0000] <karlcow>
clarified.

[20:08:20.0000] <karlcow>
:)

[20:08:29.0000] <MikeSmith>
otherwise it always says "one or more" or "zero or one"

[20:09:03.0000] <karlcow>
yup understood. make sense.

[20:12:05.0000] <Von_Davidicus>
I have a question about HTML5, based on something I used to do.  On occasion, I would type in a word, and the browser would interpret that as a colour.  Later, I would find out that, say, "Blood" would result in #B000D0.  Will that still work in HTML5?  Or was that simply a bug in older versions of HTML?

[22:37:37.0000] <kennyluck>
foolip, regarding big5-uao, I got additional feedback from Chrome users: http://www.ptt.cc/bbs/Browsers/M.1334342552.A.FA8.html and http://www.ptt.cc/bbs/Browsers/M.1334375132.A.293.html . In summary, for the question "what do you do if you can't read these pages", two said "switch to IE (probably with the UAO package installed)" and one said "switch to Firefox". So, *shrug*.

[22:38:12.0000] <kennyluck>
People don't care. Really.

[22:42:51.0000] <Von_Davidicus>
I can see it just fine in Google Chrome--if I'm supposed to be looking at Chinese characters.

[22:45:41.0000] <kennyluck>
Von_Davidicus, oh these are the feedback from the users, not the test pages. foolip reads Chinese.

[22:47:01.0000] <Von_Davidicus>
Oh, okay.

[22:47:30.0000] <Von_Davidicus>
Question:  Are server-side image maps a part of HTML5?

[22:51:11.0000] <Von_Davidicus>
Never mind, I found it.  :)

[23:50:23.0000] <annevk>
hmm

[23:50:33.0000] <annevk>
decodeURI is only useful for pages that use utf-8 as encoding

[01:00:25.0000] <Von_Davidicus>
I am bewildered...

[01:01:14.0000] <Von_Davidicus>
What is wrong with "<meta http-equiv="Content-Type" content="application/xhtml+xml" />" ?  The W3C validator's saying that I'm not supposed to use "Content-Type."

[01:02:16.0000] <Ms2ger>
It doesn't do anything

[01:03:23.0000] <Von_Davidicus>
That's not the point; what am I supposed to use there>?

[01:04:00.0000] <Ms2ger>
What are you trying to do?

[01:04:51.0000] <Von_Davidicus>
Create a valid XHTML5+SVG webpage.

[01:04:59.0000] <Ms2ger>
Just drop it

[01:05:20.0000] <annevk>
http://www.whatwg.org/C#attr-meta-http-equiv-content-type

[01:05:26.0000] <annevk>
read up on that Von_Davidicus

[01:05:43.0000] <annevk>
in particular "The Encoding declaration state may be used in HTML documents, but elements with an http-equiv attribute in that state must not be used in XML documents."

[01:14:00.0000] <Von_Davidicus>
*Mind goes sproing*

[01:17:48.0000] <Von_Davidicus>
You guys make it so hard to pile on the <meta> elements, you know that?  :D

[02:38:16.0000] <annevk>
hmm

[02:39:31.0000] <annevk>
for code points -> bytes, browsers do not always use an index that is a strict conversion of the one used for bytes -> code points

[02:39:55.0000] <annevk>
that is, aside from additional code points for fallback mappings, the order is not consistent

[02:40:21.0000] <Von_Davidicus>
Is this for Numeric Character References?

[02:40:26.0000] <annevk>
although Opera appears to use reverse order (matters for duplicate code points), in Gecko and Chrome it's rather random

[02:40:34.0000] <annevk>
no shift_jis

[02:40:47.0000] <Von_Davidicus>
Oh, okay.

[02:41:19.0000] <annevk>
not really :)

[02:42:02.0000] <annevk>
but it seems more the result of internal reverse mapping scripts, rather than a conscious choice

[03:01:26.0000] <Philip`>
Von_Davidicus: http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#rules-for-parsing-a-legacy-color-value does the blood->#b000d0 thing

[03:01:54.0000] <Philip`>
Von_Davidicus: It's not an intentional feature, it's just a weird implementation detail of early browsers that web pages started relying on

[03:02:22.0000] <Philip`>
Von_Davidicus: so now HTML5 specifies how to do it

[03:03:43.0000] <Von_Davidicus>
I actually came up with a bit of JavaScript that would set the "color" attribute of a <font> element to whatever I typed in, then check what the styling of that <font> element was and spit back the hex code.  That's when I noticed the word-hex code connection.

[03:03:55.0000] <Von_Davidicus>
But that's rather cool.

[03:07:23.0000] <Von_Davidicus>
Am I right in my guess that a lot of the work in creating HTML5 is deciding how to actually *codify* all the weird stuff us amateurs did?

[03:12:04.0000] <Philip`>
Von_Davidicus: Yes, though the weirdest stuff is done by professionals :-)

[03:12:28.0000] <Von_Davidicus>
...  hadn't thought about it that way.

[03:18:43.0000] <Philip`>
Von_Davidicus: Almost all web pages are invalid, so if you want to write a real-world web browser then you have to deal with invalid content in a way that makes those pages work, so HTML5 tried to define how you should deal with invalid content, to stop the situation where browsers have to reverse-engineer each other to copy behaviour

[03:19:55.0000] <Von_Davidicus>
Does that invalidate my advice in an essay I wrote that said "You should never confuse a browser or make it guess at what you want to do"?

[03:21:38.0000] <annevk>
yeah, http://www.whatwg.org/C#syntax-errors explains why you should care about syntax errors

[03:22:43.0000] <Philip`>
Von_Davidicus: As an author, you should try to avoid thing that you think might confuse browsers, because you'll probably confuse yourself and suffer from bugs

[03:23:24.0000] <Philip`>
Von_Davidicus: (though as a browser developer you have to deal with the reality that most authors ignore that advice)

[03:23:28.0000] <Von_Davidicus>
I was thinking inconsistent rendering of the page.

[03:25:54.0000] <Von_Davidicus>
I've been working on an HTML book for several years, even before XHTML 2.0 coughed and rolled over.  Unfortunately, that means it focuses mostly on HTML 4.01 and XHTML 1.0

[03:28:11.0000] <Philip`>
You need to focus on newer buzzwords :-)

[03:28:32.0000] <Von_Davidicus>
Hey, when I started, XHTML WAS the buzzword.

[03:29:16.0000] <Von_Davidicus>
Anyways, a lot of the statements I've asked about accuracy on comes from that book.

[03:29:56.0000] <Philip`>
"HTML5" is the current buzzword, but it's probably going to become obsolete pretty soon, so you should try to come up with a new one you can popularize and then immediately publish a book about

[03:30:44.0000] <Von_Davidicus>
Hmmm... an alternative to JavaScript that at least SEEMS to make sense?  :)

[03:33:09.0000] <Von_Davidicus>
I wouldn't want to call it COBOLscript, lest the readers get suspicious.

[03:34:15.0000] <annevk>
Von_Davidicus: http://html5forwebdesigners.com/history/index.html might be worth reading

[03:37:47.0000] <Von_Davidicus>
"If we had waited for every browser to completely support CSS 2.1 before we started using any of it, we would still be waiting."  Heck, there's an aspect of HTML 4.01 that no browser I know of supports.

[03:38:43.0000] <Von_Davidicus>
Specifically, the "declare" attribute of the <object> element.  I spent MONTHS trying to get it to work, finally asked for help, and discovered the truth.

[03:38:56.0000] <Ms2ger>
There's lots of nonsense in HTML4

[03:39:55.0000] <Von_Davidicus>
What comes to mind, Ms2ger?

[03:40:21.0000] <Ms2ger>
longdesc

[03:40:24.0000] <Ms2ger>
table summary

[03:40:31.0000] <Ms2ger>
SGML

[03:42:23.0000] <Von_Davidicus>
It seems the "axis" attribute in <td> got chucked.

[03:45:45.0000] <Von_Davidicus>
Kind of too bad; it was a nice "Dump javascript keywords in" attribute, since it did virtually nothing else.  :)

[03:47:49.0000] <Philip`>
That sounds like a horrid abuse of semantics :-p

[03:48:10.0000] <Philip`>
(Nowadays you should use a data-* attribute)

[03:49:10.0000] <Von_Davidicus>
Let me tell you about abuse.  Did you know if you put a <dd> start tag in front of a <p> element (<dd><p>[Content here]</p>), the paragraph will be indented?

[03:49:36.0000] <niloy>
can someone suggest me the best way to get cross-browser audio working?

[03:49:58.0000] <Von_Davidicus>
Guess who indented THAT way a decade or so ago?  :p

[05:05:46.0000] <Ms2ger>
Fascinating how css3-background has normative references to HTML4 and XHTML1.1

[05:08:14.0000] <Von_Davidicus>
Oh?

[05:46:23.0000] <gsnedders>
Oh, for the html/body element special case?

[05:47:30.0000] <annevk>
yeah

[05:47:54.0000] <annevk>
CSS ought to depend on DOM instead and just do a few namespace checks instead

[05:47:58.0000] <annevk>
imo

[05:49:36.0000] <Ms2ger>
But you can use it for non-DOM trees!

[05:51:53.0000] <annevk>
there's so much wrong with that argument

[06:04:58.0000] <charlvn>
does anyone have an idea which is the right handling - firefox's or webkit's? https://gist.github.com/2384288

[06:05:49.0000] <Ms2ger>
No

[06:06:08.0000] <Ms2ger>
Maybe if you had a test case without jquery obfuscation

[06:06:56.0000] <charlvn>
Ms2ger: ok lemme write one

[06:21:36.0000] <Philip`>
charlvn: I thought the point of 'ready' is that it can (but doesn't have to) fire before all the resources have downloaded, and if an image hasn't been downloaded yet then it's reported as 0x0

[06:21:58.0000] <Philip`>
so both browsers are perfectly valid and sensible

[06:22:24.0000] <charlvn>
Philip`: yes exactly, according to me, webkit's handling is the most sensible

[06:22:34.0000] <charlvn>
firefox seems to only fire the event after the image has been loaded

[06:22:43.0000] <Philip`>
Maybe Firefox is faster at loading images from cache

[06:23:30.0000] <charlvn>
perhaps

[06:24:00.0000] <annevk>
hmm

[06:24:10.0000] <annevk>
so the JIS X 0212 encoder is never exposed

[06:24:18.0000] <annevk>
not even for iso-2022-jp

[06:24:22.0000] <annevk>
well, works for me

[06:26:19.0000] <charlvn>
something is weird with firefox - when i clear the cache and refresh i get 43x19 and then i refresh again without clearing the cache and get 844x598

[06:26:30.0000] <charlvn>
on window load i always get the latter

[06:28:22.0000] <Philip`>
charlvn: That might be the size of the alt text placeholder

[06:28:42.0000] <charlvn>
ah yes, makes sense

[06:29:53.0000] <charlvn>
Ms2ger: here is a better "clean" one: https://gist.github.com/2384482

[06:55:32.0000] <zewt>
more typed array bizarreness

[06:55:38.0000] <zewt>
The given byteOffset must be a multiple of the element size of the specific type, otherwise an exception is raised.

[06:56:00.0000] <zewt>
:|

[06:59:14.0000] <zewt>
but i've had so little success pointing out issues in typed arrays in the past that i don't think i can be bothered with this one

[07:25:06.0000] <annevk>
zewt: sounds quite weird

[07:37:42.0000] <Philip`>
Since the purpose of typed arrays is performance, it doesn't seem that unreasonable that they require correct alignment

[08:13:21.0000] <zewt>
sure it does; it should be fast if possible but always work

[08:54:59.0000] <FedorEmelianenko>
hi all

[08:55:27.0000] <FedorEmelianenko>
is it corret to put a <nav> into an <aside> ?

[08:58:45.0000] <FedorEmelianenko>
correct*

[09:00:29.0000] <charlvn>
FedorEmelianenko: it's in the examples on http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#the-aside-element

[09:02:36.0000] <FedorEmelianenko>
thanks charlvn

[09:03:40.0000] <charlvn>
np :)

[10:23:12.0000] <kennyluck>
Huh. The CSS parser in IE seems to have a buffer size of 128 for DIMENSION.

[10:23:40.0000] <kennyluck>
If you have a DIMENSION which is longer than that, it gets dropped it seems.

[11:13:30.0000] <Ms2ger>
gsnedders, ping

[11:25:35.0000] <Yuhong>
"<jarek> Philip`: really? I though that no one knows what "HTML5" actually means"

[11:25:52.0000] <Yuhong>
Yea, I am beginning to think that "HTML5" even as a buzzword is a misnomer.

[11:26:02.0000] <Yuhong>
For example, canvas dates back to 2005.

[11:46:29.0000] <gsnedders>
Ms2ger: pong

[11:46:47.0000] <gsnedders>
Yuhong: We were already calling it HTML5 then.

[11:47:37.0000] <Ms2ger>
gsnedders, in May last year, you said "I'll finish this off and push it soon." about http://code.google.com/p/html5lib/issues/detail?id=157 , did that happen? :)

[11:48:10.0000] <gsnedders>
Oh, that.

[11:48:13.0000] <gsnedders>
Heh.

[11:48:39.0000] <gsnedders>
Realized it was harder than I thought to do in a reasonably performant way without eating all of the memory.

[11:49:33.0000] <Ms2ger>
In that case, how about taking fantasai's patch instead? :)

[11:50:01.0000] <gsnedders>
No. I have fundemental issues to that. :)

[11:50:18.0000] <gsnedders>
It doesn't cope with the majority of "invisible" characters.

[11:51:17.0000] <Ms2ger>
And you're not interested in a "escape some invisible characters" option? :)

[12:14:47.0000] <wycats>
Philip`: back with some more html5lib questions

[12:15:22.0000] <wycats>
trying to figure out why &#0129; becomes a REPLACEMENT character?

[12:18:51.0000] <Philip`>
wycats: It should turn into U+0081, and as far as I can tell, it does

[12:19:16.0000] <wycats>
the test indicates it's a REPLACEMENT

[12:19:24.0000] <Philip`>
What test?

[12:19:29.0000] <wycats>
the one in html5lib

[12:19:33.0000] <Philip`>
Which one?

[12:19:35.0000] <wycats>
we've talked about it before, remember ;)

[12:19:36.0000] <wycats>
one sec

[12:19:44.0000] <Philip`>
Don't expect me to have a memory :-p

[12:19:51.0000] <wycats>
hahaha

[12:19:55.0000] <wycats>
{"description": "Windows-1252 REPLACEMENT CHAR numeric entity.", "input":"&#0129;", "output": ["ParseError", ["Character", "\u0081"]]},

[12:19:58.0000] <wycats>
that's the test

[12:20:01.0000] <wycats>
hmm

[12:20:08.0000] <wycats>
I was reading the test output wrong?

[12:20:15.0000] <Philip`>
That's outputting a U+0081

[12:20:22.0000] <wycats>
*I* was emitting a replacement ;)

[12:20:24.0000] <wycats>
lolololol

[12:20:53.0000] <Philip`>
plus a ParseError due to http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#table-charref-overrides

[12:21:04.0000] <wycats>
yeah

[12:21:12.0000] <wycats>
I misread my output:

[12:21:13.0000] <wycats>
       expected: ["ParseError", ["Character", "\u0081"]]

[12:21:13.0000] <wycats>
            got: ["ParseError", ["Character", "�"]] (using ==)

[12:21:15.0000] <wycats>
#fail

[12:44:04.0000] <wycats>
hell's yeah it's working now

[14:10:19.0000] <jgraham>
TabAtkins: Would you be able to read http://coremob.github.com/level-0/index.html#style and comment on which, if any, of those specs are not stable in a practical sense i.e. which couldn't be implemneted unprefixed today without a significant chance of getting burned by backward-incompatible changes in the future (ignoring the policy of not implementing non-CR specs unprefixed for the sake of argument)

[14:10:59.0000] <jgraham>
In an ideal world it would be great if you could send your response to the core mobile mailing list

[14:11:11.0000] <jgraham>
Otherwise if you could let me know that would be fine

[14:11:38.0000] <jgraham>
If you don't want to do it at all that's also fine ofc :)


2012-04-15
[21:22:51.0000] <Hixie>
jgraham: why is the core mobile web not the same as the core desktop web, core tv web, core print web, core AT web, core braille web, and core tablet web?

[21:30:35.0000] <zewt>
they're all the same, some are just more same than others?

[22:15:19.0000] <Von_Davidicus>
A serious question on some advice I've received:  I wrote a tutorial on HTML 4.01, and someone suggested I should simply "update in places that need it".  Would it really be that simple, or should I rewrite my book from beginning to end?

[22:30:09.0000] <sam___>
hello hello

[22:30:51.0000] <Von_Davidicus>
Hello.

[22:32:22.0000] <sam___>
um, im encountering a weird html problem

[22:32:33.0000] <sam___>
mind taking a look for me?

[22:32:42.0000] <Von_Davidicus>
/me MIGHT be able to help....

[22:32:57.0000] <Von_Davidicus>
/me is still an old-school HTML 4.01 coder, though

[22:36:06.0000] <sam___>
no problem

[22:36:20.0000] <sam___>
the problem is that the contents in a p tag is breaking out of the container somehow

[22:36:46.0000] <sam___>
i'm generating the html using python, it doesn't happen if i use pure html...

[22:37:24.0000] <Von_Davidicus>
That's a new one...

[22:37:49.0000] <sam___>
how come i cant send msg in #html????

[22:39:13.0000] <Von_Davidicus>
/me has never used Python in his life, so can't answer that question.

[22:39:14.0000] <sam___>
k here's a link to the project i'm working on, it's a school project, so Im using a free domain as a redirector

[22:39:20.0000] <sam___>
http://www.luxuryparadise.co.nr/

[22:39:57.0000] <sam___>
search for "a" and click on the result, check the right hand side where it says "recent messages" click on "show more" around that area, and you will see the problem

[22:41:30.0000] <Von_Davidicus>
I don't see a "showmore", nor recent messages.

[22:44:09.0000] <sam___>
are you sure??? do u see the account details then?

[22:45:17.0000] <Von_Davidicus>
Asdfasdfdf Asdf

[22:45:17.0000] <Von_Davidicus>
Email: asdf⊙ac

[22:45:17.0000] <Von_Davidicus>
Sex: Not specified

[22:45:22.0000] <Von_Davidicus>
That is what I see.

[22:45:46.0000] <sam___>
oh u gotta click on it

[22:45:53.0000] <sam___>
click on the supposed user name

[22:46:06.0000] <sam___>
i think ur still on the search result page

[22:46:41.0000] <Von_Davidicus>
Ah.  Where you have a very, very long "word

[22:46:44.0000] <Von_Davidicus>
"?

[22:47:10.0000] <sam___>
do u see a bunch of messages?

[22:47:45.0000] <sam___>
where it says "fasdfasd......."

[22:47:47.0000] <sam___>
lol

[22:48:15.0000] <Von_Davidicus>
Yes.

[22:48:20.0000] <sam___>
the div's height is not set, it's supposed to grow as more contents are put in there

[22:48:30.0000] <sam___>
why is this happening?

[22:48:51.0000] <sam___>
i tried copying all the code including html css and js into jsfiddle

[22:48:58.0000] <sam___>
and suddenly everything works fine

[22:49:04.0000] <Von_Davidicus>
Thing is, it's all ONE word, and in comments (at least from what I've seen), such overflow is a headache on many sites.

[22:49:09.0000] <sam___>
btw i copied the code from chrome inspector

[22:49:55.0000] <Von_Davidicus>
Seriously, if someone makes a long word like that, they are being a pest and deliberately breaking the layout, so I don't think you really need to worry about it.

[22:50:56.0000] <sam___>
oh! i think ur right. I just added some messages that are more like words instead of a long string of text

[22:51:29.0000] <Von_Davidicus>
Yeah, really long words often do that.

[22:53:46.0000] <sam___>
another thing is Im using a jquery plugin that collapses words or elements when it gets too long. I used it on the divs, that's why the "show more" link is there

[22:54:14.0000] <sam___>
but when I use the plugin on the messages, which is p.sendermessage, it's not working any more

[22:54:34.0000] <sam___>
again, it works if I used pure html, instead of this python generated one

[22:54:58.0000] <sam___>
i don't know if it's python that messes thing up, but that's the only reason i can think of

[22:55:13.0000] <Von_Davidicus>
*Nods.*  I do stuff on a lot of online art galleries, and one thing that annoys a lot of artists if a comment is something like "loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooool"

[22:55:21.0000] <Von_Davidicus>
It messes with the layout.

[22:58:24.0000] <sam___>
haha

[22:58:52.0000] <sam___>
ok i get how it's messing up the layout, but it shouldn't affect jquery

[23:13:41.0000] <sam___>
oh well, that's not a big deal now.

[23:13:52.0000] <sam___>
Thanks Von!

[23:30:05.0000] <Von_Davidicus>
I've read some HTML5 posts that say that JavaScript is the only scripting language on the web--but the most popular browser (IE) also supports VBScript.  That being said, is VBScript indeed so uncommon that JavaScript could be considered the only scripting language on the web?

[23:31:11.0000] <annevk>
yes

[23:32:22.0000] <Von_Davidicus>
Since IE is so common, one could almost put aside the argument "well, only one browser supports it", so why else is VBScript that rare?

[23:36:16.0000] <annevk>
why bother if there's JavaScript that works everywhere

[23:37:14.0000] <Von_Davidicus>
True.  I just wondered if VBScript was more limited in its capabilities as well.

[23:43:33.0000] <Von_Davidicus>
Certainly, I never could get it to do much.

[23:51:49.0000] <j_wright>
you could actually add other languages to IE, i remember a TclScript and a PerlScript

[23:52:08.0000] <Von_Davidicus>
I've heard of PerlScript.  Never tried it, though.

[23:52:38.0000] <j_wright>
i think it was more used, still not much though, in iis

[23:53:23.0000] <Von_Davidicus>
A serious question on some advice I've received:  I wrote a tutorial on HTML 4.01, and someonesuggested I should simply "update in places that need it".  Would it really be that simple, or should I rewrite my book from beginning to end?

[23:54:55.0000] <j_wright>
update in places seems fair

[23:55:03.0000] <j_wright>
its not like its xhtml 2

[23:55:06.0000] <annevk>
seems kind of hard to say without having seen the book

[23:55:26.0000] <annevk>
you can have a read through http://dev.w3.org/html5/html4-differences/

[23:56:03.0000] <Von_Davidicus>
It was written to be the kind of tutorial I wish *I'd* had when learning HTML.  My book starts at the level of "<" starts a tag, ">" ends a tag.

[00:07:48.0000] <Hixie>
Von_Davidicus: then you weren't teaching HTML4, you were teaching what browsers implement, and that's actually closer to the HTML spec today than it is to HTML4. :-)

[00:08:11.0000] <Hixie>
(in HTML4, tags start with < and end either with >, or with /, or with <.)

[00:08:59.0000] <Von_Davidicus>
Well, the rest of the book went into the elements of HTML 4.01/XHTML 1.0, explaining the differences between the two where they cropped up.

[00:11:44.0000] <Von_Davidicus>
I didn't know tags could end with < or /.

[00:12:05.0000] <Hixie>
<p/This is a paragraph/ is equivalent to <p>This is a paragraph</p> in HTML4

[00:12:08.0000] <Hixie>
not that any browser implemented it

[00:12:25.0000] <Hixie>
and you can say things like <p<em>This</em> is valid</p>

[00:12:36.0000] <Von_Davidicus>
I knew that /wasn't/ the case with XHTML.

[00:12:37.0000] <Hixie>
also <p<em/This/ is valid.</>

[00:12:44.0000] <Hixie>
(note </>)

[00:13:04.0000] <Hixie>
also you could use "<>" where only one element would have been valid

[00:13:11.0000] <Hixie>
none of this stuff was really ever implemented by browsers

[00:13:29.0000] <Hixie>
i think i got mozilla to do the <a<b thing for a while, but that was a mistake that we fixed when we defined parsing later

[00:13:57.0000] <Von_Davidicus>
So my statement of "</> is nonsense to browsers" was correct?

[00:14:22.0000] <Hixie>
to most user agents, yes

[00:14:36.0000] <Hixie>
most validators supported it, confusingly

[00:14:59.0000] <Von_Davidicus>
/me based a lot of his book on either experience or experiments.

[00:20:59.0000] <Von_Davidicus>
Another question:  How's this for a demonstration that valid code != good webpage?  http://www.mrinitialman.com/Experiments/Horror/horrors.html (Completely valid HTML 4.01 and CSS)

[00:31:12.0000] <Von_Davidicus>
???

[00:48:02.0000] <Von_Davidicus>
...  you don't need the SVG namespace for an SVG graphic to be embedded?

[00:49:39.0000] <Von_Davidicus>
/me is finding HTML5 more and more baffling.*

[00:51:12.0000] <Ms2ger>
The namespace is still there, but you don't need to write it out

[00:52:35.0000] <Von_Davidicus>
Does the xmlns attribute still have some use, though?

[00:54:37.0000] <Ms2ger>
Nope

[00:55:04.0000] <Von_Davidicus>
That's depressing to know.

[00:56:39.0000] <Von_Davidicus>
Well, at least my SVG file goes sideways when I remove it.

[01:29:14.0000] <smaug____>
hmm, still today time to think about whether to attend webapps f2f

[01:30:08.0000] <Von_Davidicus>
/me is almost afraid to read the HTML5 spec and see what ELSE it screws up.

[01:36:13.0000] <smaug____>
HTML5? I hope you read HTML

[01:38:44.0000] <Von_Davidicus>
I'm a longtime user of HTML 4.01 and XHTML 1.x .  HTML5 is a scary, scary thing; I mean...  embedding SVG should *require* XHTML, XML namespaces and, if at all possible, a Doctype that takes up half the document!

[02:12:18.0000] <jgraham>
Hixie: It is, more or less (specs like device orientation are more useful on mobile than on TV though)

[02:13:09.0000] <jgraham>
I see the "mobile" thing as an oppertunity to ride on the coattails of fashion to get useful work done

[02:13:23.0000] <jgraham>
It also provides some semi-objective criteria

[02:13:49.0000] <jgraham>
e.g. "what features do we need to repliacte the top 100 mobile apps as web apps"

[02:25:29.0000] <Von_Davidicus>
And, apparently, HTML5 won't let me throw in my own XML namespaces.  Drat.

[02:27:18.0000] <Von_Davidicus>
...  400+ XML files are taking FOREVER to upload.  :-@

[02:29:40.0000] <smaug____>
if you need namespaces, use XHTML form

[02:30:33.0000] <smaug____>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-xhtml-syntax.html#the-xhtml-syntax

[02:31:53.0000] <Von_Davidicus>
Well, I'm poking at HTML5, and seeing if anything I remember that was needed in XHTML 1.x still applies.

[02:44:19.0000] <jgraham>
Hixie: (also the market on mobile is noticably different to the market on other platforms, and not really in a better way)

[02:47:07.0000] <Von_Davidicus>
Question:  Are the XHTML, SVG, and MathML namespaces the *only* ones allowed in HTML5?

[02:57:25.0000] <Von_Davidicus>
Or is there at least a limited set of namespaces allowed?

[03:26:00.0000] <Von_Davidicus>
I've been thinking about the way SVG and MathML are embedded in HTML5.  It seems to me that they're not tacked on, as they are with XHTML 1.1 + MathML 2.0 + SVG 1.1 where you have "islands" of different XML languages in an encompassing one, but rather that HTML5 includes the lot.  Am I correct, or am I off-base?

[03:28:45.0000] <Philip`>
Von_Davidicus: The HTML parser is hardcoded to recognise <svg> and <math> and switch to a different parsing mode that recognises <circle> and <mfrac> etc

[03:29:50.0000] <Philip`>
The DOM generated by the parser is the same as what you'd get from old-fashioned XHTML1+SVG+MathML

[03:30:00.0000] <Von_Davidicus>
So it's still islands of different languages--but ones the parser knows how they work, and so doesn't need the namespace to understand?

[03:31:59.0000] <Philip`>
Yes, it doesn't need the explicit xmlns="..." declaration, since it knows that <svg> should implicitly trigger the SVG namespace etc

[03:32:39.0000] <Von_Davidicus>
So it just "assumes" that namespace is there?

[03:33:46.0000] <Philip`>
Yes, effectively

[03:34:37.0000] <Philip`>
(Explicit xmlns and xmlns:* attributes are always completely ignored by the HTML parser, and usually are conformance errors)

[03:35:04.0000] <Von_Davidicus>
I must admit I find HTML5 baffling, since it seems to let you get away with so much more.  I find myself wondering if ANY of my experience with the older HTML and XHTML is of any worth.

[03:36:18.0000] <Philip`>
It's designed to not force authors to jump through needless hoops for concepts like modularity and extensibility that don't actually exist in reality

[03:36:42.0000] <Philip`>
(hence the simpler doctype, lack of xmlns, etc)

[03:38:08.0000] <Von_Davidicus>
I thought extensibility did exist--unless I have the wrong idea of what it means.  I thought it meant you could add in other XML languages, and I do that all the time.

[03:39:52.0000] <Philip`>
You can't add other XML languages in a way that makes web browsers do anything interesting with them - you can just add opaque lumps of data that scripts can read later

[03:40:52.0000] <Von_Davidicus>
So, basically, XHTML + SVG + MathML was the closest to that extensibility that the browsers ever got?

[03:41:43.0000] <Philip`>
They're the only languages that browsers interoperably do interesting things with

[03:43:06.0000] <Von_Davidicus>
That's basically what I meant, so I'll take that as a yes.

[03:43:22.0000] <Philip`>
If someone wanted to add a new language to the web platform, extending the hard-coded HTML parser rules would be a trivial task compared to the other effort required in getting consensus and decent implementations, so xmlns-style syntactic extensibility is optimising the trivial problem and not the hard ones

[03:44:28.0000] <Philip`>
I didn't say "yes" because they're not really examples of 'extensibility' - they're just examples of web browsers implementing features in a centralised fashion :-)

[03:45:49.0000] <Von_Davidicus>
What I said was the -closest- that browsers got, not an actual example.  :)

[03:46:01.0000] <Philip`>
(unless you count the SVG/MathML plugins for IE, which I suppose are examples of real implementation extensibility)

[03:46:10.0000] <Philip`>
((though seemingly not hugely successful ones))

[03:46:20.0000] <Von_Davidicus>
I hadn't known those existed.

[03:47:38.0000] <Philip`>
(Adobe SVG Viewer and MathPlayer, I think)

[03:49:08.0000] <Von_Davidicus>
Oh.  Those.  Never tried them.

[03:51:47.0000] <Von_Davidicus>
What the heck was modularity?

[03:52:34.0000] <Philip`>
As in http://www.w3.org/TR/xhtml-modularization/ ?

[04:05:36.0000] <Von_Davidicus>
Yeah, what was the whole idea behind that?

[04:06:17.0000] <Philip`>
As far as I'm aware, some people thought it would be fun to mess around with writing unnecessarily complex DTDs

[04:06:20.0000] <Philip`>
and that's about it

[04:06:30.0000] <Ms2ger>
Lots of booze

[04:08:27.0000] <Von_Davidicus>
Well, if you like *simple* DTDs....  http://www.mrinitialman.com/Experiments/showcode.php?project=ElementML&filename=elementml&filetype=dtd  :D

[04:08:50.0000] <Von_Davidicus>
It was a joke markup language I wrote.

[04:10:04.0000] <Philip`>
I think the policy here is to dislike all DTDs of any kind whatsoever :-)

[04:12:46.0000] <Von_Davidicus>
...BLASPHEMY!

[04:13:52.0000] <Philip`>
Blasphemy is also a policy here

[04:16:03.0000] <Von_Davidicus>
How about goofball?  Is goofball an allowed policy--specifically, the kind of goofball that would do a website with its own markup language, including DTD and XML Schema?

[04:18:19.0000] <Philip`>
Such a person might not be a lost cause, if they can be convinced of the folly of DTDs and XSDs

[04:18:40.0000] <Von_Davidicus>
Proof for the DTD part:  http://validator.w3.org/check?uri=http%3A%2F%2Fcoachrandom.zzl.org%2FChronological%2Fcomic-005.xml  I had so much fun tinkering with that website.

[04:20:39.0000] <Von_Davidicus>
DTDs have their place; I still use XML files as databases (though I *do* know SQL).  XSDs: 20 miles south of useless, really.  There's not much they actually *do* that DTDs don't, and theres a few things they don't that DTDs *do*.

[04:26:57.0000] <Von_Davidicus>
I probably had *too* much fun, considering that site used both DTD and XSD.

[06:04:18.0000] <annevk>
http://commandcenter.blogspot.com/2012/04/byte-order-fallacy.html guess he never heard of WebGL :/

[06:30:17.0000] <annevk>
http://plan9.bell-labs.com/sys/doc/utf.pdf is pretty interesting

[06:31:07.0000] <annevk>
apparently the unification in Unicode was done because they tried fitting it all in 16-bit code units

[06:37:33.0000] <zewt>
heh

[06:38:05.0000] <zewt>
seems like han unification is the main excuse for the resistance unicode still sees in cjk, or at least japan

[06:38:15.0000] <zewt>
(though i don't believe it's actually legitimate, more like habit)

[06:38:42.0000] <annevk>
I think that's mostly stopped now, although the algorithms to determine which font to pick are still not defined

[06:39:08.0000] <zewt>
i've had that argument relatively recently (in here, if I remember correctly), but I don't know how common it is

[06:41:27.0000] <annevk>
prolly here with me :)

[06:42:10.0000] <zewt>
no, with rniwa i think

[06:45:14.0000] <annevk>
http://krijnhoetmer.nl/irc-logs/whatwg/20111217#l-390

[06:46:19.0000] <zewt>
we weren't having the han unification argument there :)

[06:46:24.0000] <zewt>
http://krijnhoetmer.nl/irc-logs/whatwg/20111201#l-198

[06:47:00.0000] <annevk>
oh, I thought we were discussing fonts

[06:51:54.0000] <zewt>
i mean the argument that "cjk people can't use unicode because something something han unification"

[06:52:38.0000] <zewt>
which is just false so long as you have language tagging, since you don't lose any information (it'll 1:1 to the legacy encoding)

[06:55:30.0000] <Philip`>
Is language tagging a less maligned concept than pre-Unicode code pages?

[06:55:44.0000] <annevk>
language tagging is also not feasible in a number of constructs

[06:55:45.0000] <zewt>
should be, since unicode depends on it for CJK

[06:55:48.0000] <annevk>
e.g. title=""

[06:56:26.0000] <zewt>
should probably do something like use the lang tag of <HTML> for that?

[06:56:49.0000] <zewt>
(i'd say <body>, except title is in head, so that seems weird)

[06:57:55.0000] <annevk>
I meant the title attribute, or the alt attribute for that matter

[06:58:14.0000] <zewt>
use the (effective) lang of the element it's on

[06:58:20.0000] <annevk>
it has the language of the element it is specified on, but if you mix things you are out of luck

[06:59:00.0000] <Ms2ger>
If you ever need to make something really obvious, but only for Netscape/Gecko users...

[06:59:01.0000] <zewt>
iirc there are also language selection control codes in unicode (but nobody will ever know how to use those)

[06:59:14.0000] <Ms2ger>
<font font-weight=900 point-size=50>

[07:00:48.0000] <annevk>
zewt: really?

[07:00:58.0000] <zewt>
i vaguely recall it, but I forget what they're called

[07:01:04.0000] <zewt>
(and I doubt anyone in the world implements them...)

[07:01:17.0000] <annevk>
I think Unicode only has bidi characters

[07:01:38.0000] <annevk>
and emoji flags

[07:01:50.0000] <zewt>
http://en.wikipedia.org/wiki/Unicode_control_characters#Language_tags

[07:02:42.0000] <annevk>
deprecated... whatever that means

[07:03:45.0000] <zewt>
could be made much easier to use with &names; that translate to them (not that it'd be worth it)

[07:22:03.0000] <Ms2ger>
<a href=foo><font color="red">text</font></a>

[07:22:17.0000] <Ms2ger>
What color should the underline have?

[07:23:27.0000] <Philip`>
Ultraviolet

[07:23:39.0000] <Ms2ger>
Correct

[07:24:06.0000] <Philip`>
Overexposure to <font> can cause skin cancer

[07:29:26.0000] <zewt>
Ms2ger: none. modern web pages don't underline links, figuring out what's clickable is supposed to be like playing a sierra game, click everywhere, see what happens

[07:29:44.0000] <zewt>
(and die if you click the wrong spot)

[07:29:53.0000] <Ms2ger>
Also correct

[07:30:20.0000] <Ms2ger>
!summon zcorpan

[08:18:01.0000] <jgraham>
Ms2ger: could be hard on a Sunday

[08:18:12.0000] <Ms2ger>
Pff, slacker

[08:25:58.0000] <jgraham>
Oh my

[08:26:25.0000] <jgraham>
The ES 5.1 official testsuite uses sync XHR to load the tests

[08:36:14.0000] <Ms2ger>
I'd fix it, but I'm not an ECMA member

[08:39:05.0000] <gsnedders>
Anyone know an ECMA member?

[08:39:30.0000] <Ms2ger>
I don't

[08:40:30.0000] <gsnedders>
(To be fair, Dave-whose-surname-I-forget tends to fix stuff quickly given bug reports)

[08:40:42.0000] <karlcow>
https://duckduckgo.com/?q=%22Anyone+know+an+ECMA+member?%22 → No results

[08:41:14.0000] <Ms2ger>
Herman?

[08:41:29.0000] <Ms2ger>
Hyatt?

[08:41:40.0000] <jgraham>
Herman seems more likely in context

[08:42:07.0000] <jgraham>
/me wonders if there are any Daves whoese surname doesn't begin with H

[08:42:25.0000] <Ms2ger>
Daron?

[08:42:31.0000] <Ms2ger>
With a B, even

[08:43:03.0000] <gsnedders>
Fugate.

[08:43:36.0000] <jgraham>
Does anyone call dbaron Dave?

[08:45:06.0000] <jgraham>
That just seems wrong

[08:45:31.0000] <Ms2ger>
It does

[08:48:24.0000] <odinho>
jgraham: My CORS testsuite uses sync XHR all over the place :P I have a mustfix on that one though.

[08:49:48.0000] <karlcow>
jgraham: I didn't think about it… but maybe I will start. If he were wrong it would be the surest way of proving it.

[08:49:50.0000] <annevk>
/me has used sync XHR too when sorting out stuff related to encodings

[09:06:33.0000] <MikeSmith>
so what engine code is Firefox mobile for android built from?

[09:07:11.0000] <MikeSmith>
I see the http://hg.mozilla.org/mozilla-central/file/tip/mobile/android tree

[09:20:28.0000] <Ms2ger>
MikeSmith, plain Gecko below that, I think

[09:21:33.0000] <MikeSmith>
Ms2ger: so that's C++ code while the android app is  Java app.. I'm wondering how the Java app gets built from C++ engine code

[09:22:27.0000] <Ms2ger>
Around http://mxr.mozilla.org/mozilla-central/source/widget/android/AndroidBridge.cpp I guess

[09:22:38.0000] <MikeSmith>
aha

[09:23:18.0000] <Ms2ger>
/me tries to avoid that stuff

[09:25:38.0000] <gsnedders>
Probably the same way as a lot of Android apps: a minimal Java app to spawn the C++ code.

[09:26:23.0000] <Ms2ger>
Not terribly minimal, I'm afraid

[09:29:51.0000] <smaug____>
The whole UI is done in Java, I think

[10:20:50.0000] <Hixie>
i just noticed... we never did add a version number to the W3C HTML Canvas 2D Context specification

[10:21:33.0000] <Hixie>
i wonder why the people so emphatic about not removing version numbers from HTML5 aren't clamouring to add it to other specs...

[10:22:32.0000] <Ms2ger>
Isn't the "2" a version number?!

[10:22:37.0000] <Hixie>
hah

[10:28:46.0000] <karlcow>
Ms2ger: and it is even followed by Canvas 3

[10:29:28.0000] <karlcow>
I'm impatient about the Canvas 4, enabling timetravel in Web pages.

[10:29:49.0000] <Ms2ger>
/me wonders how he got 'SUPERSCRIPT MINUS' (U+207B) into this file name

[10:39:41.0000] <FedorEmelianenko>
hi all

[10:43:11.0000] <annevk>
Hixie: logic appears to be missing in more places than just the platform

[10:43:33.0000] <annevk>
(also explains the state of the platform)

[10:44:22.0000] <zewt>
Hixie: if all change is bad, then adding a version number to them would be just as evil as removing it from html!


2012-04-16
[19:12:03.0000] <Hixie>
anyone know if any browser supports accesskey on non-focusable elements?

[19:18:12.0000] <Hixie>
hm, it suddenly started working, wtf

[19:23:30.0000] <jcranmer>
computers are like that

[00:28:18.0000] <zcorpan>
Ms2ger: in quirks mode, red. otherwise, the link's color

[00:29:09.0000] <zcorpan>
http://simon.html5.org/specs/quirks-mode#the-font-element-text-decoration-color-quirk

[00:29:51.0000] <zcorpan>
some browsers make that quirk conditional on the color attribute and its value, but i thought that was pointless so didn't spec it

[00:31:16.0000] <zcorpan>
iirc webkit has this quirk in all modes

[00:36:02.0000] <MikeSmith>
zcorpan: http://qa-dev.w3.org:8888/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C%21doctype%2520html%3E%250D%250A%3Ctitle%3E%3C%252Ftitle%3E%250D%250A%3Cinput%2520type%253Dimage%2520value%253Dfoo%2520alt%253Dbar%3E&showsource=yes

[00:36:55.0000] <zcorpan>
woah

[00:36:58.0000] <zcorpan>
quite the message

[00:37:05.0000] <MikeSmith>
yeah, verbose

[00:37:09.0000] <zcorpan>
tl;dr? :-)

[00:37:30.0000] <MikeSmith>
well, the existing message takes up the same amount of vertical space

[00:38:09.0000] <zcorpan>
but maybe it's good enough for noscript users, and then you can shave off the non-interesting bits with a script

[00:38:28.0000] <MikeSmith>
not sure it makes sense to do that actually

[00:38:49.0000] <zcorpan>
maybe not

[00:39:00.0000] <MikeSmith>
the problem being that lacking the context, I think some users are still going to file bugs

[00:39:56.0000] <zcorpan>
/me switching trains

[00:40:03.0000] <MikeSmith>
k

[00:43:34.0000] <annevk>
MikeSmith: maybe just list the allowed attributes for type=image?

[00:43:57.0000] <annevk>
MikeSmith: and state it depends on the type, with a link to the table in the HTML draft?

[00:44:36.0000] <MikeSmith>
the problem if we do that is I think we are still going to get people filing bugs saying, e.g., the spec says the value attribute is allowed on image

[00:44:55.0000] <MikeSmith>
because it's actually pretty hard to tell from the spec that it's not

[00:45:30.0000] <MikeSmith>
but if we show it in context with the other types, the users can see, yeah, value is allowed for most types, but it's not allowed for image

[00:46:41.0000] <MikeSmith>
and the other technical problem with only showing the allowed attributes for type=image in this message is that the current Java code does not have access at that point to the other attributes

[00:47:03.0000] <MikeSmith>
the exception that's thrown has information about the element name, but not the attributes

[00:48:42.0000] <MikeSmith>
and this weekend I looked at changing the code so that the attribute information is available at that point, but it turns out that doing that adds a lot of extra code that's not useful for anything else except this one special case of the input element

[00:48:50.0000] <zcorpan>
MikeSmith: i guess it's good enough, although i think the ideal message i'd want is along the lines of "Attribute value not allowed on element input with type=image. value is only allowed when type is button, checkbox, color, [etc]"

[00:50:14.0000] <zcorpan>
MikeSmith: but maybe it's possible to do that while still having all the information, by rewriting the message with javascript :-)

[00:50:20.0000] <MikeSmith>
yeah

[00:50:28.0000] <MikeSmith>
so I may end up doing that

[00:50:30.0000] <zcorpan>
you'd need to parse the highlighted extract with innerHTML to find out the used type

[00:50:36.0000] <MikeSmith>
right

[00:50:52.0000] <MikeSmith>
that is simple enough to do, though hacky

[00:51:34.0000] <zcorpan>
yeah

[00:52:17.0000] <MikeSmith>
the Java code we are using to parse the attributes information out from the spec is pretty hacky too

[00:52:33.0000] <MikeSmith>
and that's where I made the change for this

[00:53:17.0000] <MikeSmith>
because I think it's better to keep new hacks isolated in the places where existing ones are

[00:54:19.0000] <MikeSmith>
rather than burdening the currently mostly un-hacky parts with extra code for this special case

[00:54:49.0000] <MikeSmith>
anyway, for now I'll send what I have to hsivonen for review, and see what he thinks

[00:56:48.0000] <zcorpan>
maybe a less hacky approach is to let the schema allow everything and have a java checker check the constraints and emit useful messages

[01:01:44.0000] <kennyluck>
annevk, regarding the question "What do Chrome users do when they face big5-uao content?" you asked a few days ago, I got some answers from a helpdesk forum. See http://krijnhoetmer.nl/irc-logs/whatwg/20120414#l-294

[01:02:46.0000] <annevk>
yeah saw that

[01:02:48.0000] <annevk>
le sigh

[01:03:39.0000] <kennyluck>
k

[01:04:19.0000] <annevk>
though the data Philip had suggested this only affects very few pages

[01:04:27.0000] <annevk>
ugh

[01:05:04.0000] <kennyluck>
Oh, one guy suggested that charset=big5 should use the intersection of big5-2003 and big5-hkscs.

[01:05:38.0000] <kennyluck>
Yeah, that's the main reason why people don't really care.

[01:05:58.0000] <annevk>
I think that's the definition of big5 at the moment

[01:06:26.0000] <annevk>
afaik it includes the ETEN extensions and such

[01:10:38.0000] <MikeSmith>
https://twitter.com/#!/ruvebal/status/191800323050971136

[01:10:53.0000] <MikeSmith>
"Any repository @w3c for downloading the whole bunch of xhtml2 rng schema? The goal to convert modules to rnc for nxml-mode validation @emacs"

[01:19:39.0000] <annevk>
I wonder how much IE supports of iso-2022-jp

[01:20:01.0000] <annevk>
if it does not support JIS X 0212  there either, maybe that index should be removed altogether

[01:42:05.0000] <annevk>
anyone with an even better idea on how to organize the external indexes?

[01:42:24.0000] <annevk>
should I define some kind of names for them in the draft so I only need to use the links once?

[01:42:36.0000] <annevk>
#firstworldproblems

[01:42:59.0000] <annevk>
or maybe more like #anneproblems

[01:47:13.0000] <zcorpan>
yeah have a table that lists the indexes with <dfn>s in left column and link in right, or some such

[01:47:30.0000] <foolip>
kennyluck, thanks for the questions on ptt.cc!

[01:48:00.0000] <annevk>
<dfn>index big5</dfn> <a href=index-big5.txt>index-big5.txt</a> could work I suppose

[01:48:27.0000] <annevk>
and then I can add the notes there too about how these indexes are unusual

[01:49:04.0000] <zcorpan>
#anneproblemsolved

[01:50:07.0000] <kennyluck>
foolip, nope. By the way, I am running your scripts for .hk sites too. It might turn out that big5-uao is as prevalent there

[01:50:23.0000] <foolip>
kennyluck, oh, I'm already doing that actually :)

[01:50:33.0000] <foolip>
but go ahead and play, independent results would be great!

[01:52:38.0000] <annevk>
another problem

[01:52:43.0000] <annevk>
can a specification use language like

[01:52:45.0000] <foolip>
kennyluck, I can check in the list of hk URLS if you haven't generated your own yet

[01:52:54.0000] <annevk>
(x / 94) + 0xA1

[01:53:04.0000] <annevk>
(x % 94) + 0xA1

[01:53:42.0000] <annevk>
remainder of dividing x by 94 (as integers) but that just seems so lame

[01:53:49.0000] <kennyluck>
foolip, I am using Bing API too so I am afraid that there wouldn't be any different. I am at about 30% of getting the urls.

[01:54:38.0000] <foolip>
kennyluck, ok, let's see what you find :)

[01:55:07.0000] <foolip>
my suspicion is that a lot more HK pages depend on Big5-HKSCS than TW pages depending on Big5-UAO

[01:56:11.0000] <annevk>
I'm so happy I got you guys excited about sorting this out :)

[01:56:28.0000] <annevk>
actually, you just got excited, I didn't have to do much apart from sending a few emails

[01:57:39.0000] <kennyluck>
foolip, no prediction from me except that I doubt "a lot" is true :p I guess we'll ending leaning to big5-uao for non-zh locales, if we are going locale-dependent.

[01:58:29.0000] <foolip>
kennyluck, from annevk's initial data from dotnetdotcom.org HKSCS was certainly a lot more common than UAO

[02:00:01.0000] <kennyluck>
foolip, let's see. I don't bet any money on this :p

[02:03:06.0000] <annevk>
fwiw, first non-utf-8, non-utf-16, non-single-byte encoder: http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#euc-jp-encoder

[02:03:07.0000] <kennyluck>
foolip, by the way, it surprises me that https://gitorious.org/whatwg/big5/blobs/master/big5-hkscs-vs-uao.txt doesn't have many Japanese sentences. Is it simply because these pages get lower page rank or there's bugs in Bing API in this regard?

[02:04:07.0000] <foolip>
kennyluck, I don't know, possibly it's because of Market=zh-TW, if Bing thinks that these pages are in Japanese

[02:04:50.0000] <foolip>
Or these pages just aren't in the top 50 pages of the top ~3k Taiwan sites?

[02:05:49.0000] <kennyluck>
foolip, I think I'll stop my script and re-run that with Market=zh-TW taken away now.

[02:06:14.0000] <foolip>
kennyluck, yeah, I just removed that when searching .hk

[02:06:32.0000] <kennyluck>
I missed that :(

[02:25:47.0000] <kennyluck>
foolip, my feeling is that Bing API filters out a good portion of big5-uao… For example, http://www.bing.com/search?q=site%3Awww.ptt.cc+%E3%81%82&qs=n&form=QBRE&filt=all&pq=site%3Awww.ptt.cc+%E3%81%82&sc=0-0&sp=-1&sk= give no hit.

[02:26:13.0000] <kennyluck>
big5-uao or perhaps all big5 beyond CP950...

[02:26:45.0000] <foolip>
kennyluck, that just means that Bing doesn't decode Big5-UAO content properly, not that it's excluded from the results

[02:26:53.0000] <annevk>
maybe search engines would benefit from this standard too

[02:27:22.0000] <annevk>
kind of lame nobody has attempted to solve this thus far and just said "use Unicode"

[02:27:40.0000] <kennyluck>
foolip, ah, true. (Google handles a good amount of Kanas though).

[02:28:46.0000] <kennyluck>
annevk, every machine benefits from an encoding standard ;)

[02:29:11.0000] <foolip>
kennyluck, perhaps comparing the relative amount of Japanese content in .tw domains with the dotnetdotcom.org would give a clue if it's being discriminated against or not

[02:40:21.0000] <kennyluck>
In Google, site:www.ptt.cc gives me 14,100 results if I click "search all Japanese pages", and 17,800,000 if I don't. (This number is different in the zh-TW Google, very strange). This is about 0.08%.

[02:40:55.0000] <kennyluck>
(www.ptt.cc is arguably biased towards having more Japanese content, but I am not sure)

[02:54:47.0000] <kennyluck>
I guess I am willing to believe that BingAPI doesn't discriminate misencoded pages.

[03:11:32.0000] <annevk>
ok done: http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#indexes

[03:18:31.0000] <AryehGregor>
Has anyone ever proposed that CSS support "font-size: xxx-large" to match <font size=7>?

[03:18:36.0000] <AryehGregor>
The lack of such a value is really annoying for editing.

[03:18:55.0000] <annevk>
yes

[03:19:02.0000] <annevk>
not sure if it has been done formally

[03:19:23.0000] <AryehGregor>
Are there any objections?

[03:19:54.0000] <AryehGregor>
I mean, have there been?

[03:21:23.0000] <annevk>
don't remember

[03:21:40.0000] <AryehGregor>
/me will ask again

[03:27:58.0000] <annevk>
references.json does not include Unicode

[03:28:05.0000] <annevk>
go figure :)

[03:43:23.0000] <AryehGregor>
/me submits some feedback

[04:45:45.0000] <zcorpan>
does the table nesting guy on help@ want <datagrid>?

[04:55:43.0000] <zcorpan>
or maybe something like http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1465 ?

[05:16:31.0000] <annevk>
hmm

[05:16:45.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#index-gb18030-code-point is incorrect

[05:17:03.0000] <annevk>
in particular "Let offset be the last pointer in index gb18030 that is equal to or less than pointer and let code point offset be its corresponding code point." would not select the last pointer/code point pair

[05:17:24.0000] <annevk>
I cannot think of better wording without special casing the last range

[05:17:28.0000] <annevk>
anyone?

[05:17:56.0000] <annevk>
oh wait, that does work, lol

[05:23:58.0000] <annevk>
okay, gbk/gb18030 encoders defined

[05:26:39.0000] <annevk>
foolip: defined them in such a way btw that merging them is trivial

[05:45:44.0000] <annevk>
is this correct:

[05:45:50.0000] <annevk>
"emit two bytes whose value is 0x7E each"

[05:46:20.0000] <AryehGregor>
"is each 0x7E"

[05:47:02.0000] <annevk>
thanks, still sounds weird :)

[05:47:11.0000] <AryehGregor>
A little.

[05:49:26.0000] <jgraham>
s/is/are/

[05:49:36.0000] <jgraham>
Surely?

[05:49:51.0000] <jgraham>
Need plural agreement with "two"

[05:50:22.0000] <jgraham>
Otherwise I don't understand what you're trying to say, so it is confusing

[05:50:25.0000] <Philip`>
"emit the two bytes 0x7E 0x7E"?

[05:50:46.0000] <jgraham>
Yeah, or be shorter and more explicit :)

[05:51:12.0000] <gsnedders>
I'd drop the "each", at lesat

[05:51:17.0000] <gsnedders>
*least

[05:51:28.0000] <Philip`>
"emit(0x7E); emit(0x7E);"

[05:51:43.0000] <Philip`>
English is a rubbish language for pseudocode

[05:51:54.0000] <gsnedders>
So ill-defined.

[05:53:10.0000] <jgraham>
It's OK, some people have asked for specs to be written in javascript

[05:53:36.0000] <jgraham>
I can't wait for the great flame war of 2015 about whether it is acceptable to rely on ASI in a spec document

[05:53:57.0000] <gsnedders>
/me would quite like a spec that defined stuff in terms of algorithms in a formally defined language

[05:54:30.0000] <jgraham>
That's more or less like saying "I want a reference implementation"

[05:54:39.0000] <jgraham>
Not sure that the history of those is great

[05:55:32.0000] <Philip`>
To avoid the unfairness of picking a language that some people like and other people don't, all specs should write their algorithms in ABC

[05:56:03.0000] <jgraham>
The nice thing about English is because it's clearly ambiguous, people are more likely to yell at you if it is stupid rather than blindly assuming it is right just because it is written down

[05:56:24.0000] <Philip`>
(as per http://www.w3.org/TR/css3-color/#hsl-color)

[05:56:46.0000] <gsnedders>
jgraham: Well, how are the algorithms in HTML5 not a reference implementation, albeit in English?

[05:57:01.0000] <jgraham>
I guess Steven Pemberton likes ABC

[05:57:39.0000] <jgraham>
gsnedders: Because they are in English therefore not executable so people are less likely to blindly follow them without engaging their brain

[05:58:16.0000] <gsnedders>
jgraham: see the </sarcasm> bug in WebKit

[05:58:26.0000] <jgraham>
gsnedders: "less likely"

[06:01:03.0000] <smaug____>
hmm, html spec refers still to setAttributeNode

[06:02:03.0000] <smaug____>
kind, at least mentions it

[06:02:03.0000] <smaug____>
s/kind/kind of/

[06:05:12.0000] <annevk>
known bug

[06:05:59.0000] <AryehGregor>
gsnedders, wait, didn't the spec say to do nothing special for </sarcasm>?  Was that really them following the spec?

[06:09:43.0000] <gsnedders>
AryehGregor: They did do something special.

[06:09:52.0000] <AryehGregor>
Yes, which the spec didn't say to do.

[06:09:59.0000] <AryehGregor>
So they weren't blindly following the spec, right?

[06:10:04.0000] <AryehGregor>
Or did the spec originally say to do something special?

[06:10:06.0000] <gsnedders>
Indeed.

[06:10:23.0000] <gsnedders>
If they blindly followed the spec they wouldn't have had a bug, but as it was they deviated frm it.

[06:10:27.0000] <gsnedders>
*from

[06:11:08.0000] <Philip`>
The spec said to take a breath then process it like the "any other close tag" case, and they did the first step but not the second, I think

[06:11:13.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#hz-gb-2312-encoder

[06:11:42.0000] <Philip`>
Do the html5lib tests have coverage of that case now?

[06:12:06.0000] <gsnedders>
Philip`: Yes

[06:14:55.0000] <Philip`>
Good

[06:17:41.0000] <gsnedders>
(abarth wrote some which got upstream when fixing the bug)

[06:25:38.0000] <zewt>
adding "calling mime types media types" to the list of things people seem to insist on doing only to add to the net level of confusion in the world

[06:27:10.0000] <zewt>
in there with "calling KB KiB" and "python backtraces being upside down"

[06:35:52.0000] <annevk>
zewt: I have vague plans to define a better MIME spec at some point

[06:35:55.0000] <annevk>
prolly post URL

[06:55:27.0000] <zewt>
(whoops, that's another big one: URL/URI)

[06:56:41.0000] <annevk>
encoding -> charset? :p

[06:57:41.0000] <zewt>
that one's a bit different, since they really are just synonyms

[06:58:36.0000] <annevk>
in practice, sure

[06:58:40.0000] <zewt>
whereas there's the suggestion of subtle differences with the others (except nobody cares)

[06:58:49.0000] <annevk>
but a charset is like an index, and an encoding is like an encoding, in Encoding Standard terms

[06:58:57.0000] <zewt>
(well, minus backtraces; that's just some Python designer who hates everyone else)

[07:00:49.0000] <zewt>
i'd say if someone wants to mean something other than "a string protocol to encode a series of codepoints", they shouldn't use either of those words

[07:02:08.0000] <zewt>
anyway, off to work

[07:02:09.0000] <annevk>
yeah, agreed

[07:02:11.0000] <annevk>
but http://en.wikipedia.org/wiki/Character_encoding#Character_sets.2C_code_pages.2C_and_character_maps

[07:03:56.0000] <zewt>
i'd disagree with "distinct meanings" (a few people might try to use them like that, but I don't think that actually gives it a new meaning)

[07:04:08.0000] <zewt>
(except for codepage, which to me is very specifically Windows encodings)

[07:04:29.0000] <zewt>
(and IBM and DOS too I guess, if we go back far enough)

[07:04:58.0000] <zewt>
oh yeah. work. later :)

[07:21:28.0000] <MikeSmith>
zcorpan, annevk : please take a look at http://qa-dev.w3.org:8888/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C%21doctype%2520html%3E%250D%250A%3Ctitle%3E%3C%252Ftitle%3E%250D%250A%3Cinput%2520type%253Dimage%2520value%253Dfoo%2520alt%253Dbar%3E&showsource=yes now

[07:21:32.0000] <MikeSmith>
and let me know what you think

[07:23:50.0000] <zcorpan>
MikeSmith: A+

[07:24:01.0000] <MikeSmith>
yay

[07:26:14.0000] <zcorpan>
MikeSmith: what's the rule for "all types except ..." vs "... types only"? whatever's shorter?

[07:26:26.0000] <MikeSmith>
yep

[07:26:57.0000] <MikeSmith>
the list of allowed types for autocomplete is just ridiculously long

[07:30:28.0000] <MikeSmith>
I guess I can try having them all be "... types only" and see how it looks

[07:30:28.0000] <MikeSmith>
hmm, no, almost certain it's going to cause line breaks for many screens

[07:30:28.0000] <zcorpan>
"all types except file and image" looks nice but i'm less comfortable with "all types except hidden, range, color, checkbox, radio, file, submit, image, reset, and button"

[07:30:28.0000] <MikeSmith>
yeah

[07:30:28.0000] <MikeSmith>
ah yeah, the one for value would be huge too

[07:30:28.0000] <MikeSmith>
hugest

[07:30:28.0000] <MikeSmith>
if we listed the valid types instead of the invalid ones

[07:39:54.0000] <annevk>
MikeSmith: looks good, formatting could be better though

[07:40:10.0000] <annevk>
"accept file type only" does not make accept and file look distinct enough

[07:41:44.0000] <zcorpan>
annevk: why do they need to look more distinct?

[07:43:05.0000] <annevk>
I don't get what's going on when looking at it

[07:44:29.0000] <zcorpan>
ah. maybe it should be phrased differently?

[07:44:58.0000] <zcorpan>
"only when |type| is file"?

[07:45:42.0000] <annevk>
maybe, or maybe the conditions should be smaller, gray, or some such

[07:46:11.0000] <zcorpan>
that'd make people not read them, which seems opposite of what we want :-)

[07:48:37.0000] <annevk>
just different color then or parenthesis, dunno

[07:48:42.0000] <annevk>
something that makes them offset from the attribute

[07:52:20.0000] <zcorpan>
/me filed https://bugs.webkit.org/show_bug.cgi?id=84036

[07:59:18.0000] <zcorpan>
the typed array spec is a bit confusing in how it has IDL with variables

[08:00:27.0000] <zcorpan>
"interface TypedArray : ArrayBufferView {" where TypedArray is not the interface name, but is to be replaced with one of Int8Array, Uint8Array, etc

[08:01:46.0000] <zcorpan>
i don't understand why the members aren't all defined on ArrayBufferView and then the specific interfaces have no members

[08:02:59.0000] <zcorpan>
except the constant

[08:04:38.0000] <zcorpan>
maybe the setters need to be different?

[08:08:53.0000] <annevk>
so BlobBuilder is not even implemented unprefixed?

[08:08:59.0000] <annevk>
whoa

[08:10:03.0000] <gsnedders>
zcorpan: You need to do modulo arithmetic, so you need some internal property if they're all on ArrayBufferView.

[08:10:17.0000] <gsnedders>
(giving what your base is)

[08:10:23.0000] <jgraham>
annevk: And Microsoft won't drop it?

[08:10:31.0000] <gsnedders>
s/base/modulus/

[08:13:50.0000] <zcorpan>
annevk: i see WebKitBlobBuilder and MozBlobBuilder, no BlobBuilder (in webkit and gecko)

[08:14:08.0000] <zcorpan>
gsnedders: k

[08:45:01.0000] <annevk>
where's Gecko's implementation of iso-2022-kr to Unicode?

[08:55:36.0000] <dglazkov>
good morning, Whatwg!

[09:16:11.0000] <jgraham>
Things I have learnt: it is important not to get confused between ancestors and children

[09:18:47.0000] <Philip`>
Have you accidentally buried your children?

[09:20:47.0000] <ksweeney>
whoa…dark

[09:23:29.0000] <annevk>
every encoder apart from iso-2022-kr and big5 is now defined

[09:23:44.0000] <annevk>
the former because I should fix the decoder some and the latter because well, because it's big5 really

[09:23:46.0000] <annevk>
and big5 sucks

[09:56:53.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=1468 <--HTML is awesome

[09:57:00.0000] <jgraham>
(try that in WebKit/Gecko)

[09:57:39.0000] <annevk>
it's actually nice in that <frameset> is just another element

[09:58:00.0000] <annevk>
special casing <frameset> as HTML does is actually far less elegant I think

[09:58:18.0000] <annevk>
(that sites rely on any of this is absurd)

[09:58:51.0000] <annevk>
are you gonna file a bug on HTML jgraham?

[09:59:01.0000] <jgraham>
Well I assume this behaviour isn't deliberate but happened because (non-Opera) browsers didn't special case <frameset>

[09:59:25.0000] <jgraham>
I'm OK if you want to file the bug :)

[09:59:59.0000] <jgraham>
(but I can if you don't want to)

[10:16:47.0000] <TabAtkins>
jgraham: You'll want to subset CSS3 Text more carefully - there may still be some instability in some part of that.  The rest should be stable.

[11:17:20.0000] <jzaefferer>
hey MikeSmith, any news on the html validator?

[11:17:54.0000] <MikeSmith>
hey jzaefferer

[11:18:09.0000] <MikeSmith>
I'm waiting on hsivonen to review some patches I want to land

[11:18:20.0000] <MikeSmith>
but he seems to be busy lately

[11:18:28.0000] <MikeSmith>
I'll ping him again

[11:18:48.0000] <MikeSmith>
in the mean time, I will give you guys some jars you can use

[11:20:11.0000] <MikeSmith>
my main concern is that about if we actually release jars that contain a bunch of 3rd-party code, how to make sure we are complying with the licenses for all that 3rd-party stuff

[11:21:07.0000] <MikeSmith>
jzaefferer: anyway I will aim to have something for you this week

[12:19:06.0000] <jgraham>
TabAtkins: Thanks. Personally I don't want to subset anything at all :) Also I am a bit surprised that flexbox is now considered stable. Is that something that the WG agree with or is it just that there are a few implementations so you would have to be insane to change it now?

[12:20:37.0000] <TabAtkins>
The latter.

[12:20:50.0000] <TabAtkins>
I'm not changing anything without "OMG IT BROKEN" bugs.

[12:35:13.0000] <annevk>
jsbell: http://code.google.com/p/stringencoding/ looks awesome :)

[12:35:56.0000] <jsbell>
annevk: thanks. it's gone a bit overboard for proof-of-concept.

[12:37:01.0000] <jsbell>
annevk: I have tests for most of the encodings (via an index->python->encode->decode->encode->js pipeline); having issues with both kr encodings, not sure where the problem lies yet

[12:37:10.0000] <jsbell>
(haven't pushed that yet tho)

[12:37:39.0000] <annevk>
I guess the math could be wrong for the Korean encodings :/

[12:37:57.0000] <annevk>
I hope not, and I did check but it's not exactly pretty at the moment

[12:39:36.0000] <jsbell>
I'll ping you if I fail to make progress.

[12:43:21.0000] <annevk>
cool, the Encoding standard itself is almost complete now

[12:43:31.0000] <annevk>
iso-2022-kr encoder is the only encoder not defined

[12:43:44.0000] <annevk>
well and big5, still awaiting some research in that area

[12:44:51.0000] <annevk>
but prolly good enough for integration into HTML, DOM, XHR, etc.

[12:45:13.0000] <annevk>
and see if there's interest in defining "encoding sniffing"

[12:46:21.0000] <jgraham>
TabAtkins: OK, I guess you might be less insane than the group as a whole :)

[12:47:06.0000] <jgraham>
annevk: Cool

[12:47:09.0000] <TabAtkins>
Hey, don't write me off the crazy list.  I *did* rewrite the entire spec already.

[12:47:32.0000] <gsnedders>
TabAtkins: you be mad.

[12:51:42.0000] <annevk>
jgraham: yeah, I'm happy with progress today :)

[12:51:54.0000] <jwalden>
I believe "u mad bro" is the proper Internet lingo for that sentiment

[12:52:17.0000] <TabAtkins>
jwalden: Nah, that's a different sentiment.

[12:52:33.0000] <TabAtkins>
Alternate use of "mad".

[12:52:46.0000] <jwalden>
it can be repurposed

[12:52:57.0000] <jwalden>
memes are made to be repurposed

[12:54:01.0000] <gsnedders>
jwalden: Your face is made to be repurposed

[12:54:31.0000] <jwalden>
on that note, anyone who hasn't seen http://webkitmemes.tumblr.com/ and http://mozillamemes.tumblr.com/ and now http://qtmemes.tumblr.com/ and http://pulseaudiomemes.tumblr.com/ prepare to squander your free time for a bit :-D

[12:54:49.0000] <jwalden>
gsnedders: *trollface*

[12:55:17.0000] <jwalden>
quality varies for each, of course

[12:55:36.0000] <jwalden>
/me actually kind of agrees with kling that mozillamemes could do for more quality over quantity

[12:56:09.0000] <jwalden>
on the other hand, not sure I really want arbitrary-ish quality controls in place here, either :-)

[12:58:18.0000] <jgraham>
Hmm, I thought the only pulseaudio meme was "killed pulseaudio, sound started working"

[13:04:19.0000] <jgraham>
annevk: Happily the order thing is harder to get wrong than right since HTML defines an ordered list of descendant browsing contexts

[13:05:37.0000] <annevk>
normal traversal order?

[13:05:44.0000] <annevk>
I wonder what I did for Fullscreen

[13:06:10.0000] <jgraham>
Yeah, depth first

[13:06:31.0000] <jgraham>
Did you file a bug about the frameset thing btw?

[13:07:10.0000] <annevk>
let me check if it isn't already filed

[13:07:57.0000] <annevk>
I thought it was filed already, guess it isn't

[13:11:01.0000] <annevk>
jgraham: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16750

[13:13:00.0000] <jgraham>
annevk: Thanks

[13:29:22.0000] <zcorpan>
jgraham: do we have urls for the frameset thing?

[13:41:05.0000] <TabAtkins>
sync XHR during onbeforeunload is high on the list for why we're killing sync XHR, right?

[13:43:00.0000] <zcorpan>
can we make it throw in onbeforeunload?

[13:43:05.0000] <jwalden>
bite your tongue

[13:43:17.0000] <zcorpan>
i guess the answer is "no"

[13:43:22.0000] <annevk>
sync XHR in general is why we're killing it :)

[13:43:25.0000] <jwalden>
four-letter words are not to be spoken in this channel

[13:43:26.0000] <gsnedders>
jwalden: My tongue already hurts from doing that earlier, do I have to do that again?

[13:43:41.0000] <jwalden>
gsnedders: it gets easier and less painful the more you do it

[13:43:45.0000] <TabAtkins>
I'm just responding to the sync getImageDataHD thread where someone defends sync XHR by offering an example where he uses it in beforeunload.

[13:43:50.0000] <gsnedders>
Ah! Practice, right!

[13:43:54.0000] <annevk>
jwalden: y u no like HTML

[13:44:19.0000] <jwalden>
annevk: I spell it XHTML

[13:44:20.0000] <jgraham>
zcorpan: urls?

[13:44:33.0000] <jgraham>
Oh you mean sites that actually do that?

[13:44:36.0000] <jwalden>
or HTML5

[13:44:37.0000] <zcorpan>
jgraham: yeah

[13:44:40.0000] <zcorpan>
former

[13:44:41.0000] <jwalden>
/me imagines a slowpoke meme

[13:45:10.0000] <annevk>
you win :)

[13:45:18.0000] <annevk>
nn all!

[13:45:43.0000] <gsnedders>
nn!

[13:47:19.0000] <jwalden>
THE DAY IS MINE

[13:47:33.0000] <gsnedders>
jwalden: MINE is a four letter word.

[13:47:52.0000] <jwalden>
:-P

[13:49:02.0000] <zcorpan>
TabAtkins: so where's your parser spec?

[13:49:26.0000] <TabAtkins>
I'm in the middle of writing it.

[13:49:39.0000] <TabAtkins>
The completed tokenizer is at http://dev.w3.org/csswg/css3-syntax

[13:51:04.0000] <zcorpan>
TabAtkins: have you looked at http://simon.html5.org/specs/quirks-mode#the-hashless-hex-color-quirk and http://simon.html5.org/specs/quirks-mode#the-unitless-length-quirk ?

[13:51:51.0000] <TabAtkins>
zcorpan: I have!  I've modified the tokenzier to handle the hashless hex color quirk better (it retains the full representation of a number, so "000000" doesn't just collapse into "0").

[13:52:25.0000] <zcorpan>
TabAtkins: nice! btw there's also the style="{ color:red }" quirk that i haven't specified because i hope it can be dropped

[13:52:31.0000] <TabAtkins>
The unitless length quirk algorithm seems incomplete - I know Firefox supports unitless lengths in the 'font' shorthand and uses a simple heuristic to distinguish it from <number> line-height.

[13:53:04.0000] <TabAtkins>
Is that considered unnecessary?

[13:53:16.0000] <zcorpan>
TabAtkins: yeah i looked at some data and didn't find any page relying on this quirk working for the 'font' shorthand in web200904

[13:53:18.0000] <TabAtkins>
(If so, I can totally handle the unitless length quirk really easily to.)

[13:53:22.0000] <TabAtkins>
Okay, cool.

[13:53:34.0000] <TabAtkins>
That'll be in the parser stage.

[13:54:05.0000] <zcorpan>
nice

[13:54:28.0000] <TabAtkins>
I'm wondering if it makes sense to define parsing of Selectors and individual at-rules in Syntax, or delegate it?

[13:55:18.0000] <zcorpan>
dunno. i'll have to read css3-syntax some day

[13:55:38.0000] <TabAtkins>
Gimme another week or two and I'll be done enough for you to review the whole thing.

[13:55:51.0000] <TabAtkins>
Or you can review now, if you want.  Simon Sapin has been giving me feedback on the tokenizer.

[13:56:15.0000] <jgraham>
Dammit I guess I have to implement this :)

[13:56:27.0000] <zcorpan>
yeah it won't be right now since i'm gonna go to bed now :-)

[13:56:51.0000] <TabAtkins>
jgraham: If your current strategy produces the same output, no change is needed. ^_^

[13:58:41.0000] <jgraham>
TabAtkins: I personally don't have a current strategy :)

[13:59:07.0000] <jgraham>
I just need to imeplemt it due to an inability to see a Hixie-style parsing spec without wanting to implement it

[13:59:13.0000] <TabAtkins>
Oh, okay!

[13:59:18.0000] <Ms2ger>
zcorpan, wdyt about making the <font>/underline thing apply in all modes? Feasible?

[13:59:37.0000] <zcorpan>
Ms2ger: probably is, yeah

[13:59:50.0000] <zcorpan>
Ms2ger: do you know of any standards-mode pages relying on it?

[13:59:53.0000] <jgraham>
zcorpan: BTW I don't know of any sites that break due to having both frameset and body at once

[14:00:03.0000] <zcorpan>
jgraham: k

[14:00:11.0000] <jgraham>
But http://www.geoffchappell.com/ breaks in Opera due to replacing <body> with <frameset> at runtime

[14:00:18.0000] <Ms2ger>
zcorpan, no, I just don't like mode-differences

[14:00:58.0000] <zcorpan>
same here :-)

[14:00:58.0000] <jgraham>
And overall it should be a simplification when we fix that to just make frameset like a normal element rather than giving it special rules (I think)

[14:01:28.0000] <jgraham>
(which is presumably what other browsers do)

[14:01:28.0000] <zcorpan>
jgraham: yeah i can see that it can make layout simpler

[14:01:48.0000] <Ms2ger>
I can poke around a bit after I've removed <font font-weight> and BlobBuilder

[14:06:25.0000] <zcorpan>
ok i've made http://simon.html5.org/specs/quirks-mode#the-font-element-text-decoration-color-quirk always apply

[14:07:44.0000] <zcorpan>
/me -> sleep

[15:54:40.0000] <Hixie>
!summon abarth

[15:54:44.0000] <Hixie>
anyone got IE10?

[15:55:49.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1470


2012-04-17
[22:45:27.0000] <annevk>
TabAtkins: super awesome

[22:51:52.0000] <annevk>
mpt: http://www.mpt.net.nz/ :(

[22:51:58.0000] <annevk>
mpt: I was still subscribed

[22:52:51.0000] <annevk>
mpt: but not for "My Positive Thoughts" by "Mat"

[23:19:36.0000] <annevk>
hmm

[23:19:45.0000] <annevk>
so Gecko simply does not have a iso-2022-kr encoder?!

[23:19:56.0000] <annevk>
<!doctype html><meta charset=iso-2022-kr><a href="http://dump.testsuite.org/url/query-dump.php?q=test&#x3066;">test</a><script>var a = document.getElementsByTagName("a")[0]; alert(a.search) </script>

[23:20:03.0000] <annevk>
yields utf-8

[23:20:39.0000] <annevk>
Gecko: ?q=test%E3%81%A6 Opera/Chrome: ?%1B$)Cq=test%0E*F%0F

[23:23:39.0000] <annevk>
well, I'm going to define one anyway, objections can go into bugzilla

[23:49:44.0000] <annevk>
teehee http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#iso-2022-kr-encoder

[23:50:06.0000] <annevk>
guess I'll write a blog post about big5 now and call it a week :p

[23:50:29.0000] <annevk>
or maybe address some of those bugs / work on sniffing...

[00:46:30.0000] <nesta_>
good morning :)

[00:48:14.0000] <annevk>
morning

[01:21:57.0000] <MikeSmith>
annevk: http://qa-dev.w3.org:8888/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C%21doctype%2520html%3E%250D%250A%3Ctitle%3E%3C%252Ftitle%3E%250D%250A%3Cinput%2520type%253Dimage%2520value%253Dfoo%2520alt%253Dbar%3E&showsource=yes

[01:22:03.0000] <MikeSmith>
round 3

[01:24:19.0000] <annevk>
it would be awesome if after "Attribute value not allowed on element input at this point" you had ", because type is image"

[01:24:30.0000] <annevk>
is that feasible?

[01:24:40.0000] <MikeSmith>
no

[01:24:46.0000] <MikeSmith>
unfortunately

[01:25:15.0000] <annevk>
okay, how about highlighting the value attribute line in the overview below?

[01:25:25.0000] <MikeSmith>
oh

[01:25:29.0000] <MikeSmith>
that's a good idea

[01:25:33.0000] <MikeSmith>
that's doable

[01:25:54.0000] <MikeSmith>
very good idea

[01:25:56.0000] <annevk>
pretty awesome you put some much into this validator man

[01:26:04.0000] <annevk>
authors are gonna like it

[01:26:43.0000] <MikeSmith>
well one part's that not so awesome about it is we've had this bug open for more than 3 years now

[01:27:05.0000] <MikeSmith>
or rather, I think it was at least 3 years ago that people started filing bugs about this

[01:27:30.0000] <annevk>
Encoding standard has been bugging me for about four years now I think :)

[01:27:42.0000] <MikeSmith>
yeah, it's nice to get some of this stuff done

[01:27:53.0000] <MikeSmith>
I should have fixed this a long time ago

[01:47:50.0000] <jgraham>
So I'm behind. What's the latest state of callbacks in WebIDL (e.g. for event handler attributes)

[01:48:18.0000] <jgraham>
HTML defines interface Function with [Callback=FunctionOnly]

[01:48:31.0000] <jgraham>
But FunctionOnly doesn't seem to be defined in WebIDL

[01:53:20.0000] <annevk>
HTML needs to change that to "callback Function = any(any...)" iirc

[01:53:35.0000] <annevk>
plus something else

[01:53:40.0000] <annevk>
the nullable stuff

[01:53:50.0000] <annevk>
there's an open bug on HTML for that filed by me

[02:12:08.0000] <hsivonen>
jgraham: are the actual ringmark tests on github? I only see harness code there? what am I missing?

[02:12:34.0000] <jgraham>
hsivonen: They are in a different repo. somewhere

[02:12:54.0000] <jgraham>
If you have the facebook blogpost open somewhere it links to both

[02:13:33.0000] <jgraham>
https://github.com/coremob/coremob-tests/ perhaps?

[02:14:00.0000] <jgraham>
Oh no that's the harness

[02:15:19.0000] <hsivonen>
right

[02:15:33.0000] <jgraham>
FWIW Tobie seemed to agree that the current way that prefixes are tested is broken, although I think we disagree on the magnitude of the breakage

[02:16:43.0000] <hsivonen>
it would be nice if the CSS WG rescinded the policy that leads to such breakage

[02:17:04.0000] <hsivonen>
so that a CG didn't need to figure out how to deal with the fruits of the policy

[02:18:25.0000] <jgraham>
Indeed. Sadly it looks like even money on that and hell freezing over

[02:18:25.0000] <annevk>
http://annevankesteren.nl/2012/04/big5

[02:18:55.0000] <jgraham>
annevk: Over 9000 what?

[02:20:00.0000] <annevk>
search for "over 9000"

[02:20:35.0000] <annevk>
but also pointer/code point mappings

[02:22:06.0000] <jgraham>
Sigh, young people.

[02:22:58.0000] <annevk>
oh, I never watched that show

[02:23:08.0000] <annevk>
I just know about the meme

[03:04:57.0000] <annevk>
http://wiki.whatwg.org/wiki/Encoding

[04:45:06.0000] <annevk>
smaug____: we can fix intersectsNode, no problem

[04:45:38.0000] <smaug____>
annevk: you mean Opera?

[04:45:41.0000] <smaug____>
that would be nice

[04:45:47.0000] <smaug____>
the current API is strange

[05:17:49.0000] <zcorpan>
TabAtkins: do we need to allow parsers to abort for syntax errors?

[05:18:20.0000] <zcorpan>
TabAtkins: html needs that because it's incompatible with streaming, but css probably doesn't

[05:19:00.0000] <annevk>
validator might want it

[05:19:39.0000] <zcorpan>
"Conformance checkers are not required to recover from parse errors."

[05:24:28.0000] <zcorpan>
TabAtkins: shouldn't there be a step using the charset of the parent stylesheet or document (that linked the stylesheet)?

[05:33:19.0000] <zcorpan>
which svg attributes take a css number with scientific notation?

[05:36:05.0000] <zcorpan>
"For example, scientific notation is allowed in attributes, including presentation attributes, but not in style sheets." is what i find in svg1.1

[05:41:34.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1475

[05:41:53.0000] <zcorpan>
seems webkit doesn't support hashless colors in svg attributes at all

[05:43:09.0000] <zcorpan>
i guess that's a good approach, but i dunno how it should be specced

[05:44:00.0000] <zcorpan>
oh, actually, since the quirks spec only applies it to a number of properties, i guess it automatically doesn't apply to any of the svg attributes (unless they map to one of those properties or something)

[06:17:48.0000] <annevk>
wait all of css is now in https://dvcs.w3.org/hg/csswg/

[06:17:54.0000] <annevk>
but they keep using dev.w3.org URLs?

[06:18:04.0000] <annevk>
confusing

[06:18:22.0000] <annevk>
and getting the changelog per draft is somewhat hard too

[06:22:43.0000] <davidb>
ygoat

[06:25:41.0000] <annevk>
smaug____: fixed

[06:25:53.0000] <annevk>
smaug____: dom spec that is, not Opera :)

[06:27:36.0000] <smaug____>
thanks

[06:27:53.0000] <smaug____>
Ms2ger can now update his patch

[06:27:57.0000] <smaug____>
or her

[06:28:00.0000] <smaug____>
we never know

[06:28:14.0000] <annevk>
CORE-45741 is the bug on Opera for those with access

[06:28:15.0000] <smaug____>
its

[06:37:45.0000] <zewt>
somebody splitting a thread to title case a subject: one of the more bizarre things i've seen on mailing lists in a while

[06:39:25.0000] <annevk>
where is this?

[06:40:29.0000] <zewt>
webapps

[06:40:45.0000] <zewt>
subject Re: IndexedDB: Retrieving A Slice Of A Record Value.

[06:40:58.0000] <zewt>
somebody at opera, no less :)

[06:47:58.0000] <hsivonen>
do we have a spec for generating a Document when an image, plug-in, video or audio file is loaded into a browsing context?

[06:48:13.0000] <smaug____>
is there any way to get notified when a spec changes

[06:48:18.0000] <smaug____>
(not whatwg html)

[06:48:28.0000] <smaug____>
annevk: like for DOM4

[06:48:45.0000] <smaug____>
hsivonen: I thought html spec defines that

[06:48:52.0000] <smaug____>
at least for images

[06:48:59.0000] <smaug____>
I could be wrong

[06:49:54.0000] <zcorpan>
smaug____: http://dvcs.w3.org/hg/domcore/shortlog has a feed

[06:51:26.0000] <smaug____>
zcorpan: thanks

[06:51:49.0000] <zcorpan>
TabAtkins: "Otherwise, if the next input character is a digit, or the next 2 input characters are U+002D HYPHEN-MINUS (-) followed by a digit, switch to the number state.", is --1 supposed to go to the number state?

[06:52:59.0000] <hsivonen>
smaug____: OK. then I need to figure out what words to search for. (not "image" apparently!)

[06:53:37.0000] <annevk>
hsivonen: "page load processing"

[06:53:56.0000] <annevk>
"Page load processing model for media" in particular, section 666

[06:54:56.0000] <zcorpan>
TabAtkins: hashless looks if there's a comment between the "+" or "-" delim and the number/dimension/ident token, but your tokenizer seems to not emit comments

[06:55:02.0000] <hsivonen>
annevk: apt section number considering how bad readyState is in Gecko in that case

[06:55:07.0000] <smaug____>
hsivonen: I can't find it either

[06:55:26.0000] <smaug____>
section 666 sounds evil :)

[06:55:43.0000] <hsivonen>
ok. so the spec allows adding random stuff to <head>.

[06:55:44.0000] <zcorpan>
TabAtkins: or, hmm, actually it tries to skip comments, so that's good

[06:55:55.0000] <hsivonen>
I expected the code I saw to be non-compliant.

[06:56:02.0000] <hsivonen>
but seems to be compliant!

[07:00:24.0000] <zewt>
annevk: heh, good luck with sniffing, that seems like something implementors would be loathe to touch (since any change will doubtless break some pages while fixing others)

[07:02:06.0000] <annevk>
doesn't seem that different from any other change

[07:02:33.0000] <zewt>
the nasty part is that in some browsers (IE, at least), it's based on the user's system language ... doesn't matter if that's specced, it's inherently zero interop

[07:03:13.0000] <zewt>
well, it's a lot more fuzzy

[07:04:58.0000] <hsivonen>
zewt: since the system language is IE's UI language, that's not much worse that Firefox's default behavior depending on the Firefox UI language

[07:05:35.0000] <zewt>
hsivonen: i'd phrase that the other way around: "firefox isn't much better" :) (don't recall how FF handles things off-hand)

[07:06:23.0000] <zewt>
i think the big problem is going to be that no matter what heuristics are used, they're going to be less "reliable" for same-language users (users reading pages in their own language) than depending on the user's language, which will make it hard to get browsers to stop doing that

[07:06:39.0000] <zewt>
worth a try

[07:07:22.0000] <hsivonen>
IIRC someone told me in Opera the domain name the document is served from factors into the heuristic...

[07:07:36.0000] <hsivonen>
TLD that is

[07:08:12.0000] <zewt>
heh, yuck--taking a document and putting it on a different website shouldn't make it stop working :|

[07:08:24.0000] <zewt>
but, well, heuristics are yuck by nature...

[07:09:02.0000] <jgraham>
Well opening it in teh same browser confiugured to a different locale shouldn't either, but…

[07:09:15.0000] <hsivonen>
I think using the TLD is less evil than relying on the UI language

[07:09:19.0000] <zewt>
lots of unmet "shouldn't"s when it comes to encoding compat :)

[07:11:15.0000] <zewt>
afk

[08:23:55.0000] <dglazkov>
good morning, Whatwg!

[09:43:07.0000] <kennyluck>
"Easter edition quiz! The CSS 2.1 spec has at least one easter egg. Can you find one?" refers to what?

[09:44:08.0000] <kennyluck>
(There are many errors in CSS 2.1 but none of which I would call easter egg.)

[09:44:45.0000] <TabAtkins>
kennyluck: Read his later tweet!

[09:44:51.0000] <TabAtkins>
I and dbaron and others point out some of them.

[09:45:46.0000] <kennyluck>
TabAtkins, ah. I should have done that. Thanks.

[09:46:28.0000] <kennyluck>
Well that one… isn't very entertaining either :p

[09:46:57.0000] <TabAtkins>
That's because you're an hollow, humorless shell of a person.

[09:47:42.0000] <kennyluck>
= =

[09:48:51.0000] <annevk>
that went dark fast

[09:49:02.0000] <TabAtkins>
^_^

[09:50:26.0000] <annevk>
Velmont: filing a bug on your server-sent events issue might be good

[09:50:35.0000] <annevk>
Velmont: dunno how much Hixie monitors public-webapps these days

[10:05:21.0000] <Velmont>
annevk: It was just as much to also get discussion about it. Should I cross-post to WHATWG?

[10:05:57.0000] <Velmont>
s/discussion/some answers/  :P

[10:46:20.0000] <jscheel>
hello everyone, I'm a little confused on the property attribute of meta tags. If I use the name attribute, the name is validated against http://wiki.whatwg.org/wiki/MetaExtensions, but if I use property, it isn't. What's the difference?

[10:47:16.0000] <TabAtkins>
Is "property" from RDFa or something?

[10:47:17.0000] <webben>
jscheel: Well, they're different.

[10:47:19.0000] <webben>
yes

[10:47:27.0000] <TabAtkins>
That would be why, then.

[10:48:20.0000] <webben>
jscheel: the design of meta@name fights naming collisions with a wiki. the design of meta@property fights naming collisions with namespaces.

[10:49:08.0000] <jscheel>
webben: so, I just want to have <meta name="company:property" content="content"> or <meta property="company:property" content="content">

[10:49:33.0000] <webben>
what are those?

[10:49:58.0000] <webben>
jscheel: What do you want clients to do with that markup? What's it for?

[10:50:02.0000] <jscheel>
webben: just custom settings that will be parsed my a decorator

[10:50:37.0000] <webben>
jscheel: Do you mean you're going to do something in your JS with that data?

[10:51:06.0000] <jscheel>
webben: actually, it will be parsed server-side. I am using html as a theming engine, sort of the way tumblr does it

[10:51:35.0000] <jscheel>
webben: for example, tumblr has this in a theme definition: <meta name="text:Disqus Shortname" content="" />

[10:51:35.0000] <webben>
jscheel: Well, either way, that's what @data-* was designed for.

[10:52:04.0000] <jscheel>
webben: hmm, that's true, they could just be data attributes on the html tag

[10:52:11.0000] <webben>
<html data-yourframework-company="whatever">

[10:52:17.0000] <TabAtkins>
Yeah, if you're just putting information into the markup that you'll use in some scripts in the page, use the data-* attributes.

[10:52:24.0000] <jscheel>
webben: I didn't even think about doing it that way

[10:52:29.0000] <jscheel>
that makes WAY more sense

[10:52:33.0000] <webben>
:)

[10:52:39.0000] <jscheel>
thanks!

[10:58:01.0000] <jscheel>
webben: so, do multiple data attributes work the same way as meta tags? iirc, if you have two keywords metatags, the spec is to concat and uniq them. If I have two data-palette tags on the same element, should the be put into an array when accessed via javascript?

[10:59:06.0000] <webben>
er... i imagine repeating any attribute is an error

[11:00:16.0000] <webben>
jscheel: If you want to embed a list, I'd be inclined to use a simple separator (whitespace often works well).

[11:00:39.0000] <webben>
jscheel: @data-yourframework-palette="green red beige"

[11:01:03.0000] <webben>
commas is another good choice

[11:01:17.0000] <webben>
if you need a list of arbitrary strings, you could embed JSON rather than inventing your own format

[11:01:34.0000] <TabAtkins>
Yes to everything @webben just said.

[11:01:54.0000] <webben>
@data-yourframework-keyphrases='["foo","bar","baz"]'

[11:02:06.0000] <jscheel>
webben: TabAtkins: here's what I've been struggling with: http://pastie.org/3805737

[11:02:28.0000] <jscheel>
I'm trying to make it easy enough for a designer / front-end coder to use

[11:02:58.0000] <TabAtkins>
That first block of code seems fine.

[11:04:24.0000] <jscheel>
TabAtkins: so then just match data-theme-palette-* when pulling the content?

[11:04:30.0000] <webben>
pretty much

[11:04:53.0000] <webben>
(I'd add -yourframework- in to avoid collisions with random JS or whatever your frontenders want to include)

[11:05:05.0000] <jscheel>
webben: ah, true

[11:05:40.0000] <jscheel>
webben: TabAtkins: thanks for working through this with me

[11:05:44.0000] <webben>
yw

[11:06:44.0000] <TabAtkins>
zcorpan: If you see this later, that was a c&p typo. It's meant to be U+002E FULL STOP, not U+002D.

[11:07:09.0000] <TabAtkins>
I presume my brain was infected by the U+002D case immediately prior for recognizing a cdc token, and then I copied it up into the + state.

[12:23:05.0000] <rafaelw_>
hsivonen: any chance you'll have a chance to evaluate dimitri's parser changes for <template>?

[12:24:25.0000] <jgraham>
rafaelw_: (hsivonen probably isn't around right now)

[12:24:33.0000] <jgraham>
But I should look at those too

[12:25:08.0000] <rafaelw_>
Please do. I'd appreciate that. Do you have the email already?

[12:48:26.0000] <jgraham>
It was sent to whatwg, I think?

[12:48:37.0000] <jgraham>
Or was there another more secret one? ;)

[12:49:12.0000] <jgraham>
Oh webapps. But thanksa for re-forwarding it

[12:49:22.0000] <jgraham>
I will try to look tomorrow; kind of late here now

[12:50:46.0000] <jgraham>
My first comment is "have you looked for people using <template> elements in the wild and not expecting magic behaviour?"

[12:51:07.0000] <jgraham>
Presumably this is quite easy to do if you are working for Google :)

[12:54:04.0000] <TabAtkins>
It's not easy, but it's not particularly hard.

[12:54:35.0000] <jgraham>
Well for the rest of us it is particularly hard, so if you are working for Google it is quite easy by comparison :p

[12:58:54.0000] <Philip`>
http://philip.html5.org/data/tag-count-pages.txt says 3 pages out of 130K have <template>

[13:28:28.0000] <kennyluck>
I am surprised to see <html> <head> having the same number of occurrence.

[13:50:01.0000] <Philip`>
kennyluck: That's because the URL is lying, it's counting elements instead of tags

[13:50:08.0000] <Philip`>
kennyluck: and the parser always inserts html and head elements

[13:52:58.0000] <kennyluck>
Philip`, ah, OK.

[14:05:08.0000] <Matt______>
Would this be a good channel to ask a question about WebRTC?  If so, is there a webrtc api for sending text/data to other browsers, and not just video and audio?

[15:24:48.0000] <zewt>
Hixie: where should I file a bug for the CSS "balanced" word wrapping mode for WebVTT? (http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-December/034026.html)

[15:24:56.0000] <zewt>
(unless it's already filed; dunno)

[15:25:54.0000] <zewt>
(if that has to go to the CSSWG or something, then I'll let somebody familiar with them deal with it)

[15:30:50.0000] <TabAtkins>
zewt: That (or things like that) have been proposed before, but it's an O(n^2) algorithm to do.

[15:31:07.0000] <TabAtkins>
And thus kinda hard to put in CSS, in case people apply it to their whole page, filled with large paragraphs.

[15:36:41.0000] <TabAtkins>
If we put it into Text, it'd have to be something that UAs are allowed to ignore.

[15:37:09.0000] <TabAtkins>
Send it to www-style with a title starting with "[css4-text]"

[15:37:32.0000] <TabAtkins>
fantasai says it was previously in Text 3, but it was badly-defined.

[15:42:08.0000] <zewt>
seems like it shouldn't need to be exponential, at least naively

[15:42:35.0000] <TabAtkins>
It's not exponential.  It's n^2.

[15:42:40.0000] <TabAtkins>
That's polynomial, dude.

[15:42:46.0000] <zewt>
not particularly interested in dealing with more mailing lists, though

[15:42:50.0000] <zewt>
d00d

[15:53:22.0000] <Matt______>
is there a webrtc api for sending text/data to other browsers, and not just video and audio?  kinda like p2p websockets?  I remember reading that webrtc had the ability to send data, and not only video/audio, but I couldn't find much more information on the topic

[16:24:53.0000] <arunranga>
/me wonders if it's worth defining "microtask" since we've got "Perform a microtask checkpoint" defined.

[16:29:09.0000] <Matt______>
with regards to my question earlier, I found that instead of webrtc, you could just use shared workers

[16:29:38.0000] <WeirdAl>
hi arun :)

[16:42:10.0000] <zewt>
https://zewt.org/~glenn/wrapping.py naive attempt at balanced wrapping; linear time on the length of the string

[16:49:32.0000] <TabAtkins>
Ah, yes, indeed.  I forgot that the n^2 part comes in when you try to balance the justification, too.

[16:50:00.0000] <TabAtkins>
The problem is still actually n^2 even with your simple attempt if you want *perfect* balancing.

[16:50:18.0000] <zewt>
"perfect or nothing" is the cause of more useless programmer headaches :)

[16:50:20.0000] <TabAtkins>
But if you're willing to accept somewhat non-optimal solutions, a greedy algorithm does well in non-degenerate cases and is linear.

[16:51:08.0000] <zewt>
i'll always take a suboptimal solution over none at all

[16:51:24.0000] <zewt>
(and I doubt it's suboptimal enough to matter)

[16:59:18.0000] <TabAtkins>
zewt: ...why are you calculating the width of a word by summing the index of each letter in the alphabet?


2012-04-18
[17:00:41.0000] <zewt>
the "widths" is just a fake character-width mapping; the values are only chosen to be non-random

[17:04:13.0000] <TabAtkins>
Ah, okay.  It's not very useful as a demonstration, then, since they're very off (and the first part of the alphabet is negative-width).

[17:04:53.0000] <zewt>
well, it's outputting in a fixed-width terminal, so it's not going to look like it really would anyway, heh

[17:05:00.0000] <zewt>
(also in reality you've got kerning, etc. to cope with)

[22:48:39.0000] <Von_Davidicus>
I have just learned that using HTML5 + SVG alleviates an inconsistency in browser implementation of JavaScript.

[22:49:46.0000] <Von_Davidicus>
Specifically, whether or not to include the SVG prefix.

[22:51:53.0000] <Von_Davidicus>
Some browsers (like Firefox and Internet Explorer) say "Thou Shalt."  Others (like Opera, Chrome, and Safari) say "Thou Shan't."

[22:56:27.0000] <Von_Davidicus>
Since you don't need to use the prefix in HTML5, it becomes a non-issue.

[23:49:43.0000] <hsivonen>
yeah, I should review dglazkov's parser change proposal. sorry about the delay.

[23:52:39.0000] <hsivonen>
so when a parser gets aborted, the document's readyState in Gecko goes from "loading" to "complete" without going through "interactive"

[23:52:48.0000] <hsivonen>
is there any spec-based justification for that?

[00:01:47.0000] <annevk>
hmm

[00:01:50.0000] <annevk>
html5.org gives 500 errors

[00:03:17.0000] <hsivonen>
hg blame points to sicking for the readyState oddity, but he's on vacation. :-(

[00:03:35.0000] <Hixie>
hsivonen: looks like the spec doesn't change readyState when the parser is aborted

[00:03:56.0000] <Hixie>
i doubt this is an especially well tested area of the spec though

[00:04:00.0000] <hsivonen>
Hixie: not even to "complete"?

[00:04:15.0000] <Hixie>
nothing mentions changing it when a document or parser is aborted

[00:04:36.0000] <Hixie>
you also don't fire 'load', etc

[00:04:53.0000] <hsivonen>
Hixie: I tought data was discarded from the parser but the parser still went through "the end"

[00:05:00.0000] <hsivonen>
*thought even

[00:05:06.0000] <Hixie>
oh hm maybe, let me check again

[00:05:41.0000] <Hixie>
no, "abort a parser" doesn't really do anything except a hard stop

[00:05:51.0000] <Hixie>
again, though, this may be severely undertested

[00:06:43.0000] <hsivonen>
this spec thing was supposed to spare me of testing what other browsers do

[00:08:14.0000] <Hixie>
well you're welcome to do what the spec says :-)

[00:08:28.0000] <Hixie>
if everyone does that, then we'll all be interoperable :_)

[00:08:30.0000] <annevk>
hmm

[00:08:51.0000] <annevk>
so both Unicode and the utf-8 RFC don't say anything about five and six byte sequences anymore

[00:08:53.0000] <nesta_>
good morning! :)

[00:08:58.0000] <annevk>
morning

[00:09:13.0000] <annevk>
guess that makes the case of having a utf-8 decoder in the spec more compelling

[00:09:25.0000] <hsivonen>
Hixie: I doubt I'd get r+ for leaving readyState to "loading" when the throbber has stopped

[00:09:32.0000] <annevk>
Hixie: btw, any concerns about integrating with http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html in due course?

[00:09:44.0000] <hsivonen>
Hixie: without proof of other browsers doing so

[00:09:59.0000] <annevk>
Hixie: quite a lot of the encoding related stuff would be simplified per my analysis

[00:10:26.0000] <Hixie>
hsivonen: convince another browser to follow the spec first? :-)

[00:10:50.0000] <Hixie>
annevk: sgtm

[00:10:59.0000] <hsivonen>
Hixie: I'd still have to test the other browser

[00:11:16.0000] <Hixie>
hsivonen: you could hope they wrote the tests as part of checking in the code

[00:11:32.0000] <Hixie>
annevk: "The Encoding" lol

[00:12:23.0000] <Hixie>
annevk: wasn't there some punctuation stripping on encoding names too?

[00:15:45.0000] <annevk>
no, just whitespace

[00:15:59.0000] <annevk>
it used to be punctuation and we changed that because it was incompatible

[00:16:04.0000] <Hixie>
ah k

[00:16:42.0000] <Hixie>
this is pretty awesome

[00:16:54.0000] <Hixie>
basically means i can drop all mention of the IANA charset registry, right?

[00:17:00.0000] <annevk>
yes

[00:17:11.0000] <Hixie>
fantastic!

[00:17:12.0000] <annevk>
and the special utf-8 text

[00:17:15.0000] <Hixie>
/me claps his hands

[00:22:34.0000] <MikeSmith>
annevk: http://qa-dev.w3.org:8888/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C%21doctype%2520html%3E%250D%250A%3Ctitle%3E%3C%252Ftitle%3E%250D%250A%3Cinput%2520type%253Dimage%2520value%253Dfoo%2520alt%253Dbar%3E&showsource=yes

[00:22:38.0000] <MikeSmith>
now with highlighting

[00:22:54.0000] <MikeSmith>
zcorpan: ↑

[00:23:14.0000] <zcorpan>
:thumbsup:

[00:23:45.0000] <zcorpan>
"formnovalidate" gets split on two lines for me

[00:24:05.0000] <MikeSmith>
yeah, I noticed that problem in opera

[00:24:10.0000] <MikeSmith>
I don't know how to fix that

[00:24:16.0000] <annevk>
nice

[00:25:55.0000] <hsivonen>
Objection and revert request at the HTML WG over dropping IANA registry mention coming up in 1, 2, 3, ...

[00:26:50.0000] <zcorpan>
MikeSmith: .inputattrname { word-wrap:normal }

[00:27:24.0000] <MikeSmith>
zcorpan: OK, will make that change

[00:37:15.0000] <jgraham>
hsivonen: BTW if you were going to write some tests for this, I would be especially interested in them :)

[00:39:50.0000] <zcorpan>
heycam|away: why does Array[] conversion from JS value to IDL value not accept a user object like {'0':'foo', 'length':1}? (it uses the same rule as sequence<T> which throws TypeError for user objects, if i'm reading it correctly)

[00:46:03.0000] <MikeSmith>
zcorpan: can you please re-check and confirm if that wrapping problem is fixed?

[00:46:37.0000] <MikeSmith>
btw, I couldn't reproduce that in Opera on OSX

[00:46:41.0000] <MikeSmith>
only on Opera Mobile

[00:46:58.0000] <MikeSmith>
maybe it's a Linux bug

[00:47:26.0000] <MikeSmith>
hsivonen: when you have a minute to look at http://qa-dev.w3.org:8888/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C%21doctype%2520html%3E%250D%250A%3Ctitle%3E%3C%252Ftitle%3E%250D%250A%3Cinput%2520type%253Dimage%2520value%253Dfoo%2520alt%253Dbar%3E&showsource=yes please let me know what you think

[00:49:25.0000] <hsivonen>
MikeSmith: cool

[00:50:03.0000] <MikeSmith>
will send you the patch

[00:50:40.0000] <hsivonen>
MikeSmith: since <input> is special-cased, did you actively decide to list all the attributes for <input> instead of showing a pruned list for each <input type=foo>?

[00:51:02.0000] <hsivonen>
(I'm not suggesting that either is the right way. Just wondering what was considered.)

[00:51:56.0000] <MikeSmith>
I did consider listing only the ones for each type, but it seems useful to have them all shown in context, so that the user can see where they are allowed and not allowed

[00:51:58.0000] <zcorpan>
MikeSmith: i have OS X

[00:52:03.0000] <hsivonen>
actually, showing them all is probably a good way to pre-empt "but <input> does have attribute foo. the validator is wrong"

[00:52:09.0000] <hsivonen>
MikeSmith: ok. let's get this landed

[00:52:11.0000] <MikeSmith>
hsivonen: bingo

[00:52:14.0000] <MikeSmith>
OK

[00:52:40.0000] <MikeSmith>
zcorpan: strange. I couldn't reproduce it in either 11.6 nor Opera.Next

[00:53:06.0000] <zcorpan>
MikeSmith: did you try making the window narrower?

[00:53:20.0000] <MikeSmith>
ah

[00:53:24.0000] <MikeSmith>
yeah, that's right

[00:53:37.0000] <MikeSmith>
I was just looking at in at normal width

[00:54:31.0000] <MikeSmith>
zcorpan: OK, yeah, so it does seem to be fixed now. Right?

[00:55:51.0000] <zcorpan>
MikeSmith: class="highlight" the semanticists and accessibility-ists will haunt you :-)

[00:56:02.0000] <MikeSmith>
heh

[00:56:14.0000] <MikeSmith>
I guess I should change that

[00:56:18.0000] <MikeSmith>
suggestions?

[00:56:41.0000] <zcorpan>
source highlight uses <b>

[00:56:44.0000] <MikeSmith>
hmm, "highlight" is not presentational

[00:57:36.0000] <MikeSmith>
anyway, I can tweak that stuff later I guess

[00:58:10.0000] <annevk>
hsivonen: lets see what happens to https://www.w3.org/Bugs/Public/show_bug.cgi?id=16768

[01:07:58.0000] <MikeSmith>
hsivonen: patch sent

[01:13:36.0000] <hsivonen>
MikeSmith: Java could use some syntactic sugar for literal initializers for collections...

[01:13:45.0000] <hsivonen>
JavaScript FTW

[01:13:48.0000] <MikeSmith>
heh

[01:13:49.0000] <MikeSmith>
yeah

[01:25:54.0000] <hsivonen>
MikeSmith: thanks. reviewed.

[01:26:01.0000] <MikeSmith>
thanks

[01:49:39.0000] <hsivonen>
pulseaudio got memes. still waiting for Opera and IE: http://pulseaudiomemes.tumblr.com/

[02:50:59.0000] <hsivonen>
is there a JS-exposed way to abort a document without immediately causing navigation away from the document?

[02:52:47.0000] <annevk>
there was window.stop() at some point I thought

[02:53:22.0000] <annevk>
hmm

[02:53:25.0000] <annevk>
"The stop() method on Window objects should, if there is an existing attempt to navigate the browsing context and that attempt is not currently running the unload a document algorithm, cancel that navigation and any associated instances of the fetch algorithm. Otherwise, it must do nothing."

[02:53:44.0000] <annevk>
I forgot whether it's called navigating if a document is loading

[02:54:06.0000] <jgraham>
Yeah I was thinking the same

[02:54:48.0000] <jgraham>
I'm not sure if "cancel the navigation" is the same as "abort the document"

[02:55:59.0000] <jgraham>
Seems like it isn't per spec

[02:56:51.0000] <jgraham>
Or at least, I don't really know how "cancel the navigation" is defined

[02:57:32.0000] <jgraham>
But the navigation algorithm cancels previous navigations and aborts as a seperate step

[02:59:14.0000] <hsivonen>
readyState in Firefox is flaky, episode 42: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1478

[02:59:40.0000] <hsivonen>
I'm increasingly unhappy about readyState support landing without thorough assertions

[02:59:47.0000] <hsivonen>
bonus points for test cases

[03:01:56.0000] <hsivonen>
the above case I fixed for Firefox 14

[03:02:53.0000] <jgraham>
hsivonen: Can we expect to you make a W3C-sharable testsuite gor this (hint ;)

[03:02:57.0000] <jgraham>
*for

[03:04:12.0000] <hsivonen>
jgraham: not a safe expectation, unfortanately

[03:04:57.0000] <hsivonen>
I do plan to add fatal-in-debug-builds assertions to make sure people don't get to regress this stuff easily

[03:09:33.0000] <jgraham>
/me is pretty sure that the Mozilla Manifesto requires writing sharable tests ;)

[03:09:58.0000] <hsivonen>
Opera Next fires onload after window.stop()

[03:10:05.0000] <hsivonen>
Firefox and Chrome don't

[03:10:32.0000] <hsivonen>
Chrome transitions to readyState == "complete" synchronously upon window.stop(), which worries me

[03:10:56.0000] <hsivonen>
I'd expect a transition to "interactive" and an async transition to "complete" later

[03:11:02.0000] <jgraham>
The Opera thing sounds like a bug

[03:11:29.0000] <hsivonen>
jgraham: shareable test case: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1479

[03:11:56.0000] <hsivonen>
I believe the Mozilla Manifesto doesn't require filing Opera bugs after pointing them out on IRC :-)

[03:11:57.0000] <annevk>
why should load not fire?

[03:12:37.0000] <jgraham>
hsivonen: Point :)

[03:12:41.0000] <jgraham>
annevk: Why would it?

[03:12:51.0000] <hsivonen>
IE9 doesn't support window.stop()

[03:13:24.0000] <annevk>
jgraham: nothing delays the load event anymore

[03:15:08.0000] <annevk>
kind of depends on how all the algorithms hook into each other of course

[03:15:11.0000] <annevk>
there's quite a lot of them

[03:15:12.0000] <jgraham>
annevk: Where is the load event fired?

[03:15:20.0000] <annevk>
when you stop parsing

[03:15:39.0000] <hsivonen>
I expected the load event not to fire when aborting

[03:15:44.0000] <annevk>
well an async process is started at that point

[03:15:45.0000] <jgraham>
Hmm, maybe that is still called if you abort the navigation then

[03:15:53.0000] <jgraham>
s/abort/cancel/

[03:16:04.0000] <hsivonen>
window.stop() in Gecko and WebKit seems to abort

[03:16:09.0000] <jgraham>
But "cancel the navigation" isn't obviously well defined

[03:16:09.0000] <hsivonen>
at least superficially

[03:16:46.0000] <hsivonen>
I'm going to be unhappy if Facebook depends on the details of this stuff

[03:19:34.0000] <hsivonen>
boo. IE10 doesn't support window.stop()

[03:19:44.0000] <smaug____>
what?

[03:20:19.0000] <hsivonen>
smaug____: Object doesn't support property or method 'stop' on line 3

[03:20:20.0000] <jgraham>
So does anyone disagree that "cancel the navigation" is undefined? If so, where is it defined? Otherwise I will file a bug

[03:21:09.0000] <hsivonen>
which browsers fire event for readyState transitions?

[03:21:15.0000] <hsivonen>
*events

[03:21:44.0000] <hsivonen>
do any?

[03:22:38.0000] <hsivonen>
Chrome does

[03:23:11.0000] <hsivonen>
even worse, it looks like it indeed transitions straight from "loading" to "complete"

[03:23:34.0000] <hsivonen>
sigh. is skipping "interactive" in some cases an IEism that Gecko and WebKit emulate?

[03:25:50.0000] <gsnedders>
hsivonen: We have interactive

[03:26:16.0000] <gsnedders>
(Gmaps relies on it, or did)

[03:27:06.0000] <hsivonen>
gsnedders: "interactive" in what situation?

[03:27:25.0000] <hsivonen>
gsnedders: WebKit and Gecko skip "interactive" in *some* situations

[03:27:45.0000] <gsnedders>
hsivonen: Dunno. Not looked at the code :)

[03:27:52.0000] <hsivonen>
gsnedders: Gecko skips it when a parser is aborted or when an XSLT transform fails to compile

[03:28:11.0000] <hsivonen>
the former seemed to be an intentional change by sicking

[03:28:17.0000] <hsivonen>
the latter seems like an oversight

[03:28:43.0000] <hsivonen>
Chrome skips "interactive" when calling window.stop() from a script-created document

[03:30:20.0000] <hsivonen>
I'd like documents not to skip "interactive" unless Web compat requires "interactive" to be skipped sometimes

[03:30:50.0000] <hsivonen>
because skipping "interactive" makes it unclear if there's a browser bug or an intentional skip

[03:32:41.0000] <hsivonen>
readyState is one of those things that seem simple on surface but are a huge mess when you start investigating what's going on

[04:03:30.0000] <annevk>
if you do set([...]) and you get TypeError: 'dict' object is not callable in Python what is going on?

[04:09:08.0000] <zcorpan>
annevk: i see 16 cp1250 encoding declarations in web200904

[04:09:47.0000] <zcorpan>
10 of which are in the http header

[04:09:58.0000] <annevk>
yeah, labels are somewhat conservative at the moment

[04:10:22.0000] <annevk>
http://wiki.whatwg.org/wiki/Encoding#Labels

[04:10:37.0000] <annevk>
the reason is probably because in one browser nothing happened for that label

[04:11:12.0000] <annevk>
right

[04:11:16.0000] <annevk>
Internet Explorer

[04:11:42.0000] <annevk>
Had all these as labels for "obviouslyfake" in my single-byte encoding research: csiso88598i, iso8859-11, iso8859-10, iso8859-14, csisolatin6, l6, obviouslyfake3, iso-8859-8-e, obviouslyfake2, iso8859-3, cp1255, iso8859-7, iso8859-5, cp1254, iso8859-9, iso8859-8, mac, cp1253, x-mac-roman, csmacintosh, iso-8859-16, iso8859-6, iso8859-13, iso-8859-6-e, iso-8859-6-i, iso8859-4, iso-ir-157, iso8859-15, cp1257, iso-8859-14, cp1251, cp1250, cp1258,

[04:11:43.0000] <annevk>
latin6, iso-8859-10

[04:13:10.0000] <hasather>
annevk: did you overwrite `set` with a dict?

[04:13:17.0000] <annevk>
less conservative is probably okay, but you cannot be liberal, recognizing euc_jp as euc-jp is wrong

[04:13:38.0000] <zcorpan>
$ grep -aPih "text/html\s*;\s*charset\s*=\s*[\"']?(866|ansi_x3.4-1986|asmo-708|cn-gb|cp1250|cp1251|cp1252|cp1254|cp1257|cp367|cp50220|cp51932|cp819|cp932|cp936|csascii|cscp50220|cscp51932|cseuckr|cseucpkdfmtjapanese|csibm866|csinvariant|csiso646basic1983|csiso88596e|csiso88596i|iso-8859-6-i|csiso88598e|csiso88598i|cskoi8r|csunicode|csunicode11|csunicode11utf7|utf-7|csunicodeascii|csunicodejapanese|csunicodelatin1|csviscii|viscii|

[04:13:38.0000] <zcorpan>
cn|euc-tw|euc-tw|extended_unix_code_packed_format_for_japanese|ibm367|ibm819|invariant|iso-10646|iso-10646-j-1|iso-10646-ucs-2|iso-10646-ucs-basic|iso-10646-unicode-latin1|iso-2022-cn|iso-2022-cn|iso-2022-jp-1|iso-2022-jp-1|iso-8859-6-e|iso-8859-6-i|iso-8859-6-i|iso-8859-8-e|iso-celtic|iso-ir-100|iso-ir-199|iso-ir-226|iso-ir-6|iso646-us|iso8859-11|iso8859-12|iso-8859-12|iso8859-13|iso8859-15|iso8859-16|iso8859-3|iso8859-4|iso8859

[04:13:38.0000] <zcorpan>
859-7|iso8859-8|iso8859-9|iso88591|iso885910|iso885911|iso885912|iso-8859-12|iso885913|iso885914|iso885915|iso885916|iso88592|iso88593|iso88594|iso88595|iso88596|iso88597|iso88598|iso88599|iso_646.basic:1983|iso_646.irv:1991|iso_8859-10:1992|iso_8859-14|iso_8859-14:1998|iso_8859-16|iso_8859-16:2001|iso_8859-1:1987|iso_8859-2:1987|iso_8859-3:1988|iso_8859-4:1988|iso_8859-5:1988|iso_8859-6-e|iso_8859-6-i|iso-8859-6-i|iso_8859-6:198

[04:13:43.0000] <zcorpan>
|iso_8859-8-e|iso_8859-8-i|iso_8859-8:1988|iso_8859-9|iso_8859-9:1989|ks_c_5601-1987|l10|l8|latin-9|latin10|latin8|microsoft-cp1250|microsoft-cp1251|microsoft-cp1252|microsoft-cp1253|microsoft-cp1254|microsoft-cp1255|microsoft-cp1256|microsoft-cp1257|microsoft-cp1258|ms932|ms936|ref|sjis|tis-620-2533|unicode-1-1|unicode-1-1-utf-7|utf-7|us|utf-7|utf-7|viscii|viscii|windows-936|x-cp1252|x-cp1253|x-cp1254|x-cp1255|x-cp1256|x-cp1257|

[04:13:48.0000] <zcorpan>
|x-mac-ce|x-mac-greek|x-mac-greek|x-mac-turkish|x-mac-turkish|x-user-defined|x-user-defined)" web200904 > labels.txt

[04:15:03.0000] <annevk>
hasather: thanks, thought it was scoped to the for loop

[04:15:59.0000] <annevk>
thanks zcorpan

[04:32:15.0000] <annevk>
zcorpan: what does -aPih mean here?

[04:34:39.0000] <zcorpan>
annevk: see grep --help

[04:34:42.0000] <zcorpan>
http://simon.html5.org/dump/encoding-labels/

[04:36:51.0000] <zcorpan>
cp1250: 9 ... hmm, the original grep found 16

[04:37:37.0000] <zcorpan>
cp1254: 10646

[04:38:12.0000] <zcorpan>
maybe the python counter is bogus

[04:41:50.0000] <zcorpan>
changed

[04:43:11.0000] <smaug____>
/me wants better map services. Although Bing map is mostly great, satellite pictures should get updated daily

[04:43:41.0000] <smaug____>
...so that I could check whether certain lake still has ice

[04:44:00.0000] <zcorpan>
hmm. the grep is also bogus...

[04:46:51.0000] <MikeSmith>
hsivonen: btw, as far as open validator stuff, a while back you said you were planning to land the VerifierCommandLine code from the pfalcon bitbucket fork. You still planning on doing that?

[04:50:51.0000] <annevk>
cp1254: 10646 is kind of alarming

[04:51:21.0000] <zcorpan>
yeah that was bogus, got 10 in the second run :-)

[04:52:58.0000] <zcorpan>
annevk: ok now the data should be more accurate

[04:53:30.0000] <zcorpan>
"us" had a high number previously, but is now 0, because the previous grep didn't check the next char so picked up "us" in e.g. "us-ascii"

[04:54:37.0000] <annevk>
sweet thanks

[04:54:41.0000] <zcorpan>
np

[04:55:30.0000] <annevk>
ideally we do a similar run over the top 1 million pages with help from foolip

[04:56:07.0000] <foolip>
annevk, zcorpan, to collect encoding label statistics?

[04:56:28.0000] <annevk>
yeah

[04:56:36.0000] <annevk>
to see if there's any labels that might be worth adding

[04:56:49.0000] <annevk>
though we'd have to be careful with adding false-positives

[04:57:29.0000] <foolip>
yeah, it wouldn't be hard to modify the script to get ~5 pages per domain, but I guess extracting the labels is the hard bit, currently I just use a regexp

[04:57:32.0000] <zcorpan>
we could grep for *all* labels

[04:57:44.0000] <foolip>
all labels in which list?

[04:57:55.0000] <zcorpan>
all labels that are specified in the wild

[04:58:05.0000] <zcorpan>
no list

[04:58:23.0000] <foolip>
right, so the problem becomes writing the encoding sniffing per spec, which I haven't done

[04:58:30.0000] <Philip`>
/me imagines it might be worth running the data through an HTML parser so you can look for <meta http-equiv=content-type ...> more reliably

[04:58:56.0000] <foolip>
right, that might work, even if it isn't exactly what the spec does

[04:59:37.0000] <annevk>
might also be slow

[05:00:00.0000] <Philip`>
Parsing in Java is fast

[05:00:23.0000] <foolip>
yeah, the spec sniffing of the first 1024 bytes should be fast and allow you to close the connection without getting the entire resource, if that's what you want

[05:00:55.0000] <Philip`>
(where "fast" is like tens of thousands of pages per minute, if I remember correctly)

[05:01:30.0000] <foolip>
well, I guess whoever writes the code will decide :)

[05:25:59.0000] <zcorpan>
annevk: now the data says 16 for cp1250

[05:26:17.0000] <zcorpan>
annevk: i forgot to do a case-insensitive regexp in the python script

[05:26:30.0000] <annevk>
ah k

[05:26:36.0000] <annevk>
have done that too

[05:28:24.0000] <annevk>
some of the weird long ones are relatively common too

[05:28:39.0000] <zcorpan>
annevk: 'utf-7' is present 5 times in http://wiki.whatwg.org/wiki/Encoding#Labels

[05:31:24.0000] <annevk>
zcorpan: yeah I used some internal data

[05:31:38.0000] <annevk>
zcorpan: that encoding cannot be activated on the web

[05:32:31.0000] <annevk>
still used for email I think

[05:35:03.0000] <annevk>
zcorpan: is it hard to get a list of URLs along with http://simon.html5.org/dump/encoding-labels/label-count.txt ?

[05:38:50.0000] <annevk>
AryehGregor++ for https://bugzilla.mozilla.org/show_bug.cgi?id=702948

[05:39:26.0000] <annevk>
AryehGregor: might be interesting for NodeIterator too

[05:41:45.0000] <zcorpan>
annevk: shouldn't be too hard

[05:54:54.0000] <gsnedders>
Does it make me a bad computer scientist to end up hating thinking about data structures, unsure what to use?

[05:58:15.0000] <annevk>
gsnedders: just means you need more practice :)

[05:58:47.0000] <annevk>
gsnedders: fwiw, I have that each time I write scripts for research

[05:59:37.0000] <Philip`>
gsnedders: A good computer scientist would just list the big-O complexity of every possible data structure and pick whichever one is smallest

[06:00:26.0000] <jgraham>
And then use it on sets of 2 items

[06:01:38.0000] <gsnedders>
Philip`: Ah, I'm down to everything being O(n), but with vastly different perf in Python (although fairly similar in C).

[06:02:54.0000] <jgraham>
hsivonen: You might like to look at http://w3c-test.org/html/tests/submission/Opera/documentwrite/ Not that Gecko fails (m)any (although some seem to fail if you run them in an iframe, at least on my system, although it could be a cache issue after I fixed some bugs in the tests)

[06:04:29.0000] <Philip`>
gsnedders: A good computer scientist would ignore constant factors - they're just a trivial implementation detail

[06:05:06.0000] <gsnedders>
Philip`: :)

[06:05:26.0000] <gsnedders>
Philip`: Problem I think is the big-O complexity of Python built-ins…

[06:05:59.0000] <jgraham>
So… you didn't actually make everything O(N)?

[06:06:45.0000] <jgraham>
Pretty sure not knowing what data structure/algorithm you are *actually* using makes you a bad computer scientist, yes :)

[06:07:02.0000] <gsnedders>
jgraham: I think not :(

[06:07:27.0000] <gsnedders>
Working out the complexity of algorithms where you don't know what the complexity of operations on the interpreter builtins are is hard.

[06:07:40.0000] <gsnedders>
Esp. because it's an impl-detail of the interpreter.

[06:07:56.0000] <jgraham>
That is kind of silly

[06:07:56.0000] <gsnedders>
Okay, so I can probably care most about CPython, but still.

[06:08:04.0000] <jgraham>
Clojure has the right idea

[06:08:14.0000] <gsnedders>
jgraham: ?

[06:08:15.0000] <Philip`>
gsnedders: By your logic, surely any algorithm could be described as O(1), just with the problem that it's a constant number of built-in operations that don't have constant cost themselves

[06:08:37.0000] <gsnedders>
Philip`: Yes.

[06:09:15.0000] <gsnedders>
(Provided any problem > O(1) has a solution as a built-in)

[06:09:19.0000] <gsnedders>
(or sequence thereof)

[06:09:25.0000] <gsnedders>
(which surely isn't certain?)

[06:09:35.0000] <jgraham>
gsnedders: The built-in data structures in clojure all have a stated complexity for each operation they support

[06:09:46.0000] <gsnedders>
jgraham: Ah.

[06:09:54.0000] <Philip`>
(You can just add a built-in solveAlgorithm582() function to your language)

[06:10:02.0000] <jgraham>
That is the only fact I know about clojure

[06:10:21.0000] <jgraham>
Well apart from the fact that it is a lisp that runs on the jvm

[06:10:28.0000] <Philip`>
C++ STL typically states complexity too, which is nice

[06:10:34.0000] <jgraham>
and that it looks like it is quite fun

[06:10:55.0000] <jgraham>
On the other hand C++ STL only just got a hash table type

[06:12:35.0000] <Philip`>
There's been generally compatible vendor-specific ones for years, and Boost's one that I think the standard got based on, so that's a mostly theoretical problem if you don't care about extreme portability

[06:13:20.0000] <gsnedders>
(And if you care about extreme portability, plenty of embedded devices don't have the STL anyway)

[06:13:57.0000] <jgraham>
OTOH as a C++ beginner, none of that is at all obvious

[06:14:25.0000] <jgraham>
Well itg is pretty obvious that someone would have implemented hash tables somewhere

[06:15:01.0000] <Philip`>
/me likes that boost::unordered_map lets you do lookups using a key object that's not the same as the unordered_map's actual key type (assuming compatible hash and equality functions)

[06:15:30.0000] <jgraham>
… why?

[06:16:11.0000] <Philip`>
It means you can e.g. have a std::string key type (which does automatic memory management), but do lookups using a char*, so you don't have to do an allocation to construct the key for every lookup

[06:16:36.0000] <jgraham>
Oh, that's quite neat

[06:16:52.0000] <jgraham>
Or really stupid, hard to tell which :)

[06:18:03.0000] <jgraham>
Presumably you don't just use a std::string* for both because you want the hash table to own the strings, or something?

[06:18:14.0000] <gsnedders>
I guess theoretically the complexity of operations could vary between CPU architectures, too, but that's probably caring too much.

[06:18:36.0000] <annevk>
foolip: btw, I can volunteer for writing that algorithm in Python

[06:18:42.0000] <annevk>
foolip: not Java

[06:20:13.0000] <Philip`>
jgraham: Yeah, you don't want to have to manually free pointers inside complex data structures, because that usually becomes an ugly mess and will leak everywhere

[06:21:54.0000] <Philip`>
(whereas using std::string means it'll automatically deal with all the copying and freeing, and would only be noticeably inefficient if you're modifying the structure heavily and causing a load of copies, and isn't a problem if you're primarily doing lookups)

[06:35:35.0000] <zcorpan>
annevk: http://simon.html5.org/dump/encoding-labels/labels-urls.txt

[06:59:57.0000] <zcorpan>
first interesting url, cp1251, http://www.b2blogger.com/pressroom/tag/%F7%E0%F1%F2%ED%FB%E9%20%EA%EB%E8%E5%ED%F2

[07:05:10.0000] <annevk>
zewt: lower boundary does not work with interval I think

[07:05:24.0000] <annevk>
zewt: as lower boundary can be greater than 0x10FFFF

[07:05:42.0000] <annevk>
zewt: also, where is this interval syntax defined?

[07:07:04.0000] <zewt>
where is the phrase "greater than" defined? :)

[07:08:28.0000] <zewt>
[0x200000,0x10FFFF] works, and is empty

[07:09:08.0000] <zewt>
probably easy enough to define (havn't looked through the other encoders/decoders much so I don't know if there's enough cases for it to be worth it)

[07:16:41.0000] <matjas>
what does the TR in W3C spec URLs stand for? e.g. http://www.w3.org/TR/CSS2/

[07:18:05.0000] <zcorpan>
Technical Report

[07:19:29.0000] <zcorpan>
or at least i think it used to, now TR/ says "All Standards and Drafts"

[07:20:22.0000] <annevk>
yup

[07:20:43.0000] <annevk>
zewt: there's quite a few of those, especially with bytes

[07:20:50.0000] <annevk>
zewt: just search for "to 0x"

[07:21:17.0000] <annevk>
zewt: still a bit skeptical since I don't like how that looks, but maybe

[07:21:45.0000] <annevk>
zewt: also, "greater than" is way different from [0x40,0x50] :)

[07:25:24.0000] <MikeSmith>
jgraham, annevk : please remind me how to fix this anolis problem

[07:25:33.0000] <MikeSmith>
anolis --dump-xrefs=data/xrefs/dom/crypto.json Overview.src.html /tmp/spec

[07:25:41.0000] <MikeSmith>
[Errno 2] No such file or directory: 'data/xrefs/dom/crypto.json'

[07:26:21.0000] <matjas>
zcorpan, annevk: ty

[07:26:23.0000] <MikeSmith>
I thought what --dump-xrefs=data/xrefs/dom/crypto.json does is to create the data/xrefs/dom/crypto.json file

[07:26:44.0000] <MikeSmith>
gsnedders: ↑

[07:28:25.0000] <gsnedders>
MikeSmith: No idea, I have nothing to do with that functionality.

[07:28:32.0000] <MikeSmith>
ok

[07:31:23.0000] <jgraham>
MikeSmith: Ask Ms2ger

[07:32:03.0000] <annevk>
MikeSmith: make a crypto.json file consisting of {}

[07:32:13.0000] <annevk>
MikeSmith: it doesn't create the file, it just fills it up

[07:34:39.0000] <jgraham>
That seems quite silly

[07:38:16.0000] <zcorpan>
http://www.rediff.com/gujarati/2002/apr/19dalal.htm

[07:44:04.0000] <MikeSmith>
annevk: thanks

[07:44:23.0000] <MikeSmith>
jgraham: I think it merits some stronger word than silly

[07:46:30.0000] <gsnedders>
/me wonders whether requiring UTF-8 for text/* over HTTP/2.0 is viable, or just as fictional as text/* being ISO-8859-1.

[07:46:59.0000] <gsnedders>
Certainly moving away from any content-type sniffing for SPDY content would be desirable.

[07:47:44.0000] <gsnedders>
(Whether a Content-Type header is used or magic bytes instead is a separate issue)

[07:48:54.0000] <jgraham>
MikeSmith: The W3C testrunner tries to run tests in an iframe, right?

[07:49:44.0000] <dglazkov>
good morning, Whatwg!

[07:50:17.0000] <MikeSmith>
jgraham: it was using an object before

[07:50:35.0000] <jgraham>
MikeSmith: I thought people objected to that?

[07:50:39.0000] <MikeSmith>
I can't remember if it was updated to use an iframe or nt

[07:50:51.0000] <MikeSmith>
jgraham: yeah, it causes problems on mobile

[07:50:54.0000] <MikeSmith>
you can't scroll

[07:51:08.0000] <jgraham>
Anyway I object to iframe on the basis that testing window.top doesn't really work in an iframe (for example)

[07:52:01.0000] <jgraham>
Basically I think this whole harness might be a world of hurt

[07:52:25.0000] <jgraham>
Of course it's not strictly relevant to me since we won't ever use it

[07:52:44.0000] <jgraham>
But I will be annoyed if people get upset when tests break in it

[07:52:51.0000] <MikeSmith>
I checked and it's still using <object>

[07:52:58.0000] <MikeSmith>
jgraham: who's we?

[07:52:58.0000] <jgraham>
OK

[07:53:06.0000] <MikeSmith>
and why won't you use it?

[07:53:17.0000] <jgraham>
Opera. But I would expect "browser vendors"

[07:53:27.0000] <MikeSmith>
oh

[07:53:29.0000] <MikeSmith>
yeah

[07:53:47.0000] <jgraham>
Because we have a highly custom solution designed for our specific requirements

[07:53:55.0000] <MikeSmith>
yeah

[07:53:57.0000] <MikeSmith>
understood

[07:54:07.0000] <jgraham>
(I guess you know that, but one must always think of the people trawling the logs)

[07:54:14.0000] <MikeSmith>
heh

[07:54:45.0000] <MikeSmith>
I think people trawling the logs should find some better way to spend their time

[07:54:59.0000] <annevk>
MikeSmith: jgraham: I'm sure Ms2ger takes patches

[07:55:26.0000] <annevk>
it does prevent people from creating files they didn't want to, and given that it's only for the first time, it's not too bad

[07:55:39.0000] <Philip`>
MikeSmith: Indeed, reading the channel's logs is almost as bad as reading the channel live

[08:03:14.0000] <MikeSmith>
Philip`: indeed

[08:03:25.0000] <MikeSmith>
annevk: I wonder where the name big5 came from

[08:03:35.0000] <MikeSmith>
I mean, why name it that?

[08:04:30.0000] <jgraham>
Size matters?

[08:05:12.0000] <zcorpan>
MikeSmith: https://twitter.com/#!/brucel/status/189664480391741440

[08:05:41.0000] <Ms2ger>
brucel++

[08:06:00.0000] <annevk>
'The name "Big5" is in recognition that the standard emerged from collaboration of five of Taiwan's largest IT firms: Acer (宏碁); MiTAC (神通); JiaJia (佳佳), ZERO ONE Technology (零壹 or 01tech); and, First International Computer (FIC) (大眾).'

[08:06:17.0000] <annevk>
apparently not quite enough collaboration

[08:06:35.0000] <annevk>
at least not when it came to extending it

[08:07:39.0000] <MikeSmith>
heh

[08:07:39.0000] <zcorpan>
they should have made the label 宏碁-神通-佳佳-零壹-大眾

[08:07:47.0000] <zcorpan>
(encoded as big5)

[08:08:14.0000] <jgraham>
So basically it was an ego thing?

[08:08:17.0000] <jgraham>
Impressive

[08:08:34.0000] <zcorpan>
(sorry, i mean, encoded as 宏碁-神通-佳佳-零壹-大眾)

[08:09:37.0000] <MikeSmith>
zcorpan: maybe they should have named it secret7

[08:09:52.0000] <MikeSmith>
brucel maybe likes that one better

[08:12:04.0000] <zcorpan>
good idea for next year's april 1

[08:12:46.0000] <jgraham>
I think of brucel as a maloryTowers man

[08:22:40.0000] <annevk>
zewt: I like the emit encoder/decoder error idea btw

[08:22:45.0000] <annevk>
zewt: that's quite neat

[08:23:00.0000] <annevk>
zewt: I didn't really like the current approach either

[08:23:04.0000] <annevk>
euh don't

[09:03:15.0000] <annevk>
MikeSmith: ah, the other reason it's not automatically generated is that you need to add a "url" field to crypto.json

[09:03:28.0000] <annevk>
MikeSmith: otherwise other specs can't use it

[09:03:42.0000] <MikeSmith>
oh

[09:04:32.0000] <annevk>
the xspec xref is a concatenation of that URL and the term

[09:04:39.0000] <MikeSmith>
but it seems like that could just be specified as an additional param

[09:05:21.0000] <annevk>
in the makefile?

[09:05:29.0000] <MikeSmith>
to anolis

[09:05:37.0000] <MikeSmith>
additional switch

[09:05:38.0000] <annevk>
i guess that could somehow be extracted too, yeah

[09:08:45.0000] <Ms2ger>
MikeSmith, yeah, patch welcome :)

[09:08:58.0000] <MikeSmith>
can't be arsed

[09:09:06.0000] <MikeSmith>
I prefer to complain

[09:09:19.0000] <MikeSmith>
seriously, it's not heinous thing

[09:09:29.0000] <MikeSmith>
just hard to remember

[09:09:34.0000] <Ms2ger>
Yeah

[09:09:39.0000] <MikeSmith>
I think this is the 3rd time I've need to re-remember it

[09:09:50.0000] <Ms2ger>
3rd time you added a spec? :)

[09:09:57.0000] <MikeSmith>
yeah

[09:10:02.0000] <MikeSmith>
I guess so

[09:10:14.0000] <MikeSmith>
in this case it was trying to help the domcrypt guys get their stuff working

[09:10:25.0000] <Ms2ger>
Didn't I add that?

[09:10:33.0000] <MikeSmith>
dunno

[09:10:38.0000] <MikeSmith>
but don't think so

[09:10:52.0000] <MikeSmith>
because it was failing at the point where it was looking for that json file

[09:11:05.0000] <MikeSmith>
unless you put it in a different subdir

[09:14:02.0000] <Ms2ger>
Great news, gsnedders stopped being dumb :)

[09:14:18.0000] <gsnedders>
Ms2ger: Esp. considering I have exams next week!

[09:15:44.0000] <arunranga>
annevk, should HTML also define what a microtask is, in addition to "perform a microtask checkpoint"?  That allows other specs (like File) to make some conditions only valid within a microtask.

[09:22:47.0000] <annevk>
arunranga: if you need a new concept from HTML related to task I'd suggest filing a bug on HTML with the requirements

[09:23:05.0000] <annevk>
tasks*

[09:23:26.0000] <annevk>
arunranga: especially if you need some kind of hook

[09:23:48.0000] <annevk>
arunranga: it seems though for the resolve URL thing we might need a bit more

[09:24:03.0000] <arunranga>
annevk: ok. I guess I wanted you (and Ms2ger's) take from a DOM perspective.

[09:24:20.0000] <arunranga>
annevk: yes, I'm trying to figure out *what* we might need.

[09:24:24.0000] <Ms2ger>
Ah, it's arunranga!

[09:24:51.0000] <arunranga>
Hello Ms2ger :)  Formerly otherarun.  Also, TheArun.

[09:25:18.0000] <Ms2ger>
Microtasks? 300 smaug____ annevk aklein

[09:25:32.0000] <annevk>
maha 301 hixie

[09:25:57.0000] <annevk>
I should understand this stuff, but each time it dazzles me

[09:26:03.0000] <arunranga>
All this redirection is giving me a time out.

[09:26:34.0000] <arunranga>
annevk, if by "dazzles" you mean "totally confuses me to the point of tears" I'm in the same boat as you.

[09:26:38.0000] <Ms2ger>
I decided against 301 because I still have hope I'll figure it out at some point :)

[09:26:56.0000] <Ms2ger>
The reason for that, of course, is that I haven't looked at it

[09:27:03.0000] <smaug____>
what about microtasks ?

[09:27:39.0000] <smaug____>
ah, some spec things...

[09:27:41.0000] <annevk>
arunranga: haha, it's not quite that bad, but the resolving URLs concept is quite confusing

[09:27:56.0000] <Ms2ger>
s/resolving//

[09:28:11.0000] <arunranga>
Greetings smaug___ !  Currently, HTML specifies "perform a microtask checkpoint" without an explanation of what constitutes a microtask.  I think a microtask is a convenient concept upon which to hang a few other checks.

[09:28:41.0000] <arunranga>
smaug___, Ms2ger, annevk: this includes the validity of a Blob URL.  I'd like them to be scoped within a microtask.

[09:28:44.0000] <arunranga>
(if possible)

[09:28:59.0000] <Ms2ger>
Blob URLs?

[09:29:01.0000] <Ms2ger>
/me runs

[09:29:12.0000] <Ms2ger>
zewt cares about that, IIRC?

[09:29:15.0000] <arunranga>
/me catches Ms2ger and forces the issue :)

[09:29:22.0000] <Ms2ger>
r-

[09:30:15.0000] <Ms2ger>
MikeSmith, I'm going to see if I can add a better error message for the --dump-xrefs thing

[09:30:27.0000] <MikeSmith>
OK

[09:30:32.0000] <MikeSmith>
that would be helpful

[09:30:34.0000] <arunranga>
zewt and I chatted a while ago about resolution of Blob URLs.  FileAPI currently uses the confusing "dereference…" which I think should be replaced.

[09:31:39.0000] <smaug____>
arunranga: yeah, HTML spec could perhaps specify better what is a microtask. (The outermost script execution of the innermost task)

[09:32:04.0000] <arunranga>
smaug___ I'll file a bug I think.

[09:33:27.0000] <arunranga>
We've got performing a microtask checkpoint defined in terms of MutationObserver.

[09:34:42.0000] <smaug____>
well, because that is the original reason for microtasks

[09:34:42.0000] <smaug____>
sicking was thinking to use microtasks IDB

[09:36:55.0000] <arunranga>
I think we can use them for File as well, maybe for validity of Blob URLs.

[09:38:03.0000] <Ms2ger>
jgraham, MikeSmith, fwiw, Mozilla runs mochitests in an iframe too, so I don't think there would be an objection from our side

[09:38:16.0000] <annevk>
dglazkov: xmp is not a valid element fwiw

[09:38:34.0000] <Ms2ger>
jgraham, MikeSmith, I think we use popups, and disable popup-blocking, if necessary

[09:39:06.0000] <annevk>
arunranga: validity of blob URLs doesn't need to happen in a task I think

[09:39:27.0000] <gsnedders>
Anyone have IE10 at hand to see if const is supported in ES?

[09:39:38.0000] <arunranga>
annevk: What I mean is, *scoped* to a microtask.

[09:40:01.0000] <arunranga>
annevk: this makes leaks less likely.

[09:40:21.0000] <Ms2ger>
gsnedders, I can if you give me a test

[09:40:21.0000] <annevk>
ooh, the expiring stuff

[09:40:22.0000] <annevk>
right

[09:40:26.0000] <arunranga>
annevk: that is, having unused Blob URLs or "long lived" ones.  Also, it mitigates the need for something like oneTimeOnly.

[09:40:37.0000] <Ms2ger>
Preferably by uploading it to the live dom viewer

[09:40:57.0000] <annevk>
arunranga: yeah I remember reading that, I think zewt was all on top of that :)

[09:41:06.0000] <gsnedders>
Ms2ger: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1480

[09:41:18.0000] <annevk>
but part of that sounded like it needed to be defined in either URL resolving or fetching

[09:41:21.0000] <arunranga>
annevk: won't exactly stop race issues, but can mitigate them.

[09:41:22.0000] <gsnedders>
Ms2ger: Basically, does it give an error or not?

[09:41:31.0000] <annevk>
and then XHR and everything dealing with URLs needed updating

[09:41:51.0000] <arunranga>
annevk, right.  Are those the purview of HTML?

[09:42:08.0000] <arunranga>
/me concludes it is.

[09:43:07.0000] <Ms2ger>
gsnedders, Syntax error

[09:43:19.0000] <gsnedders>
Ms2ger: Interesting.

[09:43:48.0000] <dglazkov>
annevk: ok :)

[09:45:16.0000] <jgraham>
/me tries to test some simple things, finds a selection of unrelated issues

[09:45:33.0000] <jgraham>
In other news, I am starting to understand why hsivonen hates about:blank

[09:46:21.0000] <jgraham>
Ms2ger: We run some tests in popup windows and some tests (including testharness.js tests) as top level documents

[09:46:51.0000] <smaug____>
that happens in Mozilla too

[09:46:57.0000] <smaug____>
some tests open a new window

[09:47:01.0000] <smaug____>
or new tab etc

[09:47:10.0000] <smaug____>
but most are run in an iframe

[09:47:21.0000] <jgraham>
Right, your tests can have chrome permissions

[09:47:48.0000] <jgraham>
Whereas we drive the tests externally so we can load them in a top-level window

[09:47:57.0000] <jgraham>
aiui

[09:48:21.0000] <jgraham>
Well I mean I understand the Opera system. I think I understand what Mozilla do :)

[09:48:46.0000] <Ms2ger>
Plain mochitests are run in an iframe and don't get chrome permissions

[09:49:19.0000] <Ms2ger>
Modulo SpecialPowers, which is an extension that grants access to some stuff, and UniversalXPConnect, which we want to kill

[09:49:19.0000] <annevk>
arunranga: URLs and fetch are at this point

[09:49:55.0000] <Ms2ger>
There are also chrome mochitests, which are run in a top-level window, and do have chrome permissions

[09:49:58.0000] <Ms2ger>
And other stuff

[09:50:12.0000] <annevk>
dglazkov: I guess what I should say, is that we have not introduced any new features in the HTML syntax that depart wildly from what is possible in XML

[09:50:16.0000] <jgraham>
Do SpecialPowers allow you to open a top-level browsuing context if you need it?

[09:50:52.0000] <Ms2ger>
That's what window.open is for

[09:51:00.0000] <annevk>
dglazkov: so making such a proposal can be somewhat controversial and also begs the question of how you anticipate <template> to work in a namespaced context

[09:52:25.0000] <jgraham>
Fair point. I always forget that window.open gives a top-level browsing context

[09:55:14.0000] <dglazkov>
annevk: I haven't been keeping XML and namespaces in mind at all. It's a good point -- though I have no sense whether XML is just an edge case at this point.

[10:00:07.0000] <annevk>
dglazkov: I think it is, and I don't necessarily think we need to cater to it, but unless we remove XML from browsers it needs to be defined what <template> does in that context

[10:00:13.0000] <annevk>
dglazkov: and it's also important in the DOM

[10:00:27.0000] <annevk>
dglazkov: if appendChild() something to <template> you'd have the same thing

[10:01:36.0000] <dglazkov>
annevk: that last one doesn't seem much different from appending a child to textarea

[10:06:56.0000] <dglazkov>
annevk: can you help rafaelw_ understand the issue with XML?

[10:07:07.0000] <rafaelw_>
annevk, hsivonen, dglazkov: just joining...

[10:07:22.0000] <rafaelw_>
annevk: if you would be so kind ^^^

[10:07:23.0000] <annevk>
the issue is that this feature would not work in XML

[10:07:32.0000] <annevk>
just like <noscript> I suppose

[10:07:57.0000] <annevk>
if that's by design, it probably should state that explicitly so people who get annoyed by that kind of thing get annoyed early on

[10:08:04.0000] <annevk>
I don't really care

[10:09:08.0000] <rafaelw_>
honestly, this working in XML hadn't even occurred to me.

[10:09:16.0000] <rafaelw_>
but can you help me understand why it doesn't work.

[10:15:04.0000] <annevk>
rafaelw_: because you'd have to change the XML parser if you want it to work in the same way

[10:15:22.0000] <annevk>
rafaelw_: I'm assuming you're not planning on doing that

[10:15:52.0000] <annevk>
oh shit, I should have dinner

[10:17:04.0000] <rafaelw_>
hmm... that kinda makes it sound like this isn't so much a problem with XML as a question about whether the <template> element should have the same behavior in an XML document. is that a fair way of stating it?

[10:18:12.0000] <annevk>
I don't think so, because the XML situation also arises in the DOM

[10:19:05.0000] <annevk>
<template><test/></template> is not much different from createElement("template"); createElement("test"); template.append(test); body.append(template)

[10:19:45.0000] <annevk>
whereas in HTML per your suggestion <template><test/></template> would give <template/> in the DOM

[10:20:18.0000] <annevk>
which is "magic" in the HTML parser that we cannot introduce in the XML parser

[10:26:04.0000] <rafaelw_>
(adam is explaining to me locally). so is that the we have the ability to change the HTML parser, but no such ability with the XML parser?

[10:26:57.0000] <annevk>
right, changing those kind of invariants of the XML parser is not going to fly

[10:36:10.0000] <TabAtkins>
gsnedders: I can't decipher what you are attempting to say in your post about "legacy const".  This isn't helped by your opening sentence being ungrammatical and nonsensical.

[10:44:45.0000] <gsnedders>
TabAtkins: Yay for not reading emails before I send them!

[10:46:10.0000] <rniwa>
arv: http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#the-inert-attribute

[10:46:47.0000] <Ms2ger>
rniwa, do you know if anybody else than webkit does something as complex as http://trac.webkit.org/browser/trunk/Source/WebCore/css/CSSStyleSelector.cpp?rev=113922#L4920 ?

[10:46:58.0000] <annevk>
TabAtkins is correct though that insert="" is not suitable for <template>; my bad

[10:47:27.0000] <annevk>
maybe insert="" should be named inactive=""

[10:47:34.0000] <gsnedders>
TabAtkins: In related news, why does Standard English not contain "outwith" in its lexis? Grr!

[10:47:46.0000] <TabAtkins>
What does "outwith" mean?

[10:48:17.0000] <Ms2ger>
gsnedders, I would ask an English language majo... Oh

[10:48:40.0000] <rniwa>
Ms2ger: as far as I know, Gecko does something similar

[10:48:53.0000] <Ms2ger>
rniwa, including the mode-dependence?

[10:48:59.0000] <rniwa>
Ms2ger: think so

[10:49:09.0000] <Ms2ger>
Because I didn't see that in the code

[10:49:11.0000] <annevk>
"is a Scottish preposition meaning 'outside, beyond', and along with wee (for 'small') is the first non-English English word that visitors to Scotland notice (and sometimes adopt): Do you live outwith the city? / We can discuss that outwith the meeting."

[10:49:16.0000] <annevk>
brilliant

[10:49:24.0000] <rniwa>
Ms2ger: I swear I even checked gecko's implementation at one time

[10:49:28.0000] <rniwa>
Ms2ger: okay, can I see your code?

[10:49:29.0000] <gsnedders>
TabAtkins: Opposite of within, basically

[10:49:35.0000] <rniwa>
Ms2ger: lost my URL :(

[10:49:37.0000] <Ms2ger>
rniwa, I may have changed it since :)

[10:49:46.0000] <rniwa>
Ms2ger: oh

[10:49:58.0000] <rniwa>
Ms2ger: where can I see the code in Gecko though?

[10:50:03.0000] <TabAtkins>
gsnedders: That's just silly.

[10:50:05.0000] <gsnedders>
TabAtkins: so "outwith the meeting" means "not within the meeting", basically

[10:50:14.0000] <TabAtkins>
"outside of"

[10:50:28.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/content/html/content/src/nsHTMLFontElement.cpp , right?

[10:50:35.0000] <gsnedders>
TabAtkins: Bah, ScEn has a single word for it!

[10:50:45.0000] <Ms2ger>
Oh, wait

[10:50:54.0000] <gsnedders>
(I've undoubtedly used this a number of times on W3C mailing lists, as I often forget it's a ScEn word)

[10:51:04.0000] <annevk>
gsnedders: does Scotland have a two-level code?

[10:51:19.0000] <annevk>
en-sc or some such

[10:51:20.0000] <gsnedders>
annevk: No. en-gb-scot.

[10:51:26.0000] <annevk>
ugh

[10:51:34.0000] <gsnedders>
Oh, no, that's untrue.

[10:51:51.0000] <gsnedders>
Only Google hit for that is a Tweet by me. Must be misremebering.

[10:52:13.0000] <Ms2ger>
rniwa, sorry, I think I lied

[10:52:17.0000] <Ms2ger>
Gah.

[10:52:25.0000] <rniwa>
Ms2ger: ?

[10:52:34.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/layout/style/nsStyleUtil.cpp#64

[10:52:44.0000] <annevk>
gsnedders: sco per ISO

[10:52:58.0000] <gsnedders>
annevk: sco

[10:53:02.0000] <rniwa>
Ms2ger: yup...

[10:53:08.0000] <rniwa>
Ms2ger: i think dhyatt wrote both tables

[10:53:24.0000] <Ms2ger>
And got some off-by-one errors in yours? :)

[10:53:26.0000] <gsnedders>
annevk: Though that implies it's the Scots Language and not a dialect of English (which is a very interesting discussion…)

[10:53:34.0000] <rniwa>
Ms2ger: maybe LOL

[10:54:04.0000] <rniwa>
Ms2ger: anyway, i've got to head to Mozilla's SF office now

[10:54:05.0000] <annevk>
Ms2ger: broken links in your source code

[10:54:06.0000] <rniwa>
so ttyl ;)

[10:54:07.0000] <Ms2ger>
Though I see erik⊙nc has blame for that table

[10:54:17.0000] <gsnedders>
/me also finds that Old English and Middle English have their own language codes, interestingly

[10:54:26.0000] <Ms2ger>
rniwa, won't find me there, sorry ;)

[10:54:35.0000] <rniwa>
Ms2ger: i know ;)

[10:55:04.0000] <gsnedders>
annevk: sco is really the Scots Language as opposed to Scottish English, and I'm really meaning the latter here.

[10:55:16.0000] <Ms2ger>
annevk, patches welcome :)

[10:55:32.0000] <Ms2ger>
"Bug 18136 - Fixing the font size mess {font} {ll}"

[10:55:37.0000] <gsnedders>
"Whaur dae ye bide?" would be Scots but not Scottish English, for example

[10:55:39.0000] <annevk>
Ms2ger: been ages since I patched Gecko

[10:55:45.0000] <annevk>
Ms2ger: and I was rather bad at it back then

[10:55:55.0000] <TabAtkins>
gsnedders: Guessing "Where do you live?"

[10:56:00.0000] <Ms2ger>
annevk, surely Opera has trained you by now :)

[10:56:18.0000] <annevk>
in the Gecko ways? not so much

[10:56:21.0000] <gsnedders>
TabAtkins: Yes.

[10:56:34.0000] <hober>
scots gaelic is gd iirc

[10:56:44.0000] <Ms2ger>
Well, I guess the Gecko ways are about as weird as Opera's

[10:56:56.0000] <hober>
i don't remember the three letter code for it

[10:57:04.0000] <gsnedders>
hober: yeah

[10:57:09.0000] <gsnedders>
hober: gla

[10:57:13.0000] <rektide>
anyone have suggestions for how do to drag and drop SVG? my problem is that i'm dragging the item along the screen under the mouse, covering up all the event handlers i would like to be firing

[10:57:17.0000] <hober>
sco is the sister-to-english language spoken in scotland :)

[10:57:31.0000] <rektide>
and elementFromPoint identifies not <svg:use/> elements but what the <svg:use/> elements point to

[10:57:50.0000] <gsnedders>
hober: Ever less so, though. Scottish English is probably about as common as Scots in colloquial usage now.

[10:58:22.0000] <gsnedders>
(Gaelic is practically non-existant for most purposes, and has had very little influence over Scottish English or Scots)

[10:58:26.0000] <rektide>
i'm interested to know what techniques are out there for making the MouseEvents useful, not all target this one being-dragged item

[10:59:02.0000] <othermaciej>
wikipedia sea: "Scottish English refers to the varieties of English spoken in Scotland. It may or may not be considered distinct from the Scots language."

[10:59:12.0000] <othermaciej>
is that wrong?

[11:00:02.0000] <Ms2ger>
[citation needed]

[11:00:11.0000] <Ms2ger>
rniwa (~rniwa@nat/mozilla/x-rkjncmdkxlybjmcu) has joined #whatwg

[11:00:15.0000] <Ms2ger>
We got him!

[11:00:24.0000] <rniwa>
Ms2ger: LOL.

[11:00:40.0000] <rniwa>
Ms2ger: SF goole office & SF mozilla office are in the same building complex

[11:00:46.0000] <shepazu>
rektide: turn off pointer events on the svg element you're dragging

[11:00:57.0000] <gsnedders>
othermaciej: You can argue either way. The academic view tends to be that language in Scotland is a continuum from Standard English through Scottish English to Scots, but still not entirely agreed upon.

[11:01:04.0000] <Ms2ger>
rniwa, remind me never to set foot in that complex, then :)

[11:01:13.0000] <MikeSmith>
othermaciej: http://en.wikipedia.org/wiki/Scots_language "It is sometimes called Lowland Scots to distinguish it from Scottish Gaelic, the Celtic language variety spoken in most of the western Highlands and in the Hebrides."

[11:01:23.0000] <gsnedders>
othermaciej: Given that it's basically a continuum, there's some debate as to whether Scots is a separate language from English or not.

[11:01:24.0000] <smaug____>
Ms2ger: :)

[11:01:31.0000] <smaug____>
Ms2ger: SF isn't that bad place

[11:01:43.0000] <rektide>
shepazu: thank you so much. of course.

[11:01:52.0000] <shepazu>
np

[11:01:57.0000] <rektide>
NOT ANY MORE

[11:02:01.0000] <Ms2ger>
smaug____, I thought you would be in favour of me not joining Google... Unless you saw all my regressions :)

[11:02:04.0000] <rektide>
omg the hackery that's been going on for a day and a half

[11:02:07.0000] <jgraham>
Uh, wait how did I manage to entirely overlook something like <template><test/></template> == <template></template>?

[11:02:07.0000] <othermaciej>
MikeSmith: I do know that Scottish Gaelic is  distinct (and only spoken by 1% of the population of Scottland or so)

[11:02:09.0000] <rektide>
;)

[11:02:14.0000] <jgraham>
That's not going to work

[11:02:47.0000] <gsnedders>
othermaciej: Go back to 1707 (Acts of Union, where the Scottish and English parliments effectly ceased to exist to be replaced by a single parliment), Scots was a separate language to English.

[11:02:51.0000] <shepazu>
rektide: remember to turn them back on when you drop the element :)

[11:02:54.0000] <smaug____>
Ms2ger: you could join Mozilla ;)

[11:03:02.0000] <smaug____>
as an employee

[11:03:27.0000] <jgraham>
gsnedders: Is the Scottish plan to leave the union and then fund independence by suing Linux for IP violations?

[11:03:29.0000] <othermaciej>
gsnedders: are you scottish yourself?

[11:03:31.0000] <smaug____>
/me can hope someone drags rniwa out from the dark side :p

[11:03:31.0000] <MikeSmith>
wow, Ulster Scots? wtf

[11:03:44.0000] <MikeSmith>
othermaciej: you met gsnedders man

[11:03:59.0000] <othermaciej>
MikeSmith: I'm borderline autistic, I don't remember stuff like that :-)

[11:04:06.0000] <MikeSmith>
heh

[11:04:14.0000] <jgraham>
gsnedders: Is like the opposite of someone who plays Scottish on TV

[11:04:18.0000] <Ms2ger>
Glasgow?

[11:04:24.0000] <MikeSmith>
gsnedders looks like a young Robert Plant

[11:04:30.0000] <gsnedders>
othermaciej: Yes.

[11:04:40.0000] <MikeSmith>
except sexier

[11:04:40.0000] <gsnedders>
MikeSmith: Also, I have never met othermaciej.

[11:04:42.0000] <jgraham>
He was born is Scotland but looks/sounds about as Scottish as I do

[11:04:51.0000] <gsnedders>
But what jgraham said is the truth.

[11:04:57.0000] <jgraham>
But with a slight resembelence to a heroin addict

[11:05:08.0000] <jgraham>
Which is quite glaswegian at least

[11:05:11.0000] <gsnedders>
(Also, jgraham has more Scottish ancestory than I do, IIRC)

[11:05:31.0000] <jgraham>
I never understood how one did sums on ancestors

[11:05:34.0000] <MikeSmith>
gsnedders has a unique sound, just as Robert Plant does

[11:05:36.0000] <othermaciej>
I am not very good at distinguishing UK/commonwealth accents

[11:05:46.0000] <jgraham>
s/did/does/

[11:05:47.0000] <gsnedders>
My accent is approximately RP.

[11:05:55.0000] <jgraham>
I think I have more Scottish parents than you

[11:06:14.0000] <gsnedders>
jgraham: Well, yes, that's what I was going by basically.

[11:06:20.0000] <jgraham>
I'm not sure how one weights backward in time

[11:06:22.0000] <gsnedders>
(I have none.)

[11:06:33.0000] <MikeSmith>
gsnedders, othermaciej : I thought you dudes met in Nice but I guess slacker othermaciej didn't show that year

[11:06:33.0000] <jgraham>
Although I am pretty sure you do it differently in America

[11:06:43.0000] <gsnedders>
(I have a single Scottish grandparent.)

[11:06:50.0000] <jgraham>
Like you find one ancestor in a country you like and claim to be from there

[11:06:56.0000] <gsnedders>
MikeSmith: Yeah, that's what happened.

[11:09:53.0000] <MikeSmith>
my ancestors were mostly pig thieves who fled to America to avoid getting branded with whatever tf the English bastards did to honest pig thieves at that time

[11:10:25.0000] <MikeSmith>
plus French Canadians

[11:10:29.0000] <Ms2ger>
Just your ancestors?

[11:10:50.0000] <MikeSmith>
I've stolen a pig or two in my time

[11:10:53.0000] <gsnedders>
http://en.wikipedia.org/wiki/Middle_Scots#Sample_text is a good example of what Scots was like a few hundred years ago

[11:11:20.0000] <MikeSmith>
plus I've "had" a pig or two i mine time

[11:11:31.0000] <gsnedders>
(Compare with, for example, Shakespeare in first folio form — modern editions are fairly different from the original language)

[11:11:59.0000] <gsnedders>
Obviously related to English, but really quite radically different to it.

[11:13:07.0000] <MikeSmith>
modern glasgow scottish is one of the greats in terms of its utter incomprehensibility

[11:13:30.0000] <gsnedders>
Heheh. It's not that bad!

[11:13:49.0000] <gsnedders>
(I didn't find it that bad when I first moved to Glasgow.)

[11:14:25.0000] <MikeSmith>
glasgow scots are basically barbarians who have barely mastered speech

[11:14:54.0000] <MikeSmith>
pretty sure some thug is now going to kill me for saying that

[11:17:41.0000] <annevk>
rafaelw_: is the idea that the HTML parser will define the parsing algorithm for <template>?

[11:18:38.0000] <annevk>
rafaelw_: because if that's the case, and that would make sense to me, it might be worth filing a bug against HTML at this point too, with some explanation of the goal

[11:19:08.0000] <annevk>
rafaelw_: so the HTML WG is not surprised and we don't get useless revert requests that hober then has to waste time on

[11:19:47.0000] <annevk>
(I guess the alternative is to buy hober even more beer, but I'm not sure that's wise)

[11:22:04.0000] <rafaelw_>
annevk: is there alternative to that?

[11:22:23.0000] <hober>
annevk: :)

[11:23:47.0000] <rafaelw_>
(that was certainly my idea)

[11:27:45.0000] <annevk>
rafaelw_: k

[11:29:49.0000] <MikeSmith>
kickstarter for hober beer

[11:30:06.0000] <annevk>
jsbell: "// TODO: Typo in spec?" is fixed

[11:30:25.0000] <annevk>
jsbell: noticed it myself, then went to check your code, then found that :)

[11:31:40.0000] <MikeSmith>
amazing

[11:32:14.0000] <MikeSmith>
my OSX software update actually updated software without requiring me to restart

[11:32:19.0000] <rafaelw_>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16789

[11:32:21.0000] <MikeSmith>
there is hope

[11:32:34.0000] <annevk>
rafaelw_: cool, fixed the component so the email will go to the HTML WG

[11:45:58.0000] <annevk>
hober: maybe we can meet April 30 for Notifications?

[11:46:50.0000] <hober>
annevk: sure. want to come to apple for lunch?

[11:46:53.0000] <annevk>
hober: apparently doing it at the Microsoft venue is not really okay... although I'm not sure anyone actually asked

[11:47:05.0000] <hober>
weird

[11:47:54.0000] <annevk>
cool so if that's feasible we should just find John Gregg I guess and ask whoever else wants to come to come?

[11:48:34.0000] <hober>
sgtm

[11:48:52.0000] <annevk>
sweet, I'll mail the list again

[11:53:01.0000] <Ms2ger>
So, zcorpan gets to spec http://mxr.mozilla.org/mozilla-central/source/layout/style/nsStyleUtil.cpp#64 / http://trac.webkit.org/browser/trunk/Source/WebCore/css/CSSStyleSelector.cpp?rev=113922#L4920

[12:02:52.0000] <annevk>
hober: I'm starting to feel like those people that email "meeting" emails to mailing lists around all the time instead of technical content

[12:03:07.0000] <annevk>
it's only my second such email thus far, but the feeling is strong

[12:15:34.0000] <hober>
annevk: :(

[12:17:59.0000] <Ms2ger>
MikeSmith, should be done now

[12:20:31.0000] <arunranga>
annevk, https://www.w3.org/Bugs/Public/show_bug.cgi?id=16790 for micro tasks now exists #FYI

[12:21:10.0000] <annevk>
nice

[12:45:29.0000] <MikeSmith>
Ms2ger: thanks

[12:45:39.0000] <Ms2ger>
Np

[12:49:11.0000] <annevk>
"Ack: MikeSmith, decoder."

[12:51:13.0000] <Ms2ger>
Not your kind of decoder

[12:54:00.0000] <Ms2ger>
"But test suites will soon be generated based on spec links."

[12:54:08.0000] <Ms2ger>
We live in a brave new world

[12:54:15.0000] <TabAtkins>
Yesssss

[12:55:23.0000] <Ms2ger>
/me enters whatwg.org/html

[12:55:40.0000] <Ms2ger>
/me waits for the millions of tests to roll out

[12:58:51.0000] <MikeSmith>
hey does anybody here read Dr. Dobbs journal, ever?

[12:59:20.0000] <MikeSmith>
I ask because i wrote up something for that site as a favor

[13:00:16.0000] <MikeSmith>
but jackass editor at that site seems to have found that it didn't meet his narrow view of what he's interested in publishing

[13:02:02.0000] <MikeSmith>
and I'm like, hey I never read anything you publish anyway, nor does anybody else I know, so if you don't choose to publish it, then nobody's going to care anyway

[13:02:45.0000] <annevk>
what was it about?

[13:02:54.0000] <Philip`>
He's not even a real doctor

[13:03:02.0000] <MikeSmith>
"HTML5"

[13:03:29.0000] <annevk>
MikeSmith: publish on blog.whatwg.org or your own blog?

[13:03:51.0000] <annevk>
(don't read dr. dobbs journal btw)

[13:04:03.0000] <MikeSmith>
this fuckartard says he wants an article about "where the HTML5 formalization process is, what still remains to be done, how long that might take, and finally what can be done today that won't be affected by the remaining items to be done"

[13:04:13.0000] <MikeSmith>
which I have no interest in writing

[13:05:05.0000] <MikeSmith>
instead I attempted to write something for him that actual developers might be interested in reading

[13:05:32.0000] <MikeSmith>
annevk: yeah, will post it somewhere else for sure

[13:06:38.0000] <annevk>
let me know when you tweet about it or when it's up

[13:06:42.0000] <annevk>
can share from @whatwg

[13:06:48.0000] <MikeSmith>
plus he's asking, "might I ask why the original article was not written?"

[13:07:24.0000] <MikeSmith>
the answer to which is, he never offered to pay us dime one for writing it

[13:07:39.0000] <MikeSmith>
so I care fuck all what he thinks it should be

[13:08:09.0000] <MikeSmith>
this guy is apparently the executive editor for Dr. Dobbs

[13:08:23.0000] <MikeSmith>
which doesn't give me much confidence

[13:08:56.0000] <MikeSmith>
asshat

[13:09:13.0000] <MikeSmith>
annevk: yeah, will do

[13:09:34.0000] <Philip`>
An editor wanting some control over the articles that get written and published in his publication? That sounds crazy

[13:10:11.0000] <MikeSmith>
everybody please remind me to never again waste my time trying to accommodate tech journalist

[13:11:06.0000] <MikeSmith>
Philip`: apparently they can find lots of people who will write crap for them without being paid

[13:12:22.0000] <MikeSmith>
in contrast to me, where I wrote this as a favor to somebody else on the W3C team who asked me to do it

[13:12:27.0000] <MikeSmith>
not for this moron

[13:13:02.0000] <gsnedders>
u"a" in UCS-4 Python is 56 bytes. Ow.

[13:13:13.0000] <MikeSmith>
heh

[13:13:16.0000] <TabAtkins>
...what?

[13:13:31.0000] <MikeSmith>
python ftw

[13:14:30.0000] <annevk>
gsnedders: you meant to write bytes, not bits?

[13:15:11.0000] <gsnedders>
annevk: Yes.

[13:15:16.0000] <annevk>
o_O

[13:15:57.0000] <gsnedders>
I mean, type flag + repr shouldn't be that big, surely!?

[13:16:12.0000] <gsnedders>
I guess there's no type flag but a pointer to its class

[13:16:54.0000] <gsnedders>
Which would be eight bytes, plus four for the actual repr.

[13:18:45.0000] <gsnedders>
Interestingly, "a" (i.e., a byte string) is 38 bytes, even though I'd expect it to only be be three bytes smaller.

[13:30:11.0000] <Philip`>
gsnedders: x86 or amd64?

[13:30:27.0000] <gsnedders>
Philip`: amd64, lp64

[13:49:57.0000] <jsbell>
annevk: re: "TYPO in spec?" - heh, yeah, was going to dig in a bit before bugging you

[13:52:32.0000] <jgraham>
gsnedders: I think assuming 12 bytes would be wildly optimistic. It stores a bunch of things e.g. length, reference count

[13:53:26.0000] <gsnedders>
jgraham: Oh, yeah, right, Python still has ref counting…

[13:54:13.0000] <jgraham>
Well CPython

[13:54:18.0000] <jgraham>
But yes

[13:58:29.0000] <jgraham>
They also seem to store their hash value, an integer representing whether they are UCS_2, UCS_4 or various other things, an integer indicating whether they are compact, an integer indicating whether they are ascii and some sort of ready flag

[13:58:45.0000] <gsnedders>
jgraham: What version of Python are you looking at?

[13:59:02.0000] <jgraham>
http://hg.python.org/cpython/file/b5e6cbacd6ab/Include/unicodeobject.h

[13:59:11.0000] <jgraham>
Which I assume is latest trunk

[13:59:12.0000] <gsnedders>
Irrelevant. The Unicode repr is changing in 3.3.

[13:59:33.0000] <jgraham>
Seems like you could do a bunch of bit packing here to improve the memory usage

[13:59:57.0000] <jgraham>
gsnedders: You mean has changed?

[14:00:06.0000] <gsnedders>
(As it now stores stuff as ASCII when possible, and then UCS-2 if possible, and finally UCS-4 if it has to, instead of it being set by compiled.)

[14:00:29.0000] <gsnedders>
jgraham: Has changed is trunk, is changing in the next release…

[14:00:43.0000] <gsnedders>
s/by compiled/at compile time/

[14:01:44.0000] <gsnedders>
http://docs.python.org/dev/whatsnew/3.3.html#pep-393-flexible-string-representation

[14:01:45.0000] <jgraham>
2.7 seems to be http://hg.python.org/cpython/file/dd23333b579a/Include/unicodeobject.h#l413

[14:01:55.0000] <jgraham>
gsnedders: Ah, that would explain a lot

[14:02:18.0000] <jgraham>
But it will make the memory usage for your TC worse I would think

[14:02:39.0000] <gsnedders>
jgraham: Makes me want to rewrite this in C more and more…

[14:03:01.0000] <Ms2ger>
gsnedders, but think of the kittens!

[14:03:04.0000] <jgraham>
I really don't see why they need a whole int to store a compact flag and another int to store an ascii flag and another int to store a ready flag

[14:03:14.0000] <gsnedders>
jgraham: Yeah, that just seems silly.

[14:03:25.0000] <gsnedders>
jgraham: Or maybe compat with the old API?

[14:03:26.0000] <Ms2ger>
Access speed?

[14:03:47.0000] <gsnedders>
Ms2ger: ASCII/UCS2/UCS4 should all be one flag, logically.

[14:03:57.0000] <jgraham>
gsnedders: Maybe?

[14:04:12.0000] <Ms2ger>
/me points at the topic

[14:04:15.0000] <jgraham>
The old struct looks pretty differnt at least

[14:04:28.0000] <gsnedders>
jgraham: ascii is only one bit

[14:04:35.0000] <gsnedders>
jgraham: I think you need to learn more C :)

[14:05:04.0000] <gsnedders>
jgraham: (actually, it depends on how the compiler decides to layout the struct in memory, but the code dictates ascii is one bit)

[14:05:34.0000] <Ms2ger>
"Only 7-bit ASCII data is excepted."

[14:05:35.0000] <Ms2ger>
Grr

[14:06:55.0000] <jgraham>
gsnedders: Oh, I see

[14:07:02.0000] <jgraham>
Well ignore my previous complaint then

[14:07:05.0000] <gsnedders>
jgraham: Ah, 1BYTE (within kind) and ascii are different: 1BYTE_KIND allows ISO-8859-1, ascii allows US-ASCII

[14:07:21.0000] <jgraham>
I was assuming that C was a logical language

[14:07:23.0000] <gsnedders>
Probably so it knows what it can pass to system functions which expect ASCII

[14:07:43.0000] <jgraham>
So that if it said "unsigned int" you actually got an unsigned int

[14:08:15.0000] <gsnedders>
(I'm trying to implement a trie in Python without using ALL THE MEMORY.)

[14:09:20.0000] <jgraham>
gsnedders: You know short strings are intered, right?

[14:09:32.0000] <gsnedders>
jgraham: Yeah.

[14:10:02.0000] <gsnedders>
Still, my initial, trivial impl used a lot.

[14:33:37.0000] <myndzi>
that document - holy cow. incredible.

[14:33:48.0000] <myndzi>
is there a list of compliant (or close) parsers somewhere?

[14:43:07.0000] <jgraham>
What document? What parsers?

[14:46:20.0000] <myndzi>
the html parsing document on whatwg.org?

[14:46:36.0000] <Hixie>
you mean the spec? :-)

[14:46:44.0000] <myndzi>
sure

[14:46:51.0000] <myndzi>
The Spec

[14:46:53.0000] <myndzi>
:)

[14:46:57.0000] <Hixie>
as, the HTML standard?

[14:47:11.0000] <Hixie>
there's no browser that does exactly what the HTML standard says to do

[14:47:25.0000] <Hixie>
but there's several browsers who are basically trying to coverge on it

[14:47:30.0000] <Hixie>
if that's what you mean

[14:47:34.0000] <myndzi>
not a browser, a library, and i was just curious if there's a list somewhere

[14:47:42.0000] <myndzi>
to help identify the ones that do it the best

[14:47:52.0000] <Hixie>
just for the HTML parser part?

[14:48:08.0000] <Hixie>
html5lib is one i know about, validator.nu has one too

[14:48:25.0000] <myndzi>
yeah, just the html parser part

[14:48:27.0000] <Hixie>
and webkit has a parsing component, dunno how easy it would be to reuse

[14:48:31.0000] <myndzi>
tokenizing and fixing all the messed up stuff

[14:48:32.0000] <myndzi>
etc.

[14:48:48.0000] <myndzi>
i'll check em out

[15:03:05.0000] <jgraham>
Right, Opera, Gecko, WebKit, (IE10?) all have (almost) compliant parsers although they are not really easy to reuse; the Gecko parser (also used in validator.nu) probably has the most potential. html5lib has a python implementation and a less good PHP implementation. It also has some Ruby code that we don't talk about much.

[15:03:31.0000] <jgraham>
I'm not sure about other implementations. It would be nice if someone fixed libxml2

[15:03:54.0000] <myndzi>
there's one that's looking interesting in node

[15:04:09.0000] <myndzi>
looks pretty clean and thorough

[15:04:19.0000] <myndzi>
not sure if i can hijack it to my purposes or not yet ;)

[15:04:28.0000] <myndzi>
jsdom gave me trouble last time i had anything to do with it

[15:07:28.0000] <hober>
myndzi: aredridel's parser is really nice

[15:07:57.0000] <smaug____>
jgraham: there is the dom.js parser

[15:08:12.0000] <myndzi>
yeah, the more i look at it the more i'm like (!)

[15:08:19.0000] <myndzi>
this may jsut save me some work :>

[15:08:44.0000] <jgraham>
Oh yeah, there's at least two javascript implementations!

[15:09:06.0000] <smaug____>
https://github.com/andreasgal/dom.js/blob/master/src/impl/HTMLParser.js

[15:09:08.0000] <jgraham>
And hober was going to write one in elisp :p

[15:09:11.0000] <smaug____>
no idea how good that is

[15:09:28.0000] <hober>
jgraham: well, i wrote the tokenizer

[15:09:48.0000] <hober>
jgraham: but stalled out working on the treebuilder

[15:10:42.0000] <myndzi>
smaug____: lookin like the other one is nicer; this code is beautiful ;)

[15:11:59.0000] <zewt>
<arunranga> annevk: won't exactly stop race issues, but can mitigate them.

[15:12:22.0000] <zewt>
those can be eliminated, it'll just take a bit more work

[15:12:23.0000] <myndzi>
i was gonna say i wish i could clean all the excess stuff out since there's a bunch i don't need, but it looks like it's going "quite fast enough, thank you very much"

[15:12:57.0000] <arunranga>
Hi zewt, were you referring to the aftermath of https://www.w3.org/Bugs/Public/show_bug.cgi?id=16790 ?

[15:13:36.0000] <zewt>
dunno, firefox is being kicked in the head by the one-page spec at the moment :)

[15:14:07.0000] <arunranga>
Which one-page are you referring to?

[15:14:23.0000] <zewt>
http://www.whatwg.org/specs/web-apps/current-work/, the one that everyone fears clicking

[15:14:32.0000] <smaug____>
it isn't that bad

[15:14:33.0000] <gsnedders>
jgraham: Unless I'm being stupid here, unicode strings aren't interned in Python 2

[15:14:45.0000] <arunranga>
/me heh

[15:14:53.0000] <Hixie>
i haven't had any trouble with the one-page spec for a while

[15:15:05.0000] <Hixie>
dunno what hardware y'all are using but mine isn't THAT new :-)

[15:15:23.0000] <arunranga>
I actually kicked the one page spec in the head.

[15:15:32.0000] <Hixie>
(mid 2009 macbook pro and mid 2010 imac, mainly)

[15:15:37.0000] <arunranga>
(by adding 4G more RAM)

[15:15:52.0000] <Hixie>
ah, yeah, low RAM might be a problem

[15:15:58.0000] <Hixie>
i always try to max out my ram

[15:15:59.0000] <gsnedders>
Hixie: RAM is the big issue with the spec

[15:16:02.0000] <jgraham>
gsnedders: Oh, maybe

[15:16:26.0000] <arunranga>
Life on 8G of RAM makes me happy.

[15:16:40.0000] <gsnedders>
jgraham: Though looking at this again, I'm doing everything with single-char byte strings

[15:16:51.0000] <jgraham>
gsnedders: 127 characters should be more than enough for anyone

[15:17:00.0000] <zewt>
16gb, still takes a good 7-8 seconds to load (in a sub-500ms web, that's a lifetime :)

[15:17:01.0000] <smaug____>
loading the spec seems to take about 300MB

[15:17:15.0000] <gsnedders>
jgraham: In related news, we need to sort out all the strings in html5lib, because we rely upon implicit conversion often

[15:17:22.0000] <jgraham>
Yes

[15:17:26.0000] <gsnedders>
jgraham: And that conversion time probably costs us in places.

[15:17:33.0000] <jgraham>
No

[15:17:38.0000] <jgraham>
I would expect

[15:17:48.0000] <jgraham>
But we should actually do a python 3 port

[15:17:56.0000] <jgraham>
so yes, we should fix it

[15:18:11.0000] <jgraham>
Anyway I should be asleep

[15:18:23.0000] <gsnedders>
jgraham: entitiesStartingWith was last time I looked by far the slowest thing when parsing the spec

[15:18:28.0000] <gsnedders>
jgraham: And relies upon implicit conversion

[15:18:46.0000] <jgraham>
Well if we fix it and it makes us faster then I won't be unhappy

[15:19:14.0000] <jgraham>
If you fix it and it makes us faster I will be even less unhappy :)

[15:23:46.0000] <gsnedders>
jgraham: Yup, the implicit coercion costs us ~0.8s on my fairly high-powered machine

[15:24:17.0000] <gsnedders>
17.1 -> 16.3s to parse the spec

[15:30:51.0000] <gsnedders>
Pushed.

[15:47:48.0000] <gsnedders>
/me concludes that a 10% improvement in parsing the spec is good enough for half an hour of hacking, and heads to bed :)

[16:08:05.0000] <zewt>
gsnedders: looks like it's 32 bytes in 32-bit builds ... a lot of extra overhead for excessively large fields in the 64-bit build

[16:08:10.0000] <zewt>
(python strings)

[16:09:25.0000] <gsnedders>
zewt: Not that surprising seeming a lot of it is pointers.

[16:09:56.0000] <zewt>
more are just integers, actually

[16:10:18.0000] <gsnedders>
/me is obviously misremembering from looking earlier XD

[16:10:51.0000] <zewt>
string length (could have a separate "long string" type so regular sub-4gb strings don't pay for a 64-bit field), the hash (which appears to be 64-bit on 64-bit systems; should only be 32), and what appears to be a bitfield for interning (could also be 32-bit)

[16:11:17.0000] <zewt>
i'll worry about it if i ever decide to involve myself in python core development :)


2012-04-19
[22:23:24.0000] <zcorpan>
annevk: hi. do you have any good ideas on how to check https://www.w3.org/Bugs/Public/show_bug.cgi?id=16773#c3 ?

[22:28:21.0000] <annevk>
implementing HTML's encoding detection algorithm presumably

[22:28:53.0000] <zcorpan>
what does that give you?

[22:29:05.0000] <annevk>
well then you can reliably find all labels

[22:29:15.0000] <annevk>
if there's conflicts you can do an additional check

[22:29:27.0000] <zcorpan>
what we want to know (with this data) is whether supporting the label is better or worse than not supporting it

[22:29:48.0000] <zcorpan>
getting more reliable data might be good but is not what i'm trying to do right now :-)

[22:30:42.0000] <Hixie>
ship an update to 10% of your users that doesn't recognise the label, and instrument the charset menu to see how many more people on that build look at the charset menu to fix it

[22:31:23.0000] <annevk>
or decode the text using the two alternatives (stated and what the fallback would have been) and see what generates less U+FFFD

[22:31:57.0000] <annevk>
oh hey

[22:32:04.0000] <zcorpan>
i don't think either encoding would produce more U+FFFDs generally

[22:32:10.0000] <annevk>
the chairs implicitly acknowledged they were doing something weird with the innerHTML issue

[22:32:23.0000] <annevk>
zcorpan: yeah for single-byte encodings it's not gonna go that well I reckon

[22:32:29.0000] <annevk>
zcorpan: though for the "sjis" label it should

[22:32:48.0000] <annevk>
"sjis" or "windows-1252" is a world of difference

[22:32:55.0000] <zcorpan>
yeah

[22:35:44.0000] <zcorpan>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250; no-cashe; no-cache">

[22:36:06.0000] <annevk>
hahahaaha

[22:36:12.0000] <annevk>
no cash, no cache, deal

[22:39:47.0000] <Hixie>
annevk: innerHTML issue?

[22:39:55.0000] <zcorpan>
good news: all cp1250 pages also had a <meta> decl with windows-1250, so it makes no difference as to whether cp1250 is supported (in this data)

[22:45:05.0000] <annevk>
Hixie: publishing DOM Parsing & ... through the W3C

[22:45:10.0000] <Hixie>
ah, yeah, i see

[22:45:19.0000] <Hixie>
why don't you just make a CG and publish an FSA?

[22:45:42.0000] <annevk>
because I'm not editing and Ms2ger presumably cares little

[22:45:49.0000] <Hixie>
fair enough :-)

[22:57:08.0000] <zcorpan>
/me realizes he can make the script look for later decls and check what the label is there

[22:58:19.0000] <annevk>
I should really write a presentation for later today, but I sort of want to hack this HTML encoding detection algorithm in Python :)

[23:02:53.0000] <annevk>
http://dev.w3.org/csswg/cssom-view/ #css on Freenode with a link to wiki.whatwg.org...

[23:03:15.0000] <zcorpan>
annevk: what should 'euc-cn' map to?

[23:03:50.0000] <annevk>
sounds like gbk

[23:04:16.0000] <annevk>
yeah, per Wikipedia that's gb2312 which is gbk

[23:04:31.0000] <zcorpan>
thanks

[23:15:23.0000] <hsivonen>
is gbk not a subset of gb18030? gb2313 is a subset of gb18030, right?

[23:16:29.0000] <annevk>
gb2313 is a subset of gbk

[23:16:39.0000] <annevk>
but in practice they are now treated identically

[23:17:03.0000] <annevk>
gbk is in turn a subset of gb18030 and these are still treated distinct, though some people think we should merge them too

[23:17:28.0000] <annevk>
why does IE not load a data URL like data:text/html;charset=utf-8,%F8%80%80%80%80

[23:19:06.0000] <annevk>
hmm

[23:19:48.0000] <annevk>
zcorpan: why did you make HTML handle five and six byte sequences of utf-8 per old utf-8 rather than per new utf-8

[23:20:34.0000] <annevk>
zcorpan: both WebKit and Trident give 5 U+FFFD for F8 80 80 80 80 80 rather than 1 which is correct per Unicode

[23:22:15.0000] <hsivonen>
meanwhile on xml-dev: reinventing one of the most failed part of the XML ecosystem: http://lists.xml.org/archives/xml-dev/201204/msg00023.html

[23:22:24.0000] <hsivonen>
*parts

[23:24:05.0000] <annevk>
are you subscribed?

[23:31:44.0000] <hsivonen>
annevk: yes

[23:42:36.0000] <annevk>
Hixie: you just followed zcorpan for utf-8 error handling right?

[23:44:53.0000] <Hixie>
i do not recall

[23:45:00.0000] <annevk>
k

[23:47:10.0000] <Hixie>
hey are there any other specs available under free licenses that i can get local snapshots of? it would make it easier for me to grep for things... here's what i have so far: http://damowmow.com/temp/free-specs/

[23:47:26.0000] <annevk>
found https://www.w3.org/Bugs/Public/show_bug.cgi?id=9663

[23:47:45.0000] <annevk>
okay, so I'll file bugs on Opera/Gecko to fix their utf-8 decoder

[23:47:50.0000] <annevk>
and fix it in the Encoding standard

[23:48:56.0000] <Hixie>
anyone else use trello btw? i've been playing with it as a way to organise bugs in small projects and it's really quite neat

[23:49:14.0000] <Hixie>
couldn't handle a load like HTML or a browser, but for small games and stuff it's great

[23:57:10.0000] <annevk>
what's the component in Gecko Core for utf-8 bugs?

[23:58:41.0000] <annevk>
I'm going with i18n

[00:02:25.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=746900

[00:02:40.0000] <annevk>
finding utf-8 decoder bugs in 2012, teehee

[00:20:00.0000] <nesta_>
good day ;)

[00:23:21.0000] <annevk>
hsivonen: I have filed no such bug at least

[00:26:46.0000] <hsivonen>
annevk: maybe I should file one

[00:59:06.0000] <zcorpan>
annevk: dunno, maybe it matched opera when i tested

[01:00:48.0000] <jgraham>
hsivonen: What is the current state of the spec wrt about:blank?

[01:00:59.0000] <annevk>
zcorpan: k, filed a bug on Opera and Gecko to fix their utf-8 decoder

[01:01:11.0000] <jgraham>
i.e. does it match what you think needs to be implemented

[01:01:12.0000] <jgraham>
?

[01:01:24.0000] <jgraham>
Or what you have|plan to implement in Gecko?

[01:10:04.0000] <hsivonen>
jgraham: my plan is still what I described at http://hsivonen.iki.fi/about-blank/

[01:10:17.0000] <hsivonen>
jgraham: I don't expect the spec to match currently

[01:11:52.0000] <jgraham>
hsivonen: Is there a bug open?

[01:13:31.0000] <Von_Davidicus>
Hello, all.

[01:15:43.0000] <hsivonen>
jgraham: https://bugzilla.mozilla.org/show_bug.cgi?id=543435

[01:18:24.0000] <jgraham>
hsivonen: Thanks. I was thinking of a W3C bug that I could ask Hixie to look at soon :)

[01:18:37.0000] <jgraham>
(but that is helpful too)

[01:23:37.0000] <hsivonen>
jgraham: my patches have rotted quite a bit since last summer, so lately, I've mainly been focusing on making readyState less broken in Gecko

[01:24:02.0000] <hsivonen>
because it's hard to get readyState right for about:blank if readyState in general is bogus

[01:30:43.0000] <jgraham>
Sounds reasonable

[01:31:30.0000] <annevk>
zcorpan: fwiw, not sure I'll get much more work done today on labels or anything really

[01:32:15.0000] <annevk>
zcorpan: I'm planning to write a presentation on bytes/code points, and how they fuck you up when using <form>, XMLHttpRequest, and URLs, unless you use utf-8 that is

[01:32:34.0000] <annevk>
and I guess I might mention 16-bitness of ECMAScript

[01:32:49.0000] <annevk>
given all the trendy emoji stuff

[01:37:20.0000] <zcorpan>
annevk: k

[01:37:28.0000] <jgraham>
Pretty sure that a trendy presentation these days would just have one emoji on each slide, and you would shout the name of the emoji at the audience over and over before moving on to the next slide

[01:37:58.0000] <zcorpan>
having old data is annoying because many pages have changed or disappeared :-(

[01:39:26.0000] <annevk>
jgraham: I can probably go on for half an hour explaining the story behind 💩 and why its string length is 2

[01:39:28.0000] <annevk>
:p

[01:42:22.0000] <jgraham>
(which codepoint was that?)

[01:43:11.0000] <zcorpan>
http://www.fileformat.info/info/unicode/char/1f4a9/index.htm

[01:43:38.0000] <jgraham>
Oh, the obvious one

[01:44:02.0000] <kennyluck>
U+1F4A9 PILE OF POO lol, what's the story behind it?

[01:44:28.0000] <jgraham>
I just have visions of annevk standing at the front of a packed audience and saying "pile of poo" first in a calm voice and then in an increasingly irate voice

[01:44:43.0000] <jgraham>
For some minutes

[01:45:20.0000] <jgraham>
Possibly my internal sense of humor is wonky though :)

[01:46:20.0000] <tomasf>
http://xn--ls8h.la/

[01:48:53.0000] <jgraham>
Or possibly it was just reading http://westcoastlogic.com/slides/debug-mobile/#/ that left me with the idea that being shouty is fashionable

[02:13:45.0000] <MikeSmith>
hsivonen: a while back you said you were planning to land the VerifierCommandLine code from the pfalcon bitbucket fork. Still planning on doing that?

[02:14:23.0000] <hsivonen>
MikeSmith: planning, yes, doing, evidently not quickly :-(

[02:14:32.0000] <MikeSmith>
OK

[02:15:02.0000] <MikeSmith>
I also have some changes to suggest for that

[02:15:43.0000] <MikeSmith>
after it's landed

[03:05:49.0000] <zcorpan>
jgraham: i've never seen slides so full of memes as that

[03:21:00.0000] <jgraham>
Yeah memes are the new meme

[03:21:51.0000] <AryehGregor>
Someone has finally granted review to my first batch of transforms tests.

[03:22:01.0000] <AryehGregor>
Unfortunately, that means I have to work on submitting all the rest.  :(

[03:22:11.0000] <jgraham>
At W3C?

[03:22:15.0000] <AryehGregor>
Yes.

[03:22:54.0000] <jgraham>
Nice!

[03:23:05.0000] <hsivonen>
jgraham: looks like profanity is still OK on presentations slides

[03:28:17.0000] <jgraham>
hsivonen: I'm not sure I find profanity very offensive (when it isn't being used in a way intended to cause offense), so I'm not sure I am the best person to decide whether that should be socially unacceptable or not. I wouldn't do it myself for sure. Maybe one could argue it is associated with the sort of macho culture that I sometimes percieve exists in part of the web dev community. And if that culture exists I would argue it is a bad thing, so��

[03:31:50.0000] <hsivonen>
hmm. I get a feeling that Gecko might be accidentally setting readyState to "complete" and firing the load event in cases where it wasn't originally supposed to

[03:32:30.0000] <hsivonen>
brittle code is brittle

[03:32:42.0000] <hsivonen>
especially without fatal assertions and proper test cases

[04:01:52.0000] <Velmont>
hsivonen: Where? There's thousand readyStates :P

[04:08:12.0000] <AryehGregor>
Hmm.  I seem not to be able to access the US.  I think Europe works . . .

[04:08:25.0000] <hsivonen>
Velmont: e.g. in the case where an XSLT transform fails because the XSLT transform fails to compile

[04:08:51.0000] <AryehGregor>
Yay for DVCSes, I gues.

[04:08:53.0000] <AryehGregor>
Yay for DVCSes, I guess.

[04:33:36.0000] <AryehGregor>
So, WebKit used to output class="Apple-style-span" everywhere.  Spec dilemma: should we special-case the class given the amount of content that uses it?

[04:33:40.0000] <AryehGregor>
(probably substantial)

[04:33:57.0000] <AryehGregor>
If we didn't, it would leave <span class="Apple-style-span"> lying around . . . is that less bad?

[04:34:05.0000] <AryehGregor>
It doesn't affect rendering.

[04:34:15.0000] <AryehGregor>
I doubt WebKit will follow the spec if it doesn't special-case Apple-style-span . . .

[04:34:26.0000] <AryehGregor>
/me supposes it's better to special-case it, sigh

[04:36:11.0000] <AryehGregor>
(recent WebKit no longer emits that class, thankfully)

[04:36:24.0000] <AryehGregor>
(but still special-cases it for removal)

[04:36:50.0000] <gsnedders>
AryehGregor: removes it where/when?

[04:37:45.0000] <AryehGregor>
gsnedders, if you have <span class="x" style="color:red">foo</span>bar and make it green, WebKit produces <span style="color: green"><span class="x">foo</span>bar</span>.  If the class is "Apple-style-span", instead you get just <span style="color: green">foobar</span>.

[04:37:53.0000] <AryehGregor>
The richtext2 test suite tests for this.

[04:38:06.0000] <AryehGregor>
And realistically, it is better to remove it in that case.

[04:38:16.0000] <AryehGregor>
It's just ugly to write that in a spec.

[04:38:52.0000] <AryehGregor>
Sadly, WebKit tends to be extremely reluctant to degrade their behavior slightly in order to match other browsers, even when it would be much uglier or more annoying for the other browsers to change.  :(

[04:39:38.0000] <zcorpan>
that doesn't mean other browsers are willing to implement special cases for Apple-style-span just to be compatible with webkit :-)

[04:39:48.0000] <AryehGregor>
The question is what I should spec and implement.

[04:40:07.0000] <zcorpan>
does special-casing the class gain web compat?

[04:40:30.0000] <zcorpan>
if not, i see little reason to special-case it in opera

[04:40:30.0000] <AryehGregor>
In the sense of pages not breaking, no.

[04:40:36.0000] <AryehGregor>
Noted.

[04:40:48.0000] <AryehGregor>
I'm ambivalent.

[04:40:59.0000] <AryehGregor>
So I'll push the call off to ehsan.

[04:41:02.0000] <AryehGregor>
:)

[04:42:28.0000] <AryehGregor>
The only reason to do it is for richtext2, honestly.

[04:42:37.0000] <AryehGregor>
So I think I'll say to heck with richtext2, they should change.

[04:46:05.0000] <zcorpan>
hsivonen: doesn't the escape key abort document load in IE?

[04:49:07.0000] <hsivonen>
zcorpan: maybe, but that's not a Web-exposed API

[04:50:32.0000] <zcorpan>
use Watir :-)

[04:50:44.0000] <hsivonen>
looks like I need to write test cases in order to figure this stuff out. sigh.

[04:52:11.0000] <hsivonen>
and here I thought fixing readyState was a quick step that'd make fixing about:blank easier

[04:54:59.0000] <hsivonen>
there has to be a Laundry Room Viking meme in here somewhere

[04:56:51.0000] <Philip`>
jgraham: I find the bigger problem with the profanity is that it drives out any attempts to analyse the problems rationally - shouting disparaging remarks about some technology is seen as a viable substitute for understanding it, and images of angry people are a substitute for facts and data

[04:58:41.0000] <Philip`>
Even if the presenter fully understands what they're complaining about, the point of giving a presentation is that you're largely presenting to people who don't understand that area yet, and they'll end up remembering the emotion without gaining any of the understanding

[05:10:27.0000] <hsivonen>
aargh. why don't DOMContentLoaded and readystatechange propagate to the host iframe element like load?

[05:16:47.0000] <smaug____>
hsivonen: load doesn't propagate to the host iframe

[05:16:56.0000] <smaug____>
it is a separate load event for iframe

[05:21:22.0000] <hsivonen>
smaug____: ok. interesting

[05:23:24.0000] <hsivonen>
smaug____: is there a race condition-free way to observe the load, DOMContentLoaded and readychange events happening inside an iframe from the parent?

[05:24:13.0000] <hsivonen>
If I set them on .contentWindow and then navigate the iframe, it seems the navigation blows away the listeners

[05:24:16.0000] <smaug____>
if the docs are same origin, I guess the iframe could call some method in the parent

[05:24:39.0000] <hsivonen>
smaug____: ok, so the child needs to participate

[05:24:54.0000] <hsivonen>
that won't work for loading XSLT error documents into the iframe

[05:24:56.0000] <smaug____>
afaik, yes

[05:25:19.0000] <hsivonen>
the design of this platform is unfortunate

[05:26:17.0000] <smaug____>
hey, it is the Web. don't expect too much :)

[05:26:38.0000] <zcorpan>
Ms2ger: http://krijnhoetmer.nl/irc-logs/whatwg/20120418#l-1104 hmm, i had hoped we could get away with dropping one of the tables...

[05:46:59.0000] <annevk>
hello again, anyone got a visible newline character for source code?

[05:47:02.0000] <annevk>
I'm having bad luck googling one

[05:49:23.0000] <zcorpan>
v.nu uses ↩

[05:49:51.0000] <annevk>
thanks

[05:52:44.0000] <gsnedders>
/me pushes another perf optimization to html5lib, 16% quicker than 24 hours ago parsing the spec.

[05:52:54.0000] <gsnedders>
(In CPython 2.7.2)

[05:54:28.0000] <annevk>
madman

[06:09:32.0000] <annevk>
gsnedders: do you have a few minutes?

[06:14:42.0000] <annevk>
seems gsnedders is not around, can anyone else review a few slides?

[06:14:48.0000] <annevk>
oh

[06:14:50.0000] <annevk>
maybe he is

[06:25:19.0000] <hsivonen>
hooray. we don't even have interop at the simplest baseline: http://hsivonen.iki.fi/test/moz/readystate/baseline.html

[06:25:32.0000] <AryehGregor>
Reformatting by shell script, the hard way!  for FILE in ref-*/*.html; do echo -e ':set shiftwidth=2 expandtab\ngg=G:wq' | vim $FILE; done

[06:25:35.0000] <hsivonen>
Opera doesn't fire readystatechange for the transition to "interactive"

[06:25:50.0000] <AryehGregor>
/me thinks this will take a while

[06:27:41.0000] <hsivonen>
whoa! IE10 doesn't fire readystatechange to "interactive", either

[06:29:36.0000] <hsivonen>
hmm. IE9 won't start. should have snapshotted the VM more often...

[06:31:52.0000] <jgraham>
hsivonen: Seems like a clear bug in IE/Opera unless we know of a web-compat reason for the existing behaviour

[06:32:28.0000] <hsivonen>
wild. in IE9 and IE10, readyState is already "interactive" when the listeners get attached

[06:32:39.0000] <hsivonen>
so that's why IE9 and IE10 don't fire a readystatechange

[06:33:39.0000] <jgraham>
Isn't teh about:blank case something far away from the baseline?

[06:33:40.0000] <hsivonen>
in other news, WebKit and Trident don't support DOMFrameContentLoaded

[06:34:07.0000] <hsivonen>
jgraham: yes. that's why the baseline loads baseline-inner.html via HTTP

[06:34:07.0000] <jgraham>
What happens if you just do it in the top level browsing context?

[06:34:50.0000] <jgraham>
Oh, right I misread the test

[06:39:03.0000] <hsivonen>
ok. "interactive" in IE is weird

[06:39:22.0000] <hsivonen>
jgraham: without iframe: http://hsivonen.iki.fi/test/moz/readystate/without-iframe.html

[06:39:39.0000] <hsivonen>
says "interactive" in IE10 when attaching listeners

[06:40:55.0000] <hsivonen>
I wonder if IE sets readyState to interactive when it has consumed the network stream even though the parser is not supposed to have seen the whole stream yet

[06:49:38.0000] <hsivonen>
OK. IE is really weird about not doing incremental rendering: http://hsivonen.iki.fi/test/moz/slow.php

[06:49:55.0000] <hsivonen>
how slow does a page have to be to get incremental rendering in IE?

[06:50:23.0000] <hsivonen>
I feel I'm failing. I can't even establish the baseline in IE

[06:56:06.0000] <jgraham>
Opera also gets the order of events wrong

[06:56:36.0000] <jgraham>
/me has convereted the simple TC to a testharness.js test

[06:56:42.0000] <jgraham>
So I will get Opera fixed :)

[06:56:50.0000] <jgraham>
s/TC/demo/

[06:59:00.0000] <hsivonen>
slow.php above does get an incremental treament in IE6

[07:07:47.0000] <hsivonen>
I guess I have to write a shim around attachEvent if I  want the tests to work in IE6...

[07:13:18.0000] <hsivonen>
jgraham: http://hsivonen.iki.fi/test/moz/readystate/without-iframe.html changes upon reload in Opera Next

[07:13:30.0000] <hsivonen>
jgraham: says DOMContentLoaded; readyState: complete on reload

[07:13:45.0000] <hsivonen>
I guess Gecko isn't the only engine with very sad and broken readyState

[07:15:57.0000] <hsivonen>
why isn't my code working in IE6?

[07:16:03.0000] <hsivonen>
no script errors

[07:17:07.0000] <jgraham>
hsivonen: Oh man, that's sad

[07:17:19.0000] <jgraham>
Thanks

[07:17:37.0000] <hsivonen>
You're welcome

[07:23:18.0000] <hsivonen>
well, *this* is bizarre. In IE8, http://hsivonen.iki.fi/test/moz/readystate/without-iframe-slow.php is parsed incrementally, but it still says "interactive" when attaching event handlers

[07:23:36.0000] <hsivonen>
so when does *any* version of IE say "loading"?

[07:27:34.0000] <hsivonen>
http://msdn.microsoft.com/en-us/library/ie/ms534359%28v=vs.85%29.aspx says there's a "loaded" state

[07:28:34.0000] <kennyluck>
foolip, do you have any idea about how to move forward with big5? Conclude that big5-hkscs is the best we can do? Add some big5-2003 mappings to big5-hkscs?

[08:07:34.0000] <miketaylr>
hsivonen: not sure how relevant this is to what you're working on, but it came up the other day in jQuery https://github.com/jquery/jquery/pull/736/files#L1R15

[08:09:50.0000] <jgraham>
Yeah Opera seems to be Just Wrong there

[08:10:37.0000] <miketaylr>
™

[08:24:01.0000] <wilhelm>
This algorithm is wonderful: http://dvcs.w3.org/hg/webdriver/raw-file/tip/webdriver-spec.html#rendering-text

[08:24:47.0000] <jgraham>
wilhelm: Don't reference DOM3 Core!

[08:25:15.0000] <wilhelm>
jgraham: Use DOM4 instead?

[08:25:31.0000] <jgraham>
YEs

[08:25:33.0000] <wilhelm>
Oh, it's even in /tr/.

[08:25:34.0000] <jgraham>
s/E/e/

[08:25:48.0000] <Hixie>
lordy, don't reference the TR/ version

[08:25:59.0000] <wilhelm>
(c:

[08:26:04.0000] <Hixie>
that's perennially out of date

[08:26:09.0000] <wilhelm>
Noted.

[08:26:33.0000] <jgraham>
It helps if you imagine that TR stands for "Toally Wrong"

[08:26:38.0000] <jgraham>
*Totally

[08:27:00.0000] <Hixie>
"Temporally Relegated"

[08:27:41.0000] <jgraham>
If you're going for that, Retarded would be better than Relegated, I think

[08:28:30.0000] <Hixie>
"retarded" unfortunately has implications that are offensive to some

[08:28:35.0000] <wilhelm>
jgraham: More input in the same genre would be very helpful. Feel free to skim the rest of the draft. (c:

[08:28:38.0000] <jgraham>
Yeah :(

[08:28:40.0000] <Hixie>
so i tend to avoid the word entirely

[08:28:49.0000] <Hixie>
relgated is actually pretty apt, though

[08:28:53.0000] <Hixie>
relegated

[08:29:12.0000] <hober>
rel=gated?

[08:29:25.0000] <jgraham>
Retarded is used a lot in physics though

[08:29:33.0000] <jgraham>
In a non-offensive way

[08:30:56.0000] <Hixie>
yeah

[08:31:08.0000] <Philip`>
"Tired Relics"

[08:31:34.0000] <jgraham>
(e.g. "retarded waves" in http://en.wikipedia.org/wiki/Wheeler–Feynman_absorber_theory )

[08:31:47.0000] <Hixie>
the thing about TR/ is it's not necessarily so out of date that "Totally Wrong" or "Relic" would be completely fair

[08:32:10.0000] <Hixie>
it's usually only a few months out of date -- just enough to be a terrible choice for implementors, but not enough to be so obviously wrong that people naturally avoid it

[08:32:17.0000] <Hixie>
e.g. the way they typically avoid HTML4

[08:36:25.0000] <Ms2ger>
zcorpan, that sure would be nice...

[08:36:41.0000] <Ms2ger>
Does Opera have mode-specific tables too?

[08:50:02.0000] <Hixie>
hsivonen: document.open() also calls the abort stuff according to the spec, fwiw

[08:51:28.0000] <Hixie>
hsivonen: also you may be able to test IE by hitting Escape to stop it

[08:52:23.0000] <jgraham>
hsivonen: Does window.stop() actually call abort?

[08:52:34.0000] <jgraham>
er, Hixie ^]

[08:52:42.0000] <Hixie>
not per spec, but who knows about reality

[08:52:49.0000] <Hixie>
i was surprised to find i'd specced it at all :-)

[08:53:33.0000] <jgraham>
I was kind of hoping that the spec might bear some resembelance to reality here

[08:53:35.0000] <jgraham>
:)

[08:53:52.0000] <Hixie>
i'm happy to assume the spec is reality until proved otherwise :-)

[08:54:11.0000] <jgraham>
FWIW it's very unclear to me what "cancel that navigation" entails

[08:54:25.0000] <jgraham>
Is that defined anywhere?

[08:54:39.0000] <jgraham>
(I thought I filed a bug about this but it seems to have got lost)

[08:54:44.0000] <Hixie>
not explicitly. i intended it to mean you just stop the algorithm wherever you are in it

[08:55:02.0000] <Hixie>
feel free to file another using the thing in the spec

[08:55:11.0000] <Hixie>
duplicates are very low-cost

[09:01:23.0000] <jgraham>
Hixie: So apart from not firing an abort event why wouldn't window.stop() be just like running the abort algorithm?

[09:01:43.0000] <Hixie>
it probably predates my writing the abort algorithm

[09:01:53.0000] <jgraham>
OK

[09:02:38.0000] <jgraham>
The abort algorithm looks reassuringly explicit about several things that window.stop ignores :)

[09:02:46.0000] <Hixie>
:-)

[09:05:49.0000] <Ms2ger>
jgraham, and is it correct? :)

[09:06:54.0000] <jgraham>
Ms2ger: No idea :)

[09:07:34.0000] <jgraham>
Something that is explicitly wrong is easier to work with than something that is vaugely right

[09:08:19.0000] <tantek>
jgraham - is that a justification for religion over fuzzy science? ;)

[09:09:04.0000] <Ms2ger>
tantek, or astrophysics over fuzzy science? :)

[09:09:18.0000] <tantek>
astrology over astronomy?

[09:09:26.0000] <Ms2ger>
jgraham, did you say something about a testharness.js test you were going to submit? :)

[09:09:54.0000] <jgraham>
tantek: I'm not sure that religious people regard themselves as explicitly wrong :)

[09:10:51.0000] <jgraham>
But it is a justification that a scientific theory that makes an explicit, but incorrect, prediction is more valuable than a fuzzy notion that can be made to fit multiple sets of empirical findings

[09:11:13.0000] <tantek>
jgraham - those of each religion regard the others as explicitly wrong ;)

[09:12:47.0000] <tantek>
I'm not sure how valuable explicit but wrong scientific theories are, as there is no shortage of them in the space of ideas. That being said, documenting them can help reduce wasting time re-discussing them. of course that doesn't stop it from happening (on nearly every standards mailing list).

[09:13:25.0000] <jgraham>
They are very valuable. Of course you typically don't know they are wrong until later

[09:14:16.0000] <jgraham>
But without a theory that makes precise predictions you can't design an experiemnt that will test them

[09:15:10.0000] <jgraham>
Ms2ger: All in good time :)

[09:17:07.0000] <dglazkov>
good morning, Whatwg!

[09:24:49.0000] <Ms2ger>
Good, dglazkov

[09:30:58.0000] <Hixie>
+1 to precise testable statements being more valuable, even if wrong, than vague statements that can be made to fit almost any data

[10:57:47.0000] <MikeSmith>
kennyluck: somebody needs to just make an executive decision. I vote for you

[10:58:07.0000] <kennyluck>
MikeSmith, huh?

[10:58:32.0000] <MikeSmith>
"do you have any idea about how to move forward with big5? Conclude that big5-hkscs is the best we can do? Add some big5-2003 mappings to big5-hkscs?"

[10:59:37.0000] <kennyluck>
MikeSmith, oh… I have no idea... In fact I care very little about this :p

[10:59:54.0000] <MikeSmith>
and I care far less than you do

[11:00:16.0000] <MikeSmith>
especially since most sites in china are about how to pirate software anway

[11:01:18.0000] <kennyluck>
MikeSmith, I believe most sites related to piracy have all changed to use utf-8 for business reasons ;)

[11:01:34.0000] <MikeSmith>
heh

[11:02:41.0000] <kennyluck>
only sites that don't make money and sites nobody care about still use legacy big5.

[11:02:47.0000] <MikeSmith>
yeah

[11:03:19.0000] <MikeSmith>
seriously I think it makes more sense to break content for mainland china than it does for taiwan

[11:03:28.0000] <MikeSmith>
since taiwan is open

[11:03:39.0000] <MikeSmith>
and PROC is not

[11:04:23.0000] <MikeSmith>
I mean, a few broken sites for mainland users is nothing compared to the thousands of sites they can't to at all at anyway

[11:05:04.0000] <MikeSmith>
and they are used to dealing with things

[11:05:24.0000] <MikeSmith>
the savvy users I mean

[11:06:23.0000] <MikeSmith>
plus I really wonder what kinds of sites are using the extended stuff anyway, and why

[11:06:42.0000] <MikeSmith>
kennyluck: btw, are you in Beijing?

[11:07:14.0000] <MikeSmith>
I was there last month you know

[11:07:24.0000] <MikeSmith>
and I expected I'd run into you

[11:07:31.0000] <MikeSmith>
but you were nowhere to be found

[11:09:37.0000] <MikeSmith>
in other news, Emotion Markup Language headed to CR

[11:10:02.0000] <Ms2ger>
\o_

[11:10:25.0000] <TabAtkins>
Please mark up that emotion semantically, Ms2ger

[11:17:24.0000] <jgraham>
TabAtkins: That's an emotion? I thought it was "guiding a plane in to land"

[11:17:56.0000] <Ms2ger>
Beep

[11:18:26.0000] <TabAtkins>
jgraham: If you dont' feel emotions when you successfully guide a plane in to land, you're dead inside.

[11:20:01.0000] <jgraham>
Who said anything about successfully?

[11:20:09.0000] <TabAtkins>
Either way, really.

[11:20:42.0000] <Ms2ger>
If you don't feel emotions when you make a plane crash on landing, you're not dead inside?

[11:23:15.0000] <Philip`>
Ms2ger: Surely it's the passengers who are dead inside

[11:23:39.0000] <Ms2ger>
/me kicks Philip` 

[12:49:46.0000] <Hixie>
sigh, so annoying that webvtt is in a separate document rather than part of the html spec

[12:50:24.0000] <Ms2ger>
Ah, the joys of CGs

[14:01:05.0000] <smaug____>
dglazkov: so inside decorators, <script> element would work in a different way than elsewhere in DOM ?

[14:01:15.0000] <smaug____>
(different 'this')

[14:13:19.0000] <dglazkov>
smaug____: yes.

[15:10:29.0000] <annevk>
gotta love this email http://mail.apps.ietf.org/ietf/charsets/msg02053.html

[15:11:21.0000] <annevk>
great timing too while I was away advocating usage of utf-8 at a local developer meetup http://annevankesteren.nl/presentations/1F4A9.html

[15:11:52.0000] <TabAtkins>
Argh, ietf, y u use <pre> without manual line-wrapping?

[15:13:09.0000] <TabAtkins>
I fail to see how "pages will be broken even with a common standard" is any different from "pages will be broken because there's no common standard".

[15:13:25.0000] <TabAtkins>
Or, more precisely, I fail to see how the former is an argument against a common standard, given the latter being true today.

[15:14:24.0000] <annevk>
I'm not going to reply today, but he's saying some great future Claim Chowder stuff and in general ignoring my point that interpreting existing content is hard

[15:14:37.0000] <TabAtkins>
Claim Chowder?

[15:14:57.0000] <annevk>
I mean "Use Unicode." is not an answer if you want to decode a page encoded in euc-kr or gbk

[15:15:22.0000] <TabAtkins>
Indeed.

[15:15:37.0000] <annevk>
"There’s a term called Claim Chowder that was, as far as I can tell, coined by Daring Fireball’s John Gruber. It refers to when someone makes a prediction with an aura of certainty and knowledge that turns out to be horribly wrong."

[15:15:42.0000] <annevk>
-- http://401stblow.wordpress.com/2010/01/20/claim-chowder/

[15:16:07.0000] <zewt>
annevk: nothing validates microsoft-hatred quite as much as "this is broken, we'll never fix it, we don't care how much pain this causes the industry, go away"

[15:22:59.0000] <zewt>
(not that they're the only ones guilty of that, like the webgl guy saying that he won't change typed array views to little endian in the spec regardless of anything anyone says)

[15:26:16.0000] <annevk>
Microsoft also would not do CORS or XMLHttpRequest Level 2

[15:26:26.0000] <annevk>
at some point we thought they would not do anything with their browser anymore

[15:27:02.0000] <annevk>
aligning quirks mode seemed out of the question too

[15:27:16.0000] <annevk>
it's like they can't see the game long term

[15:27:36.0000] <zewt>
(or else, the usual conspiracy theories)

[15:28:04.0000] <annevk>
it's no problem, we'll just lead the platform with Presto/WebKit/Gecko and they'll hobble along later

[15:34:55.0000] <smaug____>
dglazkov: what is setupEvent ?

[15:40:40.0000] <annevk>
heh, the other guy is questioning if I have the right to tighten up utf-8

[15:42:26.0000] <Hixie>
annevk: the great thing about implementors who say they won't change at all is that it frees you to ignore their implementation

[15:43:01.0000] <Hixie>
annevk: it's equivalent to a (closed source) vendor having gone out of business

[15:43:14.0000] <zewt>
annevk: ... but you're not, you're just writing a parser for something that is already (as far as I know) tightly specified

[15:43:59.0000] <zewt>
it's not like you're making up new rules

[15:44:03.0000] <annevk>
Unicode has options for the error handling, with a should for the variant in my draft

[15:44:23.0000] <annevk>
Unicode also does not define all the utf-8 labels last I checked

[15:44:35.0000] <annevk>
and I'm not sure if BOM handling is identical

[15:44:43.0000] <annevk>
and it's in a silly PDF

[15:45:00.0000] <zewt>
that's sort of out of scope for the UTF-8 definition itself; you're just defining a bit more than that

[15:45:07.0000] <annevk>
Hixie: yeah, although we have to reverse engineer them mostly :)

[15:45:23.0000] <Hixie>
annevk: well that's about being compatible with content that relies on their implementation

[15:45:32.0000] <annevk>
fair enough

[15:45:50.0000] <Hixie>
annevk: the arguments you're getting here are the same as the arguments we got when speccing the html parser

[15:45:51.0000] <zewt>
(it's not like you're really saying "this is how utf-8 handles the BOM", you're saying "this is how UTF-8 works, and when used by browsers, we treat the UTF-8 BOM in this way")

[15:46:16.0000] <Hixie>
annevk: and the same as the arguments about how living standards are bad because they are "unstable"

[15:46:43.0000] <Hixie>
annevk: i.e. the assumption that the spec will not be of sufficient quality to actually beat implementations at the QoI game

[15:47:17.0000] <Hixie>
annevk: that any change to the spec is by definition one that makes the spec worse

[15:47:21.0000] <annevk>
Hixie: he omitted what I said in the previous email, but the HTML parser was my example, see http://mail.apps.ietf.org/ietf/charsets/msg02050.html

[15:47:55.0000] <Hixie>
annevk: i doubt this guy has any idea what we did with html, your e-mail probably way over his head

[15:48:16.0000] <Hixie>
annevk: you can't really fault people for thinking that what we're doing is dangerous, i mean, for the longest time specs didn't try to match reality

[15:48:53.0000] <Hixie>
annevk: people who haven't spent years seeing the recent changes to web spec quality are just assuming we're doign the same as everyone else, and changing things blindly

[15:49:43.0000] <annevk>
dangerous how though? to their job as expert about undocumented knowledge?

[15:49:46.0000] <zewt>
blindly assuming that other people are doing things blindly

[15:49:50.0000] <zewt>
there's no small irony in that

[15:50:30.0000] <Hixie>
annevk: to compatibility

[15:50:46.0000] <Hixie>
annevk: as in, if they implement it, their implementation will be of lower quality relative to existing content than if they did not

[15:50:59.0000] <annevk>
I also find it somewhat funny he thinks my effort would be better put into promoting utf-8; I've been promoting utf-8 since before I understood how it actually worked, but still in 2012 browsers deal with encoding bugs

[15:51:14.0000] <annevk>
Hixie: ah right

[15:51:22.0000] <Hixie>
q.v. people telling me i should promote content-type. or xhtml2. :-)

[15:51:43.0000] <Hixie>
or link headers

[15:51:50.0000] <Hixie>
or namespaces

[15:51:51.0000] <Hixie>
or...

[15:51:55.0000] <annevk>
SGML comments!

[15:51:58.0000] <annevk>
oh wait

[15:51:59.0000] <Hixie>
indeed!

[15:52:10.0000] <Hixie>
sgml in general

[15:52:36.0000] <Hixie>
all these things i used to promote before i realised that our efforts are better spent designing resilient technologies than trying to educate the world :-)

[15:57:55.0000] <annevk>
oh, I think I somewhat convinced :emk about the Encoding Standard

[15:58:21.0000] <annevk>
nice

[16:00:13.0000] <annevk>
oh, I should update my WebVTT validator

[16:00:34.0000] <annevk>
it still has options implemented as single letters

[16:00:46.0000] <annevk>
well, settings I guess they were called

[16:04:56.0000] <Hixie>
:emk?

[16:05:08.0000] <zewt>
vim? heh

[16:08:05.0000] <ojan>
anyone know the state of moving eventtarget from being a mixin to a superclass in opera, gecko, IE?

[16:08:36.0000] <ojan>
the webkit bug is stalled due to a resistance to moving forward without other browser vendors changing around the same time. :(

[16:09:00.0000] <smaug____>
ojan: slowly in progress in gecko

[16:09:16.0000] <smaug____>
XHR has that already

[16:09:25.0000] <ojan>
smaug____: is there a bug i can follow?

[16:09:43.0000] <smaug____>
and other objects should get the same behavior as we move to new dom bindings

[16:09:49.0000] <smaug____>
ojan: not really

[16:09:56.0000] <ojan>
smaug____: ok...thanks

[16:11:20.0000] <smaug____>
perhaps slowly was wrong

[16:11:33.0000] <smaug____>
but I think only XHR will have it in FF14

[16:16:53.0000] <annevk>
Hixie: works on encodings among other things in Gecko

[16:21:12.0000] <Hixie>
annevk: cool

[16:21:44.0000] <annevk>
ojan: you guys should make it easier to experiment with changes to be able to convince the other guys

[16:21:54.0000] <annevk>
ojan: I think

[16:22:18.0000] <ojan>
annevk: that's true...we could put this behind a flag and just ship in in chromium for now

[16:22:18.0000] <annevk>
ojan: we don't really have the resources so it's mostly Gecko that's bearing the cost of slowly fixing up the platform

[16:22:27.0000] <annevk>
we = Opera

[16:22:31.0000] <ojan>
annevk: yup

[16:22:48.0000] <ojan>
annevk: chromium would be willing to ship it and deal with any fallout

[16:23:29.0000] <annevk>
sleepytimes here, nn


2012-04-20
[18:05:16.0000] <isherman>
Is there a handy way to print a stack trace when debugging WebKit code (outside of a debugger)?

[18:05:57.0000] <isherman>
oops, wrong channel...

[22:52:29.0000] <hsivonen>
I'm bad at using Microsoft APIs. I make the same mistake every time with attachEvent: I forget to prepend "on" to the event names

[22:55:26.0000] <annevk>
pretty pleased with Travis Leithead as editor for DOM Level 3 Events

[22:56:09.0000] <annevk>
not sure if it's because he addresses my comments mostly the way I want or just the pragmatic way (via testing and by tracking all changes publicly) he does so

[22:56:14.0000] <annevk>
hopefully the latter

[23:23:40.0000] <zcorpan>
why was this link not linkified correctly? http://krijnhoetmer.nl/irc-logs/whatwg/20120419#l-604

[23:24:37.0000] <annevk>
perhaps because the space after the link

[23:24:51.0000] <annevk>
just a guess

[23:25:40.0000] <zcorpan>
space after usually *helps* :-)

[23:27:56.0000] <annevk>
(e.g. "retarded waves" in http://en.wikipedia.org/wiki/Wheeler–Feynman_absorber_theory)

[23:28:06.0000] <annevk>
well that was not it

[23:28:48.0000] <annevk>
krijn: krijnh: URL regexp to fix ^^ fun times!

[23:38:46.0000] <zcorpan>
Ms2ger: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1481 seems opera doesn't have it

[23:46:54.0000] <zcorpan>
although opera doesn't seem to use 13px as base size there

[23:47:19.0000] <annevk>
replied to ietf-charsets

[23:47:24.0000] <annevk>
what's next...

[00:01:10.0000] <zcorpan>
"Our implementation of encodings WILL NOT change.  Ever." - isn't that what microsoft said about the html parser too back in the day?

[00:02:00.0000] <annevk>
I was thinking of writing a blog post titled "same code points"

[00:07:16.0000] <annevk>
done http://annevankesteren.nl/2012/04/same-code-points

[00:10:55.0000] <annevk>
foolip: kennyluck: so it sounds like we want to combine big5-2003 and hkscs?

[00:14:16.0000] <kennyluck>
annevk, yeah, to achieve the maximum pages that are correctly decoded, hkscs still has a bunch of allowance that can be tweaked (they currently map to U+FFFD), although whether tweaking a legacy encoding at this point is a good idea or not is beyond my knowledge.

[00:15:47.0000] <annevk>
depends on the data

[00:16:37.0000] <annevk>
jgraham: in http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#indexes is "(as decimal number)" wrong?

[00:16:44.0000] <annevk>
jgraham: should it be "as a decimal number"?

[00:58:51.0000] <zcorpan>
i didn't know U+0040 was called "COMMERCIAL AT"

[01:06:01.0000] <annevk>
why does IE not support URLs such as data:text/html;charset=ibm864,%A7

[01:06:09.0000] <annevk>
oh well

[01:07:15.0000] <zcorpan>
TabAtkins: U+005C REVERSE SOLIDUS (\) in 3.4.4. Double-quote-string state doesn't seem to support char escapes like http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1483

[01:11:01.0000] <zcorpan>
TabAtkins: "Otherwise, create a hash token with its value set to the returned character." (hash state), what's the returned character?

[01:12:10.0000] <zcorpan>
(i think both should use "consume an escaped character")

[01:18:54.0000] <AryehGregor>
This is so, so, so, so true: http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/

[01:19:27.0000] <AryehGregor>
And for anyone who says "But Wikipedia is written in PHP!" -- I can assure you as a former MediaWiki developer that most MediaWiki developers hate PHP and wish it were written in something else.

[01:20:48.0000] <annevk>
MikeSmith: http://dvcs.w3.org/hg/encoding/rev/94f075e5eabb yields 500

[01:23:16.0000] <hsivonen>
so does anyone know what I need to do to see document.readyState == 'loading' in IE?

[01:24:54.0000] <hsivonen>
I didn't expect the spec and the IE behavior to be *this* far apart for a feature introduced by IE

[01:28:15.0000] <[tm]>
annevk: away from my PC. off to meet my daughter for dinner. will check it when i get back

[01:29:25.0000] <annevk>
http://webkitmemes.tumblr.com/post/18511335915/seems-easier-to-just-e-mail-anders-and-sam heh

[01:29:39.0000] <annevk>
[tm]: no rush man

[01:30:16.0000] <annevk>
I remember there was a similar thing in 2004 or so where IBM had this really specific Gecko listing

[01:32:00.0000] <hsivonen>
this: http://ln.hixie.ch/?start=1052961695&count=1

[01:32:07.0000] <hsivonen>
2003 even

[01:32:52.0000] <annevk>
thank you!

[01:33:01.0000] <annevk>
I thought it was bz that had posted it

[01:37:16.0000] <hsivonen>
OK. This shows "loading" but no "interactive" in IE9: http://hsivonen.iki.fi/test/moz/readystate/document-open.html

[01:38:21.0000] <hsivonen>
no two browser engines do the same thing on that demo

[01:38:51.0000] <hsivonen>
Gecko 14 and Chrome 20 do the same thing if you ignore differences in support for FrameDOMContentLoaded

[01:49:52.0000] <Ms2ger>
/me grumbles at Opera's projection stuff

[01:49:56.0000] <hsivonen>
ok. I added one more log() call after calling document.close() do show that Gecko and WebKit are radically different, too

[01:50:34.0000] <hsivonen>
somehow, the Web works with this level of blatant differences in document loading

[01:50:54.0000] <annevk>
Ms2ger: find me an easier way to write a presentation and I'll use it

[01:51:13.0000] <Ms2ger>
annevk, oh, I like it

[01:51:28.0000] <Ms2ger>
Only pgdn moves slightly too far down, somehow

[01:52:01.0000] <annevk>
oh

[01:52:04.0000] <annevk>
sounds like a bug

[01:54:08.0000] <foolip>
annevk, kennyluck, I'm not sure about that, if Big5-2003 doesn't conflict at all with HKSCS that might work, but only cherry-picking from 2003 seems a bit weird.

[01:54:39.0000] <annevk>
big5 -> big5-2003 -> big5-hkscs

[01:54:40.0000] <foolip>
Also, the 2003 mappings don't actually seem to work that well for all the pages I listed, but that email is still in my outbox

[01:54:46.0000] <annevk>
ah

[01:55:19.0000] <foolip>
annevk, are you saying that 2003 is a strict subset of hkscs?

[01:55:27.0000] <kennyluck>
big5-hkscs is certainly not a superset of big5-2003 last I check.

[01:55:45.0000] <foolip>
right, I didn't think so

[01:55:53.0000] <annevk>
foolip: no I'm saying that's how we could layer things

[01:56:20.0000] <annevk>
but if big5-2003 is not actually that great that would not make sense of course

[01:57:20.0000] <kennyluck>
foolip, yeah, cherry picking doesn't always work.

[01:57:25.0000] <kennyluck>
/me is waiting for that mail.

[01:57:41.0000] <foolip>
kennyluck, tonight, it's on my computer at home :)

[01:58:06.0000] <annevk>
so what should happen for the encoder?

[01:58:08.0000] <foolip>
if an authoritative (non-PUA) mapping for Big5-2003 exists it would be easier to figure out, it's hard to have confidence in a mapping deduced from relatively few sitse

[01:58:33.0000] <foolip>
annevk, depends on the decoder(s), right?

[01:58:46.0000] <foolip>
annevk, btw, your exchange with Shayne was a good read on the bus :)

[01:58:50.0000] <kennyluck>
No, I think we should only do CP950 encoding.

[01:58:54.0000] <annevk>
foolip: heh

[01:59:41.0000] <kennyluck>
or a non-PUA subset, I don't know.

[02:00:21.0000] <foolip>
does CP950 include HKSCS?

[02:00:27.0000] <annevk>
no

[02:00:56.0000] <annevk>
http://en.wikipedia.org/wiki/Code_page_950

[02:01:19.0000] <foolip>
not encoding Cantonese properly when labeled as Big5 seems like a bad idea

[02:01:54.0000] <foolip>
the question, to me, is if there exists another encoding than HKSCS that would work better for Taiwan or not

[02:02:11.0000] <foolip>
Firefox's UAO doesn't seem to be it, not without modification

[02:04:26.0000] <foolip>
Figuring out how that ~UAO content ended up on the Web (using which OS and which fonts) would probably give some clues.

[02:05:36.0000] <kennyluck>
I don't think it's a bad idea to output as much numeric character references either, though I am not knowledgable about the security implication of a non-bidirectional approach.

[02:06:21.0000] <hsivonen>
Stuff I just learned: calling document.write will make IE9 start layout sooner

[02:08:11.0000] <kennyluck>
foolip, For UAO, you just install the UAO package on Windows and you are starting to produce UAO content. I am more curious about how non-UAO big5-2003 ended up on the Web...

[02:08:37.0000] <foolip>
kennyluck, does that UAO package include a font as well?

[02:08:51.0000] <foolip>
perhaps looking at these pages using that installed will reveal something...

[02:09:31.0000] <Ms2ger>
Hmm

[02:10:13.0000] <Ms2ger>
Opera still doesn't support clamping for ImageData.data?

[02:11:14.0000] <hsivonen>
TimBL is not Father of the Internet: https://twitter.com/#!/EU_Justice/status/193264746798129152

[02:11:26.0000] <hsivonen>
s/not/now/

[02:12:06.0000] <annevk>
is that a promotion?

[02:12:44.0000] <Ms2ger>
He is now Al Gore

[02:14:03.0000] <hsivonen>
I'm too lazy to reorganize my code to work in IE6

[02:14:11.0000] <hsivonen>
now that it works in IE8

[02:14:41.0000] <hsivonen>
"works" meaning that the logging code runs successfully in my readyState demos

[02:15:09.0000] <hsivonen>
it's rather surprising what doesn't work in IE6

[02:15:28.0000] <hsivonen>
either closures or .contentDocument at particular moments

[02:16:00.0000] <zcorpan>
foolip, annevk: http://simon.html5.org/dump/encoding-labels/TODO

[02:16:16.0000] <hsivonen>
so I give up on establishing a baseline that'd show both "loading" and "interactive" in any version of IE

[02:16:43.0000] <hsivonen>
I guess I'll just move on to more complex cases now and conclude that IE is buggy even at baseline

[02:17:07.0000] <foolip>
zcorpan, I can generate a list of URLs from the top million sites if that would help

[02:17:29.0000] <annevk>
zcorpan: I think today I can start writing the detection algorithm, but maybe I'll update WebVTT first

[02:17:38.0000] <hsivonen>
I think it's fair to describe an IE-introduced feature as buggy in IE when it behaves non-sensically and contrary to MSDN docs

[02:17:42.0000] <annevk>
I'm also sleep deprived, so maybe it'll spread out over the weekend :)

[02:18:05.0000] <hsivonen>
Stuff to test:

[02:18:10.0000] <hsivonen>
1) Normal external script

[02:18:21.0000] <hsivonen>
2) slow async script

[02:18:26.0000] <hsivonen>
3) defer script

[02:18:33.0000] <hsivonen>
4) slow defer script

[02:18:39.0000] <hsivonen>
5) slow image

[02:18:40.0000] <annevk>
zcorpan: also, 1) thanks for the help and 2) I fixed some label typos in the draft and updated the Opera mismatch data

[02:18:53.0000] <hsivonen>
6) window.stop()

[02:18:58.0000] <hsivonen>
7) XSLT that works

[02:19:04.0000] <hsivonen>
8) XSLT that fails

[02:19:08.0000] <hsivonen>
9) XML that works

[02:19:12.0000] <hsivonen>
10) XML that fails

[02:19:16.0000] <hsivonen>
11) XHR

[02:19:36.0000] <hsivonen>
12) document.open() in mid-stream

[02:19:48.0000] <hsivonen>
13) window.location in mid-stream

[02:20:01.0000] <hsivonen>
14) window.location.reload() in mid-stream

[02:20:04.0000] <hsivonen>
What else?

[02:21:17.0000] <hsivonen>
15) Detaching the host iframe from doc in mid-stream

[02:21:51.0000] <zcorpan>
foolip: i guess that could be useful

[02:21:56.0000] <annevk>
CSS loading?

[02:22:05.0000] <foolip>
zcorpan, don't guess, it would take 12 days to generate

[02:22:58.0000] <zcorpan>
foolip: it'd take days to run the research too, but i don't have immediate plans to do it :-)

[02:23:32.0000] <foolip>
zcorpan, ok, let me know if you need Bing results and don't wanna set it up yourself later :)

[02:23:35.0000] <zcorpan>
so, wait with generating it until there's code to run the research

[02:23:49.0000] <zcorpan>
k

[02:25:00.0000] <annevk>
what is the stability of WebVTT these days foolip?

[02:25:26.0000] <foolip>
annevk, still undergoing tweaking, but I don't expect the basic syntax will break

[02:25:39.0000] <foolip>
possibly line endings will change, but I'm not sure

[02:25:47.0000] <annevk>
line endings really?

[02:26:02.0000] <zcorpan>
<br> has been proposed

[02:26:37.0000] <annevk>
is that why nobody is bugging me about the parser/validator or does nobody care?

[02:26:52.0000] <hsivonen>
WebVTT: reinventing HTML one tag at a time. :-)

[02:26:55.0000] <annevk>
because if it's still in flux maybe I better work some more on encodings

[02:27:15.0000] <foolip>
annevk, I don't think the spec has changed much since you wrote it

[02:28:49.0000] <annevk>
http://dev.w3.org/html5/webvtt/#parse-the-webvtt-settings has changed

[02:28:55.0000] <annevk>
now there's "vertical" and such

[02:29:28.0000] <annevk>
I guess I'll just add that in, should not be hard

[02:31:35.0000] <hsivonen>
Chrome behaves more sensibly with an external script present: http://hsivonen.iki.fi/test/moz/readystate/document-open-external-script.html

[02:33:00.0000] <hsivonen>
IE9 doesn't behave sensibly

[02:33:10.0000] <Ms2ger>
News at 10

[02:33:33.0000] <zcorpan>
annevk: did you fix --> handling?

[02:34:30.0000] <hsivonen>
\o/ The external script makes IE10 almost sensible

[02:34:35.0000] <hsivonen>
but not quite

[02:34:48.0000] <hsivonen>
there's a readystate change from loading to loading

[02:35:30.0000] <annevk>
zcorpan: probably not?

[02:37:46.0000] <zcorpan>
annevk: the spec changed at some point to always make --> start a new cue

[02:39:20.0000] <annevk>
oh yeah I think I fixed that

[02:41:47.0000] <zcorpan>
ok

[03:15:50.0000] <annevk>
fixed http://quuz.org/webvtt/

[03:16:03.0000] <annevk>
https://bitbucket.org/annevk/webvtt/changeset/f8c4f81a15a4 is the changeset

[03:19:07.0000] <zcorpan>
oh yeah, iirc there's a bug on allowing a space after the colon in the settings

[03:20:11.0000] <annevk>
enabling that would suck

[03:20:19.0000] <annevk>
but it's not big deal

[03:20:51.0000] <zcorpan>
not supporting it sucks for authors, imho :-)

[03:21:44.0000] <annevk>
changing the format all the time does too

[03:22:01.0000] <annevk>
although this would technically be a compatible change

[03:45:40.0000] <zcorpan>
hmm, maybe encoding-labels/TODO should not bother with adjusting the fallback encoding, since if recognizing more labels means more content works regardless of what the fallback encoding is, that seems like a win

[03:46:24.0000] <hsivonen>
now after lunch, I've made defer scripts on my list and I'm already finding shocking things

[03:46:51.0000] <zcorpan>
(for pages that declare their encoding using one of the funny labels and it happens to match the fallback encoding for the majority of people reading those pages)

[03:46:54.0000] <hsivonen>
this whole area may indeed be so full of uninteroperable bugs that we can fix stuff if we want to

[03:47:14.0000] <Velmont>
^^

[03:47:18.0000] <Ms2ger>
Woo!

[03:47:37.0000] <Velmont>
Many incompatible bugs => Goodie, we can fix it. :]

[03:47:39.0000] <zcorpan>
hsivonen: fix stuff if we want to? No! WE WILL NEVER CHANGE.

[03:58:58.0000] <hsivonen>
everyone likes having their browser locked while the XSLT engine computes n-queens: https://www.ibm.com/developerworks/mydeveloperworks/blogs/HermannSW/entry/n_queens_xsl_xml14?lang=en

[04:02:22.0000] <annevk>
zcorpan: yeah I think we should add cpXXXX stuff

[04:02:51.0000] <annevk>
most of the ones Opera recognizes are ones that only one other impl does not

[04:02:59.0000] <annevk>
although the microsoft-XXXX are dubious

[04:11:05.0000] <hsivonen>
jgraham: window.stop really aborts the parser in Gecko and WebKit but not in Opera: http://hsivonen.iki.fi/test/moz/readystate/window-stop.html

[04:12:16.0000] <zcorpan>
ok somebody needs to patch Lynx to support <blink>

[04:14:26.0000] <hsivonen>
this is such a mess. window.stop() suppressed pageshow in WebKit but not in Gecko

[04:14:35.0000] <hsivonen>
in WebKit, the parser aborts synchronously

[04:15:12.0000] <hsivonen>
in Gecko, upon window.stop(), pageshow fires before DOMContentLoaded

[04:16:51.0000] <hsivonen>
whoa. msdn search searches StackOverflow these days

[04:18:18.0000] <smaug____>
hmm, what does the spec say about pageshow

[04:19:25.0000] <hsivonen>
smaug____: should fire after "load"

[04:20:03.0000] <smaug____>
but what if there is no load

[04:20:30.0000] <smaug____>
at least spec is wrong here

[04:20:45.0000] <smaug____>
no doubt, implementations too

[04:20:58.0000] <hsivonen>
pretty much everything is wrong here

[04:23:57.0000] <jgraham>
hsivonen: Interesting

[04:24:47.0000] <jgraham>
I am not at peak productivity at the moment due to installing a new OS to avoid dataloss due to impending HD failure

[04:25:18.0000] <jgraham>
So far I am not impressed with the amount of time it is taking me to set stuff up, or with the last two years of ubuntu development

[04:25:46.0000] <gsnedders>
jgraham: Mint > Ubuntu.

[04:26:42.0000] <jgraham>
gsnedders: iirc they were doing some evil thing with their browser configuration. Also I like distributions that I think will still have a substantial userbase in two years

[04:27:40.0000] <jgraham>
And, you know, I will probably eventually manage to make the launcher thing work in a non-retarded way

[04:28:29.0000] <jgraham>
And figure out how to change the keyboard bindings that I don't like

[04:29:18.0000] <gsnedders>
jgraham: I'd expect Mint to still have a significant userbase in two years, and to continue its current growth (mainly to the detriment of its upstream Ubuntu).

[04:36:05.0000] <hsivonen>
gsnedders: what's actually better about Mint?

[04:36:46.0000] <hsivonen>
can I buy support for Mint? is there an equivalent of askubuntu.com for Mint?

[04:37:06.0000] <hsivonen>
does Mint hibernate better?

[04:37:21.0000] <hsivonen>
does Mint actually do proper regression testing of drivers?

[04:37:28.0000] <gsnedders>
hsivonen: It seems less buggy, and the UI hasn't been bastardized.

[04:38:02.0000] <hsivonen>
gsnedders: how can it be less buggy if it's downstream from Ubuntu?

[04:38:03.0000] <gsnedders>
I doubt at a low-level it's any less buggy, though, given it's basically just a set of packages on top of Ubuntu.

[04:38:18.0000] <hsivonen>
is it Gnome2 or Gnome3?

[04:38:24.0000] <gsnedders>
hsivonen: A lot of the GNOME packages are n't the Ubuntu ones, for example

[04:38:28.0000] <hsivonen>
I actually prefer Unity over Gnome2

[04:38:33.0000] <hsivonen>
I haven't used Gnome3

[04:38:57.0000] <hsivonen>
so it's like Ubuntu with vanilla Gnome?

[04:39:02.0000] <gsnedders>
hsivonen: You have a choice of MATE (GNOME2 fork) or GNOME3, albeit with a fairly custom UI which actually is usable

[04:39:15.0000] <hsivonen>
ok

[04:39:24.0000] <gsnedders>
(I at least find vanilla GNOME3 really confuisng)

[04:41:34.0000] <gsnedders>
hsivonen: I guess some perception of buginess is down to the fact they will delay releases more than Ubuntu do for critical bugs.

[04:43:58.0000] <jgraham>
Right, I figured out how to open the launcher thing with a key so now I can hide it. Now only the top menu thing is annoying. Well not only that but it's the thing I can see

[04:44:44.0000] <jgraham>
If anyone knows how I can bind a shortcut to "move window to other monitor" please let me know. I didn't see it in the prefs

[04:46:35.0000] <AlexNRoss>
I have a question in regards to WAI-ARIA as described on the WHATWG HTML5 spec.

[04:47:12.0000] <AlexNRoss>
It states that <ol> may have a role of "tablist", however the W3 Validator disagrees with this.

[04:48:24.0000] <AlexNRoss>
Can anyone determine if it is W3 Validator that is incorrect or if it is a mishap in the HTML5 spec?

[04:51:00.0000] <AlexNRoss>
Example: http://pastebin.com/n5Z3LJ8L

[04:51:33.0000] <[tm]>
al	

[04:51:42.0000] <Velmont>
jgraham: I've moved my work machines over to Arch Linux. :-)

[04:52:13.0000] <Velmont>
(or, am moving right now. Hate copying files, so disk-bound)

[04:52:54.0000] <hsivonen>
gsnedders: what's the business model of Mint?

[04:53:14.0000] <[tm]>
AlexNRoss:  validator not up to date with the spec. working on it

[04:53:55.0000] <AlexNRoss>
Alright.

[04:54:52.0000] <[tm]>
AlexNRoss:  please file a bug

[04:57:16.0000] <gsnedders>
hsivonen: There isn't one. The development is all done by volunters, which is somewhat disconcerting.

[05:08:44.0000] <hsivonen>
posted about window.stop() substitute in IE on StackOverflow: http://stackoverflow.com/questions/10245972/aborting-the-parser-from-javascript-in-internet-explorer

[05:12:05.0000] <hsivonen>
gsnedders: well, volunteer development works for Debian

[05:12:52.0000] <hsivonen>
gsnedders: I'm just a bit suspicious about elaborate $0 stuff without an obvious monetization model out of fear of the model being "you are the product@

[05:12:58.0000] <hsivonen>
s/@/"/

[05:14:25.0000] <hsivonen>
w00t. StackOverflow question already has an answer!

[05:15:27.0000] <Ms2ger>
Woo, execCommand

[05:19:47.0000] <hsivonen>
Huh? "You can accept an answer in 3 minutes"

[05:23:18.0000] <hsivonen>
looks like the other engines don't support execCommand("Stop")

[05:26:20.0000] <zcorpan>
that's a thing?

[05:28:15.0000] <hsivonen>
still more stuff to test before drawing conclusions

[05:32:28.0000] <zcorpan>
/me wonders if anyone knows the answer to https://www.w3.org/Bugs/Public/show_bug.cgi?id=12998#c14

[05:35:28.0000] <zcorpan>
anyone have a good idea for a new #csspubquiz?

[05:37:00.0000] <hsivonen>
zcorpan: I sent email to people who should know

[05:37:30.0000] <zcorpan>
cheers

[05:50:42.0000] <hsivonen>
why doesn't document.open() blow away "Text before script" here: http://hsivonen.iki.fi/test/moz/readystate/open.html ?

[05:54:27.0000] <Ms2ger>
"If the document has an active parser that isn't a script-created parser, and the insertion point associated with that parser's input stream is not undefined (that is, it does point to somewhere in the input stream), then the method does nothing. Abort these steps and return the Document object on which the method was invoked."

[06:02:44.0000] <hsivonen>
Ms2ger: oh

[06:02:48.0000] <hsivonen>
Ms2ger: thanks

[06:17:48.0000] <zcorpan>
MikeSmith: https://bitbucket.org/validator/validator/changeset/5f1a14c441c8 i'd use bold.appendChild(elementToHighlight) instead of setting innerHTML

[06:17:54.0000] <annevk>
hmm zcorpan, http://code.google.com/p/html5lib/source/browse/python/html5lib/inputstream.py contains encoding detection in Python

[06:18:04.0000] <annevk>
not sure how easy it is to extract though

[06:19:52.0000] <jgraham>
annevk: Should be rather easy I think. But probably not that quick to run

[06:20:20.0000] <[tm]>
zcorpan:  ok, will change it when I'm back to my rig

[06:24:37.0000] <annevk>
so is the spec intentionally buggy?

[06:24:59.0000] <annevk>
</x t="><meta charset=utf-8>

[06:25:06.0000] <annevk>
prescan finds <meta>

[06:26:31.0000] <hsivonen>
annevk: unclear what's intentional and what's not there

[06:27:07.0000] <annevk>
hsivonen: are there open bugs in this area?

[06:28:56.0000] <zcorpan>
<!----!><meta charset=utf-8> is not found

[06:30:55.0000] <hsivonen>
annevk: I don't recall any

[06:31:43.0000] <zcorpan>
annevk: "A sequence of bytes starting with a 0x3C byte (ASCII <), optionally a 0x2F byte (ASCII /), and finally a byte in the range 0x41-0x5A or 0x61-0x7A (an ASCII letter)" seems to properly skip attributes for your case

[06:34:56.0000] <annevk>
zcorpan: I did not realize that covered / as well, my bad

[06:35:00.0000] <annevk>
thanks

[06:35:33.0000] <zcorpan>
though supporting --!> might be slightly annoying because the dashes can't overlap with <!--, unlike with -->

[06:35:55.0000] <zcorpan>
but might still be worth doing

[06:37:46.0000] <zcorpan>
/me filed

[06:38:01.0000] <hsivonen>
still XSLT testing to do...

[06:38:16.0000] <hsivonen>
I've again forgotten what I knew about XSLT.

[06:39:05.0000] <jgraham>
I find it very easy to remember that I know nothing about xslt

[06:40:04.0000] <hsivonen>
oh and detaching the iframe

[06:40:27.0000] <jgraham>
And reattaching it?

[06:40:50.0000] <hsivonen>
I wasn't going to reattach

[06:41:15.0000] <jgraham>
It seems that reattching is interesting in at least some cases

[06:41:44.0000] <jgraham>
In that we have, in general, not related to readyState in particular, had bugs about detaching and reattching iframes

[06:42:43.0000] <AlexNRoss>
hsivonen: XSLT is a complete waste. Just use CSS.

[06:43:11.0000] <jgraham>
AlexNRoss: He is implementing the browser not writing websites

[06:43:23.0000] <AlexNRoss>
Ah.

[06:43:36.0000] <jgraham>
Although I think we would all be very happy if XSLT could be nuked from orbit

[06:44:20.0000] <AlexNRoss>
Ya. It is less compatible than CSS, not as functional as CSS, and it is very primitive. In addition to that, it is for XML only.

[06:45:15.0000] <zcorpan>
can't it be used with html with the dom api?

[06:45:29.0000] <AlexNRoss>
That and <blink> as well as anything older than HTML 4.01 should also be nuked.

[06:46:05.0000] <AlexNRoss>
zcorpan: You're using an API? You can do anything then at that point to stylize things.

[06:46:41.0000] <Philip`>
Please don't nuke <plaintext> yet :-(

[06:47:04.0000] <AlexNRoss>
That reminds me. Whoever made Joomla! and jQuery should be tortured to death very slowly and painfully.

[06:47:33.0000] <hsivonen>
AlexNRoss: that's not nice

[06:47:55.0000] <AlexNRoss>
Their products aren't very nice and influences society in a bad way.

[06:47:56.0000] <Philip`>
Less collateral damage than nuking, though

[06:48:45.0000] <AlexNRoss>
Like there is sites that use the jQuery API just to do a little bit of JavaScript. It has essentially taken away peoples' ability to do normal JavaScript.

[06:49:25.0000] <Ms2ger>
[Note: we do not condone torture]

[06:49:47.0000] <AlexNRoss>
And doing it the normal way uses less processing and resources as well as less bandwidth consumption and faster load time.

[06:49:47.0000] <zewt>
[Note: except when people really annoy us]

[06:50:18.0000] <Philip`>
AlexNRoss: I thought it was more that it had taken aware people's desire to do normal JavaScript, since it removes some of the basic pains of JS

[06:50:29.0000] <Ms2ger>
I'm all for jquery-hatin', myself

[06:50:36.0000] <Ms2ger>
But be nice to the people, please?

[06:50:38.0000] <AlexNRoss>
Hardly Philip.

[06:50:41.0000] <zcorpan>
/me finds out his latest quiz has a pretty low CORE- number

[06:51:00.0000] <AlexNRoss>
And Joomla! it is the next level of CMS retardation.

[06:51:21.0000] <Ms2ger>
zcorpan, block, I guess

[06:51:33.0000] <AlexNRoss>
CMS apps are for people who know nothing about programming to update their site, I get it. But Joomla! takes things to a whole new level of stupidity.

[06:51:38.0000] <Philip`>
/me doesn't trust anything with punctuation in its name

[06:51:50.0000] <annevk>
zcorpan: that's buggy in Opera?

[06:52:05.0000] <zcorpan>
annevk: you filed the bug :-P

[06:52:05.0000] <Ms2ger>
/me doesn't trust anybody with punctuation in their name

[06:52:12.0000] <Ms2ger>
/me waves at Philip` 

[06:52:25.0000] <zcorpan>
/me doesn't trust anyone with numbers in their name

[06:52:31.0000] <Ms2ger>
Me neither

[06:52:40.0000] <Philip`>
Ms2ger: That's not punctuation, it's just a symbol to avoid naming conflicts

[06:52:44.0000] <Ms2ger>
I mean, have you ever met me?

[06:52:45.0000] <annevk>
zcorpan: you should have asked about display:list-item :p

[06:52:55.0000] <annevk>
zcorpan: what's the number? :)

[06:53:05.0000] <zcorpan>
CORE-1285

[06:53:18.0000] <Philip`>
If it was "'" then you could argue that it's punctuational depending on context, but "`" isn't even that

[06:53:27.0000] <Ms2ger>
/me whacks zcorpan with 915

[06:54:15.0000] <Ms2ger>
Philip`, I don't need arguments :)

[06:54:27.0000] <annevk>
zcorpan: heh, long time ago

[06:54:40.0000] <annevk>
zcorpan: guess the CSS 2.1 test suite does not cover that then

[06:54:49.0000] <Ms2ger>
/me sniggers

[06:54:52.0000] <annevk>
but it went to REC, mwahaha

[06:55:22.0000] <zcorpan>
Ms2ger: 915 is still not WONTFIXed?

[06:55:30.0000] <Ms2ger>
No

[06:55:49.0000] <annevk>
classic

[06:56:18.0000] <annevk>
heh

[06:56:27.0000] <annevk>
Gecko still has a bug for full HTML 4 support

[06:56:29.0000] <zcorpan>
heh, the last comment is funny since we now have an html5 parser :-)

[06:56:54.0000] <jgraham>
Oh I thought that the ` was to indicate the Philip` was derivative

[06:56:55.0000] <annevk>
"Bug 41368 - (robin's) Fails test cases in Robin's HTML 4.0 Conformance Test"

[06:57:32.0000] <AlexNRoss>
Unless Philip` is meant to be <html>Phili&pgrave;</html>

[06:57:40.0000] <Ms2ger>
With an "investigate more" from Hixie in the whiteboard, hah

[06:58:18.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=1996 longdesc has a [Hixie-P4]

[06:58:31.0000] <annevk>
Bugzilla is a treasure trove

[06:58:54.0000] <zcorpan>
maybe we should drop support for <col align> in opera

[06:59:29.0000] <annevk>
you want our very own 915?

[06:59:49.0000] <zcorpan>
yeah!

[06:59:52.0000] <AlexNRoss>
IMO: longdesc is pointless.

[07:00:01.0000] <AlexNRoss>
You can describe the image if it isn't there with alt

[07:00:12.0000] <AlexNRoss>
Title is for a tooltip blurb.

[07:00:57.0000] <AlexNRoss>
Not to meantion, there is also an aria-describedby too.

[07:01:27.0000] <AlexNRoss>
Too many attributes for one thing.

[07:01:39.0000] <AlexNRoss>
It gets redundant, annoying, and cumbersome.

[07:01:50.0000] <AlexNRoss>
mention*

[07:03:03.0000] <Philip`>
Also, nobody uses it, and of those who use it, nobody uses it correctly

[07:04:54.0000] <Philip`>
Unsurprisingly, http://www.w3.org/html/wg/tracker/issues/30 is still an open issue

[07:08:29.0000] <AlexNRoss>
IMO: There should be a rule put down for browsers: Once something as been obsoleted by a RFC or by the latest HTML Spec, it should only be around for a maximum of 10 years afterwards. If sites haven't updated by that point, they're clearly not updated and shouldn't exist on the internet.

[07:09:28.0000] <jgraham>
Homework quiz: work out if the e above proposal represents a stable equilibrium for browser vendors

[07:10:06.0000] <Philip`>
AlexNRoss: There's no incentive for browsers to delete support for old features, since they've already implemented them and they'd prefer not to break pages

[07:10:37.0000] <Philip`>
There's plenty of modern sites that rely on ancient obsolete features, too

[07:10:51.0000] <AlexNRoss>
Philip, I realize that, but doing so also just feeds the ancient websites.

[07:11:19.0000] <Philip`>
Non-trivial risk plus zero reward does not provide a very compelling motivation :-)

[07:11:32.0000] <AlexNRoss>
Modern sites that use <plaintext>, <blink>, and <script language="javascript">?

[07:12:04.0000] <AlexNRoss>
Philip: There is a reward: It then forces websites to stay at least somewhat updated.

[07:12:23.0000] <jgraham>
That's just a thing

[07:12:26.0000] <AlexNRoss>
It would make for a much nicer web viewing experience.

[07:12:29.0000] <jgraham>
It's not a reward

[07:12:46.0000] <Philip`>
I think Opera recently (well, a few years ago) experienced bugs on some modern heavily JS-based site due to its parsing of <xmp>

[07:12:50.0000] <AlexNRoss>
Rather than seeing sites that use tables for layout and HTML 3.0, etc.

[07:13:34.0000] <AlexNRoss>
<xmp> isn't a HTML entity.

[07:14:37.0000] <Philip`>
Sure it is

[07:14:48.0000] <Philip`>
It's even listed in http://tools.ietf.org/html/rfc1866#section-5.5.2.1

[07:18:32.0000] <AlexNRoss>
Well they aren't in HTML5 spec anyhow.

[07:18:39.0000] <AlexNRoss>
And I can see why they were removed.

[07:18:59.0000] <AlexNRoss>
You have <ol> <ul> and <dl> for lists.

[07:19:13.0000] <AlexNRoss>
Why would you need <xmp> and <listing>?

[07:20:00.0000] <Philip`>
AlexNRoss: Search for "xmp" in http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#parsing-main-inbody

[07:20:18.0000] <AlexNRoss>
http://www.whatwg.org/specs/web-apps/current-work/multipage/

[07:20:26.0000] <AlexNRoss>
Search "xmp". 0/0 found

[07:20:37.0000] <Philip`>
That just means it's not part of the conforming language for documents to use

[07:20:57.0000] <Philip`>
which has always been the case, since it's been obsolete/deprecated/etc since forever

[07:21:20.0000] <Philip`>
Implementations are still required to parse it with special rules

[07:22:10.0000] <AlexNRoss>
Essentially, you're just trying to protect ancient sites or sites that are so horrible that nobody would ever go to them.

[07:22:20.0000] <AlexNRoss>
Example: http://www.lingscars.com/

[07:24:14.0000] <annevk>
AlexNRoss: it's important to preserve history

[07:25:33.0000] <AlexNRoss>
Then you should work for a meuseum. Hell, I bet that meuseum's website is more up to date than Ling's Cars.

[07:26:29.0000] <Ms2ger>
Well, no

[07:26:40.0000] <Ms2ger>
His qualities are much more appreciated here

[07:27:03.0000] <AlexNRoss>
The internet is vast and anything prior to 10 years from it's updates really shouldn't be around IMO.

[07:27:11.0000] <Philip`>
AlexNRoss: <xmp> broke Backbase in Opera

[07:27:24.0000] <Philip`>
which was an actively-developed site

[07:27:26.0000] <Ms2ger>
Well, unfortunately you're pretty much alone there

[07:27:29.0000] <Philip`>
(in 2007, it seems)

[07:28:06.0000] <Philip`>
so it's not just ancient or horrible sites

[07:28:26.0000] <Philip`>
It's just sites with crazy developers, which is pretty much the whole of the web :-)

[07:29:26.0000] <AlexNRoss>
Ms2ger: You can quote me on this: Before 2050 comes, things like <plaintext>, <blink>, <xmp> and <listing> will not be supported by browsers and will just be a memory to people.

[07:29:41.0000] <Ms2ger>
Sure

[07:29:42.0000] <Ms2ger>
I will

[07:29:46.0000] <Philip`>
/me is happy he remembered there was some site it broke, but had to check the bug database to find exactly which one :-(

[07:29:48.0000] <AlexNRoss>
And you'll see how wrong you are in 2050.

[07:29:54.0000] <Ms2ger>
And you will turn out to have been wrong :)

[07:31:15.0000] <Philip`>
I hope we're not still using HTML by then

[07:31:30.0000] <Philip`>
so all HTML that still exists will be legacy stuff

[07:31:36.0000] <Ms2ger>
XHTML2! :)

[07:32:19.0000] <Philip`>
and the sole purpose of an HTML browser will be to preserve access to legacy content that hasn't yet been ported to the new neural augmented reality data visualisation language

[07:32:57.0000] <jgraham>
What makes you think that language won't be built on top of html

[07:33:21.0000] <jgraham>
It will be <!doctype html><html><script>new Reality()</script>

[07:36:33.0000] <Philip`>
jgraham: The new 4D metaverse will doubtless be designed by Facebook, and they wouldn't want to let browser vendors act as gatekeepers

[07:37:49.0000] <Philip`>
Everyone wants full control over the platforms they're building on, and open standard multi-vendor HTML isn't a good fit for that

[07:38:39.0000] <AlexNRoss>
Philip: Not a chance, Google will be the first ones on board for any new technological advances in web development.

[07:39:14.0000] <Philip`>
Facebook will buy Google

[07:39:23.0000] <Philip`>
(You can quote me on that)

[07:40:23.0000] <Ms2ger>
Hah

[07:40:32.0000] <hsivonen>
http://my.opera.com/desktopteam/blog/2012/04/20/update-on-hardware-acceleration-in-opera-12 opt in. so that's what's been delaying Opera 12 on desktop

[07:40:43.0000] <Ms2ger>
Google is the first on board to push proprietary crap, that for sure

[07:40:55.0000] <jgraham>
Philip`: Pretty sure you are supposed to say things like that in the manner of roc i.e. "I predict 906a59544029a67d5fb6e92f1fd663a6"

[07:41:12.0000] <Ms2ger>
Poor roc

[07:43:10.0000] <Philip`>
jgraham: By 2050, surely people will be able to break MD5

[07:43:33.0000] <Philip`>
Better to be forward-thinking and predict something like e48dcff1e0a381cc99548d949f5dc4e3c042dbe01ebea140efbbac36aca541e453598dc5ea3467e71ad7119c0ce65b993c81884f97d23c618c7aa88ac6c6ef8f

[07:45:05.0000] <hsivonen>
"We want to bring the first true hardware accelerated browser to market."

[07:45:27.0000] <hsivonen>
nice way to spin Opera last into yet another Opera had it first. :-)

[07:45:35.0000] <Philip`>
As in the first true Scotsman?

[07:45:59.0000] <jgraham>
Speaking of Scotsmen, I hear gsnedders is no longer a teenager

[07:46:28.0000] <jgraham>
So, uh, I hope you are having a happy birthday. Because frankly I'm terrified

[07:46:37.0000] <Ms2ger>
Heh

[07:46:38.0000] <hsivonen>
gsnedders: happy birthday

[07:46:43.0000] <Ms2ger>
Congratulations and stuff

[07:49:45.0000] <annevk>
whoa gsnedders is twenty now?

[07:50:06.0000] <annevk>
congrats

[07:57:23.0000] <paul_irish>
\o/

[08:09:11.0000] <hober>
gsnedders: happy birthday!

[08:11:03.0000] <foolip>
gsnedders, 25% dead, congrats!

[08:11:21.0000] <foolip>
(according to http://en.wikipedia.org/wiki/List_of_countries_by_life_expectancy)

[08:14:29.0000] <Philip`>
foolip: That's misleading since the stats are for the whole UK, not for Scotland

[08:15:32.0000] <Philip`>
(e.g. http://www.bbc.co.uk/news/uk-scotland-12898723 says "people from the rest of the UK live around two years longer than the Scottish average")

[08:16:16.0000] <foolip>
gsnedders, >25% dead, congrats!

[08:19:08.0000] <jgraham>
In glasgow it can be even lower

[08:19:37.0000] <foolip>
Aren't we a merry bunch...

[08:19:40.0000] <jgraham>
http://www.bbc.co.uk/news/uk-scotland-glasgow-west-15368400

[08:36:52.0000] <annevk>
kennyluck: I don't want them to change necessarily; I'm just explaining my position...

[08:37:54.0000] <annevk>
kennyluck: feel free to jump in though

[08:38:24.0000] <annevk>
kennyluck: I don't have much more to say to him

[08:56:50.0000] <foolip>
annevk, what's the drama that got CC'd to the unicode list?

[08:57:40.0000] <foolip>
I tested Opera, Firefox and Chromium yesterday and they didn't agree on F8 80 80 80 80

[08:57:54.0000] <foolip>
but then I restrained myself from entering the debate :)

[09:05:09.0000] <dglazkov>
good morning, Whatwg!

[09:07:12.0000] <annevk>
foolip: utf-8 changed at some point and not all browsers updated

[09:07:33.0000] <annevk>
foolip: and Unicode allows several forms of utf-8 error handling

[09:07:46.0000] <annevk>
foolip: Opera/Gecko are getting patched

[09:09:00.0000] <foolip>
annevk, hmm, ok, no willful violation then?

[09:09:26.0000] <annevk>
more like restraining and keeping all encodings in one spec

[09:10:42.0000] <annevk>
foolip: see http://mail.apps.ietf.org/ietf/charsets/msg02054.html

[09:10:56.0000] <gsnedders>
jgraham: There are better stories about that. Highest and lowest life expectancies in Scotland are in Glasgow, about a mile apart.

[09:12:17.0000] <foolip>
annevk, mkay

[09:18:07.0000] <kennyluck>
annevk, is http://www.iana.org/assignments/charset-info still the right info to get subscribed to the list? I did what it says but got no response.

[09:19:30.0000] <annevk>
kennyluck: maybe it takes a while?

[09:19:45.0000] <kennyluck>
hmm… ok

[09:20:02.0000] <annevk>
kennyluck: was your email body exactly "SUBSCRIBE IETF-CHARSETS" ?

[09:20:27.0000] <kennyluck>
annevk, yes, and my Subject: was "subscribe".

[09:21:02.0000] <annevk>
I guess that should work

[09:21:39.0000] <annevk>
I no longer have any message to ietf-charsets-request

[09:31:06.0000] <jgraham>
gsnedders: But I bet the low life expectancy is amongst the poor and socially deprived. You're a student and therefore poor and studying CS and therefore socially deprived

[09:32:06.0000] <Ms2ger>
Zing.

[09:32:28.0000] <gsnedders>
jgraham: But I live in Hillhead, which is one of the well-off parts of Glasgow.

[09:33:05.0000] <smaug____>
dglazkov: did you see my question yesterday about setupEvent

[09:33:51.0000] <jgraham>
Two things 1) dammit I forgot to start sshd and 2) shouldn't you be either studying or partying?

[09:34:25.0000] <Ms2ger>
Or both?

[09:34:41.0000] <gsnedders>
jgraham: 2) just stopped studying :P

[09:59:23.0000] <dglazkov>
smaug____: oh. Sorry. setupEvent is just a helper that wires up:

[09:59:42.0000] <dglazkov>
smaug____: a) "onfoo" property for an event

[10:00:02.0000] <dglazkov>
b) "onfoo" attribute for the event

[10:01:24.0000] <smaug____>
ah, hmm

[10:01:40.0000] <smaug____>
dglazkov: it isn't explained

[10:01:52.0000] <smaug____>
I assume onfoo would be somewhere in the prototype

[10:02:05.0000] <dglazkov>
smaug____: yeah, I think I added it after some conversation with someone.

[10:02:29.0000] <smaug____>
dglazkov: why is it needed?

[10:03:12.0000] <dglazkov>
smaug____: just to help people with setting up events on their custom elements. This is tricky stuff to get right and seems like a nicely repeatable set of steps.

[10:04:26.0000] <smaug____>
dglazkov: I'm going through this all now...

[10:04:38.0000] <smaug____>
dglazkov: decorator seems to be very limiter

[10:04:39.0000] <smaug____>
limited

[10:04:46.0000] <smaug____>
especially its event handling

[10:04:52.0000] <smaug____>
you can't know the actual event target

[10:05:29.0000] <smaug____>
also listen() feels very heavy weight

[10:06:07.0000] <smaug____>
I kind of like the support for nested shadow trees

[10:06:14.0000] <dglazkov>
smaug____: yep. That's intentional, since the decorator are transient, so we don't want to be reaching into the DOM that may or may not be there

[10:06:51.0000] <smaug____>
dglazkov: I'm having hard time to figure out any real use cases for such decorator

[10:07:08.0000] <Ms2ger>
Who needs those anyway ;)

[10:07:46.0000] <dglazkov>
smaug____: ask sicking. He really wants decorators. I am ambivalent about them.

[10:08:05.0000] <smaug____>
indeed. We just design APIs, we don't use them :)

[10:08:22.0000] <smaug____>
I want decorators, but not the limited way

[10:08:37.0000] <smaug____>
/me waits sicking to be back from vacation

[10:09:37.0000] <smaug____>
/me still can understand, perhaps his English is just bad... vacation ? What is that

[10:10:34.0000] <dglazkov>
smaug____: I think today decorators are the least stable idea in the whole Web Components universe.

[10:11:07.0000] <smaug____>
right

[10:11:08.0000] <dglazkov>
smaug____: the shadow dom has a spec, the templates have a spec, the custom elements I already have a polyfill for (and will start working on spec next week), but decorators...

[10:11:31.0000] <smaug____>
custom events is another rather ... strange

[10:12:09.0000] <smaug____>
createElement("foo").localName != "foo"

[10:12:36.0000] <dglazkov>
custom elements you mean?

[10:12:42.0000] <smaug____>
er, oops

[10:12:44.0000] <smaug____>
right

[10:12:49.0000] <zcorpan>
localName should be "foo"

[10:12:54.0000] <dglazkov>
no, the createElement("foo").localName will always be "foo"

[10:13:10.0000] <dglazkov>
you can setAttribute("is", "x-foo") to make it a custom element

[10:13:49.0000] <dglazkov>
I have more of a problem with the "is" attribute, but Hixie and annevk argued strongly against introducing local semantics into HTML documents with actual custom tags.

[10:13:51.0000] <smaug____>
per documentation createElement("foo") may create something else

[10:13:55.0000] <zcorpan>
is there an .is IDL attribute that reflects is=""? (is that web-compatible to expose?)

[10:13:57.0000] <dglazkov>
so I am going along with

[10:14:06.0000] <smaug____>
var b = document.createElement("x-fancybutton");  alert(b.outerHTML); // will display '<button is="x-fancybutton"></button>'

[10:14:08.0000] <Ms2ger>
zcorpan, it's called "was" ;)

[10:14:19.0000] <smaug____>
so, local name is button

[10:14:22.0000] <zcorpan>
srsly? :-)

[10:14:28.0000] <Ms2ger>
No :)

[10:14:47.0000] <dglazkov>
smaug____: that's a bug in the explainer.

[10:14:51.0000] <smaug____>
aha :)

[10:14:57.0000] <dglazkov>
smaug____: :)

[10:15:01.0000] <smaug____>
makes it a bit hard to review this all ;)

[10:15:11.0000] <Ms2ger>
y u no right bugfree code?

[10:15:21.0000] <smaug____>
I'm trying to figure out what I think of this all, and whether something should be implemented in Gecko

[10:15:29.0000] <dglazkov>
smaug____: I started writing it completely bug-free, but somehow that didn't work.

[10:16:19.0000] <zcorpan>
"var b = document.createElement("x-fancybutton"); alert(b.outerHTML); // will display '<button is="x-fancybutton"></button>'" wat?

[10:16:44.0000] <Ms2ger>
Objection! Alleged x-fancybutton!

[10:17:21.0000] <dglazkov>
this is a carryover from the custom tags idea, where instead of using is attribute, we just had <x-fancybutton>

[10:17:35.0000] <smaug____>
ah

[10:18:15.0000] <zcorpan>
i thought that would be an actual element called "x-fancybutton", not magically turn into a different element with an attribute

[10:18:43.0000] <dglazkov>
zcorpan: I mentioned earlier that this is a bug in the explainer.

[10:18:54.0000] <zcorpan>
oh

[10:18:55.0000] <dglazkov>
zcorpan: there's even a nice button to file it :P

[10:19:36.0000] <zcorpan>
i'm just leaving irc remarks to irc remarks :-P

[10:19:38.0000] <Ms2ger>
A fancy one?

[10:19:57.0000] <dglazkov>
Ms2ger: well... for some definition of fancy

[10:20:03.0000] <dglazkov>
:)

[10:20:17.0000] <dglazkov>
it might help looking over these:

[10:20:24.0000] <smaug____>
dglazkov: how does element.content work?

[10:20:31.0000] <dglazkov>
https://github.com/dglazkov/Web-Components-Polyfill/tree/master/samples

[10:20:54.0000] <smaug____>
does it deserialize the content of element when used ?

[10:21:19.0000] <dglazkov>
smaug____: is this for HTML templates?

[10:21:44.0000] <smaug____>
er, template.content

[10:21:49.0000] <smaug____>
so, yes, templates

[10:21:52.0000] <dglazkov>
smaug____: it's spec'd here: http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#template-element

[10:22:08.0000] <dglazkov>
smaug____: it's an accessor returning a DocumentFragment

[10:23:50.0000] <smaug____>
dglazkov: but when is that documentfragment created ?

[10:23:55.0000] <smaug____>
and is it cached ?

[10:24:03.0000] <dglazkov>
smaug____: it's created when parsing

[10:24:24.0000] <dglazkov>
smaug____: and yes, it exists as one instance.

[10:24:40.0000] <smaug____>
so, no caching ?

[10:24:52.0000] <smaug____>
er

[10:24:54.0000] <dglazkov>
smaug____: http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#dfn-template-contents-initialization

[10:24:56.0000] <smaug____>
caching

[10:25:00.0000] <dglazkov>
smaug____: yes.

[10:25:17.0000] <smaug____>
" the code property must be initialized in .."

[10:25:19.0000] <smaug____>
what code ?

[10:26:21.0000] <dglazkov>
duurrrr

[10:26:32.0000] <dglazkov>
I clearly meant "content" property :)

[10:27:36.0000] <dglazkov>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16810

[10:28:10.0000] <smaug____>
thanks

[10:33:01.0000] <dglazkov>
zcorpan, smaug____: also filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16811 for the createElement.

[10:38:34.0000] <zcorpan>
thanks

[10:41:05.0000] <zcorpan>
anyone know how to change the default font size in ie9?

[10:43:21.0000] <zcorpan>
afaict there isn't a setting for it

[10:48:32.0000] <zcorpan>
ok so opera and ie don't have the font size quirk, so i'm commenting it out and hope webkit and gecko are willing to drop one of the font size tables

[10:49:14.0000] <Ms2ger>
File a bug :)

[10:51:25.0000] <zcorpan>
it's pretty bad that we don't have interop on <font size> sizes

[10:55:17.0000] <zewt>
what does interop even mean for font sizes? you'll always have user-specified minimum font sizes and other variations in the way

[10:58:05.0000] <annevk>
ooh

[10:58:21.0000] <annevk>
is the stuff that makes monospace fonts render smaller in Gecko?

[10:59:02.0000] <annevk>
latest argument from Shawn reads as if he thinks we ought to implement ISO HTML

[11:00:41.0000] <zcorpan>
zewt: ignoring minimum font sizes and assuming default font size of 16px, <font size=1..7> results in different computed font-size in opera/ie/webkit&gecko

[11:00:56.0000] <zcorpan>
(i think webkit and gecko are the same)

[11:02:29.0000] <zcorpan>
Ms2ger: https://bugzilla.mozilla.org/show_bug.cgi?id=747464

[11:05:12.0000] <zcorpan>
annevk: no, this is about <font size=1..7> and css font-size:xx-small..xx-large having different results in quirks mode and standards mode

[11:05:31.0000] <zcorpan>
though smaller monospace is something that needs to be sorted out as well

[11:07:37.0000] <zcorpan>
(the quirk doesn't result in different sizes for text where the default size is 16px because the tables have the same values for the 16px row)

[11:08:19.0000] <zcorpan>
(whereas the 13px row is different between the two tables)

[11:20:49.0000] <zcorpan>
TabAtkins: in the introduction you say "ident" but in the algorithm you say "identifier"

[11:29:37.0000] <Hixie>
Philip`: when people argue that we shouldn't support old things, one thing to bring up is that one of html's other goals is to make it possible for archeologists 1000 years from now to implement a browser and view today's content as it was intended

[11:29:46.0000] <Hixie>
Philip`: i.e. that it is preserving our heritage

[11:30:58.0000] <hober>
exactly

[11:34:56.0000] <Philip`>
Hixie: That doesn't seem like a very convincing argument for most web specifications, unless there was some effort to archive the server setups and databases of dynamic sites

[11:35:51.0000] <Hixie>
i'm specifically talking in the context of the guy saying we should drop <xmp>

[11:35:55.0000] <Hixie>
i.e. parser

[11:36:02.0000] <Hixie>
it is indeed only particularly helpful for static docs

[11:36:20.0000] <Philip`>
Currently the best efforts are just archiving the static page output (with archive.org etc), so any site that does non-trivial script manipulation is likely to break because of the lack of a server rather than because of lack of interoperability in the script APIs

[11:36:36.0000] <Hixie>
yup

[11:36:40.0000] <zewt>
i don't find that very compelling; for one thing, i don't think it's every browser's job to support things merely for historical value, and for another, if that's really what someone wanted to do, presumably they could also install a browser from the same era

[11:36:47.0000] <Philip`>
and for static documents, you can extract pretty much all of the information just by deleting all tags and looking at the text that remains

[11:37:51.0000] <smaug____>
/me doesn't trust anything digital to preserve more than few decades

[11:37:54.0000] <Philip`>
so future archaeologists will strip out most of the tags and stick the remaining text into an indexed database that they can analyse

[11:38:05.0000] <zcorpan>
TabAtkins: the dimension state doesn't append characters to the token's representation

[11:39:46.0000] <Philip`>
and archaeologists from the year 3000 are unlikely to get given the funding to implement an entire web browser, when they can get 90% of the value for massively less effort

[11:40:37.0000] <Hixie>
annevk: the url query thing is specced in html iirc

[11:41:25.0000] <Hixie>
Philip`: i have no idea if anyone in 3000 will care or not, or what their capabilities will be. i just want to make sure that they can do it.

[11:41:51.0000] <Hixie>
annevk: oh nevermind i misunderstood

[11:43:11.0000] <zcorpan>
ok made quirks mode use css3-syntax terminology

[11:46:41.0000] <Philip`>
Hixie: If you calculate the economic cost of spending effort on future-compatibility now, and then add the compound interest on that over the next thousand years, that sounds pretty expensive and would need a good chance of providing massive value to be worthwhile

[11:47:15.0000] <Hixie>
the incremental economic cost is zero since we need to do the work anyway to promote interoperability today

[11:48:39.0000] <Hixie>
also that argument excludes the cost term for moral imperative

[12:29:32.0000] <zcorpan>
hsivonen: jgraham: WDYT about https://www.w3.org/Bugs/Public/show_bug.cgi?id=16807 ?

[12:33:55.0000] <zcorpan>
ok who'll be the first to write a text editor in webgl?

[12:34:40.0000] <zcorpan>
because then i want to be able to change the blinking rate of my caret

[12:52:28.0000] <TabAtkins>
zcorpan: I have no idea why I thought that in-string escaping behavior was different than escaping behavior elsewhere.  I'll fix that.

[12:57:03.0000] <zcorpan>
TabAtkins: lemme know if quirks mode is bogus with the new text

[12:58:29.0000] <zcorpan>
nice https://bugzilla.mozilla.org/show_bug.cgi?id=747485

[12:59:32.0000] <TabAtkins>
zcorpan: The dimension thing is intentional - the unit, unlike the number, keeps track of all the input characters.

[12:59:52.0000] <TabAtkins>
So you can fully recover the input (modulo escapes) from the representation + the unit.

[13:00:03.0000] <zcorpan>
oh. ok.

[13:00:29.0000] <TabAtkins>
What should I be reviewing about the quirks mode spec?

[13:03:18.0000] <TabAtkins>
Oh, I see - you explicitly link into my spec now. Nice. ^_^

[13:05:13.0000] <zcorpan>
fixed the dimension thing

[13:06:52.0000] <zcorpan>
maybe i can drop the "signed" thing now, not sure

[13:07:23.0000] <TabAtkins>
Yes, number and dimensions parse a leading +/- as part of their token.

[13:08:28.0000] <zcorpan>
and in case of identifier, it doesn't matter if it replaces the token because the delim token will mean the value is invalid anyway

[13:08:57.0000] <TabAtkins>
Yes.

[13:11:20.0000] <zcorpan>
fixed

[13:21:47.0000] <zcorpan>
TabAtkins: "U+0027 APOSTROPHE (‘)" in URL state has the ")" enclosed in <code class="css">

[13:22:34.0000] <zcorpan>
(and smart-quoted the ')

[13:22:35.0000] <TabAtkins>
Ah, whoops. All occurences of that character do.

[13:24:32.0000] <TabAtkins>
Fixed.

[13:24:41.0000] <TabAtkins>
And your quirks algorithm seems fine now.

[13:25:12.0000] <zcorpan>
cool, thanks

[13:31:05.0000] <Ms2ger>
zcorpan, I assume Opera would be happy to make the <u><font color> quirk apply in all modes?

[13:32:47.0000] <zcorpan>
sure

[13:42:53.0000] <TabAtkins>
MikeSmith: Could you add a "Syntax" component to bugzilla for CSS? I'm the contact, spec is at at http://dev.w3.org/csswg/css3-syntax/

[14:36:47.0000] <zcorpan>
TabAtkins: still one "ident" lurking

[14:43:23.0000] <TabAtkins>
Damn!

[14:44:21.0000] <TabAtkins>
What section is it in?

[14:44:41.0000] <zcorpan>
3.4.  Tokenization

[14:44:55.0000] <zcorpan>
third para

[14:45:20.0000] <Yuhong>
<kennyluck> annevk, I think when you are having those debates with Shawn Steele, you should be clear that what you like MS to do is to change the encoder/decoder *used in IE*, not the system encoder/decoder. I have the feeling that Shawn knows nothing about IE.

[14:45:34.0000] <Yuhong>
AFAIK, IE uses the MLang library that is part of Windows.

[14:47:31.0000] <Yuhong>
Currently.

[14:48:16.0000] <Yuhong>
There are several system encoders/decoders in Windows.

[14:49:31.0000] <Yuhong>
http://blogs.msdn.com/b/michkap/archive/2005/07/26/443375.aspx

[14:57:02.0000] <Yuhong>
BTW, Vista has entered extended support recently which mean no more IE upgrades!

[14:57:54.0000] <Hixie>
TabAtkins: you aware of any plan to make 'white-space' have a value that works like 'normal' but optimises for equal line lengths?

[14:58:14.0000] <TabAtkins>
Heh, you're the third person asking about that this week.

[14:58:27.0000] <TabAtkins>
Oh wait, that's something different.

[14:58:29.0000] <TabAtkins>
Explain?

[14:58:47.0000] <TabAtkins>
Isn't that the definition of "text-align:justify;"?

[14:59:13.0000] <Hixie>
text-align:justify doesn't affect where words wrap, right?

[14:59:18.0000] <Hixie>
just the spacing between words

[14:59:23.0000] <zewt>
sounds like you're talking about the thing vtt wants

[14:59:42.0000] <Hixie>
i mean something like if i write "foo foo foo bar" it turns into "foo foo\nfoo bar" not "foo foo foo\nbar"

[14:59:52.0000] <TabAtkins>
Okay, that's nothing to do with white-space.

[14:59:55.0000] <Hixie>
zewt: yeah, your e-mail about it from december is what triggered my question

[15:00:07.0000] <TabAtkins>
But yes, I've had people ask about it this week, and pinged fantasai about it.

[15:00:10.0000] <zewt>
Hixie: there's some newer discussion (don't know if there's any new content, though)

[15:00:19.0000] <TabAtkins>
The obvious answer is "it's expensive on general web content".

[15:00:28.0000] <zewt>
no particular plans or anything since it's all on the webvtt list, which isn't where that would be done anyway

[15:00:29.0000] <Hixie>
zewt: i go through mail in order

[15:00:44.0000] <Hixie>
TabAtkins: k

[15:00:52.0000] <Hixie>
TabAtkins: should i just do a custom thing for webvtt then?

[15:00:53.0000] <zewt>
TabAtkins: but not really, like we discussed :)

[15:01:11.0000] <zewt>
(that is, it's not expensive if you don't try to do it "perfectly" and use the reasonable-approximation algorithm i suggested)

[15:01:13.0000] <TabAtkins>
But it's not difficult, and for WebVTT content it should be fast.

[15:02:03.0000] <Hixie>
TabAtkins: (seems to be 'white-space'-related to me, it controls where line breaks are put in. but i guess it could be a new property also, or a new keyword on text-align or something.)

[15:02:34.0000] <TabAtkins>
When you get down to it, it's about controlling the length of the last line relative to the other lines.

[15:02:49.0000] <TabAtkins>
Since, assuming normal wrapping, *all* the lines (except the last) are the same length.

[15:03:42.0000] <TabAtkins>
And being able to control wrapping to ensure that, say, the last lines of paragraphs are always >20% of the paragraph width is already useful.

[15:03:43.0000] <zewt>
TabAtkins: i guess that's one way of looking at it, but it affects all lines (not just the last) so it feels sort of an unnatural way of explaining it

[15:03:57.0000] <TabAtkins>
Making the requirement be "100% of the width" works just as well.

[15:04:00.0000] <TabAtkins>
zewt: I know. :/

[15:04:24.0000] <zewt>
that's sort of interesting--you could say "min-last-line-width", which is currently 0 (no requirement), 100 would mean "balance all lines", and you could turn the knob between those

[15:04:32.0000] <TabAtkins>
Yeah.

[15:05:54.0000] <TabAtkins>
I forget what the property's name was, but it used to be in Text.

[15:06:15.0000] <zewt>
(don't know if the approximate algorithm I sketched out could be made to do that)

[15:06:36.0000] <zewt>
i suppose it could

[15:07:21.0000] <zewt>
(i haven't tried implementing that in a real renderer and using it on real text, so I'm not 100% sure it'll actually work well in practice ... intuitively i think it will, though, at least for VTT-caption-size blocks of text)

[15:07:50.0000] <zewt>
i guess i could try faking it up with HTML

[15:07:56.0000] <TabAtkins>
Do it!

[15:08:00.0000] <zewt>
do eet

[15:08:12.0000] <TabAtkins>
You can even get exact width data - just measure a bunch of <span>s filled with characters.

[15:08:50.0000] <zewt>
i think i can do it just by adjusting the width of the container (reduce the width until just before the height starts increasing)

[15:08:52.0000] <Hixie>
all i want to do is change where hte line breaks go, i don't really care about this more complicated stuff :-)

[15:09:54.0000] <Hixie>
TabAtkins: i think it's a white-space issue because in webvtt you either hard-wire the line breaks or you want the lines equally long

[15:10:22.0000] <TabAtkins>
It's not really - white-space is about the treatment of the actual whitespace characters in the markup.

[15:10:48.0000] <TabAtkins>
And it's kinda weird to have a value that means "based on this layout algorithm, treat some of the whitespace as linebreaks, regardless of what it was originally".

[15:10:52.0000] <Hixie>
TabAtkins: right, and the control is whether line breaks in the markup should be treated like 'pre-wrap' or 'normal with special line balancing'

[15:11:14.0000] <TabAtkins>
That "with special line balancing" has nothing to do with the linebreak in the markup.

[15:11:46.0000] <Hixie>
anyway like i said i don't really mind which property we put it on, my concern is just that we put it somewhere

[15:11:54.0000] <Hixie>
should i just do it in webvtt?

[15:12:00.0000] <Hixie>
or is there something i can point to?

[15:12:06.0000] <Hixie>
or will be able to soonish?

[15:12:10.0000] <TabAtkins>
What would "do it in webvtt" imply?

[15:12:24.0000] <Hixie>
adding text here: http://dev.w3.org/html5/webvtt/#webvtt-cue-text-dom-construction-rules

[15:12:59.0000] <Hixie>
er, here: http://dev.w3.org/html5/webvtt/#the-'::cue'-pseudo-element

[15:13:24.0000] <TabAtkins>
I mean would it involve making up a property?

[15:13:29.0000] <zewt>
seems like white-space is just a shortcut for text-space-collapse + text-wrap, and this would actually be a text-wrap property (whether or not it happens to have a white-space shortcut of its own)?

[15:14:46.0000] <Hixie>
TabAtkins: well i was just gonna make it work based on the white-space property, for webvtt :-)

[15:15:05.0000] <TabAtkins>
Oh, so that white-space:normal just had the special behavior?

[15:15:10.0000] <Hixie>
basically

[15:15:20.0000] <TabAtkins>
If that "basically" is "exactly", sounds fine.

[15:15:29.0000] <zewt>
huh

[15:15:30.0000] <Hixie>
but maybe by just inventing a new keyword and making that the ua.css default for ::cue

[15:15:50.0000] <zewt>
webvtt shouldn't have magic differing behavior for existing CSS properties, right?

[15:15:53.0000] <TabAtkins>
New keyword isn't fine, because *this isn't a behavior that white-space shoudl control*.

[15:16:10.0000] <Hixie>
/me shrugs

[15:16:24.0000] <Hixie>
either way is fine by me, i just need to know what to do :-)

[15:16:26.0000] <zewt>
i'm not at all familiar with css specs--is http://dev.w3.org/csswg/css3-text/#white-space real or imaginary?

[15:16:35.0000] <Hixie>
zewt: css3 text in general is imaginary

[15:16:36.0000] <TabAtkins>
zewt: Quite real.

[15:16:43.0000] <zewt>
you two aren't helping :)

[15:16:47.0000] <TabAtkins>
That property is real.

[15:17:43.0000] <zewt>
according to that, it looks like this belongs as "text-wrap: balanced", and whether white-space also has a new shortcut for it or not is secondary

[15:18:40.0000] <TabAtkins>
text-wrap is okay if you don't plan to have any additional control.

[15:19:10.0000] <TabAtkins>
Though it would be compatible to have the eventual min-last-line-length property only work if text-wrap is 'normal'.

[15:19:36.0000] <Hixie>
if it's a separate property you'd also want it to work with things like pre-wrap

[15:21:00.0000] <TabAtkins>
Yes, "white-space:pre-wrap;" decomposes to "text-wrap:normal; text-space-collapse: preserve;"

[15:21:17.0000] <TabAtkins>
So it's compatible to swap out text-wrap for "balanced" or something.

[15:21:25.0000] <Hixie>
ok

[15:21:35.0000] <Hixie>
so this is all fine except text-wrap doesn't really exist as far as i can tell

[15:21:52.0000] <Hixie>
i mean it's been specced for like a decade and no browser has shown any interest to implement it, no?

[15:22:20.0000] <TabAtkins>
Good for you, then. You can just spec it for yourself with only two values.

[15:24:09.0000] <Hixie>
TabAtkins: i don't expect implementors to implement a property just for webvtt, given that it would have implications on all of css

[15:24:42.0000] <TabAtkins>
I'm unsure why you think a new value for an existing property is any different.

[15:25:33.0000] <Hixie>
i dunno, seems like keywords get implemented more easily

[15:25:36.0000] <Hixie>
i could be wrong about that

[15:25:52.0000] <TabAtkins>
They're basically identical from an implementation standpoint.

[15:26:21.0000] <Hixie>
hmm

[15:26:31.0000] <Hixie>
well i guess i can spec text-wrap

[15:26:40.0000] <Hixie>
with 'normal' and 'balanced'

[15:37:45.0000] <Hixie>
actually i don't think text-wrap is the right place

[15:37:59.0000] <Hixie>
it's another axis, really

[15:38:03.0000] <TabAtkins>
HAH

[15:38:16.0000] <Hixie>
that is only applicable at the block level

[15:38:36.0000] <Hixie>
so i'm kinda back to a new keyword on 'white-space'

[15:38:44.0000] <zewt>
TabAtkins: https://zewt.org/~glenn/balanced-wrapping.html it does seem to work fairly well

[15:38:52.0000] <zewt>
(obviously that's a dumb-slow way of doing it)

[15:39:04.0000] <Hixie>
basically a new column to the table in 3.4

[15:39:12.0000] <TabAtkins>
Hixie: white-space is a shorthand, so it's still not appropriate as a place to hang new values. ^_^

[15:39:22.0000] <Hixie>
TabAtkins: it's a shorthand only in theory

[15:54:49.0000] <Hixie>
annevk: you around? character encoding heuristic detection for webvtt: something we can point to your spec for? no?

[15:55:12.0000] <Hixie>
annevk: also are you doing anything for script detection for font selection?

[15:55:27.0000] <Hixie>
TabAtkins: do you know if the csswg is doing anything on script detection for font selection?

[15:57:15.0000] <zewt>
why would webvtt need encoding detection instead of being utf-8 only?

[15:57:21.0000] <TabAtkins>
More details?  You want to check what font a specific element has?

[15:57:41.0000] <zewt>
Hixie: script detection--you mean @lang heuristics for CJK?

[15:57:48.0000] <Hixie>
zewt: yeah

[15:58:06.0000] <Hixie>
TabAtkins: i mean the way that browsers pick which language glyphs to use for CJK characters

[15:58:23.0000] <TabAtkins>
Oh!  That kind of script.

[15:58:26.0000] <zewt>
(i've never heard of anyone taking that seriously; it's hard enough to convince people that being able to tag languages is useful in the first place, much less language heuristics)

[15:58:49.0000] <Hixie>
zewt: utf-8 only is probably what we'll do, i'm just exploring options

[15:59:01.0000] <zewt>
crazytalk

[16:00:39.0000] <TabAtkins>
Hixie: I think this is what we've got right now: http://dev.w3.org/csswg/css3-fonts/#language-specific-support

[16:02:04.0000] <Hixie>
TabAtkins: k. anyone working on that, do you know?

[16:02:08.0000] <zewt>
"If the ‘lang’ attribute is not defined, the default OpenType language system must be used." i doubt that'll ever happen with CJK ...

[16:02:15.0000] <TabAtkins>
Yeah, John Daggett.

[16:02:19.0000] <Hixie>
TabAtkins: k

[16:02:42.0000] <TabAtkins>
That's his only spec, and he lives in Japan, so I'm sure he'd be willing to tighten things up as necessary.

[16:02:47.0000] <Hixie>
zewt: since you are enthusiastic about the CJK problems there, do you want to post to the list about the problems with this being so underdefined? :-)

[16:03:12.0000] <zewt>
well, i don't have any *solutions*, unfortunately

[16:03:51.0000] <zewt>
basically @lang seems in exactly the same boat as default encodings: browsers end up having to use the user's language as part of figuring out the default, or else they get it wrong too often

[16:04:08.0000] <zewt>
which i hate, but like the encoding problem i have no idea how to fix it

[16:04:24.0000] <Hixie>
what do browsers do?

[16:04:34.0000] <Hixie>
that's what the spec should say, at a minimum

[16:05:07.0000] <zewt>
okay not sure what just happened

[16:06:14.0000] <zewt>
i'd need to refresh my memory, but I'm pretty sure IE has defaults depending on the user's browser, and I think FF does the same (with the browser language)

[16:07:39.0000] <rafaelw_>
Hixie: I'm working on a local patch for template element and I'm starting to wonder if it isn't smart to separate two concerns here: (a) context-free parsing, and (b) declaring inert DOM structures.

[16:08:00.0000] <zewt>
which has the same problem as when encodings do that: Japanese people see Japanese glyphs if they don't specify anything at all, so they don't specify anything, resulting in Japanese pages only looking right on Japanese-locale systems (vs. zh-TW/zh-CN)

[16:08:33.0000] <rafaelw_>
Ojan said (I think) that he should it would be reasonable to add something like innerHTML to DocumentFragment which would acomplish (a). I'm presuming there has been discussion of this in the past. What's your sense?

[16:09:31.0000] <rafaelw_>
(context-free parsing, specifically for HTML -- I'm assuming this issue is intrinsic to HTML parsing, but maybe I'm wrong).

[16:18:30.0000] <rafaelw_>
Hixie: did you see my question (looks like you might have quit & rejoined)?


2012-04-21
[17:07:23.0000] <Von_Davidicus>
If a browser supports SVG, is there a 100% chance (or at least close) that it will support XHTML + SVG?

[17:07:40.0000] <TabAtkins>
No.

[17:12:24.0000] <Von_Davidicus>
What is the likelihood, then?

[17:13:16.0000] <TabAtkins>
It's high, but that's not a useful number. You need to know the specific versions of browsers that didn't support inline SVG.

[17:22:03.0000] <Von_Davidicus>
Okay.  *Is working on a way to let people know if their browser will support SVG+XHTML+CSS3*

[18:27:36.0000] <MikeSmith>
jzaefferer: you around?

[18:34:15.0000] <MikeSmith>
TabAtkins: Syntax component added

[18:36:30.0000] <MikeSmith>
annevk: http://dvcs.w3.org/hg/encoding/rev/94f075e5eabb seems to be working fine now

[18:36:42.0000] <MikeSmith>
I don't know what the problem was

[20:39:13.0000] <Von_Davidicus>
Managed to scare a computer tech today.  I've been saying over the past couple of weeks that I needed a computer that was over 15 years old repaired.  And today, I brought it in.

[23:14:07.0000] <zcorpan>
Hixie: text-wrap is supported in browsers (at least 'normal' and 'word-wrap')

[23:16:22.0000] <zcorpan>
though i think making white-space a shorthand for text-wrap might not be web-compatible (it'd make text-wrap reset if you do text-wrap:word-wrap; white-space:normal;)

[23:17:55.0000] <MikeSmith>
zcorpan: https://bitbucket.org/validator/validator/changeset/7dac5fb16df7

[23:18:31.0000] <MikeSmith>
hmm, isn't http://www.whatwg.org/specs/web-apps/current-work/multipage/#text-type-text-state-and-search-state-type-search supposed to redirect?

[23:19:05.0000] <MikeSmith>
dev.w3.org/html5/spec/#text-type-text-state-and-search-state-type-search does

[23:19:46.0000] <MikeSmith>
oh

[23:20:03.0000] <MikeSmith>
I guess that's because I added code on the w3c side to make it work

[23:25:58.0000] <zcorpan>
MikeSmith: LGTM

[23:26:07.0000] <MikeSmith>
thanks

[23:54:15.0000] <TomPenzer>
I was thinking about the problem of support for double-res images for devices like Apple's Retina display, and I was wondering what ppl think of adding support for a <meta img-x2-res="_x2" /> tag, which would alert the browser of the likely presence of 'filename_x2.ext' when it sees img tags, and it would fall back with a second request for 'filename.ext' in case it's not found. This seems

[23:54:15.0000] <TomPenzer>
relatively easy to implement (especially for web developers), and degrades gracefully on older browsers.

[23:56:38.0000] <Von_Davidicus>
what does "img-x2-res" stand for?

[23:56:51.0000] <TomPenzer>
img times 2 resolution

[23:57:25.0000] <TomPenzer>
or double-resolution

[23:59:16.0000] <Von_Davidicus>
Hm.

[00:00:58.0000] <TomPenzer>
as a web developer, i would be eternally grateful! : P

[00:02:01.0000] <TomPenzer>
i mean, besides everything these people have already done to make that even possible

[00:05:02.0000] <annevk>
Hixie: yes, I do want to define encoding sniffing

[00:05:45.0000] <annevk>
Hixie: presumably by defining what Gecko has, unless someone has a better idea

[00:12:37.0000] <TomPenzer>
a more fleshed out version of the idea is to have the meta tag include a property for 'assume-present', as such: <meta img-x2-res="_x2" assume-present="false" />, and then for any img tags for which double-res assets are available, you could add a property to the img tag as such: <img x2-res="true" />. Or, you could leave the 'assume-present' property off, as 'true' is default, and put <img

[00:12:37.0000] <TomPenzer>
x2-res="false" /> on any images for which double-res assets are unavailable. This would avoid a second request when the first fails.

[00:13:37.0000] <rniwa>
annevk: hi

[00:13:40.0000] <Von_Davidicus>
How about x2-res work like sort of like a boolean attribute?  If it's not there, it's *assumed* to be false?

[00:14:32.0000] <Von_Davidicus>
/me rereads your post.

[00:14:39.0000] <TomPenzer>
yeah, if the meta tag isn't present, it's assumed to be false. The ="_x2" is to allow different developers to choose a double resolution filename key that works for their naming conventions

[00:14:51.0000] <Von_Davidicus>
Oh, okay.

[00:15:03.0000] <rniwa>
annevk: we might need to re-visit the decision to make NodeList inherit from Array

[00:15:22.0000] <Von_Davidicus>
I have a question of my own:  Is it acceptable to include a test in a webpage that will determine whether or not a browser will properly display something?  What I have after a hyperlink is an <object> element that displays an XHTML + SVG page that shows a checkmark, coloured green via HSL notation.  If the viewer sees that the checkmark is black, or doesn't show up at all, then the viewer knows that the browser won't properly support the page on 

[00:15:59.0000] <rniwa>
annevk: https://bugs.webkit.org/show_bug.cgi?id=81573#c36 indicates that making this change isn't compatible with the Web :(

[00:18:59.0000] <annevk>
sad

[00:19:31.0000] <annevk>
just file a bug I guess if it doesn't work out and we'll revert the spec change

[00:20:09.0000] <rniwa>
annevk: yeah... not a happy ending :(

[00:20:11.0000] <annevk>
Von_Davidicus: acceptable measured how?

[00:20:21.0000] <rniwa>
annevk: i'll double check with arv before filing a bug

[00:20:37.0000] <annevk>
rniwa: not entirely unexpected I guess that changing such a core API breaks the web

[00:20:56.0000] <rniwa>
annevk: right.

[00:21:00.0000] <annevk>
I'm curious what removing Attr nodes will do

[00:21:57.0000] <Von_Davidicus>
As in "considered a good idea by the webdeveloping community at large"

[00:22:45.0000] <annevk>
given that you can get on the final page directly, worrying about it is probably not worth it

[00:23:13.0000] <Von_Davidicus>
Hm?

[00:27:51.0000] <rniwa>
annevk: yeah, that'll be an interesting adventure.

[00:44:13.0000] <annevk>
oh cool

[00:44:21.0000] <annevk>
WebKit has a shared encoding sniffing library

[00:44:22.0000] <annevk>
http://trac.webkit.org/browser/trunk/Source/WebCore/loader/TextResourceDecoder.cpp

[00:44:47.0000] <annevk>
is that really all WebKit has?

[00:44:58.0000] <TomPenzer>
worst idea ever: -webkit-image-set( url(image.png) 1x, url(image⊙2p) 2x )

[00:46:07.0000] <annevk>
TomPenzer: why?

[00:46:25.0000] <annevk>
zcorpan: https://bugs.webkit.org/show_bug.cgi?id=18270 says that "x-user-defined" must mean windows-1252

[00:46:51.0000] <TomPenzer>
because all the 2x images on my site are going to have the same "_2x" or "@2x" filename key, and i shouldn't have to do all this busy work

[00:48:32.0000] <annevk>
zcorpan: also https://bugs.webkit.org/show_bug.cgi?id=15555 ugh

[01:12:46.0000] <annevk>
http://mxr.mozilla.org/mozilla-central/source/extensions/universalchardet/src/base/JISFreq.tab#338 so why include it?

[01:12:58.0000] <annevk>
I wonder how much of the universalchardet code is still relevant

[01:13:11.0000] <annevk>
e.g. there's code for iso-2022-cn in there, which IE does not even support

[01:16:14.0000] <annevk>
and Thai was not detected before 2009? https://bugzilla.mozilla.org/show_bug.cgi?id=488426

[01:16:53.0000] <annevk>
I guess I should start keeping notes somewhere

[01:24:03.0000] <Von_Davidicus>
If you wish to keep notes, I can suggest a few good music programs.

[01:26:52.0000] <annevk>
not sure if serious... or joking

[01:27:22.0000] <Von_Davidicus>
I was being ridiculous.  :)

[01:27:59.0000] <Von_Davidicus>
I like to have a little pun with English now and then.

[01:33:31.0000] <annevk>
hsivonen: why did you limit utf-16 sniffing to HTML?

[01:40:29.0000] <annevk>
notes are tracked here http://wiki.whatwg.org/wiki/Encoding#Sniffing

[03:34:26.0000] <annevk>
what would also be interesting is Mozilla Telemetry data on universalchardet

[03:35:03.0000] <annevk>
but probably only if it's included in a non-beta release...

[04:19:19.0000] <annevk>
oh sweet

[04:19:40.0000] <annevk>
Fullscreen advocacy is already underway and only caters to WebKit/Gecko proprietary extensions

[04:20:00.0000] <Ms2ger>
/me sighs

[04:20:46.0000] <annevk>
thank your colleague http://www.slideshare.net/robnyman/javascript-apis-the-web-is-the-platform-mdn-hack-day-buenos-aires :p

[04:25:53.0000] <Ms2ger>
Boo

[04:27:35.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=746437 "I can't think of a good reason to not implement it as-is."

[04:27:40.0000] <annevk>
that's good at least

[06:40:44.0000] <ruby_on_tails>
can anyone tell me why this is not working http://jsfiddle.net/uBXr2/1/ ?

[06:43:29.0000] <smaug____>
ruby_on_tails: onLoad

[06:43:32.0000] <smaug____>
it is onload

[06:44:03.0000] <ruby_on_tails>
oh

[06:44:05.0000] <ruby_on_tails>
it works now

[06:44:06.0000] <ruby_on_tails>
thanks

[06:52:51.0000] <hsivonen>
annevk: I wasn't needed for anything else and it was late in the release cycle

[06:53:23.0000] <hsivonen>
annevk: the whole thing might have been an overreaction from a single data point

[07:10:02.0000] <annevk>
hsivonen: Opera has something similar, but only checks the first four bytes

[07:11:42.0000] <ruby_on_tails>
smaug____: any idea why this doesnt grayscale the image ? http://jsfiddle.net/32f6h/

[07:14:02.0000] <ruby_on_tails>
weird, tried 3 codes from 3 different tutorial, none of them works, not sure whats wrong

[07:16:37.0000] <Philip`>
ruby_on_tails: You're not waiting for the image to finish loading, before you do the getImageData/putImageData code

[07:17:05.0000] <ruby_on_tails>
but there is the onload thing right ?

[07:17:15.0000] <Philip`>
so you're greyscaling the empty canvas and then (once the image has loaded, later) drawing the image

[07:17:32.0000] <ruby_on_tails>
i am trying http://spyrestudios.com/html5-canvas-image-effects-black-white/ and http://beej.us/blog/data/html5s-canvas-2-pixel/

[07:17:50.0000] <Philip`>
But it still won't work the other way around because if you drawImage an image from a different domain, then you're not allowed to call getImageData

[07:18:03.0000] <ruby_on_tails>
oh

[07:18:04.0000] <ruby_on_tails>
hmm

[07:18:11.0000] <Philip`>
to prevent people stealing image data from non-public sites

[07:18:18.0000] <ruby_on_tails>
let me try a local image then

[07:18:50.0000] <ruby_on_tails>
doesnt work on even a local image

[07:19:24.0000] <Philip`>
If you move the getImageData...putImageData code into the onload function, just after the drawImage, it should be closer to working

[07:21:56.0000] <ruby_on_tails>
bleh its my first day, i am not kind of getting it

[07:24:55.0000] <Philip`>
jsFiddle seems to already wrap your stuff in an onload thing, and runs it in some not-immediately-obvious domain

[07:25:26.0000] <Philip`>
http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=1485 is a less confusing environment, and seems to work

[07:29:19.0000] <ruby_on_tails>
oh man

[07:29:27.0000] <ruby_on_tails>
i had to put the greyscaling code inside that onload

[07:30:14.0000] <ruby_on_tails>
it works now

[07:30:17.0000] <ruby_on_tails>
thanks Philip`

[12:27:17.0000] <shepazu>
once I've used pushState() to shove parameters up into the URI, what event can I use instead of 'load' to get older param states as the user walks back through the history?

[12:38:14.0000] <zewt>
popstate?

[12:40:05.0000] <shepazu>
zewt: thanks, tried it, didn't work, nor did hashchange… wonder if I'm using it wrong, or if maybe it doesn't work in SVG for some reason?

[12:45:36.0000] <shepazu>
ah, I think I was using it wrong

[12:45:41.0000] <shepazu>
:)

[12:50:43.0000] <shepazu>
oh, popstate fires before the URI is changed… odd

[12:51:14.0000] <shepazu>
inconvenient if you're using the URI to store state in parameters

[12:52:33.0000] <zewt>
uri where?

[12:52:45.0000] <zewt>
History.state is changed before popstate

[12:54:07.0000] <zewt>
(window.history.state)

[12:55:45.0000] <shepazu>
zewt: thanks… I was using location.href

[12:56:33.0000] <zewt>
(also popstate's event.state)

[12:57:40.0000] <zewt>
i'd expect that to be set before the events, too (don't know off-hand though)

[12:58:13.0000] <zewt>
http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#history-traversal not sure which step that is, but i'd guess 5

[12:58:19.0000] <shepazu>
zewt: I'd have expected that too… SVG in FF doesn't seem to happen, though

[12:58:26.0000] <zewt>
(no clue about svg)

[14:47:48.0000] <GPHemsley>
annevk: Is the goal of the encoding standard to intercept any non-UTF-8 encoding and output it as UTF-8? If not, would that be a good idea? (I'm not great with encodings.)

[14:48:18.0000] <gsnedders>
GPHemsley: given a definition of a decoder and a UTF-8 encoder you can do that

[14:48:45.0000] <GPHemsley>
gsnedders: Would that be a good thing to do? I'm just wondering

[14:48:48.0000] <gsnedders>
GPHemsley: The more important thing to define is how to get a sequence of Unicode codepoints from an encoding and how to get them to the encoding

[14:49:17.0000] <gsnedders>
GPHemsley: If you want to change the encoding of something, that's what you do. And the spec defines enough to do that. (As it defines all the decoders, and UTF-8 encoding is well-defined.)

[14:49:52.0000] <GPHemsley>
well presumably the user doesn't particularly care what the encoding is, as long as it looks like it's supposed to, right?

[14:50:08.0000] <GPHemsley>
and the encoding would only become relevant for copy and paste and the like

[14:50:24.0000] <GPHemsley>
(if we're talking only about browsers here)

[14:51:09.0000] <gsnedders>
Basically, all browsers have an internal Unicode representaiton, which is irrelevant what it is. (I believe everyone uses UTF-16.)

[14:51:29.0000] <gsnedders>
The important thing is how to decode the byte-stream, and how to encode to a byte-stream.

[14:51:50.0000] <gsnedders>
Then the internal representation is an impl detail which isn't black-box observable.

[14:56:15.0000] <GPHemsley>
gsnedders: What decides the byte-stream that the user actually sees, though?

[14:57:07.0000] <jgraham>
9doesn't gecko use not-utf-16 sometimes?)

[14:57:13.0000] <jgraham>
s/9/(/

[15:03:51.0000] <gsnedders>
GPHemsley: Typically the browser hands off the string as UTF-16 to the platform layer.

[15:04:04.0000] <GPHemsley>
ah

[15:05:30.0000] <gsnedders>
What happens in the platform layer I don't really know, I treat it as a black-box :)


2012-04-22
[01:43:48.0000] <AryehGregor>
Challenge: come up with as many web APIs as possible that accept a string to identify a particular desired feature, and do nothing (either throw or silently fail or whatnot) if the specific feature is unsupported.  Examples: getContext(), setProperty(), execCommand().

[01:43:50.0000] <AryehGregor>
How many others?

[01:45:57.0000] <annevk>
responseType

[01:46:25.0000] <annevk>
hasFeature

[01:46:52.0000] <annevk>
createElement ...

[01:46:58.0000] <AryehGregor>
Context: https://bugs.webkit.org/show_bug.cgi?id=83993

[01:47:20.0000] <AryehGregor>
The question at had is, is it more consistent for execCommand() to throw or return false if a command is unrecognized?

[01:47:41.0000] <AryehGregor>
Ehsan and I argue it should throw (IE/Opera behavior), Alexey thinks it should not (Gecko/WebKit behavior).

[01:47:54.0000] <AryehGregor>
createElement() works fine if the element is unrecognized.

[01:48:20.0000] <Ms2ger>
What about execCommand("stop")?

[01:48:22.0000] <annevk>
the object you get back might not have the properties you expect

[01:48:29.0000] <AryehGregor>
Ms2ger, what?

[01:48:38.0000] <annevk>
typically non-throwing is preferred when there's a choice

[01:48:57.0000] <annevk>
e.g.  I think if you ask sicking he'd argue to not throw too

[01:49:00.0000] <AryehGregor>
If we did throw, we'd have to whitelist various IE-specific commands as no-ops for compat.

[01:51:22.0000] <AryehGregor>
What happens if you set .responseType to an unsupported value?

[01:51:55.0000] <AryehGregor>
/me doesn't know what this "enum" stuff means

[01:52:15.0000] <Ms2ger>
Throw when passing to a method, silently ignore when setting an attribute

[01:54:22.0000] <AryehGregor>
Any other opinions on whether we should throw or not?

[01:54:37.0000] <AryehGregor>
Trying to use most unsupported features will throw, e.g., if they're new methods.

[01:55:47.0000] <annevk>
AryehGregor: not throwing seems better

[01:56:47.0000] <annevk>
in particular https://bugs.webkit.org/show_bug.cgi?id=83993#c7 is the argument we've made throwing/non-throwing decisions by time and again and I don't really see how this case is different

[01:59:13.0000] <AryehGregor>
Okay.  Any other opinions?

[02:26:24.0000] <gsnedders>
But how do you detect if a browser supports the string passed to it?

[02:26:54.0000] <gsnedders>
/me is in favour of throwing, as these are edge-cases that nobody should be hitting

[02:27:35.0000] <AryehGregor>
gsnedders, document.queryCommandSupported("mystring").

[02:27:55.0000] <AryehGregor>
Also: they're not edge-cases, because different browsers support totally different command sets and we're introducing new ones over time.

[02:28:02.0000] <AryehGregor>
So it's not an unlikely occurrence.

[02:28:45.0000] <gsnedders>
Ah. And given Gecko/WebKit don't throw, probably people passing bogus strings in today.

[02:28:50.0000] <AryehGregor>
In particular, throwing for all unsupported commands would almost surely break the web for non-IE browsers, because there are many IE-specific commands like ClearAuthenticationCache that no one else supports.  These would have to be special-cased as no-ops.

[02:29:00.0000] <AryehGregor>
Bogus strings, or just IE-specific ones.

[02:29:18.0000] <AryehGregor>
But Gecko and WebKit have a decent selection of commands that only they support, too.

[02:29:49.0000] <gsnedders>
What do we do for the IE-specific commands?

[02:30:59.0000] <AryehGregor>
"we" as in Opera?  I don't know.  Maybe you just throw and pages break.

[02:31:14.0000] <AryehGregor>
I don't know how many pages it is.

[02:32:18.0000] <AryehGregor>
Does Opera throw at all for unrecognized commands?  I thought it did, but it seems not.

[02:32:44.0000] <AryehGregor>
So that seems to answer the question.

[02:33:44.0000] <gsnedders>
Then if only IE throws, then I think we have interop and it's obvious what to do.

[02:33:55.0000] <AryehGregor>
Namely not throw, yes.

[06:45:24.0000] <zewt>
sdf

[08:13:21.0000] <AryehGregor>
Exciting -- there's a box that somehow broke off from Chrome and is now sitting on top of all other windows, and I can't get rid of it.

[08:13:37.0000] <AryehGregor>
It stays put when I switch programs or workspaces, and doesn't respond to xkill.

[08:13:54.0000] <AryehGregor>
Isn't Linux fun?

[08:14:00.0000] <AryehGregor>
/me tries to figure out how to get rid of it without restarting X

[08:18:19.0000] <AryehGregor>
So xwininfo let me know that it was 0x3c37323, and then xkill -i 0x3c37323 killed it.

[08:18:21.0000] <AryehGregor>
Along with Chrome.

[08:18:23.0000] <AryehGregor>
Oh well.

[08:18:55.0000] <AryehGregor>
I should have restarted Chrome long ago anyway, it updated itself like a million times.

[11:33:20.0000] <gsnedders>
jgraham: Why does test_serializer.py give errors?

[11:34:11.0000] <Ms2ger>
And what's http://hg.csswg.org/dev/w3ctestlib/file/tip/Utils.py#l145 trying to do?

[11:35:05.0000] <gsnedders>
Ms2ger: What's confusing about that?

[11:35:39.0000] <Ms2ger>
The exception it throws at me

[11:35:51.0000] <Ms2ger>
    text = text.replace(c, "&%s;" % entityify[c.encode('Latin-1', 'xmlcharrefreplace')])

[11:35:51.0000] <Ms2ger>
KeyError: '&#258;'

[11:41:05.0000] <gsnedders>
Good question what that's doing looking at it again.

[14:23:28.0000] <jgraham>
Ms2ger: well it's not that surprising it throws

[14:24:00.0000] <jgraham>
Presumably entityify doesn't have '&#258;' as a member

[14:25:39.0000] <jgraham>
Indeed it doesn't

[14:26:02.0000] <jgraham>
Seems pretty broken to me

[14:26:22.0000] <jgraham>
gsnedders: I don't know. What errors does it give?


2012-04-23
[22:58:21.0000] <zcorpan>
hmm, i installed anolis, the testsuite runs fine, but i get "-bash: anolis: command not found" in a new shell

[23:55:58.0000] <annevk>
hmm

[00:54:44.0000] <annevk>
is there a shorter way to write: "if either ns is non-null and list is non-empty, or list is non-empty and does not contain ln"

[00:55:37.0000] <annevk>
"if either ns non-null or list does not contain ln, and list is non-empty"

[00:56:10.0000] <annevk>
"if list is non-empty and either does not contain ln or ns is non-null"

[00:56:38.0000] <annevk>
thanks everyone :)

[01:02:20.0000] <foolip>
you're welcome!

[01:02:57.0000] <foolip>
annevk, I forgot to CC you on http://lists.w3.org/Archives/Public/public-html-ig-zh/2012Apr/0061.html

[01:05:50.0000] <annevk>
interesting

[01:05:59.0000] <annevk>
guess we should just go with hkscs then

[01:06:26.0000] <annevk>
and maybe not emit the hkscs range from the encoder (using "html entities" instead)

[01:06:44.0000] <annevk>
although I'm not sure if that's actually worth it

[01:07:28.0000] <Ms3ger>
zcorpan: did you install anolis or just clone the repo?

[01:11:15.0000] <foolip>
annevk, just hkscs and the simplest possible encoder seems good to me, if someone can come up with something for uao we can always split the encoders at that point

[01:13:38.0000] <annevk>
you mean split the decoders?

[01:15:34.0000] <zcorpan>
Ms3ger: i cloned and then ran sudo python setup.py install

[01:15:46.0000] <zcorpan>
Ms3ger: btw http://simon.html5.org/test/quirks-mode/reftest/font-element-text-decoration-color/

[01:18:55.0000] <jgraham>
zcorpan: Well presumably the script isn't in your path

[01:19:14.0000] <jgraham>
So I would compare the location of the script to your $PATH

[01:22:36.0000] <zcorpan>
$ echo $PATH

[01:22:36.0000] <zcorpan>
/opt/local/bin:/opt/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin

[01:23:03.0000] <zcorpan>
changing mode of /opt/local/Library/Frameworks/Python.framework/Versions/2.5/bin/anolis to 755 <-- is this the path i should add?

[01:23:28.0000] <zcorpan>
minus /anolis

[01:25:41.0000] <zcorpan>
ok that made anolis throw complaining that lxml: command not found

[01:25:58.0000] <zcorpan>
so i guess i need to put that in my PATH as well

[01:26:13.0000] <jgraham>
No..

[01:26:19.0000] <jgraham>
I mean lxml shouldn't be a binary

[01:28:21.0000] <zcorpan>
oh

[01:28:53.0000] <jgraham>
So, to be honest, my advice would be "if you want to get there, don't start from here"

[01:28:54.0000] <zcorpan>
sorry, misread the error. ImportError: No module named lxml

[01:29:02.0000] <jgraham>
Ah, that sounds more possible

[01:29:57.0000] <jgraham>
I don't know where your lxml is installed or what the library search path for that version of python is

[01:30:17.0000] <jgraham>
One way to avoid all these problems would be to install everything you need into a virtualenv

[01:30:54.0000] <jgraham>
Then you would have to activate the virtualenv in whatever whell you use anolis from

[01:31:01.0000] <jgraham>
But it would all be very tidy

[01:34:03.0000] <foolip>
annevk, yes if someone suggests a sensible way to split the decoders, we can also split the encoders

[01:34:20.0000] <hsivonen>
It disappoints me that a suggesting to add heuristic encoding detection to WebVTT even shows up

[01:34:46.0000] <foolip>
hsivonen, where has that shown up?

[01:34:56.0000] <hsivonen>
foolip: whatwg list

[01:36:10.0000] <foolip>
oh, that's weird coming from silvia

[01:38:09.0000] <annevk>
yeah I don't think we should do that

[01:38:19.0000] <annevk>
thanks a lot for those notes hsivonen

[01:38:29.0000] <hsivonen>
annevk: you're welcome

[01:39:20.0000] <annevk>
i'll study them in a couple of hours, have to go for a bit

[01:42:15.0000] <hsivonen>
we (Mozilla) keep making questionable decisions when it comes to encodings, because East Asia is treated as a mystery without a proper feedback loop

[01:42:37.0000] <hsivonen>
i.e. it's assumed that if we break something, we won't get bug reports--just lose market share

[01:43:39.0000] <annevk>
well for big5 you did act on some feedback, but apparently not on data or without proper check with other browsers

[01:44:38.0000] <annevk>
yeah that's why sicking didn't want to make HTML parsing in XHR utf-8-only I think

[01:44:56.0000] <annevk>
but that was not a market share decision, just a being able to use legacy documents or some such

[01:45:35.0000] <smaug____>
hsivonen: really ?

[01:45:58.0000] <smaug____>
we do have an office in Japan where there are active core developers

[01:46:46.0000] <foolip>
hsivonen, indeed, if Firefox hadn't bought into the terrible idea of Big5-UAO it would certainly have been dead and forgotten :(

[01:47:41.0000] <hsivonen>
smaug____: yes, really. :-(

[01:50:03.0000] <smaug____>
hsivonen: I'd like to know an example

[01:50:08.0000] <hsivonen>
annevk: well, the decisions to get rid of the 1024 byte limit for the detector was base on a single report (Japanese Planet Debian) plus second or third hand hearsay instead of someone from the Japan office presenting solid data

[01:51:30.0000] <hsivonen>
smaug____: 1) sicking's arguments for not falling back to UTF-8 in XHR. 2) the panic treatment of the heuristic detection limit in the Firefox 4 cycle. 3) perhaps the big5 stuff

[01:54:01.0000] <zcorpan>
hsivonen: is it possible to grep for problematic pages (for the 1024 limit)?

[01:54:23.0000] <hsivonen>
zcorpan: I doubt grep works

[01:54:45.0000] <hsivonen>
zcorpan: it would probably need a more complicated harness that actually runs chardet

[01:55:06.0000] <hsivonen>
smaug____: also potentially the FileReader stuff

[01:55:13.0000] <zcorpan>
yeah, k

[01:55:19.0000] <hsivonen>
I don't know what the rationale for the FileReader thing is

[01:56:22.0000] <hsivonen>
smaug____: also the BOMless UTF-16 Basic Latin thing was a panic from a single data point. (Albeit from India rather than East Asia.)

[01:57:53.0000] <hsivonen>
smaug____: we get a single weird data point from Asia and rush in a browser side fix. We get a single weird data point from Hungary or Romania and we'll shrug it as something to take a look at later

[01:58:42.0000] <hsivonen>
*shrug it off

[01:58:43.0000] <smaug____>
hsivonen: well if you think we should do something better in this area, I hope you've filed a meta bug to fix all these issues properly ;)

[01:58:59.0000] <smaug____>
and raised the issue in newsgroups

[01:59:55.0000] <hsivonen>
last time I tried to inject some data-driven decision making in the process, I was told I can't obtain the data due to privacy

[02:02:51.0000] <hsivonen>
also, when the sv-SE localization had bad default, I was able to say that things aren't supposed to be that weird in Sweden

[02:03:06.0000] <hsivonen>
but for random other localization it's assumed that the localizer knows better than I

[02:36:09.0000] <zcorpan>
btw, seems the font element text decoration quirk is the first quirk i'm writing tests for that one browser completely passes (webkit passes)

[02:37:57.0000] <zcorpan>
oh, no it wasn't (blocks ignore line height passes in opera/webkit/gecko)

[02:38:23.0000] <AryehGregor>
hsivonen, what was the data you wanted to obtain but couldn't due to privacy?

[02:41:24.0000] <hsivonen>
AryehGregor: Changes to fallback encoding on a per-locale basis as part of telemetry

[02:41:43.0000] <AryehGregor>
How would that violate privacy?  This is opt-in telemetry only, right?

[02:43:34.0000] <hsivonen>
AryehGregor: https://groups.google.com/d/msg/mozilla.dev.platform/CFDMuKOLyBE/xhaE0_e0JlEJ

[02:43:50.0000] <hsivonen>
AryehGregor: the telemetry opt-in isn't opt-in to whatever

[03:04:07.0000] <hsivonen>
the new "Browser Version (partially combined)" option doesn't seem combined to me on statcounter

[03:11:34.0000] <annevk>
okay, so besides the "universal" detector you can also enable a subset of them and which is depends on the local of the end user

[03:11:38.0000] <annevk>
locale*

[03:19:41.0000] <annevk>
foolip: I don't get where the FFED in your big5 script is coming from

[03:55:16.0000] <kennyluck>
typo of FFFD ?

[03:57:10.0000] <annevk>
found it foolip

[03:57:35.0000] <annevk>
foolip: didn't realize you had made some other changes to the handling of the data besides manually adding a few code points

[04:02:45.0000] <annevk>
kennyluck: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=16822

[04:08:17.0000] <kennyluck>
annevk, thanks

[04:20:35.0000] <hsivonen>
hmm. still no reply to my email to coremob asking about the purpose/meaning of ring 0

[04:26:11.0000] <annevk>
that <var> and <em> have the same styling can be a little confusing sometimes

[04:26:42.0000] <annevk>
maybe we should style <var> in standards with something extra

[04:27:27.0000] <hsivonen>
Is Opera expected to say "no style information" when as XSLT transform is bogus? http://hsivonen.iki.fi/test/moz/readystate/xslt-fail.html

[04:29:25.0000] <annevk>
I'm not sure we have XSLT error reporting

[04:35:24.0000] <jgraham>
hsivonen: I think so, but I don't really know why]

[04:36:17.0000] <hsivonen>
ok

[04:36:33.0000] <jgraham>
I could ask but the person mos likely to know just went for lunch

[04:36:43.0000] <jgraham>
Which is a good idea, all things considered

[04:37:35.0000] <hsivonen>
good idea to get food or good idea to dodge XSLT-related questions?

[04:37:43.0000] <jgraham>
Yes

[04:38:01.0000] <jgraham>
Both :)

[04:40:51.0000] <hsivonen>
I wish there was an easy way to query hg for "show all .xsl files I've ever added"

[04:46:01.0000] <annevk>
kennyluck: foolip: my idea of the encoder is to determine lead/trail and if lead is less than 0xA1 emit an encoder error

[04:50:14.0000] <zcorpan>
annevk: em { text-decoration:underline }

[04:51:03.0000] <hsivonen>
jgraham: the order of events is weird in Opera for http://hsivonen.iki.fi/test/moz/readystate/xslt.html

[04:51:49.0000] <hsivonen>
jgraham: I thought Opera had the same architecture for XSLT as Trident and WebKit. Apparently not quite so.

[04:52:07.0000] <hsivonen>
the Gecko results are sad, too

[04:52:30.0000] <zcorpan>
annevk: or var { font-family:serif }

[04:52:32.0000] <hsivonen>
but it's less surprising considering Gecko's different XSLT architecture

[04:55:44.0000] <hsivonen>
so I'm thinking of forming an opinion about readyState

[04:55:59.0000] <hsivonen>
 * Aborted docs should reach "complete"

[04:56:13.0000] <hsivonen>
 * XSLT errors should reach "complete"

[04:56:51.0000] <hsivonen>
 * Aborted docs should not fire "load"

[04:57:00.0000] <hsivonen>
 * XSLT errors should fire "load"

[04:57:27.0000] <hsivonen>
 * It shouldn't be possible to transition from "loading" to "complete" without going through "interactive"

[04:57:58.0000] <hsivonen>
 * All docs should fire "DOMContentLoaded"

[04:58:11.0000] <hsivonen>
 * "load" should never fire synchronously

[04:58:39.0000] <zcorpan>
or font-family:cursive for more fancyness

[04:58:47.0000] <hsivonen>
 * It's OK for the transition to "interactive" to be synchronous when document.close() processes the EOF synchronously

[04:59:03.0000] <hsivonen>
 * window.stop() should abort

[04:59:14.0000] <hsivonen>
do the above points make sense? worth posting to the list?

[05:04:03.0000] <smaug____>
hsivonen: could you perhaps indicate which browsers do what

[05:04:43.0000] <annevk>
zcorpan: cannot underline things other than links I think and serif is ugly, but thanks for the suggestions :)

[05:07:29.0000] <zcorpan>
come on, cursive looks awesome :-)

[05:07:58.0000] <hsivonen>
smaug____: ok. I'll put rationale in my post

[05:09:23.0000] <annevk>
font-family:cursive ? what is that

[05:09:27.0000] <annevk>
hmm

[05:12:15.0000] <smaug____>
hsivonen: could you pastebin the results even now?

[05:12:23.0000] <smaug____>
or put them to some wiki

[05:13:58.0000] <hsivonen>
smaug____: the results are not in a pasteable format

[05:14:11.0000] <hsivonen>
smaug____: that is, I'd have to run all the demos again

[05:14:54.0000] <smaug____>
ok

[05:14:59.0000] <smaug____>
/me waits for the email

[05:15:16.0000] <smaug____>
though, if the data is emailable format, it should be pastebinable too :)

[05:18:14.0000] <smaug____>
hmm, if I have a document fragment, what is the easiest way to serialize it

[05:18:24.0000] <smaug____>
its content, I guess

[05:18:38.0000] <hsivonen>
smaug____: I wasn't going to email the test output

[05:19:06.0000] <smaug____>
hsivonen: it would be helpful to know what browsers do now

[05:20:06.0000] <smaug____>
s/helpful/useful/

[05:25:14.0000] <annevk>
kennyluck: foolip: http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#big5-encoder

[05:28:44.0000] <jgraham>
hsivonen: That doesn't obviously look bad to me, but the existing spec doesn't obviously look bad

[05:29:16.0000] <jgraham>
So it would be helpful if you state the reasoning + the delta from the existing spec

[05:29:20.0000] <jgraham>
In your email

[05:40:15.0000] <kennyluck>
annevk, I like the fact that the algorithm avoid emitting hkscs extension. I am not sure how foolip feels about this though.

[05:40:25.0000] <zcorpan>
annevk: "The EOF byte is a conceptual byte representing the last byte in a stream." - doesn't it represent the end of the stream (and the previous byte is the last byte)?

[05:40:53.0000] <kennyluck>
annevk, How many CP950 characters are in the < 0xA1range?

[05:41:32.0000] <kennyluck>
/me is pretty ignorant about big5, in fact.

[05:48:20.0000] <annevk>
kennyluck: zero afaik

[05:48:24.0000] <annevk>
zcorpan: fair point

[06:05:08.0000] <kennyluck>
hmm, some of the many to one mappings are removed in big5. I think that's a good idea, but given that I don't understand why CP950 did this at the beginning, there's nothing much I could say.

[06:05:50.0000] <annevk>
you mean encoder-wise?

[06:06:10.0000] <kennyluck>
annevk, yeah.

[06:06:20.0000] <annevk>
it could be that we need to add that I suppose

[06:10:11.0000] <kennyluck>
annevk, just as an example. In http://moztw.org/docs/big5/table/cp950-u2b.txt , all 財, ㊖ and ㈶ would be encoded in the sequence that would be decoded as 財.

[06:10:52.0000] <kennyluck>
(The 0xb0 0x5d sequence)

[06:13:45.0000] <annevk>
kennyluck: yeah I know browsers do that

[06:14:10.0000] <annevk>
kennyluck: I have some simple scripts where with some tweaks I can find out what each Unicode code point maps to

[06:14:22.0000] <annevk>
kennyluck: takes forever to run though if I go beyond BMP

[06:14:50.0000] <annevk>
I should work on publishing those scripts somehow

[06:16:46.0000] <kennyluck>
annevk, anyway, I don't think the current algorithm is inferior in theory, so I suggest we expand the description of index-big5.txt so that these differences from CP950 are noted.

[06:17:48.0000] <kennyluck>
This should include the fact that the index-big5.txt has no PUA mappings too.

[06:19:54.0000] <annevk>
kennyluck: 1) index big5 is currently not described as being equivalent to cp950 2) cp950 officially does not include PUA

[06:20:07.0000] <annevk>
kennyluck: not sure if cp950 officially includes fallback mappings

[06:26:10.0000] <kennyluck>
annevk, well, people will want to compare the algorithm with what's implemented. That includes the PUA and I have no better name for it. Also, the current description says "This matches the Big5 standard in combination with the Hong Kong Supplementary Character Set and other common extensions." but I have no idea what this "Big5 standard" refers to.

[06:27:13.0000] <annevk>
yeah I should add some references at some point

[06:27:37.0000] <annevk>
but in practice I suspect people will have to compare it to the internal tables anyway

[06:27:38.0000] <kennyluck>
nobody knows what big5 is :(

[06:27:43.0000] <annevk>
or via a test suite or some such

[06:37:52.0000] <zewt>
annevk: any way to run the scripts in workers to speed them up?

[06:37:58.0000] <zewt>
(don't know what APIs you're using)

[06:38:54.0000] <annevk>
using URLs

[06:39:13.0000] <annevk>
and you need document encoding

[06:39:41.0000] <annevk>
if browsers expose the encoding API at some point and that's guaranteed to use the same mechanism it might work

[08:30:43.0000] <hsivonen>
got the readyState proposal done: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-April/035521.html

[08:31:21.0000] <JVoracek>
 

[08:33:21.0000] <jgraham>
hsivonen: Thanks

[08:35:18.0000] <annevk>
I wonder if this is the only observable attribute from the outside; otherwise we're going to have to do this again and again...

[08:39:14.0000] <jgraham>
Only observable attribute of what?

[08:39:39.0000] <annevk>
the various processes going on

[09:11:45.0000] <dglazkov>
good morning, Whatwg!

[09:38:35.0000] <gsnedders>
gsnedders is trying do maths, part [lost count years ago]: what's the simplest way to find the sign of a permutation cycle?

[09:40:16.0000] <annevk>
gsnedders: Google suggests http://www.math.uconn.edu/~kconrad/blurbs/grouptheory/sign.pdf

[09:42:37.0000] <gsnedders>
"In words, if a cycle has even length then its sign is -1, [otherwise] 1." Why do more places not just state that?

[09:42:52.0000] <Ms2ger>
Too trivial :)

[09:43:05.0000] <Hixie>
permutation cycles have signs?

[09:43:41.0000] <Ms2ger>
odd/even, I think we called them

[09:44:25.0000] <gsnedders>
Hixie: Yes. http://en.wikipedia.org/wiki/Even_and_odd_permutations

[09:45:00.0000] <gsnedders>
/me is totally looking forward to his exam tomorrow morning

[09:45:14.0000] <annevk>
I think I got scammed for the first time ever, by some US government-like looking site trying to get me to enter ESTA info

[09:45:15.0000] <annevk>
ugh

[09:45:30.0000] <Ms2ger>
You lose one internet, sir

[09:45:39.0000] <annevk>
I didn't go all the way

[09:45:49.0000] <TabAtkins_>
You pulled out before the end?

[09:45:52.0000] <TabAtkins_>
I hear that's not reliable.

[09:46:15.0000] <annevk>
it's what jesus would do though

[09:46:23.0000] <TabAtkins_>
Catholic Jesus, at least.

[09:46:32.0000] <annevk>
fair point

[09:46:41.0000] <Hixie>
was the site encrypted?

[09:46:50.0000] <annevk>
yeah

[09:46:55.0000] <Hixie>
who owned the cert?

[09:46:59.0000] <Hixie>
maybe they can be reported

[09:47:04.0000] <Hixie>
to their authority

[09:47:18.0000] <Ms2ger>
Anyone who feels like doing a little WebIDL in their head?

[09:47:40.0000] <Ms2ger>
var list = document.body.children

[09:47:40.0000] <Ms2ger>
Object.defineProperty(list, "length", {get: function() { throw 7 }})

[09:47:40.0000] <Ms2ger>
new Blob(list)

[09:48:32.0000] <gsnedders>
/me slaps Ms2ger for even writing that

[09:48:43.0000] <annevk>
Hixie: https://www.nationalvisas.com/ RapidSSL CA; might actually be a legal thing I suppose, they just charge more than usual

[09:48:46.0000] <Ms2ger>
gsnedders, thank you :)

[09:49:06.0000] <Ms2ger>
That proves I'm doing it right :)

[09:49:31.0000] <gsnedders>
Ms2ger: Masochist.

[09:49:53.0000] <Ms2ger>
I wonder, will Opera get it right? :)

[09:50:01.0000] <Hixie>
annevk: yeah, dunno

[09:50:04.0000] <Hixie>
annevk: might be "legit"

[09:50:09.0000] <Hixie>
for some definition thereof

[09:53:10.0000] <annevk>
whoa

[09:53:17.0000] <annevk>
certificate dialogs are application global in Chrome

[09:53:56.0000] <annevk>
(once you click on certificate information)

[10:01:25.0000] <Hixie>
good lord, i just hit inbox-unread-zero for the first time in weeks

[10:05:35.0000] <annevk>
whoa, that's bad

[10:06:16.0000] <annevk>
I've been dropping mailing lists and it seems to be working out

[10:07:06.0000] <TabAtkins_>
I've been doing the opposite.  I still hit unread-0 every morning, but it takes a while (especially on Mondays), and I have to make concerted efforts to burn down the read-but-not-acted-on pile. :/

[10:07:22.0000] <TabAtkins_>
But I felt a compulsion to start interacting with ES, so shrug.

[10:07:38.0000] <gsnedders>
TabAtkins_: es-discuss is heavy going.

[10:07:45.0000] <annevk>
ooh es-discuss

[10:07:53.0000] <TabAtkins_>
Not as bad as I would have thought.

[10:07:54.0000] <annevk>
and www-style

[10:07:56.0000] <gsnedders>
/me has all but given up on almost all mailing lists :P

[10:07:57.0000] <annevk>
you're crazy

[10:08:13.0000] <TabAtkins_>
The ES chairs are very reasonable.

[10:08:31.0000] <TabAtkins_>
Allen and Brendan.

[10:08:51.0000] <gsnedders>
That doesn't in itself make it easy to keep up with.

[10:09:03.0000] <TabAtkins_>
True, but that's what strategic use of muting is for.

[10:09:44.0000] <gsnedders>
I guess my issue is more just a lot of it requires more thought than www-style does, for example.

[10:10:10.0000] <TabAtkins_>
True.

[10:10:15.0000] <annevk>
what's the status of http://norbertlindenberg.com/2012/03/ecmascript-supplementary-characters/index.html ?

[10:10:34.0000] <TabAtkins_>
The arguments over the weekend over soft-binding or hard-binding "this" for fat-arrow functions, for example, were quite subtle.

[10:10:44.0000] <annevk>
JavaScript guys changing the string representation of the entire platform within the TC39 bubble is somewhat scary / annoying

[10:11:39.0000] <gsnedders>
annevk: The only two places it matters are at an ES level and a WebIDL level one, no? And it's been discussed on mailing lists for both.

[10:12:25.0000] <annevk>
well it matters e.g. for <textarea maxlength>

[10:12:52.0000] <gsnedders>
annevk: Surely that isn't defined in terms of the ES representation of a string, though?

[10:13:09.0000] <annevk>
it's defined in code units I think

[10:13:23.0000] <gsnedders>
So you hit maxlength with a string of a shorter length.

[10:13:36.0000] <annevk>
depends on how you define string

[10:13:52.0000] <annevk>
but in the platform string means 16bit code units

[10:13:55.0000] <gsnedders>
the primitive String type.

[10:14:02.0000] <annevk>
because of ES /browser architecture, etc.

[10:16:04.0000] <gsnedders>
http://www.w3.org/mid/4F40B3ED.5020604⊙mc is outwith the TC39 bubble.

[10:18:05.0000] <annevk>
yeah I saw that

[10:18:20.0000] <annevk>
but that's a month ago

[10:18:49.0000] <annevk>
two months even

[10:19:09.0000] <annevk>
whereas what I linked above is only a month old

[10:19:22.0000] <annevk>
with a long discussion on es-discuss

[10:19:53.0000] <gsnedders>
What discussion on es-discuss?

[10:19:57.0000] <gsnedders>
Am I just blind?

[10:20:15.0000] <gsnedders>
Oh, there.

[10:20:17.0000] <annevk>
https://mail.mozilla.org/pipermail/es-discuss/2012-March/thread.html#21247

[10:20:56.0000] <gsnedders>
/me notes that complaining about TC39 not doing more cross-WG communication here doesn't help anything

[10:29:10.0000] <MikeSmith>
annevk: gsnedders is right, you should complain on the #tc39 channel where they all hang out

[10:30:24.0000] <annevk>
MikeSmith: server?

[10:30:36.0000] <annevk>
oh wait, sarcasm?

[10:30:40.0000] <MikeSmith>
heh

[10:30:40.0000] <MikeSmith>
yeah

[10:32:07.0000] <annevk>
so that article concludes with

[10:32:11.0000] <annevk>
"To really help developers, the focus shouldn’t be on access to individual code points. It should be on more and better functions to process text at higher levels of abstractions. Regular expressions with support for Unicode properties and grapheme clusters would be an excellent start."

[10:32:14.0000] <annevk>
which I agree with

[10:32:30.0000] <annevk>
and it also doesn't do the weird global flip people were considering

[10:33:03.0000] <annevk>
but if that's the end goal, why bother with code point based string iterator and some codePointAt methods...

[10:34:15.0000] <gsnedders>
http://www.w3.org/mid/CAP40CR28yADVHQgALA3numziGKy_KWSKBjetZ5YG=zSavPyuAQ⊙mgc I basically agree with, FWIW

[10:39:22.0000] <jsbell>
If ES6 implemented that proposal my encoding impl shim would get to drop a whopping 6 or so lines of code.

[10:40:35.0000] <annevk>
worth it :p

[10:41:23.0000] <annevk>
but yeah, once you figure it out the code unit -> code point math is not that hard

[10:41:52.0000] <annevk>
a problem might be that not many people are doing it, but they're also not considering grapheme clusters so how bad can it be

[10:41:56.0000] <jsbell>
Snark aside, I'm a fan of the proposal. IMHO a little more formalization of ES strings as UTF-16 is worth it.

[10:43:18.0000] <annevk>
I would kind of hate it if at some point we have length exposed as code units in one place and code points in another

[10:43:50.0000] <annevk>
and I can totally see that happening as people typically think they're smarter than whatever went before

[10:44:32.0000] <annevk>
but this proposal does seem reasonable

[10:48:59.0000] <annevk>
jsbell: "csueckr" is the wrong spelling, the spec changed it to "cseuckr"

[10:49:11.0000] <annevk>
jsbell: unfortunately that also changed order

[10:54:48.0000] <jsbell>
annevk: thanks, fixed. I'll refactor soon to use the encodings.json/indexes.json almost directly.

[10:57:54.0000] <annevk>
ah cool, that'll fix your big5 index bug I fixed this morning

[12:01:01.0000] <krit>
Philip`: ping

[12:01:50.0000] <Philip`>
krit: Pong

[12:03:10.0000] <annevk>
yay WebKit (for once?)

[12:03:46.0000] <annevk>
thanks ap, maybe we should strive for something close to what you guys have instead then

[12:04:03.0000] <krit>
hi Philip`. I looked at your canvas test suite.

[12:04:19.0000] <ap>
annevk: would be great to eliminate guesswork from decoding

[12:04:25.0000] <krit>
Philip`: how do you maintain the references in your tests?

[12:04:37.0000] <krit>
Philip`: As example http://philip.html5.org/tests/canvas/suite/tests/2d.transformation.transform.skewed.html

[12:04:44.0000] <annevk>
ap: yeah, that's my goal

[12:04:53.0000] <krit>
Philip`: has a reference to http://philip.html5.org/tests/canvas/suite/tests/spec.html#testrefs.2d.transformation.transform

[12:05:04.0000] <krit>
Philip`: Do you add the references manually?

[12:05:06.0000] <annevk>
removing guesswork, one platform layer at a time :)

[12:06:17.0000] <Philip`>
krit: (It's probably better to use the version at http://test.w3.org/html/tests/submission/PhilipTaylor/canvas/ (or http://dvcs.w3.org/hg/html/file/tip/tests/submission/PhilipTaylor) since that's somewhat more maintained)

[12:06:45.0000] <krit>
Phae: the question is more how you maintained this references :)

[12:07:10.0000] <krit>
Philip`: --^

[12:07:15.0000] <Philip`>
krit: There's a manually-written file http://dvcs.w3.org/hg/html/file/tip/tests/submission/PhilipTaylor/tools/canvas/spec.yaml that refers to spec sentences

[12:07:32.0000] <Philip`>
krit: and then a script that does the matching and spec-annotating

[12:08:03.0000] <krit>
Philip`: means you have to update this file if the spec text changes?

[12:08:15.0000] <Ms2ger>
It's all regices

[12:08:38.0000] <Philip`>
krit: Yes, if it changes enough to break the regexy patterns

[12:08:55.0000] <Philip`>
(which usually means the tests have to be updated too)

[12:09:01.0000] <krit>
Philip`: thanks

[12:10:22.0000] <Philip`>
krit: Back when I bothered maintaining the tests, updating the references didn't take much work, and it helped highlight which tests relied on parts of the spec that had changed

[12:10:38.0000] <Philip`>
krit: so it's kind of evil but I think it works alright :-)

[12:11:15.0000] <krit>
Philip`: I can imagine that it is more problematic on a spec like HTML that changes frequently

[12:11:32.0000] <krit>
Philip`: How much time does it take nowadays to maintain this list?

[12:12:06.0000] <Philip`>
krit: This *is* [a part of] the HTML spec

[12:12:35.0000] <Philip`>
krit: The spec as a whole changes frequently, but the individual parts of it change pretty infrequently and usually in large batches

[12:13:11.0000] <krit>
Philip`: But it is still you who updated the file?

[12:13:13.0000] <Philip`>
krit: Ms2ger would probably be a better person to ask about what happens nowadays

[12:14:07.0000] <annevk>
from not ever changing we now have "IE is likely not to change"

[12:14:08.0000] <krit>
Ms2ger: oh, so your comment was related to the discussion?

[12:14:13.0000] <Ms2ger>
:)

[12:14:32.0000] <Ms2ger>
I've been maintaining that code more than I'd like

[12:14:37.0000] <krit>
Ms2ger: not sure what "regices" means :P

[12:14:50.0000] <Ms2ger>
It's the plural of "regex", obviously ;)

[12:15:06.0000] <krit>
ahhh hehe

[12:15:27.0000] <krit>
Ms2ger: can we talk more later? Have a meeting now (lunch :D)

[12:15:44.0000] <Ms2ger>
Sure, but not today :)

[12:15:48.0000] <krit>
np

[12:15:57.0000] <krit>
Ms2ger: Philip`Thanks for your time

[12:16:01.0000] <Ms2ger>
Np

[13:17:43.0000] <sftrabbit>
Is it a known bug that the w3c validator doesn't seem to check the microformats wiki for valid rel link types, even though it links to it as an explanation for the error?

[13:18:15.0000] <MikeSmith>
sftrabbit: it's intentional

[13:18:31.0000] <sftrabbit>
why's that?

[13:18:32.0000] <MikeSmith>
we update the validator based on changes to the wiki

[13:19:04.0000] <MikeSmith>
because it's more practical

[13:19:33.0000] <MikeSmith>
if you have a specific rel value that we're not supporting, please file a bug

[13:19:47.0000] <MikeSmith>
or let me know and I'll take a look at it right now

[13:22:03.0000] <sftrabbit>
"logo" and "sitemap" are flagging up for me

[13:22:43.0000] <sftrabbit>
on link elements

[13:29:11.0000] <annevk>
whoa Chrome <input type=date> has terrible UI if you start editing the field

[13:29:16.0000] <annevk>
by keyboard

[13:29:26.0000] <annevk>
why even make it editable if pretty much any change wipes it?

[13:29:53.0000] <smaug____>
type=date is hard

[13:30:13.0000] <smaug____>
/me waits to see the first good implementation

[13:30:15.0000] <annevk>
we've had it since 2006

[13:30:31.0000] <smaug____>
since 2006 doesn't mean it is good ;)

[13:31:21.0000] <annevk>
yeah well, nothing is perfect

[13:32:08.0000] <annevk>
but at least with Opera's implementation you can only enter a date and not confuse it for an arbitrary field

[13:32:31.0000] <annevk>
whereas in Chrome's implementation you likely lose your textual input until you notice that arrow

[13:33:01.0000] <annevk>
and if you then manually modify it you might still be out of luck if you don't really know American date conventions

[14:19:29.0000] <jgraham>
Oh, drama

[14:19:43.0000] <jgraham>
Guess that means it's time for sleep

[14:25:22.0000] <othermaciej>
drama? where?

[14:47:48.0000] <kennyluck>
WHATCG

[14:48:48.0000] <othermaciej>
clearly the next step is to create a Task Force

[14:54:55.0000] <hober>
WHATWGCGTF

[14:55:49.0000] <kennyluck>
Can someone clarify that http://lists.w3.org/Archives/Public/public-whatwg/ is not the mailing list we are going to use?

[14:56:02.0000] <Hixie>
correct

[14:56:07.0000] <hober>
kennyluck: http://www.w3.org/community/about/faq/#can-a-community-group-use-its-own-infrastructure-not-hosted-by-w3c

[14:56:16.0000] <Hixie>
whatwg⊙wo is the mailing list

[14:56:28.0000] <Hixie>
basically nothing changes until we do an FSA publication

[14:56:35.0000] <Hixie>
and then we can get people to sign the patent policy

[14:56:37.0000] <Hixie>
if they want to

[14:56:40.0000] <TabAtkins_>
And I assume you'll kick off FSA publications regularly?

[14:56:46.0000] <Hixie>
yeah

[14:57:31.0000] <Hixie>
how often depends on how long it takes for key companies (esp. opera, mozilla, apple, google) to sign the first one

[14:57:33.0000] <kennyluck>
FWIW, no one mentioned this in these mails and I expect newcomers get confused because the list is closer to the homepage of the CG.

[14:57:43.0000] <Hixie>
i plan to fix that

[14:57:47.0000] <Hixie>
as soon as i'm a member of the CG :-P

[14:57:56.0000] <kennyluck>
:p

[14:58:12.0000] <hober>
kennyluck: CGs get auto-created once there are N supporters; the autogeneration script doesn't know how to handle cases where the CG already has infrastructure elsewhere. the links will get fixed.

[14:58:12.0000] <Hixie>
/me has to wait for his AC rep to join his company before he can join the CG :-)

[14:58:21.0000] <hober>
/me is in the same boat

[14:58:38.0000] <TabAtkins_>
At least I'll be able to join the CG once you do without bugging TV.

[14:58:54.0000] <Hixie>
hober: do you know if we have to get manual intervention to fix those links?

[14:59:06.0000] <hober>
Hixie: i don't, but I bet MikeSmith does.

[14:59:15.0000] <Hixie>
k

[14:59:29.0000] <MikeSmith>
which links?

[14:59:55.0000] <hober>
MikeSmith: the links from https://www.w3.org/community/whatwg/

[14:59:57.0000] <hober>
to the ml etc

[15:00:10.0000] <MikeSmith>
/me takes a look

[15:00:22.0000] <hober>
those should all point to the whatwg.org equivalents

[15:00:29.0000] <hober>
and not the autogenerated thigns

[15:00:33.0000] <hober>
which should get removed

[15:00:48.0000] <Hixie>
ideally the wiki too

[15:00:57.0000] <hober>
and chat

[15:01:00.0000] <Hixie>
adn the irc link yeah

[15:01:07.0000] <Hixie>
maybe even the blog :-P

[15:01:13.0000] <Hixie>
but i dunno how that'd work

[15:01:21.0000] <Hixie>
anyway, no rush

[15:45:29.0000] <kennyluck>
Does anyone know why the WHATCG can go straightly from a proposed CG to an accepted one?

[15:47:06.0000] <TabAtkins_>
If you get five signups it's automatically accepted.

[15:48:29.0000] <kennyluck>
TabAtkins_, I only see two in the list though.

[15:48:36.0000] <TabAtkins_>
Shrug.

[15:50:10.0000] <kennyluck>
I am really happy about this news. There's no longer a need to explain the relationship between W3C and WHATWG. Just join the W3C WHATCG!

[15:50:59.0000] <othermaciej>
it's accepted now

[15:51:05.0000] <othermaciej>
b/c there were 5 supporters

[15:51:13.0000] <othermaciej>
but supporting creation does not join you automatically

[15:51:22.0000] <othermaciej>
and for people who belong to member orgs, they need their AC rep to approve

[15:52:28.0000] <kennyluck>
I see. It's still a bit mysterious to me that it gets accepted in 30 mins.

[16:01:07.0000] <Hixie>
kennyluck: it's automated

[16:01:12.0000] <Hixie>
kennyluck: as far as i can tell

[16:01:17.0000] <Hixie>
kennyluck: that's what the documentation says anyway

[16:01:22.0000] <Hixie>
kennyluck: you just need five supporters

[16:05:05.0000] <zewt>
now if only every cg didn't feel the strange need to set up their own, isolated mailing list ...


2012-04-24
[21:52:18.0000] <shepazu>
Hixie: I believe it is automated

[21:53:11.0000] <shepazu>
Hixie: you don't seem to have automatically been added, however…

[21:53:34.0000] <Hixie>
yeah, that's normal

[21:53:34.0000] <shepazu>
you should get Raman to add you, so you can be nominated chair

[21:53:41.0000] <Hixie>
right

[21:54:25.0000] <shepazu>
(seems odd to me… if you propose a CG and it gets accepted, you should be added automatically… but whatever)

[21:55:12.0000] <shepazu>
Hixie: are you planning on backporting old email archives into the new list, or what?

[21:55:29.0000] <Hixie>
we'll just use the existing list

[21:56:01.0000] <Hixie>
it basically changes nothing until we do an FSA -- see the e-mail to the WHATWG list

[21:56:13.0000] <shepazu>
/me heard some rumors of W3C archiving WHATWG emails for posterity and searching, etc.

[21:56:19.0000] <shepazu>
ok, thanks

[21:56:22.0000] <Hixie>
yeah, i heard that might be happening

[21:56:34.0000] <Hixie>
it'd be awesome if so, the mailing list software the w3c uses is pretty awesome

[21:58:31.0000] <shepazu>
Hixie: I'm not in the loop, but I thought it was already happening… if nothing else, you could import them into the automatic WHATCG list

[21:58:48.0000] <Hixie>
yeah i'm not in the loop either :-)

[21:59:03.0000] <othermaciej>
there's a loop?

[21:59:36.0000] <shepazu>
othermaciej: of course, what do you think W3M has been cycling around in for the past decade :)

[21:59:49.0000] <othermaciej>
I thought that was more of a drain

[21:59:55.0000] <othermaciej>
/me ducks

[22:00:19.0000] <shepazu>
hmmm… one cyclical motion might have multiple explanations...

[22:00:34.0000] <othermaciej>
incidentally I'd guess a bunch of Apple folks will appear on the list once our AC rep clicks ok

[22:02:18.0000] <shepazu>
and poof! WHATWG has a patent policy!

[22:23:16.0000] <yuhong>
Now, can MS join?

[22:59:05.0000] <annevk>
The archiving the WHATWG mailing list on lists.w3.org is something I'm trying to get done, fwiw

[23:00:08.0000] <othermaciej>
long live WHATCG

[23:05:07.0000] <annevk>
the logs promised drama, where can I find it in my inbox?

[23:05:10.0000] <annevk>
jgraham: ?

[23:19:06.0000] <othermaciej>
annevk: maybe he though today's various announcements would lead to drama, which it appears they did not

[23:24:32.0000] <zcorpan>
Ms2ger: thanks for the test case :-)

[23:24:41.0000] <annevk>
yeah, the only confusion seems to be over whether we became a CG or whether we now also have a CG, but it doesn't really matter

[23:24:55.0000] <zcorpan>
Ms2ger: afaict it should throw 7

[23:25:52.0000] <othermaciej>
I believe Hixie intends to use whatwg⊙wo as the CG mailing list (it meets the requirement of being publicly archived), so that's probably closer to becoming a CG

[23:26:11.0000] <othermaciej>
otoh I don't think he'll ban people who don't join the CG

[23:27:36.0000] <annevk>
afaik the plan is to 1) make the CG use WHATWG resources and 2) at some point in the future use it to publish "CG standards" so people can sign of on patents

[23:29:53.0000] <othermaciej>
yes, a CG can publish specifications with some sort of patent commitment

[23:31:13.0000] <hsivonen>
I wonder if whattw⊙wo could be forwarded to @w3.org to make use of the superior archival software

[23:31:26.0000] <hsivonen>
bonus points for copying the old archives there, too

[23:33:06.0000] <annevk>
hsivonen: W3C has been researching if they can archive our mailing list

[23:34:33.0000] <hsivonen>
I slightly worried about getting a new editor for W3C HTML5

[23:35:02.0000] <annevk>
maybe they can make another XHTML 2.0

[23:35:08.0000] <hsivonen>
it isn't particularly helpful if W3C HTML5 snapshot starts deviating from the real Living HTML

[23:35:22.0000] <hsivonen>
though I do see the value of driving it to REC under the PP

[23:35:44.0000] <hsivonen>
the PP seems to be what's good about RECs

[23:36:19.0000] <othermaciej>
how well it works out will depend in large part on who volunteers and is appointed

[23:36:57.0000] <annevk>
I doubt any of the good people are interested in boring maintenance work

[23:37:15.0000] <hsivonen>
I hope the chairs already had someone willing and appointable figured out ahead of time

[23:38:28.0000] <othermaciej>
I am a fan of boring but necessary maintenance work, but I don't have the time to volunteer, plus it would be a huge conflict of interest

[23:39:23.0000] <hsivonen>
hmm. no replies to my readyState email while I was asleep

[23:40:17.0000] <annevk>
othermaciej: as a chair of the Notifications WG, I was told I could be editor

[23:40:21.0000] <othermaciej>
www-archive contains a lot of quirky messages from Bjoern Hoehrmann this month

[23:41:10.0000] <othermaciej>
annevk: I can see how it might work in WGs with less attention on them and less likelihood of conflict than the html wg

[23:41:37.0000] <othermaciej>
in the past I have already been criticized for posting technical positions or reports on Apple's plans without explicitly saying "chair hat off"

[23:41:50.0000] <annevk>
hahaha

[23:41:53.0000] <annevk>
that group is a mess

[23:45:56.0000] <jgraham>
annevk: This is the part of the drama where there is development of the storyline, not the sort of tense, but ultimately, pointless infighting, that is often labelled drama

[23:46:26.0000] <jgraham>
There's still plenty of scope for the other kind too of course

[23:46:51.0000] <jgraham>
Just listen out for changes to the soundtrack

[23:48:03.0000] <jgraham>
hsivonen: I haven't replied to that email, but it seems quite reasonable to me

[23:48:31.0000] <jgraham>
I don't yet have anything technical to contribute beyond that

[23:48:38.0000] <hsivonen>
jgraham: ok. now I need sicking to return from vacation and approve the plan

[23:49:01.0000] <hsivonen>
it would be annoying to implement it and then get blocked at the review phase

[00:01:05.0000] <Ms2ger>
zcorpan, you are correct

[00:01:13.0000] <Ms2ger>
Whether that's desirable...

[00:02:52.0000] <annevk>
http://blog.whatwg.org/patent-policy

[00:03:20.0000] <annevk>
hsivonen: othermaciej: hober: ^^ does that blog post read okay?

[00:04:24.0000] <othermaciej>
annevk: seems reasonable to me

[00:04:36.0000] <annevk>
cool cool

[00:04:52.0000] <othermaciej>
I would normally say to include the link for joining the CG, but I think Hixie is holding off on getting too many more people to join until his AC rep approves his own join request

[00:05:46.0000] <annevk>
that's the first link in the post actually

[00:05:59.0000] <othermaciej>
ah, I see

[00:06:23.0000] <othermaciej>
works4me

[00:06:45.0000] <shepazu>
othermaciej: I have a suggestion about the chair thing, so that nobody else selects a chair before hixie joins...

[00:07:11.0000] <shepazu>
we could make anne or mike5 or someone else temporary chair

[00:07:17.0000] <othermaciej>
shepazu: what is your suggestion?

[00:07:24.0000] <shepazu>
^^

[00:07:27.0000] <othermaciej>
I see

[00:07:37.0000] <shepazu>
just a thought, might not be necessary

[00:07:45.0000] <othermaciej>
if Hixie was here I'd ask him

[00:07:49.0000] <shepazu>
a chair has the ability to elect other chairs

[00:08:02.0000] <shepazu>
and it is blocked from anyone else

[00:08:05.0000] <othermaciej>
he should certainly have dibs on picking the initial chair

[00:09:10.0000] <shepazu>
I'm just thinking we could avoid chicanery

[00:09:31.0000] <shepazu>
but I'm sure even so, it could be fixed by the systems team to appoint the right chair

[00:09:42.0000] <annevk>
if that's likely I think Hixie would be fine with Mike

[00:10:07.0000] <shepazu>
probably not necessary, really, but if you guys think it's worth doing, I'll select Mike5

[00:10:17.0000] <zcorpan>
Ms2ger: apparently we pass the test

[00:10:24.0000] <Ms2ger>
Nice!

[00:10:29.0000] <othermaciej>
it's only 10 people so far, I wouldn't sweat it

[00:10:35.0000] <zcorpan>
inorite

[00:10:53.0000] <annevk>
orly

[00:10:55.0000] <shepazu>
othermaciej: yeah, I'm sure people will be respectful, and proly raman will push the button tomorrow

[00:11:04.0000] <Ms2ger>
Opera got it right first

[00:11:11.0000] <annevk>
damn straight

[00:11:39.0000] <Ms2ger>
Now, when will you guys ship? In half a decade? :)

[00:11:41.0000] <zcorpan>
pro tip: if you want to use a custom exception with assert_throws, use an object with a 'name' property

[00:12:01.0000] <shepazu>
nice writeup of scoped css on css-tricks, link to a jquery polyfill http://css-tricks.com/saving-the-day-with-scoped-css/

[00:12:08.0000] <zcorpan>
or rewrite the assert_throws impl

[00:12:10.0000] <hsivonen>
annevk: I don't understand how the W3C Community Final Spec Agreement binds whatwg@whatwg subscribers who don't join the CG in any way

[00:12:27.0000] <shepazu>
hsivonen: it doesn't

[00:12:37.0000] <shepazu>
but that's a social problem

[00:13:12.0000] <shepazu>
well, I guess it's all a social problem, but I mean, you can ask people to jion

[00:13:25.0000] <shepazu>


[00:13:32.0000] <shepazu>
*join

[00:13:59.0000] <othermaciej>
it would be nice to get a broad set of people to at least agree to the CLA (which happens via joining) http://www.w3.org/community/about/agreements/cla/

[00:15:15.0000] <annevk>
hsivonen: FSA doesn't bind anyone

[00:15:21.0000] <annevk>
hsivonen: as you can read at the top

[00:16:04.0000] <annevk>
othermaciej: hmm true

[00:16:46.0000] <annevk>
othermaciej: I guess we should campaign for that later once the WHATCG website is updated some and everything is in place

[00:18:00.0000] <othermaciej>
indeed

[00:28:27.0000] <zcorpan>
/me pictures annevk walking around with a sign "PLZ JOIN WHATCG KTHXBYE"

[00:29:44.0000] <Ms2ger>
zcorpan, I've done the {name} thing :)

[00:44:14.0000] <shepazu>
zcorpan: http://qkme.me/3oxwgi

[00:58:53.0000] <annevk>
should blobParts not be a sequence<>?

[00:59:12.0000] <Ms2ger>
Same difference

[01:00:18.0000] <heycam>
I tend to think of sequence<> as being a clearer indication of the function not retaining any references to the object passed in

[01:00:46.0000] <heycam>
and makes it easier not to stuff up if you have a genuine platform array object hanging around

[01:01:16.0000] <annevk>
maybe methods should only be allowed to take a sequence then?

[01:01:51.0000] <heycam>
I think there are legitimate reasons for taking an array type, if for example you do have platform array objects

[01:02:26.0000] <heycam>
but it would be hard to tell from the IDL whether you might have platform array objects being returned from any operation/attribute, or whether it makes sense to accept them as an argument

[01:03:10.0000] <Ms2ger>
heycam, is there a clear description of the differences between sequences and arrays somewhere in the spec?

[01:03:52.0000] <heycam>
Ms2ger, there's no section contrasting the two types

[01:04:22.0000] <Ms2ger>
Would be nice to have ;)

[01:04:23.0000] <heycam>
wonder what happened to that idea of the web spec best practices guide

[01:04:35.0000] <Ms2ger>
Oh, robin's thing?

[01:04:40.0000] <heycam>
yeah

[01:04:41.0000] <Ms2ger>
I dunno

[01:10:15.0000] <Von_Davidicus>
Question:  How many people use computers so old they only support 8-character file names and 3-character extensions?

[01:10:24.0000] <zcorpan>
which objects support indexed properties but don't have a 'length'?

[01:10:51.0000] <zcorpan>
should webidl require them to have a length?

[01:11:12.0000] <heycam>
zcorpan, I couldn't think of one off the top of my head

[01:11:27.0000] <heycam>
zcorpan, (if you ignore SVGCrazyLists, which have numberOfItems)

[01:11:45.0000] <heycam>
zcorpan, (and which haven't been rewritten in Web IDL yet and don't have indexed properties really anyway)

[01:11:58.0000] <Ms2ger>
heycam, don't they have length as well in Gecko?

[01:11:59.0000] <jgraham>
numberOfItems?

[01:12:03.0000] <jgraham>
Really?

[01:12:08.0000] <jgraham>
That's funny

[01:12:11.0000] <heycam>
Ms2ger, I think you're right, jwatt added that

[01:12:18.0000] <heycam>
jgraham, super ergonomic hey

[01:12:57.0000] <jgraham>
It's self-satire

[01:13:32.0000] <zcorpan>
heycam: what about the second question? :-)

[01:14:17.0000] <heycam>
zcorpan, should it require it? maybe...

[01:15:03.0000] <Ms2ger>
And does it ever make sense to look at the length property of a platform objects that support indexed properties?

[01:15:17.0000] <heycam>
you know technically you can even define the set of supported indexed properties as { 4, 26, 3943 }

[01:15:21.0000] <heycam>
not sure what length would be then ;)

[01:15:57.0000] <zcorpan>
length would be whatever such a spec defines it to be :-P

[01:17:19.0000] <zcorpan>
i dunno, i think it seems consistent to check length for objects that support indexed properties if they all have a length today

[01:17:44.0000] <heycam>
but if length remains an accessor property, and you put a length property on the object itself...

[01:17:55.0000] <annevk>
heycam: if that's technically possible, but nobody requires it, it seems a simpler design would do

[01:19:09.0000] <zcorpan>
we shouldn't optimize for edge cases evil people like Ms2ger or myself come up with

[01:19:13.0000] <heycam>
heh

[01:19:19.0000] <heycam>
I would be in favour of always exposing a length

[01:19:29.0000] <zcorpan>
very well then :-)

[01:19:43.0000] <heycam>
maybe even returning it to an instance property instead of a prototype one

[01:20:09.0000] <zcorpan>
is that how Array has it?

[01:20:10.0000] <Ms2ger>
Don't listen to the JS people ;)

[01:20:23.0000] <Ms2ger>
Array and Typed Arrays, I think

[01:20:40.0000] <zcorpan>
k. i don't have an opinion either way about that

[01:20:54.0000] <heycam>
on one hand I hear tell of slowness from having the property on the prototype, on the other I hear that maybe native Arrays will have length as a prototype property some time in the future

[01:21:34.0000] <zcorpan>
is the slowness specific to length or applies to properties in general?

[01:22:54.0000] <heycam>
I don't know

[01:22:58.0000] <heycam>
you would think it's everything

[01:23:14.0000] <heycam>
but it might be showing up in code like   for (var i = 0; i < blah.length; i++) ...

[01:29:48.0000] <Philip`>
Von_Davidicus: I imagine it'd be none that are capable of browsing the web in any kind of bearable way

[01:29:58.0000] <Philip`>
Von_Davidicus: (since Win95 added long filename support)

[01:30:13.0000] <Von_Davidicus>
Ah, okay.

[01:30:30.0000] <Philip`>
Von_Davidicus: I guess the more common case is people with OSes that do support long filenames, but with some kind of weird filesystem (probably a network one) that doesn't

[01:30:39.0000] <Von_Davidicus>
It was Win95.  My mother remembered that Win98 had it.

[01:30:52.0000] <Von_Davidicus>
*Was trying to remember which Windows added it*

[01:32:41.0000] <Philip`>
/me suggests using Wikipedia instead of trying to remember things :-)

[01:34:12.0000] <Philip`>
(Win95 came with long names like "C:\Program Files" by default, I think)

[01:34:22.0000] <Von_Davidicus>
*Reads up on Microsoft Windows.*  Tsk, tsk.  Such language.

[01:35:23.0000] <annevk>
http://dev.w3.org/html5/decision-policy/html5-stabilization-plan.html

[01:35:23.0000] <annevk>
I don't understand Q1b second bullet point

[01:36:00.0000] <annevk>
it's public-html, not public_html...

[01:40:09.0000] <annevk>
afaict this will be a gigantic mess

[01:40:49.0000] <annevk>
that's my prediction for this so-called "stabilization"

[01:41:51.0000] <Von_Davidicus>
When has HTML ever been anything else?  :)  *Looks at his own pages, JavaScript and all, and compares it to his bachelor pad.

[02:55:55.0000] <hsivonen>
Is the HTTP Link header used outside test suites and publications by Hixie and annevk?

[03:08:40.0000] <annevk>
hsivonen: matjas also uses it to impress his posse :p

[03:08:58.0000] <matjas>
:')

[03:09:19.0000] <matjas>
hsivonen: it’s used here, too: http://eligrey.com/blog/post/title-image-files-in-opera

[03:15:27.0000] <hsivonen>
matjas: thanks. I'm still unconvinced that Link headers should be kept considering their cost/benefit characteristics

[03:16:24.0000] <annevk>
I'm actually in favor of removing them

[03:16:31.0000] <annevk>
Hixie is not

[03:16:40.0000] <annevk>
nobody else cares I think

[03:17:09.0000] <annevk>
if you can get them removed from Gecko that would be most excellent

[03:17:14.0000] <annevk>
I'm not sure why we have kept them in Opera

[03:17:17.0000] <hsivonen>
annevk: it seems Julian cares, considering that I just review a patch of his that improves Link support in Gecko

[03:17:28.0000] <hsivonen>
*reviewed

[03:18:13.0000] <annevk>
good point, the few open issues we have in Opera are also per Julian

[03:18:53.0000] <annevk>
not sure that the HTML and HTTP editor wanting a pet feature in browsers is a good reason to have it though

[03:20:33.0000] <zcorpan>
/me wonders how to match a newline with grep -Ez

[03:22:53.0000] <annevk>
hsivonen: <meta http-equiv=link> has been removed from Gecko already: https://bugzilla.mozilla.org/show_bug.cgi?id=587928

[03:22:54.0000] <annevk>
hsivonen: not yet from Opera

[03:22:55.0000] <jgraham>
/me is +1 on seeing them die fwiw

[03:23:36.0000] <annevk>
I can't seem to find a bug in Opera on removing it

[03:23:39.0000] <annevk>
I'll file one

[03:27:05.0000] <annevk>
hsivonen: is there a bug on Gecko already?

[03:27:21.0000] <annevk>
hsivonen: I'm willing to file one

[03:27:28.0000] <zcorpan>
hsivonen: http://simon.html5.org/dump/link-headers.txt

[03:28:00.0000] <hsivonen>
annevk: I don'tknow

[03:28:26.0000] <zcorpan>
7 style sheet links it seems

[03:29:30.0000] <hsivonen>
zcorpan: out of how many pages in total?

[03:30:43.0000] <zcorpan>
"roughly 600,000 pages"

[03:31:01.0000] <zcorpan>
says http://dotnetdotcom.org/

[03:31:17.0000] <hsivonen>
zcorpan: thanks. so tiny, tiny fraction

[03:31:30.0000] <annevk>
hsivonen: https://bugzilla.mozilla.org/show_bug.cgi?id=748294

[03:31:45.0000] <Philip`>
/me counted more like 400K pages in their data, not 600K

[03:38:23.0000] <zcorpan>
link: <http://www2.aapg.org/favicon.ico>; REL=shortcut icon

[03:38:50.0000] <annevk>
parse error!

[03:40:09.0000] <zcorpan>
$ grep -aEcz "^HTTP/1\.1" web200904

[03:40:09.0000] <zcorpan>
417486

[03:42:01.0000] <annevk>
can't you grep for the null byte separate sequence?

[03:42:35.0000] <zcorpan>
ok so it's 0.0017% of the pages having a stylesheet Link: (assuming the style sheet links were on different pages)

[03:43:59.0000] <annevk>
-- Simon "stats" Pieters

[03:44:53.0000] <hsivonen>
considering how many site-specific duplicate headers there were, counting things per-site rather than per-page probably makes Link even more rare

[03:46:29.0000] <annevk>
yeah for stylesheet it's only </styles/styles.css> or <../css/YoStyle.css>

[04:16:49.0000] <hsivonen>
/me finally got around to posting about UTF-32 strings in JS

[04:16:58.0000] <hsivonen>
(to Mozilla's development forum)

[04:23:24.0000] <annevk>
hsivonen: pointer?

[04:23:50.0000] <annevk>
hsivonen: note that I think the new proposal is not about using utf-32 anymore

[04:24:25.0000] <annevk>
hsivonen: http://norbertlindenberg.com/2012/03/ecmascript-supplementary-characters/ suggests an expanded String API so you can index it by code point too

[04:25:15.0000] <annevk>
found it

[04:25:24.0000] <annevk>
http://groups.google.com/group/mozilla.dev.platform/browse_thread/thread/b81179d718ed660d

[04:28:12.0000] <hsivonen>
annevk: well, if I'm late and they are going to stick to UTF-16, hooray

[04:33:23.0000] <annevk>
hsivonen: they seem to be very bad at updating wiki proposals

[04:33:40.0000] <annevk>
hsivonen: the wiki page you are pointing to for instance is last updated in 2011

[04:34:36.0000] <annevk>
I could have another mini-rant about TC39 not really being that great, but will save that for another time

[04:39:35.0000] <annevk>
zcorpan: btw, the other day I made http://html5.org/temp/spectable.html illustrating spec encodings versus how they're implemented in browsers combined with label information

[04:40:37.0000] <annevk>
zcorpan: I will probably use that to add extra labels to the specification; I no longer think that being conservative is a good idea here, though if only one or two implementations support a label it's probably not worth it

[04:46:09.0000] <zcorpan>
annevk: ok

[04:50:42.0000] <jgraham>
hsivonen: http://hoppipolla.co.uk/tests/document_readystate/ I started testcasing your demos based on what you said the spec ought to look like

[04:52:20.0000] <jgraham>
(I haven't got very far as you see)

[04:54:26.0000] <jgraham>
It's not always obvious what the most significant testable criterion should be

[04:55:05.0000] <jgraham>
Although I guess I could simplify the whole problem and just build an array of the expected log lines and compare that against a pre-determined array

[04:55:28.0000] <jgraham>
Actually that could be very quick and easy. Won't make for the best tests though

[04:57:09.0000] <hsivonen>
jgraham: nice. thanks

[05:34:23.0000] <zcorpan>
should http://simon.html5.org/specs/quirks-mode#the-:active-and-:hover-quirk apply to querySelector?

[05:34:56.0000] <zcorpan>
we made querySelector selectors case-insensitive in quirks mode, which suggests this quirk should probably apply as well

[05:35:07.0000] <zcorpan>
class selectors

[05:54:08.0000] <annevk>
via marcos: http://www.w3.org/community/groups/proposed/#opentag

[05:57:55.0000] <zcorpan>
TACG

[05:58:18.0000] <zcorpan>
up next: W3CG

[05:58:55.0000] <annevk>
oh, I was thinking "open tag" / "close tag" / "empty tag"

[05:59:26.0000] <kennyluck>
That paragraph (:active and :hover quirk) is hard to parse :(

[05:59:51.0000] <zcorpan>
kennyluck: yeah... suggestions?

[06:00:16.0000] <kennyluck>
zcorpan, make it into a list of conditions?

[06:00:30.0000] <kennyluck>
By the way, should "that are not part of an argument to a functional pseudo-class or pseudo-element" include ::before:hover in Selectors4?

[06:00:32.0000] <annevk>
the way we made Selectors case-insensitive was kind of annoying, as in some/all? impl case was preserved in the style sheet

[06:02:32.0000] <kennyluck>
never mind, I guess ::before never matches :any-link.

[06:06:28.0000] <zcorpan>
a functional pseudo-class or pseudo-element is like :not(:hover)

[06:10:16.0000] <zcorpan>
kennyluck: your name is KangHao Lu ?

[06:10:37.0000] <kennyluck>
Kang-Hao Lu.

[06:11:46.0000] <zcorpan>
ok fixed, thanks!

[06:11:59.0000] <zcorpan>
i hope it's equivalent :-)

[06:14:55.0000] <kennyluck>
I think it.

[06:19:15.0000] <kennyluck>
zcorpan, is it true that 'left', 'top' and 'bottom' support unitless value but not 'bottom'? That seems super insane.

[06:19:39.0000] <kennyluck>
unitless length, I mean.

[06:19:49.0000] <zcorpan>
it's true per spec :-)

[06:20:37.0000] <kennyluck>
s/and 'bottom'/and 'right'/

[06:20:57.0000] <zcorpan>
'bottom' fell under my cutoff in the data i looked at (see the spec's source)

[06:23:01.0000] <zcorpan>
(or http://simon.html5.org/sandbox/bookmarklets/reveal-comments )

[06:24:56.0000] <kennyluck>
zcorpan, found it. Thanks.

[07:26:15.0000] <zcorpan>
/me added a check for SVG fill="" in http://simon.html5.org/test/quirks-mode/js/hashless-hex-color.html

[07:38:21.0000] <cbright6062>
I have a question, if it isn't too much of a problem: I know in HTML5, you can use both XHTML formatting for self closing tags, and the now re-standard non-trailing slash closing on such tags.  I was curious though, talk of "compatibility with XHTML" aside, which would you say is truly the correct/recommended/best practice method?  Thanks.

[07:40:43.0000] <annevk>
cbright6062: it's community dependent, it's pretty much like asking whether attr='test' or attr="test" is better, or whether your attributes should be alphabetically ordered, or what kind of indentation you should use

[07:41:01.0000] <cbright6062>
hmm.

[07:41:01.0000] <Philip`>
cbright6062: Since trailing slashes are ignored, it's probably more confusing to include them - people will mistakenly think that e.g. <script src="foo.js"/> is a correct thing to do, because they'll associate self-closingness with the "/", instead of (correctly) associating it with the tag name

[07:41:33.0000] <cbright6062>
interesting.  I would've guessed there would be a standard for this sort of thing by this point.

[07:41:52.0000] <cbright6062>
of course, when it comes to the XML/XHTML formatting rules, it's always been a controversial world.

[07:42:25.0000] <Philip`>
cbright6062: There are - in fact, there are dozens of formatting standards you can pick from :-)

[07:42:38.0000] <gsnedders>
cbright6062: Look at placement of new lines v. brackets in C-like language — there's plenty of coding standards everywhere.

[07:43:11.0000] <cbright6062>
I've been adding the trailing slashes myself in the past.  Most of this though was because the guy who taught me HTML was an XHTML elitest. lol

[07:43:31.0000] <zcorpan>
USE ALL THE SLASHES, KTHXBYE

[07:45:31.0000] <cbright6062>
Regardless, thank you for your help.

[08:17:55.0000] <jgraham>
Oh, is the idea that <foo/> != <foo> what they mean by "Slash Fiction"?

[08:19:09.0000] <divya>
I AM OHing that jgraham

[09:17:54.0000] <Hixie>
hsivonen: the CG won't bind anyone to the CLA, but that's ok, because the CLA only binds people as far as their textual contributions go, and so far with very few exceptions i've written all the text

[09:18:15.0000] <Hixie>
hsivonen: so it means we can just get the people who have textual contributions to make sign the CLA, and otherwise not worry about it until FSA time.

[09:20:28.0000] <TabAtkins_>
Yeah, and when you actually publish you can get people to voluntarily make patent grants on the full document, I believe.

[09:40:48.0000] <kennyluck>
/me never understands how these work.

[10:40:32.0000] <dglazkov>
good morning, Whatwg!

[10:40:48.0000] <Ms2ger>
Bonsoir

[10:41:35.0000] <kennyluck>
good midnight.

[10:43:59.0000] <TabAtkins_>
merry christmas

[10:44:43.0000] <hsivonen>
Hixie: that leaves a pretty big hole for malicious idea submissions, but so does the REC Process

[10:45:44.0000] <hsivonen>
Hixie: while it's an imptovement, I think it doesn't solve thatmuch compared to the old WHATWG situation

[10:46:10.0000] <Ms2ger>
Sounds like the W3C, then

[11:06:52.0000] <hober>
MikeSmith: what's the purpose of public-whatwg-contrib as being distinct from the whatwg list?

[11:07:06.0000] <MikeSmith>
hober: dunno

[11:07:18.0000] <MikeSmith>
I thought it was required for the CLA in some way

[11:07:28.0000] <hober>
ahh, ok

[11:07:40.0000] <MikeSmith>
but don't take my word for that

[11:07:56.0000] <MikeSmith>
I'm not really read up on the CG process/policy stuff

[11:31:59.0000] <karlcow>
hober: http://www.w3.org/community/about/tool/#lists

[11:33:27.0000] <hober>
karlcow: thanks

[11:51:31.0000] <jwalden>
hmm, is whatwg.org down?  downforeveryone says yes

[11:52:08.0000] <Ms2ger>
Is for me

[11:52:51.0000] <MikeSmith>
kennyluck: do you know who pansb5⊙cc is?

[11:53:26.0000] <Ms2ger>
China Unicorn?

[11:53:48.0000] <WeirdAl>
jwalden: www.whatwg.org loads fine for me (

[11:54:20.0000] <jwalden>
hm, now it's loading again

[11:54:22.0000] <jwalden>
oddment

[11:55:41.0000] <kennyluck>
MikeSmith, I only heard of his name from Chen Bo. My guess is that he quitted China Unicom.

[11:56:07.0000] <MikeSmith>
kennyluck: think it's OK if I remove his address from the ig list?

[11:56:45.0000] <kennyluck>
MikeSmith, yes. He never posts to the list and it's only causing us trouble.

[11:56:51.0000] <MikeSmith>
yeah

[11:57:03.0000] <MikeSmith>
saw a message from foolip about it

[11:57:25.0000] <MikeSmith>
oh

[11:57:37.0000] <MikeSmith>
not showing up in the subscriber list no more

[11:57:43.0000] <MikeSmith>
so maybe somebody else removed it

[11:58:22.0000] <kennyluck>
MikeSmith, I sent a mail to sysreq⊙wo I thought they asked you to handle this.

[11:58:58.0000] <kennyluck>
Did they remove him? Or he just removes himself from the list?

[11:59:21.0000] <MikeSmith>
oh, it seems he's in the user db

[11:59:28.0000] <MikeSmith>
will remove him there

[11:59:43.0000] <kennyluck>
MikeSmith, thanks!

[13:18:01.0000] <annevk>
hsivonen: it does

[13:19:26.0000] <annevk>
hsivonen: FSA gives companies the ability to say they will not put any restrictions in place on implementing the specification (i.e. declare it RF from their point of view); the expectation is that at least some will do so

[13:19:33.0000] <Hixie>
hsivonen: given that i take ideas from everyone including random blog posts, i don't see how to avoid the risk of "malicious idea submissions".

[13:19:37.0000] <annevk>
hsivonen: we'll have to find out whether it actually happens in practice

[13:20:45.0000] <Hixie>
hsivonen: (it turns the whatwg patent situation into a situation better than the htmlwg situation, so i think it's a pretty big improvement)

[13:36:07.0000] <Hixie>
TabAtkins_: do you know if feedback to css is tracked anywhere? (i.e. is there any way to know the status of http://lists.w3.org/Archives/Public/www-style/2012Apr/0572.html ?)

[13:36:39.0000] <TabAtkins_>
Depends on the spec - tracking is at the discretion of the editor.

[13:36:46.0000] <TabAtkins_>
In this case, that's fantasai.

[13:36:53.0000] <TabAtkins_>
who happens to be sitting at my desk with me today.

[13:37:01.0000] <TabAtkins_>
(But is away momentarily.)

[13:39:33.0000] <Hixie>
roger

[13:39:38.0000] <Hixie>
let me know when she's back :-)

[13:39:59.0000] <TabAtkins_>
she's back.

[13:41:01.0000] <Hixie>
ask her what the state of my e-mail is :-)

[13:41:19.0000] <annevk>
did anyone raise the fullscreen extensions on www-style btw?

[13:42:42.0000] <Hixie>
i thought tantek was going to

[13:42:48.0000] <Hixie>
since he's still a csswg member (right?)

[13:42:56.0000] <TabAtkins_>
It's added to Issue 241 in the tracker for css4-text

[13:42:56.0000] <Hixie>
and he's an editor of the fullscreen spec

[13:43:09.0000] <TabAtkins_>
tantek is a member. I don't think anyone has yet.

[13:43:19.0000] <Hixie>
TabAtkins_: k thanks. i don't suppose there's an ETA for when browsers might be implementing anything that results from that issue...?

[13:43:29.0000] <TabAtkins_>
Nope.

[13:43:31.0000] <Hixie>
k

[13:43:53.0000] <Hixie>
i'll just make it a requirement in vtt for now like the emergency wrapping, rather than invent a new keyword or something

[13:44:03.0000] <TabAtkins_>
Sure.

[13:44:10.0000] <Hixie>
thanks

[13:44:58.0000] <annevk>
tantek has not edited the fullscreen spec though he did supply microformat markup for the author data and did some politics around it

[13:46:28.0000] <fantasai>
hixie: I won't be working on it until writing modes and css3-text hit CR. I would like for that to be soon, but that depends on things outside my control...

[13:46:48.0000] <fantasai>
hixie: wrt when I'd work on it after that, depends on the interest from implementers in something like that

[13:46:57.0000] <Hixie>
k

[13:47:59.0000] <Hixie>
do we have a term that refers to the set of lines resulting from line-wrapping something that in the original tree is one "line"?

[13:48:17.0000] <Hixie>
e.g. in <pre>foo<br>bar bar bar<br>baz</pre> wrapped with width:0, the string "bar bar bar"

[13:48:17.0000] <annevk>
[22:49:17.704] TypeError: Image is not a constructor wtf Gecko

[13:48:18.0000] <fantasai>
hm, I don't think so

[13:48:34.0000] <fantasai>
I think I just describe it as a consecutive run without forced line breaks or something like that

[13:48:38.0000] <fantasai>
/me checks

[13:48:39.0000] <Hixie>
k

[13:50:01.0000] <fantasai>
yeah, don't seem to have a term for it

[13:50:28.0000] <fantasai>
if you've got a suggestion, I can try to incorporate one into the text...

[13:50:36.0000] <Hixie>
consecutive works

[13:50:44.0000] <fantasai>
consecutive what?

[13:50:54.0000] <fantasai>
/me didn't really need the term, so doesn't have one

[13:51:18.0000] <Hixie>
consecutive bla bla between bla bla

[13:51:32.0000] <Hixie>
i'll paste my resulting text in a second for comment

[13:51:39.0000] <fantasai>
ok

[13:51:42.0000] <fantasai>
/me still has no idea what you mean

[13:52:16.0000] <fantasai>
most of the spec right now just talks about the first line or last line of the set you're talking about

[13:52:52.0000] <fantasai>
or the "first formatted line", which is something different...

[13:54:16.0000] <Hixie>
is there a term for "explicit line break that the white-space property honours"?

[13:54:37.0000] <Hixie>
"preserved newlines" i guess

[13:54:38.0000] <fantasai>
we call it a forced line break

[13:55:07.0000] <Hixie>
is that do you have a url to that definition?

[13:55:44.0000] <fantasai>
best one I've got is file:///home/fantasai/w3c/csswg/css3-text/Overview.html#white-space-collapsing

[13:55:47.0000] <fantasai>
er

[13:56:06.0000] <fantasai>
http://www.w3.org/TR/css3-text/#white-space-collapsing

[13:56:20.0000] <fantasai>
But I should link up that term.

[13:56:29.0000] <fantasai>
and get you a better link

[13:56:36.0000] <fantasai>
/me adds this to the to-do list

[13:57:01.0000] <Hixie>
i recommend using "newlines" like CSS2

[13:57:12.0000] <Hixie>
so that we don't get terminology drift

[13:58:02.0000] <Hixie>
ok here's the text i'm currently looking at (not sure i like it, but review welcome while i try to polish it more):

[13:58:05.0000] <Hixie>
         <li>Regardless of the value of the 'white-space' property,

[13:58:08.0000] <Hixie>
         any line breaks inserted by the user agent for the purposes

[13:58:10.0000] <Hixie>
         of line wrapping must be placed so as to minimise &Delta;

[13:58:13.0000] <Hixie>
         across each run of consecutive lines between preserved

[13:58:15.0000] <Hixie>
         newlines in the source. &Delta; for a set of lines is defined

[13:58:18.0000] <Hixie>
         as the sum over each line of the absolute of the difference

[13:58:20.0000] <Hixie>
         between the line's length and the mean line length of the

[13:58:23.0000] <Hixie>
         set.</li>

[13:59:44.0000] <fantasai>
I'd suggest s/preserved newlines in the source/forced line breaks/

[14:00:04.0000] <fantasai>
you can have breaks inserted by generated content, for example, so it's not really in the source.

[14:00:24.0000] <Hixie>
there's no generated content in vtt, since you can't stack pseudos

[14:00:29.0000] <fantasai>
/me rewrote the whole section on white space several times trying to get it all coherent

[14:00:32.0000] <fantasai>
ok

[14:01:29.0000] <fantasai>
I think what you're requiring is a bit more stringent than what Glenn Maynard was requesting

[14:02:01.0000] <fantasai>
or looser

[14:02:01.0000] <fantasai>
hm

[14:02:36.0000] <fantasai>
but

[14:02:50.0000] <fantasai>
basically, I think what he was suggesting was to narrow the containing block width

[14:03:05.0000] <fantasai>
until the last line came as close to filling the containing block without overflowing as possible

[14:03:10.0000] <fantasai>
and that would be sufficient

[14:03:13.0000] <fantasai>
even though it's not optimal

[14:03:22.0000] <fantasai>
for your definition, you'd also have to consider all the other lines and how they wrapped

[14:03:30.0000] <fantasai>
you can't just use a greedy line breaking algorithm

[14:03:40.0000] <fantasai>
you really would have to balance all the lines

[14:03:44.0000] <Hixie>
that's the idea, yes

[14:03:54.0000] <fantasai>
that's the ideal :)

[14:04:08.0000] <fantasai>
but it's probably not necessary to go that far

[14:04:24.0000] <Hixie>
unless there's a reason to avoid doing the ideal, by definition, we should do the ideal...

[14:04:29.0000] <fantasai>
performance

[14:04:33.0000] <tantek>
/me scrolls up

[14:05:25.0000] <tantek>
No I haven't edited the spec since it got checked into w3c hg. I edited the fullscreen spec back when it was on the Mozilla wiki.

[14:05:49.0000] <fantasai>
/me also suspects implementation complexity counts here

[14:06:05.0000] <fantasai>
what Glenn suggests can be done without changing how line breaking is implemented

[14:06:06.0000] <tantek>
/me still hasn't successfully gotten W3C/CSS hg setup working. Last tried during the Paris f2f, got stuck, documented the problems on the CSSWG wiki hg page, and hasn't had time for wrestling with stupid IT tools since.

[14:06:25.0000] <fantasai>
just by implementing a separate balancing step that does a binary balancing search, like multi-col

[14:06:38.0000] <Hixie>
unless someone can demonstrate that trying to balance the lengths of two lines is too expensive, i don't buy "performance" as a reason

[14:06:45.0000] <tantek>
annevk, hixie, I can raise the fullscreen CSS feature on www-style if you haven't already done so. Happy to kick that off.

[14:07:00.0000] <fantasai>
Hixie: two lines is fine

[14:07:08.0000] <fantasai>
Hixie: It's when you have 200 that it gets to be an issue...

[14:07:19.0000] <Hixie>
tantek: i'm happy for it to just be in teh fullscreen spec, personally :-)

[14:07:28.0000] <Hixie>
tantek: so anne's your man on that

[14:07:40.0000] <Hixie>
fantasai: if someone tries to make a 200-line caption, they'll have bigger problems

[14:07:44.0000] <tantek>
Hixie, it will be just in the fullscreen spec.

[14:07:56.0000] <fantasai>
Hixie: fair enough :) It's a problem for defining a CSS property, though

[14:08:20.0000] <Hixie>
oh sure

[14:08:33.0000] <tantek>
WebApps WG put fullscreen in their charter as well, and wanted to take it over, however I proposed (and CSSWG agreed) that it should be a joint WG effort, and given we have an editor in each group, we're all set.

[14:08:47.0000] <annevk>
tantek: the "top layer" concept should really be in whatever CSS spec ends up defining boxes properly, but if CSS is not going to do that soon it might as well be in fullscreen

[14:09:14.0000] <tantek>
annevk - we should define the "top layer" concept in Fullscreen in such a way that Dialog can reference it

[14:09:15.0000] <annevk>
tantek: I'm not sure the process allows for editors to be in only one of the groups

[14:09:23.0000] <annevk>
tantek: that's already done

[14:09:26.0000] <tantek>
great

[14:09:49.0000] <tantek>
annevk - I don't know of any process requirement for both editors to be in both groups, so I'm not worried.

[14:10:04.0000] <annevk>
mkay, I don't care much for the politics

[14:11:49.0000] <Hixie>
man i love having the spec be autogenerated from the CLDR and MathML Unicode data files

[14:12:01.0000] <Hixie>
every now and then when i regen the spec i get a huge diff that i didn't write that makes it more up to date. :-D

[14:13:58.0000] <tantek>
annevk - I'll try to minimize your exposure to the politics.

[14:14:44.0000] <fantasai>
/me goes back to the flexbox algo and notes this will require all available stack space

[14:15:02.0000] <fantasai>
/me will look at IRC later

[14:15:23.0000] <tantek>
it's the least I can do since you've been dealing with the hg edits

[14:18:19.0000] <annevk>
Hixie: the only problem I guess is that such changes are hidden from the tracker

[14:18:35.0000] <Hixie>
true

[14:19:08.0000] <annevk>
and entities changing would be quite shocking I think without prior coordination

[14:19:14.0000] <annevk>
dunno about the :lang experiment

[14:22:15.0000] <Hixie>
speaking of which

[14:22:21.0000] <Hixie>
/me adds new "entities"

[14:23:17.0000] <annevk>
Hixie: to WebVTT?

[14:23:23.0000] <Hixie>
yeah :-)

[14:23:28.0000] <Hixie>
&lrm; and &rlm;

[14:23:47.0000] <annevk>
is that bidi? didn't those guys prefer markup?

[14:25:14.0000] <Hixie>
that is markup

[14:26:33.0000] <annevk>
meant an element

[14:30:07.0000] <Hixie>
dunno how lrm/rlm would work as an element, unless you mean something like the dir="" attribute

[14:30:18.0000] <Hixie>
but that seems more complicated to me than just a mark

[14:32:26.0000] <annevk>
fair enough

[14:32:29.0000] <annevk>
reminds me of http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-July/012235.html

[14:42:49.0000] <Hixie>
anyone know why zcorpan wanted this? http://www.w3.org/mid/op.v7igmeskidj3kv⊙sl

[14:44:15.0000] <annevk>
is that how some Date thing serializes maybe?

[14:44:39.0000] <Hixie>
oh, no, i see

[14:44:48.0000] <Hixie>
he wants it to say whether it should be 002 or 02 or 0002 etc

[14:53:09.0000] <annevk>
http://lists.w3.org/Archives/Public/public-i18n-core/2012AprJun/0027.html Norbert Lindenberg seems a little less ambitious than me

[14:53:47.0000] <annevk>
-> tomorrow

[15:13:01.0000] <fantasai>
annevk: yeah, they prefer markup, but an exception is made for RLM and LRM since there wasn't any markup that could handle the cases those solved

[15:13:07.0000] <fantasai>
annevk: most of them are now solved by <bdi> though

[15:15:20.0000] <tantek>
is there an <ibd> alias for the <bdi> element for those that read right to left?

[15:16:03.0000] <tantek>
btw - anybody here make it to Lyon for WWW2012? http://www2012.wwwconference.org/

[15:27:21.0000] <hober>
tantek: annevk: let me know once fullscreen has the top layer stuff defined

[15:27:31.0000] <hober>
tantek: annevk: so i can open a webkit but pointing at it :)

[15:28:01.0000] <tantek>
we just did a security review of Mozilla's Fullscreen implementation yesterday btw

[15:30:01.0000] <annevk>
hober: a long time ago?

[15:30:18.0000] <annevk>
hober: it was defined one or two days after it was proposed

[15:31:28.0000] <tantek>
annevk - are there URLs to specific versions of stuff on W3C hg?

[15:31:39.0000] <tantek>
e.g. on the W3C wiki, I can link to specific version of a wiki page

[15:32:44.0000] <annevk>
just replace tip by an id

[15:33:11.0000] <annevk>
but I'd recommend against doing that

[15:35:03.0000] <Velmont>
tipitappity

[15:35:09.0000] <hober>
annevk: oh, great

[15:35:12.0000] <hober>
/me goes to file that bug

[15:35:42.0000] <annevk>
hober: might want to check first

[15:37:14.0000] <annevk>
hober: I thought there was a bug, but per my records there isn't

[15:37:23.0000] <annevk>
guess just Gecko has one

[15:38:17.0000] <annevk>
there is this http://trac.webkit.org/changeset/111028 but that does not appear to be about the CSS changes

[15:38:21.0000] <zewt>
hooooly shit

[15:38:42.0000] <zewt>
i just managed to get ff to open a file picker loop from JS, which nearly made me have to reboot my machine, since every file picker stole focus, preventing me from killing FF

[15:38:49.0000] <zewt>
wonder if that's fixed; i'm a bit out of date

[15:38:56.0000] <annevk>
-> sleepytime

[15:38:59.0000] <annevk>
nn

[15:39:04.0000] <zewt>
later

[16:30:57.0000] <shepazu>
Hixie: okay if I push the button to make you chair of WHATCG? right now, it's vacant

[16:34:50.0000] <Velmont>
Do we have to call it WHATCG? :(

[16:35:08.0000] <TabAtkins_>
shepazu: That was the intention all along, so yes.

[16:35:20.0000] <shepazu>
Velmont: it's still WHATWG, the WHATCG is just a particular mechanism

[16:36:00.0000] <shepazu>
TabAtkins_: ok, thanks, done

[16:36:18.0000] <Velmont>
shepazu :-)

[16:36:25.0000] <Hixie>
shepazu: what difference does it make?

[16:36:31.0000] <shepazu>
/me gets nervous when a group doesn't have a chair, because any yahoo can make themself chair

[16:37:26.0000] <shepazu>
Hixie: honestly, I'm not sure :)

[16:37:44.0000] <Hixie>
i wouldn't worry about it then :-)

[16:37:52.0000] <shepazu>
I think the chair does have some oversight abilities

[16:38:12.0000] <Hixie>
well someone made me a chair

[16:38:17.0000] <shepazu>
Hixie: too late :) you can always change the chair if you want

[16:38:38.0000] <Hixie>
ideally i'd like it to not have a chair since the whatwg doesn't have a chair

[16:38:40.0000] <Hixie>
/me shrugs

[16:39:05.0000] <Hixie>
i suppose i could make everyone a chair

[16:39:10.0000] <shepazu>
uh

[16:39:24.0000] <shepazu>
yeah, you could do that

[16:39:47.0000] <shepazu>
but is there anyone who doesn't think you're the chair of the WHATWG?

[16:39:50.0000] <zewt>
is that like asking to see the manager at best buy?

[16:39:53.0000] <zewt>
surprise, everyone's a manager

[16:40:09.0000] <Hixie>
the whatwg doesn't even have the concept of "chairman"

[16:40:41.0000] <shepazu>
I guess it doesn't need one, everyone knows you're in charge :)

[16:40:50.0000] <wilhelm>
Chairman Meow?

[16:40:52.0000] <Hixie>
there's just members and contributors, according to the charter, and in practice there's also editor and spokeperson

[16:41:04.0000] <Hixie>
editors, i should say

[16:45:57.0000] <zewt>
if anyone's bored and feels like filing a bug, http://zewt.org/~glenn/don%27t%20click%20this.html clicking the file input box in windows endlessly opens file pickers (which kills firefox and was very hard to get out of without rebooting, since each file picker steals focus)

[16:46:10.0000] <zewt>
(don't have the energy to deal with firefox's tracker these days)


2012-04-25
[17:02:52.0000] <eseidel>
TabAtkins_, Hixie: it's unclear to me if seamless (http://www.whatwg.org/specs/web-apps/current-work/#attr-iframe-seamless) is supposed to cause the parent document's stylesheets to show up in the child document's "document.styleSheets" accessor: http://dev.w3.org/csswg/cssom/#document-style-sheets

[17:03:07.0000] <eseidel>
Not having them appear there, could be a bit of implementation work... :)

[17:03:11.0000] <eseidel>
so I'm tempted to have them appear

[17:03:24.0000] <eseidel>
but I wanted to make sure there was no objection before I go down that path

[17:03:31.0000] <eseidel>
no (big) objection :)

[17:09:09.0000] <eseidel>
TabAtkins_, Hixie: actually, on second thought.  I'm not sure which approach makes more sense in webkit.  Will investigate and get bakc to you

[17:12:18.0000] <TabAtkins_>
eseidel: I *think* they're not supposed to show up.  The rules just get inserted into the cascade.

[17:52:08.0000] <Hixie>
eseidel: they're not supposed to currently, but i don't feel strongly one way or the other, so please don't hesitate to mail the list suggesting that the spec be clarified one way or the other and we'll see what people think

[17:52:22.0000] <eseidel>
Hixie: k

[17:53:09.0000] <eseidel>
Hixie: my current patch does not make them appear.

[17:55:34.0000] <Hixie>
not making appear seems safest long-term

[17:56:02.0000] <othermaciej>
yay I'm actually in whatcg now

[17:57:13.0000] <Hixie>
i'm amused at all the people wanting to join the cg

[17:57:33.0000] <nessy>
Hixie: I see you've started going through WebVTT stuff! Cool!

[17:57:36.0000] <Hixie>
since it makes no difference currently :-)

[17:57:45.0000] <Hixie>
nessy: yeah, finally got to that on my "urgent todo" list

[17:57:58.0000] <Hixie>
nessy: i half think i should find someone to take over that spec since it took me so long, i feel bad

[17:58:46.0000] <nessy>
Hixie: we got through a lot of discussion in that time and basically I have collected all the feedback in the bugs

[17:59:01.0000] <Hixie>
cool

[17:59:15.0000] <Hixie>
i noticed some of them

[17:59:15.0000] <nessy>
Hixie: you might walk through it bug by bug (just search for WebVTT in the W3C bug tracker) then you shouldn't miss anything

[17:59:34.0000] <Hixie>
if they're all assigned to me and open then i won't miss them

[18:00:00.0000] <nessy>
Hixie: they are, but if you go through bugs by their age, you'll miss the newer ones ;-)

[18:00:41.0000] <nessy>
Hixie: there's "only" 23 of them

[18:00:42.0000] <Hixie>
my plan is to work on them for a while then go back to FIFO handling, so i expect i won't get through everything right away

[18:00:45.0000] <Hixie>
k

[18:01:08.0000] <nessy>
and some of them are even only for <track>, not WebVTT specific

[18:01:33.0000] <nessy>
no worries - do what you can

[18:01:38.0000] <othermaciej>
Hixie: it makes a difference in that anyone joining has to agree to the CLA

[18:01:53.0000] <othermaciej>
though I'm not sure if "contribution" only applies to text or also ideas

[18:02:01.0000] <nessy>
I assume you're not so interested in, e.g. the specs for the metadata header or so - if you want to flick some over to me to write patches for the spec, I could give it a try

[18:03:30.0000] <Hixie>
othermaciej: as i understand it, a "contribution" is text you send to the public-something-contrib list

[18:03:37.0000] <Hixie>
othermaciej: which i expect will only rarely be used for us

[18:03:50.0000] <Hixie>
othermaciej: maybe e.g. if hober writes a chunk of text that i import verbatim

[18:03:52.0000] <nessy>
Hixie: I do like keeping the style of the spec consistent, so would prefer if your editing continued, may with some assistance though

[18:03:55.0000] <Hixie>
othermaciej: but that's happened almost never so far

[18:04:03.0000] <othermaciej>
so even sending proposed text to the non-contrib list doesn't count?

[18:04:45.0000] <Hixie>
nessy: i'm not planning on quitting, just a bit swamped

[18:05:08.0000] <Hixie>
othermaciej: ianal, but that's my understanding. in practice i would tell people to send any to the contrib list. not that that's ever come up before.

[18:06:14.0000] <nessy>
Hixie: good! (/me wipes off sweat) ;-)

[18:06:37.0000] <nessy>
Hixie, othermaciej: the FAQ says "Each group may establish its own mechanisms for recording contributions.."

[18:07:25.0000] <nessy>
Hixie, othermaciej: the problem is about "recording contributions" that seems to require some formal list of what ppl contributed and how it was integrated into the spec

[18:08:00.0000] <Hixie>
othermaciej: btw since we don't really have "chairs" in the whatwg i thought maybe i should assign all the whatwg "members" (the ones on the private list) as "chairs" in the cg. as far as i can tell it just means you're an admin on the wordpress side which doesn't really mean anything.

[18:08:16.0000] <nessy>
Hixie, othermaciej: in particular this part of the FAQ "When participants entrust the Editor with the job of recording contributed material, the group must be diligent about recording the true source and date of the Contribution when the Editor is merely transcribing the Contribution."

[18:08:43.0000] <othermaciej>
Hixie: I think it's up to you - I imagine there won't be much actual active management of the CG required in any case

[18:11:11.0000] <nessy>
In theory: "The participants of the Group choose their Chair(s)." http://www.w3.org/community/about/agreements/

[18:15:04.0000] <nessy>
In practice: whatever you suggest will be ok - I like the idea of the original WHATWG members

[23:30:12.0000] <zcorpan>
"iso-8859-8 visual" and "logical" are labels for the same encoding?

[23:30:42.0000] <zcorpan>
does hebrew use the same characters for visual and logical?

[23:32:34.0000] <zcorpan>
annevk: what about labels for the other encodings?

[00:00:01.0000] <annevk>
zcorpan: I think that was from when direction details were embedded in the encoding label

[00:00:40.0000] <annevk>
zcorpan: I've been somewhat more liberal with multi-byte encodings, but I think either we should do more content study or just check browsers manually

[00:00:47.0000] <annevk>
zcorpan: http://wiki.whatwg.org/wiki/Web_Encodings has some data

[00:01:25.0000] <annevk>
zcorpan: one area that is currently missing labels is utf-16, because of the new default (le instead of be) browsers have some mismatching going on

[00:26:19.0000] <annevk>
still not much wiser about isTrusted

[00:26:38.0000] <annevk>
apart from that it might be needed for the shadow DOM, of which implementations details are less than clear

[00:56:49.0000] <zcorpan>
annevk: http://simon.html5.org/dump/charsets/charsets-count.txt http://simon.html5.org/dump/charsets/stevef-charsets-count.txt

[00:58:05.0000] <annevk>
zcorpan: how was that created?

[00:58:24.0000] <zcorpan>
see http://simon.html5.org/dump/charsets/

[00:58:59.0000] <zcorpan>
the stevef dataset is http://www.paciellogroup.com/blog/2012/04/html5-accessibility-chops-data-for-the-masses/

[00:59:11.0000] <annevk>
cool

[00:59:56.0000] <freddyb>
hi

[01:00:33.0000] <freddyb>
why is it, that the upcoming domcrypt is so little bold?

[01:01:09.0000] <Ms2ger>
Because it's italic already

[01:01:12.0000] <zcorpan>
nice to see utf-8 at the top of both lists

[01:01:53.0000] <annevk>
surprising that gbk is so dominant

[01:02:06.0000] <annevk>
and actually a few pages labeled gb18030

[01:05:11.0000] <zcorpan>
keep in mind that pages may be using multiple labels, so even if a label shows up here, it doesn't necessarily mean that there are the same number of pages actually using that as their first label

[01:07:20.0000] <zcorpan>
also, i forgot ";" in the regexp

[01:07:59.0000] <freddyb>
Ms2ger: no, seriously. why does it provide random numbers but no other neat crypto features? is it planned to provide this before release or will people have to wait for another version?

[01:08:47.0000] <Ms2ger>
Oh, what's specced on https://dvcs.w3.org/hg/domcrypt/raw-file/tip/Overview.html ?

[01:09:37.0000] <freddyb>
yes, sorry. wasn't that clear? ;P

[01:09:55.0000] <annevk>
freddyb: features evolve incrementally

[01:09:58.0000] <Ms2ger>
That's just because it's the only part that had a spec

[01:10:02.0000] <annevk>
freddyb: there's not really such a thing as "release"

[01:10:06.0000] <Ms2ger>
So I just put that in the spec

[01:10:10.0000] <freddyb>
I mean, I know it says work in progress. but I was wondering what to expect :)

[01:10:16.0000] <Ms2ger>
While waiting for the editors to start working on it

[01:10:24.0000] <freddyb>
I see

[01:11:24.0000] <Ms2ger>
I think the rest had something of a description at https://wiki.mozilla.org/Privacy/Features/DOMCryptAPISpec/Latest

[01:11:28.0000] <Ms2ger>
has*

[01:12:18.0000] <zcorpan>
annevk: fixed ";"

[01:12:33.0000] <freddyb>
Aah! thanks, Ms2ger

[01:12:49.0000] <Ms2ger>
Np

[01:13:46.0000] <zcorpan>
charset=iso-8859-1 is interesting, wonder if we should make the encoding sniffing algorithm pick it up

[01:14:29.0000] <zcorpan>
i.e. <meta http-equiv=content-type content="text/html; charset=charset=iso-8859-1">

[01:15:08.0000] <Ms2ger>
windows-1252, you mean?

[01:15:20.0000] <Ms2ger>
(Did I get that number right?)

[01:15:55.0000] <zcorpan>
i mean "charset=iso-8859-1" turned up as a used encoding label

[01:16:01.0000] <Ms2ger>
I did, now I feel really bad

[01:16:11.0000] <Ms2ger>
Oh

[01:16:28.0000] <Ms2ger>
Still, you mean charset=charset=windows-1252? :)

[01:17:06.0000] <zcorpan>
that didn't turn up :-P

[01:22:24.0000] <foolip>
fantasai, we (Opera) are interested in implementing balanced line wrapping for WebVTT as the default, is there anything we can do to help speed up the spec process?

[01:50:02.0000] <annevk>
MikeSmith: http://www.w3.org/community/whatwg/ "Contact Group" still points to public-whatwg

[01:51:18.0000] <annevk>
windows-1234 cute

[01:51:49.0000] <annevk>
euc-jup hahaha

[01:55:41.0000] <zcorpan>
annevk: the script misses labels where the grep output a match that spans several lines... not sure how to fix that

[01:56:49.0000] <annevk>
we should get someone from Google to do some crawling

[01:59:15.0000] <annevk>
okay, I think I'll add all the labels where len(browsers) > 1

[01:59:27.0000] <annevk>
based on spectable.html

[02:00:51.0000] <annevk>
and counting Safar/Chrome as 1

[02:07:02.0000] <Ms2ger>
Sounds good

[02:09:19.0000] <annevk>
I wonder how "OOnFIC: iso-8859-8 visual" happened

[02:09:35.0000] <annevk>
"iso-8859-8 visual" is not a label in Opera at least, though visual is

[02:12:54.0000] <annevk>
seems Steve Faulkner has been carefully redacting his past tweets to make him seem less silly

[02:16:29.0000] <annevk>
okay so "iso-8859-8 visual" was an input label

[02:17:28.0000] <annevk>
and the PHP does header("Content-Type:text/plain;charset=".$_GET["label"]);

[02:18:27.0000] <annevk>
which seems to indicate label sniffing in HTTP might be somewhat interesting in all browsers but Safari?

[02:18:38.0000] <jgraham>
annevk: I am sad to say I can't quite bring myself to suggest character encoding names as the naming scheme for the new Opera meeting rooms

[02:18:59.0000] <annevk>
you should use label names

[02:19:01.0000] <annevk>
they're better

[02:19:04.0000] <annevk>
x-x-big5

[02:19:10.0000] <annevk>
because one x just wasn't enough

[02:19:35.0000] <jgraham>
"legacy character encodings, like meetings, are a fact of life. No one likes them but we can't get rid of them" - see I even have a good justification

[02:19:35.0000] <annevk>
or have visual and logical but since they're the same you never know which room to go to

[02:22:45.0000] <AryehGregor>
It amuses me to no end when I find stuff like this on a W3C webpage:

[02:22:45.0000] <AryehGregor>
<body class="page page-id-1225 page-child parent-pageid-79 page-template page-template-threecolumn-page-php logged-in admin-bar clearfix">

[02:22:45.0000] <AryehGregor>
<!--[if lte IE 8 ]>

[02:22:45.0000] <AryehGregor>
<noscript><strong>JavaScript is required for this website to be displayed correctly. Please enable JavaScript before continuing...</strong></noscript>

[02:22:46.0000] <AryehGregor>
<![endif]-->

[02:26:24.0000] <AryehGregor>
It's probably from Wordpress or something, to be fair.

[02:43:02.0000] <annevk>
I should probably run the single-byte test again with an updated label set

[02:48:11.0000] <zcorpan>
text/html; charset= charset= charset=iso-8859-1

[02:49:26.0000] <zcorpan>
http://simon.html5.org/dump/charsets/charset-charsets.txt

[02:49:43.0000] <annevk>
hey Steve Faulkner, thanks for reading along, first you post https://twitter.com/stevefaulkner/status/194715165059592193 then you post your so-called "optimistic tweets" where you apparently suddenly changed your mind without any reason whatsoever (about what I've no idea... what would be the better situation here?)

[02:50:24.0000] <AryehGregor>
So apparently my editing draft is a Community Group Report now!  Yay!  http://www.w3.org/community/reports/#editing

[02:51:12.0000] <annevk>
zcorpan: I guess heuristics will take care of those

[02:51:43.0000] <zcorpan>
annevk: what heuristics?

[02:51:50.0000] <annevk>
AryehGregor: I guess now we should see what companies sign off

[02:52:01.0000] <AryehGregor>
annevk, no, this is just a draft, not a final specification.

[02:52:35.0000] <AryehGregor>
It wasn't actually linked from anywhere before, because the W3C hadn't finished all the machinery to support "official" draft publication in CGs.

[02:52:47.0000] <AryehGregor>
I just asked Ian about publishing a snapshot as a Final Specification.

[02:52:59.0000] <annevk>
AryehGregor: oh so the draft is continually edited?

[02:53:15.0000] <AryehGregor>
Yeah, look at the URL.

[02:53:17.0000] <annevk>
AryehGregor: I thought you had CLA snapshots and FSA snapshots

[02:53:21.0000] <annevk>
and an editor's draft

[02:53:22.0000] <annevk>
hmm

[02:53:28.0000] <AryehGregor>
Nope, CLA has no snapshots, thankfully.

[02:53:49.0000] <AryehGregor>
The publication form says that Draft links are allowed to change, only Final Specification links have to be static.

[02:54:00.0000] <AryehGregor>
So basically we have only ED and REC.

[02:54:09.0000] <AryehGregor>
And REC is only for patent-policy purposes if we want.

[02:54:13.0000] <AryehGregor>
With no technical requirements.

[02:54:17.0000] <AryehGregor>
Which is *exactly* what we want.

[02:54:29.0000] <AryehGregor>
Three cheers for the W3C!

[02:54:32.0000] <annevk>
well sort of

[02:54:34.0000] <zcorpan>
AryehGregor: having the w3c logo but the whatwg stylesheet looks....weird :-)

[02:54:48.0000] <annevk>
you don't get WG mandatory patent disclosures

[02:54:51.0000] <AryehGregor>
zcorpan, the publication requirements said I needed the W3C logo.  They didn't say it had to look pretty.  :)

[02:55:09.0000] <AryehGregor>
They expect to have their own stylesheets ready sometime or other, then I can use those.

[02:55:09.0000] <annevk>
but if companies sign off then it's nice

[02:56:05.0000] <AryehGregor>
annevk, yes, true, but what do we care?  We're tech people, not lawyers.  As long as the lawyers tell us we can use the spec, we can be happy.

[02:56:22.0000] <AryehGregor>
I guess it remains to be seen who signs off on the specs.

[02:56:39.0000] <AryehGregor>
Since CG membership doesn't require it.

[02:56:42.0000] <AryehGregor>
/me refreshes his memory

[02:56:55.0000] <annevk>
well my employer cares

[02:57:12.0000] <annevk>
but I guess we'll see

[02:57:57.0000] <AryehGregor>
There are also a lot fewer members in the Editing CG than in the HTMLWG, say.

[02:58:04.0000] <AryehGregor>
So even if all the members sign off, it's not a big deal.

[02:58:33.0000] <AryehGregor>
As big a deal.

[02:58:35.0000] <AryehGregor>
Oh well.

[03:00:52.0000] <AryehGregor>
Ian Jacobs seemed to think the patent license for CGs was good.  Apparently there were lots of lawyers involved, including from various key web companies.

[03:01:20.0000] <AryehGregor>
We'll see.

[03:49:34.0000] <smaug____>
hsivonen: did you send the email about readystate

[03:53:06.0000] <smaug>
hsivonen: any comments to http://lists.w3.org/Archives/Public/public-web-perf/2012Apr/0062.html ?

[04:14:32.0000] <annevk>
reply to i18n-core email: http://lists.w3.org/Archives/Public/public-i18n-core/2012AprJun/0029.html

[04:31:59.0000] <jgraham>
smaug____: You have to love 'Creating a test that calls out this discrepancy seems odd to me.  I think given that, I think we should remove the test from the suite.'

[04:32:12.0000] <jgraham>
Nothing like removing a test for demonstrating bugs

[04:33:06.0000] <zcorpan>
jgraham: where's that from?

[04:33:37.0000] <zcorpan>
oh

[04:34:37.0000] <jgraham>
It's a rather crappy test anyeay since it allows so much variation in behaviour

[04:35:07.0000] <smaug____>
performance wg is known to have plenty of buggy tests before reviewing

[07:30:05.0000] <hsivonen>
smaug____: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-April/035521.html

[07:30:31.0000] <smaug____>
hsivonen: thanks. Will read later today

[07:31:21.0000] <hsivonen>
smaug____: I guess that would be my response to http://lists.w3.org/Archives/Public/public-web-perf/2012Apr/0062.html Can you post a pointer to the list so that I don't need to subscribe?

[07:31:54.0000] <smaug____>
ok, I'll do that

[07:31:59.0000] <hsivonen>
thanks

[07:33:14.0000] <hsivonen>
who is writing Fake TAG?

[07:33:49.0000] <hsivonen>
Marcos seemed to be a proposer for TACG. Any correlation?

[08:03:06.0000] <hober>
fake tag is so awesome

[08:13:06.0000] <hsivonen>
"Neil Archstrong" has Marcos' photo in the comments as avatar...

[08:19:01.0000] <kennyluck>
FTAG

[08:20:38.0000] <gsnedders>
hsivonen: http://www.w3.org/mid/op.wc9s77zq4p7avi⊙ll if you hadn't seen it

[08:20:42.0000] <gsnedders>
(MO)

[08:22:55.0000] <hsivonen>
gsnedders: I hadn't seen that. thanks

[08:25:37.0000] <hsivonen>
I wonder why that message was Member-only

[08:25:56.0000] <Ms2ger>
Shitstorms?

[08:26:44.0000] <gsnedders>
Yeah, exactly.

[08:27:37.0000] <hsivonen>
I expect one anyway

[08:27:52.0000] <hsivonen>
including comments that lack "chair hat off"

[08:30:26.0000] <miketaylr>
funny how that ended up in a blog article

[08:32:42.0000] <jgraham>
It is times like this that I really appreciate the subtle nuances of communication afforded by twitter

[08:35:01.0000] <hsivonen>
jgraham: any particularly nuanced tweets?

[08:35:20.0000] <miketaylr>
heh

[08:36:07.0000] <miketaylr>
this one is my favorite so far, http://twitter.com/joshbroton/status/195166561806462976

[08:36:42.0000] <hsivonen>
:-(

[08:37:43.0000] <gsnedders>
The real fun on mobile is how long Android/iOS WebKit release-cycles are.

[08:37:47.0000] <hsivonen>
good thing OO.o developers weren't afraid to support microsoft.com XML namespaces

[08:38:05.0000] <gsnedders>
Android esp.

[08:38:27.0000] <zewt>
gsnedders: rather, the fact that there are no release cycles on android ...

[08:38:41.0000] <gsnedders>
zewt: Too often, yes :(

[08:38:45.0000] <zewt>
old browsers on many phones simply never being upgraded until the phone dies

[08:39:01.0000] <zewt>
the only possible saving grace being that phones don't last as long as pcs, heh

[08:39:01.0000] <gsnedders>
Also plenty of Android releases haven't done much to WebKit.

[08:39:14.0000] <gsnedders>
So even being up to date with Android doesn't help massively.

[08:39:32.0000] <gsnedders>
The time-to-market of WebKit ToT to shipping on an Android device is insane.

[08:40:14.0000] <zewt>
one of my biggest gripes with google is that, despite being a company based almost entirely on the web, they created a platform that out-IE's IE

[08:41:01.0000] <hsivonen>
Firefox and Opera to rescue

[08:41:05.0000] <hsivonen>
(as with IE)

[08:41:06.0000] <zewt>
that would be irresponsible from any company--but Google doing it boggles the mind

[08:47:24.0000] <gsnedders>
https://twitter.com/#!/patrick_h_lauke/status/195174823230586881 is cute

[08:47:31.0000] <hsivonen>
My favorite so far is https://twitter.com/#!/alexmuller/status/195170931205873665

[08:49:14.0000] <jgraham>
hsivonen: That's a joke, right?

[08:50:23.0000] <Philip`>
zewt: It also seems odd that they've released a whole new browser app (Chrome on Android) that competes with the default browser on their own platform

[08:50:49.0000] <hsivonen>
jgraham: twitter nuance is hard, but the next tweet suggests not

[08:52:04.0000] <miketaylr>
i'm still angry that the HTML5 parser transforms my markup. i wanted <i><b>THIS</i></b>.

[08:53:14.0000] <zewt>
Philip`: i'm less surprised at google being uncoordinated

[08:54:13.0000] <zewt>
i suppose that may be a vague attempt at fixing the damage (but as long as it's just an app in the market that people have to install manually, it probably can't do any more than third-party browsers)

[08:54:30.0000] <jgraham>
Isn't the plan to make Chrome the default from Android.next?

[08:54:33.0000] <Philip`>
(Also it's not very helpful that Chrome currently only works on a version of Android that 3% of users have)

[08:55:00.0000] <jgraham>
And then to have it autoupdate?

[08:55:03.0000] <zewt>
well, the real problem is that the browser can only be upgraded with a full OS upgrade, not with a market update like an app

[08:56:41.0000] <zewt>
jgraham: don't know anything about their plans, but ... hopefully :)

[08:57:18.0000] <jgraham>
Well I only know what I thought I had read

[08:57:27.0000] <jgraham>
So it's possible I imagined the whole thing

[08:57:32.0000] <zewt>
now I only know what I read on IRC about what someone else thought he had read

[08:58:56.0000] <Philip`>
https://developers.google.com/chrome/mobile/docs/faq seems quite vague, e.g. "Are you still working on the Android browser, or are you dropping support in favor of Chrome?" says "... We will continue to evaluate where it makes sense to harmonize our efforts ..." which is pretty meaningless

[08:59:40.0000] <zewt>
one of those sort of insulting answers that mean "we're not answering this, and we won't just say that we won't answer it"

[09:00:50.0000] <hsivonen>
I expect them to ship Chrome as a bundled app that updates independently of OS and leaving the other WebKit for apps to embed. Fun times for Dolphin HD.

[09:01:31.0000] <Philip`>
/me tried Chrome for about two minutes and then abandoned it because it doesn't automatically re-wrap text like Opera Mobile does so that it fits on the screen (which is hugely useful)

[09:02:24.0000] <zewt>
i've tried to make web apps work on android's browser, and it really, honestly did feel the same as making pages behave in ie6 (okay, maybe 7; it's not *that* broken)

[09:04:17.0000] <zewt>
got it working eventually, and it promptly broke in the next version, so I gave up

[09:11:28.0000] <hsivonen>
my attempts to advocate Opera-like wrapping for Firefox have failed

[09:11:49.0000] <hsivonen>
/me agrees that it's extremely useful

[09:30:05.0000] <Hixie>
hsivonen: wow (re that tweet)

[09:30:41.0000] <Hixie>
hsivonen: easier to say where we _didn't_ use that reason... it'd be a shorter list

[09:45:23.0000] <jgraham>
How have we ended up with people top-posting on public-webapps?

[09:45:37.0000] <jgraham>
Are google engineers all using outlook now or something?

[09:46:38.0000] <jgraham>
(this is not a theoretical complaint, I have actually lost track of what's been said in that thread)

[09:48:55.0000] <Hixie>
gmail encourages it

[09:48:57.0000] <Hixie>
drives me crazy

[09:49:29.0000] <zewt>
it's pretty depressing how bad people have become at mailing lists; not editing quotes at all has become common, which gives me migraines when i try to reply to anything

[09:49:53.0000] <zcorpan>
why isn't there a way to change gmail to use bottom-posting by default?

[09:50:37.0000] <zewt>
gmail's "quote masking" gives everyone really nasty habits; sometimes I'll try to reply to a mail, only to find that the actual text is nested between two gigantic blocks of quotes and I have to dig it out

[09:53:28.0000] <zewt>
zcorpan: what I really want (aside from the unreadable "new look" going away) is an option to simply ignore font colors and sizes

[10:36:59.0000] <jgraham>
Ms2ger: So how much would it break for you if testharness.js tried to notify opener windows about test status as well as parent windows?

[10:40:03.0000] <Ms2ger>
Nothing, I hope

[10:40:09.0000] <Hixie>
oh sweet kittens

[10:40:21.0000] <Hixie>
i get cc'ed every time someone joins the cg

[10:40:26.0000] <Hixie>
/me sets up a filter

[10:41:55.0000] <othermaciej>
you can't turn that off?

[10:42:35.0000] <Hixie>
not that i can see

[10:42:37.0000] <Hixie>
but doesn't matter

[10:42:39.0000] <Hixie>
filters are easy

[10:45:54.0000] <zcorpan>
jgraham: i've set up a virtualenv now. how do i install lxml and html5lib in it?

[10:46:07.0000] <zcorpan>
and anolis

[10:46:44.0000] <jgraham>
I guess anolis doesn't have a useful setup.py file

[10:47:35.0000] <jgraham>
Nope

[10:47:38.0000] <jgraham>
Something like

[10:47:42.0000] <jgraham>
pip install lxml

[10:48:08.0000] <jgraham>
pip install html5lib (unless you want the dvcs version, which is a little faster)

[10:48:31.0000] <jgraham>
pip install hg+https://bitbucket.org/ms2ger/anolis

[10:48:34.0000] <jgraham>
I think

[10:48:42.0000] <jgraham>
That's from memory though

[10:48:48.0000] <Ms2ger>
Some old anolis version is on pip

[10:48:56.0000] <Ms2ger>
I need to update it at some point

[10:49:07.0000] <jgraham>
You mean pypi

[10:50:06.0000] <Philip`>
Python developers ought to discover that there are consonants other than "p"

[10:50:39.0000] <jgraham>
zcorpan: (also, I assume you activated the virtualenv)

[10:51:14.0000] <Philip`>
(PyPI, PyPy, pip, pyip, ...)

[10:52:02.0000] <zcorpan>
jgraham: i hadn't :-)

[10:53:36.0000] <zcorpan>
ok this looks promising, now installing lxml

[10:58:49.0000] <zcorpan>
great success! i needed pip install simplejson also

[10:58:56.0000] <zcorpan>
thanks jgraham

[10:59:09.0000] <jgraham>
Oh, needing simplejson is silly

[10:59:15.0000] <jgraham>
That's in the stdlib

[10:59:40.0000] <jgraham>
Or, a json decoder is and I can't imagine that anolis cares too much about speed

[11:00:01.0000] <Ms2ger>
How old is your python?

[11:00:30.0000] <zcorpan>
$ python --version

[11:00:30.0000] <zcorpan>
Python 2.5.6

[11:00:45.0000] <zewt>
the json module in python has a native module anyway, so it's fast

[11:00:54.0000] <zewt>
yuck--at least get to 2.6

[11:01:14.0000] <zewt>
i always have trouble finding 2.7 modules in ubuntian for some reason, even in backports...

[11:11:04.0000] <annevk>
oh, I thought we would have announced the -webkit- thingy for a while now

[11:28:37.0000] <zcorpan>
how should i invoke anolis to make references work?

[11:29:26.0000] <annevk>
see the Makefile's checked in for various specs that use Anolis in that way

[11:30:30.0000] <Ms2ger>
--enable=xspecxref

[11:43:38.0000] <zcorpan>
yay

[11:45:13.0000] <zcorpan>
"CSS Syntax Module Level 3, Tab Atkins Jr.. W3C." hmm, maybe one of the dots should go

[11:48:27.0000] <Philip`>
"CSS Syntax Module Level 3, Tab Atkıns Jr.. W3C." - how about that dot?

[11:48:48.0000] <Ms2ger>
Philip`++

[11:50:16.0000] <Ms2ger>
TabAtkins_ just shouldn't have so silly a name :)

[11:53:02.0000] <zcorpan>
"CSS, Bert Bos, Tantek Çelik, Ian Hickson et al.. W3C." has the same thing, heh

[11:58:22.0000] <kennyluck>
hober, did you mistakenly send http://lists.w3.org/Archives/Public/www-archive/2012Apr/0061 without adding Steve in the "To:" list?

[11:59:57.0000] <Hixie>
hmm

[12:00:10.0000] <Hixie>
cues with end times before their start times

[12:00:16.0000] <Hixie>
what to do, what to do

[12:02:56.0000] <annevk>
Hixie: something tells me to just flip them

[12:03:08.0000] <Hixie>
hadn't considered that

[12:03:13.0000] <Hixie>
seems unlikely to be right though

[12:03:23.0000] <zewt>
better off just clamping them to zero time

[12:03:24.0000] <Hixie>
i mean it's probably a typo in one of the times, not the times backwards

[12:03:38.0000] <Hixie>
clamping the end time to the start time is an option

[12:03:39.0000] <zewt>
duration

[12:03:45.0000] <Hixie>
i was thinking of just dropping the cue altogether

[12:05:03.0000] <zewt>
i sort of wish vtt was start/duration instead of start/end

[12:05:19.0000] <zcorpan>
i think i'd drop them

[12:05:29.0000] <zcorpan>
we drop cues for less :-)

[12:05:38.0000] <Hixie>
yeah

[12:05:53.0000] <zewt>
probably doesn't make much difference either way except for metadata

[12:06:08.0000] <Hixie>
we don't drop them in the TextTrackCue constructor either

[12:06:34.0000] <zcorpan>
maybe that should throw

[12:08:23.0000] <zewt>
lot of arguments for that ctor ... might be better to have the optional args in a dictionary

[12:09:16.0000] <zewt>
startTime/endTime aren't readonly anymore, and it wouldn't really make sense to have assigning to those fail

[12:10:20.0000] <zcorpan>
the arguments could be dropped altogether for any properties that can be set

[12:10:41.0000] <zcorpan>
good point that it doesn't make sense to make assignments fail

[12:10:48.0000] <zewt>
well, they can all be set

[12:11:00.0000] <zcorpan>
very well then :-)

[12:11:41.0000] <Hixie>
i wonder if maybe i should just check all the algorithms to make sure they can handle negative durations, and then just let them be

[12:11:49.0000] <zcorpan>
i think i've filed a bug about the arguments for this ctor

[12:11:52.0000] <zewt>
sort of odd that id is first and required; in most cases it'll be empty, right?

[12:12:13.0000] <Hixie>
are there impls yet?

[12:12:22.0000] <Hixie>
we can definitely add an overloaded version with a dict

[12:12:27.0000] <Hixie>
if not replace the current one entirely

[12:12:28.0000] <zewt>
Hixie: if it's useless, that's just making implementors do useless testing

[12:12:28.0000] <zcorpan>
we have an impl but it's not shipped yet

[12:12:41.0000] <zcorpan>
and we don't mind making teh api better at this point

[12:13:03.0000] <zewt>
(still hoping the \n vs. <br> thing can be fixed before anyone ships...)

[12:13:11.0000] <Hixie>
zewt: well there are some use cases, e.g. being able to set the end time before the start time, or represneting user input in an editor without having to verify its sanity

[12:14:35.0000] <zcorpan>
the common case is setting start time, end time and text, so the constructor could take zero arguments setting nothing or those three

[12:14:50.0000] <zcorpan>
and for anything else, you'd set the property afterwards

[12:18:10.0000] <zewt>
is there a way to get a "settings" string from a TextTrackCue (the inverse of the settings argument to the ctor)? seems useful for editors

[12:18:38.0000] <Hixie>
annevk, dbaron: fyi i marked you (and maciej) as chairs in the CG, since you're charter "members" in the whatwg

[12:18:48.0000] <TabAtkins>
Is innerHTML supposed to work for SVG elements?

[12:19:00.0000] <zcorpan>
zewt: you'd have to build it manually i think

[12:19:01.0000] <Ms2ger>
Yes

[12:19:04.0000] <Ms2ger>
Per spec

[12:19:07.0000] <zewt>
zcorpan: right, avoiding that is what I mean

[12:19:08.0000] <zewt>
hmm

[12:19:09.0000] <Hixie>
annevk, dbaron: i believe the only side-effect is that you'll get lots of spam when people join, but a quick filter should take care of that. so, uh, sorry about that.

[12:19:12.0000] <zcorpan>
except the spec is broken

[12:19:18.0000] <zcorpan>
(innerHTML)

[12:19:23.0000] <Ms2ger>
It isn't

[12:19:28.0000] <Ms2ger>
The hook I call is broken ;)

[12:19:50.0000] <zcorpan>
yeah i mean the html spec

[12:20:04.0000] <zewt>
i guess some hoops would need to be jumped no matter what you do, for editors to avoid dropping unknown settings

[12:20:08.0000] <Ms2ger>
My spec is broken in numerous places, but not in that one :)

[12:20:29.0000] <zewt>
(eg. so if settings features are added to WebVTT, editors that don't know about them yet don't silently throw them away)

[12:21:06.0000] <zewt>
does anyone else get nervous when somebody starts a mail with "how about"? heh

[12:21:50.0000] <zewt>
or rather, starts a thread

[12:25:14.0000] <Hixie>
looks like only the "rules for constructing the chapter tree from a text track" algorithm needs work to handle negative durations

[12:25:25.0000] <Hixie>
and it doesn't really need work, i just think it's saner to not have negative duration chapters...

[12:26:02.0000] <zewt>
seems like allowing it just creates busywork for everyone supporting the file format...

[12:26:04.0000] <Hixie>
zewt: feel free to point him to the FAQ that says that we should start with a problem description, if he didn't :-)

[12:26:15.0000] <Hixie>
well it's not allowed

[12:26:23.0000] <Hixie>
i'm just talking about what to do to handle the error if it occurs

[12:26:34.0000] <Hixie>
it turns out it would be more work to catch it than not

[12:26:50.0000] <Hixie>
things just work with negative durations

[12:27:08.0000] <Hixie>
bbiab, lunch

[12:27:59.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/www-tag/2012Apr/0197.html

[12:28:05.0000] <annevk>
more spam, teehee

[12:28:19.0000] <MikeSmith>
bravo Berjon

[12:29:10.0000] <zewt>
"not allowed" as in discarded by the parser, or as in just non-conforming?

[12:39:34.0000] <scott_gonzalez>
MikeSmith: Thanks for working on the validator.nu stuff. The HTML lint task is working great :-)

[12:39:47.0000] <MikeSmith>
scott_gonzalez: excellent

[12:39:49.0000] <MikeSmith>
glad to hear it

[12:40:10.0000] <scott_gonzalez>
The only tricky thing we've run into is that we have a few files which are partial HTML files.

[12:40:16.0000] <MikeSmith>
oh

[12:40:38.0000] <scott_gonzalez>
Aside from creating temp files that just prepend "<!doctype html><title></title>" is there anything we can do?

[12:40:58.0000] <MikeSmith>
that is what you need to do currently

[12:41:26.0000] <MikeSmith>
there's no other way to avoid the error about the missing title element

[12:41:32.0000] <MikeSmith>
and the doctype

[12:41:33.0000] <scott_gonzalez>
ok

[12:41:50.0000] <MikeSmith>
out of curiosity, can you tell me how long it takes to validate all the files?

[12:42:02.0000] <MikeSmith>
you said you had about 300 files, right?

[12:42:07.0000] <scott_gonzalez>
It's pretty fast, let me test.

[12:43:58.0000] <scott_gonzalez>
256 files

[12:45:34.0000] <scott_gonzalez>
I'm running it now, but my laptop isn't very happy at the moment, seems like lots of swapping is going on

[12:45:49.0000] <scott_gonzalez>
been slow all day

[12:46:26.0000] <scott_gonzalez>
real	0m21.741s

[12:46:26.0000] <scott_gonzalez>
user	0m18.571s

[12:46:26.0000] <scott_gonzalez>
sys	0m2.422s

[12:49:18.0000] <scott_gonzalez>
I quit Firefox and now real is ~10 seconds

[12:58:31.0000] <annevk>
MikeSmith: W3C Bugzilla bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16697#c3

[12:58:38.0000] <annevk>
MikeSmith: might be a general Bugzilla bug I suppose

[12:58:39.0000] <MikeSmith>
scott_gonzalez: :)

[12:58:53.0000] <MikeSmith>
scott_gonzalez: yeah, that's right in the range I estimated it would be

[12:59:00.0000] <MikeSmith>
annevk: taking a look now

[12:59:29.0000] <MikeSmith>
annevk: hmm, yeah

[12:59:46.0000] <MikeSmith>
we are just running stock bugzilla

[13:00:21.0000] <MikeSmith>
annevk: 3.6.2

[13:00:52.0000] <MikeSmith>
so if there is a problem with character handling, I think it must be a problem that exists in any 3.6.2 bugzilla instance

[13:01:14.0000] <MikeSmith>
and hopefully something that has since been fixed in the bugzilla code

[13:01:33.0000] <MikeSmith>
anyway, I need to drop off for a bit

[13:01:34.0000] <MikeSmith>
back later

[13:07:00.0000] <annevk>
ta

[13:23:51.0000] <annevk>
AryehGregor: btw, if we get rid of Range.detach(); NodeIterator.detach() should maybe go too

[13:32:41.0000] <jsbell>
annevk: Can you run through your encode / decode steps for euc-kr with code point U+3000 and see if it's doing what you expect? (at the very least, encoder step 7.3 seems like it should be referring to trail not pointer)

[13:37:24.0000] <annevk>
jsbell: agreed about pointer->trail

[13:40:37.0000] <annevk>
0xA1 0xD5?

[13:42:24.0000] <annevk>
hmm

[13:42:52.0000] <jsbell>
python yields 0xA1 0xA1 ... but regardless, put 0xA1 0XD5 back through your encoder and I get a different pointer

[13:43:12.0000] <annevk>
yeah

[13:43:20.0000] <annevk>
the offsets are wrong :(

[13:44:18.0000] <annevk>
the second should be the difference between 0x5A and 0x61 + 0x41, the third the second plus the difference between 0x81 and 0x7A

[13:46:25.0000] <Hixie>
anyone implement TextTrack yet other than opera?

[13:46:51.0000] <annevk>
jsbell I think the offsets should be 0x41, 0x49, 0x51

[13:47:34.0000] <annevk>
hmm that does not give me A1

[13:49:59.0000] <annevk>
jsbell: 0x41, 0x47, 0x4D

[13:52:00.0000] <annevk>
jsbell: 0x47=0x41+0x61-0x5A-1; 0x4D=0x47+0x81-0x7A-1

[13:53:33.0000] <jsbell>
annevk: that certainly makes my test happier

[13:54:12.0000] <annevk>
I hate the index math

[13:54:27.0000] <annevk>
either I do it completely wrong, or get lost in off-by-one errors

[13:54:57.0000] <annevk>
spec is fixed now

[13:57:57.0000] <annevk>
jsbell: btw, at least the shift_jis encoder will change https://www.w3.org/Bugs/Public/show_bug.cgi?id=16839

[14:00:03.0000] <annevk>
Hixie: for http://html5.org/r/7071 you should use the string enum from IDL

[14:00:21.0000] <Hixie>
the what now?

[14:00:32.0000] <annevk>
Hixie: see http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#xmlhttprequestresponsetype for an example

[14:01:42.0000] <annevk>
Hixie: that will make the setting behavior consistent

[14:02:34.0000] <Hixie>
well that's new

[14:02:35.0000] <Hixie>
cool

[14:02:57.0000] <annevk>
there might be a bug somewhere about using it more generally in HTML, not sure

[14:04:08.0000] <Hixie>
first i heard of it :-)

[14:05:46.0000] <jsbell>
annevk: cool and thanks

[14:24:04.0000] <annevk>
Hixie: you forgot to update dom-TextTrack-mode; s/DOMString/TextTrackMode/

[14:24:28.0000] <fantasai>
foolip: post a proposal for last-line-length: <percentage> to www-style?

[14:24:29.0000] <Hixie>
woops

[14:24:34.0000] <Hixie>
thanks for watching anne :-)

[14:24:52.0000] <annevk>
it's over now, bedtime :)

[14:26:58.0000] <fantasai>
foolip: http://www.w3.org/Style/CSS/Tracker/issues/241 links to prior discussions

[14:27:16.0000] <fantasai>
foolip: or at least, the ones I've found so far

[14:27:30.0000] <fantasai>
foolip: I suspect there's other older ones, that I haven't found

[14:53:08.0000] <Hixie>
TabAtkins: nessy claims in https://www.w3.org/Bugs/Public/show_bug.cgi?id=16623 that block-flow is now writing-mode? Is that true? I thought we'd gone the other way around.

[14:54:03.0000] <Hixie>
maybe i just made up block-flow, since the first hit for [css "block-flow" property] is the bug in question

[15:00:31.0000] <kennyluck>
It's been 'writing-mode' for a while now.

[15:09:49.0000] <Hixie>
yeah i dunno where block-flow came from

[15:09:56.0000] <Hixie>
it was writing-mode back in 2001 or so already

[16:16:14.0000] <zewt>
srt was chosen for vtt because it made a mistake that no other formats did? heh

[16:38:27.0000] <fantasai>
Hixie: There was a 'block-flow' property in the interim.

[16:39:19.0000] <fantasai>
Hixie: or rather, proposals for it

[16:39:48.0000] <fantasai>
Hixie: The May 2003 CR of CSS3 Text added 'block-progression' in between closing LC and publishing CR

[16:42:17.0000] <fantasai>
Hixie: also you got vertical-lr and vertical-rl backwards, if I'm understanding correctly

[16:42:38.0000] <fantasai>
Hixie: lr is Left to Right, i.e. growing rightwards


2012-04-26
[21:32:03.0000] <manu1>
hsivonen: I'd appreciate responses to http://lists.w3.org/Archives/Public/public-rdfa-wg/2012Apr/0128.html and http://lists.w3.org/Archives/Public/public-rdfa-wg/2012Apr/0129.html as your time allows (RDFa ISSUE-130 and ISSUE-132).

[22:02:35.0000] <othermaciej>
manu1: how come HTML+RDFa issues are getting processed in the RDFa WG instead of the HTML WG?

[22:02:55.0000] <othermaciej>
manu1: should HTML+RDFa no longer be an HTML WG deliverable, since it is being worked on elsewhere and another WG is purporting to make decisions about it?

[22:05:15.0000] <hsivonen>
othermaciej: looks like we shouldn't pretendthat it's an HTML WG deliverable

[22:07:07.0000] <Hixie>
i'm amused that the discussion in the e-mails above isn't about whether or not the technical issues are resolved, it's about whether or not they are substantive and how to record that.

[22:19:13.0000] <hsivonen>
Hixie: I disagreed with the substance of some decisions, too. I find it annoying thasubstantive changes are downplayed as nonsubstantive in the DoC that gets shown to the Ditector

[22:20:55.0000] <Hixie>
hsivonen: yeah, but that wasn't what the reply was about

[22:21:21.0000] <hsivonen>
that is, I think the substantiveness of a change should depend on what specs said and now say rather than what the WG meant when ispecced something else

[22:21:36.0000] <hsivonen>
*it specced

[22:26:34.0000] <othermaciej>
W3C Process does say that substantiveness should be evaluated from the point of view of a hypothetical reviewer of the spec

[22:26:49.0000] <othermaciej>
not from point of view of wg members

[22:27:30.0000] <othermaciej>
"A substantive change (whether deletion, inclusion, or other modification) is one where someone could reasonably expect that making the change would invalidate an individual's review or implementation experience. "

[22:27:43.0000] <othermaciej>
<http://www.w3.org/2005/10/Process-20051014/tr.html#transition-reqs>

[22:28:03.0000] <othermaciej>
by that standard, it's pretty hard for a change not to be substantive

[22:29:29.0000] <hsivonen>
the changes for sure affected the validator impl

[22:31:09.0000] <Hixie>
you two are so cute, acting as if the process is ever followed

[22:56:10.0000] <othermaciej>
Hixie: I certainly don't have the desire to try to make other WGs follow it

[23:21:56.0000] <annevk>
hmm I wonder when WebVTT will get the rest of the HTML entities

[23:22:42.0000] <Hixie>
i was wondering the same earlier :-)

[23:22:50.0000] <Hixie>
the ones we've added have clear use cases

[23:38:38.0000] <annevk>
zcorpan: you still have some unliked [SELECTORS] [HTML] in your quirks mode doc

[23:38:45.0000] <annevk>
also unlinked

[23:40:32.0000] <zcorpan>
yeah i'll take a pass some day to clean it up

[23:50:16.0000] <Hixie>
are string indexes in JS not lvalues?

[23:51:08.0000] <othermaciej>
what do you mean by "string indexes"?

[23:51:13.0000] <Hixie>
s[4]

[23:51:23.0000] <Hixie>
wait, are strings in js immutable?

[23:51:35.0000] <othermaciej>
js strings are immutable, yes

[23:51:38.0000] <Hixie>
damnit

[23:51:39.0000] <Hixie>
k

[23:51:52.0000] <Hixie>
you'd think it would at least throw an exception or SOMEthing

[23:52:02.0000] <othermaciej>
I do believe "foo"[0] = "x" will not throw, but it won't do what you want

[23:52:18.0000] <Hixie>
i can definitely confirm _that_

[23:52:22.0000] <othermaciej>
reason being that it theoretically creates a String object wrapper around the string and assigns its property named "0"

[23:52:30.0000] <Hixie>
jeez

[23:52:37.0000] <othermaciej>
the wrapper is then discarded at the end of the statement

[23:52:46.0000] <annevk>
mwaha

[23:52:48.0000] <Hixie>
so is there some convenient idiom for updating a string?

[23:53:13.0000] <othermaciej>
depends on what you mean

[23:53:23.0000] <Hixie>
i want to replace the nth character of string S with new character X

[23:53:32.0000] <othermaciej>
there's no way to modify a string value

[23:53:32.0000] <Hixie>
there's like six zillion ways to do this in perl

[23:53:47.0000] <Hixie>
ok how about getting back a new string value that i assign to the same variable

[23:54:05.0000] <annevk>
Hixie: http://stackoverflow.com/questions/1431094/how-do-i-replace-a-character-at-a-particular-index-in-javascript

[23:54:22.0000] <Hixie>
seriously there's no better way than substr?

[23:54:22.0000] <Hixie>
jeez

[23:55:22.0000] <annevk>
but hey, next version of JavaScript might have classes and indexing by code point, it's a great language!

[23:55:55.0000] <othermaciej>
checking if there is a better way than substr

[23:59:11.0000] <othermaciej>
I guess depending on context slice might be easier to use than substr

[00:00:22.0000] <othermaciej>
function replaceChar(str, char, index) { return str.slice(0, index - 1) + char + str.slice(index); }

[00:00:41.0000] <Hixie>
that's basically the same code

[00:01:37.0000] <othermaciej>
true, I guess I might have an off-by-one bug also

[00:28:16.0000] <rniwa>
annevk: hi annevk!

[00:28:42.0000] <annevk>
hey rniwa

[00:29:09.0000] <rniwa>
annevk: are you following the context free (i.e. insertion-mode free) parsing algorithm discussion on public-webapps?

[00:29:44.0000] <annevk>
just a little bit

[00:30:06.0000] <rniwa>
annevk: k.

[00:30:23.0000] <rniwa>
annevk: i think there's a consensus that it's a good idea

[00:30:34.0000] <rniwa>
annevk: but there's some disagreement as to what exactly it should do

[00:31:13.0000] <rniwa>
annevk: particularly with respect to xml elements and whether parser should reject 'bad' html construct or not.

[00:31:26.0000] <rniwa>
Hixie: maybe you'll have some opinion on this?

[00:32:16.0000] <annevk>
I think you're wrong about jQuery's approach being wrong

[00:32:26.0000] <annevk>
it buys you quite a bit

[00:32:29.0000] <rniwa>
annevk: ok.

[00:32:40.0000] <annevk>
for instance <td> tags will not be dropped on the floor

[00:32:40.0000] <rniwa>
annevk: could you respond to the thread then?

[00:33:01.0000] <rniwa>
annevk: what do you mean?

[00:34:20.0000] <annevk>
if you do not adjust the insertion mode accordingly

[00:35:04.0000] <rniwa>
annevk: sure, but why do we want to adjust the insertion mode for the top-level element though?

[00:35:14.0000] <annevk>
by adjusting the insertion mode as Yehuda suggests this works perfectly for innerHTML on fragments

[00:35:18.0000] <rniwa>
annevk: isn't better to allow any top-level element?

[00:35:26.0000] <annevk>
rniwa: that's how innerHTML works

[00:35:49.0000] <rniwa>
annevk: sure because we have a context element.

[00:35:56.0000] <rniwa>
annevk: but for fragment, we don't have a context element.

[00:36:09.0000] <annevk>
yeah but you can derive it from the first token

[00:36:19.0000] <annevk>
first tag token

[00:36:36.0000] <rniwa>
annevk: but if we have something like <frameset></frameset><p>hello, world</p>

[00:36:48.0000] <rniwa>
annevk: then we're going to drop the p.

[00:36:55.0000] <annevk>
sure

[00:37:03.0000] <rniwa>
annevk: why is that desirable behavior here?

[00:37:13.0000] <annevk>
if you do :root { display:none } your page won't be displayed

[00:37:50.0000] <annevk>
because not reusing the HTML parser mechanism is even worse

[00:38:09.0000] <annevk>
because then you'll have a new set of quirks and behaviors to learn, parsing becomes unpredictable, etc.

[00:38:29.0000] <rniwa>
annevk: we can use the html5 parsing algorithm for elements below that.

[00:39:06.0000] <rniwa>
annevk: i could be convinced that this is a good idea though.

[00:39:43.0000] <annevk>
I'm not sure what you mean by "elements below that"

[00:39:59.0000] <rniwa>
annevk: what i mean is that we can allow any element at the top level (i.e. immediate children)

[00:40:12.0000] <rniwa>
annevk: and once you go below that level, context is well-defined

[00:40:32.0000] <rniwa>
annevk: i just don't see why we want to deduce the context from the first element. that sounds very arbitrary to me.

[00:40:40.0000] <annevk>
how is it arbitrary?

[00:40:57.0000] <rniwa>
annevk: why not second element or the last element for example.

[00:40:58.0000] <annevk>
what's your use case?

[00:41:50.0000] <annevk>
well in parsing there are no elements until you start parsing, so you don't know what the last element is until you parse the first

[00:42:04.0000] <rniwa>
annevk: right.

[00:42:13.0000] <annevk>
e.g. if the first is <plaintext> and you parse it per HTML rules it there won't be last element

[00:42:48.0000] <rniwa>
that's a good argument.

[00:43:06.0000] <annevk>
first is very logical imo, especially for table templating which cannot work without this logic

[00:43:18.0000] <annevk>
s/this logic/this behavior/

[00:43:57.0000] <annevk>
you'd have to define a completely new insertion mode for what you're suggesting, have you tried thinking it out?

[00:44:00.0000] <rniwa>
annevk: oh, table should work regardless. because the alternative is to allow any element for the top-level.

[00:44:10.0000] <rniwa>
annevk: right.

[00:44:20.0000] <annevk>
<p><td><p>

[00:44:22.0000] <rniwa>
annevk: re: new insertion mode.

[00:44:24.0000] <annevk>
what will that do in your mode?

[00:44:39.0000] <annevk>
something completely different from how HTML behaves today?

[00:45:15.0000] <rniwa>
annevk: yeah, those unbalanced pairs are tricky ones.

[00:45:47.0000] <annevk>
Yehuda has put quite a bit of thought into this, had it tested it in the wild by millions of developers, wrote a detailed proposal for the HTML parser section

[00:46:20.0000] <annevk>
dismissing that without a good alternative in place seems unwise

[00:47:02.0000] <rniwa>
annevk: oh where is that document available?

[00:47:24.0000] <annevk>
bug somewhere

[00:47:43.0000] <annevk>
let me check

[00:47:48.0000] <rniwa>
annevk: that sounds very useful.

[00:48:43.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=14694

[00:49:27.0000] <annevk>
I forgot Ms2ger assigned it to himself for some reason and there's no corresponding bug on HTML for Hixie to fix

[00:50:58.0000] <rniwa>
annevk: i'm not seeing anything Yehuda posted other than his spec patch though.

[00:51:13.0000] <annevk>
that's a proposal no?

[00:51:51.0000] <rniwa>
annevk: ah, okay. I thought he had written some documentation on "tested it in the wild by millions of developers, wrote a detailed proposal for the HTML parser section"

[00:52:07.0000] <annevk>
well he's on the jQuery team

[00:52:57.0000] <annevk>
and as far as I know wrote this part of jQuery which has been used by lots of people that use jQuery :)

[00:54:21.0000] <rniwa>
annevk: okay, i'll really appreciate it if you could post some of your arguments.

[00:54:43.0000] <rniwa>
annevk: since we desperately need responses from non-Google / non-jQuery people LOL

[00:56:31.0000] <annevk>
mkay, after breakfast

[00:56:38.0000] <rniwa>
annevk: thanks :)

[04:51:49.0000] <annevk>
heycam|away: are you taking a break from IDL questions such as http://lists.w3.org/Archives/Public/public-script-coord/2012AprJun/0137.html ?

[05:04:30.0000] <MikeSmith>
fyi, http://www.w3.org/Bugs/Public not responding

[05:04:32.0000] <MikeSmith>
working on it

[05:07:20.0000] <zcorpan>
https://bugs.webkit.org/show_bug.cgi?id=84469#c1

[05:08:37.0000] <smaug____>
zcorpan: good luck trying to convince webkit to drop support for bad features

[05:11:07.0000] <zcorpan>
thanks :)

[05:11:16.0000] <davidb>
at

[05:13:44.0000] <zcorpan>
smaug____: i don't care so much that it's a "bad" feature, i mostly just want interop, and secondarily minimizing the number of quirks

[05:16:11.0000] <annevk>
heh, MikeSmith already reported what I was about to mention, good man

[05:16:31.0000] <MikeSmith>
:p

[05:17:12.0000] <MikeSmith>
I'm told it should be fixed within the next 60 minutes or so

[05:28:54.0000] <MikeSmith>
for appcache, does the spec define what exceptions/error messages should be thrown after the app-specific maximum storage limit is reached?

[05:37:47.0000] <annevk>
zewt: my apologies for not reading your email correctly with respect to all "non-ASCII" as &#...; and removing all encoders

[05:37:52.0000] <annevk>
zewt: that is indeed not possible

[05:38:26.0000] <annevk>
zewt: e.g. passwords are known to rely on windows-1252 specifics

[05:46:52.0000] <MikeSmith>
hsivonen: any clue why http://validator.nu/?doc=http%3A%2F%2Fw3.org is defaulting to XHTML5 validation instead of XHTML1?

[05:47:13.0000] <MikeSmith>
maybe this is a regression I introduced with my changes to the presets

[05:55:05.0000] <zcorpan>
MikeSmith: i think it has done that for some time

[05:55:16.0000] <zcorpan>
MikeSmith: xml mode looks at just namespace, not doctype

[05:55:39.0000] <zcorpan>
MikeSmith: at first it defaulted to xhtml1 validation, iirc, but hsivonen changed it at some point

[06:09:18.0000] <MikeSmith>
zcorpan: OK

[06:38:52.0000] <smaug____>
"the end of the file being the four ways in which a line can end."

[06:38:57.0000] <smaug____>
I don't understand

[06:39:03.0000] <smaug____>
"four"?

[06:39:15.0000] <smaug____>
http://dev.w3.org/html5/eventsource/#event-stream-interpretation

[06:39:19.0000] <annevk>
CR, LF, CRLF, EOF

[06:43:28.0000] <smaug____>
annevk: well, the spec defines end of line ( cr lf / cr / lf )

[06:43:38.0000] <smaug____>
but ok

[06:44:26.0000] <smaug____>
or no

[06:44:33.0000] <smaug____>
end of file is end of file

[06:45:23.0000] <annevk>
I think actually we changed that to not make EOF act as end of line for security

[06:45:36.0000] <annevk>
to ensure you knew it was not an accidental EOF

[06:49:37.0000] <zewt>
annevk: pretty much what I expected

[06:50:00.0000] <zewt>
annevk: (seems worth suggesting the impossible now and then, in case my assumptions are wrong)

[06:53:20.0000] <annevk>
zewt: yeah

[06:53:50.0000] <annevk>
zewt: I like to challenge to establishment

[06:53:55.0000] <annevk>
the*

[06:54:00.0000] <zewt>
down with the man

[06:54:04.0000] <zewt>
or something

[06:54:46.0000] <gsnedders>
Is there anything that gives unserializable DOMs, or is it merely implicit from the parsing algorithm?

[06:54:53.0000] <gsnedders>
/me wonders how to work that out

[06:55:36.0000] <annevk>
setAttribute("xmlns", "hahahaha")

[06:55:37.0000] <smaug____>
gsnedders: unserialized DOM?

[06:55:49.0000] <smaug____>
er

[06:55:52.0000] <smaug____>
serializable

[06:56:06.0000] <gsnedders>
smaug____: a DOM that cannot be serialized as HTML.

[06:56:06.0000] <smaug____>
but yeah some xmlns tricks may do it, I think

[06:56:30.0000] <gsnedders>
I meant a list of what is unseriailizable, not if there was anything, duh.

[06:58:48.0000] <annevk>
"Serializing XHTML fragments" has a list

[06:59:59.0000] <annevk>
not sure if that list is complete though, despite it claiming it is

[07:00:46.0000] <annevk>
oh maybe it is correct, it says "a node" rather than Attr/Element

[07:00:50.0000] <annevk>
kind of vague

[07:04:44.0000] <annevk>
smaug____: so at the end of that server-sent events section it says this

[07:04:47.0000] <annevk>
smaug____: "Once the end of the file is reached, any pending data must be discarded. (If the file ends in the middle of an event, before the final empty line, the incomplete event is not dispatched.)"

[07:04:58.0000] <annevk>
smaug____: I think it still saying that bit about four and such is an oversight

[07:05:34.0000] <annevk>
smaug____: I'll file a bug

[07:05:37.0000] <smaug____>
thanks

[07:08:11.0000] <annevk>
smaug____: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16866

[07:11:32.0000] <smaug____>
what is Opera's UA string

[07:11:43.0000] <smaug____>
Opera/9.80 ...Version/11.62

[07:11:50.0000] <smaug____>
o_O

[07:12:07.0000] <wilhelm>
10 is a difficult number.

[07:12:16.0000] <annevk>
it used to be beautifully short, then someone fucked it up

[07:12:18.0000] <wilhelm>
Or, it used to be.

[07:14:23.0000] <gsnedders>
Given we have to fight not to get bogusly UA sniffed on Google and FB, yet alone the long tail, breaking where we do get UA sniffed correctly is probably a battle too far…

[07:14:41.0000] <smaug____>
UA strings are hard

[07:15:12.0000] <gsnedders>
Hint: Opera Mobile 12 works fine with the version of m.facebook.com that iOS/Android's browsers get.

[07:15:57.0000] <gsnedders>
Maybe all browsers should just standardize on one UA string and be done with it.

[07:16:05.0000] <gsnedders>
Kill UA sniffing overnight.

[07:16:14.0000] <zewt>
gsnedders: you won't change the UA string, so why would anybody else :)

[07:17:07.0000] <zewt>
User-Agent: transistors

[07:17:47.0000] <annevk>
might as well remove the header then

[07:20:13.0000] <gsnedders>
annevk: That would break too much. Going for something that looks like some current browser wouldn't.

[07:25:44.0000] <gsnedders>
jgraham: Know of anyone doing anything to constants.py, or planning on doing so?

[07:25:51.0000] <gsnedders>
/me has huge unicode-cleanup patch

[08:18:36.0000] <jgraham>
gsnedders: No

[08:44:37.0000] <jonnybarnes>
So I was looking at the HTML spec on how to use cite with blockquote

[08:45:03.0000] <jonnybarnes>
and in the first example it gives with a figure element containing a blockquote and figcaption

[08:45:29.0000] <jonnybarnes>
the figcaption has </cite> tag that isnt closing an open <cite> tag

[08:45:35.0000] <jonnybarnes>
surely this is wrong?

[08:46:52.0000] <MikeSmith>
jonnybarnes: yeah it's wrong if it doesn't have a cite start tag

[08:46:58.0000] <jonnybarnes>
relevent section: http://www.whatwg.org/specs/web-apps/current-work/multipage/grouping-content.html#dom-quote-cite

[08:47:39.0000] <jonnybarnes>
MikeSmith: who's job is it to fix the spec then? I have no idea how this works

[08:47:57.0000] <MikeSmith>
jonnybarnes: file a bug

[08:48:09.0000] <MikeSmith>
http://w3.org/brief/MjA2

[08:49:17.0000] <jonnybarnes>
can I post a bug about the whatwg spec to the w3?

[08:49:28.0000] <annevk>
yes

[08:49:51.0000] <smaug____>
hrm, implementing xhr.timeout broke some sites :(

[08:49:57.0000] <annevk>
W3C and WHATWG share some infrastructure

[08:50:16.0000] <MikeSmith>
W3C and WHATWG are blood brothers

[08:50:20.0000] <annevk>
smaug____: Microsoft's implementation?

[08:50:50.0000] <annevk>
smaug____: or people extending XHR themselves?

[08:50:52.0000] <smaug____>
annevk: I mean Gecko's implementation

[08:51:04.0000] <annevk>
smaug____: sure, I'm wondering why

[08:51:14.0000] <smaug____>
some scripts expect that timeout can be used with sync

[08:51:18.0000] <smaug____>
http://code.google.com/p/ext-basex/issues/detail?id=7

[08:52:17.0000] <smaug____>
but let's see how common this is

[08:52:27.0000] <jonnybarnes>
Looks like there's already a bug been opened for it

[08:52:32.0000] <smaug____>
I'd really like to keep all the new features for async only

[08:53:07.0000] <annevk>
the way people work around it is by not using timeout :/

[08:53:39.0000] <zewt>
doesn't make sense at all to fail outright in that case ...

[08:53:42.0000] <annevk>
with all those libraries nobody has any idea anymore what they're actually doing

[08:53:49.0000] <zewt>
at most it should ignore it

[08:54:09.0000] <annevk>
zewt: that's not consistent with the API

[08:54:17.0000] <zewt>
then the API is wrong, IMO

[08:54:28.0000] <annevk>
okay

[08:54:40.0000] <smaug____>
zewt: what API is wrong?

[08:54:48.0000] <zewt>
if you have an API foo(a, {b: 1}), and old versions of the API don't know about 'b', it doesn't make sense for new versions which do support it to start failing

[08:54:54.0000] <smaug____>
the JS script library API, sure

[08:54:56.0000] <zewt>
that was a crappy explanation of what I'm thinking

[08:55:47.0000] <zewt>
if foo(a, {b:1}) works in browser 1.0, which doesn't know about 'b' (and therefore ignores it entirely), it doesn't make much sense for browser 2.0, which now supports 'b' but only in certain circumstances, to start failing where it used to work

[08:56:24.0000] <smaug____>
you can't make that kinds of API

[08:56:31.0000] <zewt>
what?

[08:56:46.0000] <smaug____>
we've seen plenty of problems when adding support for new APIs

[08:57:00.0000] <smaug____>
whenever a new property is added to any form control element, some site breaks

[08:57:32.0000] <zewt>
if FF used to not support timeout at all, and people were specifying timeouts (perhaps for other browsers), you can't make timeout suddenly start failing--that's basic backwards-compat

[08:57:57.0000] <zewt>
ignoring it when it's not allowed doesn't have that problem

[08:58:44.0000] <zewt>
(i really don't understand why timeout wouldn't be allowed with sync, though--seems to me that's the case where you *really* need it)

[08:59:14.0000] <smaug____>
we don't want to make sync more useful in any case

[08:59:21.0000] <smaug____>
I have the plan to remove sync XHR in window context

[08:59:30.0000] <smaug____>
may take several years

[09:00:08.0000] <zewt>
i wouldn't put money on that ever happening, heh

[09:20:26.0000] <dglazkov>
good morning, Whatwg!

[09:21:21.0000] <Ms2ger>
Bonsoir

[10:15:30.0000] <Ms2ger>
gsnedders, I know someone who's doing something with constants.py

[11:30:09.0000] <annevk>
"By this estimate, most of the translation on the planet is now done by Google Translate. (We can’t speak for the galaxy; Douglas Adams’s “Babel fish” probably has us beat there.)" :)

[11:51:54.0000] <zewt>
special thanks to google for crippling the translate api

[11:52:29.0000] <zewt>
making clear a lesson i thought was obvious from the start: you can never *really* depend on any free web api, no matter who the provider is

[11:53:49.0000] <zewt>
apparently, a good html templating system for python simply doesn't exist

[11:54:22.0000] <annevk>
yeah I'm a bit scared with such APIs starting to be used for platform features

[11:54:25.0000] <annevk>
e.g. for geolocation

[11:54:38.0000] <annevk>
they also wanted to expose geocoding as a platform API

[11:54:50.0000] <annevk>
and voice web services are under discussion

[11:55:02.0000] <annevk>
not really sure if it's a good idea to ingrain those kind of things

[11:55:29.0000] <zewt>
it doesn't make much sense to me to basically bake web APIs into the platform as platform APIs; if it's available as a web API, and the consequences of that are OK for you, then just use the web API

[11:56:42.0000] <zewt>
(not sure about the particulars of what you're referring to)

[12:06:04.0000] <annevk>
I agree with you

[12:06:21.0000] <annevk>
I'm not really sure why it ever went there, convenience I guess

[12:06:57.0000] <zewt>
i'd find it an inconvenience (since it's just an extra layer between me and the real API)

[12:07:48.0000] <annevk>
maybe the idea was to do it all in a single request

[12:07:52.0000] <annevk>
for geolocation anyway

[12:08:07.0000] <annevk>
because getting your location requires wi-fi data etc.

[12:08:26.0000] <zewt>
well getting your location from system data is a different thing

[12:08:26.0000] <annevk>
so if the service took that kind of data and gave back the place name, that'd be nice

[12:08:47.0000] <annevk>
well it's system data combined with a network request

[12:08:51.0000] <zewt>
i mean, you can't get wifi/gps/cell tower location data from a web API; you need a system API

[12:09:05.0000] <annevk>
system data you probably do not want to expose to the web

[12:09:22.0000] <zewt>
sure you do (in the appropriately abstracted form)

[12:12:41.0000] <zewt>
i guess the related risk is when the geolocation API uses a geoip web service as a data point, it falls over if that service goes away ... but I guess that's not really a problem with the API itself (since it's not specific to it), and it's the browser's risk

[12:13:25.0000] <zewt>
(which they're free to take)

[12:13:54.0000] <annevk>
if a browser doesn't use a web service for that it cannot guarantee good quality

[12:14:09.0000] <zewt>
mobile can, far better than a web service

[12:14:13.0000] <annevk>
so in effect web services are now a required part of browsers

[12:14:23.0000] <zewt>
desktops generally have no options other than geoip

[12:14:37.0000] <annevk>
even on mobile you use wi-fi etc. to determine the position much much faster

[12:18:11.0000] <zewt>
not really required, since it's not actually a required API--you can always just refuse all geo API requests

[12:18:30.0000] <zewt>
if it was something more fundamental that would break everything if it didn't work, then yeah, that'd be a real problem

[12:18:54.0000] <annevk>
if you want market share it's required

[12:19:04.0000] <zewt>
nobody on desktops cares about geolocation

[12:19:23.0000] <annevk>
says who?

[12:19:35.0000] <zewt>
who says people do?

[12:19:57.0000] <zewt>
on mobile falling back on gps is typically fine (and if you're on mobile and that's too slow, you probably have to solve that at a platform level anyway)

[12:19:58.0000] <annevk>
dunno, but I've certainly used it

[12:21:01.0000] <zewt>
i seriously doubt lacking the geolocation API on a desktop browser would have a real impact on market share

[12:21:35.0000] <zewt>
besides, on most desktops all you're likely to get is geoip anyway, and people do that server-side whether or not you have the geo api

[12:22:28.0000] <zewt>
dunno if desktop browsers do wifi lookups on laptops

[12:33:26.0000] <Philip`>
zewt: Opera does wifi lookup on my laptop

[12:33:37.0000] <Philip`>
(or at least it did when it first supported)

[12:33:46.0000] <Philip`>
*was

[13:42:34.0000] <othermaciej>
MikeSmith: are you around?

[13:42:43.0000] <MikeSmith>
yeah

[13:42:54.0000] <othermaciej>
MikeSmith: I need help with two things

[13:43:00.0000] <othermaciej>
maybe 3

[13:43:13.0000] <othermaciej>
1) I would like to change the description text for the whatwg cg, not sure how to do it

[13:43:24.0000] <othermaciej>
the text that currently says "Community group around the HTML living standard and its related Web Application technology specifications."

[13:43:48.0000] <othermaciej>
2) I would like to change the CG page to point people to whatwg⊙wo as the public list for the CG instead of public-whatwg⊙wo

[13:44:03.0000] <othermaciej>
3) My W3C CVS access seems to be busted, I could use tech support or something

[13:44:09.0000] <othermaciej>
#3 is a bit lower priority

[13:47:35.0000] <heycam>
annevk, just been working on other things the last week, I'll get to it soon sorry

[13:47:54.0000] <heycam>
*last couple of weeks

[13:50:34.0000] <MikeSmith>
othermaciej: gimme 30 minutes or so

[13:52:01.0000] <othermaciej>
MikeSmith: ok!

[13:56:57.0000] <jgraham>
othermaciej: CVS acces being busted is supposed to be a hint

[13:57:01.0000] <jgraham>
:p

[13:57:26.0000] <othermaciej>
a hint about what? that I'm fired from being a volunteer?

[13:57:50.0000] <Ms2ger>
Use HG

[14:36:08.0000] <Hixie>
roc: is https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html uncontroversial now? or is there some other proposal? i'm having trouble figuring out which audio proposal has the bulk of browsers behind it these days

[14:42:54.0000] <TabAtkins_>
Hixie: To the best of my knowledge, yes, that's the one we're going with now.  But roc should probably answer just to be sure.

[14:44:39.0000] <Hixie>
right... i seem to recall it was not always a given, which is why i'm questioning

[14:46:39.0000] <Hixie>
is anyone working on MIDI on the Web?

[14:51:55.0000] <smaug____>
well, mediastreams will be there too

[14:52:05.0000] <smaug____>
web audio has many issues still

[14:52:42.0000] <smaug____>
but the wg lists both web audio and media stream processing API as its proposals

[14:53:32.0000] <smaug____>
Hixie: I believe roc is about the land the implementation for Mediastream processing API real soon

[14:53:36.0000] <Hixie>
smaug____: are they mutually exclusive or are they complementary?

[14:53:52.0000] <roc>
Web Audio has the Webkit browsers behind it

[14:54:02.0000] <smaug____>
my assumption has been that they will be merged somehow

[14:54:32.0000] <smaug____>
and drop some features from Web Audio

[14:54:42.0000] <Hixie>
so mutually exclusive?

[14:54:47.0000] <Hixie>
or rather, overlapping?

[14:54:59.0000] <smaug____>
I'd say overlapping

[14:55:04.0000] <Hixie>
k

[14:55:13.0000] <smaug____>
at least partially

[14:56:11.0000] <roc>
Web Audio may have too much momentum behind it to change or drop any of it

[14:56:38.0000] <smaug____>
it isn't even spec'ed properly yet

[14:56:43.0000] <smaug____>
so sure there can be changes

[14:57:16.0000] <roc>
changes that don't break compatibility, sure

[14:57:24.0000] <Hixie>
is there momentum beyond a single implementation?

[14:57:28.0000] <roc>
no

[14:57:39.0000] <Hixie>
then it doesn't have too much momentum

[14:57:54.0000] <roc>
Google's evangelized it and developers are using it

[14:58:07.0000] <smaug____>
for Chrome-only games, I assume

[14:59:04.0000] <Hixie>
it might have too much momentum for the exact names used in webkit's implementation to have incompatible definitions, but one can always change the names

[14:59:11.0000] <roc>
currently, although Safari will support it too

[14:59:52.0000] <smaug____>
but since web audio API is currently still mainthread only API, it really doesn't work well enough

[15:00:08.0000] <roc>
Google's evangelists are out there telling everyone this is how Web audio is going to be done (the "Web Audio" name was brilliant), and people are building based on that assumption

[15:00:35.0000] <roc>
I can't fight that

[15:00:48.0000] <Hixie>
roc: sure you can. if it's not implemented, it doesn't matter what people said.

[15:00:55.0000] <Hixie>
shipped code wins every time

[15:01:07.0000] <smaug____>
well, I don't still buy it. Google has tried similar thing for example with speech stuff, and it didn't work.

[15:01:15.0000] <Hixie>
exactly

[15:01:30.0000] <roc>
but devs are actually using Web Audio

[15:01:43.0000] <Hixie>
so?

[15:02:23.0000] <roc>
so I don't think telling them "no, use this instead for Firefox" is going to get a good reception

[15:03:03.0000] <jernoble>
smaug____: "mainthread only API"? what do you mean?

[15:03:07.0000] <Hixie>
so don't say that. say "no, use this instead for all browsers, it's what will be implemented by everyone"

[15:03:13.0000] <roc>
Web Audio isn't terribly bad, or obnoxious

[15:03:21.0000] <Hixie>
and make sure that there is in fact a single api used by everyone

[15:03:47.0000] <zewt>
jernoble: realtime audio (or semi-realtime, eg. games) needs to be low-latency; that wants to be able to feed audio in a thread to avoid underruns

[15:03:53.0000] <roc>
Hixie: I can't say that while no-one but Mozilla (and maybe Opera) have agreed to implement it

[15:04:06.0000] <smaug____>
jernoble: Mediastream processing API is heavily multithreaded (using workers), Web Audio API isn't

[15:04:11.0000] <Hixie>
roc: so change it so that others will agree to implement it

[15:04:17.0000] <jernoble>
zewt: yes, and the audio processing runs off the main thread, specifically to meet those goals.

[15:04:21.0000] <roc>
smaug____, zewt: Web Audio has off-main-thread builtin processing nodes

[15:04:31.0000] <smaug____>
roc: not for JS stuff

[15:04:34.0000] <jernoble>
zewt: it's only the setup of the scene graph that occurs on the main thred.

[15:04:45.0000] <jernoble>
*thread

[15:04:46.0000] <roc>
smaug____, zewt: and Chris Rogers agrees that Workers should be added to Web AUdio somehow

[15:05:24.0000] <roc>
Hixie: Chris Rogers and others don't object to MediaStream Processing per se, their argument is that Web Audio is here, people are using it, and it's good enough so why do anything else

[15:05:30.0000] <smaug____>
sure, I know what. But it isn't there. I assume if you add support for multithreading, web audio api will look a lot more like mediastream processing

[15:05:33.0000] <zewt>
<smaug____> but since web audio API is currently still mainthread only API, it really doesn't work well enough

[15:05:46.0000] <smaug____>
which is why I think the APIs will merge somehow

[15:06:04.0000] <Hixie>
roc: "why do anything else" would be "because it's not getting implemented in more than webkit"

[15:06:49.0000] <roc>
heh

[15:06:51.0000] <roc>
well

[15:07:04.0000] <roc>
that argument hasn't worked so far :-)

[15:07:48.0000] <Hixie>
sounds like the group is dysfunctional if there are multiple specs, implementations won't agree to implement the same one, and nobody is willing to compromise to come up with a common spec

[15:08:01.0000] <roc>
so

[15:08:10.0000] <roc>
there are two main differences between the current specs

[15:08:32.0000] <roc>
one is that Web Audio defines a big set of builtin-nodes and expects you to use them because their JS support is weak

[15:08:55.0000] <roc>
while MSP focuses on JS workers and doesn't define a big set of built-in nodes

[15:09:10.0000] <roc>
that's easy to compromise on --- just merge. I've already agreed to do that.

[15:09:43.0000] <roc>
the other big difference is that Web Audio is based on an AudioNode graph and MSP is based on MediaStreams

[15:09:52.0000] <roc>
there you can't really compromise

[15:10:13.0000] <roc>
that's the problem

[15:11:30.0000] <smaug____>
(one problem is that the builtin-nodes in Web Audio API really aren't spec'ed well enough. They are in the level "this node modifies data somehow")

[15:11:48.0000] <roc>
that can be fixed, and Chris Rogers has agreed that it should be fixed

[15:12:14.0000] <smaug____>
sure

[15:12:48.0000] <smaug____>
just hasn't happened yet, and someone from Google almost seriously suggested that webkit's implementation should be the reference implementation for nodes

[15:13:41.0000] <roc>
several people have suggested that, but just because they don't understand Web standards. Chris doesn't hold to that.

[15:14:25.0000] <roc>
What I really want is for Microsoft to take a position.

[15:14:35.0000] <roc>
But for some reason they won't.

[15:14:35.0000] <smaug____>
I just think we can't really live without something like MSP

[15:14:41.0000] <Hixie>
that would probably break the deadlock, it's true

[15:15:07.0000] <smaug____>
but we can live without web audio api

[15:15:11.0000] <Hixie>
maybe they're just stuck, confused about whether to screw over their arch enemies apple and google, or their arch enemies opera and mozilla ;-)

[15:17:55.0000] <roc>
I think it's pretty obvious who their real arch-enemies are :-)

[15:28:17.0000] <Hixie>
themselves? :-)

[15:32:46.0000] <cbright6062>
hmmmmm

[16:11:16.0000] <JVoracek>
 


2012-04-27
[17:16:41.0000] <othermaciej>
I think the success of Web Audio is because it's good at serving important use cases

[17:16:46.0000] <othermaciej>
not just because of evangelism

[17:18:01.0000] <othermaciej>
and Apple is in favor mainly because it's viable on mobile devices, unlike the "do all your audio processing in JS" approach

[17:18:22.0000] <othermaciej>
not just because our arch-nemesis / co-engine-developer Google proposed it

[17:19:04.0000] <jamesr_>
roc, is the difficulty with WebAudio's node-based approach that it's hard to write all of the nodes in C++?

[17:19:16.0000] <jamesr_>
and we really need a second implementation of that bit?

[17:19:35.0000] <TabAtkins_>
I think it's that it's hard to write all of the nodes interoperably, given the current spec state.

[17:19:38.0000] <roc>
that is an issue, but it's not a big issue

[17:19:50.0000] <roc>
it's certainly solvable

[17:20:14.0000] <othermaciej>
all they do is math, so it should be straightforward to spec with precision, given enough effort

[17:20:41.0000] <roc>
like I said above, I don't think whether or not we should have a big library of built-in nodes is the sticking point

[17:20:54.0000] <jamesr_>
so it's about the glue?

[17:20:57.0000] <othermaciej>
WebKit's WebAudio node implementations are 4958 lines of C++ and IDL code

[17:21:01.0000] <othermaciej>
(including comments)

[17:21:18.0000] <jamesr_>
othermaciej, not the easiest 5k lines to write

[17:21:32.0000] <roc>
I'm more concerned about whether it

[17:21:32.0000] <jamesr_>
but it's no sqlite beast, either

[17:21:57.0000] <roc>
's a good idea to have 2 (or more) abstractions for real-time media processing, or just one

[17:22:22.0000] <othermaciej>
it would be nice for MediaStream and Web Audio's data processing to be aligned

[17:22:26.0000] <othermaciej>
(and Media Source)

[17:22:59.0000] <othermaciej>
but MediaStream as designed doesn't really allow significant processing of media data, beyond letting you send it from point A to point B

[17:23:12.0000] <othermaciej>
so it's not like there's two rich interfaces to reconcile

[17:23:16.0000] <roc>
that's why I've proposed MediaStreams Processing

[17:23:37.0000] <roc>
(and implemented most of it)

[17:23:48.0000] <othermaciej>
MediaStreams Processing is the thing that causes there to be "2 (or more) abstractions for real-time media processing"

[17:23:52.0000] <roc>
no

[17:24:27.0000] <othermaciej>
I am not sure I understand your concern then

[17:25:38.0000] <othermaciej>
(or more specifically, what specifically you meant by "2 (or more) abstractions for real-time media processing")

[17:26:52.0000] <roc>
I shouldn't have said "processing" there

[17:28:19.0000] <roc>
MediaStreams and AudioNodes are two different abstractions for real-time media streams

[17:28:37.0000] <othermaciej>
oh, in that case I would agree that there should not be, presuming there's a reasonable way to have a unified abstraction

[17:29:12.0000] <roc>
and I'm assuming that in the future we'll want to process video streams, and other kinds of data such as Kinect-style depth buffers

[17:29:48.0000] <zewt>
(that's the sort of thing languages like GLSL are good for...)

[17:29:50.0000] <roc>
I think, of course, that MediaStreams Processing is a reasonable way to have a unified abstraction

[17:29:50.0000] <othermaciej>
that's possible, but audio processing has some specialized requirements

[17:30:26.0000] <othermaciej>
you need to make sure that things aren't so abstracted that it gets in the way of doing the required audio-specific things

[17:31:15.0000] <roc>
yes, and I think I've demonstrated that. At least, that doesn't seem to be the issue right now.

[17:32:59.0000] <MikeSmith>
othermaciej: about the group description, lemme know what you want and I will change it right now

[17:33:16.0000] <othermaciej>
MikeSmith: s/living standard/living specification/

[17:33:29.0000] <MikeSmith>
OK, gimme a minute

[17:34:53.0000] <MikeSmith>
about the Contact Group link, I have yet to find where that is stored in the DB, so not sure if I can change it. I think unfortunately it might be generated/constructed just by concatenating public- with the CG name ("whatwg"). I will find out tomorrow

[17:36:00.0000] <othermaciej>
roc: with just your API as proposed, I don't think it would be feasible to run equivalents of the various Web Audio demos on an iPad

[17:36:39.0000] <othermaciej>
roc: I think your spec takes the position that processing audio with JS in a Worker is the core feature, and specialized native code audio processing modules are fluff, whereas I would take the converse view

[17:36:44.0000] <MikeSmith>
othermaciej, OK, description now changed at least

[17:36:48.0000] <roc>
that may well be true, so I agree we should have a library of native effects

[17:36:50.0000] <othermaciej>
MikeSmith: thanks!

[17:37:46.0000] <othermaciej>
roc: of course, I say that based on just a quick read-through and from the position of not being an expert on media or audio

[17:37:59.0000] <othermaciej>
so apply liberal dose of salt

[17:40:09.0000] <roc>
I don't think I have ever described "native code audio processing" as "fluff" or anything like that. I have some concerns about trying to support every effect anyone would ever want as a built-in primitive, so I have always felt strongly that first-class JS support is important, and because that's strictly more demanding on the infrastructure than native effects, that's what I focused on

[17:41:07.0000] <othermaciej>
you can do a lot of useful audio effects efficiently through composition of suitable parameterized primitives

[17:41:33.0000] <othermaciej>
a lot of pro audio software adopts that model

[17:41:42.0000] <roc>
yes. (you may lose your efficiency advantage over doing it directly in JS though)

[17:41:44.0000] <othermaciej>
as do a lot of platform-native audio apis

[17:42:54.0000] <roc>
anyway, this is not the contentious part. This is easy to compromise on. We can all agree (and I think do all agree) that there should be first-class JS support and a native effects library that's as big as it needs to be. And even if it gets bigger than it needs to be, that's not a big deal.

[17:43:10.0000] <othermaciej>
so what is the contentious part, if any?

[17:43:35.0000] <roc>
Whether to build on MediaStreams or have a separate AudioNode/AudioContext abstraction

[17:44:29.0000] <othermaciej>
an AudioNode doesn't really represent the same thing as a stream

[17:44:34.0000] <othermaciej>
it's a unit with inputs and outputs

[17:44:38.0000] <roc>
and related to that, some questions exactly what semantics of the streams should be supported.

[17:44:43.0000] <othermaciej>
it might be logical to be able to get a MediaStream into or out of one

[17:44:50.0000] <roc>
a ProcessedMediaStream is a MediaStream with inputs

[17:44:51.0000] <othermaciej>
that seems like it would be simple

[17:45:28.0000] <othermaciej>
is it actually practically useful to represent an effects unit as a stream?

[17:46:23.0000] <othermaciej>
certainly in signal processing terms a signal and a system are not the same thing (though in some cases a system can be sufficiently defined by its impulse response)

[17:47:27.0000] <roc>
A specific AudioNode instance produces a stream of audio output

[17:47:29.0000] <othermaciej>
when I plug my guitar into a distortion pedal and the pedal into the amp, the pedal effects unit takes a signal in and sends a signal out, but it is not itself a signal

[17:48:00.0000] <othermaciej>
it certainly makes sense to me that an AudioNode should be able to take input as a MediaStream and send output as a MediaStream

[17:48:07.0000] <othermaciej>
I don't understand why it would *be* a MediaStream

[17:48:15.0000] <roc>
I don't see any real utility in distinguishing an AudioNode from its output, as separate objects

[17:48:30.0000] <roc>
in the graph

[17:48:48.0000] <othermaciej>
it may be that connecting them directly can be more efficient than producing output in a form consumable by non-AudioNodes

[17:49:04.0000] <othermaciej>
(which a MediaStream would have to be, in the general case)

[17:49:43.0000] <othermaciej>
and also it's a design that matches the domain

[17:49:59.0000] <roc>
I don't see any implementation issues there

[17:51:04.0000] <othermaciej>
in that a signal and a signal processor are distinct entities

[17:51:32.0000] <othermaciej>
I don't see how making a single object represent a signal processor and its output stream is clarifying

[17:52:00.0000] <othermaciej>
and if you don't make that assumption, it seems a lot easier to get Web Audio and Media Streams to play nice

[17:53:12.0000] <othermaciej>
all that being said, I do hope these APIs get aligned nicely and I'm not much of a domain expert, so I should probably leave the architecture here to the more informed

[17:54:33.0000] <zewt>
the audio APIs i've implemented simply have output nodes; some of them happen to input from other nodes, some of them input from audio files, etc. but they're all the same type of object

[17:55:44.0000] <roc>
I don't feel that having separate objects for signal processors and output streams is clarifying, and it's definitely more objects than are needed, which at least means overhead.

[17:56:41.0000] <othermaciej>
perhaps if changing the names and APIs of the various AudioNode classes is no longer feasible, then AudioNode could subclass MediaStream

[17:56:55.0000] <othermaciej>
(assuming that was even a good idea; don't really know the intersection between the APIs)

[17:58:07.0000] <othermaciej>
in general it only means one more object (the final output), assuming signal processors can be chained without reifying the signals between them

[18:02:23.0000] <roc>
there's also a semantic issue which is that we will probably need to add the ability to pause MediaStreams (MSP does, and there are use-cases outside of MSP too, like live but non-interactive peer-to-peer transmission), and Chris doesn't want to add that to AudioNodes

[18:04:17.0000] <roc>
zewt: yeah, Web Audio has AudioNodes presenting the playback of resources too, but you can see those as signal processors if you squint hard enough

[20:08:38.0000] <JVoracek>
 

[22:24:49.0000] <annevk>
Velmont: hey, where are you staying next week?

[22:25:28.0000] <annevk>
I realized I only have plane ticket...

[22:27:21.0000] <annevk>
MikeSmith: Bugzilla is offline again...

[22:46:30.0000] <zcorpan>
not specifying the list of tag names seems like a good way to introduce differences between impls

[22:55:29.0000] <zcorpan>
zewt: having things spoken by different persons at different times in the same cue is pretty common i think

[01:45:21.0000] <jgraham>
Read spec. Think "this would be much clearer if it was written as X". Reread spec. Realise it is written as X. Sigh.

[01:47:16.0000] <Ms2ger>
Canvas in SVG, really?

[01:49:55.0000] <jgraham>
Then you can implement SVG in canvas.

[01:50:03.0000] <jgraham>
Then you have a meme.

[01:56:24.0000] <jgraham>
/me wonders how to test things that are supposed to be racy

[01:56:58.0000] <jgraham>
One option is to allow multiple pass conditions

[01:57:20.0000] <jgraham>
And then have special tests where the results of the race are well controlled

[01:57:47.0000] <jgraham>
So, I guess it would be useful if testharness.js supported multiple pass conditions

[02:09:26.0000] <MikeSmith>
annevk: looks like they re-fixed the db problem and bugzilla is back up

[02:09:37.0000] <MikeSmith>
db is getting corrupted for some reason

[02:09:56.0000] <annevk>
thanks

[02:10:27.0000] <jgraham>
MikeSmith: Maybe if you paid it better, it wouldn't be so open to bribery

[02:10:32.0000] <jgraham>
Ahem

[02:10:44.0000] <jgraham>
Anyway what I actually wanted to say was

[02:10:47.0000] <MikeSmith>
heh

[02:11:05.0000] <jgraham>
Ms2ger: Any thoughts on multiple pass condition syntax

[02:11:41.0000] <jgraham>
I can think of assert_equals(foo, any(a, b, c))

[02:12:05.0000] <Ms2ger>
How assert_in(foo, [a, b, c])?

[02:12:11.0000] <Ms2ger>
s//about/

[02:12:12.0000] <jgraham>
Or assert_any(assert_equals, foo, a, b, c)

[02:12:26.0000] <Ms2ger>
Hmm

[02:12:50.0000] <jgraham>
Ms2ger: assert_in doesn't really work for non-assert_equals cases

[02:14:16.0000] <Ms2ger>
assert_any(assert_equals, foo, [a, b, c])?

[02:14:29.0000] <jgraham>
Yeah, I think that's better

[02:17:15.0000] <annevk>
MikeSmith: you staying in a hotel next week?

[02:17:25.0000] <MikeSmith>
yeah

[02:17:29.0000] <annevk>
pointer?

[02:17:30.0000] <Ms2ger>
Or just on the street?

[02:19:21.0000] <jgraham>
Set up a tent and call it "Occupy Microsoft"

[02:20:27.0000] <annevk>
I considered hiding in their bathroom and then finding a couch once everyone left the building, but I'm sure they have some kind of annoying security thing that'd prevent that

[02:21:51.0000] <MikeSmith>
Best Western Plus Mountain View Inn

[02:22:01.0000] <MikeSmith>
http://www.bestwesternmountainviewinn.com/

[02:22:16.0000] <MikeSmith>
book it through the GOogle Maps thing and it will be cheaper

[02:23:25.0000] <annevk>
thanks

[02:23:51.0000] <jgraham>
Ms2ger: Although that syntax doesn't really work if the assert isn't of the form assert_foo(actual, expected)

[02:24:27.0000] <MikeSmith>
http://maps.google.com/maps/place?q=Best+Western+Plus+Mountain+View+Inn&hl=en&cid=8890994076595056279

[02:24:57.0000] <annevk>
btw, I'm in SFO 11:50AM coming Sunday

[02:25:02.0000] <annevk>
if anyone else is there...

[02:25:21.0000] <jgraham>
assert_approx_equals seems like a special case that could have a use there

[02:26:32.0000] <jgraham>
assert_any(assert_func, [[arg11, arg12], [arg21, arg22]], description) is getting kind of ugly

[02:26:51.0000] <jgraham>
especially with assert_array_equals

[02:27:36.0000] <jgraham>
assert_any(assert_array_equals, actual, [[[1,2,3]], [[4,5,6]]])

[02:33:54.0000] <Ms2ger>
jgraham, assert_any(assert_approx_equals, actual, [1, 2, 3], 0.1)?

[02:35:50.0000] <jgraham>
Ms2ger: With the possibility to s/0.1/[0.1, 0.1, 0.2]/ ?

[02:36:22.0000] <Ms2ger>
When I see the use case :)

[02:38:00.0000] <jgraham>
Well I don't have one :) The only problem with not allowing that at first would be an assertion with a third argument that is an array

[02:39:23.0000] <jgraham>
Also this whole idea doesn't work for assert_throws, but I think I don't want it to

[02:39:50.0000] <MikeSmith>
annevk: me an plh not arriving til Monday evening

[02:40:13.0000] <MikeSmith>
annevk: will you have a Notifications meeting on Monday?

[02:57:49.0000] <annevk>
MikeSmith: could not get a place there

[02:57:55.0000] <annevk>
staying other side of town now

[02:58:01.0000] <annevk>
crappy hotel situation is crappy

[02:58:16.0000] <MikeSmith>
annevk: you got a car?

[02:58:47.0000] <annevk>
mine should be walking distance

[02:59:12.0000] <annevk>
"Quality Inn & Suites-Mountain View"

[02:59:20.0000] <annevk>
but you never know with all the highways

[03:03:04.0000] <MikeSmith>
annevk: yeah

[03:03:59.0000] <MikeSmith>
it can look like a few hundred meters on map but take you 40 minutes to walk it because of that

[03:06:27.0000] <annevk>
a review for a hotel next door said it was doable; guess I'll find out or otherwise find out if they have some kind of shuttle or just take a taxi each day ...

[03:06:54.0000] <annevk>
or arrange someone to pick me up

[03:07:07.0000] <annevk>
which reminds me, I have to get to Cupertino on Monday...

[03:07:14.0000] <annevk>
MikeSmith: are you going to that?

[03:07:38.0000] <MikeSmith>
to what?

[03:07:44.0000] <MikeSmith>
Notifications meeting?

[03:07:47.0000] <annevk>
yeah

[03:07:52.0000] <MikeSmith>
nope

[03:07:54.0000] <annevk>
k

[03:07:56.0000] <MikeSmith>
won't get there in time

[03:08:08.0000] <MikeSmith>
I think we land at 19:30 or something

[03:08:14.0000] <annevk>
oh that's late

[03:08:46.0000] <MikeSmith>
other days, plh can probably give you a ride if you want to instead of walking

[03:12:15.0000] <annevk>
ooh, my hotel is next to Nasa

[03:12:46.0000] <Ms2ger>
<glazou> there is no css wg

[03:12:56.0000] <Ms2ger>
[Actual quote]

[03:14:42.0000] <annevk>
but there is a CSS WG?

[03:14:55.0000] <annevk>
more context?

[03:15:26.0000] <Ms2ger>
http://krijnhoetmer.nl/irc-logs/developers/20120427#l-1090

[03:17:02.0000] <jgraham>
Nothing like a little light blame deflecting to start the day

[03:17:14.0000] <annevk>
karlcow often brings up the same point about the W3C

[03:17:53.0000] <annevk>
in both cases though, browser vendors did put their concerns and problems forward, they were just dismissed

[03:18:43.0000] <annevk>
and if you dismiss a problem it'll be solved elsewhere

[03:18:47.0000] <MikeSmith>
every groups has leaders

[03:19:29.0000] <MikeSmith>
the people who are responsible for addressing the problems

[03:19:32.0000] <annevk>
(it'll also be solved elsewhere if you acknowledge the problem and take no appropriate action)

[03:19:45.0000] <karlcow>
hmm too sleepy still to enter into the rationales ☺ about social groups. just woke up

[03:20:16.0000] <annevk>
we need a bot that gives people coffee

[03:20:25.0000] <annevk>
or tea, I don't drink coffee

[03:20:26.0000] <Ms2ger>
/me passes karlcow the coffee

[03:20:35.0000] <Ms2ger>
/me passes annevk a beer

[03:21:33.0000] <jgraham>
WGs can be echo chambers. This affects the perception of what the most critical problems are

[03:22:11.0000] <MikeSmith>
cough TC39 cough

[03:22:12.0000] <annevk>
jgraham: heh yeah, CSS focused on print/text for years when everyone was having layout problems

[03:22:39.0000] <jgraham>
Aslo CSS WG hasn't really considered shipping to be a critical problem

[03:23:12.0000] <annevk>
in a way, but in a way shipping and process dominates every discussion

[03:23:59.0000] <jgraham>
Right, but not, afaict, in a "how can we make this much much faster?" way

[03:24:53.0000] <jgraham>
Perhaps I am wrong, but it feels like the tendency is to go in the "how can we add process and delay shipping" way

[03:25:37.0000] <jgraham>
(I suppose this is changing now)

[03:26:36.0000] <annevk>
dunno if it's changing, everything is now split over several drafts instead

[03:26:57.0000] <annevk>
if a feature has some kind of issue it's moved to another draft, but I've no idea who makes sure the whole thing still makes sense

[03:27:00.0000] <annevk>
probably nobody

[03:44:13.0000] <annevk>
MikeSmith: btw, ij said you might know about archiving whatwg⊙wo on lists.w3.org

[03:44:26.0000] <MikeSmith>
yeah, I know something

[03:44:45.0000] <MikeSmith>
I need to re-start that discussion with others

[03:45:20.0000] <annevk>
kk

[03:45:28.0000] <MikeSmith>
it seems like everything thinks it's a good idea, I just need to follow up on it

[03:46:42.0000] <zcorpan>
you discuss it with things?

[03:46:56.0000] <zcorpan>
i guess that's a good way to do it

[03:47:34.0000] <jgraham>
First you ask your cat, then you ask your beer

[03:47:39.0000] <jgraham>
Then that is everything

[03:48:30.0000] <MikeSmith>
I meant we need to everythink things

[03:48:38.0000] <MikeSmith>
that's my new motto

[03:50:03.0000] <MikeSmith>
as T.S. Eliot used it in the last line of The Wasteland

[03:50:07.0000] <karlcow>
"everythink things"

[03:50:19.0000] <MikeSmith>
"Everythanks. Everythanks. Peace out."

[03:58:13.0000] <jgraham>
Hmm, so if I have <script src="data:text/html,document.write('foo')"></script>[rest of file] pretending that data URLs take finite time to fetch, is it now racy-by-default if foo is ever inserted (and where)?

[03:59:39.0000] <jgraham>
Uh, that script should be inserted by a DOM method

[04:00:09.0000] <jgraham>
If it's parser-insered, it's not racy

[04:00:59.0000] <hasather>
jgraham: is that CORE-32270?

[04:01:42.0000] <jgraham>
hasather: That's not the case I had in mind

[04:01:49.0000] <hasather>
jgraham: ok

[04:02:15.0000] <jgraham>
I am looking at some of hallvord's script scheduling tests and reworking them to be spec compliant

[04:02:43.0000] <jgraham>
And eventually adding all the new tests needed to cover all the extra complexity people wanted here

[04:03:17.0000] <zcorpan>
data:text/html,<script>var s=document.createElement('script');s.src="data:text/html,document.write('foo')"; document.head.appendChild(s);</script>[rest of file]

[04:03:19.0000] <zcorpan>
?

[04:03:34.0000] <jgraham>
Yes

[04:03:55.0000] <zcorpan>
i get foo in opera but not in gecko or chrome

[04:03:59.0000] <jgraham>
Where we engage in the fiction that the data URL is actually the equivalent HTTP url

[04:04:42.0000] <jgraham>
Right

[04:04:53.0000] <jgraham>
Opera isn't very spec-compliant here

[04:05:25.0000] <jgraham>
Per-spec, I think that foo is written if the insertion point is defined at the time that the script is run

[04:05:27.0000] <zcorpan>
i guess you need to write a test that delays the external script and another that delays the outer document

[04:05:34.0000] <jgraham>
Indeed

[04:06:16.0000] <zcorpan>
and the script runs when it is fetched without blocking the parser

[04:06:44.0000] <zcorpan>
does it delay the load event?

[04:07:03.0000] <jgraham>
Yes, but the insertion point is already undefined by then

[04:07:10.0000] <zcorpan>
ah

[04:07:12.0000] <jgraham>
See "The End"

[04:07:21.0000] <jgraham>
(my favourite spec subsection)

[04:08:01.0000] <jgraham>
I was kind of hoping I could just fix up the simple case to have multiple possible pass conditions and then come back and write all the delayed-resource tests at the end

[04:08:13.0000] <jgraham>
I guess I still can

[04:09:10.0000] <zcorpan>
i think i'd skip writing the "simple" test with multiple pass conditions

[04:09:23.0000] <zcorpan>
delaying resources is easy enough :)

[04:09:39.0000] <jgraham>
Well that test already exists, it justhas the wrong pass condition(s)

[04:09:46.0000] <zcorpan>
ah

[04:10:03.0000] <zcorpan>
carry on :)

[04:10:10.0000] <jgraham>
And keep calm?

[04:11:02.0000] <zcorpan>
depends on the circumstances

[04:14:48.0000] <Velmont>
07:26 < annevk> Velmont: hey, where are you staying next week?

[04:14:56.0000] <Velmont>
Uhh. Dunno! Actually. Should fix that.

[04:22:51.0000] <annevk>
Velmont: I'm staying at "Quality Inn & Suites-Mountain View" prolly not so much quality given it's in the name

[04:24:40.0000] <gsnedders>
hsivonen: Before you start mass-buying TVs to test big-endian WebGL, none of them do, contrary to what I said before.

[04:26:43.0000] <Ms2ger>
Hmm

[04:27:19.0000] <Velmont>
annevk: OK. Goodie. I'll look at it then :P I did not see it because my search was for cheapest.

[04:27:20.0000] <Ms2ger>
/me dumps a couple of tvs on gsnedders's doorstep

[04:27:43.0000] <gsnedders>
Ms2ger: Not sure I have space in my flat :P

[04:28:18.0000] <zcorpan>
gsnedders: hang it in the ceiling

[04:29:19.0000] <Ms2ger>
*In* the ceiling?

[04:29:29.0000] <Ms2ger>
For ceiling cat?

[04:29:34.0000] <zcorpan>
yeah

[04:30:12.0000] <zcorpan>
/me should work a bit on his swenglish

[04:43:25.0000] <gsnedders>
It's so sad when major sites refuse to support non-WebKit mobile browsers :(

[04:44:16.0000] <smaug____>
it is

[04:44:42.0000] <smaug____>
gsnedders: btw, Opera doesn't have a browser for N9 ?

[04:44:59.0000] <smaug____>
/me would like to replace the crappy default browser

[04:45:44.0000] <jgraham>
http://dev.opera.com/articles/view/a-treat-for-nokia-n9-users-opera-mobile-labs-11-5/

[04:46:03.0000] <jgraham>
It's not a real release

[04:46:08.0000] <jgraham>
But it exists

[04:46:13.0000] <smaug____>
oh,

[04:47:28.0000] <smaug____>
/me tries

[04:50:09.0000] <Velmont>
smaug____: It's not A+...

[04:50:35.0000] <Velmont>
Sadly. -- We should get the native keyboard working.

[04:51:18.0000] <Velmont>
But other than that it works very well, and I use it on my N9.

[04:51:57.0000] <smaug____>
crashed :(

[04:52:07.0000] <smaug____>
but the UI looks better than in the default

[04:52:11.0000] <smaug____>
panning is a bit slow

[04:52:33.0000] <Velmont>
Oh, I never got it to crash.

[04:52:58.0000] <smaug____>
but I'll play around with it

[04:53:05.0000] <smaug____>
jgraham: thanks

[04:54:03.0000] <hsivonen>
gsnedders: none of them are big-endian or none support WebGL?

[04:55:33.0000] <gsnedders>
hsivonen: None are both big-endian *and* support WebGL

[04:55:58.0000] <Philip`>
Do they lack WebGL support because they are big-endian, or is that just a coincidence?

[04:56:09.0000] <hsivonen>
just what I was about to ask

[04:56:28.0000] <gsnedders>
Philip`: Coincidence.

[04:57:06.0000] <hsivonen>
were the TVs Opera demoed WebGL on little-endian or did they end up shipping without the demoed feature?

[04:59:02.0000] <gsnedders>
hsivonen: LE

[04:59:18.0000] <hsivonen>
hmm. Opera uses .tar.xz. I haven't seen that before.

[04:59:19.0000] <hsivonen>
gsnedders: ok

[04:59:20.0000] <gsnedders>
hsivonen: Almost all the TVs we ship on are LE to start with.

[04:59:38.0000] <hsivonen>
is this .xz a new thing or have I been living under a rock?

[05:00:09.0000] <Philip`>
hsivonen: It's not that uncommon - http://ftp.gnu.org/gnu/libc/ has some since two years ago

[05:00:47.0000] <Philip`>
hsivonen: Modern versions of tar will automatically decompress it (via 'tar xJf foo.tar.xz')

[05:01:10.0000] <hsivonen>
Philip`: ok.

[05:02:00.0000] <charlvn>
http://en.wikipedia.org/wiki/Xz

[05:02:22.0000] <charlvn>
i have to be honest, i have never encountered this myself yet either

[05:02:30.0000] <Philip`>
(It's the same compression algorithm 7-Zip uses)

[05:02:38.0000] <Philip`>
(or near enough)

[05:04:53.0000] <charlvn>
ah yes, that makes sense

[05:05:01.0000] <charlvn>
http://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm

[05:05:27.0000] <charlvn>
.xz uses the LZMA2 algorithm

[05:06:20.0000] <charlvn>
it offers very good compression - i know it from 7z

[05:07:47.0000] <charlvn>
ubuntu offers a package: http://packages.ubuntu.com/precise/xz-utils

[05:09:18.0000] <Philip`>
The latest glibc looks like half the size as .xz vs .gz, so it can make a significant difference

[05:12:06.0000] <jgraham>
hsivonen: Am I missing something? Why is there only one load event in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1499 ? (In gecko)

[05:12:47.0000] <jgraham>
(also in webkit)

[05:13:01.0000] <charlvn>
Philip`: that sounds typical from my experience even with the "older" 7z format

[05:13:18.0000] <charlvn>
it should take at least a third off from text-based documents

[05:14:00.0000] <charlvn>
when the content is images, that can be different of course, can't recall testing that

[05:14:04.0000] <hsivonen>
jgraham: shouldn't you assign a function instead of a string to .onload?

[05:14:58.0000] <hsivonen>
jgraham: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1500

[05:15:12.0000] <jgraham>
Oh that does make a difference

[05:15:47.0000] <jgraham>
I thought that event handler IDL attributes were magically compiled to a funcction body

[05:15:53.0000] <jgraham>
If they were a string

[05:16:03.0000] <jgraham>
And it seems that in Opera theey are!

[05:16:13.0000] <zcorpan>
yeah that's just a funny bug in opera

[05:16:21.0000] <zcorpan>
or feature...

[05:16:22.0000] <Ms2ger>
A test!

[05:17:53.0000] <jgraham>
Well it was enough of a feature that these tests were relying on it

[05:17:57.0000] <jgraham>
/me removes that

[05:22:09.0000] <Philip`>
charlvn: As another data point: Compressing data files for some game (largely DDS textures, and Ogg Vorbis audio, and various XML/JS files) got 346MB .tar.gz vs 281MB .tar.xz

[05:23:04.0000] <Philip`>
Since people can afford the CPU cost and memory usage nowadays, and most Linuxes support .xz about as well as .gz, there's not much value in sticking with .gz any more

[05:23:29.0000] <jgraham>
Is it faster/better than bz2?

[05:24:11.0000] <Philip`>
Both, usually

[05:24:57.0000] <Ms2ger>
Hmm, Opera wants to collect statistics about the features I use

[05:25:58.0000] <Philip`>
Ms2ger: You're weird and would pollute their data

[05:26:06.0000] <Ms2ger>
I said no :)

[05:26:48.0000] <Philip`>
/me wonders if they make any attempts to filter out people who do strange things like run test cases

[05:29:37.0000] <Ms2ger>
Velmont!

[05:29:44.0000] <Ms2ger>
How is the assert_throws thing? :)

[05:31:11.0000] <Philip`>
jgraham: (Oh, actually it seems at the default settings xz is several times slower to compress than bzip2, though it's also several times faster to decompress, and compresses much better)

[05:33:33.0000] <Philip`>
jgraham: (and "xz -0" is both faster than "bzip2 -1" and compressier than the default "bzip2 -9")

[05:38:31.0000] <hsivonen>
aargh. where have the gstreamer -dev packages gone in Ubuntu 12.04?

[05:39:52.0000] <hsivonen>
prefixed with "lib" how logical

[06:11:55.0000] <zewt>
zcorpan: if it's at different times, it should be different cues, since the time is different

[06:13:05.0000] <zcorpan>
zewt: not if the time between is short enough

[06:13:28.0000] <zcorpan>
zewt: spoken words are also at different times, but you don't put every word in different cues :)

[06:14:33.0000] <zcorpan>
e.g. "let's go!" "OK!" seems reasonable to put the same cue, for instance

[06:14:49.0000] <zcorpan>
s/, for instance//

[06:15:23.0000] <zewt>
zcorpan: it's definitely separate in my experience, and I'd put them separately even if they were speaking over each other (why would they not be?)

[06:16:33.0000] <zewt>
seems strange to merge separate lines of dialogue into a single cue just because they're close in time; seems inconsistent and I can't think of any point

[06:18:00.0000] <zcorpan>
i don't see what's strange about it

[06:18:17.0000] <zcorpan>
in fact webvtt has tags for this use case, if you want to style them differently

[06:18:41.0000] <zcorpan>
<v Bob>Wassup?

[06:18:41.0000] <zcorpan>
<v Alice>Nothin'

[06:19:06.0000] <zewt>
that would be a very poorly-timed caption

[06:19:45.0000] <zcorpan>
i see this all the time with swedish subtitles

[06:20:04.0000] <zewt>
maybe swedish subtitles are bad? heh

[06:20:12.0000] <zewt>
can't recall ever seeing it myself

[06:20:53.0000] <zcorpan>
i could run a grep on the srt data to find cues that start with a dash

[06:21:35.0000] <zewt>
dashes in subtitles? sounding even worse :)

[06:23:10.0000] <thiessenp>
Can anyone point me to a great PDF or offline reference that is not as dense as the ECMAScript documentation? I often use the MDC JS reference but it would be nice to have an offline ref as well.

[06:23:21.0000] <zewt>
"great PDF" is a peculiar turn of phrase

[06:32:48.0000] <zewt>
awesome, now somebody's posting with a name that shows up as "w3c" in gmail

[06:33:07.0000] <Ms2ger>
Use thunderbird ;)

[06:33:26.0000] <zewt>
"this pit of snakes sucks, I need to move into a live volcano" D:

[06:33:40.0000] <Ms2ger>
:D

[06:36:29.0000] <zewt>
cool, somebody else at moz decided to bang his head against the typed array endianness thing

[06:36:36.0000] <zewt>
/me *peanuts*

[06:37:29.0000] <Ms2ger>
He expects push-back ;)

[06:39:22.0000] <zcorpan>
zewt: grep -aPhrB2 "^\s*-\s*[^\s\-]+(\r\n|\r|\n)^\s*-\s*[^\s\-]+" srt-samples > srt-dialogue.txt resulted in a 40MB file (srt-samples is 4GB)

[06:40:27.0000] <zcorpan>
zewt: http://simon.html5.org/dump/srt-dialogue.txt.zip

[06:47:36.0000] <zewt>
zcorpan: at a quick look these look like *really* bad subtitles

[06:48:47.0000] <zewt>
captions should appear timed to the dialogue they correspond to; these will appear earlier, out of sync, breaking the intuitive connection between them

[06:50:47.0000] <zewt>
afk, off to work

[07:30:57.0000] <karlcow>
https://twitter.com/#!/masinter/status/195880829946314753

[08:32:38.0000] <kennyluck>
i don't think the prefix problem can be solved anywhere.

[08:39:18.0000] <Hixie>
MikeSmith: my plan is to update the "is this html5" section in a few weeks once we have an editor for the rec spec

[08:39:32.0000] <Hixie>
MikeSmith: i'm leaving it until then to avoid churn

[08:39:40.0000] <Hixie>
MikeSmith: i've saved your suggestions though

[08:39:46.0000] <MikeSmith>
thanks man

[08:39:53.0000] <MikeSmith>
that sounds like a reasonable plan

[08:50:42.0000] <Ms2ger>
A rec spec?

[09:11:53.0000] <dglazkov>
good morning, Whatwg!

[09:15:13.0000] <Ms2ger>
Bonsoir

[10:33:52.0000] <JVoracek>
 

[10:38:03.0000] <rniwa>
AryehGregor: yt?

[10:51:55.0000] <jgraham>
A good clue that you don't have a cognet argument: you find yourself making arguments of the form "Y would be bad, therefore X is bad" when there is no explicit or implicit relationship between X and Y

[10:52:39.0000] <Ms2ger>
Godwin

[10:52:53.0000] <jgraham>
er cognizant

[11:01:35.0000] <Philip`>
jgraham: Surely you meant cogent?

[11:02:44.0000] <Philip`>
That seems much closer in Levenshtein distance, and also seems to make more sense in the sentence

[11:14:31.0000] <jgraham>
I think I meant "cognizant argument", in the sense of "an argument that you had fully thought through",  but though cognet. And then misspelt it.

[11:14:42.0000] <jgraham>
*thought

[11:15:03.0000] <jgraham>
Perhaps that is an abuse of the word

[11:25:04.0000] <MikeSmith>
cognizant argument rings true to me

[11:27:36.0000] <MikeSmith>
though it seems far more common for it to be used in the pattern "be cognizant of" <something>

[11:29:13.0000] <Philip`>
The arbiter of truth (Google) says "cognizant argument" scores 4,090 on the correctEnglishometer while "cogent argument" scores 265,000, which is a clear victory

[11:30:29.0000] <arunranga>
/me mumbles something about cognizant semantics.

[11:30:34.0000] <Philip`>
/me would tend to interpret cognizant as meaning merely "aware", not "fully thought through"

[11:31:59.0000] <Philip`>
(and it's weird to say that an argument is aware of anything)

[11:32:17.0000] <TabAtkins_>
Yeah, I'm thinking "cognizant" isn't the word you want here.

[11:32:49.0000] <arunranga>
zewt, ping

[14:40:44.0000] <gsnedders>
So if I'm right, the easiest way to get big-endian WebGL is run Linux on a PPC Mac using Nouveau 3D?

[15:12:20.0000] <Hixie>
heycam|away: there's no way to give an argument list of the form  (arg1, [arg2, arg3, [arg4]])  right?

[15:12:29.0000] <Hixie>
where square brackets denote optional segments

[15:12:54.0000] <Hixie>
as in the equivalent of an overload list of (arg1), (arg1, arg2, arg3), (arg1, arg2, arg3, arg4)

[15:13:09.0000] <Hixie>
heycam|away: the reason i ask is that it'd be nice to be able to give defaults to arg2 and arg3 in a case such as this

[15:13:27.0000] <Hixie>
so that i don't have to cover the case of them being omitted in prose

[15:13:46.0000] <TabAtkins_>
What's the specific reason why (arg1, arg2) isn't allowed?

[15:14:58.0000] <Hixie>
args 2 and 3 are typically an x,y coordinate pair, or start,end index pair

[15:15:18.0000] <TabAtkins_>
Ah.

[15:15:56.0000] <TabAtkins_>
Most computer languages are annoying due to their inability to easily represent multi-part data like that.

[15:16:14.0000] <TabAtkins_>
I alwasy appreciate CSS when I design a function that just takes a <position> or something. ^_^

[15:16:54.0000] <Hixie>
yeah

[15:36:09.0000] <zewt>
well, arrays are usually fine for that

[15:36:44.0000] <zewt>
python has tuples, but they're really little more than an optimization of arrays

[15:41:09.0000] <Hixie>
sane languages have structs or records

[15:41:29.0000] <Hixie>
similar to webidl dicts

[15:44:13.0000] <zewt>
well, every high-level language has a native dictionary/mapping type

[15:48:18.0000] <Hixie>
i meant something with declared fields

[15:48:22.0000] <Hixie>
not like perl hashes or JS objects

[15:48:40.0000] <Hixie>
i guess i'm really talking about typed vs untyped

[15:48:46.0000] <Hixie>
/me misses strong typing

[15:48:50.0000] <zewt>
those are pretty out of place in dynamically-typed languages

[15:49:14.0000] <Hixie>
right

[15:54:18.0000] <TabAtkins_>
If it wasn't for the fact that all the canvas APIs already accept their x,y pairs as separate arguments, I'd argue that you should accept a 2-array.

[15:54:34.0000] <TabAtkins_>
foo(bar, [x,y], baz)

[15:54:47.0000] <TabAtkins_>
The syntax is lightweight in JS, and more understandable.

[15:56:48.0000] <Hixie>
is there away to define default values for optional arrays?

[15:56:54.0000] <Hixie>
cause if not, my original question stands :-)

[15:57:12.0000] <TabAtkins_>
In IDL? I dunno.


2012-04-28
[23:48:42.0000] <Ms2ger>
Hixie, no, overloads + prose is the way to go

[01:16:37.0000] <annevk>
or dictionary

[01:19:38.0000] <Ms2ger>
Well, yes, but that's inconsistent with the rest of the API

[10:20:50.0000] <GPHemsley>
Does anyone here have moderator privileges to the ietf-http-wg mailing list?

[10:34:19.0000] <MikeSmith>
GPHemsley: I do

[10:34:22.0000] <MikeSmith>
I think

[10:34:25.0000] <MikeSmith>
something you need?

[11:33:33.0000] <GPHemsley>
MikeSmith: I sent a message on Apr 22 that was moderated and still hasn't gotten approved

[11:37:17.0000] <MikeSmith>
GPHemsley: OK, that can only be handled by the list moderator

[11:37:26.0000] <MikeSmith>
which I'm not for that list

[11:37:28.0000] <GPHemsley>
ah, darn

[11:37:33.0000] <MikeSmith>
it's Yves Lafon

[11:37:42.0000] <MikeSmith>
please e-mail him at ylafon⊙wo

[11:37:49.0000] <MikeSmith>
and ask him to approve it

[11:42:01.0000] <GPHemsley>
done, thanks

[14:48:15.0000] <cbright6062>
is there a problem with the wiki right now? Because I keep getting database errors.

[14:54:57.0000] <JVoracek>
 

[14:57:55.0000] <MikeSmith>
cbright6062: seems to be working fine for me

[15:13:25.0000] <cbright6062>
hmmm...

[15:13:29.0000] <cbright6062>
it seems specific to this page: wiki.whatwg.org/wiki/Authoring

[15:13:37.0000] <cbright6062>
http://wiki.whatwg.org/wiki/Authoring*

[15:15:29.0000] <MikeSmith>
cbright6062: yeah, I can't even get that page to load

[15:15:32.0000] <MikeSmith>
weird

[15:15:40.0000] <MikeSmith>
oh

[15:15:53.0000] <MikeSmith>
yeah, it loaded but I get a DB error message too

[15:16:09.0000] <cbright6062>
it's odd.

[15:16:17.0000] <MikeSmith>
indeed

[16:11:07.0000] <cbright6062>
I have a question for anyone who can answer.  I was interested in contributing to the blog.  May I ask, what are the guidelines/etc for writing?  I had a few articles in mind concerning the semantic HTML elements, among other things.


2012-04-29
[19:25:27.0000] <Hixie>
cbright6062: basic guidelines are remain vendor-neutral (i.e. don't promote browsers, books, etc), remain objective as much as possible, use an informal tone, and remain precise. Also, the usual WHATWG values, e.g. pragmatism, results matter, etc

[19:35:32.0000] <cbright6062>
Hixie: Alright, that works fine.  What do I have to do to get started?

[19:36:20.0000] <cbright6062>
It said on the blog to come to the IRC (which, I've already been around here for a few days as it is.)

[19:58:25.0000] <Hixie>
not really anything to do short of writing whatever it is you want to say :-)

[20:00:58.0000] <cbright6062>
ah.  I meant along the lines of the process.  Do I write it and submit it here, then?  Or, how do I actually go about that?

[20:02:59.0000] <Hixie>
oh, once you have something, just say here

[20:05:59.0000] <cbright6062>
alright.

[20:06:58.0000] <cbright6062>
by the way, final question: Does my post have to be exclusive to the WHATWG blog, or is it fine if I post it later on my own website as well?

[20:07:34.0000] <Hixie>
no problem with posting things elsewhere, though note that anything posted on the whatwg blog is under the MIT license so anyone else can post it too

[20:07:50.0000] <Hixie>
(and change it)

[20:08:34.0000] <cbright6062>
I'm fine with that.

[20:10:38.0000] <cbright6062>
besides, if they do change it, it doesn't really hurt much, for a single reason: If I post something, which will be written from my perspective and may contain my opinions if needed.  And someone reposts it elsewhere and changes it, it ceases to be my opinion :P

[20:10:42.0000] <cbright6062>
so yeah, I don't mind. lol

[08:56:37.0000] <zewt>
https://www.khronos.org/webgl/public-mailing-list/archives/1204/msg00314.html gross

[09:00:18.0000] <Philip`>
/me likes how The Witcher 2 handles context loss/restore (in DirectX) by making all the characters in the world either disappear or stand up perfectly straight with their arms held out horizontally, until you unpause the game again

[09:00:36.0000] <Philip`>
Context loss is hard :-(

[09:01:06.0000] <zewt>
but this isn't context loss

[09:01:53.0000] <zewt>
they're using the context loss mechanism (added for the "context pulled out from under you by the OS" case) and repurposing it to make web developers deal with low memory

[09:03:51.0000] <zewt>
also the idea of dealing with a rare problem by intentionally making it worse seems fundamentally a little crazy

[10:56:38.0000] <MikeSmith>
GPHemsley: http://wiki.whatwg.org/wiki/Authoring seems to be working OK now

[11:21:43.0000] <GPHemsley>
MikeSmith: ?

[11:31:24.0000] <MikeSmith>
ah, sorry

[11:31:50.0000] <MikeSmith>
GPHemsley: I thought you had been asking about that page but I remember now it wasn't you :)

[11:31:59.0000] <GPHemsley>
:)

[16:00:38.0000] <heycam>
Hixie, no there is no way to do that, sorry, you'll need to describe the defaults in prose

[16:01:15.0000] <heycam>
if you were inventing from scratch I'd say foo(blah, { x: 20, y: 40 }, blah) looks nice


2012-04-30
[21:11:15.0000] <Velmont>
Thought I had booked a hotel now, but I left it mid-process I guess. Hmz. Room for 4 persons for one person, -- crazy room types at quality inn and suites mountain view

[00:01:02.0000] <nesta_>
good morning!

[01:54:58.0000] <matjas>
zcorpan: re: http://twitter.com/zcorpan/status/195834345972445186 did anyone guess the answer yet? I’m really curious

[02:01:04.0000] <zcorpan>
dunno, haven't checked twitter yet :)

[02:01:24.0000] <zcorpan>
seems not

[02:02:16.0000] <zcorpan>
i'll give you some more time to find out (or curse me). ;)

[02:08:22.0000] <matjas>
FFFFFFFFFFFFFFUUUUUUUUUUUUUUUUU

[02:27:34.0000] <Ms3ger>
zcorpan: el.style.filter, WebKit

[02:29:18.0000] <matjas>
Ms3ger: but that’s a string, so it doesn’t count

[02:29:41.0000] <matjas>
only objects that aren’t primitives

[03:01:02.0000] <zcorpan>
Ms3ger: that's what i was thinking of, yeah (though i haven't looked into how it works, indeed it looks like it's a string), and some others we have introduced in opera recently (attachEvent and its friends)

[03:01:34.0000] <Ms3ger>
Boo, Opera ;)

[03:02:28.0000] <zcorpan>
attachEvent seems to be a compat balance that's not so easy

[03:05:49.0000] <zcorpan>
i can't get the 'filter' property to do anything in webkit (though -webkit-filter seems to be supported)

[03:05:55.0000] <zcorpan>
what am i doing wrong?

[04:06:05.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1501 - false in safari and chrome. style.filter quirk dropped?

[06:38:55.0000] <zcorpan>
annevk: apparently flash can go fullscreen without opt-in from the embedder... http://forums.whatwg.org/bb3/viewtopic.php?f=3&t=4563

[06:39:04.0000] <zcorpan>
i.e. in an iframe

[06:55:40.0000] <zcorpan>
"JSON is not versioned, and has no mechanism for revision. JSON cannot change." http://inkdroid.org/journal/2012/04/30/lessons-of-json/

[06:56:06.0000] <zewt>
nice nonsense conclusion

[07:27:50.0000] <annevk>
zcorpan: I think it is probably better to disallow that

[07:27:56.0000] <annevk>
zcorpan: we disallow popups too after all

[07:29:38.0000] <annevk>
"Some people complained that the X in AJAX stood for XML, and therefore JSON should not be used." this article is hilarious

[07:34:08.0000] <annevk>
zcorpan: hmm, we only disallow popups from sandboxed iframes I guess

[07:34:48.0000] <annevk>
zcorpan: I think the idea was to be stricter because it's potentially annoying, but having to embed youtube with all these attributes is annoying too

[07:38:47.0000] <zcorpan>
there's lots of legacy that embed videos that currently use flash

[07:39:11.0000] <zcorpan>
which means it's hard for video sites to switch to <video> if they can't use fullscreen for the legacy embedders

[07:39:27.0000] <zcorpan>
anyway, gotta go

[07:58:17.0000] <jzaefferer>
MikeSmith: vnu.jar is working great, we've integrated it via http://github.com/jzaefferer/grunt-html - one thing that could be useful: ignoring specific errors. Would that be feasible to add/expose?

[07:59:33.0000] <annevk>
why would you want to do that?

[08:00:47.0000] <MikeSmith>
jzaefferer: yeah, I had been expecting you guys might say there were particular errors you didn't care to be emitted dozens of times

[08:01:15.0000] <MikeSmith>
one answer is, update your HTML documents so that they conform to the spec :)

[08:01:42.0000] <MikeSmith>
jzaefferer: but to be clear, you mean errors and not just warnings, right?

[08:02:25.0000] <MikeSmith>
it would help me to know which particular errors are the ones you'd want to ignore

[08:02:40.0000] <jzaefferer>
MikeSmith: yeah, errors, though so far I can't say I really noticed a difference in the output

[08:02:48.0000] <MikeSmith>
OK

[08:03:16.0000] <MikeSmith>
well, there is no good way for us to make the configurable even if we wanted to

[08:03:19.0000] <jzaefferer>
For now we're just not validating files like this: https://github.com/jquery/jquery-ui/blob/master/demos/tabs/ajax/content1.html

[08:03:33.0000] <MikeSmith>
ah ywah

[08:03:35.0000] <MikeSmith>
*yeah

[08:03:47.0000] <MikeSmith>
scott_gonzalez or you mentioned that earlier

[08:03:47.0000] <MikeSmith>
t

[08:04:04.0000] <jzaefferer>
Elsewhere we've got an invalid <object> element, used for certain focus-related tests

[08:04:06.0000] <MikeSmith>
the fact that it's a document fragment, doesn't have a title element or document

[08:04:12.0000] <jzaefferer>
Fixing the markup breaks the test

[08:04:23.0000] <MikeSmith>
interesting

[08:04:36.0000] <jzaefferer>
That would be a better candidate to skip the error/warning, as the rest of the file is valid

[08:04:39.0000] <MikeSmith>
that case should be reported as a possible spec bug I guess

[08:04:58.0000] <jzaefferer>
Maybe, but could also be some mess on our side

[08:05:01.0000] <scott_gonzalez>
jzaefferer: I need to look into the <object> error.

[08:05:22.0000] <jzaefferer>
Just wanted to check if there's generally a way to configure reporting per error type

[08:05:23.0000] <scott_gonzalez>
It's possible the test is just bad. That's why I didn't really want anyone fixing the markup in that file :-P

[08:05:29.0000] <MikeSmith>
OK

[08:06:59.0000] <scott_gonzalez>
MikeSmith: Here's the specific line that we're getting an error for: https://github.com/jquery/jquery-ui/blob/master/tests/unit/core/core.html#L64

[08:07:00.0000] <MikeSmith>
well, as far as suppressing errors the only thing I can suggest is to run the vnu output through some simple post-processing filter

[08:07:08.0000] <MikeSmith>
like, grep -v

[08:07:16.0000] <scott_gonzalez>
The related tests are about whether the element is focusable/tabbable.

[08:07:16.0000] <MikeSmith>
/me takes a look

[08:07:28.0000] <MikeSmith>
codebase?

[08:07:32.0000] <scott_gonzalez>
Updating that causes the tests to fail in IE 6.

[08:07:36.0000] <MikeSmith>
ah

[08:07:51.0000] <scott_gonzalez>
But I just need to spend some time figuring out whether the updated markup was correct.

[08:08:04.0000] <scott_gonzalez>
There used to be a lot of invalid markup in that test fixture.

[08:08:26.0000] <scott_gonzalez>
Because we were testing lots of invalid cases to make sure we got the "correct" results in the tests.

[08:08:26.0000] <MikeSmith>
object stuff is messy

[08:08:29.0000] <MikeSmith>
ah

[08:08:52.0000] <scott_gonzalez>
I ended up just deleting all of the other invalid markup a while ago.

[08:09:17.0000] <scott_gonzalez>
Realizing that it didn't make sense to have tests around invalid markup since if anyone ever reported a bug about it, we would close the bug as invalid anyway.

[08:09:52.0000] <MikeSmith>
heh

[08:09:54.0000] <MikeSmith>
yeah

[08:09:58.0000] <scott_gonzalez>
Yeah, objects are definitely messy. I don't even remember how I ended up with the markup that we have. It's been a long time.

[08:10:28.0000] <scott_gonzalez>
I remember spending weeks on that code though, trying to figure out markup and tests that made sense for all browsers.

[08:11:21.0000] <MikeSmith>
OK, well, for that specific example, I think you could maybe make a case that codebase should be "obsolete bug conforming"

[08:11:34.0000] <MikeSmith>
in which case, vnu would generate a warning for it instead of an error

[08:11:52.0000] <MikeSmith>
but I think it would be an uphill battle to make that case

[08:28:50.0000] <annevk>
https://twitter.com/apple curious

[08:29:39.0000] <michel_v>
did they ever have a twitter account?

[08:30:11.0000] <michel_v>
it's not like they would have much to talk about. "Hi everybody! We're working on something great! But everyone's under NDA!"

[08:30:20.0000] <michel_v>
"Stay tuned!"

[08:38:26.0000] <JVoracek>
 

[09:54:38.0000] <dglazkov>
good morning, Whatwg!

[09:55:13.0000] <annevk>
morning dglazkov

[09:55:17.0000] <Hixie>
is there no way in JS to push an array of items onto an array?

[09:55:22.0000] <Hixie>
concat returns a new array

[09:55:30.0000] <annevk>
for once it's morning for me too :)

[09:55:30.0000] <Hixie>
push() seems to just take one item

[09:56:08.0000] <annevk>
a.push.apply(a, b) via stackoverflow

[09:56:37.0000] <annevk>
-- http://stackoverflow.com/questions/1374126/how-to-append-an-array-to-an-existing-javascript-array

[09:58:04.0000] <Ms2ger>
Morning

[10:03:36.0000] <annevk>
Ms2ger: no longer in Europe?

[10:16:23.0000] <dglazkov>
WAT! Ms2ger is coming to F2f!!

[10:36:28.0000] <gsnedders>
Does this mean we have to work out how to pronounce "Ms2ger"?

[10:42:34.0000] <Philip`>
"Em ess tooger" ('tooge' as in 'stooge'), surely?

[10:48:22.0000] <dglazkov>
"Mastuger!"

[10:53:10.0000] <hober>
"miss toogah"

[10:56:01.0000] <dglazkov>
oooh, miss. I miss-ed that.

[11:06:56.0000] <rafaelw_>
hsivonen: ping.

[11:13:40.0000] <annevk>
hober: on my way

[11:13:52.0000] <annevk>
hober: well sort of, taxi is on its way first

[12:05:08.0000] <timeless>
/me needs to go to airport to catch flight

[12:27:00.0000] <Ms2ger>
weinig++

[14:16:58.0000] <annevk>
notifications meetup outcome: http://lists.w3.org/Archives/Public/public-web-notification/2012Apr/0018.html

[14:22:23.0000] <roc>
it's sort of annoying that html5rocks.com is really chromerocks.com

[14:25:26.0000] <annevk>
HTML5 is passé anyway

[14:30:21.0000] <miketaylr>
roc: http://www.html5r0cks.com/ is the better version

[14:35:52.0000] <gsnedders>
roc: You mean using browser prefixes is unfair? Oh no!

[14:36:05.0000] <gsnedders>
Better not try and be compatible, that's undermining the platform!

[14:36:36.0000] <roc>
have they written about that? I didn't see it

[14:37:26.0000] <gsnedders>
Written about what?

[14:38:32.0000] <tantek>
greetings whatwg'rs, who's going to the Web Apps WG f2f and/or the HTML WG f2f this week? (I'll be at both)

[14:38:39.0000] <othermaciej>
what does <http://www.html5r0cks.com> do that is Chrome-specific?

[14:38:46.0000] <othermaciej>
tantek: I'll be at HTML, probably not Web Apps

[14:39:04.0000] <annevk>
I'll be there, already in MV in fact

[14:39:07.0000] <tantek>
othermaciej - perhaps html5rocks has some -webkit- specific dependencies? kinda like apple.com/html5 ?

[14:39:33.0000] <othermaciej>
I don't even know what html5rocks is supposed to do

[14:39:39.0000] <tantek>
if it's not chromerocks.com then perhaps it's webkitrocks.com

[14:41:19.0000] <gsnedders>
I believe it uses -webkit-.

[14:46:51.0000] <annevk>
Hixie: any opinions on passing event handler attributes as members of an object initialization dictionary?

[14:49:31.0000] <annevk>
Hixie: see "Constructors" in http://dev.w3.org/2006/webapi/WebNotifications/publish/Notifications.html

[14:50:54.0000] <Hixie>
well as defined i don't think it works but in principle i guess it could work

[14:51:08.0000] <Hixie>
(i don't know what "must be assigned" means in this context)

[14:52:55.0000] <annevk>
yeah the language in that specification needs some work

[14:53:26.0000] <annevk>
I was mostly wondering because WebSocket could do something similar

[14:53:42.0000] <Hixie>
not much point with WebSocket

[14:54:09.0000] <Hixie>
the only things that need to be given to the constructor are things that the constructor needs to do its stuff

[14:54:18.0000] <Hixie>
everything else can just be set separately

[14:54:43.0000] <annevk>
so that is the case here too

[14:54:52.0000] <annevk>
so you do have an opinion :)

[14:57:01.0000] <Hixie>
i think it's just a design decision

[14:57:08.0000] <Hixie>
i mean you could go either way

[14:57:22.0000] <Hixie>
same as whether methods should return the object they were invoked on or not

[14:57:28.0000] <Hixie>
i think it's silly, but other people think it's a great api design

[14:58:40.0000] <annevk>
hmm yeah, I have resisted adding that so far

[14:58:45.0000] <annevk>
sicking keeps pushing for it

[15:07:51.0000] <annevk>
https://twitter.com/pornelski/status/197018755778351104 is brilliant

[15:09:36.0000] <miketaylr>
haha

[15:10:36.0000] <annevk>
although I think the guy he linked to might actually be serious, which is somewhat sad

[15:25:48.0000] <tantek>
Yeah, I think @Malarkey is being serious.

[15:26:44.0000] <tantek>
though I tend to wonder, is the "just implement -webkit- prefix support for EVERYTHING" crowd just a rebranding of the "Why doesn't Mozilla/Microsoft/Opera etc. 'just use WebKit' as their engine?" crowd.

[15:27:03.0000] <tantek>
WebKitist apologists as it were

[15:27:30.0000] <tantek>
(or insert web engine du jour/year/decade)

[15:27:54.0000] <tantek>
I remember when it was "why doesn't MS/Opera etc., 'just use Gecko' "

[15:27:55.0000] <othermaciej>
if anyone wants to use WebKit as their engine, we're happy to share :-)

[15:28:55.0000] <tantek>
the monoculture engineists have always been wrong from "what's good for the web" perspective. or they want to go back to the days of 90%+ Trident marketshare for some reason.

[15:29:20.0000] <tantek>
(maybe they're secretly Java-advocates trolling the web standards folks)

[15:30:17.0000] <annevk>
or Netscape 4 for that matter, which is why we have all that beautiful <table> parsing now

[15:31:55.0000] <cbright6062>
The thing that bothers me about this is that all it's doing is allowing the Webkit elitists to win.

[15:34:24.0000] <tantek>
win what?

[15:35:44.0000] <Hixie>
i like how that blog post says essentially "i have no problem with any individual member of the group, but i have a problem with the decisions the group made"

[15:35:56.0000] <Hixie>
as if groups of humans make decisions independent of the members of the group...

[15:36:04.0000] <othermaciej>
which blog post, Malarkey's?

[15:36:34.0000] <tantek>
Hixie, vice versa - sounds like he has a problem with the decisions of particular individuals in the group

[15:36:35.0000] <othermaciej>
it's well known that group decision-making can induce cognitive biases and result in decisions no individual group member would have made

[15:36:44.0000] <tantek>
= consensus

[15:37:15.0000] <Hixie>
tantek: he explicitly says that he has no trouble with individuals (See hit footnote 2)

[15:37:18.0000] <Hixie>
othermaciej: yes, that post

[15:37:19.0000] <tantek>
"decisions no individual group member would have made" is awfully similar to "least objectionable option" (AKA W3C's way of going for consensus)

[15:37:37.0000] <cbright6062>
tantek: Winning the right to call themselves the sole "proper" rendering engine.  Which is only an opinion, not a fact.

[15:37:45.0000] <tantek>
Hixie, individuals other than the decision maker who made the decision.

[15:37:56.0000] <Hixie>
othermaciej: it's true that groups make decisions that no individual may make, but that doesn't get one out of responsibility for the decision

[15:38:07.0000] <othermaciej>
Is there really such a category of people as "WebKit elitists"?

[15:38:09.0000] <annevk>
well there was not much confusion at Opera with regards to what we had to do here

[15:38:10.0000] <Hixie>
othermaciej: (this gets back to one of hte biggest problems i have with standards work at the w3c)

[15:38:19.0000] <annevk>
it was pretty much universally hated though

[15:38:36.0000] <othermaciej>
I suspect people writing WebKit-only content are doing it out of lack of testing/support bandwidth, not to hep WebKit's secret agenda of winning

[15:38:37.0000] <tantek>
annevk - I don't buy it was "necessary" for all the border-radius props

[15:38:41.0000] <tantek>
that was a gross error IMHO

[15:38:48.0000] <cbright6062>
othermaciej: Well, I would say so, from some of the people I have talked to out there.

[15:39:09.0000] <tantek>
as in - prove it - show me the list of sites that are abhorrently broken due to dependency on -webkit- border-radius props.

[15:39:29.0000] <cbright6062>
I don't consider it a "secret agenda", just an unfortunate fact of uneducated authors which are driven by the web evangilists being overly in love with webkit.

[15:39:35.0000] <annevk>
abhorrently broken was not our criteria

[15:40:04.0000] <tantek>
"doesn't quite look as pretty" ?!?

[15:40:30.0000] <annevk>
as it turns out users and clients care about that

[15:40:42.0000] <tantek>
/me waits for Opera to mimic Webkit into looking the same on http://dowebsitesneedtolookexactlythesameineverybrowser.com/

[15:40:51.0000] <zewt>
does breakage only matter if it's a mushroom cloud? heh

[15:41:39.0000] <cbright6062>
Honestly, I think the Web Browser world in general has become somewhat of a mess.

[15:41:51.0000] <annevk>
has become?

[15:42:25.0000] <cbright6062>
Well, has re-become.

[15:43:10.0000] <cbright6062>
I personally thought the IE/Firefox era of the majority of the 2000s was fairly stable in the long run.

[15:43:15.0000] <cbright6062>
Now, things are all over the place.

[15:43:40.0000] <Hixie>
tantek: dude that page looks the exact same to me on every browser i tested (three engines so far)

[15:45:19.0000] <othermaciej>
is that the joke?

[15:47:00.0000] <cbright6062>
Honestly, I really hope someday to see Web Browsers finally reach a point where it can be based off of preference only, not having to evangilize that one is "better" than the other due to web rendering abilities.

[15:47:03.0000] <karlcow>
for things like box-shadow https://github.com/miketaylr/Snort/blob/master/snort.yml#L1263

[15:47:11.0000] <tantek>
no when launched that site looked different in every browser

[15:47:18.0000] <tantek>
a bit surprised that that has changed

[15:47:48.0000] <tantek>
engines will always have different rendering abilities, so long as the web is evolving

[15:47:48.0000] <tantek>
i

[15:47:49.0000] <tantek>
f th

[15:47:50.0000] <tantek>
e

[15:47:51.0000] <tantek>
 

[15:47:53.0000] <zewt>
i can't remember the last time any site looked notably different in any browser than any other browser; that hasn't been a factor in which browser I use in years

[15:47:55.0000] <othermaciej>
cbright6062: I think that will never happen

[15:48:05.0000] <cbright6062>
I know.  It's sad.

[15:48:06.0000] <tantek>
if they all have the same rendering abilities, and that's stopped changing, then the web is dead

[15:48:12.0000] <zewt>
othermaciej: no, it happened long ago :)

[15:49:04.0000] <zewt>
i can't remember the last time I had a page not render reasonably in one browser and having to use another

[15:49:17.0000] <cbright6062>
I've never really had that issue, either.

[15:49:25.0000] <cbright6062>
Not since the Netscape days anyway.

[15:49:56.0000] <zewt>
seems like a non-issue for users, so it should be a useless thing to try to evangelize

[15:50:08.0000] <karlcow>
zewt: your tolerance to differences might be higher. Mine is quite high too.

[15:50:16.0000] <othermaciej>
unfortunately on mobile it's pretty common for sites to be broken in browsers with nontrivial share

[15:50:39.0000] <zewt>
well, mobile is its own mess

[15:50:42.0000] <karlcow>
I wish transition was not implemented at all ;) I like things which don't make me motion sick ☺

[15:50:53.0000] <cbright6062>
I will say what I think part of the problem with mobile is:

[15:51:08.0000] <cbright6062>
and part of why I think people have a webkit mindset.

[15:51:24.0000] <cbright6062>
if going by end users is any idea of what the world has become line:

[15:51:27.0000] <cbright6062>
like*

[15:51:51.0000] <cbright6062>
"Smart Phones have a little i at the start of it...or they're that droid thing or whatever it's called."

[15:52:14.0000] <bga_>
http://www.rfc-editor.org/rfc/rfc6585.txt

[15:52:27.0000] <cbright6062>
Yes, I have seen both end users and developers alike who either believe, or act like, iOS (and maybe Android) are the only Mobile devices in existance.

[15:53:14.0000] <karlcow>
cbright6062: silicon valley is sooo far from Africa and Asia ;)

[15:53:29.0000] <cbright6062>
karlcow: ?

[15:55:06.0000] <karlcow>
if some devs think that iOS/Android are the only mobile phones possible, I would say they do not travel enough. (Or more likely, I guess, they don't care about the business model for users without those)

[15:55:41.0000] <annevk>
they're pretty common in Asia these days too, dunno about Africa

[15:55:52.0000] <karlcow>
Though the last few days, I have been impressed by the number of "misconceptions" about CSS. ☺ which I guess is a kind of reality.

[15:56:13.0000] <karlcow>
annevk: look at the market share of Opera Mini in Africa

[15:56:22.0000] <zewt>
(why are you sending unicode smiley faces over IRC? heh)

[15:56:48.0000] <karlcow>
http://gs.statcounter.com/#mobile_browser-af-monthly-201103-201203

[15:56:51.0000] <zewt>
i had to paste into another app just to figure out what that was (looks like &copy; in this window)

[15:57:14.0000] <karlcow>
heh zewt. Why not, it is part of utf-8

[15:57:52.0000] <karlcow>
it reminds me 20 years ago with the controversy about accent such as é on Usenet ☺

[15:57:58.0000] <annevk>
part of Unicode

[15:59:23.0000] <karlcow>
I sent → arrows too, and ♥ hearts :)

[16:00:40.0000] <annevk>
💩

[16:03:09.0000] <karlcow>
annevk: that is my favorite!

[16:10:53.0000] <jwalden>
people are aware of <https://plus.google.com/109925364564856140495/posts>, right?

[16:11:53.0000] <zewt>
heh, gnu grep is still hopelessly broken when it comes to character ranges and unicode

[16:12:06.0000] <karlcow>
jwalden: I guess I do not get the joke.

[16:12:25.0000] <annevk>
jwalden: yeah loving it

[16:12:37.0000] <zewt>
in en_US.UTF-8, [A-Z] matches "i" and "j", but not "a" (and it shouldn't match any of them) :|

[16:12:42.0000] <jwalden>
what's not to get?  take Unicode characters, rename them in amusing ways :-)

[16:13:11.0000] <jwalden>
sort of a dig at Unicode for having so many characters for so much esoterica, but not all that seriously

[16:13:36.0000] <karlcow>
aaaah got it

[16:14:50.0000] <annevk>
still have to submit MAN WITH BAZOOKA

[16:15:38.0000] <hober>
ROTATED HEAVY MAN WITH BAZOOKA

[16:15:52.0000] <karlcow>
/me should submit 💩 as PILE OF POO 

[16:18:03.0000] <annevk>
karlcow: but that's not fake

[16:18:15.0000] <hober>
U+1F4A9

[16:18:27.0000] <karlcow>
annevk: I think the irony has been lost :)

[16:21:28.0000] <karlcow>
ﷺ

[16:23:29.0000] <jwalden>
karlcow: https://plus.google.com/109925364564856140495/posts/WVCgkLVGUZe

[16:24:04.0000] <karlcow>
ah italian ice cream

[16:24:24.0000] <karlcow>
just need a cup and a composition character

[16:42:46.0000] <kennyluck>
The Web is alive as long as the amount of useful content is increasing. Driving standards (probably) helps but I don't think it's necessary.

