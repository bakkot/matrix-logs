2016-01-01
[23:46:59.0000] <annevk>
frewsxcv: it only works on content attributes…

[00:47:52.0000] <rits>
i just changed one file for this PR https://github.com/whatwg/html/pull/455 but why the other two commits are showing in this which i did 8days ago and it didn't showed up in git diff

[00:51:31.0000] <annevk>
rits: try "git rebase origin"

[00:51:53.0000] <rits>
annevk: ok

[00:51:55.0000] <annevk>
rits: and then use "git push --force" if that did indeed clean things up locally

[00:53:01.0000] <rits>
git base origin is giving this fatal: Needed a single revision

[00:53:01.0000] <rits>
invalid upstream origin

[00:57:00.0000] <annevk>
rits: rebase

[00:57:04.0000] <annevk>
rits: not base

[00:58:56.0000] <annevk>
rits: ooh wait, maybe you need git rebase whatwg/origin or some such since you have a forked repository, hmm

[00:59:10.0000] <annevk>
/me is not that great with git

[00:59:17.0000] <rits>
yes that was the typo its of the rebase only its giving this error only

[00:59:52.0000] <rits>
annevk: me too

[01:00:06.0000] <sangwhan>
What does git status say?

[01:00:57.0000] <rits>
annevk: oh ok this is because i switched directly to the new branch from a different branch and not from master, i think

[01:01:23.0000] <rits>
sangwhan: nothing to commit, working directory clean

[01:03:09.0000] <sangwhan>
If you only want the last commit in the PR just make a new branch, cherry pick that refspec and create a new PR

[01:04:13.0000] <annevk>
MikeSmith: I can no longer build wattsi locally "ld: file not found: /usr/lib/crt1.10.5.o"

[01:04:16.0000] <annevk>
MikeSmith: seems to be where the problem is

[01:04:23.0000] <sangwhan>
Technically if you are asking for a pure git branch merge you can simply just rewrite history and force push, but I'm not sure if GH's PR web UI can gracefully handle that

[01:06:06.0000] <annevk>
Hmm, maybe it's an Xcode thing

[01:06:17.0000] <rits>
sangwhan: yeah i am making a new PR deleting the first one

[01:07:00.0000] <sangwhan>
annevk: guessing from the error you need to either symlink that file out from the osx sdk directory or add a linker directive to look for libraries in the osx sdk directory

[01:07:14.0000] <sangwhan>
Alternative theory is that you don't have the osx sdk

[01:08:01.0000] <sangwhan>
/me has no idea what wattsi is

[01:08:10.0000] <annevk>
sangwhan: https://github.com/whatwg/wattsi

[01:08:18.0000] <annevk>
sangwhan: part of the HTML standard

[01:09:28.0000] <sangwhan>
Ooh, pascal. This is something I haven't seen in a while

[01:18:08.0000] <sangwhan>
annevk: Try slipping a -L (path to your osx sdk)/usr/lib right before the -l in the fpc call inside compile.sh.

[01:19:11.0000] <sangwhan>
No idea if it will work, I'm not sure which linker directives fpc acknowledges and passes on

[01:46:11.0000] <MikeSmith>
annevk: I believe the fix is to update your XCode

[01:46:25.0000] <MikeSmith>
annevk: somebody else had the same problem a couple few weeks back

[01:46:34.0000] <MikeSmith>
and I recall that's what the fix was

[01:47:22.0000] <MikeSmith>
XCode command-line tools

[01:47:37.0000] <MikeSmith>
I think, more specifically

[01:50:33.0000] <annevk>
/me runs "xcode-select --install" and indeed stuff is downloading...

[01:55:39.0000] <annevk>
MikeSmith: seems to compile now with sudo...

[01:55:59.0000] <annevk>
MikeSmith: ton of warnings about linking to an older version than it's being built for

[02:17:26.0000] <MikeSmith>
annevk: yeah I get those older-version warnings too

[02:18:29.0000] <MikeSmith>
I think that's actually just due to that version the OS X fpc compiler

[02:19:12.0000] <MikeSmith>
I think there's nothing OSX-specific in the wattsi sources that would trigger it

[02:23:13.0000] <annevk>
So much duct tape

[02:23:52.0000] <MikeSmith>
annevk: you shouldn't need to run it under sudo to get it work

[02:24:33.0000] <MikeSmith>
if you're sure you have the latest XCode and command-line tools for it, I don't know what would cause it

[02:24:53.0000] <MikeSmith>
sometimes you have to open the XCode GUI app and accept the license

[02:25:08.0000] <MikeSmith>
e.g., after you upgrade to a newer OS X version

[02:25:31.0000] <MikeSmith>
anyway, zcorpan had the same problem a while back I think

[03:48:17.0000] <annevk>
<script type=module> is pretty exciting

[03:48:27.0000] <annevk>
2016 \o/

[03:50:44.0000] <MikeSmith>
yeah very cool to see <script type=module> happening

[03:51:21.0000] <annevk>
MikeSmith: I guess the sudo might not have been needed indeed

[03:51:36.0000] <annevk>
MikeSmith: so yeah, maybe the freepascal stuff is a bit dated

[03:54:39.0000] <MikeSmith>
actually I think it might be a common problem with the OS X linker, not specific to freepascal

[03:55:54.0000] <MikeSmith>
some stuff that OS X library stuff stuff is old and borked in various ways

[03:57:07.0000] <MikeSmith>
e.g., the OS X libc is out of date to the point that among other things it prevents apps from being able to display emoji-range unicode

[03:57:43.0000] <MikeSmith>
anyway it's still better than desktop Linux

[05:49:21.0000] <nox>
annevk: Hopefully that's the last fix on replace a child. :P

[05:49:31.0000] <nox>
Happy new year you people, btw.

[05:51:45.0000] <nox>
annevk: "The otherwise can still be its own step. "Otherwise, append attr to element.""

[05:51:50.0000] <nox>
Do you have guidelines on this?

[05:52:00.0000] <nox>
You didn't like Otherwise being its own step in replace a child.

[05:52:57.0000] <annevk>
nox: was it a distinct sentence there?

[05:54:11.0000] <annevk>
nox: I'm not a 100% sure what the guideline is, but generally if/else would be two steps, but x = cond ? y : z would be one step

[05:54:38.0000] <nox>
Ok, I see.

[05:54:46.0000] <nox>
annevk: Let me rebase that.

[05:55:07.0000] <annevk>
"1. If cond, do x. 2. Otherwise, do y." vs "Let x be 1 if cond, and 2 otherwise."

[05:55:32.0000] <nox>
annevk: I see.

[05:55:37.0000] <annevk>
Hopefully one day heycam will formalize it in IDL

[05:55:57.0000] <nox>
:)

[05:56:16.0000] <nox>
annevk: What do you think of [UnenumerableNamedProperties] directly in WebIDL, given there would be at least 6 consumers of it?

[05:56:50.0000] <annevk>
nox: [LegacyUnenumerable] wfm

[05:57:06.0000] <annevk>
nox: we need to be liberal with "Legacy" in IDL

[05:57:09.0000] <nox>
annevk: That would work, whatever the name.

[05:57:22.0000] <nox>
I just believe formalised stuff > prose.

[05:57:32.0000] <annevk>
people copy-and-paste IDL all over the place without realizing what is happening

[05:57:58.0000] <annevk>
to some extent, if it leads to folks copy-and-pasting things without understanding them though it can get ugly

[05:58:06.0000] <nox>
True.

[05:58:21.0000] <annevk>
hopefully "Legacy" takes care of that, I think it has thus far served enough of a warning sign

[05:59:36.0000] <nox>
annevk: To be sure: [🕴]. :P

[05:59:58.0000] <nox>
annevk: I guess I'll do a PR against WebIDL.

[06:00:21.0000] <nox>
annevk: This way, we won't have any trouble in Servo to upstream our LegacyUnenumerable patch. ;)

[06:00:39.0000] <nox>
[to Gecko's WebIDL parser.]

[06:02:20.0000] <nox>
annevk: https://github.com/whatwg/dom/pull/139#issuecomment-168308800 Wrong PR?

[06:02:34.0000] <nox>
Because for that PR, the spec is wrong, according to Gecko and WebKit.

[06:02:54.0000] <nox>
The current spec means that hooks for iframe and whatnot get run twice with setAttributeNode.

[06:04:32.0000] <annevk>
nox: per 116 Gecko queues two mutation records, no?

[06:05:04.0000] <nox>
annevk: I checked. Only one.

[06:05:33.0000] <nox>
annevk: https://github.com/servo/servo/pull/9061#issuecomment-167796252

[06:07:17.0000] <nox>
annevk: Did I test that wrong?

[06:07:27.0000] <annevk>
nox: ah okay, so the only thing Gecko does differently would the placing of the attribute

[06:07:46.0000] <annevk>
nox: but it does have the special casing that other browsers have too

[06:08:25.0000] <nox>
The special casing?

[06:08:40.0000] <annevk>
nox: having a special "replace" algorithm

[06:08:54.0000] <nox>
annevk: Ok.

[06:09:13.0000] <annevk>
nox: so your fix is not in line with non-Gecko browsers as you still use remove/append

[06:09:25.0000] <annevk>
nox: whereas they replace the attribute in place

[06:09:44.0000] <nox>
annevk: Didn't check that.

[06:10:02.0000] <annevk>
nox: that's the crux of 116, though the mutation observer thing came up too

[06:10:16.0000] <nox>
So I fixed the mutation thing, and 116 fixes the rest, that's it?

[06:12:08.0000] <annevk>
nox: I want you to fix 116 :-)

[06:12:48.0000] <nox>
Ms2ger and you apparently independently decided I was the new spec janitor… Damn it. :P

[06:12:54.0000] <nox>
Will try.

[06:14:37.0000] <nox>
annevk: Do we already have such replacements done somewhere in the spec, from which I could copy the wording?

[06:18:27.0000] <nox>
annevk: Addressed your other remarks.

[06:18:28.0000] <annevk>
nox: I'd accept something like "Replace _x_ with _y_ in element’s attribute list."\

[06:18:34.0000] <nox>
annevk: Oh, nice.

[06:22:12.0000] <nox>
annevk: Done.

[06:23:54.0000] <annevk>
nox: it's a bit nitpicky, but I prefer keeping the <p>s, they got accidentally removed when bikeshed was done

[06:24:13.0000] <nox>
annevk: Should I add them in the new algo I introduce?

[06:24:22.0000] <annevk>
nox: yeah, that'd be good

[06:24:42.0000] <annevk>
ta

[06:24:47.0000] <nox>
annevk: You should make a commit to fix scope-filtered and whatnot.

[06:24:53.0000] <nox>
These get changed when I run bikeshed.

[06:25:59.0000] <nox>
annevk: Done.

[06:26:25.0000] <annevk>
nox: bikeshed changes the source?

[06:26:40.0000] <nox>
-     <li><a href="https://drafts.csswg.org/selectors-4/#scope-filtered">scope-filtered</a>

[06:26:40.0000] <nox>
+     <li><a href="https://drafts.csswg.org/selectors-4/#scope_filtered">scope-filtered</a>

[06:26:59.0000] <nox>
And the references for WebIDL and Encoding.

[06:29:40.0000] <annevk>
nox: it does not merge cleanly

[06:29:51.0000] <annevk>
nox: is your bikeshed uptodate?

[06:30:05.0000] <nox>
Ah damn.

[06:32:05.0000] <nox>
annevk: Done.

[06:38:01.0000] <annevk>
Ugh, whenever I try to get the upstream version it seems I just get an old copy

[06:39:00.0000] <nox>
I pushed.

[06:39:05.0000] <nox>
So, let's blame GH?

[06:39:24.0000] <annevk>
yeah

[06:39:39.0000] <nox>
Always Blame GitHub.

[06:40:02.0000] <nox>
annevk: Don't remember if I told you,

[06:40:07.0000] <nox>
I finally sent a mail to their support,

[06:40:18.0000] <nox>
they might end up removing their use of replaceState between PR's tabs.

[07:03:13.0000] <annevk>
I wish they added rebasing and clean history support

[07:06:06.0000] <annevk>
TabAtkins: how do I suppress "This specification has neither a 'Security Considerations' nor a 'Privacy Considerations' section. Please consider adding both."?

[07:22:01.0000] <TabAtkins>
annevk: Do what it says.  (This was added at the recommendation of the TAG.)

[07:22:33.0000] <annevk>
TabAtkins: there's no switch?

[07:22:56.0000] <TabAtkins>
Haven't had need to add one.  It only shows up for specs in W3C or WHATWG space.

[07:23:05.0000] <TabAtkins>
And those specs, per TAG rec, should have such a section.

[07:23:22.0000] <annevk>
TabAtkins: well, the TAG is welcome to write them for DOM

[07:23:44.0000] <annevk>
although it depends on what they write whether the PR is accepted, since I have no idea what that would say

[07:23:58.0000] <TabAtkins>
Feel free to just do a "Security and Privacy Considerations" section with just "This spec has no security or privacy considerations."

[07:24:34.0000] <TabAtkins>
If that's wrong and there are such concerns, someone'll notice eventually and point it out.

[07:25:57.0000] <nox>
annevk: Rebasing and clean history support?

[07:26:01.0000] <nox>
annevk: Use Reviewable.

[07:26:11.0000] <nox>
annevk: I don't usually like .io apps, but reviewable.io is fine.

[07:27:38.0000] <gsnedders>
nox: can you easily see what comments refer to after rebasing then?

[07:27:49.0000] <gsnedders>
nox: esp. if it's just a simple rebase onto masteR?

[07:27:52.0000] <nox>
gsnedders: That's the main point of it, yes.

[07:28:14.0000] <nox>
gsnedders: It tracks comments through rebasing, amending…

[07:28:30.0000] <nox>
gsnedders: And it comments as GH comments.

[07:28:39.0000] <nox>
gsnedders: And you can publish all comments at once, à la Critic.

[07:28:53.0000] <nox>
gsnedders: You don't need to use it for all PRs, and you don't need any specific action on the repos side to use it.

[07:29:13.0000] <nox>
gsnedders: So you can try first to review some PRs by feeding their link to the Reviewable UI.

[07:29:20.0000] <nox>
If you don't like it afterwards, just stop using it.

[07:29:43.0000] <gsnedders>
nox: ok, from all their literature it was never clear to me that it actually added any real new features given it sounded like there was 1:1 relationship with GH comments

[07:29:49.0000] <nox>
gsnedders: https://github.com/Reviewable/Reviewable/issues?q=is%3Aissue+servo+is%3Aclosed Servo is one of their biggest users it seems. :)

[07:30:07.0000] <nox>
OWAI, WE BROKE YOU AGAIN

[07:30:38.0000] <nox>
gsnedders: Every time the PR's tip change,

[07:30:44.0000] <nox>
it adds a new "revision" on Reviewable,

[07:30:58.0000] <nox>
that's what the columns with the eyes are about in file matrices.

[07:31:11.0000] <nox>
gsnedders: https://cloud.githubusercontent.com/assets/123095/11317947/00de0c9e-9040-11e5-88ec-52b6e0b63577.png

[08:16:48.0000] <jgraham>
Yeah reviewable is only half bad. Which for a review system is pretty good

[14:30:37.0000] <caitp>
rietveld works pretty well, apart from being unusable from mobile


2016-01-02
[16:56:09.0000] <nox>
annevk: Typos…

[16:56:23.0000] <nox>
Ah no. \o/ Never mind.


2016-01-03
[00:42:28.0000] <PC_18>
hello

[00:44:14.0000] <PC_18>
I intend to apply to contribute to this prestigious open source community this summer. I shall be highly grateful if someone could help me in this regard.

[15:32:45.0000] <caitp>
prestigious


2016-01-04
[17:11:50.0000] <MikeSmith>
forgot the quotation marks around that

[17:12:15.0000] <MikeSmith>
also around "grateful" and "help"

[17:12:20.0000] <MikeSmith>
http://stackoverflow.com/questions/34580598/how-to-add-javascript-to-custom-elements

[23:47:35.0000] <annevk>
it seems krijn is no longer in this channel but that could be used as quote somewhere "prestigious open source community"

[00:55:26.0000] <JakeA>
annevk: https://fetch.spec.whatwg.org/#http-fetch 5.redirect.10.4 - should the body of the request be removed when the method is changed from POST to GET?

[00:56:21.0000] <annevk>
JakeA: yeah I guess so

[00:56:35.0000] <annevk>
JakeA: and it should probably impact streams at some point in some unknown way

[00:57:15.0000] <JakeA>
annevk: I'll file a bug. I think Chrome tries to create a GET-with-body at this point & falls over, but haven't confirmed

[00:57:45.0000] <annevk>
JakeA: ooh 😟 hope that's not my fault

[00:58:59.0000] <JakeA>
annevk: ALL YOUR FAULT (nah, sounds like something we should have had a test for and spotted earlier)

[01:02:06.0000] <JakeA>
annevk: https://github.com/whatwg/fetch/issues/187

[01:10:27.0000] <JakeA>
Can't recreate the Chrome issue though

[01:21:33.0000] <JakeA>
Ah, yes I can, but it's not related to that bit of the spec

[02:56:09.0000] <annevk>
zcorpan: I rebased https://github.com/whatwg/dom/pull/120 the other day

[02:56:15.0000] <annevk>
zcorpan: hope that's okay

[02:56:35.0000] <zcorpan>
annevk: sure

[03:00:38.0000] <zcorpan>
Domenic: yt?

[03:01:03.0000] <zcorpan>
wondering about https://github.com/whatwg/html-build/issues/42

[03:13:53.0000] <annevk>
zcorpan: perhaps fred-wang can ask the reviewers to weigh in?

[03:43:38.0000] <annevk>
MikeSmith: now that we have directories we can probably start removing the leading dots from the build files?

[03:44:11.0000] <MikeSmith>
annevk: yeah

[06:37:40.0000] <zcorpan>
annevk: for <script type=module>, what is the difference between <track>-like and fetch()-like when omitting crossorigin attribute and fetching a same-origin resource? does the latter require CORS headers?

[06:38:37.0000] <annevk>
zcorpan: the latter does not include credentials

[06:38:50.0000] <annevk>
iirc

[06:39:27.0000] <zcorpan>
annevk: what about handling the response if it has no CORS response headers?

[06:42:23.0000] <annevk>
zcorpan: same-origin doesn't require CORS, unless there's a cross-origin redirect inbetween, but you can't get there when mode is same-origin

[06:44:47.0000] <zcorpan>
annevk: context for my question is https://github.com/whatwg/html/pull/443#discussion_r48679260 where he suggests mode = "cors" for omitted attribute

[06:45:58.0000] <annevk>
zcorpan: I think we could probably change the default for <track> and EventSource to just be "cors" rather than "same-origin"

[06:46:22.0000] <annevk>
zcorpan: I think Hixie required the crossorigin="" attribute for clarity that CORS was required

[06:46:56.0000] <annevk>
zcorpan: I guess if we change that with <script type=module> (defaulting to requiring CORS) we could change it elsewhere too over time

[06:49:17.0000] <zcorpan>
annevk: ok, maybe so. but i think it'd be bad if <track> or <script type=module> resulted in network error when trying to fetch a CORS-unaware same origin url

[06:49:43.0000] <annevk>
zcorpan: as I said, that wouldn't happen

[06:50:15.0000] <zcorpan>
good then :-)

[06:51:58.0000] <annevk>
zcorpan: basically, "same-origin" means you cannot go cross-origin, "no-cors" means you can go anywhere, "cors" means that once you go cross-origin, CORS headers are required every step of the way, but before that it's the same as "same-origin"

[06:53:12.0000] <zcorpan>
annevk: thx

[07:08:01.0000] <MikeSmith>
annevk: so about the "was built for newer OSX version (10.11) than being linked (10.4)" warnings when building wattsi: They go way if you install the fpc 3.0.0 stable release from ftp://freepascal.stack.nl/pub/fpc/dist/3.0.0/i386-macosx/ (rather than the pre-release)

[07:08:19.0000] <MikeSmith>
I'll update the wattsi README.md

[07:08:31.0000] <MikeSmith>
zcorpan: ⬆

[07:09:42.0000] <zcorpan>
MikeSmith: ty

[07:11:21.0000] <nox>
MikeSmith: I applaud your appropriate use of emoji.

[07:18:04.0000] <MikeSmith>
nox: that appropriateness was unintentional 😆

[07:18:28.0000] <nox>
Hah.

[07:30:10.0000] <zcorpan>
nice, now i can write a recipe in just a few characters. http://blog.unicode.org/2015/05/unicode-90-candidate-emoji.html

[07:40:35.0000] <Ms2ger>
U+1F922

[07:43:58.0000] <smaug____>
kind of awkward to see Chrome warn about use of deprecated APIs when browsing some Google web sites

[08:49:38.0000] <annevk>
MikeSmith: oh cool, stable is alright?

[08:49:50.0000] <annevk>
MikeSmith: so how do you remove the non-stable version?

[08:55:12.0000] <nox>
smaug____: It's also weird to get them because you looked at NodePrototype.

[08:55:45.0000] <smaug____>
hmm

[08:56:44.0000] <smaug____>
oh, I see

[08:58:16.0000] <gsnedders>
Anyone remember why we introduced @srcdoc on iframe?

[08:58:28.0000] <gsnedders>
Like, why not just use data URIs?

[09:00:57.0000] <smaug____>
(there was some reason, but I never understood it)

[09:02:27.0000] <gsnedders>
(I was assuming we didn't just do it for no reason. :))

[09:03:11.0000] <annevk>
srcdoc is same-origin iirc and requires escaping less code points

[09:03:43.0000] <smaug____>
data urls for iframes are same origin

[09:03:52.0000] <gsnedders>
smaug____: only in some UAs, AFAIK

[09:06:04.0000] <smaug____>
ah, right, data urls are a mess

[09:07:00.0000] <gsnedders>
I had the impression that it was starting to seem like we would try and make data URLs other-origin everywhere, but idk

[09:13:19.0000] <annevk>
that is indeed the plan gsnedders

[09:43:44.0000] <TabAtkins>
It was mainly the "requires less escaping", because srcdoc requires *no* escaping at all (save the < and & if you want to avoid data corruption, but skipping that isn't a security risk).

[09:44:37.0000] <TabAtkins>
You can literally just XHR a doc off the network, assign it to iframe.srcdoc, and you're done.

[09:45:17.0000] <TabAtkins>
(Intended to improve the security properties of <iframe sandbox> for use in rendering comments by making it easier to not fuck up.)

[13:58:53.0000] <MikeSmith>
annevk: about wattsi you don't need to remove the previous version. Just get the ftp://freepascal.stack.nl/pub/fpc/dist/3.0.0/i386-macosx/fpc-3.0.0.intel-macosx.dmg image and open it and run the installer and it will overwrite all the files the unstable version installed.


2016-01-05
[17:57:50.0000] <DRWhite>
Why is Synchronous AJAX requests bad?

[17:59:04.0000] <DRWhite>
I get "Synchronous XMLHttpRequest on the main thread is deprecated because of its detrimental effects to the end user's experience. For more help http://xhr.spec.whatwg.org/" all the time, and it's bad?

[17:59:46.0000] <TabAtkins>
Because sync XHR blocks all JS while it's waiting for the network request to finish.

[17:59:58.0000] <TabAtkins>
Which means nothing else on the page will work, giving a bad user experience.

[18:00:12.0000] <DRWhite>
So why not, as per usual, provide the OPTION?

[18:01:42.0000] <DRWhite>
Why are we forced to have it asynchronous when the app has to wait for the response anyway?

[18:03:31.0000] <Domenic>
DRWhite: because you are hurting the *user*. It doesn't just block your app; it blocks the *user* using their browser.

[18:05:05.0000] <DRWhite>
Please explain how my program performing a single request can affect the users browser and stop the whole browser from working while it does a single request?

[18:05:22.0000] <Domenic>
DRWhite: that's what synchronous *means*, is that it stops the browser

[18:05:44.0000] <Domenic>
DRWhite: I can link you to the C++ if that would help?

[18:05:58.0000] <Domenic>
Showing how it is implemented in browsers, to stop the entire event loop

[18:06:17.0000] <DRWhite>
I've had synchronous AJAX requests running in multiple tabs, while still browsing, that is why I don't know why this is an issue.

[18:06:31.0000] <DRWhite>
And thus I'm trying to find out why.

[18:06:37.0000] <Domenic>
Yes, in some browsers people can use other tabs. But they can't use your tab.

[18:07:11.0000] <Domenic>
Taking the ability to e.g. scroll a tab away from the user is not acceptable, especially when it's just lazy coding to use sync XHR instead of async.

[18:08:21.0000] <DRWhite>
So the fact that my tab is waiting for information BEFORE it can continue, that means that the users experience is bad?

[18:08:30.0000] <Domenic>
Yes

[18:08:53.0000] <Domenic>
You can block parts of your app if you want, e.g. by disabling buttons or putting up gray loading boxes in front of the UI

[18:09:10.0000] <Domenic>
But blocking the entire event loop is not OK

[18:09:14.0000] <DRWhite>
So I have a form posting, and I have to wait for a response to know what message to show and what page to go to next... And I'm not allowed to wait for the response before I send them on?

[18:09:25.0000] <Domenic>
You certainly should wait for the response! Just use a callback!

[18:09:54.0000] <DRWhite>
I tried using a callback, but the callbacks don't work in JQuery 2.

[18:10:00.0000] <Domenic>
They definitely do

[18:10:11.0000] <Domenic>
They're just async

[18:10:19.0000] <DRWhite>
I can't get them to work, no matter what Tutorials I go to on the JQuery website.

[18:10:24.0000] <Domenic>
This is probably getting into "good StackOverflow question" territory :)

[18:10:42.0000] <DRWhite>
So the things that I built ages ago, I can't use any more?

[18:12:35.0000] <DRWhite>
Domenic: I know that they are async. Even if I force them to be sync, they still don't work.

[18:13:08.0000] <Domenic>
DRWhite: I'd suggest asking a StackOverflow question to get help making it work. It sounds like the question about sync vs. async is not really related to your problem.

[18:13:12.0000] <DRWhite>
I'll see if I can get assistance elsewhere perhaps then. Thanks for informing me and helping me understand better,.

[18:13:22.0000] <DRWhite>
I don't ask on stackOverflow.

[01:39:50.0000] <annevk>
MikeSmith: it seems sudo is required for me to build wattsi, not sure what's up

[01:40:25.0000] <annevk>
MikeSmith: otherwise I get "ld: can't write output file: ../bin/wattsi for architecture x86_64"

[01:40:53.0000] <annevk>
MikeSmith: there's a ton of warnings btw while building wattsi, should we attempt to fix some of them?

[02:12:28.0000] <zcorpan>
does someone have Edge? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3804

[02:17:11.0000] <MikeSmith>
annevk: as far as the warnings, I just raised a PR that fixes that https://github.com/whatwg/wattsi/pull/11

[02:17:41.0000] <MikeSmith>
fixes it by suppressing them

[02:18:23.0000] <MikeSmith>
but only suppresses them for the "release" build; they still get emitted for the debug build

[02:19:05.0000] <MikeSmith>
that seems to me like the right way to handle it, because there's not point in normal contributors needing to see them

[02:21:04.0000] <MikeSmith>
if we want to really eliminate them by making changes to the source, it's possible to do that (some of it would amount to just explicitly casting a bunch of stuff) but I think it's probably not worth it, and I reckon Hixie thought the same, because the entire purpose of the https://github.com/whatwg/wattsi/blob/master/src/lib/filter.pl script is to filter them out

[02:21:50.0000] <MikeSmith>
but for some reason Hixie only has that filter.pl script set to run for everything but the release build

[02:23:13.0000] <MikeSmith>
anyway I like my brute-force suppress-all-the-things approach better, at least for the release build

[02:24:23.0000] <MikeSmith>
it's only suppressing known messages (mostly note-level and "hint"-level), so if we do actually introduce some new non-error-level problem, we'll still see it, even for the release build

[02:26:25.0000] <annevk>
I see

[02:26:32.0000] <MikeSmith>
annevk: about the "ld: can't write output file: ../bin/wattsi for architecture x86_64" problem, have you already checked the obvious stuff, like, the bin directory is writable by non-root/you, and there's no bin/wattsi file in there that's owned by root that you're trying to overwrite

[02:27:07.0000] <MikeSmith>
like, do a sudo rm bin/wattsi and then re-run the build non-root

[02:28:34.0000] <annevk>
MikeSmith: have not tried obvious stuff...

[02:32:24.0000] <annevk>
MikeSmith: ta, works

[02:33:31.0000] <MikeSmith>
k

[02:34:20.0000] <MikeSmith>
I'll try to get the various other open wattsi changes reviewed and merged asap

[03:13:01.0000] <annevk>
Oh interesting, I totally missed Domenic added a bunch of changes to the type=module issue

[03:25:26.0000] <IZh>
Hi Hixie, Domenic. My PDF-generator return errors because the refers to non-existing document: //html.spec.whatwg.org/demos/canvas/blue-robot/index-idle.html

[03:25:27.0000] <zcorpan>
i wanted an html diff, but w3c's service uses Tidy which chokes on <mark> :-(

[03:26:07.0000] <IZh>
Hixie, Domenic: the = the spec

[03:27:19.0000] <annevk>
IZh: https://github.com/whatwg/html/issues/30 has the culprit somewhere

[03:27:28.0000] <annevk>
IZh: Domenic has been moving the demos around

[03:28:35.0000] <IZh>
annevk: Okay. So I will wait. (Or I can fix the PDF-generator to ignore this error.)

[03:28:35.0000] <zcorpan>
looks like the file is now named index.html but the link is still index-idle.html

[03:29:15.0000] <annevk>
zcorpan: no, one file was not moved

[03:29:34.0000] <annevk>
IZh: could you add a comment to that issue? I think you found a file that was overlooked

[03:30:00.0000] <zcorpan>
annevk: oh

[03:34:16.0000] <IZh>
annevk: Done.

[03:34:33.0000] <Ms2ger>
> CSV on the Web Recommendations Published

[03:36:25.0000] <annevk>
IZh: thank you

[04:37:11.0000] <zcorpan>
annevk: do you want a "good first bug" label for url?

[04:37:29.0000] <annevk>
zcorpan: sure

[04:38:49.0000] <annevk>
zcorpan: should probably also have some "Contribution opportunities" thing in the README then at some point

[06:05:06.0000] <annevk>
If someone could figure out how gb18030 actually works that'd be great

[06:05:15.0000] <annevk>
So many conflicting sources

[06:08:07.0000] <gsnedders>
"magic"

[06:37:43.0000] <smaug____>
hmm, has W3 changed the style for specs in general

[06:37:54.0000] <smaug____>
I thought only that one CSS spec was using odd style

[06:38:01.0000] <smaug____>
but apparently also webrtc

[06:38:15.0000] <smaug____>
maybe I get used to it

[07:15:23.0000] <zcorpan>
MikeSmith: so... html-build is downloading various stuff. could it download things in parallel?

[07:20:13.0000] <zcorpan>
hmm the new stylesheet seems to expose some bug with the fixed background in blink when first scrolling the TOC a bit and then scrolling the viewport

[08:33:49.0000] <zcorpan>
is there an issue filed on github that comments on specific commits disappear from the PR when rewriting history (but not when commenting from "Filed changed" tab) ?

[13:58:15.0000] <smaug____>
majidvp: did you already update http://majido.github.io/scroll-restoration-proposal/tests/scroll-restoration-push-replace.html ?

[14:11:04.0000] <majidvp>
smaug:____: yes

[14:11:32.0000] <smaug____>
majidvp: ok. thanks

[14:11:52.0000] <smaug____>
majidvp: btw, as I said in the bug, the test is still buggy, technically

[14:11:59.0000] <smaug____>
nothing says browser should scroll

[14:12:14.0000] <majidvp>
smaug____: I think you are right.

[14:12:21.0000] <smaug____>
which makes testing hard

[14:12:27.0000] <smaug____>
I'm fixing this sure

[14:12:33.0000] <smaug____>
but I wonder what the spec should say here

[14:13:47.0000] <majidvp>
smaug____: 'auto' does not require scrolling. For chromium test I am actually verifying that we scroll but that is not necessary per spec.

[14:16:00.0000] <smaug____>
majidvp: one option is to just make sure in wpt tests that 'manual' does *not* scroll, since that is the only thing the spec requires

[14:16:05.0000] <smaug____>
and not test scrolling at all

[14:17:40.0000] <majidvp>
smaug____: That is probably right for wpt test covering the spec. Each UA will have its own test covering its own specific implementation of auto.

[14:18:30.0000] <smaug____>
right

[14:18:42.0000] <smaug____>
/me sees the relevant bug in gecko.

[14:18:44.0000] <smaug____>
silly me

[14:29:32.0000] <majidvp>
sometimes, even a broken test may prove itself useful :p

[14:34:57.0000] <smaug____>
majidvp: it was effectively two line change to fix it :)

[14:35:17.0000] <smaug____>
in gecko


2016-01-06
[01:47:29.0000] <annevk>
Does anyone here know whether Unicode NFC removes U+0000 from input? I have a hard time figuring out how Unicode defines this...

[01:50:15.0000] <annevk>
Context: https://github.com/w3c/web-platform-tests/commit/b9dfb676b3e67fa5cb6da2e757a5527d9c0bc0f3#commitcomment-15225993

[02:17:18.0000] <annevk>
GitHub disappoints: https://github.com/whatwg/html/pull/443/files

[03:16:47.0000] <nox>
annevk: Not sure it does.

[03:19:24.0000] <nox>
annevk: https://github.com/w3c/web-platform-tests/commit/b9dfb676b3e67fa5cb6da2e757a5527d9c0bc0f3#commitcomment-15285524

[03:25:13.0000] <annevk>
nox: haha

[03:25:24.0000] <annevk>
nox: Chrome didn't test their ICU integration properly it seems

[03:26:05.0000] <annevk>
Tests should continue to test U+0000 and \x00 as there's always bugs everywhere

[03:36:56.0000] <nox>
annevk: I know I know. :)

[05:41:30.0000] <Ms2ger>
TabAtkins, ping

[06:35:10.0000] <tobie>
if in WebIDL I have many things that inherit from the Foo interface, how can I refer to them generically? I'd like to say something like  "the relevant Foo subclass" or "Foo subclasses."

[06:37:45.0000] <tobie>
context: https://w3c.github.io/sensors/#model

[06:40:53.0000] <annevk>
tobie: I'd just go with Foo's subclasses, but then also call it the Foo class etc.

[06:41:14.0000] <annevk>
tobie: at some point IDL needs to be updated to change interface to class and introduce mixins for the other thing

[06:41:30.0000] <nox>
In Servo we say Foo's derived interfaces.

[06:41:52.0000] <annevk>
DOM uses that terminology for Event it seems

[06:42:01.0000] <annevk>
but it'll go away in due course

[06:43:53.0000] <tobie>
annevk, nox: ty both

[06:44:20.0000] <nox>
annevk: Go away in favour of what?

[06:44:32.0000] <annevk>
nox: class/subclass

[06:44:38.0000] <nox>
Ok.

[06:45:07.0000] <annevk>
heycam wants some kind of complete plan for changing IDL syntax rather than just changing things incrementally

[06:45:30.0000] <nox>
annevk: So he wants class Node { … }?

[06:45:32.0000] <annevk>
if by mid-2016 things still haven't moved I think I'll try to push for incremental changes

[06:45:44.0000] <annevk>
nox: well, some of us want that

[06:46:15.0000] <nox>
annevk: I might have a time frame to move WebIDL to Bikeshed during Spring.

[06:46:19.0000] <nox>
If that's wanted.

[06:46:23.0000] <annevk>
not sure about Node btw, might need a distinction between abstract classes and classes

[06:46:41.0000] <nox>
annevk: Nice, Ms2ger and I are upstreaming [Abstract] in Gecko.

[06:46:43.0000] <annevk>
nox: you should ask heycam to be sure

[06:47:18.0000] <annevk>
nox: I think IDL might actually want to use the same tools that ECMAScript uses, since everything should be pretty similar

[06:48:01.0000] <Ms2ger>
I just started converting to bs

[06:48:30.0000] <nox>
Ms2ger: Oh nice.

[06:48:47.0000] <Ms2ger>
I really don't want to deal with yet another tool

[06:52:49.0000] <nox>
Same.

[07:06:51.0000] <tobie>
annevk: what's the practical distinction between abstract classes and classes in the context of the Web?

[07:07:30.0000] <tobie>
annevk: the constructor of the abstract class throws?

[07:07:43.0000] <Ms2ger>
No

[07:07:45.0000] <nox>
Most throws whether they are abstract or not.

[07:07:56.0000] <nox>
But you never have an instance of Node that is just an instance of Node.

[07:08:08.0000] <nox>
I'm not sure how that is important, spec-wise.

[07:10:07.0000] <tobie>
Ms2ger: ?

[07:10:39.0000] <Ms2ger>
An abstract class is one that cannot be instantiated directly

[07:11:18.0000] <Ms2ger>
Web-exposed constructors are unrelated

[07:11:36.0000] <nox>
Ms2ger: Is it important for Web exposure to know that they aren't instantiated directly?

[07:12:47.0000] <Ms2ger>
Not really

[07:13:14.0000] <tobie>
Ms2ger: yeah--I'm aware of this. My question was more akin to nox's. How does that manifest itself differently than the absence of a constructor extended attribute?

[07:13:25.0000] <Ms2ger>
It doesn't

[07:13:33.0000] <nox>
tobie: Even if you don't have a constructor,

[07:13:42.0000] <nox>
you could have a Document.createNode.

[07:14:14.0000] <nox>
Or whatever else that would be defined to instantiate Node objects.

[07:14:53.0000] <nox>
Ms2ger: Should we make a new release of rust-mozjs, or shrug?

[07:14:58.0000] <nox>
Wrong channel.

[07:15:50.0000] <tobie>
nox: I guess

[07:19:12.0000] <annevk>
tobie: I guess I was thinking that a class would always have a constructor

[07:19:41.0000] <tobie>
annevk: I see

[07:21:03.0000] <yoav>
annevk: hey! I want to add a usage example for supports() as a feature detection mechanism

[07:21:23.0000] <yoav>
PRed it to https://github.com/w3c/preload/pull/39 but Ilya suggested that it may be better off at a generic location

[07:21:36.0000] <yoav>
Do you think it'd fit in DOM?

[07:24:32.0000] <annevk>
yoav: yeah, with some rewording

[07:24:46.0000] <yoav>
sure

[07:27:23.0000] <nox>
annevk: What would happen of ParentNode and things like that?

[07:27:38.0000] <annevk>
nox: mixins

[07:28:16.0000] <nox>
annevk: "mixin ParentNode"?

[07:32:35.0000] <annevk>
nox: something like that

[07:32:45.0000] <Domenic>
annevk: my thought was that classes always have constructors but you could explicitly opt in to [ThrowsWithoutSecret] or [ThrowsFromAuthorCode] or similar.

[07:33:11.0000] <annevk>
Domenic: that could work too

[07:34:33.0000] <Domenic>
The important thing is that you can only create class instances via their constructors, even if you're a spec. A spec might just have to use language like "construct-with-secret a new HTMLHRElement passing the parsed values as arguments" or something...

[07:37:22.0000] <Domenic>
I guess there's not a lot of value in passing arguments to a secret-protected constructor vs. just calling a no-arg secret-protected constructor and then directly reaching in and setting internal slots. Unless you cared about inter-spec encapsulation/invariant preservation or similar.

[07:38:35.0000] <Domenic>
I dunno, still unsure on the value of changing IDL syntax. There's so much to do in just updating it for latest ES, un-splitting the type definitions, etc.

[07:38:46.0000] <Domenic>
Not too crazy about doing that work on a non-CC0 document though

[07:42:06.0000] <annevk>
Domenic: yeah I've told heycam the same

[07:42:41.0000] <annevk>
nox: that might be a good reason not to convert to bikeshed, at least not until the licensing situation changes

[07:43:25.0000] <nox>
Ok.

[08:33:22.0000] <yoav>
annevk: https://github.com/whatwg/dom/pull/144

[08:49:08.0000] <TabAtkins>
Ms2ger: pong

[08:50:11.0000] <Ms2ger>
TabAtkins, I filed issues instead

[08:51:03.0000] <TabAtkins>
Ms2ger: Elaborating a bit on the issues would help. ^_^

[08:51:30.0000] <TabAtkins>
Like actually describing what problem you're having, and what you'd like me to do.

[08:51:57.0000] <Ms2ger>
TabAtkins, I started converting WebIDL to use bikeshed, and the first two issues I hit were missing references and missing highlighting for idl code

[08:52:24.0000] <Ms2ger>
TabAtkins, also, there may be issues with links to ecmascript definitions

[08:52:38.0000] <TabAtkins>
Okay. Ref requests need to be filed against SpecRef.

[08:52:56.0000] <Ms2ger>
https://github.com/Ms2ger/webidl/tree/bs is my wip

[08:53:04.0000] <Ms2ger>
/me is about to head out

[08:53:06.0000] <TabAtkins>
"highlighting for idl code" - is this for IDL definition blocks (<pre class=idl>), or for some other arbitrary IDL code?

[08:54:53.0000] <Ms2ger>
The "IDL informal syntax examples" bit (which is probably hard), and the "Code blocks" bit at https://heycam.github.io/webidl/#conventions

[08:57:24.0000] <TabAtkins>
Okay. Hm. So pygments doesn't already have an IDL highlighter?

[08:58:08.0000] <Ms2ger>
It does, but not for an IDL that expands to Interface Description Language

[09:00:46.0000] <TabAtkins>
Ah, kk.

[09:00:59.0000] <TabAtkins>
Hm.  To make that work I'd need to write my own lexer/parser then.

[09:01:00.0000] <Ms2ger>
Oh, and I ignored the grammar things

[09:01:29.0000] <TabAtkins>
(I already need to write a new lexer/parser for CSS because the Pygments one is total shit, so learning how to do that is on my list already.)

[09:01:33.0000] <Ms2ger>
Anyway, I'm off for real

[09:01:38.0000] <TabAtkins>
kk!

[09:02:04.0000] <Ms2ger>
And thanks!

[09:11:15.0000] <gsnedders>
/me is getting tempted to write another new spec gen tool

[09:11:18.0000] <gsnedders>
because obviously that's what we need

[09:15:37.0000] <TabAtkins>
gsnedders: I'll kill you.

[09:24:43.0000] <tantek>
Specgen Thunderdome!

[09:43:41.0000] <gsnedders>
TabAtkins: plz no

[09:44:06.0000] <gsnedders>
TabAtkins: i won't  be very helpful to the web community if I'm dead

[09:46:47.0000] <TabAtkins>
You won't be harmful either.

[09:47:07.0000] <TabAtkins>
And you won't have to deal with the pain of maintaining compat with Bikeshed's dfn metadata format as it expands.

[09:47:09.0000] <JoWie>
you might like https://github.com/jsdom/webidl2js

[09:54:39.0000] <annevk>
Domenic: I missed the commit where you removed event handler scripts and therefore thought the compiled copy was not up-to-date

[09:55:16.0000] <Domenic>
annevk: ah yeah. those were short lived haha.

[09:57:30.0000] <Domenic>
Going to be such a pain to fix the bug adam found/spec async... i thought it'd be easy to just piggyback on defer, but no, no free lunch for me

[09:57:51.0000] <annevk>
Domenic: I also missed that the URL restrictions didn't apply to <script type=module src>, but that makes sense

[09:58:23.0000] <annevk>
Domenic: he finds the best bugs

[09:58:48.0000] <Domenic>
annevk: what do you mean URL restrictions didn't apply?

[09:59:09.0000] <annevk>
Domenic: has to start with ../ / ./

[09:59:26.0000] <Domenic>
annevk: ah yeah.

[10:07:24.0000] <annevk>
Domenic: I wonder if the type attribute requirements are better worded in a different way. E.g., say something along the lines of the script element can be used to specify classic scripts, module scripts, and data blocks. Then say, that if it is a module script, the type attribute must be specified and its value must be an ASCII case-insensitive match for

[10:07:24.0000] <annevk>
"module".

[10:07:42.0000] <annevk>
Domenic: currently that's not really required

[10:08:05.0000] <annevk>
Domenic: same of course for classic scripts and data blocks

[10:08:17.0000] <Domenic>
annevk: yeah I am not sure on this whole author-facing section; it almost feels like it wants to be split into three subsections (like <input type>) or something

[10:09:21.0000] <annevk>
Domenic: some of what is done there, such as a table with attribute combination overview, would not be a bad addition

[10:09:39.0000] <annevk>
Domenic: not sure we need all the complexity of several subsections though

[10:10:05.0000] <Domenic>
I think it would help. They'd be small subsections, not with their own headers and such.

[10:11:44.0000] <annevk>
Domenic: I was just about to say that I wouldn't mind a header above script state and prepare script...

[10:11:58.0000] <Domenic>
Yeah...

[10:12:38.0000] <Domenic>
"Processing model" perhaps

[10:12:58.0000] <annevk>
yeah, though mint an ID along with it

[10:13:13.0000] <annevk>
otherwise all the existing ones get renumbered

[10:14:13.0000] <Domenic>
haha yes true

[14:05:33.0000] <dbkaplun>
Hi WHATWG, how can I apply for membership?

[15:12:29.0000] <caitp>
dbkaplun: I will accept membership requests and financial donations via P.O. box 4967, panama city FL, 32403

[15:12:48.0000] <caitp>
care of WHATWG registrar

[15:26:02.0000] <MikeSmith>
JoWie: https://github.com/jsdom/webidl2js looks pretty cool

[15:43:28.0000] <MikeSmith>
https://www.talater.com/chrome-is-listening/ "Chrome Bugs Allow Sites to Listen to Your Private Conversations"

[15:44:57.0000] <MikeSmith>
「I reported this exploit to Google’s security team in private on September 13 [2014]. By September 19, their engineers have identified the bugs and suggested fixes. On September 24, a patch which fixes the exploit was ready, and three days later my find was nominated for Chromium’s Reward Panel... But then time passed, and the fix didn’t make it to users’ desktops. A month and a half later, I a

[15:45:03.0000] <MikeSmith>
sked the team why the fix wasn’t released. Their answer was that there was an ongoing discussion within the Standards group, to agree on the correct behaviour - “Nothing is decided yet.” As of today, almost four months after learning about this issue, Google is still waiting for the Standards group to agree on the best course of action, and your browser is still vulnerable.」

[15:45:26.0000] <MikeSmith>
I wonder if that's still not been fixed


2016-01-07
[16:24:00.0000] <dbkaplun>
caitp: what should I include? Is that how everyone in WHATWG became a member?

[16:24:58.0000] <caitp>
that was a joke

[16:25:41.0000] <smaug____>
MikeSmith: I wonder which "standards group" they are talking about

[16:26:16.0000] <MikeSmith>
smaug____: slightlyoff's group I guess

[16:26:32.0000] <MikeSmith>
and dglazkov

[16:26:34.0000] <smaug____>
I reported similar bug to Google 20..hmm...13 I think, but it was fixed

[16:27:04.0000] <MikeSmith>
it may be that one's been fixed and he just hasn't updated that page I dunno

[16:27:14.0000] <MikeSmith>
I see now he actually reported it in 2013

[16:28:20.0000] <slightlyoff>
There were 2 separate reports

[16:28:32.0000] <MikeSmith>
oh hey slightlyoff

[16:28:44.0000] <MikeSmith>
so is that blog post out of day?

[16:28:47.0000] <MikeSmith>
*date

[16:28:57.0000] <slightlyoff>
One was about "hotwording", which was fixed immediately, with full post-mortem, etc

[16:29:03.0000] <MikeSmith>
/me nods

[16:29:34.0000] <slightlyoff>
And which was mostly bad due to PNaCL binary download w/o consent

[16:31:49.0000] <MikeSmith>
yeah so that seems to be a different one than what he's describing

[16:32:13.0000] <slightlyoff>
I'm unclear about which crbug/patch is discussed in this post, and I'd be shocked if a paid-out bug bounty hadn't shipped a patch

[16:32:24.0000] <slightlyoff>
But stranger things have happened.

[16:32:32.0000] <slightlyoff>
Will look

[16:34:12.0000] <MikeSmith>
thanks

[16:34:17.0000] <slightlyoff>
I mean, they're reporting that sites that are running can do things

[16:34:41.0000] <slightlyoff>
Which is true, particularly that you've previously granted permission

[16:36:16.0000] <slightlyoff>
Origin A was granted permission, then origin A uses permission...hrmmm

[16:36:30.0000] <slightlyoff>
You can make a case about UI accordance here

[16:36:40.0000] <slightlyoff>
But it isn't obviously a bug

[16:36:46.0000] <MikeSmith>
I think that's it

[16:36:58.0000] <MikeSmith>
so yeah

[16:37:52.0000] <MikeSmith>
I guess it comes down to whether a normal user is going to be aware what's happening

[16:38:01.0000] <MikeSmith>
or what they are granting permission for

[16:38:12.0000] <MikeSmith>
the scope or duration of what they're granting

[16:38:54.0000] <MikeSmith>
anyway, the guy who wrote that post is the same who made UpUp

[16:39:21.0000] <MikeSmith>
he also makes a very good JS speech-recognition lib

[16:39:31.0000] <MikeSmith>
so he does know a thing or two about a thing or two

[17:33:04.0000] <Domenic>
dbkaplun: there is no formal concept of membership for WHATWG (and certainly no pay-to-play like other standards groups). If you are a member of the WHATWG community you can call yourself a member :)

[17:45:22.0000] <roc>
Domenic: you missed your chance to collect some easy money!

[17:58:50.0000] <caitp>
it's funny how it's called pay-to-play, since it seems like a lot of sometimes tedious and often thankless work

[18:13:20.0000] <dbkaplun>
Domenic: I want to participate more in the forming of HTML standards

[18:22:16.0000] <Domenic>
dbkaplun: that's great! We have some guidelines here for how to contribute https://github.com/whatwg/html/#contribution-opportunities

[18:44:43.0000] <dbkaplun>
OK I will take a look

[18:44:48.0000] <dbkaplun>
Thanks

[19:24:54.0000] <MikeSmith>
roc: thanks again for the heads-up about canvas.captureStream() the other day. I raised a webkit feature bug for it https://bugs.webkit.org/show_bug.cgi?id=152591 as well as a "uservoice" thing for Edge https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/11252697-video-capture-from-canvas

[19:25:04.0000] <roc>
great, thanks

[21:37:31.0000] <MikeSmith>
does anybody from Oracle participate in TC39 discussions/meetings?

[21:38:41.0000] <MikeSmith>
André Bargull?

[02:24:18.0000] <yoav>
Getting back to https://github.com/whatwg/html/pull/395

[02:25:15.0000] <yoav>
and wondering how I should add the list of keywords to <link>, <a> and <area>

[03:45:33.0000] <Ms2ger>
annevk, at https://html.spec.whatwg.org/multipage/scripting.html#script-processing-src-prepare , the spec says something about cors and error reporting; what would that difference look like?

[03:45:43.0000] <Ms2ger>
(if you have a moment to spare)

[03:47:40.0000] <annevk>
Ms2ger: https://html.spec.whatwg.org/multipage/webappapis.html#report-the-error

[04:30:38.0000] <rits>
is <hgroup> supported?  https://github.com/whatwg/html/issues/115 because i found it's not,

[04:31:24.0000] <annevk>
rits: depends on how you define supported

[04:32:11.0000] <annevk>
rits: user agents clearly style it as display:block, but they probably don't do much more

[04:32:19.0000] <annevk>
rits: but the same goes for <section>, <article>, etc.

[04:33:02.0000] <rits>
annevk: i tried using it on firefox and chrome, it doesn't seem to work , http://www.sitepoint.com/html5-hgroup-element-dropped/

[04:34:11.0000] <rits>
okay, then if it's not used, should it be removed then?

[04:35:28.0000] <annevk>
rits: what do you mean by it doesn't work?

[04:36:06.0000] <annevk>
rits: clearly user agents style, including Firefox and Chrome, style it

[04:38:52.0000] <rits>
annevk: i tried using it on browser, sorry i didn't knew it's used for styling

[04:39:45.0000] <annevk>
rits: it usually helps to compare against something you know is not supported

[04:39:55.0000] <annevk>
rits: e.g., <thisclearlyisnotimplemented>

[04:40:06.0000] <annevk>
rits: you'll find it renders differently from <hgroup>

[04:41:10.0000] <rits>
annevk: sorry, didn't got that

[04:44:13.0000] <rits>
annevk: then, a clear example needs to be added in the spec  https://github.com/whatwg/html/issues/115

[04:46:48.0000] <annevk>
rits: so I think I was unclear

[04:47:07.0000] <annevk>
rits: <hgroup>, <article>, <section>, outline algorithm, etc. are all supported to some extent by user agents, but not fully

[04:47:20.0000] <annevk>
rits: it's not entirely clear whether they are ever going to be fully supported

[04:47:32.0000] <rits>
annevk: okay

[04:47:51.0000] <annevk>
rits: so perhaps we should deprecate them and move on, and rewrite the outline algorithm to be what it once was, just based on h1-h6

[04:48:12.0000] <annevk>
rits: but that's a rather major change and nobody really wants to drive that

[04:48:31.0000] <annevk>
rits: I also suspect that nobody cares super strongly since there's a lot of other things to worry about

[04:49:32.0000] <rits>
annevk: yes, so it should be kept as is, then, it would be a big change otherwise

[06:31:19.0000] <wanderview>
annevk: is step 3.1 here adequate? https://w3c.github.io/webappsec-mixed-content/#should-block-fetch

[06:31:34.0000] <wanderview>
annevk: since the fetch() function mints a new Request wrapping the original request?

[06:32:49.0000] <wanderview>
and it seems fetch spec does not have the concept of "passthrough rqeuest" like MIX is using

[06:36:55.0000] <Ms2ger>
/me sighs

[06:37:24.0000] <wanderview>
annevk: JakeA: also, I

[06:37:47.0000] <wanderview>
I'm curious if this "passthrough request" concept is something that can be persisted in Cache API

[06:38:42.0000] <Ms2ger>
Anyone have Safari or IE on hand?

[06:40:27.0000] <Ms2ger>
Or know if either of them implements a@ping

[06:49:56.0000] <annevk>
wanderview: no answers at the moment 😟

[06:50:11.0000] <Ms2ger>
(Got IE, still looking for Safari)

[06:50:25.0000] <annevk>
wanderview: guess that needs sorting among other things, list is getting long

[06:50:37.0000] <wanderview>
annevk: ok... not critical since no one implements MIX really for SW yet...  I'll add to f2f as a low priority

[06:51:10.0000] <annevk>
wanderview: perhaps we should just never implement it

[06:51:25.0000] <wanderview>
annevk: people want it... its a reasonable use case

[06:51:27.0000] <annevk>
wanderview: definitely better for security

[06:52:02.0000] <annevk>
wanderview: disagree, only thing is that it might hurt adoption

[06:52:19.0000] <Ms2ger>
Hrm

[06:52:23.0000] <wanderview>
annevk: if you want to build a podcast player where all resources are hosted on just http... you need mixed content support

[06:52:47.0000] <Ms2ger>
Anyone know where the code is that handles [Reflect] in Chrome?

[06:53:37.0000] <annevk>
wanderview: you would not even be able to create UI around those resources, where do track names and such come from?

[06:55:53.0000] <wanderview>
annevk: this isn't supported via <audio> or <video>?

[06:58:09.0000] <Ms2ger>
Nevermind

[07:00:09.0000] <annevk>
wanderview: not enough to create a compelling podcast application

[07:00:41.0000] <wanderview>
annevk: how about images?  should those just not work either?

[07:00:57.0000] <wanderview>
since images are probably the most common mixed content (I assume)

[07:01:05.0000] <nox>
Ms2ger: "[Reflect]"? Colour me interested.

[07:15:55.0000] <Ms2ger>
annevk, so what is the "navigate" algorithm's input? A https://fetch.spec.whatwg.org/#concept-request ? A URL string? A URL record? Any of the above?

[07:30:50.0000] <Ms2ger>
zcorpan gone yet?

[07:32:20.0000] <Ms2ger>
Anyone else know the "update the image data" algorithm? MikeSmith?

[07:33:18.0000] <annevk>
Ms2ger: a request, a response, or a history entry

[07:33:39.0000] <annevk>
Ms2ger: it's one of the things I want to refactor, but it's hard 😟

[07:34:59.0000] <Ms2ger>
annevk, it seems to be called with urls too

[07:35:29.0000] <annevk>
Ms2ger: yeah I guess it is, those could be wrapped in a request though

[07:37:21.0000] <Ms2ger>
I guess it does that already in the not-javascript:/no-appcache case: 'If request is a URL, set request to a new request whose url is request.'

[07:38:33.0000] <Ms2ger>
I guess I should add "clarifying the spec" to my q1 goal about navigation

[07:39:24.0000] <Ms2ger>
annevk, I don't suppose I can bother you about images too?

[07:40:50.0000] <annevk>
Ms2ger: what about images?

[07:41:06.0000] <annevk>
Ms2ger: images that explain navigate?

[07:42:57.0000] <JakeA>
annevk: wanderview: In the podcast case it'd be reasonable to proxy xml for the episode data, but proxying MP3s would be $$$

[07:49:19.0000] <Ms2ger>
annevk, no, the bit where the spec says "Resolve selected source, relative to the element, and let the result be absolute URL. If that is not successful, then ... queue a task to change the current request's current URL to absolute URL"

[07:49:54.0000] <annevk>
Ms2ger: ah, zcorpan can do that

[07:50:39.0000] <Ms2ger>
Yeah, but he has the unfortunate habit of not being online 24/7 :)

[07:50:42.0000] <Ms2ger>
/me files an issue

[07:57:20.0000] <annevk>
Domenic: any idea why https://html.spec.whatwg.org/multipage/link-fixup.js is not changed whereas https://html.spec.whatwg.org/link-fixup.js is?

[07:57:39.0000] <annevk>
Domenic: html-build has not changed yet so something seems wrong, though once we change wattsi and html-build it won't matter

[07:57:43.0000] <annevk>
MikeSmith: ^^

[07:58:55.0000] <Ms2ger>
"Let absolute URL be the absolute URL that would have resulted from resolving the URL specified by the src attribute's value relative to the media element when the src attribute was last changed."

[07:58:59.0000] <Ms2ger>
/me grumbles

[08:00:21.0000] <annevk>
nox: [Reflect] is sugar for HTML's reflect

[08:14:36.0000] <nox>
annevk: Yeah that's what I thought. I like that.

[08:15:15.0000] <Ms2ger>
I don't :)

[08:15:18.0000] <annevk>
nox: afaict you just want to express the world in IDL

[08:15:35.0000] <annevk>
[MakeItWorkDamnIt]

[08:15:54.0000] <nox>
annevk: The more code is generated in Servo, the better I feel. :P

[08:17:19.0000] <nox>
This one should stay an implementation detail in UAs though.

[08:19:18.0000] <caitp>
it might not hurt to annotate the reflection semantics in the interface text

[08:22:13.0000] <wanderview>
a [DTRT] would be nice

[08:32:27.0000] <Domenic>
annevk: no, that makes no sense; they should just be symlinks. Maybe we need to check the logs? Seems very bad.

[08:43:59.0000] <nox>
wanderview: DTRT?

[08:44:07.0000] <annevk>
caitp: you mean a bunch of comments?

[08:44:15.0000] <annevk>
caitp: sounds worth doing

[08:44:17.0000] <wanderview>
Do The Right Thing

[08:46:11.0000] <annevk>
Domenic: I don't really understand symlinks

[08:46:36.0000] <annevk>
Domenic: e.g., if I created a symlink, does it show up as a normal resource when I use ls?

[08:47:36.0000] <Domenic>
annevk: yes that is my impression

[08:47:57.0000] <caitp>
I was thinking just a no-op [Reflect] that just serves as a "hey, this attribute has a reflected DOM attribute, and this makes it obvious"

[08:48:01.0000] <caitp>
I dunno

[08:48:04.0000] <caitp>
maybe not worth it

[08:48:19.0000] <Domenic>
apache just serves whatever it finds at the corresponding location in the filesystem and doesn't distinguish file contents found from symlinks from that from normal files

[08:48:25.0000] <Domenic>
I agree moving Reflect to IDL might be nice

[08:48:26.0000] <annevk>
that's probably too confusing since all other IDL attributes do have an effect

[08:48:32.0000] <Domenic>
But there are actually a lot of variants

[08:48:41.0000] <Domenic>
[Reflect]

[08:48:46.0000] <Domenic>
[ReflectLimitedToNonNegativeIntegers]

[08:48:47.0000] <caitp>
Reflect=WeirdThingA

[08:48:50.0000] <Domenic>
[ReflectAsURL]

[08:48:57.0000] <annevk>
Domenic: so how do I know whether there's an actual resource in multipage/ or whether it's a symlink

[08:49:07.0000] <Ms2ger>
[ReflectAsListOfURLs]

[08:49:08.0000] <Domenic>
[ReflectWithAttributeName=accept_charset] (have to use underscores since IDL doesn't allow dashes in identifiers)

[08:49:18.0000] <caitp>
but since it could just be a no-op that doesn't result in any generated code, it could just be informative

[08:49:19.0000] <caitp>
idk

[08:49:22.0000] <Domenic>
[ReflectLimitedToKnownValues=value1,value2,value3]

[08:49:38.0000] <Domenic>
[ReflectLimitedToKnownValuesWhichAreNotAheadOfTimeListable]

[08:50:01.0000] <Domenic>
annevk: ls -la should tell you

[08:51:04.0000] <Domenic>
I could see some value in "// reflected"

[08:51:06.0000] <annevk>
Domenic: it does say link-fixup.js -> ../link-fixup.js

[08:51:10.0000] <Domenic>
But then you have to keep that in sync with the normative text

[08:51:15.0000] <Domenic>
annevk: then it's a symlink yeah...

[08:51:24.0000] <annevk>
Domenic: same for images and entities.json

[08:51:32.0000] <annevk>
Domenic: so why are the contents different...

[08:51:42.0000] <Domenic>
it should be impossible...

[08:51:49.0000] <annevk>
Domenic: cache

[08:51:55.0000] <annevk>
/me hits self

[08:52:05.0000] <Domenic>
phew

[09:06:41.0000] <nox>
Moving Reflect to IDL?

[09:07:06.0000] <nox>
IDL as in the spec, or IDL as in an extended attribute in HTML?

[09:07:33.0000] <nox>
Because [Reflect] doesn't make sense outside of the Element interface, right?

[09:08:20.0000] <nox>
Domenic: I was thinking it would describe which attribute it reflects, not how it does it.

[09:08:40.0000] <nox>
So [Reflect="content attribute name"].

[09:12:21.0000] <Domenic>
nox: an extended attribute in HTML

[09:12:28.0000] <Domenic>
nox: if you do that there isn't sufficient information to code-gen

[09:12:41.0000] <Domenic>
nox: also IDL does not allow strings to appear on the right hand side of equals

[09:12:42.0000] <nox>
True.

[09:12:56.0000] <nox>
Reflect(…) then?

[09:13:09.0000] <Domenic>
Maybe yeah

[09:16:26.0000] <annevk>
spec-gen \o/

[11:41:52.0000] <smaug____>
majidvp: I can't now recall, but did webkit folks or MS ever commented on scrollrestoration API ?

[11:42:04.0000] <smaug____>
in other words, should we expect still lots of changes

[11:42:41.0000] <smaug____>
since as of now, it is not behind any pref in gecko

[11:46:21.0000] <MikeSmith>
http://stackoverflow.com/questions/34650915/it-seems-the-pre-flight-for-cors-doesnt-make-sense-is-it-a-joke

[12:07:20.0000] <mifaso>
hey does anyone know if its possible to use google maps api v3 to embed a view of mars?

[12:08:57.0000] <caitp>
might be slightly off-topic for the channel

[12:09:23.0000] <caitp>
but maybe someone knows

[12:09:58.0000] <mifaso>
idk where this would be topical

[12:10:16.0000] <mifaso>
i asked in #javascript too

[12:10:45.0000] <caitp>
probably the maps api mailing list

[12:11:03.0000] <caitp>
they might have an irc channel too I dunno

[12:22:05.0000] <mifaso>
ok thanks

[13:06:35.0000] <majidvp>
smaug____: I don't believe there has been any public signal from Edge or Webkit.

[13:07:02.0000] <majidvp>
 But I have had offline discussion with MS engineers early in design process to ensure they are familiar with the work and their feedback is taken into account.

[13:09:15.0000] <majidvp>
The API has been in Chrome since M46 (2 stable releases) and it has a fairly small surface.

[13:09:54.0000] <majidvp>
So I don't expect any major changes at all.

[15:20:30.0000] <yoav>
Domenic: sorry for the build issues. I'm having trouble running the build locally (wattsi download fails with a weird curl error)


2016-01-08
[16:25:50.0000] <MikeSmith>
botie: inform yoav lemme know if you need help getting html-build working locally (I've not seen the curl error with wattsi download before)

[16:25:50.0000] <botie>
will do

[17:45:33.0000] <botie>
yoav, at 2016-01-08 00:26 UTC, MikeSmith said: lemme know if you need help getting html-build working locally (I've not seen the curl error with wattsi download before)

[23:01:54.0000] <yoav>
MikeSmith: If you're around, I'd love some help

[23:02:36.0000] <yoav>
seems like the server from which wattsi is pulled is flaky

[23:02:57.0000] <yoav>
keep erroring out mid download

[23:15:27.0000] <yoav>
Oh, we're uploading source to the server cleartext??? Why don't we gzip it?

[23:18:08.0000] <MikeSmith>
hi yoav

[23:18:16.0000] <yoav>
hey

[23:18:23.0000] <yoav>
I'm installing wattsi locally

[23:18:36.0000] <yoav>
I'll bug you if that goes south :)

[23:18:42.0000] <MikeSmith>
hai

[23:19:07.0000] <MikeSmith>
that should workーI've been running it a lot lately

[23:19:39.0000] <MikeSmith>
though I have some pending PRs with refinements

[23:19:57.0000] <MikeSmith>
but as far as the curl problem, you mean http://ec2-52-88-42-163.us-west-2.compute.amazonaws.com/ which the wattsi output is pulled from?

[23:36:11.0000] <yoav>
MikeSmith: yeah

[23:36:24.0000] <yoav>
looks like my post gets an error mid way

[23:38:18.0000] <yoav>
free pascal????

[23:38:53.0000] <yoav>
ftp://freepascal.stack.nl/pub/fpc/beta/3.0.0-rc1/ has no x86_64 OSX version

[23:39:10.0000] <yoav>
and brew gives me 2.6.4

[23:46:36.0000] <yoav>
brew update cures it

[23:50:42.0000] <yoav>
now missing dateutils...

[00:16:40.0000] <annevk>
yoav: you can install from ftp://freepascal.stack.nl/pub/fpc/dist/3.0.0/ these days

[00:16:53.0000] <annevk>
yoav: the dmg in ftp://freepascal.stack.nl/pub/fpc/dist/3.0.0/i386-macosx/ should be okay

[00:17:05.0000] <yoav>
OK, thanks! I'll try it out

[00:18:30.0000] <annevk>
https://github.com/whatwg/wattsi/pull/12 for the change to 3.0.0

[00:18:36.0000] <annevk>
MikeSmith: Domenic: ^

[00:44:08.0000] <Ms2ger>
Domenic, do you want a fixup commit to review for https://github.com/whatwg/html/pull/482 or should I just force push?

[01:15:04.0000] <annevk>
Ms2ger: force push is fine

[01:16:17.0000] <Ms2ger>
Ok, thanks

[01:30:54.0000] <nox>
annevk: So can I go ahead to rename getter into legacygetter?

[01:31:03.0000] <nox>
Should I just write a PR for LegacyUnenumerable?

[01:31:33.0000] <annevk>
nox: yeah if you wanted to PR IDL you should do that

[01:31:44.0000] <nox>
annevk: Do what? :D

[01:32:00.0000] <nox>
I should stop asking multiple questions at once because I confuse myself in the process.

[01:32:20.0000] <annevk>
nox: rename getter and friends and add LegacyUnemumerable

[01:32:26.0000] <nox>
Ok.

[01:32:36.0000] <annevk>
probably distinct PRs, but I guess you know that

[01:33:24.0000] <nox>
Yes.

[03:25:16.0000] <rits>
annevk: hi, actually i was figuring out about this bug https://github.com/whatwg/html/issues/176 , as you did explained about the ArrayBuffer and to set the flag of request instance

[03:25:18.0000] <annevk>
MikeSmith: so does -Px86_64 break other platforms basically for wattsi?

[03:26:13.0000] <MikeSmith>
annevk: I think it won't have effect for other platforms

[03:26:15.0000] <annevk>
rits: ArrayBuffer seems unrelated to that bug unless I'm missing something

[03:26:23.0000] <annevk>
MikeSmith: perhaps we should just add it then?

[03:27:03.0000] <MikeSmith>
it wouldn't harm anything I guess

[03:27:17.0000] <MikeSmith>
but can you remind me what problem it solves?

[03:27:32.0000] <MikeSmith>
I remember some problem we had initially

[03:27:54.0000] <annevk>
MikeSmith: "If you're building on Mac OS X, the FreePascal compiler there defaults to building 32-bit binaries. But you can choose to build a 64-bit wattsi binary by adding -Px86_64 to the DEFINES line in the src/build.sh file"

[03:28:47.0000] <MikeSmith>
ok yeah

[03:29:17.0000] <MikeSmith>
I think there is no advantage to build 64-bit binaries

[03:29:30.0000] <MikeSmith>
oh, I guess you mean to eliminate the warnings?

[03:29:38.0000] <annevk>
MikeSmith: you did fix some of it in https://github.com/whatwg/wattsi/commit/fc38b65c0f2f45065db6f702e3a0408d7a886bc3 it seems

[03:29:49.0000] <MikeSmith>
yeah

[03:30:08.0000] <annevk>
MikeSmith: is there an advantage with 32-bit? I thought 32-bit is on its way out

[03:30:16.0000] <annevk>
MikeSmith: even phones use 64-bit these days

[03:30:59.0000] <rits>
annevk: amm yes, sorry i think i have interpreted to the ArrayBuffer because of the img, it's related to fetch standards, but i am not still very clear for the issue, if you could just give a brief idea

[03:32:41.0000] <annevk>
rits: update the image data, step 12, has "Fetch request", that request, needs to have https://fetch.spec.whatwg.org/#same-origin-data-url-flag set

[03:34:10.0000] <annevk>
rits: similar to how it has other things set, such as client, initiator, etc.

[03:36:46.0000] <MikeSmith>
annevk: IMHO the only reason to build a 64-bit binary would be if anybody had an enviroment that required itーI mean, if the 32-bit binary wouldn't run on somebody's system for some reason, or it ran but with some problems

[03:37:22.0000] <MikeSmith>
the thing is, the default behavior for fpc on OSX is to produce 32-bit binaries

[03:37:44.0000] <MikeSmith>
so IMHO we are probably best off sticking with the default behavior

[03:37:49.0000] <rits>
annevk: okay got that now, thanks

[03:38:15.0000] <annevk>
MikeSmith: but we're also saying that we cannot guarantee 32-bit compatibility in the README...

[03:39:11.0000] <MikeSmith>
yeah but in practice I think that doesn't matter, because nobody's actually trying to run wattsi on a 32-bit system

[03:39:32.0000] <MikeSmith>
anyway I don't feel strongly about it and in practice for us in this I think it makes no difference either way, so I'm fine with anything

[03:39:47.0000] <MikeSmith>
*in this case

[03:42:59.0000] <annevk>
MikeSmith: it seems to build and work fine without that flag so maybe the Troubleshooting note should say something else

[03:43:09.0000] <annevk>
MikeSmith: since I remember it not building before without that flag

[03:43:14.0000] <MikeSmith>
yeah

[03:43:24.0000] <MikeSmith>
ok, will update it

[04:48:07.0000] <MikeSmith>
annevk: https://github.com/whatwg/wattsi/pull/13

[04:50:23.0000] <annevk>
merged

[04:51:03.0000] <MikeSmith>
ta

[05:26:36.0000] <smaug____>
MikeSmith: do I recall correctly that you had some page listing all the relevant web specs ?

[05:27:30.0000] <smaug____>
(while reviewing I often need to find random specs which I may or may not have read recently so awesomebar may or may not suggest the url)

[05:27:35.0000] <annevk>
smaug____: https://platform.html5.org/

[05:28:02.0000] <smaug____>
how to get more specs added there

[05:28:31.0000] <annevk>
smaug____: https://github.com/whatwg/platform.html5.org

[05:28:50.0000] <smaug____>
thanks

[05:41:49.0000] <annevk>
wanderview: you around?

[05:42:13.0000] <annevk>
wanderview: I was curious how we model basic/cors/opaque responses in Gecko

[05:42:22.0000] <annevk>
wanderview: I don't really like the filter setup the specification has

[05:42:46.0000] <annevk>
wanderview: I wonder if it would simplify things if it was just a flag on response you'd have to check here and there

[05:43:12.0000] <annevk>
wanderview: which of course makes things a bit more dangerous if you don't know what you're doing, but hopefully folks writing specifications do know what they're doing...

[05:48:34.0000] <annevk>
Anyway, I guess I'll keep the current setup unless someone volunteers to redo it

[05:50:21.0000] <Ms2ger>
nikkibee might have thoughts too

[05:53:37.0000] <annevk>
true

[06:23:04.0000] <wanderview>
annevk: we do actually have a wrapper object like the spec

[06:23:14.0000] <annevk>
cool

[06:23:35.0000] <wanderview>
annevk: the filter/wrapper thing makes it easier to say "use the inner object here" without putting that logic in every getter on the response

[06:24:42.0000] <annevk>
yeah, I think it has the upside of it being very explicit when potentially dangerous stuff is going on

[06:28:13.0000] <Ms2ger>
/me wrote a couple simple tests, already has failures in Gecko and Chrome

[06:28:15.0000] <Ms2ger>
r? https://github.com/w3c/web-platform-tests/pull/2457

[07:05:31.0000] <Domenic>
Ms2ger: I can try to get to that but will probably wait up to a week until I finish modules. But, if you have things that fail consistently in most/all browsers, maybe best to fix the spec?

[07:07:57.0000] <annevk>
Might also want to ask bz

[07:08:02.0000] <annevk>
He "loves" that stuff

[07:20:32.0000] <annevk>
So I messed up my local HTML checkout by merging something but not committing before MikeSmith committed something else

[07:20:36.0000] <annevk>
How do I undo this?

[07:20:46.0000] <Ms2ger>
Domenic, no two assertions fail in both Chrome and Firefox, I think

[07:21:13.0000] <Domenic>
annevk: git reset --hard origin/master will throw away all local changes

[07:22:53.0000] <annevk>
ta

[07:25:35.0000] <Ms2ger>
Domenic, thoughts on my reply on https://github.com/whatwg/html/pull/482 ?

[07:28:06.0000] <Domenic>
Ms2ger: I don't care about linebreaking much so maintaining surrounding style is fine. Will look over the rest when I get in to the office but I imagine I'll just end up merging

[07:28:21.0000] <Ms2ger>
Great, thanks :)

[07:30:31.0000] <annevk>
Domenic: empty robots.txt reduces error log messages

[07:30:44.0000] <annevk>
Domenic: so... mostly an Apache hack?

[07:31:13.0000] <Domenic>
Ah OK. Maybe add a comment explaining that.

[07:31:42.0000] <Domenic>
Although I don't know if there is comment syntax in robots.txt...

[07:35:47.0000] <annevk>
Done

[07:52:51.0000] <wanderview>
JakeA: ping

[07:53:21.0000] <wanderview>
can you refresh my understanding of how we intended updates to work on fetch events?

[07:54:00.0000] <wanderview>
my understanding seems different from what the spec says now...

[08:05:44.0000] <wanderview>
I wrote a spec issue: https://github.com/slightlyoff/ServiceWorker/issues/814

[08:27:34.0000] <Ms2ger>
Huh

[08:27:50.0000] <Ms2ger>
I thought I found a bug in Chrome, wrote a test, and it only fails in Gecko

[08:29:54.0000] <Ms2ger>
/me is very confused now

[08:32:14.0000] <Ms2ger>
Looking at outdated chromium source: check

[08:32:47.0000] <Ms2ger>
Boolean argument that makes Gecko do something stupid: check

[08:38:40.0000] <Ms2ger>
(https://github.com/w3c/web-platform-tests/pull/2458)

[08:44:18.0000] <Ms2ger>
(Chrome was fixed in http://code.google.com/p/chromium/issues/detail?id=520849)

[08:58:43.0000] <rits>
annevk: https://html.spec.whatwg.org/#the-page i should just set the default directly to 8px because seamless browsing context is going to removed

[09:00:22.0000] <annevk>
rits: yeah, I think ideally you'd look at what that text said before seamless was introduced

[09:01:01.0000] <rits>
annevk: ok then is there any source for that

[09:01:25.0000] <annevk>
rits: well, the html git repository

[09:02:39.0000] <rits>
annevk: oh yeah, then it's perfect actually many sections needs a change as seamless is being removed that will help now,

[09:03:29.0000] <annevk>
rits: https://github.com/whatwg/html/commit/dfa3f22b5278113cba689c3cf6e358f17e334311 seems to be the commit

[09:03:55.0000] <annevk>
rits: there's many commits introducing seamless changes, you can use git log --all --grep='seamless' to find the hashes and messages

[09:05:16.0000] <rits>
annevk: great, i didn't knew about it, will solve it now

[09:28:05.0000] <zcorpan>
Domenic: annevk: i haven't reviewed module scripts yet (and not working today), but what happens when inserting a <script type=module> to the document after onload?

[09:28:39.0000] <Domenic>
zcorpan: it should just work

[09:29:04.0000] <zcorpan>
Domenic: just work as in execute like async?

[09:30:09.0000] <Domenic>
zcorpan: yeah I think so. Current commit might be a bit broken due to the bug aklein found. I am hoping to straighten that out today.

[09:30:25.0000] <Domenic>
And also spec the async attribute

[09:30:58.0000] <zcorpan>
Domenic: more concrete example: inserting two <script type=module src=...>, do they execute in insertion order or first-come order

[09:31:11.0000] <Domenic>
Oh I see

[09:31:44.0000] <Domenic>
The intent is insertion order unless you add the async attribute... I wonder if that is too confusing.

[09:32:12.0000] <zcorpan>
i suppose we should match <script defer>, though i don't recall what that does :-)

[09:33:04.0000] <Domenic>
I think that works... But maybe the inserted from scriptness overrides the deferness.

[09:33:13.0000] <Domenic>
I agree we should match

[09:35:56.0000] <zcorpan>
/me back to fredagsmys

[09:36:08.0000] <smaug____>
!seen foolip

[09:36:20.0000] <smaug____>
er, no such bot here I guess

[09:36:41.0000] <smaug____>
to detect !seen

[10:12:40.0000] <MikeSmith>
is there a test suite anywhere for JavaScript syntax errors?

[10:13:12.0000] <MikeSmith>
I mean where test cases with particular types of syntax errors

[10:13:24.0000] <MikeSmith>
e.g, "var ;"

[10:13:45.0000] <MikeSmith>
(missing variable name)

[10:17:55.0000] <Domenic>
MikeSmith: most JS parsers will do that

[10:18:57.0000] <MikeSmith>
Domenic: yeah I know but what I meant was I'd like a set of test cases to test with

[10:19:15.0000] <MikeSmith>
to compare error-reporting behavior

[10:19:31.0000] <MikeSmith>
messages

[10:20:03.0000] <Domenic>
MikeSmith: hmm yeah I am less sure on that, maybe Mozilla #jslang folks would know more...

[10:20:34.0000] <Domenic>
MikeSmith: I think filing an issue on https://github.com/estree/estree might also get the attention of the right people

[10:20:48.0000] <MikeSmith>
ok

[10:32:26.0000] <caitp>
MikeSmith: I think things like that are mostly covered by fuzz testers

[10:33:09.0000] <caitp>
test262 verifies some syntax errors, but I mean

[10:33:33.0000] <caitp>
the set of invalid inputs is vastly greater than the set of valid inputs

[10:33:46.0000] <caitp>
so it's hard to check them all in a test suite

[10:39:49.0000] <MikeSmith>
caitp: sure I understand that, but it's imaginable that a testsuite could be assembled around a useful subset of common errors

[10:41:18.0000] <MikeSmith>
actually, thinking about it, if an implementation uses some kind of message-properties file for its error messages, I could probably just construct a test suite from that, with at least one test for each type of message

[10:41:23.0000] <caitp>
could be

[10:41:33.0000] <MikeSmith>
I think I'll try that

[10:42:50.0000] <MikeSmith>
anyway, in general I find that the messages for syntax errors in Firefox devtools are more specific and helpful to authors than messages from most any other implementations are

[10:43:00.0000] <caitp>
usually things like this show up in an "unexpected token" path

[10:43:07.0000] <MikeSmith>
yeah

[10:43:20.0000] <MikeSmith>
which is not super helpful to a learner

[10:44:18.0000] <caitp>
yeah :(

[10:44:35.0000] <MikeSmith>
voila https://github.com/mozilla/rhino/blob/master/src/org/mozilla/javascript/resources/Messages.properties

[11:16:49.0000] <annevk>
jsbell: https://github.com/whatwg/encoding/pulls

[11:16:59.0000] <annevk>
jsbell: could you review them maybe?

[11:18:01.0000] <jsbell>
annevk: I can try. I was hoping someone more familiar with those encodings would.

[11:18:32.0000] <jsbell>
but I'll try and see if the description matches the change at least

[11:19:21.0000] <rits>
annevk: could you see this commit https://github.com/Ritsyy/html/commit/93f700f25224449aa38730a48b76814b5a0241cb

[11:23:03.0000] <annevk>
jsbell: yeah, I guess I need to be more patient

[11:24:17.0000] <annevk>
rits: when you refer to the algorithm, update should be lowercase

[11:24:32.0000] <annevk>
rits: and there's a space after algorithm that should be removed

[11:24:57.0000] <rits>
annevk: okay, thanks

[11:25:26.0000] <annevk>
rits: don't really have time right now to give it a thorough review though, weekend has started 😊

[11:25:42.0000] <darobin>
slacker

[11:26:17.0000] <rits>
annevk: yes no problem, have a nice weekend :)

[11:28:08.0000] <annevk>
you too!

[11:28:36.0000] <annevk>
darobin: learned from the best

[11:28:43.0000] <darobin>
:)


2016-01-09
[17:38:23.0000] <gsnedders>
TabAtkins: are you actually around at all?

[23:09:02.0000] <xt_>
exit


2016-01-10
[13:56:38.0000] <MikeSmith>
clever http://stackoverflow.com/questions/34699350/shadow-piercing-descendant-combinator-deep-including-shadow-pseudo-el/34706299#34706299

[13:58:55.0000] <MikeSmith>
originally from https://code.google.com/p/chromium/issues/detail?id=489954#c12 I guess

[14:14:47.0000] <Domenic>
https://console.spec.whatwg.org/ is shaping up :)

[15:25:57.0000] <MikeSmith>
/me looks

[15:27:55.0000] <MikeSmith>
nice progress

[15:28:30.0000] <MikeSmith>
I like the mechanism of defining it in terms of the abstract operations

[15:28:41.0000] <MikeSmith>
Formatter and Logger

[15:28:53.0000] <MikeSmith>
and Printer


2016-01-11
[21:02:06.0000] <frewsxcv>
nice job Domenic :)

[21:02:28.0000] <Domenic>
kudos go to terinjokes and robertkowalski; I'm just kind of shepherding them through it :)

[21:03:38.0000] <terinjokes>
i don't usually meme, but when I do.

[21:03:39.0000] <terinjokes>
http://i2.kym-cdn.com/photos/images/original/000/234/739/fa5.jpg

[21:54:13.0000] <MikeSmith>
heh

[02:30:39.0000] <nox>
annevk, Domenic: Any pointer as to where is the spec related to the tree building of an <svg> element in a <mathml annotation-xml> element in HTML?

[02:32:31.0000] <nox>
Never mind, can't read.

[03:50:11.0000] <rits>
annevk: hello, could you review this https://github.com/whatwg/html/pull/485

[04:35:37.0000] <Ms2ger>
annevk, can you add (webidl arrays) to the summary in https://github.com/whatwg/html/issues/11 ?

[04:56:11.0000] <smaug____>
Isn't Client.id in serviceworkers a bit too vaguely spec'ed. I could easily see some web page starting to rely on the id types of some browser, but id being some other kind of string in some other browser

[04:56:45.0000] <smaug____>
(not that I understand the need for id at all)

[05:09:29.0000] <annevk>
Ms2ger: done

[05:09:40.0000] <Ms2ger>
Thanks\

[05:09:58.0000] <annevk>
rits: not sure what zcorpan means either

[05:10:05.0000] <annevk>
rits: zcorpan should probably review it though

[05:10:17.0000] <annevk>
rits: he's more familiar with that section

[05:11:31.0000] <rits>
annevk: sent you the wrong link actually i am asking for this one https://github.com/whatwg/html/pull/484

[05:11:48.0000] <zcorpan>
rits: the step below my comment should be merged into the step above my comment, so those things are in the same "queue a task"

[05:12:08.0000] <zcorpan>
rits: except "abort these steps" at the end which can be its own step

[05:13:08.0000] <rits>
zcorpan: okay, thanks!

[05:13:49.0000] <zcorpan>
Ms2ger: btw, about wrapping, the img section should move towards 100-col wrapping like the rest of the spec

[05:14:16.0000] <nox>
Ms2ger: Is anyone working on fixing WebIDL.py wrt to #11?

[05:15:13.0000] <zcorpan>
rits: https://github.com/whatwg/html/commit/16eb8bb254dde2d0ab5617c410d46a87485065c8 is similar

[05:15:49.0000] <zcorpan>
rits: possibly you should add some more linebreaks also to have consistent style

[05:15:56.0000] <Ms2ger>
nox, I have no idea what the status is

[05:16:21.0000] <Ms2ger>
zcorpan, okay (though I kinda feel like semantic wrapping was a good idea)

[05:16:46.0000] <annevk>
rits: I think it would be great if in the seamless="" removal commit message you list the sets of commits that are being reverted

[05:17:02.0000] <annevk>
rits: that would also make it easier to review if anything was missed

[05:17:25.0000] <nox>
Ms2ger: Ok.

[05:17:36.0000] <rits>
zcorpan: yeah i saw that, i'll do the fix

[05:21:24.0000] <rits>
annevk: you mean those previous commits right like these one's https://github.com/whatwg/html/commit/dfa3f22b5278113cba689c3cf6e358f17e334311

[05:21:40.0000] <zcorpan>
Ms2ger: i don't disagree in principle though i didn't get used to it when working on <picture>. but if everyone prefers semantic linebreaks over 100-col i'd be cool with that

[05:22:43.0000] <annevk>
rits: yeah

[05:23:20.0000] <rits>
annevk: sure will do that :)

[05:23:39.0000] <annevk>
Ms2ger: semantic wrapping?

[05:23:43.0000] <annevk>
zcorpan: ^

[05:23:53.0000] <Ms2ger>
http://rhodesmill.org/brandon/2012/one-sentence-per-line/

[05:26:14.0000] <annevk>
Ah, let's not do that, that's a lot more work

[05:28:19.0000] <zcorpan>
i'm not sure it's really a lot more work, but it does need some getting used to

[05:30:55.0000] <zcorpan>
it also makes searching text simpler because you can search for things with just spaces instead of doing \s+ to catch things that are split over lines

[05:31:37.0000] <annevk>
That's true, I do try to keep terms on a single line

[05:31:46.0000] <annevk>
Although not in HTML since we weren't using that convention there

[05:56:27.0000] <frewsxcv>
https://html.spec.whatwg.org/multipage/forms.html#dom-form-item

[05:56:40.0000] <frewsxcv>
https://html.spec.whatwg.org/multipage/forms.html#htmlformelement

[05:56:55.0000] <frewsxcv>
instead of "getter Element (unsigned long index);", should it be "getter Element? (unsigned long index);"

[05:57:50.0000] <frewsxcv>
e.g. if formelement.elements is an empty collection, what element should formelements[100] return?

[06:00:04.0000] <zcorpan>
frewsxcv: i think that is covered by webidl (returns undefined)

[06:01:38.0000] <annevk>
if that is true we should have a note explaining that since the definition entirely defers to item() from HTMLCollection which can return null

[06:01:50.0000] <nox>
frewsxcv: That matters only for getters with a name.

[06:02:01.0000] <nox>
That getter doesn't have one.

[06:02:17.0000] <nox>
The one getter with a name and no optional type, IIRC, is in CSStyleDeclaration.

[06:02:34.0000] <nox>
For undefined properties, item() returns the empty string, while the getter returns undefined as usual.

[06:08:05.0000] <Ms2ger>
frewsxcv, logically, it returns Result<T, ()>

[06:08:24.0000] <Ms2ger>
Where Err(()) => undefined

[06:11:59.0000] <zcorpan>
http://heycam.github.io/webidl/#idl-indexed-properties has a note covering this

[06:30:13.0000] <annevk>
jgraham: under "Handle redirects" the navigate algorithm talks about a same-origin check, but I cannot think of any platform features that warrant that check being there

[06:30:42.0000] <annevk>
jgraham: is that perhaps a leftover from the old <form> submission methods (PUT/DELETE)

[06:30:50.0000] <annevk>
jgraham: that's the only thing I can think of that would warrant all that text there

[06:35:15.0000] <jgraham>
annevk: Not sure. I can't think of a way to navigate using a non GET/POST method either but it at least makes sense that if such a thing existed then you would want that check, so it could also be futureproofing

[06:45:20.0000] <annevk>
wanderview: I've been thinking about how to handle redirects and navigate

[06:45:41.0000] <annevk>
wanderview: I think I have a good one but it changes the processing model a bit...

[06:46:47.0000] <wanderview>
annevk: ok... process model of navigate or serviceworker/fetch?

[06:47:04.0000] <annevk>
wanderview: basically in HTTP fetch under "redirect status" we directly return when request's redirect mode is either "error" (with a network error) or "manual" (with a wrapped response), and all other processing of the response and modifying of the request only happens for "follow", which basically ends up invoking a "HTTP redirect fetch" algorithm for

[06:47:05.0000] <annevk>
that, that HTML will also invoke in order to follow the manual redirect it got back

[06:47:05.0000] <frewsxcv>
zcorpan: can you point me to the line in that link which talks about that behavior?

[06:47:48.0000] <annevk>
wanderview: I have to run an errand now, but I think I should have time to prepare a PR for this so you can review when I get back, if it doesn't sound totally crazy

[06:48:02.0000] <wanderview>
annevk: sounds reasonable... but I am also still waking up

[07:09:06.0000] <zcorpan>
i just realised the irony of <meta http-equiv="x-ua-compatible" content="IE=edge">

[07:12:24.0000] <zcorpan>
Domenic: can you test https://github.com/whatwg/html-build/issues/42#issuecomment-168966903 (and edit the comment) ?

[07:14:22.0000] <Domenic>
zcorpan: how do I translate the test output into table rows

[07:15:04.0000] <Domenic>
I get HTML: no space between: ȃ  / HTML: with space between: a ̑  / XHTML: no space between: a / XHTML: with space between: a

[07:15:30.0000] <Domenic>
i.e. hat-on-top, hat-to-the-side, no hat, no hat

[07:16:03.0000] <zcorpan>
Domenic: woah, no hat? i don't know how to explain that

[07:16:18.0000] <Domenic>
good times

[07:17:07.0000] <zcorpan>
maybe Edge doesn't support that FPI and expands unknown entities to the empty string

[07:17:19.0000] <Domenic>
in XHTML only though

[07:17:45.0000] <Domenic>
Isn't XHTML supposed to only have like two named character entities

[07:18:26.0000] <zcorpan>
Domenic: can you check http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3819 instead?

[07:18:59.0000] <zcorpan>
Domenic: the set can be extended with a DTD, and browsers have built-in DTDs that get enabled by the public identifier in the doctype

[07:19:20.0000] <Domenic>
zcorpan: same result

[07:19:52.0000] <zcorpan>
Domenic: ok thx. i can edit the comment

[08:01:35.0000] <rits_>
zcorpan: could you review https://github.com/whatwg/html/pull/456 , thanks!

[08:14:36.0000] <zcorpan>
rits_: done, thank *you*

[08:15:24.0000] <rits_>
zcorpan: \o/

[08:15:27.0000] <annevk>
wanderview: I wish you had stated your make all combinations work together preference a little earlier

[08:15:47.0000] <wanderview>
annevk: thats how I started the issue, no?

[08:15:52.0000] <annevk>
wanderview: your last comment was "either way"

[08:16:32.0000] <annevk>
wanderview: anyway, I'm glad I created a PR now

[08:16:57.0000] <wanderview>
annevk: I'm ok with blocking them... but not if it means fetch(url, { mode: 'no-cors' }) throws

[08:16:59.0000] <rits_>
annevk: the "same-origin data-URL flag" has to be added here https://fetch.spec.whatwg.org/#requests , right?

[08:18:15.0000] <annevk>
rits_: no, it is specified there

[08:19:10.0000] <rits_>
annevk: yeah :)

[08:19:32.0000] <annevk>
rits_: section 2.2.2 of HTML lists dependencies and terms imported from dependencies

[08:19:52.0000] <annevk>
rits_: under Fetch, that flag is not listed currently, but needs to be if we start using it

[08:21:09.0000] <rits_>
annevk: yes, thanks for the information

[08:56:12.0000] <annevk>
wanderview: https://github.com/whatwg/fetch/pull/194

[08:57:33.0000] <annevk>
wanderview: your comment in https://github.com/whatwg/fetch/issues/169#issuecomment-170612532 confuses me; my PR made omit/include work, but not same-origin

[09:05:51.0000] <annevk>
Domenic: what tweak did you make in https://github.com/whatwg/html/pull/492#issuecomment-170608046? I cannot figure it out

[09:06:02.0000] <annevk>
Probably doesn't matter, but since you mentioned it...

[09:07:44.0000] <Domenic>
annevk: changed back to plural "form elements"

[09:10:39.0000] <annevk>
Domenic: oh I see, I had been comparing identical commits

[09:19:01.0000] <annevk>
wanderview: either time for a third cup of coffee or perhaps a different strategy :p

[09:19:28.0000] <Domenic>
zcorpan: how's https://github.com/whatwg/html/pull/441 doing? Been open for a while

[09:19:31.0000] <annevk>
wanderview: also, to be clear, I didn't try to set you up, I'm likewise not very sharp at the moment

[09:19:47.0000] <wanderview>
I've gotten this set of logic wrong in the spec a number of times

[09:19:49.0000] <wanderview>
I don't trust myself

[09:20:02.0000] <annevk>
Domenic: seems to be waiting for davve to review

[09:20:28.0000] <wanderview>
annevk: my confusion is compounded by gecko using a reversed logic flag... we have an "exclude credentials" flag which we set in the reverse logic condition

[09:20:49.0000] <zcorpan>
Domenic: yeah, i think it's a-OK. i could ask davve if he would like to check again though

[09:21:26.0000] <annevk>
wanderview: ah, I moved towards include because the safe default is to not include them

[09:21:36.0000] <wanderview>
yea, makes sense

[09:21:41.0000] <annevk>
wanderview: though the web-compatible default is often unsafe of course :/

[11:24:09.0000] <jyasskin>
I had a reference to https://html.spec.whatwg.org/multipage/webappapis.html#script-execution-environment, which has now disappeared. Is that now https://tc39.github.io/ecma262/#sec-execution-contexts?

[11:28:06.0000] <Domenic>
jyasskin: it depends on what you are doing with that reference... it was never a well-defined concept in HTML, to be honest :-/

[11:30:46.0000] <jyasskin>
I'm using it to say when navigator.bluetooth.requestDevice() will return the same BluetoothDevice instance. Maybe the global object is the right thing to attach that to? Should we share objects across any wider scope than a global object?

[11:32:13.0000] <Domenic>
jyasskin: yeah the global object = current Realm = environment settings object (pick one, probably entry) is the right thing to do there. You should not share objects across any wider scope in general, since different realms have different Object.prototype etc.

[11:33:19.0000] <Domenic>
jyasskin: maybe you can just use the Bluetooth interface though; there should only be one of those per global, right?

[11:35:13.0000] <jyasskin>
Yeah, I can use that. Should I want realm1.navigator.bluetooth.requestDevice() to return objects from window1, even if it's called from realm2?

[11:35:17.0000] <jyasskin>
s/window1/realm1

[11:36:34.0000] <Domenic>
oof i hate these sort of questions

[11:37:37.0000] <Domenic>
Maybe good to check with bz who generally has opinions on this, but my provisional thoughts would be: treat it like instance state. So window1.navigator.bluetooth.requestDevice.call(window2.navigator.bluetooth) will look it up on the "this" value, i.e. on window2

[11:37:52.0000] <Domenic>
or on window2's Bluetooth instance, rather

[11:39:49.0000] <jyasskin>
Yes, that's what I was suggesting. window2.navigator.bluetooth would be the Bluetooth instance. Then we'd attach each object to its Bluetooth instance so it could look up the right objects too.

[11:41:21.0000] <jyasskin>
I'll cc bz on the change that fixes this, so he can comment.

[11:41:30.0000] <Domenic>
awesome yeah sounds like a good plan to me

[11:41:39.0000] <Domenic>
sorry about messing up the link

[11:42:45.0000] <rits_>
Domenic: for wrapping only wrap to 100 characters is necessary for the whatwg spec, because when i set to 100 it goess like this http://pastebin.com/yLZFaDpQ

[11:43:17.0000] <Domenic>
rits_: that doesn't seem like correct wrapping; whatever tool you are using is not doing a good job

[11:44:03.0000] <rits_>
Domenic: sublime, but i have tried every option to set it's wrapping

[11:44:05.0000] <caitp>
aren't tools just the worst

[11:44:22.0000] <Domenic>
rits_: in general I just make sublime put a line at 100 characters and make sure to never go over it

[11:45:03.0000] <rits_>
Domenic: ok from ruler right?

[11:45:13.0000] <Domenic>
rits_: yeah

[11:45:35.0000] <caitp>
do they let you hire interns Domenic

[11:45:55.0000] <caitp>
if you get the chance you should get an intern to make a clang-format plugin for bikeshed et al

[11:46:09.0000] <jyasskin>
Domenic: No problem; it pointed out that I wasn't precisely specifying what happens.

[11:47:36.0000] <rits_>
Domenic: ok i did that too but sometimes i kind of cross that and it starts looking weird, thanks!, i'll try to be more specific now :)

[12:28:48.0000] <zcorpan>
wow... running firefox 2 feels like running netscape 4

[12:29:46.0000] <zcorpan>
everything is blurry, i suppose it doesn't do subpixel stuff. and it crashes trying the thing i want to test

[12:30:43.0000] <caitp>
isn't that like a 10 year old browser now?

[12:30:57.0000] <zcorpan>
<iframe src="  ->     * IFRAME src="</HTML" hahaha i had forgotten about this pre-html5-parser gecko bug

[12:32:25.0000] <zcorpan>
caitp: i somehow hadn't expected that testing a 10 year old browser now would give the same vibes as testing a 10 year old browser 10 years ago

[12:32:58.0000] <zcorpan>
because i remember using firefox 2 and it didn't suck

[12:33:42.0000] <gsnedders>
caitp: more, no?

[12:33:57.0000] <caitp>
idk, I'm thinking somewhere around 2005

[12:34:27.0000] <gsnedders>
2006, apparently

[12:34:36.0000] <gsnedders>
less than 10

[12:39:33.0000] <caitp>
displays were smaller, had different aspect ratios, and were still CRTs more often than not

[12:43:01.0000] <zcorpan>
the mathml.dtd thing apparently doesn't work for data: url documents in firefox 2.

[12:44:07.0000] <zcorpan>
it resolves the system identifier and checks if the last part of the path is "mathml.dtd", case-insensitively

[13:03:17.0000] <zcorpan>
annevk: https://github.com/w3c/web-platform-tests/issues/2466 - is there a hook for when a node changes its node document? maybe just say "the node document is changed"?


2016-01-12
[23:52:41.0000] <annevk>
zcorpan: do browsers have such a hook internally?

[23:53:15.0000] <zcorpan>
annevk: i don't know

[23:54:00.0000] <annevk>
zcorpan: perhaps the "adopting steps" should only run if the document actually changes (and otherwise you just get the removal notification)

[23:54:23.0000] <zcorpan>
annevk: yeah, i was thinking that as well

[23:55:13.0000] <zcorpan>
annevk: what other things are using "adopting steps"?

[23:55:19.0000] <annevk>
I guess asking smaug and Dominic might help

[23:55:41.0000] <annevk>
zcorpan: <template>

[23:57:06.0000] <zcorpan>
annevk: looks like <template> wouldn't regress with such a change

[23:57:12.0000] <annevk>
zcorpan: agreed

[23:57:29.0000] <annevk>
zcorpan: would still like to check with implementations though

[23:57:45.0000] <zcorpan>
yeah

[23:58:06.0000] <zcorpan>
i can file a bug on the dom spec

[00:02:56.0000] <annevk>
ta

[00:12:19.0000] <ritsyy>
zcorpan: sometimes when i wrap it to 100 characters the lines become very messy, wrapping it to 80 characters would be bad solution to it?

[00:12:33.0000] <ritsyy>
zcorpan: i think the wrapping looks weird still https://github.com/Ritsyy/html/commit/8105da3c0feab3c4a186e6b3a7ff1bf1e18836ea

[00:13:51.0000] <zcorpan>
ritsyy: where did those < come from? :-)

[00:15:05.0000] <ritsyy>
zcorpan: ah, sublime is rude to me see this one also when i wrap it to 100 characters the text goes like this http://pastebin.com/AtPCiq9Z

[00:16:16.0000] <ritsyy>
zcorpan: i tried to clean them up, but i am not able to figure out why it add these > , i am really sorry i'll change it

[00:16:40.0000] <zcorpan>
ritsyy: no problem

[00:17:11.0000] <ritsyy>
zcorpan: thank you

[00:17:15.0000] <zcorpan>
ritsyy: as for messy lines, i think just wrap to 100 anyway and not worry about it looking "messy"

[00:18:14.0000] <ritsyy>
zcorpan: okay :)

[00:19:05.0000] <zcorpan>
ritsyy: maybe sublime's wrap thing thinks < is a quote or comment character or something? maybe it can be turned off somehow

[00:19:51.0000] <ritsyy>
zcorpan: yes maybe that can be a reason i'll search for it

[00:24:46.0000] <annevk>
ritsyy: you're on Linux, right? I think you should have gedit... Perhaps that works better?

[00:27:27.0000] <ritsyy>
annevk: yes i am on linux, okay i am using that now, hope it works right, thanks!

[00:42:46.0000] <annevk>
zcorpan: Domenic != Dominic

[00:43:06.0000] <zcorpan>
annevk: heh oops

[00:53:12.0000] <zcorpan>
Domenic: i get 2 wattsi errors when generating script-type-module branch

[01:36:39.0000] <annevk>
Domenic: https://github.com/annevk/html-cross-origin-objects/issues/8

[03:27:07.0000] <ritsyy>
annevk:  is this one mentioning it the flag set correctly http://pastebin.com/73SBRcZT  for bug https://github.com/whatwg/html/issues/176

[03:28:21.0000] <annevk>
ritsyy: you want to do something like "Set <var>request</var>'s <span>... flag</span>." in a previous step, before <!--FETCH-->

[03:30:35.0000] <ritsyy>
annevk: okay, just thought if may be this could be correct, i'll add it before the <!--FETCH-->

[03:54:03.0000] <zcorpan>
https://github.com/issues?utf8=✓&q=is%3Aopen+is%3Aissue+label%3A"good+first+bug"+user%3Awhatwg <- all good first bugs for all whatwg repos

[03:57:56.0000] <annevk>
nice

[03:58:18.0000] <daurnimator>
"a HTTP server" or "an HTTP server"?

[03:58:36.0000] <akanksha_>
Hello zcorpan, I am new to whatwg. Can you suggest how to get started solving bug and setting up for development?

[03:58:53.0000] <annevk>
daurnimator: an, I think

[03:59:09.0000] <zcorpan>
akanksha_: welcome! good to have you here :-)

[03:59:49.0000] <zcorpan>
akanksha_: it depends on which spec you would like to work on. html?

[04:00:31.0000] <daurnimator>
annevk: so "A HTTP/1.0 connection" is okay?

[04:00:48.0000] <akanksha_>
Yeah sure! I'd love to work on HTML.

[04:00:55.0000] <daurnimator>
uh *"An HTTP/1.0 connection"

[04:01:14.0000] <annevk>
daurnimator: yeah, because of the way you pronounce HTTP/1.0

[04:01:35.0000] <daurnimator>
/me says "haich tee tee pee"

[04:02:39.0000] <zcorpan>
akanksha_: great, have a look at https://github.com/whatwg/html#pull-requests and https://github.com/whatwg/html-build#html-build-tools and please ask questions if something is not clear

[04:02:42.0000] <annevk>
daurnimator: right, and for that "an" makes it sound more natural

[04:03:12.0000] <daurnimator>
annevk: (for "aiche" it does... not so much for "haich". but I think i'm in the minority here)

[04:03:35.0000] <annevk>
daurnimator: ah, hmm, you might be

[04:03:39.0000] <Ms2ger>
"The HTTP..." :)

[04:04:40.0000] <zcorpan>
"huttup"

[04:06:31.0000] <zcorpan>
https://www.youtube.com/watch?v=xqpd7WcBmjM

[04:27:09.0000] <Ms2ger>
whatwig?

[04:28:42.0000] <akanksha_>
zcorpan, On running build.sh I am getting the following error. I think it might be due to the proxy I am working behind. Can you point me in the right direction to make the change? http://fpaste.org/309752/26016681/

[04:29:55.0000] <MikeSmith>
akanksha_: I'm not sure there's any way to fix that on the client side

[04:30:18.0000] <zcorpan>
akanksha_: MikeSmith: would a VPN help?

[04:30:27.0000] <MikeSmith>
zcorpan: sure

[04:31:17.0000] <MikeSmith>
but what would really help is if we just check that generated cldr file and XML file into our github repo and just version it

[04:31:18.0000] <akanksha_>
^How would I go about doing that?

[04:32:22.0000] <MikeSmith>
zcorpan: I think it's pathological that we are making contributors deal with (re)builing those files just to be able to make a PR with a contribution

[04:32:47.0000] <Ms2ger>
Yeah, that cldr stuff is annoying

[04:33:10.0000] <MikeSmith>
zcorpan: this gets back to the question you had about downloading in parallel: The way I would prefer to deal with it is, we just quit imposing those downloads on contributors

[04:33:35.0000] <zcorpan>
MikeSmith: that sounds good

[04:34:04.0000] <MikeSmith>
OK I will make a PR for it and we'll see if we can get agreement on it

[04:34:47.0000] <MikeSmith>
akanksha_: there are some VPN services that are free I think

[04:35:02.0000] <MikeSmith>
gimme a minute to look

[04:37:11.0000] <MikeSmith>
http://www.vpnbook.com/ maybe

[04:37:29.0000] <akanksha_>
^On it!

[04:40:15.0000] <annevk>
MikeSmith: we should perhaps also stop downloading unicode.xml or whatever the name is automatically

[04:40:44.0000] <MikeSmith>
annevk: yeah that's what I meant by "XML stuff"

[04:40:51.0000] <annevk>
MikeSmith: and just keep a local copy checked in, that we update once we have consensus that we actually want to change the specification around entities

[04:40:56.0000] <MikeSmith>
right

[04:41:03.0000] <MikeSmith>
agreed

[04:41:34.0000] <annevk>
especially given the latest thing there where upstream changed but we found out we didn't want to change

[04:42:13.0000] <MikeSmith>
right

[04:42:48.0000] <MikeSmith>
plus the fact that upstream doesn't change that often to begin with

[04:51:49.0000] <akanksha_>
Hey, so I got the build done. While I was trying to setup the vpn account I also decided to look up changes that I could make to let that cldr download  command run with proxy settings and turns out by changing svn server config to use my proxy settings I was able to do so. I'd like to get started with some easy bugs to get a feel of the code. I am a student

[04:51:50.0000] <akanksha_>
so bear with me if I am a little slow. Can you all suggest some easy bug so I can make my initial PR?

[04:59:53.0000] <zcorpan>
akanksha_: https://github.com/whatwg/html#contribution-opportunities has links to good first bugs. e.g. https://github.com/whatwg/html/issues/502 seems easy

[05:27:53.0000] <robertkowalski>
:))

[05:28:01.0000] <Ms2ger>
> investigated cross-browser behaviour of initial about:blank iframe loads

[05:28:06.0000] <Ms2ger>
jdm is the new hsivonen

[05:37:14.0000] <smaug____>
why do we need https://w3c.github.io/preload/?

[05:37:48.0000] <smaug____>
yoav_,  igrigorik ^

[05:38:19.0000] <smaug____>
it smells a lot like prefetch + some feature which service workers is supposed to deal with

[05:38:55.0000] <yoav_>
smaug____: prefetch is for next navigation, preload is for current one

[05:39:32.0000] <yoav>
main use case is to fetch critical resources with late discovery earlier

[05:40:01.0000] <yoav>
also enables to decouple download from execution while downloading with the right resource type

[05:40:55.0000] <smaug____>
yoav: "next navigation" is so vaguely spec'ed that browser can use it , and most probably does use it for "current navigation"

[05:41:21.0000] <smaug____>
"Add request to preload response cache (TODO). "

[05:41:58.0000] <smaug____>
/me is not at all sold with the idea having different rel types for effectively same feature

[05:43:55.0000] <yoav>
smaug____: we started by a more unified model of rel types, but then split it out since it wasn't future friendly

[05:45:07.0000] <yoav>
the semantics of "prefetch" (next nav hint) and "preload" (mandatory current nav fetch) are significantly different

[05:45:22.0000] <smaug____>
prefetch is _very_vaguely spec'ed

[05:46:21.0000] <smaug____>
effectively only thing spec is is "The prefetch relationship is used to declare a resource that might be required by the next navigation, and that the user agent SHOULD fetch, such that the user agent can deliver a faster response once the resource is requested in the future."

[05:46:28.0000] <smaug____>
that is all

[05:46:46.0000] <smaug____>
and "next navigation" itself is unclear

[05:48:23.0000] <smaug____>
is it really the idea that prefetch can't be used at all in single page applications ?

[05:49:01.0000] <smaug____>
/me wants to see browser tests proving that they don't use prefetch'ed resources in such app

[06:18:58.0000] <zcorpan>
MikeSmith: what causes this?:

[06:19:01.0000] <zcorpan>
Possible article problems:

[06:19:01.0000] <zcorpan>
17351:    <dd>If the element has a <code data-x="attr-hyperlink-href">href</code> attribute: <span>Interactive content</span>.</dd>

[06:19:18.0000] <annevk>
zcorpan: see the end of the build script

[06:19:23.0000] <annevk>
zcorpan: should be "an href"

[06:19:37.0000] <zcorpan>
ah

[08:06:28.0000] <ritsyy>
https://github.com/whatwg/html/issues/388 this bug is still is showing up in open issues

[08:09:35.0000] <zcorpan>
Domenic: i know it's WIP :-D but i have to dig in to understand what's going on and maybe come up with something useful like https://github.com/whatwg/html/pull/443#issuecomment-170847782 , but feel free to ignore the wording nits for now

[08:10:08.0000] <Domenic>
zcorpan: OK :) good point I need to respond to that post

[08:12:47.0000] <zcorpan>
Domenic: is there an introduction or explainer for JS modules? i could read the JS spec but my brain is starting to block synapses this time of the day

[08:13:48.0000] <Domenic>
zcorpan: http://jsmodules.io/ is OK for basic syntax. A lot of what this PR is dealing with is the string portion (i.e. in `import * as fs from "fs"`, the "fs").

[08:13:59.0000] <Domenic>
jsmodules.io glosses over the string portion

[08:14:15.0000] <annevk>
ritsyy: can you close it?

[08:14:28.0000] <annevk>
ritsyy: maybe mention the PR that fixed it in a comment while you do that

[08:14:36.0000] <zcorpan>
Domenic: thx

[08:16:13.0000] <ritsyy>
annevk: okay will do that

[09:12:10.0000] <jochen__>
is there somewhere a spec what the baseURI of a document should be if you open() it?

[09:29:35.0000] <gsnedders>
jochen__: about:blank, no?

[09:29:43.0000] <gsnedders>
jochen__: that should be in HTML

[09:31:33.0000] <jochen__>
i didn't find it

[09:31:51.0000] <jochen__>
and it appears to be the baseURI of the document that opened the doc

[09:33:19.0000] <jochen__>
https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-72161170 is linked from mdn

[09:34:40.0000] <gsnedders>
"If the document's address is about:blank, and the Document's browsing context has a creator browsing context, then return the document base URL of the creator Document, and abort these steps.

[09:34:44.0000] <gsnedders>
from HTML

[09:35:17.0000] <gsnedders>
jochen__: you don't want to look at DOM Level 2 HTML, really

[09:35:25.0000] <gsnedders>
jochen__: https://dom.spec.whatwg.org is way closer to reality

[09:37:34.0000] <annevk>
MDN should update its URLs at some point

[09:38:12.0000] <annevk>
jochen__: https://github.com/whatwg/html/issues/421 has some related discussion

[10:37:02.0000] <ritsyy>
for this bug https://github.com/whatwg/html/issues/156 , as the byte sequences are fixed for headers,

[10:37:26.0000] <ritsyy>
i needed a starting pointer of how headers are byte sequences or any other example to explain this

[11:25:13.0000] <Jasper>
Bizarre question. Google doesn't give a clear answer. What's the state of the art for gzip / deflate in HTTP *requests*?

[11:25:35.0000] <Jasper>
mod_deflate seems to support Content-Encoding: gzip on requests, but I can't find any client that would ever use it, because of capability negotiation stuff.

[11:26:20.0000] <Jasper>
Theoretically, clients could use an HTTP OPTIONS request to figure out what the server supports, but I can't find any standard for what header to send back -- both Content-Encoding and Accept-Encoding are in active use.

[11:26:37.0000] <Jasper>
Did I miss something obvious here?

[11:32:09.0000] <caitp>
I thought gzipping responses was something servers were just configured to do

[11:32:20.0000] <caitp>
never heard of a negotiation for that

[11:33:05.0000] <gsnedders>
Jasper: as far as I know, there's been no real movement in forever on that front.

[11:33:20.0000] <Jasper>
caitp, requests, not responses.

[11:33:45.0000] <Jasper>
gzipped responses are negotiated by the client setting Accept-Encoding in the request header

[11:35:00.0000] <Jasper>
gsnedders, OK, thanks.

[11:35:19.0000] <Jasper>
We're trying to cut down on upload sizes. We'll probably just gzip the payload ourselves rather than try to use HTTP for it.

[11:41:44.0000] <IZh>
Hixie: Domenic, annevk: Hi! My PDF generator can't again generate the document because of https://html.spec.whatwg.org/images/wolf.jpg and https://html.spec.whatwg.org/images/kettlebell.jpg images having MIME type text/html which is a bit wrong.

[11:42:08.0000] <Domenic>
IZh: oh, thanks, will fix!!

[14:35:16.0000] <gsnedders>
SimonSapin: do you have any interest in maintaining (python-)webencodings any more?

[14:35:22.0000] <gsnedders>
SimonSapin: I assume not? :)

[14:48:07.0000] <yoav>
Domenic: friendly ping on https://github.com/whatwg/dom/pull/144 :)


2016-01-13
[02:34:21.0000] <Ms2ger>
var a = document.createElement("a");

[02:34:22.0000] <Ms2ger>
a.setAttribute("href", "//[:\uD83C]");

[02:34:22.0000] <Ms2ger>
w(a.href)

[02:34:32.0000] <Ms2ger>
Does this log a string containing an unpaired surrogate?

[02:34:49.0000] <Ms2ger>
Bonus points for a spec pointer to back you up

[02:57:04.0000] <annevk>
Ms2ger: how about a bug? https://www.w3.org/Bugs/Public/show_bug.cgi?id=26967

[02:58:24.0000] <Ms2ger>
That works

[03:00:23.0000] <annevk>
Ms2ger: the logged string should not have surrogate, though

[03:00:55.0000] <annevk>
Ms2ger: oh wait, that fails to parse, so maybe it should, hmm

[03:02:03.0000] <Ms2ger>
Yeah, the case where parsing succeeds is fine

[04:03:39.0000] <annevk>
I forgot who asked me when I would write a blog post again, but I published something

[04:10:04.0000] <rits>
annevk: i have updated the commit list https://github.com/whatwg/html/pull/484

[04:11:55.0000] <rits>
annevk: i have yesterday's question  still for this issue https://github.com/whatwg/html/issues/156

[04:46:28.0000] <annevk>
rits: for the second one, whereever HTML now uses 0xNN notation for bytes we could maybe move to using `c` instead

[04:47:15.0000] <annevk>
rits: if NN <= 7F

[04:47:43.0000] <rits>
annevk: okay you have implemented it for headers

[04:48:19.0000] <annevk>
rits: yeah, it could maybe be done for "prescan a byte stream to determine its encoding" too, but I'm not sure if it would make that more readable

[04:48:34.0000] <annevk>
rits: I'm also not sure if I did it for all headers and their values, I somewhat doubt it

[04:49:35.0000] <rits>
annevk: okay, so if i will give it a check for headers first

[05:32:56.0000] <smaug____>
how does one turn on some experimental flags in Chrome?

[05:34:01.0000] <smaug____>
ah, about:flags

[05:46:29.0000] <JakeA>
Domenic: Am I missing something, or is https://github.com/domenic/streams-demo not boundry-safe?

[05:46:52.0000] <JakeA>
As in, if the search value is present, but broken across multiple chunks

[07:41:35.0000] <JakeA>
Domenic: stream.cancel(reason) - I'm guessing reason should be an Error since it's also used in rejections?

[07:42:46.0000] <JakeA>
Or is it the other way around? "reason" will be an error if it's the result of a promise rejection?

[08:00:55.0000] <Domenic>
JakeA: yes it is not boundary safe, i was lazy. reason can be anything; it is only used by the underlying source, which in Chrome I don't think does anything with it (although maybe it should log it to the console or something...)

[08:01:53.0000] <JakeA>
Domenic: here's a boundary-safe (I think) demo that searches the html spec https://jsbin.com/tepohi/edit?js,console

[08:03:27.0000] <Domenic>
JakeA: ah awesome

[08:04:05.0000] <JakeA>
Streams are awesome btw, loads of fun

[08:04:08.0000] <Domenic>
:D

[11:13:28.0000] <Manishearth>
annevk: around?

[11:17:35.0000] <Manishearth>
annevk: Fetch doesn't really explain how to handle HTTP 204

[11:17:47.0000] <Manishearth>
(the correct way to handle it seems to be to not navigate at all)

[11:50:37.0000] <annevk>
Manishearth: HTML should cover that, no?

[11:50:43.0000] <Manishearth>
annevk: does it?

[11:51:04.0000] <annevk>
Dunno, but that would be the place

[11:51:36.0000] <annevk>
Feel free to file an issue of course

[12:03:25.0000] <Manishearth>
annevk: https://html.spec.whatwg.org/#navigating-across-documents step 20, but it could be more specific I think?

[12:04:34.0000] <annevk>
Sure

[12:04:55.0000] <annevk>
Navigate needs a ton of refactoring anyway

[12:29:28.0000] <Manishearth>
Hixie: step 21 here mentions things which require processing not affecting the browsing context

[12:29:31.0000] <Manishearth>
https://html.spec.whatwg.org/multipage/browsers.html#navigating-across-documents

[12:29:34.0000] <Manishearth>
is there an exhaustive answer for this?

[12:30:04.0000] <Manishearth>
i.e. does that note contain everything that's needed on the spec-side to be processed this way?

[12:30:47.0000] <Manishearth>
IMO 204 and 205 should at least be listed as musts there. Things like javascript:void(0) (used by basically everyone) break otherwise.

[12:31:20.0000] <Manishearth>
Though I'm not sure why incorrect TLS cert is there -- AIUI that should navigate to an error page?

[12:31:43.0000] <Manishearth>
Basically there are certain responses (204, 205) which should not navigate at all, not even to an erro rpage

[12:32:09.0000] <Manishearth>
and certain responses which *may* not navigate

[12:47:21.0000] <annevk>
Manishearth: file issues or write PRs, best way to make progress here

[12:48:48.0000] <Manishearth>
annevk: cool

[12:50:02.0000] <annevk>
Manishearth: thank you!

[13:02:02.0000] <Manishearth>
annevk: https://github.com/whatwg/html/issues/511

[14:54:36.0000] <smaug____>
can wpt tests test form submission?

[14:54:56.0000] <smaug____>
like what kind of data is sent to the server side

[15:41:17.0000] <one77>
hi

[15:41:18.0000] <botie>
hi, one77

[15:41:26.0000] <one77>
im new here

[15:41:43.0000] <one77>
i was searching for a chatroom where i can find people like webdevelopment like i do


2016-01-14
[01:58:22.0000] <zcorpan>
hmm the only way i can think of for testing coords parsing is to .focus() the area and use reftests

[02:00:05.0000] <zcorpan>
or actually, maybe elementFromPoint

[02:02:21.0000] <zcorpan>
elementFromPoint always returns the <img> in gecko, known bug iirc

[02:05:15.0000] <gsnedders>
wait what

[02:05:22.0000] <gsnedders>
kinda odd bug

[02:49:02.0000] <zcorpan>
i wonder how Edge copes with the web with this bug https://github.com/Microsoft/ChakraCore/issues/20

[02:53:06.0000] <gsnedders>
could be handling it in the HTML parser or something weird

[03:00:40.0000] <annevk>
zcorpan: I guess it would be good to get feedback from some browsers on the new coords algorithm

[03:00:49.0000] <annevk>
zcorpan: i.e., whether that's something they're willing to align on

[03:01:00.0000] <annevk>
zcorpan: if we have two browsers, that'd be good enough

[03:01:49.0000] <zcorpan>
annevk: yep, i can ping some

[03:07:48.0000] <annevk>
https://plus.google.com/+JirkaKosek/posts/4nh8VGRfrz1 hahaha

[03:08:05.0000] <annevk>
Oh my, Hixie commented too

[03:17:37.0000] <ondras>
heh, Jirka Kosek

[03:25:25.0000] <Ms2ger>
Yeah, that seems likely to be handled at a higher level

[03:43:10.0000] <zcorpan>
anyone know weinig⊙ac's github handle?

[03:55:01.0000] <annevk>
hober might know ^^

[04:45:43.0000] <yoav_>
Anyone knows where window.top (DOMWindow) in general is specced?

[04:48:27.0000] <Ms2ger>
HTML

[04:48:41.0000] <Ms2ger>
Do you need a more specific link?

[05:04:35.0000] <yoav>
Ms2ger: Got it, thanks! :)

[05:04:41.0000] <Ms2ger>
Np

[06:38:19.0000] <annevk>
Domenic: who wrote the latest JavaScript URL parser again? Might want to look at https://github.com/whatwg/url/issues/77

[06:51:42.0000] <frewsxcv>
what is the expected output of this? https://gist.github.com/frewsxcv/8f440c078b5912d8ae21

[06:51:55.0000] <frewsxcv>
chrome and firefox currently differ

[06:53:15.0000] <Domenic>
annevk: Sebmaster, yeah. We'll track it and update wpt.

[06:53:31.0000] <annevk>
<3

[06:55:12.0000] <annevk>
frewsxcv: per https://dom.spec.whatwg.org/#interface-htmlcollection the property names don't enumerate

[06:56:00.0000] <annevk>
frewsxcv: so I'm guessing Gecko is correct

[08:57:04.0000] <mounir>
annevk: for the inline table, should we wait to get philipj's opinion?

[09:08:33.0000] <annevk>
mounir: I guess that's fine, but you'll still need to address how to exactly navigate the table

[09:09:00.0000] <Domenic>
annevk: I don't get it, it seems clear to me?

[09:10:16.0000] <annevk>
Domenic: we are much more precise elsewhere, e.g., "... to the value given in the second column of the row of the following table whose first column contains the /new playback state/."

[09:10:41.0000] <annevk>
Domenic: and even that is not as precise as it doesn't account for cells...

[09:10:48.0000] <Domenic>
well ok, I guess for consistency we can just copy that wording, but it seems really overkill

[09:11:52.0000] <annevk>
Domenic: I think that extra context helps a lot, especially if you don't have the table in front of you visually

[09:12:35.0000] <annevk>
Domenic: also, for someone who always complains about vagueness of non-ES specifications, I'm disappointed

[09:12:58.0000] <Domenic>
annevk: I really don't feel like anyone needs instructions on how to read a clearly-labeled table.

[09:13:07.0000] <mounir>
as someone who never complains about vagueness, I find this overkill :)

[09:13:26.0000] <mounir>
but I will apply the change request :)

[09:14:20.0000] <annevk>
Domenic: it doesn't really follow from first principles to how it should be read

[09:14:41.0000] <Domenic>
I'm not really that into debating this but I don't understand what first principles are involved in reading a table

[09:15:12.0000] <annevk>
If you don't say what the value should be set to, it's ambiguous

[09:15:46.0000] <Domenic>
The current wording is "the exception matching the given <var>error</var> in the following table" the table has a clearly labeled column "exception"

[09:16:03.0000] <Domenic>
whatevs, don't really care

[09:17:10.0000] <mounir>
annevk: btw, fwiw, your example is slightly falacious

[09:17:26.0000] <mounir>
annevk: it's a table with three column, way less clear what the association is ;)

[09:19:41.0000] <annevk>
mounir: since you want to continue debating the point I recommend you search for "second column" throughout the HTML standard to find many examples of us doing exactly this for two column tables

[09:20:46.0000] <annevk>
/me is also somewhat dubious about the ", then" thing having editorial precedent, but okay

[09:21:13.0000] <mounir>
annevk: updated

[09:21:58.0000] <annevk>
mounir: you also want to use ":"

[09:22:15.0000] <annevk>
mounir: and since <var>error</var> is a variable it doesn't need "the"

[09:23:22.0000] <annevk>
mounir: Domenic: perhaps we should wait for foolip since he had some thoughts on the timing stuff, no?

[09:23:57.0000] <mounir>
annevk: that sounds reasonable to wait for him

[09:24:12.0000] <Domenic>
annevk: I tend to agree; although it seems likely it won't impact anything (or that any changes would be made as part of a bigger change), this feels like foolip's area of expertise and it would be good to get his sign off

[09:25:55.0000] <mounir>
annevk: "the" removed. I didn't use ":" because it wasn't used in the example I saw

[09:26:39.0000] <annevk>
I guess there is some inconsistency on that, ugh

[09:26:51.0000] <mounir>
annevk: apart from 4.8.13.12.3, only "." is used

[09:26:57.0000] <mounir>
(in embedded-content.html that is)

[09:27:42.0000] <annevk>
Yeah, it isn't often in the entire spec, still seems better in a way, but I guess it's fine either way

[09:28:02.0000] <annevk>
Perhaps one day a real grammar nitpicker will discover us and help us out

[09:29:13.0000] <mounir>
given the size of the document, I hope for them that they will look, shiver and go away :)

[09:44:24.0000] <annevk>
Domenic: who are you looking for review from before landing?

[09:44:31.0000] <annevk>
Domenic: for <script type=module>

[09:45:04.0000] <annevk>
Domenic: would it help if I went through it again tomorrow? Or might it be better if I wait for Adam to give it another look?

[09:47:49.0000] <Domenic>
annevk: yeah I was hoping mainly for you and Adam before merging. A review would be lovely; I will poke Adam too.

[11:08:26.0000] <jyasskin>
Re https://github.com/WebBluetoothCG/web-bluetooth/pull/198, are there any examples of specs that assign a platform object's global environment from its parent as bz would like?

[11:22:33.0000] <annevk>
jyasskin: ImageData is an example where browsers disagree

[11:23:07.0000] <annevk>
jyasskin: see one of my PRs against wpt

[11:23:23.0000] <jyasskin>
Yeah, I don't doubt that browsers have been inconsistent about this (I assume between inheriting from a parent vs the entry settings object). I'm looking for wording to copy, if possible.

[11:24:07.0000] <annevk>
jyasskin: doubt that exists, have been trying to get IDL to define it

[11:24:58.0000] <jyasskin>
Ok, if IDL is going to define it, then I should probably wait in Web Bluetooth until the needed wording is more clear.

[11:25:40.0000] <jyasskin>
(IDL currently says "It is the responsibility of specifications using Web IDL to state which global environment (or, by proxy, which global object) each platform object is associated with.")

[11:29:05.0000] <annevk>
Yeah, it's a bit of a mess 😟

[11:54:44.0000] <gsnedders>
Important real world questions: how do you tell a bunch of people their code is a mess politely?

[12:21:38.0000] <jamesr_>
gsnedders: lemme know when you find out, please

[13:06:32.0000] <darobin>
gsnedders: "Ah, yes, I did that in PHP a few years ago."

[13:07:15.0000] <gsnedders>
darobin: don't worry, half of this /is/ PHP

[13:07:22.0000] <darobin>
oh well there you go

[13:08:14.0000] <gsnedders>
Hey at least https://lists.w3.org/Archives/Public/www-archive/2016Jan/att-0004/graph.png doesn't look too bad as a dependency graph!

[13:08:21.0000] <gsnedders>
It's acyclic!

[13:08:55.0000] <darobin>
lol

[13:10:57.0000] <gsnedders>
I feel like it's over modularised, really

[14:06:49.0000] <rbyers>
annevk: What's your approach to / thoughts on conformance tests for the DOM spec?

[14:07:32.0000] <rbyers>
I was able to find only https://github.com/w3c/web-platform-tests/tree/master/DOMEvents ...

[14:14:01.0000] <gsnedders>
rbyers: https://github.com/w3c/web-platform-tests/tree/master/dom?

[14:14:32.0000] <gsnedders>
rbyers: searching case-sensitively? there's a number of dom* directories at the top level

[14:14:41.0000] <rbyers>
gsnedders: Yeah just found that one too.  But is the W3C / WhatWG distinction important?

[14:14:56.0000] <gsnedders>
rbyers: not really

[14:15:06.0000] <rbyers>
Eg. presumably new tests are added only after W3C snapshots are taken of the DOM spec?

[14:15:19.0000] <gsnedders>
rbyers: don't read much into it being under the W3C org on GitHub

[14:15:24.0000] <gsnedders>
rbyers: no, that isn't the case

[14:15:47.0000] <rbyers>
Ah, cool.  So it's reasonable for me to submit a PR to add tests for a new feature currently only in the WhatWG version?

[14:15:56.0000] <gsnedders>
rbyers: yes

[14:16:27.0000] <rbyers>
Perfect.  I'm still planning on waiting until the features ships in at least one browser (probably silly to do sooner than that).

[14:16:30.0000] <rbyers>
Thanks!

[14:16:47.0000] <gsnedders>
rbyers: probably better to do before that so the feature gets testsd!

[14:18:43.0000] <rbyers>
Ok, happy to prepare it sooner - just figured no-one would want to land a test that fails everywhere (although I'd at least manually test it passing with the polyfill).  In this case (EventListenerOptions and passive event listeners) it probably doesn't matter much since we (blink) will be the first to ship, and the ones writing/running the tests, etc.

[14:18:44.0000] <rbyers>
Still, would like to do this right.

[14:23:49.0000] <gsnedders>
rbyers: well, the long-term aim is still something along the lines of you guys running all of w-p-t and directly adding tests to it as part of your development, so the tests would land in w-p-t at around the same time as the impl lands in Blink

[14:24:33.0000] <rbyers>
Yeah, that would be awesome.  I understand that's what Mozilla does.

[14:24:58.0000] <rbyers>
I'm trying to better understand the status here and hopefully my team can help push this along.

[14:25:17.0000] <gsnedders>
I'm happy to do anything that will help you guys get somewhere with that, FWIW, as I've said before

[14:27:20.0000] <rbyers>
Excellent, thanks!  I lack a bunch of the context here, who on blink have you been talking to about this?  I know dpranke and jsbell were pushing on this at one time, but I don't think there's a ton of active movement right now.

[14:27:31.0000] <gsnedders>
uhhhhhh

[14:27:41.0000] <gsnedders>
this was at TPAC I last spoke to anyone about it

[14:28:24.0000] <gsnedders>
Jeffrey (is that jyasskin? I forget surname) and someone else.

[14:28:33.0000] <jyasskin>
Yep

[14:28:35.0000] <jyasskin>
What?

[14:28:51.0000] <gsnedders>
jyasskin: Blink, running w-p-t

[14:29:08.0000] <jsbell>
yeah, trying to staff up a team to make blink's use of w-p-t better

[14:29:17.0000] <gsnedders>
it was you I spoke to at TPAC about that, I think

[14:29:27.0000] <jyasskin>
Sam Uong was the more likely implementer. I'm not sure what his state is now.

[14:29:46.0000] <jsbell>
rbyers: I can give you a brain dump. Basically just lots of stuff to do, needs dedicated attention.

[14:29:59.0000] <rbyers>
Great, thanks guys.  Given that my team works on input, we're mostly blocked on the fact that we have no standard way to automated input tests (and manual tests are almost useless IMHO).  We're working on extensions to webdriver for this, but once that's unblocked I plan to try to really push our use of web-platform-tests.

[14:30:07.0000] <gsnedders>
how much of it actually involves Google testing infra, and how much can be done by external people?

[14:31:05.0000] <jsbell>
gsnedders: most of the work to run w-p-t sanely is code changes in the chromium repo, so a chromium committer (not necessarily googler), but it's not dependent on changes to wpt or anything like that

[14:31:13.0000] <rbyers>
jsbell: I know we talked about this awhile back.  Not much sense in my team making a major effort when 95% of our tests would be manual, but hopefully we'll be done the first stage of the WebDriver effort this quarter - so I reach out then.

[14:31:22.0000] <jsbell>
10-4

[14:31:35.0000] <gsnedders>
jsbell: okay, that's what I thought

[14:33:13.0000] <rbyers>
Ok, gotta run.  For now I'll make sure we're adding WPT tests for the spec changes we drive, and importing the automated ones to run in blink's repo.  I definitely want to help more when the automation is ready though - maybe Q2.

[14:33:22.0000] <rbyers>
Thanks!


2016-01-15
[18:20:35.0000] <frewsxcv>
https://html.spec.whatwg.org/multipage/#htmldocument

[18:20:47.0000] <frewsxcv>
should that be part of the IDL spec? or is it not an IDL property?

[18:22:51.0000] <frewsxcv>
*part of the IDL interface

[20:28:48.0000] <Domenic>
frewsxcv: it is not an IDL property. IDL properties can only be getters.

[20:29:45.0000] <frewsxcv>
roger

[01:35:52.0000] <annevk>
rbyers: thanks for raising that, updated the README to point out the tests

[02:08:53.0000] <nox>
Domenic: It could be [Alias=HTMLDocument] interface Document { … }.

[02:09:38.0000] <nox>
Extending https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings#Alias to interfaces.

[02:16:05.0000] <annevk>
Oh, [Alias] would be great to have for some features, though perhaps a bit overkill

[02:40:50.0000] <Ms2ger>
nox, that's a completely different alias, though

[02:41:38.0000] <nox>
Ms2ger: Oh? So Document shouldn't be equal to HTMLDocument?

[02:41:44.0000] <nox>
annevk: Where?

[02:42:01.0000] <Ms2ger>
nox, I mean, [Alias] in Gecko webidl is a perf optimization

[02:42:54.0000] <nox>
Ms2ger: Oh yeah I know.

[02:43:14.0000] <nox>
Ms2ger: Where is it used btw? Invisible stuff?

[02:43:32.0000] <Ms2ger>
nox, it's an extension of [Constant] and [Pure]

[02:43:50.0000] <nox>
Weird.

[02:47:16.0000] <nox>
Ms2ger: Do you have an example?

[02:49:00.0000] <Ms2ger>
Wait

[02:49:10.0000] <Ms2ger>
Ignore everything I just said

[02:49:46.0000] <Ms2ger>
What I was talking about was [Affects]

[02:49:56.0000] <Ms2ger>
[Alias] is what you thought it was

[03:01:37.0000] <annevk>
nox: e.g. matches / webkitMatchesSelector

[03:01:54.0000] <annevk>
nox: or the various names of inputEncoding

[03:21:00.0000] <jochen__>
is there somewhere a spec that talks about what line number to use for inline scripts?

[03:26:18.0000] <Ms2ger>
HTML probably hand-waves a bit

[03:27:02.0000] <Ms2ger>
<script>

[03:27:03.0000] <Ms2ger>
var dcl = false;

[03:27:03.0000] <Ms2ger>
document.addEventListener("DOMContentLoaded", function(e) { dcl = true; });

[03:27:03.0000] <Ms2ger>
</script>

[03:27:03.0000] <Ms2ger>
<script defer>setTimeout(function() { w(dcl) }, 0);</script>

[03:27:15.0000] <Ms2ger>
Anyone have an opinion on what that logs?

[03:29:08.0000] <Ms2ger>
Domenic, ^

[03:29:44.0000] <Ms2ger>
(I *think* it's well-defined)

[03:31:19.0000] <nox>
annevk: Is matches supposed to be equal to webkitMatchesSelector?

[03:31:24.0000] <nox>
I guess it would make sense in fact.

[03:31:50.0000] <Ms2ger>
Yep

[03:32:41.0000] <nox>
LGTM? :P

[03:32:52.0000] <nox>
Ms2ger: Try to ping me a bit this weekend.

[03:33:01.0000] <nox>
I want to make LegacyUnenumerable and Alias reality.

[03:33:18.0000] <Ms2ger>
I try to avoid getting on IRC on my days off

[03:33:22.0000] <nox>
Oh right.

[03:33:31.0000] <nox>
Well then, chide me on Monday if I did nothing. :)

[03:34:53.0000] <annevk>
Oh I can help out with the Monday thing

[03:34:59.0000] <annevk>
That'll be fun

[03:35:16.0000] <nox>
annevk: Ah ah. :)

[03:36:02.0000] <Ms2ger>
Anyone know where defer scripts are executed in Chrome?

[03:45:19.0000] <Ms2ger>
annevk, you got IE on hand?

[03:45:42.0000] <annevk>
Ms2ger: only 11

[03:45:51.0000] <Ms2ger>
I'll take it :)

[03:45:52.0000] <Ms2ger>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3830

[03:46:58.0000] <annevk>
Ms2ger: defer false; defer sT: true; defer sT*2: true

[03:47:15.0000] <Ms2ger>
Thanks

[03:47:33.0000] <Ms2ger>
That matches Chrome, but not Gecko or the spec (as I read it)

[03:54:48.0000] <Ms2ger>
https://github.com/w3c/web-platform-tests/pull/2479

[04:06:39.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=29378 intredasting. wonder if webkit/blink have always used floats for width/height. (sci-not seems not supported though)

[05:34:11.0000] <Domenic>
Ms2ger: I am pretty sure the spec ignores defer for inline scripts

[05:34:25.0000] <Ms2ger>
Domenic, you make a good point

[05:34:59.0000] <Ms2ger>
At least I have the consolation that zcorpan missed that too :)

[05:35:21.0000] <zcorpan>
hah

[05:36:18.0000] <zcorpan>
Ms2ger: follow-up PR? :-)

[05:36:21.0000] <Ms2ger>
Results don't change

[05:38:36.0000] <Ms2ger>
https://github.com/w3c/web-platform-tests/pull/2480

[05:38:47.0000] <Ms2ger>
frivoal, so is it your birthday?

[05:39:12.0000] <frivoal>
Ms2ger: Yes indeed.

[05:39:22.0000] <Ms2ger>
Have a happy one, then :)

[06:30:24.0000] <JakeA>
Domenic: If I create a readable stream, pull is called straight away. Is this intentional?

[06:30:37.0000] <JakeA>
If so, https://streams.spec.whatwg.org/#rs-constructor seems misleading

[06:31:01.0000] <Domenic>
JakeA: step 12.a.ii?

[06:31:36.0000] <zcorpan>
blink and webkit apparently have a fancy <area shape> missing value default/invalid value default that depends on how many numbers are present in coords

[06:31:39.0000] <Domenic>
JakeA: as long as current queue size < high water mark it will try to pull to fill the queue

[06:31:54.0000] <JakeA>
Domenic: ahh ok, so "[pull] is called when the stream’s internal queue of chunks is depleted, and the consumer has signaled that they wish to consume more data" is misleading

[06:32:05.0000] <Domenic>
Ah I see

[06:32:17.0000] <Domenic>
"depleted" is not correct, yeah, thanks. File an issue?

[06:32:23.0000] <JakeA>
Shall do

[06:32:35.0000] <Ms2ger>
zcorpan, I wonder who came up with that

[06:32:51.0000] <Ms2ger>
zcorpan, I don't think Gecko has that, or anyone ever asked for it

[06:33:13.0000] <zcorpan>
Ms2ger: right gecko defaults to rect like the spec

[06:33:50.0000] <Ms2ger>
I think it used to be that Gecko did nothing when the attribute was missingf

[06:34:46.0000] <Ms2ger>
Can't find a bug now, though

[06:39:09.0000] <Ms2ger>
zcorpan, https://bugzilla.mozilla.org/show_bug.cgi?id=290397

[06:48:19.0000] <zcorpan>
in webdevdata all the ones that have a missing/invalid shape use 4 values in coords. (but some do have missing shape and seem to expect a rect)

[08:17:08.0000] <Ms2ger>
annevk, so what's the story for direct cross-spec links in html?

[08:45:53.0000] <annevk>
Ms2ger: how or why?

[08:47:20.0000] <Ms2ger>
annevk, they exist for some specs but not others, or did I misremember that?

[08:48:56.0000] <annevk>
Ms2ger: ah yeah, it depends on whether or not the introduction of the term has a data-x-href attribute

[08:49:24.0000] <Ms2ger>
Aha

[08:49:40.0000] <Ms2ger>
Are there plans to add those for url/fetch/dom/...?

[08:53:02.0000] <annevk>
Ms2ger: there's a soft review requirement that we add it for new terms

[08:53:17.0000] <annevk>
Ms2ger: we'd accept patches, I think most of Fetch has it already

[08:53:23.0000] <Ms2ger>
Okay

[08:53:29.0000] <Ms2ger>
I might do that at some point, then

[09:50:33.0000] <Domenic>
I am actually not a huge fan of the cross spec link behavior... I don't like having the singlepage open then suddenly jumping to fetch and going "argh I lost my place now I'll have to reload the singlepage"

[09:50:44.0000] <Domenic>
But probably best to just stick with what other specs are doing

[09:51:19.0000] <Domenic>
I think ideally for me though it would jump to the HTML references section, and from _there_ you would get a link to fetch. So two clicks before you lose your singlepage tab.

[10:31:02.0000] <Domenic>
annevk: why do yo uthink "Restrictions for contents of script elements" needs to be changed? It doesn't seem to have anything to do with whether ES allows HTML comments or not

[10:31:32.0000] <Domenic>
Oh, I found the sentence... the very last sentence.

[10:46:06.0000] <yoav>
annevk: CORS question. Can a browser reuse resource fetched in different CORS modes from the same origin as the page? e.g. should <img src=foo> and <img src=foo crossorigin> on the same page trigger 2 requests?

[10:54:10.0000] <wanderview>
yoav: I believe those should be separate requests... they could get different headers/credentials right?

[10:55:01.0000] <yoav>
not sure, which is why I'm asking :)

[10:55:37.0000] <wanderview>
not sure about the spec, but implementation stuff leads me to believe these should be treated different for different cors modes

[10:56:26.0000] <yoav>
wanderview: what's the reason for that? I see the same in Blink, which threw me off

[10:57:21.0000] <annevk>
yoav: yes they should, very different semantics

[10:59:03.0000] <yoav>
OK. any pointers where I can read more about it?

[10:59:34.0000] <annevk>
Fetch

[11:00:28.0000] <yoav>
ok

[11:00:31.0000] <annevk>
/me goes back to not being around

[11:10:47.0000] <Domenic>
Who wants to come up with a good example for <script type="module">

[11:26:30.0000] <nox>
Domenic: That deep silence.

[11:27:54.0000] <Domenic>
It's OK. I'm starting to feel inspired. This is my chance to inject some fun into the spec like Hixie does. I'm thinking a Star Wars example somehow.

[11:28:47.0000] <nox>
Domenic: My examples and tests are mostly about French cheese.

[12:25:28.0000] <Domenic>
OK examples at https://dl.dropboxusercontent.com/u/20140634/script-type-module/index.html#dom-script-text I am pretty happy with these

[13:15:37.0000] <nox>
Domenic: Cool.


2016-01-16
[02:42:43.0000] <annevk>
Domenic: just checking, but the plan is to land 443 as a single commit, right?

[07:55:38.0000] <Domenic>
annevk: yep. Although I do want Ms2ger's feedback so will probably wait for that.


2016-01-17
[12:48:05.0000] <nox>
Given that now classList.add() and and classList.remove("unexisting-class") both set the 'class' attribute to the empty string if it was missing,

[12:48:29.0000] <nox>
shouldn't classList.replace("unexisting-class", "foo") create it too?

[13:06:28.0000] <Domenic>
I still don't think classList.replace should exist

[13:06:31.0000] <Domenic>
It solves a non-problem

[13:51:39.0000] <nox>
Domenic: Oh I don't see why it was added too, but well, it's here now.

[15:04:48.0000] <Domenic>
nox: well, it doesn't have to be; nobody implements it

[15:04:55.0000] <Domenic>
and i don't think there was any implementer interest


2016-01-18
[21:48:11.0000] <yhirano_>
hi, does any one know how we should handle a "retry" field without value, in EventSource?

[21:48:34.0000] <yhirano_>
WebKit and Blink restores their default retry value, but it is not written in the spec.

[21:49:22.0000] <yhirano_>
Is it simply wrong, or is there any historical context?

[00:51:15.0000] <annevk>
Hmm, I wonder why the HTML standard claims it was updated today, while in fact it was last updated on Friday

[01:40:47.0000] <nox>
annevk: So is DOMTokenList.replace something Servo should implement?

[01:41:16.0000] <nox>
annevk: I tried to specify [Alias=…] btw, couldn't write a sentence that made sense.

[01:41:53.0000] <annevk>
nox: I don't see why Servo shouldn't implement stuff

[01:42:55.0000] <ondras>
guys, not escaping ampersands in html attribute values, is this a recent stuff?

[01:43:02.0000] <nox>
annevk: "00:05 <Domenic> nox: well, it doesn't have to be; nobody implements it 00:05 <Domenic> and i don't think there was any implementer interest"

[01:43:07.0000] <ondras>
or has this been around from the very beginning ?

[01:44:04.0000] <nox>
annevk: That was prompted by the following question: 21:48 <nox> Given that now classList.add() and and classList.remove("unexisting-class") both set the 'class' attribute to the empty string if it was missing,  21:49 <nox> shouldn't classList.replace("unexisting-class", "foo") create it too?

[01:44:16.0000] <nox>
ondras: Always been around.

[01:44:29.0000] <nox>
ondras: SGML and XML both allow that.

[01:44:39.0000] <nox>
ondras: Same for '<'.

[01:44:39.0000] <ondras>
interesting

[01:45:00.0000] <ondras>
so perhaps the validator was previously marking "?a=b&c=d" as an error?

[01:45:07.0000] <ondras>
(incorrectly)

[01:46:39.0000] <ondras>
nox: because my firefox, if I am not mistaken, highlights these & in a red color in the "view source" mode

[01:48:00.0000] <Ms2ger>
That's not as easy a question as it sounds :)

[01:48:11.0000] <nox>
Ms2ger: Which one?

[01:48:11.0000] <Ms2ger>
In general, &amp; is safer

[01:48:25.0000] <nox>
Yeah, that the spec allows it doesn't mean all UAs can cope with it.

[01:48:40.0000] <Ms2ger>
UAs cope, that's not an issue

[01:48:40.0000] <annevk>
nox: I guess we could change replace()'s behavior slightly, don't care much about that

[01:48:53.0000] <nox>
I'm suddenly not sure anymore whether & is in the set of allowed characters.

[01:49:02.0000] <nox>
I know < is, but I think I'm wrong about &.

[01:49:02.0000] <ondras>
well if it is allowed for the time being (including sgml and xml), one would expect it works the same way in all parsers...

[01:49:25.0000] <annevk>
nox: replace() was requested by Ember.js, so tokens wouldn't get reordered in templates

[01:49:30.0000] <ondras>
nox: I am pretty sure "&" is allowed when it does not resemble an entity reference

[01:49:32.0000] <nox>
ondras: Yeah I said crap.

[01:49:35.0000] <Ms2ger>
ondras, just don't do it :)

[01:49:38.0000] <nox>
ondras: It isn't.

[01:49:40.0000] <ondras>
nox: i.e. the [a-z]+ after it does not end with ";"

[01:49:53.0000] <nox>
Cf. "additional allowed character" in https://html.spec.whatwg.org/multipage/syntax.html#attribute-value-(double-quoted)-state

[01:50:00.0000] <nox>
and https://html.spec.whatwg.org/multipage/syntax.html#attribute-value-(single-quoted)-state.

[01:50:53.0000] <ondras>
well

[01:50:55.0000] <ondras>
https://html.spec.whatwg.org/multipage/syntax.html#character-reference-in-attribute-value-state

[01:50:59.0000] <ondras>
Attempt to consume a character reference.

[01:50:59.0000] <ondras>
If nothing is returned, append a U+0026 AMPERSAND character (&) to the current attribute's value.

[01:51:28.0000] <ondras>
sounds like there is a well-defined scenario for the unescaped amp

[01:51:46.0000] <nox>
ondras: Read how one should consume a character reference.

[01:52:20.0000] <nox>
ondras: "If the last character matched is not a U+003B SEMICOLON character (;), there is a parse error."

[01:52:42.0000] <nox>
annevk: Ok.

[01:52:52.0000] <nox>
annevk: But do implementors plan to support it?

[01:53:07.0000] <annevk>
nox: I hope so

[01:53:13.0000] <nox>
annevk: Ember should have asked for a toggle method with two arguments IMO.

[01:53:15.0000] <ondras>
hmmh

[01:53:16.0000] <ondras>
If the character reference is being consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next character is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be unconsumed, and nothing is returned.

[01:53:28.0000] <annevk>
nox: toggle already has two arguments

[01:54:16.0000] <nox>
annevk: Ok, I need more sleep. :)

[01:54:28.0000] <nox>
annevk: Two DOMString arguments, I meant.

[01:54:32.0000] <ondras>
nox: honestly, I am not sure I understand the sentence I posted last

[01:54:45.0000] <ondras>
nox: but the current validator allows ?a=b&c=d

[01:55:40.0000] <nox>
ondras: Doesn't matter, the sentence I pasted still apply.

[01:57:25.0000] <annevk>
nox: overloading toggle seems worse than just having a distinct method that is clear

[01:57:39.0000] <nox>
annevk: Oh it wouldn't do the same thing as replace.

[01:57:57.0000] <nox>
I'm pretty sure Ember toggles two classes, and that require two different replace calls, doesn't it?

[01:58:39.0000] <annevk>
nox: hmm no, they have something like _templateValue_ and need to replace that, without it changing location

[01:58:49.0000] <nox>
Ok.

[01:59:03.0000] <ondras>
nox: I understand that the spec it more important that the validator's behavior. But, still: 1) what is the *real* meaning of that paragraph I posted? 2) does this mean the validator does not follow the spec?

[01:59:22.0000] <MikeSmith>
ondras: yes the validator was previously marking "?a=b&c=d" as an error

[02:00:28.0000] <MikeSmith>
until very recently the validator had always reported an error for that caseーbecause originally the HTML spec in fact did define it as an error

[02:00:45.0000] <ondras>
MikeSmith: according to what nox wrote, it is still an error

[02:00:58.0000] <nox>
MikeSmith: "If the last character matched is not a U+003B SEMICOLON character (;), there is a parse error."

[02:01:01.0000] <ondras>
but I find it hard to understand this part of the spec

[02:01:54.0000] <MikeSmith>
nox: I think that requirement doesn't apply to all cases

[02:02:27.0000] <MikeSmith>
I am pretty sure the current spec does make the "?a=b&c=d" case a non-error

[02:02:40.0000] <nox>
I'm pretty sure that's not the case.

[02:02:54.0000] <nox>
I interpret ondras' citation as "?a=b&c" not being an error,

[02:03:00.0000] <nox>
but "?a=b&c=d" being one.

[02:03:11.0000] <MikeSmith>
zcorpan: ⬆

[02:03:25.0000] <ondras>
/me likes the arrow glyph.

[02:04:00.0000] <MikeSmith>
nox: I'll look back at the (several) bug reports from users that I got about this after the spec changed

[02:04:05.0000] <MikeSmith>
which it did

[02:04:17.0000] <MikeSmith>
it may be that it's now changed back, I dunno

[02:04:22.0000] <ondras>
(both posted variants are considered valid by the validator, for the record)

[02:05:21.0000] <nox>
It seems the spec contradicts itself.

[02:05:22.0000] <MikeSmith>
yeah at this poine I'm very unlikely regardless to revert the validator change I recently made with regard to this

[02:05:31.0000] <nox>
"… and the next character is either a U+003D EQUALS SIGN character (=) …"

[02:05:48.0000] <nox>
"… However, if this next character is in fact a U+003D EQUALS SIGN character (=), …"

[02:06:11.0000] <nox>
Ah no, it just says after the fact that in this case, it's a parse error.

[02:06:25.0000] <zcorpan>
"If the last character matched is not a U+003B SEMICOLON character (;), there is a parse error." only applies if an entity was actually matched

[02:06:52.0000] <MikeSmith>
ok yaeh that's what I had thought

[02:07:01.0000] <nox>
zcorpan: Ok, but it is still a parse error even if no entity is matched.

[02:07:30.0000] <ondras>
zcorpan: interesting, but I do not see how to infer this fact from the spec

[02:07:40.0000] <zcorpan>
nox: what is? (and is it in-attribute-value or not?)

[02:09:15.0000] <MikeSmith>
for anybody curious, the change I landed that affects the validator behavior around this was actually a change to the htmlparser the validator relies on, and I landed the change about a month ago https://github.com/validator/htmlparser/commit/4e5446644c3a0d0faad76f2650ba6ca453196a48 (and pushed it to the W3C validator then)

[02:09:18.0000] <nox>
zcorpan: "If the character reference is being consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next character is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical reasons, all the characters that were matched after the U+0026 AMPERSAND character

[02:09:18.0000] <nox>
(&) must be unconsumed, and nothing is returned. However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a parse error, because some legacy user agents will misinterpret the markup in those cases."

[02:09:24.0000] <nox>
zcorpan: Last sentence.

[02:10:31.0000] <MikeSmith>
also I think the change hasn't been pushed to validator.nu so it's likely that validator.nu still reports an error for this, but I've not checked

[02:11:40.0000] <zcorpan>
nox: i think that is only intended to apply if something was consumed, e.g. <p title="&amp=">

[02:12:34.0000] <zcorpan>
nox: granted it's not super-clear

[02:13:18.0000] <MikeSmith>
yeah it seems clear that it's not super-clear 😀

[02:14:09.0000] <nox>
That's the paragraph about it not being consumed.

[02:14:36.0000] <zcorpan>
nox: yeah sorry i was confused myself

[02:15:22.0000] <zcorpan>
nox: i mean the paragraph above, i read "no characters are consumed, and nothing is returned" as "return and abort here"

[02:15:23.0000] <ondras>
/me imagining how the parser vomits (un-consumes) data after reaching an EQUALS SIGN

[02:15:48.0000] <zcorpan>
and in &c= no match can be made.

[02:16:55.0000] <zcorpan>
and so &c= is not a parse error but &amp= is (in attribute value)

[02:17:55.0000] <nox>
Where does it distinguish c from amp?

[02:19:47.0000] <zcorpan>
"If no match can be made, then no characters are consumed, and nothing is returned."

[02:50:34.0000] <deltab>
hmm, in data state, U+0000 is emitted as a character token; elsewhere it's replaced with U+FFFD or ignored

[02:53:03.0000] <nox>
deltab: Yes.

[02:53:37.0000] <deltab>
is that intentional?

[02:53:52.0000] <nox>
Yes.

[02:54:19.0000] <nox>
deltab: Cf. that note in the spec: "The handling of U+0000 NULL characters varies based on where the characters are found. In general, they are ignored except where doing so could plausibly introduce an attack vector. This handling is, by necessity, spread across both the tokenization stage and the tree construction stage."

[02:54:29.0000] <deltab>
the character token part, I mean

[02:54:51.0000] <deltab>
why's it not replaced or ignored?

[02:55:05.0000] <Ms2ger>
"legacy"

[02:56:59.0000] <deltab>
I guess the note under "12.2.5.4.8 The "text" insertion mode" doesn't apply to that

[02:58:52.0000] <MikeSmith>
zcorpan: about "&c= is not a parse error but &amp= is", I believe what I implemented in the htmlparser/validator matches thatーand overall is now in conformance with the current spec. At least that's what I intend. So if you try it and find any cases where the validator should per-spec be emitting an error but isn't, please let me know.

[02:59:58.0000] <zcorpan>
MikeSmith: ok i can have a look

[03:00:07.0000] <MikeSmith>
thanks

[03:07:47.0000] <ritsyy>
annevk: as you specified data-x should be kept right?  https://github.com/whatwg/html/pull/499/files

[03:15:21.0000] <zcorpan>
MikeSmith: seems to work as it should... but now i wonder why we're anal about the semicolon for numbered charrefs but so lax for named refs

[03:16:15.0000] <zcorpan>
e.g. &#x40

[03:33:45.0000] <MikeSmith>
zcorpan: yeah true

[03:34:37.0000] <MikeSmith>
and thanks for checking

[03:43:15.0000] <annevk>
ritsyy: you should probably remove it for consistency

[03:43:27.0000] <annevk>
ritsyy: not needed for flags

[03:52:44.0000] <ritsyy>
annevk: okay

[04:38:12.0000] <annevk>
MikeSmith: note that if an attribute value contains a space, you can break there too

[04:38:22.0000] <annevk>
MikeSmith: didn't notice the attribute values had spaces in them initially, sorry

[04:39:35.0000] <MikeSmith>
annevk: no worries

[04:39:57.0000] <MikeSmith>
so should I leave it as it is, or re-break it on the spaces?

[04:40:28.0000] <MikeSmith>
I thought we had problems with refs with embedded line breaks

[04:40:45.0000] <annevk>
MikeSmith: probably break on the spaces if that gets us longer lines

[04:40:57.0000] <annevk>
MikeSmith: hmm, I don't think so, but now I'm not sure anymore

[04:41:02.0000] <MikeSmith>
heh

[04:41:15.0000] <MikeSmith>
well I'll try and see if anything breaks

[04:46:44.0000] <MikeSmith>
annevk: any objection to breaking before the ">" in start tags?

[04:46:49.0000] <MikeSmith>
e.g.:

[04:46:51.0000] <MikeSmith>
    The <span>Content Security Policy</span> given in the <code data-x="attr-meta-content"

[04:46:54.0000] <MikeSmith>
    >content</code> attribute will be <span data-x="enforce the policy">enforced</span> upon the

[04:46:57.0000] <MikeSmith>
    >current document. <ref spec="CSP"></p>

[04:47:04.0000] <annevk>
MikeSmith: we haven't done it thus far

[04:47:36.0000] <ondras>
please, can anyone provide rationale for the uri stripping in CSP reports?

[04:47:46.0000] <MikeSmith>
annevk:  yeah I know. I'm wondering if there's any reason not to start now. Other than greater consistency

[04:47:56.0000] <annevk>
ondras: leaking of redirects, iirc

[04:48:08.0000] <MikeSmith>
yaeh

[04:48:12.0000] <ondras>
annevk: can you elaborate please? I do not follow what is the problem.

[04:48:13.0000] <annevk>
MikeSmith: it looks a little ugly, I'll defer to Domenic

[04:48:35.0000] <annevk>
ondras: https://fetch.spec.whatwg.org/#atomic-http-redirect-handling

[04:48:36.0000] <ritsyy>
annevk: i didn't understand removing the images at the same time https://github.com/whatwg/html/pull/526#issuecomment-172517560

[04:48:38.0000] <MikeSmith>
ondras: I think that's actually mentioned somewhere, the rationale

[04:48:56.0000] <ondras>
MikeSmith: I would be happy to read about it somewhere. My google-fu is apparently low.

[04:49:29.0000] <annevk>
ritsyy: the HTML repository hosts images used by examples, if we remove an example that uses those images, we should remove the images too (if it's the only example that uses them, which I think is the case here)

[04:49:43.0000] <MikeSmith>
ondras: the CSP spec and/or commit logs for it

[04:50:12.0000] <ondras>
the CSP spec only explains that stripping takes place

[04:50:17.0000] <ondras>
no rationale afaik

[04:50:32.0000] <ritsyy>
annevk: yeah i should remove them from the images too, ok ok

[04:55:12.0000] <ondras>
annevk: I am thoroughly puzzled by this. The CSP report is not supposed to make any (potentially redirecting) requests; I just want to see what was requested. Would you please somehow outline how an attack vector would look like here?

[04:55:41.0000] <ondras>
annevk: ah, I got it!

[04:56:02.0000] <ondras>
an attacker with a rogue CSP logger

[04:59:43.0000] <annevk>
bingo

[05:02:29.0000] <ondras>
:-)

[05:04:55.0000] <ritsyy>
annevk: in one of the example of the data element, table sorting model is used in which is to replaced with a script then, can we point through javascript library like sortable.js , i was not sure

[05:08:29.0000] <annevk>
ritsyy: yeah, referencing a library in the example seems okay

[05:08:45.0000] <annevk>
ritsyy: but don't include the library inline of course

[05:09:19.0000] <ritsyy>
annevk: yeah, okay i will take care of that thanks!

[06:51:25.0000] <ritsyy>
annevk: could you see this once https://paste.kde.org/pfyjmvkdd

[06:55:42.0000] <annevk>
ritsyy: yeah, I guess that's fine, although it's not ideal to include the script synchronously

[06:56:09.0000] <annevk>
ritsyy: the language could also use some improvement, e.g., it's JavaScript

[06:56:22.0000] <annevk>
ritsyy: and you probably want to say "the data element" rather than just data

[06:59:35.0000] <ritsyy>
annevk: oh then if it's not that much suitable should i change it?

[07:01:26.0000] <ritsyy>
annevk: i would do these changes

[07:01:38.0000] <ritsyy>
will*

[09:33:23.0000] <smaug____>
annevk: ok, not going to write to the bug, but "doing bad thing is fine because they are already doing it"?

[09:34:03.0000] <annevk>
smaug____: it isn't clear to me that what they're doing is bad, presumably they need those computations before next render

[09:34:08.0000] <smaug____>
I do expect that we'll add enqueueMicrotask API, but I hope people first think a bit what it means

[09:34:44.0000] <smaug____>
I hope people try to improve the platform by making it easier to write web pages which are responsive from user point of view

[09:34:44.0000] <annevk>
smaug____: and for all intents and purposes we already have that API, it's just not as efficient as it could be

[09:35:17.0000] <smaug____>
we're missing an API which tries to do stuff before rAF, but do it async

[09:35:28.0000] <smaug____>
setTimeout(, 0) is too unreliable

[09:35:48.0000] <annevk>
setTimeout queues tasks, so layout will have happened

[09:35:52.0000] <smaug____>
/me starts to feel inventing microtasks may have been a bad thing :/

[09:36:25.0000] <annevk>
Having said that, I'm not really sure what you mean with "async"

[09:36:44.0000] <smaug____>
that event loop spins

[09:36:56.0000] <annevk>
But that means layout happens

[09:36:58.0000] <smaug____>
microtask is totally synchronous from browser point of view

[09:37:09.0000] <smaug____>
layout happens at rAF

[09:37:13.0000] <smaug____>
not at random times

[09:37:41.0000] <smaug____>
(layout may of course happen also sync when .offsetLeft or such is accessed )

[09:38:29.0000] <annevk>
Okay, so you want an API that queues tasks that need to happen just before rAF?

[09:38:42.0000] <smaug____>
that is rAF

[09:39:08.0000] <smaug____>
I'm thinking, whether we need setTimeout(, 0) like API, which guarantees that the callback is called at latest at rAF

[09:39:18.0000] <smaug____>
but sooner if possible

[09:40:13.0000] <smaug____>
something like setImmediate + rAF

[09:41:27.0000] <smaug____>
that way UA could still process other stuff between the callbacks

[09:41:43.0000] <Domenic>
smaug____: the alternative here is for frameworks to keep an array of functions they want to execute after all their work is done

[09:41:51.0000] <Domenic>
smaug____: the alternative is not to use some new scheduling API

[09:42:08.0000] <Domenic>
smaug____: that is what frameworks do today, they just use MutationObserver with an empty text node to detect "their work is done"

[09:42:08.0000] <smaug____>
Domenic: I guess I'm saying that frameworks are doing it wrong atm

[09:42:23.0000] <Domenic>
smaug____: well, good luck with that. A lot of thought has gone into these frameworks over a lot of years.

[09:42:29.0000] <smaug____>
I was horrified about that 100s of microtasks comments

[09:42:54.0000] <smaug____>
sure. though microtasks aren't that old thing

[09:42:54.0000] <Domenic>
yes, you really should not be. are you horrified by 100s of lines of normal code?

[09:43:11.0000] <smaug____>
and some of those frameworks still fallback to setTimeout

[09:43:20.0000] <Domenic>
for IE8 yeah

[09:43:32.0000] <Domenic>
and websites built in those frameworks are a shitty UX on IE8

[09:43:41.0000] <smaug____>
right

[09:44:26.0000] <smaug____>
I am horrified doing any major js execution synchronously in the main thread. In workers it is fine. The more we add microtask callback usage, the more we end up doing sync stuff

[09:45:13.0000] <smaug____>
(and I need to say again: "I do expect that we'll add enqueueMicrotask API")

[09:45:36.0000] <Domenic>
This is really just about preventing people from having to require a library that twiddles an empty text node

[09:46:05.0000] <Domenic>
I don't think microtask usage is going to be any less just because people have to require a library. Making the concept harder to use doesn't prevent people from using it, in a world with abstractions and function calls.

[09:46:16.0000] <annevk>
"or just Gecko" is a bit inflammatory, the concern of blocking the processing user input should really concern everyone

[09:46:16.0000] <smaug____>
and to me the question is not about that, but to try to convince people to use programming models which aren't synchronous

[09:48:23.0000] <smaug____>
we're trying to do that with sync XHR

[09:48:56.0000] <smaug____>
sure, that is way worse case

[09:55:56.0000] <smaug____>
btw, I'm pretty sure I've seen long Promise chains showing up in Firefox startup profiles. Like, we end up painting browser UI later than we should because we end up processing microtask/promise queue.

[10:03:29.0000] <smaug____>
Domenic: do you happen to know what frameworks did before MutationObserver?

[10:04:52.0000] <Domenic>
smaug____: oh yes. They used various tricks to get tasks that are faster than setTImeout(,0). MessageChannel, postMessage-to-yourself were popular.

[10:05:11.0000] <smaug____>
ok, those are async

[10:05:31.0000] <Domenic>
yep. but they would only post one task then inside that task loop over all accumulated framework-microtasks

[10:10:34.0000] <annevk>
It does seem like they want "do this before render, in order" more than "do this at end-of-task"

[10:11:11.0000] <Domenic>
annevk: talking to Misko what they really want is "do this before any new tasks get posted"

[10:11:14.0000] <annevk>
although maybe not, since "do this before render, in order" can be polyfilled using rAF and nobody is doing that...

[10:11:34.0000] <annevk>
k

[10:11:57.0000] <Domenic>
it's used for e.g. synchronizing data models. all future tasks should get a consistent view of the world with the data synced, after the current task + microtasks have settled down.

[10:12:40.0000] <Domenic>
that is a larger problem though, and much harder to solve. along the way we encountered the fact that one building block of it was hidden behind MutationObserver, so proposed unlocking it.

[10:13:09.0000] <smaug____>
annevk: well, polyfilling using rAF would put too much pressure to rAF which would make rendering to be postponed

[12:21:43.0000] <smaug____>
Domenic: you might know. Has anyone written some blog post when to use or more importantly when to not use Promises

[12:22:10.0000] <smaug____>
(I'm just reviewing some tests and feels like overuse of Promises without no reason)

[12:22:28.0000] <smaug____>
(could link to some documentation when to not use Promises)

[12:22:30.0000] <Domenic>
smaug____: https://www.w3.org/2001/tag/doc/promises-guide#when-to-use + https://www.w3.org/2001/tag/doc/promises-guide#when-not-to-use is the general guidance

[12:22:53.0000] <smaug____>
thanks

[15:06:13.0000] <TabAtkins>
annevk: It looks like the term "scheme data" no longer exists in the URL standard (despite HTML referring to it). What's the correct thing to refer to now - the "scheme" definition?

[15:08:55.0000] <TabAtkins>
Domenic: In the Promises guide, a note about not rejecting for a missing key in an AsyncMap could probably use a note to the effect that, while some languages *do* consider a missing key to be an exception-worthy event (Python), JS does not.

[15:11:54.0000] <TabAtkins>
Domenic: And I'm still bothered by the suggested "in parallel" language. ^_^  Every single time, it reads to me that you should execute the substeps in parallel with each other (and implicitly, in series with the wider algorithm), instead of the intended meaning of running the substeps in series, but the subalgo as a whole is done in parallel with the wider

[15:11:54.0000] <TabAtkins>
algo.

[15:13:13.0000] <TabAtkins>
(I know it links, and it's a term of art that can just be learned. It just rubs me the wrong way initially every time I see it.)

[15:16:49.0000] <TabAtkins>
annevk: Looking more into it, it seems like "scheme data" was probably a term for the stuff after the scheme in non-hierarchical URLs, and now something like blob: just has a host and a single path entry.


2016-01-19
[17:42:32.0000] <MikeSmith>
TabAtkins: I got a question about bikeshed handling of refs when somebody wants a section ref to a section in a different spec

[17:42:39.0000] <MikeSmith>
TabAtkins: see https://github.com/w3c/webappsec-csp/blob/master/document/index.src.html#L48

[17:43:12.0000] <MikeSmith>
...where mkwst has:

[17:43:14.0000] <MikeSmith>
spec: CSP; urlPrefix: https://w3c.github.io/webappsec-csp

[17:43:23.0000] <MikeSmith>
  type: section

[17:43:23.0000] <MikeSmith>
    text: lalala; url: match-url-to-source-list

[17:44:27.0000] <MikeSmith>
then in the body of the source, he references that like this:

[17:44:32.0000] <MikeSmith>
      4.  If the result of executing [[#match-url-to-source-list]] on |base| and

[17:45:58.0000] <MikeSmith>
but bikeshed flags that ref as an error, apparently because it's looking for that section ID in that same doc instead of in the CSP spec

[17:47:30.0000] <MikeSmith>
not sure why he's not just doing [[!match-url-to-source-list]] instead but I imagine he's got a good reason (maybe because he wants the section number to appear?)

[17:48:35.0000] <TabAtkins>
MikeSmith: Section links aren't covered by the autolinking block. But if the spec is in either Bikeshed or Specref, [[spec#anchor]] works

[17:48:50.0000] <MikeSmith>
oh

[17:49:00.0000] <MikeSmith>
lemme try that

[17:50:07.0000] <TabAtkins>
Use whatever spec name would work with a normal biblio link [[foo]]

[17:51:17.0000] <MikeSmith>
ok thanks

[17:51:30.0000] <MikeSmith>
I see that renders as "If the result of executing Content Security Policy §match-url-to-source-list on base and source list is "

[17:52:37.0000] <MikeSmith>
so I'm guessing mkwst probably doesn't want the "Content Security Policy" text there, and he wants some particular string in place of "match-url-to-source-list"

[17:52:40.0000] <TabAtkins>
Yeah, so it's in SpecRef only, so I don't know the section name.

[17:53:25.0000] <MikeSmith>
OK, anyway, rather than me speculating further about what his intent was, I'll just wait and ask him when he's around

[17:53:49.0000] <TabAtkins>
Oh, from context, he just wants an autolinking anyway, not a section link.

[17:54:38.0000] <MikeSmith>
ok

[17:56:29.0000] <MikeSmith>
TabAtkins: btw I was also kinda surprised to see the bikeshed docs for OSX install recommending to install through port/MacPorts rather than brew

[17:56:44.0000] <TabAtkins>
So change the autolinking block to "type: dfn", and the link itself to <a>...</a>.

[17:57:10.0000] <TabAtkins>
I have no clue about Mac install instructions. Those were written by someone else.

[18:02:23.0000] <MikeSmith>
OK will ask Mike about making that change. I don't care strongly either way about how he chooses to mark it upーI just want to be able to build it without errors when I submit patches against the source :)

[18:04:51.0000] <MikeSmith>
ah OK about the Mac install instructions I guess I could write a patch but maybe I shouldn't step on whoever did the original writeup. Don't want to get into an unproductive MacPorts-vs-Homebrew rathole

[21:47:26.0000] <TabAtkins>
MikeSmith: Feel free to write alternate instructions, so people can choose either.

[21:57:03.0000] <annevk>
TabAtkins: that is correct, I really need to clean up HTML one day

[21:57:15.0000] <TabAtkins>
annevk: In the meantime, I've cleaned up FileAPI.

[21:57:30.0000] <annevk>
Cool

[21:57:46.0000] <TabAtkins>
And put an issue on HTML for you. ^_^

[22:06:59.0000] <mkwst>
MikeSmith, TabAtkins: Ah. I didn't actually mean to commit that. I was playing around, trying to make cross-spec section links work.

[22:08:04.0000] <mkwst>
Apparently TabAtkins poked at https://github.com/tabatkins/bikeshed/issues/528 for me while I wasn't looking, so I'll update to use that.

[22:09:10.0000] <mkwst>
I still want some mechanism for links to editor's drafts of specs I have locally that aren't in SpecRef, which I don't think exists.

[22:09:10.0000] <TabAtkins>
Also: go comment on the dfn-link shorthand thread!

[22:09:22.0000] <TabAtkins>
Yeah, doesn't exist yet.

[22:09:59.0000] <mkwst>
(And, in this particular case, I'd ideally have the section name, just as I would if I was linking inside a document)

[22:10:32.0000] <mkwst>
(e.g. [[spec#section]] would turn into "<a href='whatever'>This is an amazing algorithm name that you put in a header!</a>"

[22:11:33.0000] <TabAtkins>
Anything which Bikeshed knows about acts like that. Just need to put more specs into Bikeshed - feel free to file issues and I'll get to it.

[22:11:56.0000] <mkwst>
Ok. I'll go file some issues, then. How often does Bikeshed update its database?

[22:12:20.0000] <TabAtkins>
Several times an hour.

[22:12:44.0000] <TabAtkins>
Or that might be just for the CSS specs it tracks. At least daily, then.

[22:14:04.0000] <TabAtkins>
And upcoming is an ability to manually load up Bikeshed with definitions from non-Bikeshedded specs, without having to spam them locally into every spec with a <pre class=anchors>.

[22:14:16.0000] <TabAtkins>
So then we can just PR Bikeshed to add more stuff.

[22:16:12.0000] <mkwst>
Great. I do that all the time. It's a bit annoying.

[22:16:39.0000] <mkwst>
Like, Fetch. Just get Fetch in, and that will take care of ~50% of the links I embed. :)

[22:17:18.0000] <TabAtkins>
/me nudges annevk

[22:19:23.0000] <mkwst>
It'll be some work. I don't think Fetch has the `for` concept, like HTML, so it probably will end up with naming conflicts that differ by ID.

[22:20:46.0000] <TabAtkins>
Nothing preventing it from adding appropriate `for` values, like DOM did.

[22:20:50.0000] <TabAtkins>
Or URL.

[22:22:56.0000] <mkwst>
Yup. It'll just be some busywork.

[22:30:06.0000] <yhirano_>
annevk: Can you tell me the meaning of "body length" in the fetch spec? I noticed I didn't understand the step 10.1 in 5.5 HTTP-network fetch...

[22:40:17.0000] <MikeSmith>
mkwst: thanks, I guess the "lalala" should have clued me in that it was something maybe not intended to have been committed 😆

[22:41:12.0000] <MikeSmith>
good to see that spec is headed for FPWD

[22:42:35.0000] <MikeSmith>
mkwst: on that note, been wondering if you now whether Referrer Policy is going to FPWD any time soon

[22:43:03.0000] <MikeSmith>
also been wondering the same about the Suborigins spec

[23:28:11.0000] <annevk>
yhirano_: it's something for XMLHttpRequest's ProgressEvent

[23:28:28.0000] <annevk>
yhirano_: basically that it has some values

[23:30:35.0000] <annevk>
TabAtkins: mkwst: although bikeshed is in some aspects much better than ReSpec, a love the predictability of the latter (and the better formatting)

[23:30:54.0000] <annevk>
TabAtkins: mkwst: I think that's mostly why I haven't gone out of my way personally to convert specifications

[23:32:38.0000] <TabAtkins>
Better formatting?

[23:32:59.0000] <TabAtkins>
Wait, you don't use ReSpec for *anything*, anne.

[23:33:40.0000] <TabAtkins>
Do you mean Anolis?

[23:39:44.0000] <annevk>
TabAtkins: oops, yes

[23:40:06.0000] <annevk>
TabAtkins: clear sign there's too many of these 😊

[23:40:08.0000] <yhirano_>
annevk: the step 10 in HTTP-network fetch runs in parallel: When will 10.1 run? As soon as possible?

[23:40:35.0000] <annevk>
yhirano_: yeah, it basically doesn't block anything else that Fetch does

[23:41:29.0000] <annevk>
TabAtkins: some specific things, e.g., if I have a single <p> inside an <li>, I don't want breaks around it

[23:42:03.0000] <annevk>
TabAtkins: if I omit closing tags, I don't want a trailing space in the output if that doesn't omit closing tags

[23:42:17.0000] <yhirano_>
annevk: Is "response's body's payload length" available at that time?

[23:42:42.0000] <annevk>
yhirano_: per HTTP/1 that'd be Content-Length

[23:42:56.0000] <annevk>
yhirano_: so it should be

[23:43:21.0000] <annevk>
yhirano_: though I guess perhaps it should account for payload length being unknown

[23:43:40.0000] <annevk>
yhirano_: you're rewriting this algorithm, no? To account for streams?

[23:43:56.0000] <yhirano_>
annevk: yes.

[23:44:12.0000] <annevk>
TabAtkins: it also still bugs me that sometimes if I do <a spec=x>...</a> it will not exclusively look at x

[23:45:20.0000] <annevk>
TabAtkins: and the whole linking toolchain is geared towards W3C, which makes cross-specification linking harder than it should be

[23:45:50.0000] <annevk>
TabAtkins: likely in part because they fork and both specifications end up getting indexed, squat on the same name, etc.

[23:47:57.0000] <yhirano_>
annevk: Then can't XHR read directly from the response header?

[23:51:18.0000] <annevk>
yhirano_: does HTTP/2 not have a different way to convey this? If not, perhaps

[23:52:07.0000] <annevk>
yhirano_: it seems cleaner to me to let the network layer parse and interpret the header as the network layer might want to use that data for various reasons anyway

[23:52:29.0000] <annevk>
yhirano_: not entirely sure it's worth doing it twice, potentially with different results

[23:53:22.0000] <yhirano_>
annevk: hm, I see, thanks.

[00:22:18.0000] <ritsyy>
annevk: in reference to this issue https://github.com/whatwg/html/issues/513 could you tell me a bit about the content types that should be handled in "the embed element"

[00:23:21.0000] <annevk>
ritsyy: it basically needs to do something very similar to what the <object> element does

[00:23:35.0000] <annevk>
ritsyy: which is quite involved

[00:24:59.0000] <ritsyy>
annevk: okay like all the associated content-type metadata and other handlers in object element?

[00:26:35.0000] <annevk>
ritsyy: it basically needs to handle all types of content, instead of just plugins and SVG

[00:27:25.0000] <annevk>
ritsyy: see step 9 of the big algorithm in the <object> section in particular

[00:28:38.0000] <ritsyy>
annevk: yeah, getting it now

[00:34:46.0000] <youenn>
annevk: hi

[00:35:10.0000] <youenn>
annevk: about  https://github.com/whatwg/fetch/issues/189, I am wondering whether multiple headers with the same name but not combinable should be made unsupported by fetch headers API.

[00:36:51.0000] <youenn>
... In WebKit, mac network backend will not support them. And, IIANM,  Fetch API is not defining any header serialization rule, which is ok as long as serialization variants are semantically equivalent.

[01:00:11.0000] <annevk>
youenn: well, XMLHttpRequest has serialization

[01:00:19.0000] <annevk>
youenn: and Fetch has iteration

[01:01:32.0000] <annevk>
youenn: and I believe some browsers treat X: 1, 2, 3 different from X: 1, 2\nX: 3

[01:01:53.0000] <annevk>
youenn: e.g., if X is Location, I think some browsers might parse "1, 2" as a URL...

[01:02:17.0000] <annevk>
youenn: now whether that behavior is acceptable is of course questionable, and I guess from what you're saying Safari wouldn't do that

[01:02:59.0000] <annevk>
youenn: I do wonder how the cookie situation is handled though, that was another reason why other browsers have these more advanced data structures

[01:03:09.0000] <youenn>
annevk: XHR has serialization for combinable headers only AFAIK

[01:03:28.0000] <youenn>
annevk: for cookies, I am  not sure how mac is handling, I do not know this binding well.

[01:03:43.0000] <youenn>
But looking at RFC 7230, these should be treated as special case headers.

[01:04:04.0000] <youenn>
annevk: With this API, we are making them prime citizens...

[01:04:39.0000] <youenn>
... which would mandate browsers to serialize headers precisely as web applications are specifiyng headers.

[01:06:17.0000] <annevk>
youenn: so maybe we should have a short email discussion among the various browsers and some other folks and copy www-archive to see what's what

[01:07:05.0000] <youenn>
annevk: it would be good to know whether the issue is all about Cookie, or whether other cases arise (like Location you mentioned).

[01:07:27.0000] <youenn>
... What would be the best venue for this discussion?

[01:08:01.0000] <annevk>
youenn: I'll start a discussion, do you want anyone copied?

[01:09:24.0000] <youenn>
annevk: I guess it would be good to have mac folks in the loop: alex christensen at least, who may forward the information if needed to whoever appropriate.

[01:10:02.0000] <annevk>
youenn: sure, what's their email?

[01:12:06.0000] <youenn>
achristensen⊙wo

[01:14:32.0000] <youenn>
annevk: Maybe hober (cf github issue as well)

[01:14:43.0000] <annevk>
ok

[01:27:30.0000] <annevk>
youenn: https://lists.w3.org/Archives/Public/www-archive/2016Jan/0006.html

[01:29:42.0000] <youenn>
annevk: thanks

[02:06:07.0000] <Ms2ger>
Argh

[02:06:17.0000] <Ms2ger>
How do I get the actual most recent ES spec?

[02:08:00.0000] <jgraham>
Ms2ger: It depends. Do you have a goat to hand?

[02:08:04.0000] <Ms2ger>
I don't

[02:08:31.0000] <jgraham>
ah, I think that's a prequisite

[02:09:00.0000] <AutomatedTester>
I only know of the one on jorendorff's people account

[02:09:41.0000] <Ms2ger>
I need one that's a lot more recent :)

[02:09:48.0000] <Ms2ger>
https://tc39.github.io/ecma262/ is too old

[02:10:22.0000] <Ms2ger>
Calling Domenic

[02:11:10.0000] <annevk>
Ms2ger: that is too old? I guess you need to ask bterlson then since I thought that was supposed to be master

[02:11:24.0000] <Ms2ger>
It doesn't have https://github.com/tc39/ecma262/pull/275

[02:11:33.0000] <Ms2ger>
bterlson, aloha

[02:12:28.0000] <jgraham>
Ms2ger: git clone git⊙gc:tc39/ecma262.git and read spec.html?

[02:12:48.0000] <annevk>
Ms2ger: hmm yeah, it seems stuff is pushed to gh-pages manually, bah

[02:13:02.0000] <Ms2ger>
jgraham, spec.html is not html, so yay

[02:13:43.0000] <jgraham>
Oh, you need some crazy node based build system?

[02:13:45.0000] <jgraham>
But of course

[02:14:02.0000] <Ms2ger>
/me has avoided installing npm so far

[02:14:32.0000] <jgraham>
Ms2ger: In any case file a PR to get auto-deploy to gh pages working

[02:15:03.0000] <jgraham>
I'm surprised it isn't already since Domenic wrote one of the highest ranked documents on how to do that

[02:57:50.0000] <zcorpan>
MikeSmith: fyi https://github.com/whatwg/html/issues/534

[03:04:17.0000] <zcorpan>
ritsyy: there are some differences that should remain between the two though, e.g. <embed> doesn't ever fall back to showing its children, and <embed> should happily render a 404 response

[03:05:25.0000] <ritsyy>
annevk: okay i will test the content type behaviours for other browsers,

[03:06:06.0000] <annevk>
zcorpan: yeah, and I guess <embed> will keep doing its extension sniffing

[03:06:50.0000] <zcorpan>
yes

[03:07:17.0000] <ritsyy>
zcorpan: yeah that is a difference

[03:13:27.0000] <zcorpan>
annevk: ritsyy: though <object> checks file extension as well

[03:14:29.0000] <annevk>
zcorpan: it does? hmm

[03:15:21.0000] <annevk>
it does, sad

[03:17:57.0000] <ritsyy>
zcorpan: oh yes it does check :-(

[03:49:07.0000] <MikeSmith>
zcorpan: about https://github.com/whatwg/html/issues/534 thanks and I saw your specific question and will read and respond there later

[03:49:24.0000] <zcorpan>
MikeSmith: thx!

[03:53:32.0000] <MikeSmith>
wonder why they're just not auto-(re)publishing https://github.com/tc39/ecma262 for every push

[03:54:04.0000] <MikeSmith>
https://rawgit.com/tc39/ecma262/master/spec.html seems not completely unreadable/unusable though

[03:55:38.0000] <MikeSmith>
no info in the repo about how to build the processed output though (so can't even view the latest locally)

[03:56:37.0000] <MikeSmith>
I guess it must need https://github.com/bterlson/ecmarkup though

[03:56:53.0000] <MikeSmith>
npm install ecmarkup

[03:56:54.0000] <MikeSmith>
ecmarkup in.html out.html

[03:56:58.0000] <Ms2ger>
MikeSmith, the readme explains, no?

[03:57:03.0000] <MikeSmith>
oh

[03:57:10.0000] <MikeSmith>
well, didn't read that

[03:57:28.0000] <Ms2ger>
Developing the Specification

[03:57:29.0000] <Ms2ger>
After cloning, do npm install to set up your environment. You can then do npm run build to build the spec or npm run watch to set up a continuous build. The results will appear in the out directory, which you can use npm run clean to delete.

[03:58:37.0000] <MikeSmith>
well there you go

[03:58:48.0000] <MikeSmith>
now I wonder what you were complaining about!

[03:59:09.0000] <MikeSmith>
since it says right there what you need to do to read the latest version

[04:02:45.0000] <Ms2ger>
$ npm

[04:02:46.0000] <Ms2ger>
The program 'npm' is currently not installed.

[04:02:54.0000] <Ms2ger>
/me is quite happy to keep it that way

[04:54:10.0000] <annevk>
zcorpan: "Image container"

[04:56:18.0000] <annevk>
ritsyy: FWIW, when you address feedback in a PR, it might help to leave a comment once you're done, since otherwise it doesn't appear in my notifications tab and I'll basically assume nothing happened

[04:56:26.0000] <zcorpan>
annevk: too late :-P

[04:56:47.0000] <annevk>
ritsyy: I think the same goes for other people, though maybe not everyone uses GitHub notifications the way I do

[04:57:07.0000] <annevk>
ritsyy: (I just noticed you pushed updates to the <iframe seamless> removal PR)

[04:57:10.0000] <annevk>
zcorpan: heh

[04:57:10.0000] <zcorpan>
yeah same here

[05:34:51.0000] <smaug____>
is there some easy way to look at IDs in html spec to get good link to certain place? I always select the relevant text, look at selection source and find some ID in there, but that isn't too handy

[05:37:37.0000] <annevk>
smaug____: not really

[05:38:02.0000] <annevk>
smaug____: I assume you know you can click on <dfn>s and get the link that way

[05:38:17.0000] <annevk>
smaug____: that's probably the easiest way, though doesn't work for sections and such

[05:38:30.0000] <ritsyy>
annevk: yeah i will fix this habit of mine, i'll comment on the PR while doing the changes :)

[05:39:39.0000] <smaug____>
annevk: yeah, in some cases clicking does reveal a popup, that captures only a small subset

[05:39:47.0000] <smaug____>
annevk: how stable are the IDs?

[05:39:57.0000] <zcorpan>
smaug____: the "file an issue" link creates a link for the selection, though it isn't always a useful one (and not so convenient either if you're not filing an issue)

[05:39:59.0000] <smaug____>
/me doesn't know how the IDs are generated

[05:40:42.0000] <zcorpan>
smaug____: not particularly stable :-(

[05:40:56.0000] <annevk>
they should be pretty stable though

[05:41:04.0000] <annevk>
many fragments work for a long time

[05:43:56.0000] <zcorpan>
i suppose it's mostly bad for headings that have the same text content in many places, e.g. "Introduction"

[05:43:59.0000] <Ms2ger>
/me uses devtools

[05:44:10.0000] <Ms2ger>
zcorpan, "document"

[05:45:17.0000] <zcorpan>
Ms2ger: is that one not stable?

[05:46:46.0000] <annevk>
Also, if you need an ID to be stable, there are ways of making it stable, by just inserting it in the source

[05:46:49.0000] <annevk>
We can certainly do that

[05:46:50.0000] <zcorpan>
oh i suppose instances of "document" are not

[05:47:17.0000] <Ms2ger>
Apparently not: https://github.com/servo/servo/pull/9328

[05:47:46.0000] <Ms2ger>
/me goes back to implementing modules

[05:49:03.0000] <zcorpan>
smaug____: btw want to check https://github.com/whatwg/html/pull/508 ?

[05:52:55.0000] <zcorpan>
Ms2ger: i... don't know what's going on there. #dom-document-0 and #dom-document-1 redirect to #browsers

[06:08:09.0000] <smaug____>
so in github one can't really associate a pr with an issue?

[06:08:51.0000] <smaug____>
it is just some random #123 which may or may not get noticed within all the other comments in the bug?

[06:17:50.0000] <zcorpan>
smaug____: right :-/

[06:17:58.0000] <Ms2ger>
smaug____, if you put "Fixes #123" in the summary of a PR, the issue gets closed automatically when the PR is merged

[06:18:29.0000] <zcorpan>
Ms2ger: in the commit message, but yeah

[06:18:50.0000] <Ms2ger>
The PR summary works too

[06:19:07.0000] <zcorpan>
oh, ok.

[06:19:51.0000] <smaug____>
feels like tracking dependency chains is hard

[06:20:00.0000] <ritsyy>
annevk: What conflicts could be the reason of errors?

[06:21:09.0000] <Ms2ger>
People just don't track dependencies :)

[06:23:41.0000] <ritsyy>
annevk: did the changes https://github.com/whatwg/html/pull/499 , thank you!

[06:35:34.0000] <annevk>
ritsyy: you might want to rebase every now and then

[06:51:28.0000] <ritsyy>
annevk: yes i have rebased all the commits of this PR

[06:52:14.0000] <ritsyy>
annevk: oh ok it's done

[06:53:50.0000] <annevk>
ritsyy: it didn't seem rebased, since it failed to compile, after rebasing it did compile

[06:55:39.0000] <ritsyy>
annevk: but my git log shows one commit only, i don't know why that happened

[06:56:22.0000] <annevk>
ritsyy: one commit doesn't mean it's rebased

[06:56:38.0000] <annevk>
ritsyy: rebased means that the commit is new relative to master

[06:57:07.0000] <annevk>
ritsyy: well, that the branch is on top, I guess

[07:24:31.0000] <TabAtkins>
annevk: "single <p> inside an <li>, I don't want breaks around it" - what do you mean by that? And by your next line?

[07:25:24.0000] <TabAtkins>
The closing tag one confuses me, because there's no diff between omitting a closing tag and having the closing tag show up immediately prior to the next opening tag. Both will include any trailing space.

[07:25:54.0000] <annevk>
TabAtkins: if the input is "<li><p>Test." the output is "<li>\n <p>Test. </p>\n </li>" rather than "<li><p>Test.</p></li>"

[07:26:30.0000] <TabAtkins>
Ohhhh, yeah. Because I ended up writing a pretty-printer for output.

[07:26:47.0000] <famicom>
output of what (me just came in)

[07:26:55.0000] <annevk>
TabAtkins: agreed, but it looks ugly, either omit the closing tag, or place it where you'd expect it

[07:28:01.0000] <TabAtkins>
I could make the output smarter and omit closing tags when it's safe to do so, but I'd have to encode all the rules for when the following sibling won't merge into the <p>.

[07:28:07.0000] <TabAtkins>
famicom: Talking about the Bikeshed tool.

[07:28:38.0000] <zcorpan>
TabAtkins: good thing the html spec has rules for when it's safe to omit tags :-)

[07:28:50.0000] <TabAtkins>
Yeah but they're anoyyyyyying

[07:29:00.0000] <famicom>
yeah, but for the sake of consistency, don't

[07:29:40.0000] <famicom>
last time i checked short form wasn't allowed and most xml parsers will scream murder making polyglot docs a pain to write

[07:29:56.0000] <TabAtkins>
Good thing we're not writing XML, then.

[07:30:06.0000] <famicom>
*polyglot*

[07:30:14.0000] <TabAtkins>
Same thing.

[07:30:33.0000] <annevk>
Is polyglot still a thing? o_O

[07:30:34.0000] <jgraham>
famicom: It's not dead, just pining for the fjords?

[07:30:47.0000] <famicom>
annevk hell yeah it is

[07:31:14.0000] <annevk>
/me wonders who famicom is now

[07:31:16.0000] <TabAtkins>
Bikeshed does not actually output polyglot.

[07:31:27.0000] <TabAtkins>
And I have no particular plans to.

[07:31:48.0000] <famicom>
and bikeshed is?

[07:32:04.0000] <TabAtkins>
The tool we were discussing before you showed up. ^_^

[07:32:10.0000] <famicom>
ah!

[07:32:22.0000] <annevk>
TabAtkins: to be fair, the additional newlines are the bigger nuisance, since it makes the output much longer

[07:32:57.0000] <famicom>
annevk, so just trim them?

[07:33:09.0000] <annevk>
TabAtkins: and the various linking systems being hard to figure out and not being deterministic is problematic

[07:33:12.0000] <TabAtkins>
Again, famicom, this is a tool's output we're talking about.

[07:33:46.0000] <famicom>
bikeshed <doc> | tr

[07:34:11.0000] <TabAtkins>
What do you mean by "deterministic"? (I'll cop to "hard to figure out" - that's the price for magic that "just works" 99% of the time.)

[07:35:00.0000] <annevk>
TabAtkins: well, that other documents can claim my terms

[07:35:03.0000] <famicom>
TabAtkins, "predictable"

[07:35:16.0000] <TabAtkins>
famicom: That would delete all newlines. That's not what's being asked for.

[07:35:39.0000] <TabAtkins>
annevk: Yeah, and that produces linking collisions, which are alerted on and which you can then correct for.

[07:36:02.0000] <TabAtkins>
You'll never silently change link targets unless one spec *deletes* a term, then another spec adds it.

[07:36:08.0000] <annevk>
TabAtkins: well, it didn't last time remember when UI Events redefined some stuff from DOM

[07:36:25.0000] <annevk>
TabAtkins: suddenly DOM started pointing to UI Events

[07:36:34.0000] <annevk>
TabAtkins: for <dfn>s that were inside DOM

[07:36:43.0000] <TabAtkins>
Ugh, right, that was my fault and I"m sorry for that.

[07:37:10.0000] <TabAtkins>
It *wasn't* for <dfn>s inside of DOM, it was for IDL that is normally ambiguous and can either become an <a> or a <dfn>, and I was non-determinstic on which it ended up with.

[07:37:21.0000] <annevk>
TabAtkins: the other thing that's weird is that even if I specify a name e.g., <a spec=url>url</a>, it'll still do a local lookup rather than exclusively rely on url.spec.whatwg.org

[07:38:06.0000] <TabAtkins>
I've "fixed" the IDL thing in a simple way now, because it was a mistake that I should never have made. I'll fix it more intelligently later.

[07:38:44.0000] <TabAtkins>
Hmm, yeah, I'm currently using spec purely as a "too many targets" disambiguator.  I could take it as a stronger signal of intent and have it avoid local links, that would make sense.

[07:38:49.0000] <famicom>
TabAtkins, since you wrote bikeshed, got any idea if bs is appropriate to extract all normative sections from the specs automagically

[07:39:25.0000] <TabAtkins>
famicom: It doesn't currently offer such functionality, and you'd need to mark up normative vs informative in a machine-readable way.

[07:39:44.0000] <famicom>
is there any such tool available

[07:39:48.0000] <TabAtkins>
annevk: I'll log the spec thing as an issue and fix it, it'll be easy.

[07:40:47.0000] <annevk>
TabAtkins: there's also that thing since references come from different sources, https://dom.spec.whatwg.org/ ends up referencing selectors twice

[07:41:17.0000] <TabAtkins>
Yeah, that's an open bug on me still to figure out how to dedup Bikeshed's specs from SpecRef's versions.

[07:41:28.0000] <annevk>
TabAtkins: and "Terms defined by reference" only includes successful <a spec=...> stuff, not anything from anchors

[07:41:48.0000] <annevk>
TabAtkins: which makes it a bit weird

[07:41:56.0000] <TabAtkins>
Ohhh, interesting request.

[07:42:29.0000] <TabAtkins>
(All <pre class=anchors> stuff is treated as local right now, so you don't get linking ambiguity if that term happens to exist elsewhere, because you clearly communicated intent to link to this specific version.)

[07:43:01.0000] <annevk>
(I'd rather not need anchors at all I guess, but as long as it's needed I'd prefer it if the output at least didn't distinguish as much...)

[07:43:21.0000] <annevk>
Yeah, but anchors is mostly used for non-local stuff

[07:43:21.0000] <famicom>
TabAtkins, so how does one know weither the local version contains the latest version

[07:43:28.0000] <annevk>
At least, as far as I can tell

[07:43:33.0000] <TabAtkins>
Yeah, I'd prefer not needing it either, but until more specs are Bikeshed-friendly and in the linking database...

[07:43:40.0000] <famicom>
or weither the referenced link is authoritative

[07:43:58.0000] <TabAtkins>
annevk: Yeah, if you have an *actual* local anchor, it's just a <dfn> somewhere.

[07:44:10.0000] <TabAtkins>
famicom: ?

[07:44:18.0000] <famicom>
[16:42:59] <TabAtkins> (All <pre class=anchors> stuff is treated as local right now, so you don't get linking ambiguity if that term happens to exist elsewhere, because you clearly communicated intent to link to this specific version.)

[07:44:32.0000] <TabAtkins>
Yes, I get the reference, I just dont' understand your question.

[07:45:40.0000] <mven>
Hi all, can anyone tell me what the default font-size for an html page is? I keep hearing 16px, but I've dove into the default browser style sheets and haven't seen any definitive evidence that this is the case. Anyone have a spec that shows this?

[07:45:47.0000] <famicom>
sigh, most specs regarding html5 et all are rather scattered

[07:46:43.0000] <TabAtkins>
mven: It's based on user settings (thus not in the default style sheet), but it typically defaults to 16px.

[07:46:56.0000] <Ms2ger>
Is that specced?

[07:47:11.0000] <mven>
@TabAtkins So based on the user prefs in the browser?

[07:47:19.0000] <annevk>
mven: yup

[07:47:27.0000] <mven>
ahhh

[07:48:13.0000] <mven>
That makes sense.

[07:48:13.0000] <mven>
I couldn't find any info about it. Does anyone have a link to that?

[07:48:49.0000] <annevk>
Ms2ger: https://drafts.csswg.org/css-fonts/#font-size-prop does not seem to define that medium typically means 16px

[07:49:36.0000] <TabAtkins>
Correct, it's not defined anywhere.

[07:50:07.0000] <annevk>
Probably should be defined, since I suspect there's quite a few pages depending on it by now

[07:50:45.0000] <famicom>
annevk, based on what data?

[07:51:15.0000] <TabAtkins>
Based on the assumption that whenever something is agreed on by every single browser for decades, it's probably depended on.

[07:51:32.0000] <TabAtkins>
This is, like, one of the safest possible assumptions to make in this regard.

[07:51:43.0000] <famicom>
except for safari

[07:52:05.0000] <TabAtkins>
Are you saying that Safari does not default to 16px text on a clean install?

[07:52:42.0000] <annevk>
w(getComputedStyle(document.body).fontSize) returns 16px in Safari, not sure what famicom is talking about

[07:54:12.0000] <mven>
@TabAtkins @annevk thanks for the info. It's been helpful.

[07:57:56.0000] <TabAtkins>
annevk: https://github.com/tabatkins/bikeshed/issues/565 and https://github.com/tabatkins/bikeshed/issues/566

[07:58:57.0000] <smaug____>
nox: what is the problem with text nodes and split?

[07:59:11.0000] <nox>
smaug____: Ranges are not updated correctly.

[07:59:34.0000] <nox>
If I have an orphan Text node of length 50, with a range spanning from 0 to 30, and I split at 20,

[07:59:36.0000] <annevk>
TabAtkins: ta

[07:59:38.0000] <nox>
what should happen to the range?

[07:59:52.0000] <smaug____>
range should be 0,20

[08:00:01.0000] <smaug____>
per spec

[08:00:10.0000] <smaug____>
/me re-reads the spec ;)

[08:00:20.0000] <nox>
smaug____: Can't read.

[08:00:23.0000] <nox>
:(

[08:00:30.0000] <nox>
Forgot step 9.

[08:00:45.0000] <smaug____>
"For each range whose end node is node and end offset is greater than offset, set its end offset to offset"

[08:01:21.0000] <annevk>
phew

[08:01:51.0000] <famicom>
sigh

[08:01:52.0000] <famicom>
 if you have chosen a 12-point or "medium" font as your default (i.e., for body), then this should measure 16 points. If your display is at 96 dpi (the Windows norm), then this will equate to 21.33 pixels. For reference, this sentence is specified at 21.33 pixels. With the same parameters, a (hypothetically) good Mac CSS implementation would see it at 16 pixels, like this sentence. In any case, the object below maintains

[08:01:52.0000] <famicom>
proportionality with the text, regardless of font size or platform, because the height and width of the object are specified in em units as well. Change your font size and observe. Cool huh? [What? You say it doesn't work? Well of course not - there are no complete CSS implementations yet! Do complain.]

[08:02:08.0000] <famicom>
^^ so no, it's not 16px

[08:03:40.0000] <TabAtkins>
...what? Why would 12-point measure 16 points?

[08:04:13.0000] <TabAtkins>
12pt equals 16px, maybe you're confusing yourself that way?

[08:04:46.0000] <TabAtkins>
Note that the pt to px conversion has no relation to your screen dpi. It's a fixed 3:4 ratio.

[08:05:27.0000] <nox>
smaug____: Step 9 looks redundant though.

[08:05:27.0000] <TabAtkins>
It sounds like you're quoting from something, and that something sounds old.

[08:05:51.0000] <nox>
smaug____: Shouldn't replacing the data in step 8 cover it?

[08:07:03.0000] <smaug____>
nox: replace puts offset to different place

[08:07:07.0000] <smaug____>
it uses offset + count

[08:07:20.0000] <nox>
smaug____: "For each range whose start node is node and start offset is greater than offset but less than or equal to offset plus count, set its start offset to offset."

[08:07:34.0000] <smaug____>
hmm, let me read again, I was looking startoffset

[08:07:42.0000] <nox>
It can't be greater than offset plus count, because offset plus count is the length of the Text node.

[08:08:27.0000] <smaug____>
"For each range whose end node is node and end offset is greater than offset but less than or equal to offset plus count, set its end offset to offset"

[08:08:45.0000] <nox>
Yes, it's the same thing for start and end offsets.

[08:08:52.0000] <famicom>
TabAtkins, https://www.w3.org/TR/REC-CSS1-961217#length-units

[08:08:58.0000] <smaug____>
so yes, 9 looks redundant

[08:09:50.0000] <TabAtkins>
...omigod. Are you SERIOUSLY quoting CSS1, a *20-year old* document, at me?

[08:09:53.0000] <famicom>
http://lists.w3.org/Archives/Public/www-style/msg08095.html

[08:10:01.0000] <famicom>
TabAtkins, yes i am

[08:10:11.0000] <TabAtkins>
Why

[08:10:13.0000] <famicom>
because untill further notice that is the *standard*

[08:10:37.0000] <famicom>
     An <absolute-size> keyword is an index to a table of font sizes computed and kept by the UA. Possible values are: [ xx-small | x-small | small | medium | large | x-large | xx-large ]. On a computer screen a scaling factor of 1.5 is suggested between adjacent indexes; if the 'medium' font is 10pt, the 'large' font could be 15pt. Different media may need different scaling factors. Also, the UA should take the quality and

[08:10:38.0000] <famicom>
availability of fonts into account when computing the table. The table may be different from one font family to another.

[08:10:38.0000] <TabAtkins>
lololol quit trolling

[08:10:55.0000] <famicom>
im dead serious, could you please state where it was redefined?

[08:11:12.0000] <TabAtkins>
No, I'm done. Muting you if you're gonna be like this.

[08:11:39.0000] <famicom>
?

[08:12:11.0000] <famicom>
look. im fine with the statement that medium fontsize equals 16px, happy even.

[08:12:22.0000] <famicom>
but i do need it written down and set in stone somewhere

[08:23:08.0000] <nox>
famicom: What was redefined?

[08:23:27.0000] <famicom>
https://www.w3.org/TR/REC-CSS1-961217#length-units <<< this apparently

[08:24:43.0000] <nox>
https://drafts.csswg.org/css-values/#lengths

[08:26:20.0000] <nox>
pt	points	1pt = 1/72th of 1in

[08:26:21.0000] <nox>
px	pixels	1px = 1/96th of 1in

[08:26:45.0000] <nox>
3:4 ratio, as TabAtkins said.

[08:29:07.0000] <SimonSapin>
yes, CSS1 was redefined. 19 years ago. https://www.w3.org/TR/WD-CSS2-971104/cover.html

[08:29:59.0000] <nox>
I'm glad I'm at least older than CSS.

[08:33:23.0000] <TabAtkins>
nox: There are webdevs entering the job market who can't say that, which feels CRAZY.

[08:33:50.0000] <nox>
Well I'm glad I'm not a webdev either, so there is that. :P

[09:04:54.0000] <famicom>
SimonSapin, https://www.w3.org/TR/WD-CSS2-971104/fonts.html#propdef-font-size

[09:05:05.0000] <famicom>
On a computer screen a scaling factor of 1.5 is suggested between adjacent indexes; if the 'medium' font is 10pt, the 'large' font could be 15pt. Different media may need different scaling factors. Also, the UA should take the quality and availability of fonts into account when computing the table. The table may be different from one font family to another.

[09:05:30.0000] <famicom>
that's all it says :/

[09:05:45.0000] <SimonSapin>
"could", "should", "may"

[09:05:57.0000] <SimonSapin>
and this one has been redefined many times as well

[09:06:24.0000] <nox>
famicom: Did you see that the ratio between pt and px is fixed, at least?

[09:06:43.0000] <famicom>
yeah, 1.5

[09:06:55.0000] <nox>
What? No.

[09:07:03.0000] <nox>
3:4.

[09:07:23.0000] <famicom>
hold on, let me review

[09:13:28.0000] <famicom>
The relation between the absolute units is as follows: 1in = 2.54cm = 25.4mm = 72pt = 6pc

[09:14:23.0000] <nox>
famicom: Did you read the link I pasted?

[09:14:30.0000] <famicom>
In the past, CSS required that implementations display absolute units correctly even on computer screens. But as the number of incorrect implementations outnumbered correct ones and the situation didn't seem to improve, CSS abandoned that requirement in 2011. Currently, absolute units must work correctly only on printed output and on high-resolution devices.

[09:14:30.0000] <famicom>
The px unit is defined to be small but visible, and such that a horizontal 1px wide line can be displayed with sharp edges (no anti-aliasing). What is sharp, small and visible depends on the device and the way it is used: do you hold it close to your eyes, like a mobile phone, at arms length, like a computer monitor, or somewhere in between, like an e-book reader? The px is thus not defined as a constant length, but as something that

[09:14:31.0000] <famicom>
depends on the type of device and its typical use.

[09:14:37.0000] <famicom>
yeah i am

[09:14:59.0000] <nox>
https://drafts.csswg.org/css-values/#absolute-lengths

[09:15:31.0000] <famicom>
The reference pixel

[09:15:31.0000] <famicom>
is the visual angle of one pixel on a device with a pixel density of 96dpi and a distance from the reader of an arm’s length. For a nominal arm’s length of 28 inches, the visual angle is therefore about 0.0213 degrees. For reading at arm’s length, 1px thus corresponds to about 0.26 mm (1/96 inch).

[09:15:31.0000] <famicom>
The image below illustrates the effect of viewing distance on the size of a reference pixel: a reading distance of 71 cm (28 inches) results in a reference pixel of 0.26 mm, while a reading distance of 3.5 m (12 feet) results in a reference pixel of 1.3 mm.

[09:15:48.0000] <nox>
I'm starting to see why TabAtkins just stopped reading you.

[09:16:28.0000] <nox>
Why are you pasting walls of text when I pointed you to a neatly-typeset table that shows the exact relation between px and pt?

[09:33:01.0000] <famicom>
because i have no idea where those numbers came from, meaning they're informative while i NEED normative references

[09:33:44.0000] <famicom>
which is a huge distinction

[09:35:11.0000] <famicom>
either way, it seems that this is lost on whatwg members

[09:35:30.0000] <annevk>
Look, if you don't think anything but CSS1 is normative, why even hang out here? WHATWG changes multiple standards on a daily basis and only considers the latest normative... So if you're looking for theoretical arguments, this might not be your place

[09:35:53.0000] <annevk>
For starters, you might consider our channel topic

[09:36:51.0000] <famicom>
look, as far as i'm concerned you have rather little credibillity to begin with.

[09:37:30.0000] <jgraham>
Ah, so this conversation has gone from "dead parrot" to "argument clinic"

[09:37:54.0000] <famicom>
and i already got the answer i needed, there's no machine readable spec

[09:38:11.0000] <Ms2ger>
/me whacks jgraham over the head

[09:38:31.0000] <Ms2ger>
"whaaa"

[09:40:56.0000] <famicom>
quite frankly, if you just had the damn decency to produce a single diffable schema, i wouldnt have had to ask these pointless questions to begin with.

[09:42:55.0000] <famicom>
either way, you all seem to be taking the standardization process far too lightly

[09:42:56.0000] <annevk>
You're welcome to produce a schema

[09:43:05.0000] <annevk>
We gave up schemas being useful long ago

[09:43:11.0000] <famicom>
the reason being?

[09:43:36.0000] <famicom>
i take it you've never had the displeasure of working with soap or xslt

[09:44:36.0000] <annevk>
famicom: https://hsivonen.fi/thesis/html5-conformance-checker has some details

[09:44:55.0000] <famicom>
yeah, the guy who wrote validator.nu

[09:45:19.0000] <famicom>
except his schematron and rng schemas arent versioned

[09:45:35.0000] <annevk>
Neither is the standard

[09:46:04.0000] <TabAtkins>
Man, thinking CSS1 is the current definitive reference is so far from the "WHATWG doesn't take things seriously enough" argument that, wow. I mean, CSS2 was Rec in 1998, 2.1 in 2011. I'm not sure what level of "standardization" is being looked for here, but nobody in the web platform is looking to provide it.

[09:47:40.0000] <famicom>
well what are you looking to provide then??

[09:48:21.0000] <annevk>
famicom: https://wiki.whatwg.org/wiki/FAQ#What_is_the_WHATWG.3F

[09:48:36.0000] <famicom>
and what on god greens earth are the ua vendors implementing

[09:49:21.0000] <annevk>
The standards with the green stylesheets, when they exist

[09:52:04.0000] <famicom>
standards for what, implemented by whom?

[09:52:31.0000] <famicom>
seriously, a single up to date list of single page documents would suffice

[09:53:18.0000] <famicom>
at this point it seems like the only way to be sure of implementation details is to mine the actual sourcecode of major rendering engines.

[09:53:54.0000] <jgraham>
Weirdly this is the point in history at which that is *least* true

[09:54:07.0000] <annevk>
famicom: like https://platform.html5.org/?

[09:56:47.0000] <famicom>
"HTML5 Please recommends as ready to use"

[09:57:36.0000] <famicom>
you are aware that by using popular implementations as the main reference you're just describing the situation, as-is

[09:59:01.0000] <famicom>
don't any of you remember the IE6 box model

[10:00:49.0000] <famicom>
by your reasoning, that would now be the "law of the land"

[10:00:55.0000] <TabAtkins>
Who are you, and what is the context of all this bizarre questioning and hostility?

[10:01:37.0000] <famicom>
about a year of tracking this nonsense on mailing lists and using those godawful broken tools you produce

[10:01:51.0000] <annevk>
famicom: indeed, most of us agree that the CSS WG back then should have made different decisions around quirks/standards mode and such

[10:02:07.0000] <Hixie>
man, it's been 18 years that i've been in standards and it's still the same discussions

[10:02:17.0000] <famicom>
you do realize that docbook is more stable more mature than that junk you wrote right?

[10:02:29.0000] <famicom>
sorry hixie

[10:02:37.0000] <jgraham>
Hixie: To be fair this discussion seems to have appeared through a wormhole from 2007

[10:02:40.0000] <famicom>
/me humbly apologizes

[10:02:47.0000] <Hixie>
famicom: how many people write docbook?

[10:03:08.0000] <famicom>
anyone involved with OSS documentation?

[10:03:18.0000] <Hixie>
how many people write html?

[10:03:41.0000] <famicom>
how many people write useful html?

[10:04:11.0000] <nox>
Nice.

[10:04:13.0000] <Hixie>
well since docbook is pretty much exclusively used as an authoring format for future conversion to html, i'm gonna go with "more than docbook"

[10:04:33.0000] <famicom>
what about xmlspec

[10:04:39.0000] <famicom>
anyone remember that?

[10:04:58.0000] <nox>
famicom: Are you arguing that IE6 box model happened because of lack of spec?

[10:05:20.0000] <Hixie>
lack of test suite, more likely

[10:05:24.0000] <famicom>
nox, ie6 was a wilful violation

[10:05:45.0000] <famicom>
and led to an awful amount of ambiguety

[10:06:23.0000] <Hixie>
anyway, what's the argument here? famicom: do you have a proposal for how to change something?

[10:06:28.0000] <nox>
And how does a diffable spec avoid that, if any big UA decides to do yet another wilful violation?

[10:06:45.0000] <famicom>
Hixie, no, i just want a single machine readable standard

[10:06:53.0000] <Hixie>
define "machine readable"

[10:07:01.0000] <famicom>
xsd

[10:07:03.0000] <famicom>
dtd

[10:07:07.0000] <nox>
What does that change?

[10:07:14.0000] <famicom>
on a fixed publishing point

[10:07:19.0000] <nox>
Do you only use programming languages with such specs, btw?

[10:07:26.0000] <Hixie>
oh you want a schema that defines when a byte stream is a valid conforming representation and when it's not?

[10:07:36.0000] <famicom>
yup

[10:07:40.0000] <Hixie>
that's easy

[10:08:03.0000] <famicom>
i got 12 thousand files that need to be converted into html views

[10:08:25.0000] <Hixie>
new schema language: "HTML Schema Language". Has one element, "HTML". A byte stream matches HTML if it conforms to the HTML spec.

[10:08:30.0000] <Hixie>
new schema for the HTML spec: "HTML"

[10:08:39.0000] <famicom>
i know, i read the damn thing

[10:08:49.0000] <Hixie>
done and done.

[10:08:54.0000] <Hixie>
next question please

[10:09:30.0000] <famicom>
so Hixie does this mean my beloved <blink> tag is back?

[10:09:38.0000] <famicom>
:D

[10:10:12.0000] <nox>
XSD describes XML dialects, DTD describes XML and SGML. HTML is neither now.

[10:10:32.0000] <famicom>
schemas can be used for instance generation

[10:10:43.0000] <Hixie>
not sure how what i said has anything to do with blink.

[10:10:47.0000] <famicom>
as well as validation

[10:10:56.0000] <nox>
famicom: For XML and SGML, yes.

[10:11:06.0000] <nox>
famicom: What do you do about HTML being neither XML nor SGML?

[10:11:23.0000] <famicom>
figure out what it is?

[10:11:31.0000] <nox>
It's HTML.

[10:11:58.0000] <famicom>
well of all places i shouldnt be having this conversation here

[10:12:05.0000] <nox>
How do you do validate C code?

[10:12:16.0000] <Hixie>
how do you validate SGML DTDs

[10:12:36.0000] <famicom>
nox

[10:12:37.0000] <famicom>
ISO/IEC 9899

[10:12:47.0000] <nox>
Is that machine-readable?

[10:13:29.0000] <famicom>
this is over your head nox, please don't try

[10:13:51.0000] <famicom>
but yeah, it is tested for conformance

[10:13:52.0000] <nox>
I know I'm only 167cm tall, but I still can do all the rollercoasters I want at Disney,

[10:13:57.0000] <nox>
so I think I can try that.

[10:14:17.0000] <famicom>
http://www.peren.com/pages/cvsa_set.htm

[10:14:21.0000] <nox>
Code is validated through feeding it to something that implements whatever constraints are stated in the spec.

[10:14:33.0000] <nox>
Same as how HTML validators work.

[10:14:59.0000] <famicom>
yeah, except the current spec depends on the current implementation.

[10:15:04.0000] <famicom>
which im sure is intentional

[10:15:10.0000] <famicom>
but not how standards work

[10:15:15.0000] <nox>
Yes, because doing otherwise never worked.

[10:15:42.0000] <nox>
And the current spec depends on the consensus of current implementations, plural.

[10:15:43.0000] <famicom>
THEN CALL IT AN IMPLEMENTATION REFERENCE, NOT A STANDARD

[10:15:53.0000] <nox>
It's not an implementation.

[10:16:10.0000] <TabAtkins>
Okay, so your context is that you have a bunch of files in subs other format, and you want to convert them to HTML.

[10:16:20.0000] <nox>
Sorry, parsed that as reference implementation because caps are difficult to read.

[10:16:25.0000] <Hixie>
wait what

[10:16:33.0000] <Hixie>
what's the difference between "IMPLEMENTATION REFERENCE" and "STANDARD"

[10:16:56.0000] <nox>
The irony is having this discussion through IRC,

[10:16:56.0000] <famicom>
sigh

[10:17:05.0000] <Hixie>
the HTML spec is a standard implementation reference and a standard document conformance reference

[10:17:13.0000] <nox>
which is definitely not implementation-driven, right?

[10:17:31.0000] <famicom>
implementations arent always fully compliant

[10:17:36.0000] <famicom>
ie, an unreliable source

[10:17:54.0000] <Hixie>
sgml implementations aren't always compliant either

[10:17:57.0000] <nox>
What do you do when 70% of the market is an non-compliant implementation?

[10:18:00.0000] <Hixie>
that's just a truth about software

[10:18:13.0000] <famicom>
nox, avoid further ambiguety

[10:18:22.0000] <nox>
How do you do that without changing the spec?

[10:19:04.0000] <famicom>
incrementally

[10:19:35.0000] <nox>
So, like HTML now?

[10:19:52.0000] <famicom>
no, because at some point you need a frozen featureset

[10:20:02.0000] <famicom>
which you don't provide

[10:20:09.0000] <nox>
Why, if that's not what's implemented?

[10:21:27.0000] <famicom>
sigh, it's still better than having some MSFT brogrammers dictate the schedule and features

[10:21:33.0000] <nox>
What do you do if you have a frozen featureset, and the biggest UA suddenly change directions and make a backwards-incompatible change?

[10:21:43.0000] <famicom>
then they're wrong

[10:21:58.0000] <nox>
People don't care. And it's IE6 box model time again.

[10:22:23.0000] <famicom>
yeah, but now you just give up and proclaim IE6's boxmodel as the new "one true way"

[10:22:29.0000] <famicom>
which is cowardice

[10:22:48.0000] <TabAtkins>
famicom: Since you're doing a mass HTML conversion, I recommend looking up basic HTML tutorials, and only checking the HTML spec if there are details you can't find otherwise.  You mostly don't need to worry about it if you're just doing a cross-format conversion.

[10:22:52.0000] <nox>
Cowardice? Wtf does that have anything to do with this discussing?

[10:22:59.0000] <annevk>
you do realize box-sizing basically standardized the IE6 box model and then some?

[10:23:00.0000] <Hixie>
famicom: we do have a frozen featureset

[10:23:03.0000] <nox>
And as you guessed earlier, I'm not fit enough to be a brogrammer, btw.

[10:23:19.0000] <TabAtkins>
When I was a wee webdev, I learned from HTMLDog.com, but CSSTricks has decent stuff too, and there's a lot of other resources these days that I don't know about.

[10:23:21.0000] <annevk>
and there's loads of people that prefer using box-sizing to get something like the IE6 box model

[10:23:23.0000] <Domenic>
this is ... amazing

[10:23:24.0000] <Hixie>
famicom: every single time the spec is revised, it's a new version

[10:23:25.0000] <nox>
TabAtkins: Should just check w3schools, right?

[10:23:31.0000] <famicom>
Hixie, yeah, and anounced where?

[10:23:34.0000] <TabAtkins>
nox: Please, we're trying to help. Dont' troll.

[10:23:47.0000] <Domenic>
TabAtkins: html5 goodies was my jam. I wonder if that's still around. It had a grotesque large-headed long-necked illustration of the author as its mascot.

[10:23:55.0000] <nox>
TabAtkins: I disagree with you conflating jokes and trolls, but ok. :(

[10:23:55.0000] <Hixie>
famicom: since it happens multiple times a day, it doesn't really need to be announced. but you can subscribe to the github notifications if you want an announcement.

[10:23:57.0000] <famicom>
and twitter isn't a valid or reliable source

[10:24:09.0000] <TabAtkins>
(nox: I was joking, it's cool. ^_^)

[10:24:17.0000] <nox>
TabAtkins: Ok. :)

[10:24:21.0000] <annevk>
TabAtkins: htmldog <3

[10:24:36.0000] <famicom>
seriously, github?

[10:24:38.0000] <annevk>
TabAtkins: although I learned from a set of books I bought

[10:24:48.0000] <Domenic>
zomg amazing https://web.archive.org/web/19990224005512/http://www.htmlgoodies.com/

[10:24:54.0000] <famicom>
god, why don't you just go full circle and use hosting from myspace

[10:25:01.0000] <TabAtkins>
famicom: The least useful thing you could do to help in your project is troll a spec-dev chatroom throwing a lot of hostility from an early-2000s era of theoretical spec design.

[10:25:10.0000] <nox>
famicom: How does the hosting platform matter?

[10:25:11.0000] <famicom>
TabAtkins, lol

[10:25:27.0000] <Hixie>
famicom: you can copy the spec and put it wherever you like

[10:25:38.0000] <famicom>
Hixie, what is the authoritative point of reference

[10:25:43.0000] <nox>
famicom: An ISO spec behind a CHF paywall is way better, right?

[10:25:45.0000] <Domenic>
This guy really is from 1997, he doesn't use GitHub or Twitter...

[10:25:52.0000] <Hixie>
famicom: html.spec.whatwg.org

[10:26:01.0000] <famicom>
Hixie, where are updates announced

[10:26:01.0000] <Hixie>
but that's just a web site

[10:26:07.0000] <TabAtkins>
Some of us might be willing to spend time teaching you the basics of how spec design has evolved in the last two decades of experience, but that's not going to be helpful fo ryou rimmediate project, and your hostility at the moment is making it very unlikely that we'll be willing to help.

[10:26:09.0000] <famicom>
Hixie, where is the source

[10:26:11.0000] <Hixie>
famicom: they're not. they happen literally daily.

[10:26:18.0000] <Hixie>
the source?

[10:26:21.0000] <Hixie>
source of what

[10:26:30.0000] <famicom>
html.spec.whatwg.org

[10:26:31.0000] <nox>
famicom: https://github.com/whatwg/html

[10:26:32.0000] <TabAtkins>
Hixie: Well, they're announced on Twitter, and you can always check the VC history.

[10:26:35.0000] <famicom>
or do i just need to scrape it

[10:26:41.0000] <Hixie>
https://html.spec.whatwg.org/index.html

[10:26:43.0000] <nox>
famicom: It's generated through a tool written in Pascal.

[10:26:43.0000] <famicom>
got it

[10:26:46.0000] <famicom>
thanks Hixie

[10:26:52.0000] <Hixie>
i'm not sure i really understand what you're asking

[10:26:53.0000] <nox>
That should make you feel at home like it's 1990 again.

[10:26:55.0000] <famicom>
you're always the voice of reason

[10:27:13.0000] <famicom>
nox, TabAtkins go back to preschool you toddlers

[10:27:25.0000] <Domenic>
I think we need some moderation here

[10:27:27.0000] <nox>
I didn't know English in preschool.

[10:27:29.0000] <annevk>
Hixie: /index.html 404s at the moment, just / is better

[10:27:34.0000] <nox>
Domenic: Sorry. :(

[10:27:42.0000] <TabAtkins>
Yuuup, mod time for the troll now.

[10:27:43.0000] <Hixie>
annevk: lol k

[10:27:54.0000] <Hixie>
famicom: hey you can ask questions about the process but stay polite please

[10:28:10.0000] <famicom>
yeah, will do

[10:30:07.0000] <jwalden>
annevk: egad all those internal method definitions/overrides in https://github.com/annevk/html-cross-origin-objects are horrific :-)

[10:30:34.0000] <annevk>
jwalden: yeah, I have no idea what I'm doing

[10:30:40.0000] <jwalden>
lol

[10:30:43.0000] <jwalden>
wcgr

[10:30:48.0000] <jwalden>
("what could go wrong")

[10:30:59.0000] <annevk>
I'm sure bholley will tell me

[10:31:09.0000] <annevk>
But who knows

[10:32:26.0000] <jwalden>
/me supposes he should take the time to grok this a bit now, beyond just the cursory skim

[10:36:13.0000] <annevk>
I have half a plan of writing some kind of introductory blog post

[10:36:39.0000] <jwalden>
annevk: speaking of blog posts, I liked your most recent one about app security model nonsense :-)

[10:38:08.0000] <jwalden>
selling JMAP or similar to all IMAP implementation seems pretty hard, unfortunately :-(

[10:38:22.0000] <jwalden>
maybe even impossible

[10:38:36.0000] <famicom>
unlikely if anything

[10:39:22.0000] <famicom>
it isn't mature, it doesnt "solve" anything

[10:39:57.0000] <famicom>
and email is literally the last set of protocols you want to get involved in

[10:41:08.0000] <annevk>
jwalden: yeah, but I'm also not convinced we really need IMAP to succeed

[10:41:27.0000] <famicom>
maar daar kom je wel achter zodra jeje eerste MDA hebt geprovisioneerd

[10:42:25.0000] <jwalden>
annevk: everyone would just use mobile webmail sites then, somehow?

[10:43:38.0000] <Domenic>
jwalden: that seems uncontroversial :). The question I think is whether you need to be able to do IMAP mail processing on the client or just on the server

[10:43:39.0000] <annevk>
jwalden: yeah, we should have offered a competitive messaging client too of sorts, to offset Whatsapp not being on the web

[10:44:42.0000] <jwalden>
essentially not owning a phone (let alone a smart one), I certainly can't speak about the messaging ecosystem or its needs or the need for such things at all :-)

[10:45:16.0000] <annevk>
heh

[10:46:01.0000] <annevk>
afk

[10:46:04.0000] <famicom>
jwalden, youre not missing out

[10:46:12.0000] <jwalden>
:-D

[10:46:27.0000] <famicom>
they recently repurposed email as "conversations"

[10:46:40.0000] <famicom>
which is really interesting when receiving snmp reports

[10:46:41.0000] <jwalden>
however, I *am* available for any and all lawn-related speaking arrangements

[10:47:10.0000] <famicom>
yeah well, im going to play star citizen

[10:47:17.0000] <famicom>
sorry to bother yall

[10:47:22.0000] <famicom>
and Hixie you are god

[10:47:40.0000] <famicom>
^h^h^h last remaining grownup

[10:47:55.0000] <jwalden>
there are grownups here?

[10:48:39.0000] <famicom>
at least some who remember that there was an industry before them

[10:49:46.0000] <famicom>
insteda of just teenagers posing as "ux specialists" or "frontend developers"

[10:50:42.0000] <jwalden>
oh, we're all just posers, how else to explain the architecture of the web as we know it?  :-)

[10:50:54.0000] <famicom>
simple

[10:50:57.0000] <famicom>
a series of tubes

[10:51:03.0000] <famicom>
it's not a big dump truck

[10:52:05.0000] <famicom>
but seriously, it's like september 1993 all over again

[10:52:36.0000] <famicom>
but this time, instead of AOL, it's these damn smartphones, and this time, rather than users the newbies think they're developers

[10:53:41.0000] <jsbell>
"uphill both ways in the snow..."

[10:54:58.0000] <famicom>
laugh all you want, but slowly a part of me is dying inside

[10:55:53.0000] <jwalden>
when the choice is between dying inside and laughing, I choose the latter (or at worst choose both)

[10:56:00.0000] <jwalden>
recommended for general sanity around here

[10:56:01.0000] <TabAtkins>
annevk: Jeezus christ, can we ban this person? Straight trolling after a clear warning.

[10:56:30.0000] <famicom>
jwalden, cant fight progress

[10:56:56.0000] <famicom>
but you can patch it out!

[11:05:02.0000] <nox>
famicom: Stop assuming things about people you speak with and explain yourself better without using derogatory terms and maybe it will go better.

[12:17:23.0000] <sj13>
I am a beginner and would like to contribute. I found this issue: https://github.com/whatwg/html/issues/535, however, I cannot pin-point the exact file where the change needs to be made. Can someone help?

[12:33:16.0000] <TabAtkins>
sj13: Check the README at https://github.com/whatwg/html, it tells you which file to edit to make changes.

[12:50:27.0000] <annevk>
TabAtkins: not sure I can, I did use /ignore

[12:58:00.0000] <nox>
annevk: Blabla not grownups blabla Web users not developers

[13:00:25.0000] <annevk>
nox: heh, thinking about it, they never read https://annevankesteren.nl/2007/04/html-red-pill I guess

[13:01:23.0000] <nox>
annevk: It's also weirdly fun to me because I don't author any HTML.

[13:02:24.0000] <nox>
To protect myself from the insanity, I would rather go the cyclone's eye and just implement it. :P

[13:03:45.0000] <annevk>
Well, let me know in five years how that worked out for you

[13:04:11.0000] <nox>
annevk: Probably deaf over the terrifying sounds of the eyewall.

[13:04:28.0000] <annevk>
My door is full of logic, but I lost it

[13:05:25.0000] <nox>
annevk: There is an anime this season where you can literally lose your logic card.

[13:05:47.0000] <nox>
You can't be a logicalist anymore if you lose it.

[13:05:58.0000] <annevk>
I see, is there a way to get it back?

[13:06:45.0000] <nox>
The hero regains his own in the first episode through unknown means but that seems like a one-time thing.

[13:06:54.0000] <nox>
I guess you'll never find back your door.

[13:17:29.0000] <aklein>
annevk: re https://github.com/annevk/html-cross-origin-objects, are various ES6 symbols on your radar? For example, @@toStringTag, @@hasInstance, @@isConcatSpreadable. It would be nice to define the behavior of all of these in a cross-origin object

[13:47:05.0000] <gsnedders>
I… I'm so confused by earlier.

[13:47:32.0000] <jgraham>
The concept of past, or something more specific?

[13:48:17.0000] <gsnedders>
The discussion in here earlier.

[13:49:57.0000] <jgraham>
It seemed like a totally normal discussion for this channel

[13:50:12.0000] <jgraham>
Just one that you would have expected to happen about a decade ago

[13:57:56.0000] <TabAtkins>
Yeah, that was the sort of thing I got used when I joined the channel, like, 7 or 8 years ago.

[13:58:01.0000] <TabAtkins>
*used to

[13:59:18.0000] <gsnedders>
it seemed even further back than when I joined a decade ago.

[13:59:25.0000] <gsnedders>
given the references to CSS 1

[14:02:02.0000] <TabAtkins>
That's what really threw me. Some people are weird and unreasonable about the definition of "stable", but by any definition I've *ever* heard, Recs (like 2.1) qualify. I have absolutely no idea how someone gets themselves twisted into the idea that CSS*1* is the only valid standard so far.

[14:03:45.0000] <gsnedders>
like, yes, otherwise it was a fairly 2006 argument

[14:04:02.0000] <Hixie>
CSS1 in particular was pretty terrible

[14:09:12.0000] <TabAtkins>
Maybe XSLT has a previously-undiscovered ability to transform *through time*, and we're seeing the first results of that.

[14:09:57.0000] <gsnedders>
TabAtkins: hmm, didn't realise Turing Machine were time machines.

[14:10:13.0000] <TabAtkins>
IT'S RIGHT THERE IN THE ACRONYM

[14:14:34.0000] <gsnedders>
THAT'S SO OBVIOUS, WHY DID I NEVER REALISE?!

[14:44:10.0000] <astearns>
which acronym? the one for eXtenstible Simultaneity Layering Transformations?

[14:45:33.0000] <TabAtkins>
You've found the four words in one acronym that enlightens us to the time cube!

[14:45:43.0000] <TabAtkins>
We are no longer educated stupid!


2016-01-20
[21:36:05.0000] <annevk>
aklein: not all of those, so a bit?

[00:14:28.0000] <annevk>
console.log() becoming a standard seems to excite more folks on Twitter than anything else we ever did

[00:15:22.0000] <ondras>
:-)

[01:22:40.0000] <MikeSmith>
annevk: I guess it's something more directly tangible and familiar to most devs

[01:23:12.0000] <MikeSmith>
sice everybody who does web dev knows about console.log() and has used it

[01:41:34.0000] <annevk>
Whoa, it seems DreamHost allows enabling Let's Encrypt

[01:42:08.0000] <annevk>
Trying it out now... If that works Hixie will be so pleased he won't have to copy-and-paste certificates around dozens of domains

[01:42:26.0000] <ondras>
a quick CSP question -- does my CSP policy apply also *inside* of an iframe that itself sits on an allowed-but-different domain?

[01:42:45.0000] <annevk>
ondras: nope

[01:42:57.0000] <ondras>
annevk: nice, thanks. makes sense.

[02:00:59.0000] <annevk>
TabAtkins: another example, I just updated bikeshed, and now "URL" and "URLs" are no longer the same term

[02:02:55.0000] <annevk>
or fragment/fragments

[02:09:38.0000] <zcorpan>
annevk: with an updated bikeshed, for dom i get FATAL ERROR: No 'idl' refs found for 'addEventListener()' that are marked for export.

[02:11:08.0000] <annevk>
zcorpan: I have no idea how bikeshed works and apparently TabAtkins doesn't run regression tests

[02:11:23.0000] <zcorpan>
TabAtkins: ^

[02:23:17.0000] <zcorpan>
https://travis-ci.org/tabatkins/bikeshed ... not sure what the expected output is there, but it says both FATAL ERROR and ✔ All tests passed.

[02:55:57.0000] <MikeSmith>
zcorpan: FYI https://lists.w3.org/Archives/Public/www-validator/2016Jan/0019.html

[02:59:03.0000] <zcorpan>
MikeSmith: intredasting. seems like a spec bug. can you file one?

[03:00:08.0000] <zcorpan>
i suppose we don't want to allow <template><p lolfoobar=""></template>

[03:01:10.0000] <MikeSmith>
sure but what about his real example of <img> without src?

[03:02:05.0000] <MikeSmith>
I will ask him to file a spec bug for it

[03:02:29.0000] <MikeSmith>
because the validator is conforming to the spec on this

[03:03:14.0000] <MikeSmith>
and I'm not sure what sane spec change we could actually make for this

[03:05:27.0000] <MikeSmith>
as far as the validator behavior I could create something that just drops all <template> elements and their subtrees from the document before running validation on it against the RelaxNG schema

[03:10:55.0000] <MikeSmith>
we don't actually have that many required attributes, so one way I could handle it is to make the RelaxNG schema make them optional but make the Java assertions-checking code report errors for them unless they are in <template> subtrees

[03:12:39.0000] <ritsyy>
while running the build script i am getting "curl: (55) Send failure: Broken pipe" this error

[03:15:19.0000] <annevk>
MikeSmith: ^^ turns out connectivity is not stable everywhere which is another good reason to reduce external dependencies

[03:16:04.0000] <annevk>
MikeSmith: ritsyy: perhaps we should also document options such as -n directly on https://github.com/whatwg/html-build

[03:17:10.0000] <ritsyy>
annevk: yes it is very much needed,

[03:18:47.0000] <MikeSmith>
annevk: OK yeah I will put together an html-build PR for that tomorrow (should have had it done before now but been distracted by working on validator stuffーadding support for CSP checking and some other things)

[03:21:36.0000] <zcorpan>
MikeSmith: yeah we should change the spec to be somewhat laxer on attributes in <template>

[03:24:18.0000] <MikeSmith>
zcorpan: OK I'll ask them to file the bug since they have real use cases to explain

[03:25:12.0000] <zcorpan>
thx

[03:25:47.0000] <ritsyy>
annevk: -n also not working in my case

[03:26:53.0000] <ritsyy>
again there is the broken pipe error script stops almost everytime at 86% or so

[03:29:15.0000] <annevk>
Hmm, perhaps even then there is some network stuff

[03:30:20.0000] <ritsyy>
annevk: yeah

[03:34:24.0000] <MikeSmith>
ritsyy: do you know what exactly it's doing when it hangs at 86%?

[03:34:29.0000] <MikeSmith>
I mean, which step

[03:34:47.0000] <MikeSmith>
if you run it with --verbose it might be more clear

[03:35:50.0000] <MikeSmith>
that will be super-verbose but if you look at the last few lines of console output before that 86% point, that might show it

[03:45:49.0000] <ritsyy>
MikeSmith: https://paste.kde.org/pfom38ygc here are these lines but i didn't got any idea about it

[03:53:42.0000] <zcorpan>
maybe it works better if wattsi is installed locally?

[04:01:21.0000] <MikeSmith>
ah yeah if you don't have wattsi installed locally then it certainly is going to require network access to send the request to the wattsi server and receive the resulting output

[05:28:32.0000] <ritsyy>
MikeSmith: zcorpan okay, yes i will install wattsi locally then, thanks!

[07:56:38.0000] <TabAtkins>
annevk: lolwat, I tested *precisely that*. The change just made it so that *if* I find an exact match, I don't also go look for variants (producing confusing errors if you have two <dfn>s that are variants of each other). I'll debug on the bus this morning, sorry for the trouble.

[07:57:38.0000] <annevk>
TabAtkins: noticed it for both URL and DOM, kinda surprised nobody else noticed this

[07:57:45.0000] <TabAtkins>
(Seriously, I verified that <dfn>foo</dfn> is still matching <a>foo</a> and <a>fooing</a>.)

[07:57:59.0000] <TabAtkins>
Dunno man, I was editting CSS specs all day and didn't run into any problems.

[07:58:00.0000] <annevk>
TabAtkins: I actually ended up fixing it for URL, by just adding <a lt> things

[07:58:27.0000] <TabAtkins>
Well you'll be able to revert that in about an hour when I figure out what the deal is.

[07:58:43.0000] <annevk>
but then DOM was much more complicated and became a whack-a-mole

[08:04:34.0000] <TabAtkins>
I've told you in the past - don't fix around Bikeshed errors.  I'm very fast in dealing with them, you'll just waste your time and get frustrated trying to deal with them and then revert.

[08:10:34.0000] <annevk>
Well, I was already frustrated, but yes, I did waste time

[08:11:32.0000] <Domenic>
It would be really great if e.g. the DOM source was checked in to Bikeshed and it was a regression test that it have to be rebaselined every change and sanity checked.

[08:17:03.0000] <TabAtkins>
Domenic: Yeah, I've been meaning to put some full specs into the testsuite for that purpose, and just haven't done it yet. I'll dump DOM in after I fix this.

[08:18:33.0000] <Domenic>
\o/

[08:34:41.0000] <TabAtkins>
Oof, working on DOM, I'm like "how did this *ever* build cleanly?"

[08:36:11.0000] <TabAtkins>
Oh dang, I see the error.  This is... annoying.

[08:42:28.0000] <annevk>
MikeSmith: did you know that your download all PRs script also includes closed PRs?

[08:42:37.0000] <annevk>
MikeSmith: would be nice if those could be excluded somehow

[08:44:14.0000] <Ms2ger>
annevk, heyo

[08:44:32.0000] <Ms2ger>
First step in https://xhr.spec.whatwg.org/#the-open%28%29-method , how does that work in Workers?

[08:45:43.0000] <Ms2ger>
With https://html.spec.whatwg.org/multipage/workers.html#set-up-a-worker-environment-settings-object

[08:46:54.0000] <annevk>
Ms2ger: workers used to have a responsible document too, if that's gone, not sure

[08:47:36.0000] <annevk>
Ms2ger: time for an issue I guess and some thinking

[08:47:44.0000] <Ms2ger>
annevk, you filing?

[08:47:57.0000] <annevk>
sure

[08:48:06.0000] <Ms2ger>
Great, thanks

[08:49:31.0000] <annevk>
https://github.com/whatwg/xhr/issues/47

[08:50:14.0000] <Ms2ger>
<3

[08:54:52.0000] <TabAtkins>
annevk: Pushing a revert on that commit now, as I'll need to do something differently to make it work properly.

[08:55:21.0000] <TabAtkins>
And DOM works now.

[08:55:57.0000] <annevk>
ta

[08:59:33.0000] <Ms2ger>
https://github.com/whatwg/html/issues/546

[08:59:41.0000] <Ms2ger>
Poor avidrissman

[09:12:35.0000] <Domenic>
He sits next to me in Chrome NYC

[09:12:42.0000] <Domenic>
it was fun times yesterday learning about this

[09:14:36.0000] <zcorpan>
anyone have opinions on what JSON.stringify(new DOMMatrix(...)) should do? see https://lists.w3.org/Archives/Public/public-fx/2016JanMar/0014.html

[09:16:08.0000] <zcorpan>
philipj: ^

[09:17:04.0000] <zcorpan>
(WebKitCSSMatrix serializes as {} fwiw)

[09:17:38.0000] <miketaylr>
i was going to suggest whatever WebKitCSSMatrix does, because i'm lazy

[09:19:28.0000] <zcorpan>
miketaylr: in the thread it was argued that all geometry objects should have serializers

[09:19:38.0000] <zcorpan>
that are more useful than {}

[09:19:57.0000] <miketaylr>
yeah {} is pretty useless

[09:22:10.0000] <zcorpan>
i'm tempted to switch to serializer = { attribute }; for matrices also

[09:22:34.0000] <Domenic>
zcorpan: I see two approaches in general: serialize everything and serialize only the minimal amount needed to reconstruct. You seem to have gone with serialize everything elsewhere so being consistent with that makes sense to me.

[09:23:10.0000] <zcorpan>
Domenic: yeah. thx

[09:27:31.0000] <zcorpan>
https://github.com/w3c/fxtf-drafts/commit/7b5664a99dff3a3c3afd5085c65fea7ad7791d9c

[09:34:02.0000] <zcorpan>
Domenic: can you check https://github.com/whatwg/html/pull/514 ? :-)

[09:50:05.0000] <Domenic>
Will do

[10:41:38.0000] <nikkibee>
hey annevk I had a question about steps 6 and 7 for a redirect status under https://fetch.spec.whatwg.org/#http-fetch

[10:41:48.0000] <nikkibee>
er, 7 and 8*

[10:41:58.0000] <nikkibee>
7. If request's redirect count is twenty, return a network error.

[10:41:58.0000] <nikkibee>
8. Increase request's redirect count by one.

[10:42:11.0000] <nikkibee>
this means that on the 21st redirect a network error is returned

[10:42:20.0000] <nikkibee>
since redirect count starts at 0

[10:42:40.0000] <nikkibee>
is this intentional? cause if the steps were switched, it'd return a network error on the 20th redirect

[10:43:16.0000] <nikkibee>
20 or 21 is arbitrary (afaict) either way, but 20 just seems easier to logic about cause of how we work with numbers

[10:44:18.0000] <Domenic>
I wonder which (if either) browsers implement... I had no idea that was a thing

[10:44:27.0000] <Domenic>
I guess I've seen the "too many redirects" for page loads before

[10:44:40.0000] <Domenic>
But I didn't realize it would apply to all fetches.

[10:44:56.0000] <nikkibee>
well, it only applies to fetches that start redirecting

[10:45:24.0000] <nikkibee>
I just want to be sure of the number because I'm writing some tests for redirects in Servo, and I want to make sure I test the boundaries correctly

[10:47:07.0000] <Domenic>
Anyone want to review the commit message for <script type="module">? https://github.com/whatwg/html/pull/443/commits

[11:50:38.0000] <annevk>
nikkibee: that should maybe be nineteen indeed

[11:50:45.0000] <annevk>
nikkibee: not really around now though

[11:51:25.0000] <nikkibee>
annevk: that's alright, I'm glad I was on to something about it

[11:51:30.0000] <nikkibee>
should I open an issue about it?

[11:51:42.0000] <annevk>
nikkibee: PR?

[11:51:46.0000] <annevk>
nikkibee: but yes

[11:51:49.0000] <nikkibee>
sure thing

[11:51:57.0000] <nikkibee>
I think switching the order of the steps would make more sense too

[11:52:13.0000] <nikkibee>
because stopping at 19 is not obvious unless you think about how it's 0-indexed

[11:52:31.0000] <annevk>
nikkibee: so actually

[11:52:36.0000] <annevk>
nikkibee: there's an open PR by me

[11:52:43.0000] <annevk>
nikkibee: that factors out this redirect business

[11:52:53.0000] <nikkibee>
oh! no more redirect_count you mean?

[11:52:57.0000] <annevk>
nikkibee: and changes a couple of things

[11:53:01.0000] <annevk>
nikkibee: no that is kept

[11:53:15.0000] <nikkibee>
annevk: what does it change?

[11:53:45.0000] <annevk>
nikkibee: it changes processing for "manual"

[11:54:04.0000] <annevk>
nikkibee: but it mostly makes it possible for HTML to reuse that algorithm to follow navigation redirects

[11:56:35.0000] <annevk>
ttyl

[11:58:07.0000] <nikkibee>
see ya, thanks for the info

[12:05:49.0000] <jarek>
Hi

[12:06:32.0000] <jarek>
Is the problem of relative URLs in web components already resolved?

[12:14:53.0000] <smaug____>
no zcorpan

[12:15:31.0000] <smaug____>
https://drafts.csswg.org/cssom-view/#dom-document-scrollingelement could use a small tweak and define what root element means there

[12:34:41.0000] <annevk>
jarek: nope

[12:37:12.0000] <jarek>
annevk: is it delayed util https://github.com/whatwg/loader spec is finished?

[12:37:30.0000] <jarek>
annevk: or is it a problem that can't be solved at all and we will have to stick with directory naming conventions?

[12:37:44.0000] <jarek>
s/util/until

[12:39:28.0000] <annevk>
jarek: it would require changes to DOM, but unclear how that works well together with script, indeed, which uses base from execution environment

[13:15:13.0000] <smaug____>
https://drafts.csswg.org/cssom-view/#dom-document-scrollingelement is so weirdly written. scrollableElement is body if body is _not_ potentially scrollable

[13:34:17.0000] <smaug____>
rbyers: I don't understand blink's scrollableElement implementation

[13:34:23.0000] <smaug____>
or perhaps I'm reading the spec wrong

[13:35:39.0000] <smaug____>
it doesn't seem to care about overflow-x/y values

[13:56:46.0000] <rbyers>
smaug___: Blink intentionally doesn't exactly match the spec here (which is kind of the point of document.scrollingElement) - unless ScrollTopLeftInterop is enabled - see https://dev.opera.com/articles/fixing-the-scrolltop-bug/

[13:57:26.0000] <rbyers>
... but yeah the pre-existing rules about how body behaves are weird - scrollingElement just reflects that.

[13:58:34.0000] <rbyers>
... basically if you have "html, body {overflow: scroll}" then there are two independently scrollable things.  But if you just have "body {overflow: scroll }" then that applies to the viewport (behaves the same as just "html {overflow: scroll}" I believe).

[13:59:12.0000] <rbyers>
But none of this really matters for the definition of scrollableElement.  All that really matters for that API is that document.scrollingElement reflects the element whose scrollTop changes when you do window.scrollTo.

[14:00:20.0000] <rbyers>
The spec over-complicates this by repeating the complex legacy details in both the definition of scrollingElement and the definition of scrollTop (see https://drafts.csswg.org/cssom-view/#dom-element-scrolltop).

[14:01:08.0000] <rbyers>
My advice to Simon was to just move all the complexity from scrollTop/scrollLeft (which has long been there for legacy reasons) into the defintion of scrollingElement, then write everything else in terms of "if 'e' is the scrollingElement".  That's what I did in the blink implementation.

[14:02:12.0000] <rbyers>
(with the added complexity that we have to support ScrollTopLeftInterop being disabled - for now, I hope to ship it this quarter).

[14:19:48.0000] <smaug____>
rbyers: well I can't see it ever matching the spec

[14:20:16.0000] <smaug____>
but I don't understand why this property should be added if blink doesn't implement it per spec

[14:20:27.0000] <smaug____>
or in other words, I guess I should just implement it the same way it is in blink

[14:21:31.0000] <smaug____>
but I'm not totally lost with this property

[14:24:57.0000] <rbyers>
smaug___: If all browsers implemented scrollTop according to spec, there would only be minor utility to this API.

[14:25:02.0000] <rbyers>
WebKit has a long standing bug where scrollTop/Left behave as if the page was in quirksmode (i.e. body.scrollTop==window.scrollY, documentElement.scrollTop==0) even when it's not (should be documentElement.scrollTop==window.scrollY, body.scrollTop==0).

[14:25:13.0000] <rbyers>
  It's because sites have come to depend on WebKit's long-standing bug where scrollTop behaves as per quirksmode for ALL pages that we need this API.

[14:26:08.0000] <rbyers>
We've successfully used this API to get sites to migrate away from depending on code like "isWebKit ? body : documentElement".

[14:29:37.0000] <smaug____>
rbyers: sure, scrollTop and those are old stuff

[14:29:51.0000] <smaug____>
but why isn't blink implementing this new API per spec?

[14:30:06.0000] <smaug____>
isn't that the whole point that there is some API which all the browsers implement the same way?

[14:30:26.0000] <smaug____>
I guess not in this case

[14:32:28.0000] <rbyers>
It does implement it per spec when ScrollTopLeftInterop mode is enabled, which I'm trying to ship (but can only do once I've gotten enough sites updated).

[14:32:52.0000] <smaug____>
it is not implementing per spec when that is enabled

[14:32:52.0000] <rbyers>
BTW it's weird quirksmode cases like this http://jsbin.com/hocuno/edit?html,css,js,output where scrollingElement should be null

[14:33:18.0000] <smaug____>
blink doesn't care about the overflowx/y values of html element

[14:33:24.0000] <smaug____>
it checks only body element

[14:33:45.0000] <rbyers>
because in that case neither document.body.scrollTop nor document.documentElement.scrollTop will match window.scrollY

[14:34:09.0000] <rbyers>
Are you saying that just based on code inspection, or do you have a repro?

[14:34:20.0000] <smaug____>
rbyers: based on code inspection

[14:34:33.0000] <rbyers>
There's some funky logic elsewhere in the code that promotes styles from documentElement to body or vice versa

[14:34:39.0000] <smaug____>
(I don't even know how to enable RuntimeEnabledFeatures::scrollTopLeftInteropEnabled())

[14:34:45.0000] <rbyers>
Try to build a repro

[14:34:57.0000] <smaug____>
huhuh

[14:35:09.0000] <smaug____>
so blink is doing some magic there too

[14:35:24.0000] <rbyers>
You can enable that flag easily by setting chrome://flags/#enable-experimental-web-platform-features

[14:35:34.0000] <rbyers>
Or explicitly by running with --enable-blink-features=ScrollTopLeftInterop

[14:35:41.0000] <smaug____>
ah, that, thanks

[14:35:45.0000] <rbyers>
NP

[14:37:18.0000] <yury`m>
/me is thinking "worker code that holds cross-thread refs to promises" statement along with Domenic streams-from-main-thread-to-worker statement

[14:37:56.0000] <Domenic>
?

[14:38:02.0000] <rbyers>
If you can come up with a repro that's not per spec, I'll definitely investigate.  There's a bunch of annoying complexity / long-standing legacy here that was previously exposed only via scrollTop/scrollLeft behavior.  scrollingElement should just reflect that behavior (i.e. so we should be able to compare scrollTop behavior between blink with

[14:38:02.0000] <rbyers>
ScrollTopLeftInterop enabled and Firefox - should match exactly)

[14:38:48.0000] <yury`m>
Domenic: there was your vimeo video about mozilla thinking about moving streams processing in the worker

[14:39:00.0000] <yury`m>
do you have more context?

[14:40:10.0000] <Domenic>
yury`m: I think it was https://w3c.github.io/mediacapture-worker/

[14:40:11.0000] <yury`m>
Domenic: at 44:20 of https://vimeo.com/132786072

[14:46:15.0000] <yury`m>
/me posted to wrong channel his thoughts, so goes back to where he came from to think there :)

[15:17:54.0000] <MikeSmith>
aannevk: yeah about the PR-branch-fetch config, I don't know how to make it not fetch closed PRs. It's a github-specific thing, not a git thing, and I think it may just need to be made smarter on the github side. But will look into it more.

[15:30:46.0000] <MikeSmith>
Domenic: given the network problems that ritsyy has had, I'd guess others in some places might run into similar issues, and so wattsi server might not be the best solution in all cases for trying to make things as easy as possible for contributors

[15:31:33.0000] <MikeSmith>
but since building fpc and watssi locally is also not exactly easy, I wonder if we might consider creating a Docker image

[15:32:26.0000] <Domenic>
MikeSmith: I am personally scared of docker but that seems like a good solution for a certain class of people.

[15:32:52.0000] <MikeSmith>
yeah, I've never created one for anything and have been skeptical about the need in other projects where it's come up, but this seems like a case where it might actually solve a real problem

[15:33:27.0000] <MikeSmith>
anyway, I have a bunch of other open html-build and watssi things on my stack before I could get to that

[15:33:41.0000] <Domenic>
:)

[15:33:53.0000] <MikeSmith>
but maybe if we have somebody familiar/experienced with Docker, they could give it a shot

[15:33:56.0000] <Domenic>
i really need to spend a bit more time on wattsi-server to make it a full build server

[15:34:14.0000] <Domenic>
Seems like a good thing to post an issue about describing what we'd like help with and then point the community at.

[15:34:24.0000] <MikeSmith>
yeah I think for most people, wattsi-server really is the best solution

[15:34:39.0000] <MikeSmith>
OK, will raise an issue for now

[15:44:32.0000] <MikeSmith>
for anybody on the channel with Docker chops who's interested in helping with the HTML spec effort: https://github.com/whatwg/html-build/issues/55

[15:51:32.0000] <Domenic>
Tweeted https://twitter.com/domenic/status/689958419130884098


2016-01-21
[16:02:12.0000] <MikeSmith>
thanks, retweeted

[23:52:07.0000] <ritsyy>
i am trying to install wattsi first downloaded this ftp://freepascal.stack.nl/pub/fpc/beta/3.0.0-rc1/x86_64-linux/ but the install.sh is giving errors,

[23:54:44.0000] <ritsyy>
it's done now :D

[23:57:38.0000] <zcorpan>
MikeSmith: can you make the warning in https://www.w3.org/TR/html-markup/ be something that always floats on top, on every page? see https://github.com/htacg/tidy-html5/issues/348#issuecomment-172571746

[00:03:24.0000] <zcorpan>
though not sure if web platform docs is a good reference to point to... "Using async="async" didn't work in some older browser, instead async="true" was used."? http://docs.webplatform.org/wiki/html/elements/script

[00:06:36.0000] <ritsyy>
getting these errors while compiling wattsi https://paste.kde.org/pc0qsqmtp

[00:12:08.0000] <ritsyy>
annevk: ^

[00:34:46.0000] <annevk>
ritsyy: those are not errors, seems like you have a binary now

[00:35:22.0000] <annevk>
ritsyy: you don't need a beta of Pascal anymore though

[00:36:04.0000] <ritsyy>
annevk: but the build script still shows up on local wattsi installed

[00:36:35.0000] <annevk>
Not sure what you mean

[00:37:22.0000] <ritsyy>
annevk: actually i didn't get about the binary

[00:38:21.0000] <ritsyy>
and when i run the html-build script it says no local wattsi installed

[00:38:37.0000] <annevk>
Hmm

[00:40:08.0000] <annevk>
Install a non-beta of Pascal 3.0.0 and try again?

[00:40:33.0000] <ritsyy>
annevk: okay i try that

[00:40:43.0000] <annevk>
Not sure why compile tries to run wattsi

[00:41:21.0000] <annevk>
MikeSmith is maybe better at this

[00:41:43.0000] <annevk>
Or maybe stackoverflow / linux IRC channels?

[00:41:58.0000] <annevk>
Anyway, back in a bit

[00:42:14.0000] <ritsyy>
annevk: okay yeah, i ask on that channel too

[01:13:18.0000] <MikeSmith>
zcorpan: oh man

[01:13:37.0000] <MikeSmith>
zcorpan: yeah I'll do it tonight

[01:13:45.0000] <zcorpan>
MikeSmith: cool

[01:16:19.0000] <MikeSmith>
ritsyy: you need to make sure the directory of your wattsi binary is in your bash PATH

[01:17:23.0000] <ritsyy>
MikeSmith: i removed that install and tried with the fpc non-beta version

[01:17:48.0000] <ritsyy>
MikeSmith: Error: ppcx64 can't be executed, error message: Failed to execute "ppcx64", error code: 127 ,getting this now

[01:17:48.0000] <ritsyy>
 

[01:19:09.0000] <MikeSmith>
Oh

[01:19:48.0000] <MikeSmith>
that sounds vaguely familiar

[01:20:25.0000] <MikeSmith>
But if the beta works for you, it's fine to use the beta

[01:21:56.0000] <ritsyy>
yeah it was giving those errors i stated above, so just thought to try non-beta, working on this error now

[01:23:25.0000] <MikeSmith>
The messages in your earlier pastebin aren't actually errors

[01:23:51.0000] <MikeSmith>
they're just info messages and warnings

[01:24:17.0000] <MikeSmith>
The pastebin indicates that your build succeeded

[01:24:54.0000] <ritsyy>
MikeSmith: but the html-build script still showed no local wattsi installed

[01:25:19.0000] <ritsyy>
and then the build script abort with a broken pipe error

[01:25:40.0000] <MikeSmith>
yeah I think that's because of the PATH issue

[01:26:43.0000] <MikeSmith>
you need to do something like "export PATH=/home/wattsi:$PATH"

[01:27:44.0000] <MikeSmith>
..where "/home/wattsi" is whatever directory where you ran the wattsi build script

[01:28:15.0000] <MikeSmith>
the directory that contains the watsii build.sh script

[01:28:37.0000] <MikeSmith>
that's where it also places the wattsi binary

[01:28:50.0000] <MikeSmith>
I think

[01:29:23.0000] <MikeSmith>
But I can't check for sure right now because I'm on from my phone at the moment

[01:29:58.0000] <MikeSmith>
it may be in a "bin" subdirectory of the directory

[01:30:11.0000] <ritsyy>
MikeSmith: oh ok i'll try setting this path actually the new non-beta version is downloading right now, so after fpc i'll do that

[01:30:20.0000] <MikeSmith>
k

[01:31:03.0000] <annevk>
I retweeted that Docker thing from @whatwg too

[01:31:12.0000] <MikeSmith>
I'll be on from my phone for another hour or so, then beck at my pc after

[01:31:22.0000] <MikeSmith>
annevk: cool

[01:32:23.0000] <MikeSmith>
there's somebody already been hacking on it who may already have what we need

[01:32:40.0000] <MikeSmith>
quick work

[01:35:16.0000] <annevk>
wow, great

[01:56:57.0000] <ritsyy>
MikeSmith: http://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux there is one for binary and a path for directory which should be done?

[01:59:05.0000] <MikeSmith>
ritsyy: nothing to be undone, but just added

[02:00:29.0000] <MikeSmith>
since the PATH value is just a colon-separated list of pathnames, you just need to add one more pathname to it

[02:01:33.0000] <ritsyy>
MikeSmith: yeah okay

[02:31:36.0000] <mounir>
Ms2ger: are you one of the people taking care of webidl spec?

[02:31:52.0000] <Ms2ger>
I have touched it

[02:32:04.0000] <mounir>
Ms2ger: who does PR reviews/merging?

[02:32:10.0000] <Ms2ger>
Nobody

[02:32:17.0000] <mounir>
oh, that sounds amazing

[02:32:28.0000] <Ms2ger>
With s/does/should do/, heycam

[02:45:32.0000] <annevk>
Yeah, we need to sort something out there

[03:17:35.0000] <ritsyy>
MikeSmith: annevk: i have set the path but it's the same error showing up, https://paste.kde.org/pc0qsqmtp

[03:21:39.0000] <annevk>
ritsyy:

[03:22:02.0000] <annevk>
ritsyy: I get that too when I compile wattsi, but afaict that means it's done

[03:22:24.0000] <annevk>
ritsyy: what do you get if you type wattsi and hit enter?

[03:22:53.0000] <ritsyy>
annevk: command not found

[03:23:03.0000] <mounir>
annevk, Ms2ger: I thought bz and others were helping in order to make this spec more responsive

[03:23:08.0000] <annevk>
ritsyy: where did you install wattsi?

[03:23:17.0000] <ritsyy>
localhost

[03:23:22.0000] <Ms2ger>
bz is co-editor, but also has a million other things on his plate

[03:23:25.0000] <annevk>
mounir: not sure which others?

[03:23:44.0000] <mounir>
annevk: not sure either, otherwise I would have named :)

[03:23:49.0000] <mounir>
annevk: maybe others = {} :)

[03:23:59.0000] <annevk>
ritsyy: localhost? it must be in a directory somewhere, no?

[03:24:13.0000] <ritsyy>
annevk: /var/www/html/wattsi

[03:24:36.0000] <annevk>
ritsyy: if you go there and then run ./bin/wattsi

[03:24:40.0000] <annevk>
ritsyy: what does that give?

[03:25:09.0000] <ritsyy>
annevk: wattsi: invalid arguments

[03:25:09.0000] <ritsyy>
syntax:

[03:25:10.0000] <ritsyy>
  wattsi [--quiet] <source-file> <output-directory> <caniuse.json> <bugs.csv>

[03:25:25.0000] <annevk>
ritsyy: okay, so wattsi is installed but something is wrong with your PATH

[03:26:09.0000] <ritsyy>
i did set it to export PATH="/var/www/html/wattsi:$PATH"

[03:26:16.0000] <ritsyy>
annevk: ^

[03:26:59.0000] <annevk>
ritsyy: what does echo PATH return?

[03:27:43.0000] <annevk>
ritsyy: also, I think that needs to be /var/www/html/wattsi/bin since the compiled script is inside bin

[03:27:55.0000] <annevk>
ritsyy: echo $PATH

[03:28:21.0000] <ritsyy>
annevk: its showing this path https://paste.kde.org/p8rjnx9he

[03:30:01.0000] <annevk>
ritsyy: yeah so as MikeSmith mentioned you should use the path that points to the directory where wattsi is in, which is /bin

[03:30:17.0000] <annevk>
ritsyy: well, has /bin at the end, given that the wattsi binary is there

[03:30:50.0000] <ritsyy>
annevk: yeah i am adding /bin in the path

[03:44:23.0000] <ritsyy>
annevk: path is this now https://paste.kde.org/pgf8feuq7 and when i enter wattsi it gives https://paste.kde.org/pe5ul1zjj

[03:44:48.0000] <annevk>
ritsyy: great

[03:44:55.0000] <annevk>
ritsyy: build script should work now

[03:45:47.0000] <annevk>
ritsyy: (you might want to clean up your path to remove the bits that were pointing to the wrong folder)

[03:47:47.0000] <ritsyy>
annevk: but the script is showing this still Local wattsi is not present; trying the build server...

[03:48:12.0000] <ritsyy>
annevk: yeah right i am clearing that path

[03:48:31.0000] <annevk>
ritsyy: hmm that's weird

[03:49:16.0000] <ritsyy>
annevk: okay i think i should try after clearing that path

[03:51:17.0000] <annevk>
ritsyy: one thing you could try with debugging is to change the build script

[03:52:22.0000] <annevk>
ritsyy: in "function runWattsi" you basically only want to run the code after the if statement, and not the code after the else statement; so if you remove the conditionals and the code you don't want to run, it'll be forced to use wattsi (and maybe emit some other kind of error)

[03:52:48.0000] <annevk>
ritsyy: if that doesn't work MikeSmith will have to help since I'm not sure what "hash wattsi 2>/dev/null;" does, really

[03:52:48.0000] <ritsyy>
annevk: okay i am seeing that just a second

[03:53:20.0000] <annevk>
(if it does work you should file a bug against html-build since that means that if statement is a little bogus or at least doesn't work across platforms)

[03:54:00.0000] <ritsyy>
annevk: you are right i'll try running by removing that else part now

[03:54:59.0000] <zcorpan>
ritsyy: try starting a new terminal window after changing $PATH. dunno if it is necessary but maybe?

[03:55:05.0000] <annevk>
I'm gonna get some lunch, back later

[03:55:31.0000] <ritsyy>
zcorpan: i did that :)

[03:55:41.0000] <zcorpan>
k :-)

[04:01:18.0000] <MikeSmith>
ritsyy: not sure if anybody asked this already, but if you just type "wattsi" at the command prompt, does it report "wattsi: command not found"?

[04:02:16.0000] <ritsyy>
MikeSmith: not now after setting the path to bin now it reports this https://paste.kde.org/pe5ul1zjj

[04:02:28.0000] <MikeSmith>
/me looks

[04:02:43.0000] <MikeSmith>
ok good

[04:02:50.0000] <MikeSmith>
yeah, that's right then

[04:02:55.0000] <MikeSmith>
so the shell can find it

[04:03:06.0000] <MikeSmith>
and so the build script should be able to as well

[04:03:31.0000] <ritsyy>
MikeSmith: but the build-script says the same Local wattsi is not present; trying the build server...

[04:04:28.0000] <ritsyy>
MikeSmith: yeah it's weird, i am doing it now with annevk's suggestion

[04:05:00.0000] <MikeSmith>
yeah OK so then I guess as annevk suggested, my check of the exit status for "hash wattsi 2>/dev/null;" in the build script is failing for some reason (though I have not idea why it would fail, because it's something built into the bash shell)

[04:05:43.0000] <MikeSmith>
ritsyy: what does "echo $PATH" say?

[04:06:37.0000] <ritsyy>
MikeSmith: https://paste.kde.org/phccmrt1o this

[04:07:30.0000] <MikeSmith>
OK so yeah that looks correct

[04:09:17.0000] <MikeSmith>
ritsyy: what does "hash wattsi; echo $?" say?

[04:10:01.0000] <ritsyy>
MikeSmith: 0

[04:11:40.0000] <MikeSmith>
ok yeah that's right too then

[04:11:56.0000] <MikeSmith>
puzzling

[04:12:41.0000] <ritsyy>
MikeSmith: yeah it is behaving weird

[04:12:47.0000] <MikeSmith>
oh wait

[04:13:04.0000] <MikeSmith>
ritsyy: how about what does "hash wattsi 2>/dev/null; echo $?" say?

[04:13:50.0000] <ritsyy>
MikeSmith: 0

[04:14:04.0000] <MikeSmith>
oh

[04:14:20.0000] <MikeSmith>
so yeah, still puzzled

[04:16:06.0000] <ritsyy>
:-/ me too

[04:47:19.0000] <annevk>
ritsyy: how do you run the build script? just ./build.sh?

[05:28:53.0000] <ritsyy>
annevk: yes with sudo ./build.sh, is it wrong?

[05:29:08.0000] <Ms2ger>
Why with sudo?

[05:29:09.0000] <annevk>
ritsyy: you shouldn't need sudo

[05:29:40.0000] <annevk>
nothing from HTML needs sudo

[05:29:51.0000] <ritsyy>
Ms2ger: annevk: yeah it's the same but foe wattsi without sudo it gives a ppcx64 error

[05:29:56.0000] <ritsyy>
for*

[05:30:39.0000] <annevk>
Yeah, I suspect that might because once you compile it with sudo once, certain files can only be touched with sudo

[05:30:59.0000] <MikeSmith>
oh yeah

[05:31:01.0000] <annevk>
I think the way I fixed that locally was by clearing the bin dir with sudo

[05:31:07.0000] <annevk>
And then compiling again

[05:31:36.0000] <MikeSmith>
yeah, don't need sudo

[05:31:42.0000] <ritsyy>
annevk: ohk i am trying that too

[05:31:46.0000] <annevk>
Not sure if running it with sudo should cause it to stop working though, that too seems strange

[05:32:07.0000] <annevk>
ritsyy: did you try modifying the build script already?

[05:32:55.0000] <ritsyy>
annevk: yeah i did but it gives error then

[05:33:45.0000] <annevk>
ritsyy: what kind?

[05:34:14.0000] <ritsyy>
ah i changed it many a times actually, i tried that >2 condition too with these http://unix.stackexchange.com/questions/163352/what-does-dev-null-21-mean-in-this-article-of-crontab-basics

[05:35:41.0000] <ritsyy>
just a second, changing the script actually it didn't fixed so i just removed the changes

[05:35:44.0000] <Ms2ger>
>2 just changes what's logged where

[05:36:51.0000] <ritsyy>
Ms2ger: actually the problem is starting from here "if hash wattsi 2>/dev/null; then"

[05:37:17.0000] <ritsyy>
that's why i tried, had not much idea about it

[05:38:20.0000] <annevk>
To be clear, the way you want to modify that is to remove that if statement, remove the else statement and everything that follows it (within the limits of the function) so that the function only executes what is between the if and the else statement

[05:47:18.0000] <ritsyy>
annevk: yeah i did this https://paste.kde.org/plwrwjpud commented this code, but it is running the script right now,

[05:48:18.0000] <annevk>
ritsyy: you also need to comment out "if hash wattsi 2>/dev/null; then" and "else" and the $QUIET lines and the final "fi"

[05:48:21.0000] <ritsyy>
annevk: https://paste.kde.org/pedlrqrf6 got this

[05:48:30.0000] <annevk>
ritsyy: otherwise you're not forcing that code to run

[05:48:43.0000] <annevk>
ooh

[05:48:49.0000] <annevk>
ritsyy: so that's good, no?

[05:49:13.0000] <annevk>
ritsyy: it means the build script found a mistake in your source document

[05:49:18.0000] <ritsyy>
annevk: yeah i think so, wattsi ran i think

[05:49:25.0000] <annevk>
ritsyy: so I guess everything is working

[05:49:35.0000] <annevk>
ritsyy: and I guess you don't need a modification of the build script then

[05:49:47.0000] <ritsyy>
annevk: i did these modifications but

[05:50:22.0000] <ritsyy>
but that didn't made sense,

[05:50:52.0000] <annevk>
What doesn't make sense?

[05:52:02.0000] <ritsyy>
annevk: the code i commented

[05:55:35.0000] <zcorpan>
Hixie_: RED ALERT! THE SAVE THING IN LIVE DOM VIEWER APPEARS BROKEN. I CANNOT WORK WITHOUT IT

[05:58:54.0000] <ritsyy>
annevk: i meant the code i commented out  didn't forced the script to run anyhow, but now i tried both by commenting out and without it now and the error is in the source, yay \o/

[05:59:51.0000] <ritsyy>
annevk: MikeSmith: thanks :)

[06:00:40.0000] <annevk>
ritsyy: super happy this is working now

[06:01:10.0000] <zcorpan>
2>/dev/null means to direct strerr to /dev/null, i.e. mute errors

[06:01:38.0000] <ritsyy>
annevk: yeah me too :)

[06:02:22.0000] <ritsyy>
zcorpan: yeah got that now, thanks :)

[06:06:19.0000] <MikeSmith>
ritsyy: yeah also very glad it is working now

[06:06:46.0000] <MikeSmith>
ritsyy: and also sorry the build is as much work as it is

[06:07:41.0000] <MikeSmith>
if it's any consolation, your experience with it is giving us a lot of motivation to make it much easier for future contributors

[06:08:18.0000] <MikeSmith>
so you're helping other people by being a pioneer :)

[06:12:12.0000] <ritsyy>
MikeSmith: no worries i actually enjoyed it now, feeling so much happy now

[06:13:05.0000] <ritsyy>
MikeSmith: yeah it is going to be a very good prize for this day's work for me, thanks :)

[08:27:57.0000] <Krinkle>
/me smiles at seeing "Web Worker" on someone's resume as a previous job title.

[08:43:22.0000] <rbyers>
smaug, miketaylr: how much web compat pain do you feel from Mozilla not having support for 'mousewheel' events?  I'd like to consider removing support from blink (in favor of standard 'wheel' events which we've long supported).

[09:05:11.0000] <miketaylr>
rbyers: i'm not aware of any sites that are broken due to us lacking mousewheel events, but that's probably because i focus more on mobile ^_^

[09:05:30.0000] <miketaylr>
smaug____ might have more insight there, but i'll poke around bugzilla

[09:06:15.0000] <rbyers>
miketaylr: Ok, thanks!  Sadly we don't yet have a usecounter for this - adding one now.  Probably too hard to search httparchive for.

[09:06:40.0000] <miketaylr>
and probably filled with scripts that just try to copy every possible event, etc.

[09:08:20.0000] <rbyers>
Yep.  Interestingly our behavior is not to fire mousewheel on a node if that node has ANY wheel listeners.  I'm kind of surprised that hasn't caused compat issues (eg. with multiple scripts from multiple places all listening on window or documentElement).

[09:08:41.0000] <smaug____>
rbyers: I don't recall many bugs, especially not recent bugs about mousewheel

[09:09:46.0000] <rbyers>
Thanks.  And Firefox has dropped DOMMouseScroll (or any other non-standard API) for this, right?

[09:10:17.0000] <rbyers>
That's pretty promising.

[09:10:18.0000] <smaug____>
rbyers: since Gecko has had its own non-spec'ed DOMMouseScroll for ages, most pages (which aren't using 'wheel') I've looked do something like window.addEventListener(window.onmousewheel ? "mousewheel" : "DOMMouseScroll", listener);

[09:10:29.0000] <smaug____>
rbyers: DOMMouseScroll is still there

[09:11:01.0000] <rbyers>
Oh shoot, so that means Firefox probably isn't a good proxy for the pain I'd feel by trying to remove mousewheel from blink.  Ok, thanks anyway.

[09:11:05.0000] <smaug____>
'wheel' is after all relatively new addition to the platform

[09:16:33.0000] <rbyers>
Yeah, indeed.  FWIW it's looking like I might not be able to fix scrollTop unless I also remove mousewheel ;-)

[09:17:04.0000] <smaug____>
"fun"

[09:17:06.0000] <rbyers>
http://crbug.com/501568

[09:17:44.0000] <miketaylr>
just remove all events, and add 'em back one by one as people complain

[09:17:46.0000] <smaug____>
hmm, I guess browsers should start warn about use of mousewheel or DOMMouseScroll events

[09:22:38.0000] <rbyers>
Yeah I'd add a deprecation warning if the usage is low enough.

[09:23:11.0000] <rbyers>
(we don't want to train developers to ignore deprecation warnings by spamming them with ones for things we're realistically unlikely to actually remove anytime soon)

[09:23:43.0000] <rbyers>
But it's not looking good.  Just checked 3 random sites: Facebook, GMail, Google sheets - all use 'mousewheel' + 'DOMMouseScroll' instead of wheel :-(

[09:23:58.0000] <Domenic>
IIRC all three have different semantics?

[09:24:07.0000] <Domenic>
Otherwise I'd say just standardize all three as aliases

[09:24:15.0000] <rbyers>
Yeah, slightly different APIs

[09:24:20.0000] <rbyers>
wheel and mousewheel are similar.

[09:24:22.0000] <Domenic>
I guess that doesn't help your scrollLeftTopInterop problem either

[09:24:33.0000] <rbyers>
No, but you already predicted I wouldn't be able to fix that one ;-)

[09:28:02.0000] <rbyers>
Actually I believe blink fires identical WheelEvent objects for wheel and mousewheel listeners.  We just have 3 non-standard properties on WheelEvent - wheelDelta, wheelDeltaX, wheelDeltaY (IIRC the signs may be reversed).

[09:28:26.0000] <smaug____>
so I'm worried that if blink can't fix scroll* issue, scrollingElement is totally useless and should be removed from the platform

[09:34:34.0000] <rbyers>
It depends what we want to do about not fixing scroll* issue.  If we want to leave implementations as they are, then scrollingElement is VERY useful - it lets you detect the bug (and we should just update the spec to match that).

[09:34:37.0000] <gsnedders>
when does load fire relative to web font loading? (assumign there's no modifications to the DOM that affect font selection, etc.)

[09:35:25.0000] <rbyers>
Otherwise there's no good choice but to rely on UA sniffing to decide between document.body and document.documentElement...

[09:36:39.0000] <rbyers>
But if, instead, we want to just change Firefox and the spec to match WebKit/Edge (so scrollingElement is almost always body - like for quirksmode pages), then yes there isn't much value to scrollingElement anymore.

[09:38:26.0000] <rbyers>
The argument against changing the spec to match WebKit's behavior is that then the weird cases (eg. "html, body { overflow: scroll }") become even weirder - scrollingElement==null (can't detect/set document scroll position via scrollTop at all).

[09:40:00.0000] <rbyers>
Actually, even in that option, scrollingElement is critical in managing the transition.  Firefox could just switch to WebKit behavior and sites (google properties, facebook, etc.) would just work due to all the outreach we've done to get them to depend on scrollingElement.  Sites that are still relying on a WebKit UA check will be broken in Firefox if

[09:40:01.0000] <rbyers>
Firefox switches to the WebKit model without also adding "WebKit" to the UA string.

[09:42:42.0000] <smaug____>
yeah, this is difficult issue

[09:42:51.0000] <smaug____>
and there is still IE11

[09:43:03.0000] <smaug____>
and 10 too

[09:43:10.0000] <smaug____>
(or was 10 deprecated)

[09:48:48.0000] <smaug____>
rbyers: do you know roughly how many (%) sites are broken with scrollLeftTopInterop==true?

[09:51:07.0000] <smaug____>
oh, hmm, that chromium bug is about smoothscrolling. perhaps the use of it will now decrease when smoothscrolling is enabled

[09:56:30.0000] <smaug____>
rbyers: have you asked MS if they have plans to change their behavior, or will they just follow what blink does?

[09:56:34.0000] <smaug____>
or what about webkit?

[10:12:11.0000] <annevk>
terinjokes: if you add Console Standard to https://resources.whatwg.org/biblio.json other specifications can reference it

[10:24:12.0000] <kbrosnan>
 /window close

[10:24:53.0000] <terinjokes>
annevk: where does that come from?

[10:25:16.0000] <annevk>
terinjokes: https://github.com/whatwg/resources.whatwg.org

[10:25:57.0000] <annevk>
terinjokes: and then it's imported by some tool tobie wrote to get references between specs in some consistent fashion

[10:30:46.0000] <terinjokes>
annevk: https://github.com/whatwg/resources.whatwg.org/pull/13

[10:49:06.0000] <TabAtkins>
terinjokes: And I just put Console into Shepherd, so Bikeshedded specs will get access to it once it fetches.

[10:49:32.0000] <TabAtkins>
But def do what anne is saying to get it into Bikeshed's biblio db as well.

[10:50:09.0000] <TabAtkins>
annevk: Do you know what other whatwg specs are Bikeshedded? I've got URL, DOM, and Console in there now.

[10:50:15.0000] <terinjokes>
TabAtkins: i added it to the biblio, and it's been merged

[10:50:22.0000] <TabAtkins>
+1

[10:50:46.0000] <tobie>
terinjokes: the updater bot should kick in in about 45 minutes

[10:51:16.0000] <tobie>
terinjokes: then you'll get it here: http://www.specref.org/?q=console

[10:52:47.0000] <terinjokes>
ooh. i'm really interested in using an IBM 2741 terminal

[10:53:22.0000] <TabAtkins>
I love the RFCs.

[11:11:42.0000] <rbyers>
smaug____: I don't have any good way to quantify the sites broken with scrollTopLeftInterop=true.  I know it's not huge anymore because we have a non-trivial number of users running with enable-experimental-web-platform-features turned on and I'm no longer getting many complaints from them (after getting a bunch of top sites fixed).

[11:12:09.0000] <rbyers>
smaug____:  But I know it's at least 0.26% of the top websites based on the httparchive search for smoothscroll.js code

[11:12:26.0000] <smaug____>
rbyers: ok, sounds good. Is there any Gecko could do to hint to web devs to move to different APIs?

[11:12:41.0000] <smaug____>
s/any/anything

[11:12:42.0000] <rbyers>
And yes I've talked to both Edge and WebKit folks - they're prepared to follow us in fixing scrollTop if we can show we were able to do it without terrible web compat impact.

[11:13:18.0000] <smaug____>
I guess use of DOMMouseScroll is one thing

[11:13:20.0000] <rbyers>
Trying to deprecate DOMMouseScroll might help

[11:13:22.0000] <rbyers>
Yeah

[11:13:26.0000] <smaug____>
/me files a bug to track that

[11:13:28.0000] <rbyers>
But that's probably a bigger problem

[11:13:44.0000] <rbyers>
Usage is probably so high as to not be the best use of our collective time.

[11:14:05.0000] <smaug____>
true, if FB and Google are using it

[11:14:06.0000] <rbyers>
I'm adding a use counter to track mousewheel (but not wheel) usage - I expect it'll be high.

[11:14:22.0000] <smaug____>
need to contact FB and G web devs

[11:15:05.0000] <rbyers>
Rather than focus on mousewheel usage, I'll probably direct my energy to getting rid of smoothscroll.js - that's much more obtainable (and valuable) in the short term I think.  Now that we have smooth scrolling, it's strictly better for the page anyway.

[11:18:59.0000] <rbyers>
There might be a third option here though - change the spec in a way that's compatible but still better than the status quo.  I'll do some research to see if I can find any other options.

[11:23:48.0000] <terinjokes>
tobie: looks like an update happened, but console didn't seem to make it in

[11:24:34.0000] <tobie>
terinjokes: yeah, I merge a manual addition to the DB minutes ago.

[11:24:43.0000] <terinjokes>
ah, k

[11:24:43.0000] <tobie>
*merged

[11:34:15.0000] <annevk>
TabAtkins: Notifications API iirc

[11:34:48.0000] <annevk>
TabAtkins: Streams?

[11:34:48.0000] <botie>
Streams are awesome btw, loads of fun

[11:35:00.0000] <annevk>
Yes

[11:35:05.0000] <TabAtkins>
botie, forget about Streams.

[11:35:06.0000] <botie>
TabAtkins, I didn't have anything matching about streams

[11:35:10.0000] <TabAtkins>
wtf botie

[11:35:33.0000] <annevk>
botie: forget streams

[11:35:34.0000] <botie>
annevk: I forgot streams

[11:36:37.0000] <tobie>
terinjokes: merged now

[11:37:52.0000] <Domenic>
poor botie

[11:38:03.0000] <Domenic>
botie, Streams are awesome btw, loads of fun

[11:38:04.0000] <botie>
OK, Domenic.

[11:38:33.0000] <annevk>
😊

[13:35:45.0000] <rbyers>
smaug____ miketaylr: Ok I'm getting a little desperate.  Do you think it would be completely insane if blink were to refuse (with a console warning) to dispatch 'mousewheel' events to handlers whose function name happened to be "ssc_wheel" (at least for the next year or so until usage has dropped)?  My httparchive data suggests that's always the buggy

[13:35:45.0000] <rbyers>
smoothscroll.js library.

[13:37:14.0000] <rbyers>
Not sure I really want to go down this path (IE has relied on site-compat hacks in the past, and you guys do some hacks too, right?).   But it seems only 99% insane to me (especially if time-limited)...  The alternative is probably to leave interop broken, or to update the specs so Firefox has to copy WebKit's crappy bug ;-)

[13:37:21.0000] <miketaylr>
i'm always excited about hacks

[13:38:57.0000] <miketaylr>
rbyers: if you can do that and get someone poplular JakeA or paul_irish_ to signal boost a blog post

[13:39:30.0000] <rbyers>
miketaylr: I'm doing the blog post anyway (https://plus.google.com/+RickByers/posts/RdYaYF5DTF4 for now - probably more from our DevRel).

[13:40:15.0000] <rbyers>
Trouble is, these sites are mostly rinky-dink wordpress sites, probably not actively maintained, etc.  So I don't expect much from outreach or even console warnings.

[13:40:27.0000] <rbyers>
But at least doing that will make me feel less guilty when I later break the site completely ;-)

[13:40:29.0000] <miketaylr>
hm, yes.

[13:41:56.0000] <rbyers>
maketaylr: Can you point me at any details on the ugly hacks you've done for compat?  You've got some site-specific stuff activated by URL, right?  Anything generic like this (lots of impacted URLs copying the identical code patterns)?

[13:44:33.0000] <rbyers>
Seems unfair that Firefox, IE, Opera etc. get to have all the fun resorting to compat hacks for crappy sites while chromium just says "someone will notice the breakage and fix the site" <grin>.

[13:45:39.0000] <miketaylr>
ain't marketshare grand

[13:48:28.0000] <miketaylr>
rbyers: here's opera's current browser.js https://gist.github.com/anonymous/c3df94dd2c2fe8495b2f#file-browser-js-L289

[13:48:32.0000] <miketaylr>
let me find some gecko stuff

[13:48:55.0000] <miketaylr>
this used to be much bigger in the presto days, as you might imagine

[13:50:15.0000] <rbyers>
Yeah that's surprisingly small

[13:50:27.0000] <rbyers>
Guess it was reserved only for the biggest impact stuff, eh?

[13:51:02.0000] <miketaylr>
yeah, hallvors could say more -- he used to maintain that at opera

[13:51:04.0000] <miketaylr>
unsure who does that now

[13:51:05.0000] <rbyers>
And looks like every rule is hostname controlled.  Sad to see how much is google :-(.  I'm gonna have to start serving some sites from google.rbyers.net just to mess with the rules here ;-)

[13:51:12.0000] <miketaylr>
heh

[13:55:38.0000] <miketaylr>
rbyers: here's a youtube specific hack we have to fudge the UA string in desktop https://bugzilla.mozilla.org/show_bug.cgi?id=1233970, and we also have a dynamic ua override mechanism for fennec and b2g https://dxr.mozilla.org/mozilla-central/source/mobile/android/app/ua-update.json.in

[13:55:49.0000] <miketaylr>
(it's not used very much, but it's handy if we need it)

[13:56:59.0000] <hallvors>
rbyers: the file for Presto-based Opera versions is also on GitHub, we had some generic hacks applied to libraries by file names there.

[13:57:14.0000] <smaug____>
rbyers: on desktop the hacks Gecko has are mostly for Google sites

[13:57:17.0000] <smaug____>
or perhaps even only

[13:57:36.0000] <smaug____>
and those are rare

[13:58:10.0000] <smaug____>
rbyers: I don't think we try to detect any JS function name or anything like that

[13:58:49.0000] <smaug____>
implementing that without regressing performance ... hmm, first detect that the problematic script is loaded

[13:58:58.0000] <smaug____>
and then enter to some slower code path

[13:59:02.0000] <smaug____>
might not be too bad

[13:59:06.0000] <hallvors>
rbyers: https://github.com/operasoftware/browserjs/blob/master/desktop/browserjs-12.50.js#L268

[13:59:44.0000] <miketaylr>
dhtml menu scripts, hooray

[14:00:48.0000] <hallvors>
oh, the nostalgia ;)

[14:01:24.0000] <rbyers>
Heh heh, ok thanks a ton guys.

[14:02:01.0000] <hallvors>
well, well. Presto-Opera's User JS API was great. Really powerful for those things.

[14:02:26.0000] <smaug____>
hallvors: could it do something similar what rbyers tries to do here?

[14:02:33.0000] <hallvors>
As I told Mike directly a moment ago, I think it wrapped a log of power in a lot of simplicity

[14:03:43.0000] <hallvors>
smaug____: easily, starting here: https://github.com/operasoftware/browserjs/blob/master/desktop/browserjs-12.50.js#L414

[14:04:06.0000] <hallvors>
a BeforeExternalScript event to inspec file names

[14:04:29.0000] <hallvors>
then code like the L268 I linked above to tweak variables, environment..

[14:04:35.0000] <rbyers>
In my case the script is often minified - can't always rely on the script filename.  See https://docs.google.com/spreadsheets/d/1P4kJfl-f5jeiKzYJyKVeo79NJEDL565Agcgl5hRh5ic/edit?pref=2&pli=1#gid=1895977753

[14:04:42.0000] <hallvors>
it worked like a charm :)

[14:06:49.0000] <rbyers>
In my case I think I'd want to hook calls to addEventListener('mousewheel').  That shouldn't be TOO performance sensitive (adding/removing mousewheel handlers shouldn't be that common).

[14:07:01.0000] <rbyers>
Then consult the Function.name of the provided handler...

[14:07:28.0000] <hallvors>
rbyers: yeah, the web has moved on a bit - all the concatenation and obfuscation makes those old approaches less useful I guess :-/

[14:07:45.0000] <hallvors>
We also had the amazing magic variables and functions: https://github.com/operasoftware/browserjs/blob/master/desktop/browserjs-12.50.js#L377

[14:07:58.0000] <rbyers>
Yeah I was just looking at those

[14:08:02.0000] <hallvors>
Basically you could define getters that were invisible to page scripts

[14:08:04.0000] <rbyers>
fascinating

[14:08:16.0000] <hallvors>
not caught by enumeration etc

[14:09:59.0000] <rbyers>
Once the list of things becomes non-trivial it must be a bit of a nightmare to maintain, no?  Eg. do you try to do automated testing for each rule?

[14:10:21.0000] <rbyers>
Are there cases where a web developers wants to fix their bug but can't without coordinating exactly with a change to browser.js?

[14:11:02.0000] <hallvors>
We had automated testing.

[14:11:04.0000] <rbyers>
I'm also worried about website testing.  Developer makes some changes, verifies it works well in Chrome on their staging server, then pushes to their real URL which now triggers different behavior ;-)

[14:11:29.0000] <hallvors>
I do remember a case or two where we'd break the site

[14:11:45.0000] <hallvors>
But mostly I think that happened with UA spoofing and less with browser.js

[14:11:58.0000] <rbyers>
It's kind of embarassing how far ahead of us y'all are on website compat - we're noobs at this :-(

[14:12:08.0000] <hallvors>
I have broken Deviantart and Hotmail though, with buggy browser.js updates :-p

[14:12:46.0000] <smaug____>
rbyers: looking at the crbug 501568. So it works in gecko because ssc_addEvent("mousewheel", ssc_wheel); doesn't really do anything since mousewheel isn't supported? So the script tries to do something (possibly buggy) and luckily that function call doesn't make sense in case of Gecko.

[14:12:46.0000] <rbyers>
:-)  Well it's not like we don't break major sites by accidentally shipping bugs - that I can live with :-)

[14:12:51.0000] <hallvors>
not sure if that is somethin you should envy ;)

[14:13:15.0000] <smaug____>
or perhaps unfortunately, since they would have noticed their bug perhaps earlier if it was working badly in gecko

[14:13:20.0000] <rbyers>
smaug____ exactly.  There's also a UA check specifically for Chrome, Safari or (strangely since it never works) Firefox.

[14:14:17.0000] <hallvors>
VoodoJS. Summon unknown browsers with untested commands, assume something will happen.

[14:14:22.0000] <hallvors>
:)

[14:14:56.0000] <rbyers>
:-)

[14:16:34.0000] <rbyers>
Ok, well I've gotta run.  Thanks for all the education guys.  I'll do some more research on the various options.  Maybe we just break all these sites - I mean 0.26% of all web pages can't be THAT many pages, can it <grin>?

[14:17:44.0000] <smaug____>
detecting ssc_wheel might not be too bad

[14:17:53.0000] <smaug____>
and warn hard when it is detected

[14:18:03.0000] <hallvors>
Well, breaking mousewheel scrolling isn't the worst possible breakage (if I understand the issue correctly you can still scroll by dragging scrollbars and such?)

[14:18:47.0000] <hallvors>
Though I must say it would be really fun if other browsers picked up the old User JS API to assist their sitefixing :)

[14:19:03.0000] <hallvors>
probably not going to happen, but still :)

[14:19:13.0000] <rbyers>
Yeah, dragging scrollbars works (though I'm sure many users won't try that) but not keyboard.

[14:19:26.0000] <hallvors>
TIL API nostalgia is a feeling

[14:19:33.0000] <rbyers>
:-)

[14:19:58.0000] <hallvors>
breaking keyboard scrolling *is* bad :/

[14:20:10.0000] <hallvors>
IMHO..

[14:20:16.0000] <rbyers>
Worse than mousewheel?  Because of accessibility?

[14:20:27.0000] <rbyers>
In practice most users scroll with wheel...

[14:20:47.0000] <smaug____>
hmm, do we have data about that

[14:20:56.0000] <hallvors>
I think it's sort of the fallback option if wheel doesn't work..

[14:21:06.0000] <hallvors>
I'd expect users to try keys

[14:21:12.0000] <hallvors>
but maybe it's just me ;)

[15:05:18.0000] <miketaylr>
are webkit layout tests safe to convert to web platform tests? cc jgraham

[15:05:34.0000] <miketaylr>
i don't see license info in the tests themselves

[15:06:04.0000] <miketaylr>
maybe just a comment "Based on a test from the WebKit project" is ok

[15:12:43.0000] <miketaylr>
it looks like that's the approach taken in https://github.com/w3c/web-platform-tests/commit/b4c286f4fefe5cf1f47ecdd4e1aa6f41c6ff793f

[15:22:35.0000] <jgraham>
miketaylr: People have done that before, but it is relicensing, so you probably need permission or something

[15:23:15.0000] <miketaylr>
jgraham: ok, i'll send an email to apple, unless hober wants to give me permission real quick

[15:24:58.0000] <miketaylr>
(or, i just write my own tests and call it a day)

[15:36:48.0000] <MikeSmith>
if anybody knows the current implementor consensus on HTML Imports, can you please remind me

[15:36:59.0000] <MikeSmith>
last I heard it was on its way out

[15:37:30.0000] <jgraham>
MikeSmith: Pretty sure Moz don't want to implement it

[15:37:43.0000] <jgraham>
Unless something changed

[15:37:48.0000] <MikeSmith>
jgraham: that's what I thought too

[15:38:23.0000] <MikeSmith>
but then in bugzilla.mozilla.org I see open bugs related to it

[15:38:34.0000] <MikeSmith>
e.g., https://bugzilla.mozilla.org/show_bug.cgi?id=1016888

[15:38:54.0000] <MikeSmith>
so does that mean it has actually already been implemented in gecko?

[15:39:59.0000] <MikeSmith>
ah

[15:40:11.0000] <MikeSmith>
「Firefox has no plans to support HTML imports though for now it can be enabled through the "dom.webcomponents.enabled" preference in about:config」

[15:40:18.0000] <MikeSmith>
at caniuse

[15:41:08.0000] <Domenic>
Has everyone seen dglazkov's HTML modules

[15:41:15.0000] <Domenic>
re-imaging HTML imports on top of <script type="module">

[15:41:17.0000] <Domenic>
I like it a lot

[15:41:38.0000] <Domenic>
https://github.com/dglazkov/webcomponents/blob/html-modules/proposals/HTML-Imports-and-ES-Modules.md


2016-01-22
[16:01:25.0000] <MikeSmith>
/me looks

[16:04:05.0000] <MikeSmith>
"this approach effectively replaces all of the HTML Imports machinery with straight-up ES Modules plumbing and leaves only a handful of HTML-specific bits"

[16:04:08.0000] <MikeSmith>
nice

[16:05:19.0000] <MikeSmith>
wonder if anybody from Apple or Mozilla have commented on that yet

[16:12:19.0000] <MikeSmith>
ah I guess not, since Domenic was asking, "Has everyone seen dglazkov's HTML modules"... :)

[16:27:23.0000] <miketaylr>
did the single page spec @ https://html.spec.whatwg.org/c get removed?

[16:27:45.0000] <miketaylr>
maybe that should 302 to https://html.spec.whatwg.org/

[16:27:59.0000] <miketaylr>
oh my bad.

[16:28:07.0000] <miketaylr>
whatwg.org/c is the shortcut

[23:23:15.0000] <annevk>
Domenic: re https://github.com/whatwg/html/issues/550#issuecomment-173831401 if those two execution modes are indistinguishable, arguably user agents are allowed to do that already (you can probably observe through the server, but we've mostly come to agreement that doesn't count I believe)

[23:23:45.0000] <annevk>
Domenic: as for CORS, note that classic workers currently have to be same-origin

[00:50:40.0000] <Ms2ger>
/me will be out from this afternoon until next Friday

[00:51:50.0000] <annevk>
tobie: I saw you're still looking for information on Observables, maybe in #jslang on Mozilla IRC, though from what I've heard there's still a lot of controversy around it and not really done

[00:51:59.0000] <annevk>
tobie: and unclear how it works with Streams

[00:53:44.0000] <tobie>
annevk: Thanks. I'm vaguely aware of the controversy.

[00:54:51.0000] <tobie>
annevk: my main issue is that I specifying stuff that could work in both node and the browser

[00:55:09.0000] <tobie>
And I cant do the former because no common event pattern

[00:59:48.0000] <tobie>
annevk: ty for the #jslang pointer, btw. Wasn't aware it was a thing.

[01:00:31.0000] <annevk>
It seems to be the TC39-counterpart to #whatwg

[01:00:39.0000] <tobie>
indeed

[02:27:14.0000] <ritsyy1>
annevk: as per the spec https://html.spec.whatwg.org/multipage/tables.html#the-th-element , the "sorting th element" needs to be removed as the "the table sorting model" has been removed from the spec, right?

[02:36:29.0000] <Ms2ger>
ritsyy1, sounds correct

[02:39:10.0000] <ritsyy1>
Ms2ger: okay

[03:53:28.0000] <ritsyy1>
getting this error while doing the rebase https://paste.kde.org/po3wmemsv

[03:53:38.0000] <ritsyy1>
annevk: ^

[04:05:16.0000] <MikeSmith>
ritsyy1: so there's probably no way to fix those merge conflicts automatically

[04:06:10.0000] <MikeSmith>
if you open the source file in an editor and search for ">>>>" you'll find the actual conflict

[04:07:01.0000] <MikeSmith>
the normal way to fix those conflicts is by manually editing the file to make it say with you want it to say

[04:07:12.0000] <MikeSmith>
after reviewing the conflict

[04:07:39.0000] <MikeSmith>
so you edit it do read as it should, and remove the conflict markers

[04:08:27.0000] <MikeSmith>
ritsyy1: this is for https://github.com/whatwg/html/pull/526 right?

[04:10:54.0000] <ritsyy1>
MikeSmith: yes it's for this PR

[04:11:42.0000] <MikeSmith>
ritsyy1: OK yeah I'm looking at the conflict myself now

[04:12:09.0000] <ritsyy1>
MikeSmith: the errors are for the image files i removed

[04:12:58.0000] <annevk>
ritsyy1: no, it's for source, "CONFLICT (content): Merge conflict in source"

[04:13:33.0000] <MikeSmith>
ritsyy1: yeah I see the messages about the image files for those are just informative, telling you that they are actually being removed

[04:13:51.0000] <annevk>
ritsyy1: you'll have to figure out what the conflict is, resolve it, and then some combination of git add/git rebase --continue

[04:14:14.0000] <annevk>
Merge conflicts are no fun 😟

[04:14:31.0000] <ritsyy1>
MikeSmith: yeah i am seeing that now, thank you

[04:15:10.0000] <MikeSmith>
the conflict appears to be with the part of the table that has <th> <code data-x="">sizes</code> and <th> <code data-x="">sortable</code> and <th> <code data-x="">sorted</code>

[04:15:32.0000] <MikeSmith>
yeah, merge conflicts are PITA. Everbody hates dealing with them

[04:16:14.0000] <ritsyy1>
MikeSmith: i didn't find any ">>>>" in the file

[04:16:23.0000] <MikeSmith>
ritsyy1: I would guess you want to keep the <th> <code data-x="">sizes</code> part but not the parts for "sortable" and "sorted" there

[04:16:41.0000] <MikeSmith>
oh it might be that it puts different conflict markers

[04:17:11.0000] <MikeSmith>
the conflict is at line 114569 of the source file

[04:17:43.0000] <ritsyy1>
MikeSmith: okay i am seeing that

[04:17:52.0000] <MikeSmith>
that is the Attributes index I guess

[04:18:04.0000] <MikeSmith>
so it's not a big problem

[04:18:21.0000] <MikeSmith>
but it should be made to match what's in the body of the text

[04:19:03.0000] <MikeSmith>
so if the "sortable" and "sorted" attibutes have been dropped, then you shoudl (re)remove them from that table of the index

[04:19:12.0000] <MikeSmith>
but leave the "sizes" row

[04:19:13.0000] <MikeSmith>
I think

[04:19:37.0000] <MikeSmith>
I'm not sure why you ended up with that conflict, but you can fix it that way

[04:19:59.0000] <ritsyy1>
MikeSmith: yes got that, yeah you are right

[04:20:26.0000] <MikeSmith>
OK. I have to step away for a bit but will be back in another hour or so if you still need help with unwinding it

[04:20:41.0000] <MikeSmith>
but in the mean time it looks like annevk is back around now too

[04:20:54.0000] <ritsyy1>
MikeSmith: no no i'll do this fix now, thanks :)

[04:22:06.0000] <annevk>
I guess zcorpan recently added sizes="" so that's probably why there's a conflict

[04:23:17.0000] <zcorpan>
yep

[04:47:16.0000] <ritsyy1>
annevk: yeah it was because of that commit, but i did that mistake of removing sizes row too, conflicts free PR looks good https://github.com/whatwg/html/pull/526 :)

[05:23:19.0000] <annevk>
ritsyy1: should I review seamless first?

[05:28:57.0000] <ritsyy1>
annevk: yeah i did the fixes in that too, i thought to tell you here, but forgot that  :-/

[05:30:48.0000] <annevk>
ritsyy1: it seems one sentence there is still over a 100 characters

[05:30:54.0000] <annevk>
ritsyy1: '  <dfn><code data-x="dom-iframe-srcdoc">srcdoc</code></dfn>, <dfn><code data-x="dom-iframe-name">name</code></dfn>, and'

[05:31:26.0000] <annevk>
oh maybe I'm not looking at the correct version

[05:32:06.0000] <annevk>
Indeed, I was not, looking good

[05:32:45.0000] <ritsyy1>
annevk: yay

[05:37:45.0000] <annevk>
I filed https://github.com/Fyrd/caniuse/issues/2232 against caniuse.com so the warning can be removed from the build script

[05:42:21.0000] <ritsyy1>
annevk: great, thanks \o/

[05:43:39.0000] <annevk>
I also closed the bugs mentioned in the build script

[05:46:16.0000] <ritsyy1>
annevk: oh yeah those 2 bugs, great :)

[06:01:09.0000] <hsivonen>
UTF-16 variants turn into UTF-8 in form submission and URLs and replacement encodes like UTF-8. Is there a defined term for the encoding that's used for output (i.e. UTF-8) in these cases?

[06:01:15.0000] <hsivonen>
annevk: ^

[06:02:03.0000] <hsivonen>
annevk: OK if I mint a concept "output encoding" and define that the output encoding of an encoding is the encoding itself except UTF-8 for utf-16be, utf-16le and replacement

[06:02:51.0000] <hsivonen>
(that is, I want a term for the docs I'm writing and I want consistent terminology in case WHATWG specs mint a term for the same concept in the future)

[06:06:34.0000] <hsivonen>
actually, docs are secondary. I want to name a method in an API

[06:06:58.0000] <annevk>
There is no term right now, though "output" and "encoder" don't quite align perhaps?

[06:08:34.0000] <hsivonen>
I'm not sure I understand the non-alignment

[06:08:53.0000] <hsivonen>
it's not "output encoder" but "output encoding"

[06:09:04.0000] <hsivonen>
then you'd create an encoder for the output encoding

[06:09:49.0000] <hsivonen>
and if we remove the UTF-16 encoders from the platform, I'd change the definition of new_encoder() API call to create an encoder for the output encoding of this encoding

[06:10:46.0000] <hsivonen>
anyway, I'm looking for a qualifier for "encoding" that means the encoding that's used for form submission and URL query strings

[06:11:14.0000] <hsivonen>
from the point of view of this encoding where this encoding is the encoding of the page

[06:12:10.0000] <annevk>
Perhaps the non-alignment is that in the spec "replacement" would still be the encoding, it's just that replacement's encoder is utf-8's encoder

[06:12:11.0000] <hsivonen>
could be "submission encoding" instead of "output encoding" assuming that "submission" is considered to cover the query string, too, which is kinda related to submission

[06:14:02.0000] <annevk>
Although maybe that is wrong and there is indeed a need for an output encoding instead, since if we mention the encoding somewhere we wouldn't want to say "replacement"

[06:14:33.0000] <hsivonen>
annevk: indeed, but consider: if you use script to add a form to a doc whose encoding is replacement, would you want the _charset_ field to say "replacement" or "utf-8"?

[06:14:58.0000] <hsivonen>
I'd say "utf-8", since "replacement" is not a label

[06:15:12.0000] <annevk>
I think you are correct, but this will require some cleaning up in the specification too

[06:17:05.0000] <annevk>
I will file an issue

[06:17:13.0000] <hsivonen>
annevk: thanks

[06:31:56.0000] <zcorpan>
TabAtkins: pls check https://github.com/tabatkins/bikeshed/issues/572 when you have time :-)

[06:47:14.0000] <JakeA>
wanderview: I really want to link to my favourite bit https://www.youtube.com/watch?v=TFzR00NzQ1c - but there's an editing glitch towards the end :/

[06:47:19.0000] <JakeA>
Getting them to fix it

[07:08:18.0000] <annevk>
TabAtkins: I updated bikeshed, now when I generate DOM a whole set of IDs changes

[07:08:46.0000] <annevk>
TabAtkins: e.g., https://dom.spec.whatwg.org/#canceled-flag would no longer work if I committed this

[07:08:54.0000] <annevk>
TabAtkins: that seems bad

[07:33:01.0000] <annevk>
TabAtkins: Compat Standard is bikeshed too

[07:34:19.0000] <annevk>
TabAtkins: Streams (perhaps a variant, or with additional processing), Notifications

[07:46:39.0000] <annevk>
MikeSmith: did you know about https://w3c-html-ig-zh.github.io/notifications/whatwg/?

[07:46:50.0000] <annevk>
MikeSmith: seems pretty cool, bit out of date, but still

[08:04:33.0000] <nox>
annevk: How are standards' translations received, in general, around here?

[08:05:03.0000] <annevk>
I think it's great

[08:06:19.0000] <annevk>
Sadly we don't have the resources of the EU, to make this stuff accessible to all

[08:06:47.0000] <annevk>
And sadly keeping up with the everchanging landscape is hard

[08:39:29.0000] <beverloo>
annevk, do you have any strong feelings about having a `notificationclose` event or not?

[08:40:19.0000] <beverloo>
I argued for removing it a year or two ago, but some fair use-cases have come up since and we might want to introduce it again

[08:56:36.0000] <TabAtkins>
annevk: Yeah, had to start disambiguating anything with a `for`.  Otherwise <dfn for=Foo>bar</dfn> and <dfn for=Baz>bar</dfn> would both try to generate a #bar id.

[08:58:36.0000] <TabAtkins>
I'm happy to find the changing IDs and give you a PR that locks them into their old values.

[09:00:30.0000] <TabAtkins>
(I can't just let it generate a simple ID and only disambiguate if there's a collision, as that would make IDs unstable from unrelated edits.)

[09:01:26.0000] <TabAtkins>
(I could leave it alone entirely and let people hit the "two things have the same ID" error when it happens, but it seems friendlier for the future to make it silently work, and eat a little bit of compat pain now.)

[09:05:07.0000] <TabAtkins>
/me will work on the ID-locking PR this mornign.

[09:05:47.0000] <Domenic>
annevk: the execution modes are distinguishable, becuase you can run code between imports. So e.g. `import './a.js'; foo(); import './b.js';` where `b.js` 404s. If we do a two-stage async version, foo never executes (the error occurs in the first stage). If we do a sync import, then foo executes and the error only occurs on the `import './b.js'` line.

[09:06:16.0000] <annevk>
TabAtkins: ta

[09:06:36.0000] <annevk>
beverloo: nah

[09:06:54.0000] <annevk>
beverloo: been trying to get some Mozillians involved that work on the implementation, but no luck thus far

[09:06:59.0000] <TabAtkins>
annevk: I think DOM is the heaviest user of the "dfn-type definition with a for" pattern right now, so you're the most affected. ^_^

[09:07:14.0000] <beverloo>
annevk, yeah, Jonas' new focus is kind of a bummer for us

[09:07:26.0000] <annevk>
TabAtkins: url too, though I think I use a lot of explicit IDs there

[09:07:40.0000] <annevk>
beverloo: pretty happy he's not doing Firefox OS anymore, personally

[09:07:48.0000] <beverloo>
annevk, hah :)

[09:07:53.0000] <beverloo>
I read your blog post

[09:07:56.0000] <annevk>
new project seems much more exciting

[09:08:28.0000] <beverloo>
I'm sure, but it still leaves a bit of a gap in Mozilla-side feedback on the functional bits of the API

[09:08:35.0000] <beverloo>
thanks for trying to engage other people

[09:18:03.0000] <jgraham>
/me wonders what he is doing now

[09:18:14.0000] <jgraham>
sicking I mean

[09:18:22.0000] <jgraham>
Although I also often wonder what I am doing

[09:19:37.0000] <annevk>
jgraham: https://github.com/flyweb

[09:23:57.0000] <jgraham>
Ah right

[09:24:08.0000] <jgraham>
Definitely an element of Opera Did It First to that

[09:37:18.0000] <TabAtkins>
annevk: Ok, PR ready. Do you want dom.html included? Only changes are the date, obvs, and a few small updates to boilerplate markup, which doesn't affect the spec visually at all (I checked).

[09:38:18.0000] <annevk>
TabAtkins: both is fine

[09:43:18.0000] <TabAtkins>
k, PR waiting for you now. Sorry for the disruption, but it's for the future best. ^_^

[10:10:26.0000] <annevk>
ta

[10:35:46.0000] <smaug____>
jgraham: how does one add a new wpt test

[10:35:50.0000] <smaug____>
add the file and then what?

[10:36:10.0000] <smaug____>
there was some magic one need to do after that

[10:36:20.0000] <smaug____>
(this is in mozilla tree)

[10:37:29.0000] <yury`m>
smaug____: there is README.md https://dxr.mozilla.org/mozilla-central/source/testing/web-platform/README.md

[10:38:19.0000] <yury`m>
smaug____: mach web-platform-tests-create will do the magical manifest update

[10:39:17.0000] <smaug____>
mach web-platform-tests --manifest-update <path> is perhaps the one I need

[10:40:08.0000] <smaug____>
yury`m: thanks

[10:41:53.0000] <smaug____>
that caused some rather unexpected changes though

[10:42:27.0000] <yury`m>
smaug____: it needs to update manifest(s)

[10:43:29.0000] <smaug____>
sure, but it made some totally unrelated changes

[10:43:46.0000] <smaug____>
but should be now after manually fixing those cases

[10:44:40.0000] <smaug____>
s/now/fine now/

[10:49:57.0000] <jgraham>
smaug____: There's also mach web-platform-tests-create these days

[10:51:15.0000] <smaug____>
I used the script which is used for other tests too

[10:55:28.0000] <jgraham>
Out of interest, what were the unexpected manifest changes?

[10:58:18.0000] <smaug____>
jgraham: it moved random stuff in MANIFEST.json

[10:59:02.0000] <smaug____>
the expected one was to add a new file to MANIFEST.json

[10:59:58.0000] <smaug____>
perhaps someone has modified that file manually and the script uses some different ordering for file entries?

[11:27:02.0000] <jgraham>
smaug____: OK. If it happens again send me a diff, perhaps?

[11:50:23.0000] <smaug____>
jgraham: one thing not clear to me is when to create a new test

[11:50:36.0000] <smaug____>
and when to just put more assert_*() inside the function

[11:52:22.0000] <smaug____>
I already added function is(val, expected, comment) { test(function() {assert_equals(val, expected, comment )}) }, but decided to remove it since perhaps it isn't the wpt style

[12:15:50.0000] <jgraham>
smaug____: Each test is a unit of pass/fail and will stop at the first assert that fails. So generally more tests is better than more unrelated asserts in the same test, but it's obviously better to have more asserts in a single test than to not write the tests at al

[12:17:39.0000] <smaug____>
jgraham: well, I would assume all the asserts in a file are related

[12:18:13.0000] <smaug____>
but ok, this is up to the test writer to split to smaller tests or just have one test and several asserts in it

[12:44:52.0000] <smaug____>
jgraham: how do I see (in terminal perhaps) the output from all the asserts?

[13:27:05.0000] <jgraham>
smaug____: You can't

[13:30:27.0000] <smaug____>
ok

[13:30:38.0000] <smaug____>
jgraham: see my question in moznet #content


2016-01-23
[17:59:43.0000] <MikeSmith>
annevk: didn't know about https://w3c-html-ig-zh.github.io/notifications/whatwg/ but it looks like the work of Zhang (who contributes a lot to wpt, including reviews). He gets a lot done

[03:41:57.0000] <annevk>
I wonder if we should link to known translations somehow

[03:42:27.0000] <annevk>
While acknowledging they are not as up-to-date or normative

[05:09:06.0000] <nox>
annevk: Knowing about them could help keeping them up-to-date.

[13:13:07.0000] <Mitar>
I have a question about Fetch API and caching and I wonder if this is the issue of the spec or of Chrome implementation (on which I am testing). But the issue is that if I make a fetch request for the resource, caching headers are not send along it. So if the resource returns etag and things like that, I would assume that if I do fetch for that URL, browser would add necessary If-None-Match header automatically. But this does not happen no matter which "cach

[13:18:29.0000] <Mitar>
oh, it seems it is chrome bug: https://code.google.com/p/chromium/issues/detail?id=451664

[13:19:15.0000] <Mitar>
https://code.google.com/p/chromium/issues/detail?id=453190


2016-01-24
[17:00:08.0000] <MikeSmith>
Mitar: yeah, kind of surprising the Chrome team hasn't fixed/implemented that yet

[21:22:55.0000] <MikeSmith>
after looking at https://github.com/whatwg/html-build/issues/55 ("Explore creating a Docker image with wattsi and other build dependencies") it all looks great for what it is, but I now don't understand what problem the end result is actually going to solve for us

[21:23:31.0000] <MikeSmith>
for one thing I notice that it's not actually building a wattsi binary, but instead just using wattsi-server

[21:24:33.0000] <MikeSmith>
and to me the whole point of having a Docker image was so contributors could run wattsi locally without needing to build it (and to build fpc in order to build wattsi)

[21:25:10.0000] <MikeSmith>
and also so that contributors wouldn't need to hit the network in order to generate the spec

[21:26:02.0000] <MikeSmith>
so I think I am now coming around to wondering instead if we should just distribute wattsi binaries (for OSX and Windows and Linux)

[21:26:31.0000] <MikeSmith>
I can build the OSX and Linux (AMD64) ones

[21:33:26.0000] <Hixie_>
clearly the solution is for everyone to download fpc

[23:39:56.0000] <MikeSmith>
Hixie_: I'm happy enough with that solution personally

[23:41:08.0000] <MikeSmith>
would just like to avoid the cases of somebody who wants to contribute but gets annoyed/frustrated from teh get-go at needing to compile dependencies, then just gives up and never contributes

[23:42:29.0000] <MikeSmith>
Hixie_: anyway on the plus side, I notice that my OSX wattsi doesn't dynamically link to anything exotic

[23:42:59.0000] <MikeSmith>
$ otool -L /opt/workspace/wattsi/bin/wattsi

[23:43:21.0000] <MikeSmith>
/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1)

[23:44:07.0000] <MikeSmith>
so if we do distribute an OSX binary, it should be runnable on any modern OSX system, I'd think

[00:04:40.0000] <MikeSmith>
the Linux binary is completely statically linked

[05:47:42.0000] <terinjokes>
MikeSmith: set the clang flags for minimum OS X version (I see 10.8 and 10.9 often in consumer software, nowadays)

[06:22:20.0000] <annevk>
MikeSmith: it does indeed seem like Zhang did the work, perhaps we can email him and ask him if he's okay with us listing that as a translation?

[06:24:49.0000] <annevk>
MikeSmith: I was thinking we just add "Languages:" at the top, similar to Wikipedia and list it there along with a disclaimer on these not being normative

[06:35:28.0000] <annevk>
MikeSmith: asking you since I don't know Zhang's email

[06:35:52.0000] <annevk>
hmm, maybe I do

[09:49:32.0000] <annevk>
done

[09:52:24.0000] <Domenic>
MikeSmith: it should use the wattsi binary in its final form

[10:50:08.0000] <Hixie_>
yeah when i wrote wattsi i didn't depend on anything outside of my own libraries and the basic rtl provided by fpc

[10:50:13.0000] <Hixie_>
it doesn't even depend on a libc

[12:39:07.0000] <nox>
TIL wattsi is a pokémon.


2016-01-25
[17:18:42.0000] <MikeSmith>
annevk: great response from Jonas in TAG discussion about CORS credentials handling https://lists.w3.org/Archives/Public/www-tag/2016Jan/0015.html

[17:20:05.0000] <MikeSmith>
annevk: mnot is really not helping in those discussions; instead he seems to just be reinforcing misconceptions https://lists.w3.org/Archives/Public/www-tag/2016Jan/0012.html

[17:20:38.0000] <MikeSmith>
> "It's pretty impenetrable now, and even security folks don't profess to know all of the details behind CORS any more."

[17:23:59.0000] <MikeSmith>
it's true that a lot of web devs don't (yet) know they need to use withCredentials with XHR to get cookies set (or the "credentials" request option with fetch)

[17:25:45.0000] <MikeSmith>
e.g., on StackOverflow I think there is new question at least weekly or so where somebody is running into a problem where something's not working they way they expect and it turns out to be because they're not using withCredentials/credentials

[17:27:17.0000] <MikeSmith>
so I think Jonas is right that some more awareness-raising is needed

[18:15:18.0000] <annevk>
I'm not security folk, but I know how this works and why…

[19:19:29.0000] <MikeSmith>
annevk: yeah I don't know what motivates those comments from mnot. It seems like he's being disingenuous because it's a bit hard to believe he really thinks it's that "impenetrable".

[19:21:16.0000] <MikeSmith>
I remember how outspoken he was in opposition to the original Access Control spec back in the beginning but I'd thought we were way past that now. Water under the bridge

[19:32:35.0000] <annevk>
Doesn't matter I guess, it's there

[01:34:54.0000] <ondras>
several questions re. iframe sandboxing

[01:35:01.0000] <ondras>
not sure if this is the proper place to ask

[01:35:35.0000] <ondras>
serving potentially dangerous ads (generic html+css+js soup); is a sandboxed iframe the correct way to go?

[01:54:22.0000] <philipj>
zcorpan: what were you saying to me a few days ago? http://krijnhoetmer.nl/irc-logs/ is down

[01:55:25.0000] <philipj>
ondras: yes, that sounds right. mkwst is the expert on these things

[01:55:52.0000] <philipj>
or at least he added a sandbox keyword once :)

[01:56:08.0000] <zcorpan>
philipj: what did i eat a few days ago? lol don't remember :-)

[01:56:09.0000] <ondras>
:)

[01:56:25.0000] <zcorpan>
there's logs.glob.uno/?c=freenode%23whatwg though

[01:57:03.0000] <ondras>
cool.

[01:57:13.0000] <ondras>
Basically, I have two question re. iframe sandboxing

[01:57:22.0000] <philipj>
zcorpan: ok, you were asking about JSON.stringify(new DOMMatrix(...))

[01:57:28.0000] <ondras>
1) the sandbox does not seem to apply if the iframe -- no src set -- was already appended to DOM

[01:57:32.0000] <ondras>
is this intentional?

[01:57:38.0000] <philipj>
zcorpan: did you figure out the answer yet?

[01:57:59.0000] <zcorpan>
philipj: yeah, just found it. i changed the spec so no need for more pondering :-)

[01:58:11.0000] <ondras>
2) if I do not want my src-less iframe to be able to access the parent, how can I set its contents after sandboxing (unable to do contentDocument.write)?

[01:58:18.0000] <ondras>
via data-url src?

[01:58:22.0000] <ondras>
mkwst: ^ please :)

[01:59:08.0000] <philipj>
ondras: maybe some combination of sandbo and srcdoc, in the right order, will do what you want

[02:00:03.0000] <ondras>
/me never tried srcdoc, let me read its docs first

[02:01:55.0000] <philipj>
zcorpan: great!

[02:02:13.0000] <ondras>
philipj: right, sounds like an answer to my #2 question! thanks.

[02:08:41.0000] <philipj>
ondras: as for #1, the spec says "When an iframe element with a sandbox attribute has its nested browsing context created (before the initial about:blank Document is created), and when an iframe element's sandbox attribute is set or changed while it has a nested browsing context, the user agent must parse the sandboxing directive ..."

[02:09:00.0000] <philipj>
so it looks like you should be able to change it at any time

[02:09:11.0000] <philipj>
implementations might disagree, haven't checked

[02:35:02.0000] <ondras>
philipj: I found this: These flags only take effect when the nested browsing context of the iframe is navigated. Removing them, or removing the entire sandbox attribute, has no effect on an already-loaded page.

[02:38:59.0000] <zcorpan>
ondras: set the attribute(s) before inserting the iframe to the document

[02:39:02.0000] <mkwst>
ondras: 1. The `sandbox` attribute only applies at load-time. Changing the attribute won't effect a running document.

[02:39:22.0000] <ondras>
okay

[02:40:41.0000] <mkwst>
ondras: 2. It seems like you'd get what you want by seting the `sandbox` attribute, navigating the frame to something (`about:blank`), and then populating it. `srcdoc` would certainly work as well.

[02:41:15.0000] <mkwst>
And `srcdoc` (or `data:text/html,...`, which boils down to the same thing) is likely your only option if you need to push the frame into a unique origin.

[02:41:57.0000] <ondras>
mkwst: okay. so if the sandboxing is in effect (the not-allow-same-origin one), the only way to populate is .src and .srcdoc, right?

[02:42:01.0000] <mkwst>
Blink (and, I think, WebKit) supports sandboxing a document into a unique origin via `<meta http-equiv="Content-Security-Policy" content="sandbox ...">`, but I don't believe that Firefox supports that.

[02:42:24.0000] <ondras>
I am looking for the widest browser support available

[02:42:28.0000] <mkwst>
(And it's currently a spec violation, but one I'm arguing against, so...)

[02:42:40.0000] <mkwst>
Then navigating to a data: URL is probably your best bet.

[02:42:40.0000] <ondras>
:-)

[02:43:01.0000] <ondras>
perhaps "sandbox" and "srcdoc" have the same compatibility status

[02:43:03.0000] <ondras>
will check that

[02:43:06.0000] <ondras>
thanks a lot!

[02:43:15.0000] <mkwst>
I'm pretty sure they don't. But they might!

[02:43:20.0000] <zcorpan>
ondras: data: doesn't give you a unique origin in firefox, i believe

[02:43:44.0000] <zcorpan>
at least not effective script origin

[02:43:50.0000] <ondras>
zcorpan: I would have to set a sandbox, of course

[02:44:52.0000] <zcorpan>
yeah with sandbox i suppose it's safe

[02:46:18.0000] <zcorpan>
caniuse says srcdoc is not supported in IE or Edge

[02:46:24.0000] <zcorpan>
but sandbox is

[02:47:47.0000] <zcorpan>
but <iframe src=data:> doesn't work in IE/Edge either, does it? http://caniuse.com/#search=data%20uris

[02:48:13.0000] <ondras>
not good :/

[02:50:27.0000] <zcorpan>
i tried <iframe src="data:text/css,hello"> but no luck :-D https://www.browserstack.com/screenshots/69af9c645a26c24974cea20db88e0f2c6a113e75/win8.1_ie_11.0.png

[02:51:05.0000] <jgraham>
Do blob urls work in edge?

[02:51:24.0000] <ondras>
this is interesting

[02:51:25.0000] <ondras>
https://github.com/jugglinmike/srcdoc-polyfill/blob/master/srcdoc-polyfill.js

[02:55:39.0000] <zcorpan>
ondras: javascript: URLs don't have a unique origin

[02:57:18.0000] <zcorpan>
jgraham: http://caniuse.com/#search=blob%20url says yes

[02:57:36.0000] <jgraham>
You could perhaps use that to solve the problem then?

[02:58:19.0000] <ondras>
zcorpan: well even with the sandbox attribute?

[02:59:17.0000] <zcorpan>
ondras: yeah, was just going to say... probably need to test it, maybe it's fine

[02:59:59.0000] <ondras>
right

[03:52:03.0000] <nox>
Are custom elements a thing that will indeed happen?

[03:54:26.0000] <jgraham>
Yeah

[03:54:35.0000] <nox>
Ah. :(

[03:55:45.0000] <nox>
So when will they land in Firefox?

[03:56:38.0000] <jgraham>
I think there's a pref

[03:57:25.0000] <jgraham>
https://bugzilla.mozilla.org/show_bug.cgi?id=889230

[04:00:01.0000] <annevk>
Details of custom elements will be discussed later today in Cupertino…

[04:52:58.0000] <zcorpan>
ok i'm done spamming caniuse with PRs for today

[05:51:28.0000] <ondras>
so

[05:51:47.0000] <ondras>
apparently populating a sandboxed iframe in IE/Edge is hard.

[05:52:01.0000] <ondras>
but works, in a VERY HACKY way

[05:52:13.0000] <ondras>
the vehicle for that is .src = javascript:stuff_that_returns_html_content

[05:52:19.0000] <ondras>
but this works only without sandboxing

[05:52:21.0000] <ondras>
but there is a way

[05:52:30.0000] <ondras>
1) append; 2) enable sandbox; 3) set .src

[05:52:45.0000] <ondras>
this does not work in regular browsers (sandbox has to be enabled before appending), but works in IE/Edge

[05:52:48.0000] <ondras>
:/

[05:58:07.0000] <jgraham>
ondras: Did you try blob urls?

[05:59:01.0000] <ondras>
jgraham: no

[05:59:26.0000] <jgraham>
ondras: Seems arguably less bad than js urls

[06:00:17.0000] <ondras>
jgraham: i will have a look then

[06:00:39.0000] <ondras>
jgraham: but the strange taste of "in order to change src of a sandboxed iframe, I have to set the sandbox later" remains :/

[06:01:38.0000] <ondras>
jgraham: so the plan is to create a Blob out of that content and convert it to url via createObjectURL, right?

[06:03:27.0000] <jgraham>
ondras: Yeah

[06:04:05.0000] <ondras>
jgraham: blob urls do not seem to work at all in IE/Edge

[06:05:36.0000] <beverloo>
annevk, what's your take on re-using NotificationEvent vs. splitting it up in Notification{Click,Close}Event?

[06:05:49.0000] <beverloo>
the former would remove a fair amount of duplication/overhead, but the latter feels like the right thing to do

[06:07:09.0000] <jgraham>
ondras: Oh well

[06:07:19.0000] <ondras>
http://codepen.io/grimen/pen/lBuiG

[06:07:26.0000] <ondras>
I also googled this sample

[06:07:28.0000] <ondras>
does not work in IE

[06:07:29.0000] <ondras>
:/

[06:15:29.0000] <annevk>
beverloo: due to action? There's many precedents set either way... I guess the click one could be a subclass if we really didn't want that action member on close

[06:15:50.0000] <beverloo>
Yes. It would always be "null" I guess

[06:16:23.0000] <beverloo>
I don't feel strongly either way, but in the future it's something we may want to look at?

[06:16:46.0000] <annevk>
Well, I guess we could, but it would be safer to be sure now

[06:17:16.0000] <annevk>
I don't think it matter much though. E.g., MessageEvent is used for dozens of things without anyone complaining

[06:17:33.0000] <beverloo>
one case I'm thinking of is inline replies - Mac is pushing this quite strongly, and Windows would be able to support it as well

[06:17:42.0000] <beverloo>
that'd be some kind of `notificationinput` event that's different again

[06:18:21.0000] <beverloo>
(this is rather far down our list of things to do, though)

[06:19:42.0000] <annevk>
Even that would likely just be a simple string that could be empty for the other events

[06:20:09.0000] <annevk>
I don't really care strongly either way I think

[06:20:10.0000] <beverloo>
I'm OK with that, keeps things simple

[06:20:20.0000] <beverloo>
same

[06:21:28.0000] <beverloo>
I'll merge his PR :)

[06:33:04.0000] <annevk>
beverloo: please don't do it like that again going forward

[06:33:22.0000] <annevk>
beverloo: see https://github.com/whatwg/html/blob/master/TEAM.md

[06:33:50.0000] <annevk>
beverloo: also, the commit needed to be updated as bikeshed had not yet been run

[06:34:40.0000] <annevk>
anyway, for next time, I should probably add a section on Merging to the README everywhere to make it clear this applies everywhere, not just to HTML

[06:35:28.0000] <beverloo>
I was just updating bikeshed and fixing that indeed

[06:35:34.0000] <beverloo>
I'll read that page, sorry

[06:36:36.0000] <annevk>
don't worry, we haven't communicated this widely enough I think

[06:37:10.0000] <beverloo>
it's the first time I see that page, but I may've been out of the loop :)

[06:42:04.0000] <beverloo>
annevk, shall I push the html rebuild?

[06:42:29.0000] <annevk>
beverloo: yeah sure

[06:48:00.0000] <beverloo>
ok that worked. thank you!

[06:49:21.0000] <beverloo>
except for s/60/61/, meh. I'll play around with and learn the new git magic

[06:50:51.0000] <annevk>
beverloo: is Chromium still on subversion?

[06:51:16.0000] <beverloo>
no, we use git, but my workflow is limited to a few commands

[06:51:23.0000] <beverloo>
a lot of it is hidden by other commands (e.g. our gclient tool)

[06:51:28.0000] <annevk>
ah

[06:52:02.0000] <beverloo>
anyhow, sorry for the noise!

[07:29:54.0000] <MikeSmith>
has there been any more movement on requestAutocomplete?

[07:30:57.0000] <MikeSmith>
I remember us having some discussion of it a year or so ago (or at least it seems like that long), but then nothing

[07:31:47.0000] <MikeSmith>
and I mean specifically as a way to help with solving problems with making payments easier in Web apps

[10:00:17.0000] <smaug____>
MikeSmith: does WebEx have some webby UI?

[10:00:39.0000] <smaug____>
I see Java and iOS and Android stuff

[10:41:59.0000] <ritsyy>
annevk:  could you review this https://github.com/Ritsyy/html/commit/07ef4887e1af957bdc6dbf05b96db7ab547e56a7

[10:43:22.0000] <annevk>
ritsyy: the </dd> should remain adjacent to "specified.", just as before

[10:43:40.0000] <annevk>
ritsyy: looks good otherwise

[10:43:59.0000] <ritsyy>
but it is exceeding 100char per line then

[10:45:47.0000] <annevk>
ritsyy: then you'll need to put it on the next line

[10:46:06.0000] <annevk>
ritsyy: but we don't want to add spacing between opening tags and text, and closing tags and text

[10:47:15.0000] <ritsyy>
annevk: oh okay i'll just add the specified and </dd> in the new line

[10:49:29.0000] <ritsyy>
annevk: for this issue https://github.com/whatwg/html/issues/248 , i was figuring out that, should the line that says about removing the collection of rows/cells when empty just be removed

[11:04:33.0000] <annevk>
I'm not sure I understand

[11:04:54.0000] <annevk>
I guess we should test what browsers actually do with those methods when there are no cells/rows to remove

[11:04:59.0000] <annevk>
And then write that down

[11:08:53.0000] <ritsyy>
annevk: okay, will do that, thanks

[13:58:51.0000] <gsnedders>
/me wonders if it's worthwhile for the TAG to do anything about testsuites for specs… probably not, but maybe?

[14:05:06.0000] <TabAtkins>
You mean the lack of them?

[14:08:40.0000] <jgraham>
OK, without wanting to sound more cynical than is absolutely required, the TAG are about the last people on earth I want pontificating about testsuites

[14:09:02.0000] <jgraham>
It's not like they're actually going to spend time writing tests

[14:13:27.0000] <gsnedders>
no, but some of the non-webapps non-CSS groups which have even larger problems with testing do listen to the TAG

[14:13:42.0000] <gsnedders>
And now the TAG is full of sensible people

[14:17:15.0000] <jgraham>
Which non-webapps non-CSS groups that will listen to TAG but not plh do you have in mind?

[14:24:20.0000] <gsnedders>
"but not plh" may well be a decent point :)

[15:36:25.0000] <nox>
What's TAG?

[15:37:05.0000] <gsnedders>
Technical Architecture Group, of the W3C

[15:38:14.0000] <nox>
Do I want to know about any of this?

[15:40:20.0000] <jgraham>
A few years ago their function was to tell people they had to use RDF for everything and debate HTTP semantics. Then there was a revolution and their function was to tell people that they had to use promises for everything and expose lower levels of the platform to js. Shortly later they decided to get into the pushing-back-against-https game. Now I don't know what they are doing.

[15:40:39.0000] <jgraham>
Scare quotes implied

[15:49:39.0000] <annevk>
I think pushing-back-against-HTTPS was only timbl

[15:55:34.0000] <nox>
jgraham: I see.

[15:57:30.0000] <hober>
assuming video.controls starts out false and there's a mutation observer on it, does video.controls = true; setTimeout(function() {video.controls=true;}, 0)} fire the MO once or twice?

[15:59:13.0000] <annevk>
hober: twice

[15:59:34.0000] <annevk>
hober: setTimeout creates a new task by definition, mutation observers run end-of-task


2016-01-26
[16:00:00.0000] <jgraham>
And the second is also a mutation?

[16:00:11.0000] <hober>
jgraham: yeah, that's the real question

[16:01:03.0000] <annevk>
oh

[16:01:11.0000] <annevk>
that was confusing

[16:02:02.0000] <annevk>
reflect does say 2

[16:02:14.0000] <hober>
where

[16:02:27.0000] <annevk>
"On setting, the content attribute must be removed if the IDL attribute is set to false, and must be set to the empty string if the IDL attribute is set to true."

[16:04:11.0000] <hober>
hmm. yeah, ok, fair enough

[16:11:40.0000] <jernoble>
annevk: so, what if you call video.controls = false; setTimeout(function() { video.controls = false; }); how many times would you fire a MO then?

[16:11:59.0000] <jernoble>
annevk: “the content attribute must be removed”, but the content attribute is not present the second time.

[16:15:34.0000] <jwalden>
peoples!  anyone want to fix w-p-t tests to not refer to ArrayBuffer neutering any more, since the spec changed to use "detach" as the verb instead?

[16:15:42.0000] <jwalden>
/me summons lazychannel

[16:17:05.0000] <hober>
jernoble annevk: twice when redundant true setting but once when redundant false setting is pretty weird

[16:23:05.0000] <MikeSmith>
hey it's a rare visit to #whatwg by jernoble

[16:23:08.0000] <MikeSmith>
hi jernoble

[16:23:21.0000] <jernoble>
hi MikeSmith

[16:23:26.0000] <jernoble>
long time lurker, 1st time caller

[16:23:38.0000] <MikeSmith>
hah 😀

[16:23:53.0000] <annevk>
hober: well, you cannot remove it twice, but you can set it twice

[16:24:08.0000] <Domenic>
jwalden: HTML spec hasn't changed yet...

[16:24:29.0000] <jwalden>
peoples!  anyone want to fix the HTML spec to not refer to ArrayBuffer neutering any more, since the ES6 spec changed to use "detach" as the verb instead?

[16:24:31.0000] <jwalden>
;-)

[16:24:50.0000] <annevk>
jernoble: hober: I guess we could change it, I don't really care

[16:25:02.0000] <annevk>
jwalden: that is actually a hard change to make

[16:25:11.0000] <jwalden>
annevk: wut

[16:25:22.0000] <annevk>
jwalden: doing that properly would require untangling a whole mess of things and how transferables work

[16:25:28.0000] <annevk>
jwalden: did you look into it?

[16:25:41.0000] <MikeSmith>
smaug____: webex in fact has no webby stuff. so I think the name is a clever troll.

[16:25:43.0000] <annevk>
jwalden: "neuter" is shared by a bunch of objects that are transferable

[16:26:04.0000] <jwalden>
annevk: it's just a terminology change, shouldn't be any actual algorithm changes -- basically along the lines of all the naming changes I've done in https://bugzilla.mozilla.org/show_bug.cgi?id=1079844

[16:26:06.0000] <annevk>
jwalden: and then there's the IDL vs JavaScript object confusion

[16:26:08.0000] <Domenic>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=27031#c4

[16:26:17.0000] <Domenic>
jwalden annevk ^

[16:26:32.0000] <annevk>
right

[16:26:39.0000] <jwalden>
oh, stab

[16:27:30.0000] <jwalden>
welp, most of Mozilla will be detach-friendly, at least, after those patches land

[16:27:39.0000] <jwalden>
with w-p-t tests as close to the only exception

[16:28:10.0000] <annevk>
I mean I could rename neuter to detach, but none of the problems would go away

[16:28:53.0000] <MikeSmith>
smaug____: I don't have any of the webex client stuff installed in my laptop. when I need to call into webex meetings, I use the android client and just use it to make the webex system dial my phone number. Then I just close the client. So I don't use the video part. For me the whole system is there just to make phone calls to me.

[16:28:57.0000] <jwalden>
if neuter were defined as an HTML-side generic concept, it could be specified that when performed upon an ArrayBuffer it would detach that ArrayBuffer

[16:30:42.0000] <hober>
MikeSmith: that's exactly how i "use" webex

[16:31:03.0000] <hober>
[well, s/android/ios/ but otherwise yeah :)]

[16:31:17.0000] <MikeSmith>
hober: high five

[16:31:34.0000] <hober>
:)

[16:32:36.0000] <MikeSmith>
btw you apple guys need to get a "high five" emoji added to the next barrage for emoji you unleash

[16:34:07.0000] <annevk>
jwalden: yeah, something like that

[16:34:07.0000] <hober>
that's what U+1F64F PERSON WITH FOLDED HANDS is

[16:36:48.0000] <smaug____>
MikeSmith: I ended up using skype

[16:37:01.0000] <smaug____>
to listen to the custom elements meeting

[16:37:21.0000] <MikeSmith>
hober: ah yeah, that's close. It's either that or somebody high-fiving themselves, clearly

[16:39:13.0000] <hober>
well, if your platform renders that in a way that doesn't look like a high five, you're gonna have a bad time :)

[16:39:13.0000] <MikeSmith>
smaug____: yeah that usually works better than anything else. I mean, just calling somebody in the room with skype, or having them call you

[16:39:51.0000] <MikeSmith>
hober: heh yeah I guess the unpredictability of the rendering adds to the fun

[16:41:18.0000] <MikeSmith>
jgraham: The first two sentences in your summary of the TAG are spot-on. But to be fairーas annevk pointed outーthe pushing-back-against-https didn't come from others on the TAG as far as I recall.

[16:42:25.0000] <MikeSmith>
Others on the TAG worked on coming up with the "Making the Web Secure" finding, or whatever it was called. Which I recall being sane

[16:43:15.0000] <MikeSmith>
especially Yan of course but not just Yan

[16:43:27.0000] <MikeSmith>
and they were strongly supportive of the Powerful Features doc

[16:43:42.0000] <MikeSmith>
or whatever that ended up being called now

[16:44:04.0000] <MikeSmith>
Secure Contexts

[16:45:08.0000] <MikeSmith>
but to you point about tests I also don't want to invite the TAG to get involved

[16:45:55.0000] <MikeSmith>
and anyway I am certain that some or most of the TAG members would not want the TAG to

[16:46:32.0000] <MikeSmith>
but hey glad we can still count on gsnedders for crazy ideas. He gets it right more often than he gets it wrong

[16:46:52.0000] <roc>
jgraham: the TAG was useful for telling the Web Audio editor he was doing it wrong

[16:48:18.0000] <MikeSmith>
hey that too

[16:48:20.0000] <roc>
albeit too late to fix most of the wrongness

[16:49:00.0000] <MikeSmith>
we need to the TAG around to explain to spec editors that it's not OK to introduce race conditions into standards

[16:50:45.0000] <Hixie_>
roc: couldn't other people tell him that?

[16:51:13.0000] <roc>
Hixie_: sure; I, for one, did. But he didn't have to listen to me.

[16:51:22.0000] <Hixie_>
did he have to listen to the TAG?

[16:51:46.0000] <Hixie_>
(if an editor is ignoring feedback, that seems like a larger problem)

[16:52:08.0000] <gsnedders>
MikeSmith: this is pretty much my job, being crazy

[16:52:09.0000] <roc>
I don't know, but the TAG certainly had a bigger effect than I did.

[16:53:47.0000] <roc>
I guess there might have been hidden Google influence in play too

[17:02:25.0000] <TabAtkins>
Yeah, pushing back against http was solely timbl, who is "TAG" for ceremonial purposes.

[17:03:22.0000] <TabAtkins>
roc: Next time a Google editor is being bad, let me know, too. He was asking me questions, but I didn't know much about what was going on.

[17:10:43.0000] <MikeSmith>
JakeA: the Without Streaming / With Streaming animation is https://jakearchibald.com/2016/streams-ftw/ is pretty nice

[17:11:49.0000] <gsnedders>
MikeSmith: besides, where would this channel be if I didn't suggest mad stuff?

[17:28:15.0000] <JakeA>
MikeSmith: cheers! I don't think I've ever done SVG without animating stroke offset

[17:28:23.0000] <JakeA>
One trick pony

[17:50:04.0000] <roc>
JakeA: there's some confusion about Streams here

[17:50:25.0000] <roc>
AFAICT everything you describe (and is implemented in Chrome) is about streams of byte

[17:50:26.0000] <roc>
s

[17:50:56.0000] <roc>
parts of the Streams spec, and discussion about Streams, mention streams of other data types, e.g. video frames

[17:51:17.0000] <roc>
I think the case for that is ... less compelling

[17:51:39.0000] <roc>
Ted's comment on your post is representative of that confusion

[18:08:46.0000] <JakeA>
roc: https://jakearchibald.com/2016/streams-ftw/#streaming-results these performance results aren't compelling?

[18:08:58.0000] <roc>
those are all byte streams

[18:09:07.0000] <JakeA>
Yes

[18:09:31.0000] <roc>
I understand that streaming processing of data is a good idea

[18:10:08.0000] <roc>
I'm less certain that the JS Streams API is the right API for, say, writing video codecs in JS

[18:12:00.0000] <roc>
likewise, I'm skeptical that MediaRecorder is a natural fit for Streams. It should be able to *produce* a Stream of bytes, of course, but I don't see it fitting in easily as a Streams transducer

[18:39:48.0000] <JakeA>
roc: isn't that how encoders are written now? They have config, then they're given frames

[18:40:35.0000] <JakeA>
Like ffmpeg takes an input file, config, and produces an output

[18:41:18.0000] <roc>
I had this discussion with Domenic a while back

[18:42:11.0000] <roc>
MediaRecorder supports pause() and resume(). Data received while paused is dropped.

[18:43:42.0000] <roc>
in general MediaStreams have this property that there's no backpressure. They're always real-time and data gets dropped to meet that requirement

[18:44:16.0000] <roc>
also they have structure in the form of tracks

[22:02:49.0000] <zcorpan>
i wonder what the best way is to make https://streams.spec.whatwg.org/#rs-state-diagram accessible

[22:06:59.0000] <zcorpan>
maybe it could have focusable boxes, with nav-left -> closed, etc?

[22:08:43.0000] <Hixie_>
Describe it in English

[22:08:58.0000] <Hixie_>
and let the image be a repetition of the prose

[22:25:59.0000] <zcorpan>
Hixie_: there are many arrows, i'm not sure how to describe it in a way that is easier to understand than the normative spec itself

[22:26:54.0000] <zcorpan>
maybe the description could just cover the no-close no-error case, and then as an afterthought say that each step can also go to closed or errored

[01:40:08.0000] <zcorpan>
heh, clicking the "reflect" dfn in single-page and following one of the links makes the helpful "little" box showing all the instances cover the entire page

[01:54:41.0000] <ritsyy>
zcorpan: for this bug https://github.com/whatwg/html/issues/293 could you give some pointers

[01:55:03.0000] <zcorpan>
(fixed dfn.js now)

[01:57:55.0000] <zcorpan>
ritsyy: commented in the bug

[01:58:58.0000] <ritsyy>
zcorpan: okay seeing it

[01:59:11.0000] <zcorpan>
neato!

[02:02:28.0000] <ritsyy>
zcorpan: oh yeah now i got the point, not to define one more state as the invalid value default, thanks!

[02:11:24.0000] <zcorpan>
philipj: hmmmm. microdata attributes don't have reflecting attributes anymore in the spec?

[02:16:54.0000] <philipj>
zcorpan: nope, all nuked

[02:17:15.0000] <philipj>
unusual, right?

[02:19:11.0000] <zcorpan>
maybe we should put back only the simple reflecting attributes. but i dunno

[02:19:22.0000] <zcorpan>
suppose i should file an issue

[02:20:32.0000] <philipj>
zcorpan: I doubt you'll find a browser implementor willing to add reflected attributes for things that have no effect internally

[02:23:35.0000] <ritsyy>
i am getting this warning, while running the build-script https://paste.kde.org/pzt0msrye

[02:24:13.0000] <zcorpan>
ritsyy: known issue https://github.com/whatwg/wattsi/issues/14

[02:24:57.0000] <ritsyy>
zcorpan: oh okay

[02:25:43.0000] <zcorpan>
hmm nope, that was a bug i introduced in https://github.com/Fyrd/caniuse/pull/2239/files oops

[02:25:56.0000] <zcorpan>
will fix

[02:28:21.0000] <ritsyy>
zcorpan: yes, cool

[04:36:34.0000] <ritsyy>
annevk: zcorpan: for this issue https://github.com/whatwg/html/issues/513 i am not able to figure out how the other content types will process for embed element as it is in object element https://html.spec.whatwg.org/multipage/embedded-content.html#the-object-element , any pointers?

[04:59:51.0000] <zcorpan>
ritsyy: in the current spec i think it's covered by "If the user agent can't find a suitable plugin when attempting to find and instantiate one for the algorithm above, then the user agent must use a default plugin. This default could be as simple as saying "Unsupported Format"."

[05:36:23.0000] <JakeA>
roc: in terms of tracks you want to encode those separately and have a muxer deal with the joining right?

[05:37:28.0000] <JakeA>
roc: I disagree that an encoder must be real time. For live streams, sure, but that's not always the case

[06:06:25.0000] <MikeSmith>
botie, inform zcorpan wanted to ask more about the wattsi patch when you're back around and have time

[06:06:26.0000] <botie>
will do

[06:17:24.0000] <JakeA>
annevk: what time are we planning on starting?

[06:18:33.0000] <annevk>
Around nine, likely a little later due to logistics and setting things up

[06:19:49.0000] <annevk>
I will be there 8:30 to get a temp badge, forgot my own

[06:21:27.0000] <MikeSmith>
oh, Antti was at the meeting yesterday?

[06:23:37.0000] <thatprogrammer>
when a HTTP server returns a HTTP 200 on POST with Pragma: no-cache, is the POST parameters cached by the browser?

[06:25:23.0000] <annevk>
MikeSmith: he was, and I didn't take the chance to say hi (he left early, though) 😟

[06:26:06.0000] <annevk>
thatprogrammer: what are POST parameters?

[06:32:04.0000] <thatprogrammer>
annevk: ur ? is irrelevant to my ? :)

[06:32:28.0000] <thatprogrammer>
oh, u dont even know what a POST parameter is? lol i thought u were asking what the values were >.<

[06:54:22.0000] <JakeA>
I'm pretty sure people on the internet are getting worse

[06:57:06.0000] <jgraham>
This kind of thing honestly makes me wonder if contributing to the web actually makes the world better

[06:57:33.0000] <jgraham>
Well this kind of thing, TwitterRage, the comments under any online news article, wtc. etc.

[06:58:28.0000] <botie>
zcorpan, at 2016-01-26 14:07 UTC, MikeSmith said: wanted to ask more about the wattsi patch when you're back around and have time

[08:02:47.0000] <ritsyy>
MikeSmith: annevk zcorpan some suggestions for this https://richarupela.wordpress.com/2016/01/26/outreachy-mid-term/

[08:10:57.0000] <annevk>
ritsyy: that's great, thanks for writing that, perhaps we should move some of your tips into the readme

[08:12:18.0000] <zcorpan>
MikeSmith: here now for a bit

[08:12:36.0000] <ritsyy>
annevk: yeah that would be great :)

[09:01:23.0000] <JakeA>
annevk: where should we head for this meeting? Do we need to sign in at the ground floor?

[09:08:56.0000] <ritsyy>
Domenic: in this issue https://github.com/whatwg/html/issues/502 you said that DTDs are not to be changed, is it right because in the w3c blog DTDs are mentioned too

[09:11:16.0000] <Domenic>
ritsyy: hmm what W3C blog DTDs?

[09:11:45.0000] <Domenic>
ritsyy: ah I see

[09:11:52.0000] <Domenic>
ritsyy: The important sentence is "Note that this change has no effect on namespaces. The actual namespace will continue to use HTTP, even if it is also served through HTTPS. This applies as well for XMI DTD, Schema, and SGML DTDs resources."

[09:11:57.0000] <jgraham>
ritsyy: From the point of view of the HTML parser, DTDs are opaque strings and are not dereferenced

[09:12:24.0000] <Domenic>
So what the blog is saying is "we now serve the DTD over HTTPS if you happen to change the "http:" to "https:", but the official DTD URL is still the original "http:" one.

[09:12:49.0000] <jgraham>
And it will break stuff if you change it

[09:12:58.0000] <jgraham>
(in documents)

[09:13:17.0000] <ritsyy>
Domenic: okay got that now

[09:14:41.0000] <ritsyy>
jgraham: okay understood DTDs working, thanks!

[09:20:45.0000] <JakeA>
annevk: we're in the elevator bit

[15:04:12.0000] <MikeSmith>
hober: still hoping a link[rel=mask-icon] spec will appear on the scene soon


2016-01-27
[18:48:21.0000] <gsnedders>
TabAtkins: re: https://lists.w3.org/Archives/Public/www-style/2014Jun/0053.html why isn't Grid 2 done yet? Pffff. Slacker!

[18:51:37.0000] <paradisaeidae>
	If you're in Sydney on 4th Feb: http://www.meetup.com/SVG-AU/events/228075250/

[19:00:26.0000] <MikeSmith>
paradisaeidae: I'm only going if heycam will also be there

[19:03:05.0000] <TabAtkins>
gsnedders: I didn't give a deadline on purpose!

[19:04:20.0000] <gsnedders>
TabAtkins: :(

[19:04:25.0000] <gsnedders>
TabAtkins: it would really help me now plz and thx

[19:11:42.0000] <paradisaeidae>
Hi MikeSmith, heycam availability is 'uncertain'.

[19:27:11.0000] <MikeSmith>
paradisaeidae: well mark me as uncertain also then

[19:27:31.0000] <MikeSmith>
seriously though I don't actually plan to be there

[19:28:12.0000] <MikeSmith>
was just trolling\

[19:28:27.0000] <MikeSmith>
you'll already have enough fun with Doug Schepers being there

[19:56:08.0000] <MikeSmith>
https://bugzilla.mozilla.org/show_bug.cgi?id=1234567#c1

[20:20:58.0000] <paradisaeidae>
trolls welcome!

[20:21:05.0000] <paradisaeidae>
bringIt.

[23:10:15.0000] <Domenic>
philipj: did you see my "While you're at it can you generate a list of URLs left as http: so we can check they are all namespaces/DTDs/etc.?"

[23:23:27.0000] <philipj>
Domenic: yep, but I was already writing the following comments :)

[23:23:37.0000] <philipj>
sorry to make you nervous!

[23:27:18.0000] <Domenic>
no problem :)

[23:38:05.0000] <ritsyy>
philipj: for the issues you pointed out in https://github.com/whatwg/html/pull/563#issuecomment-175448060  that needs to be included in the commit message?

[23:52:10.0000] <philipj>
ritsyy: If you make the first line "Fix #502: bla bla" that would be good

[23:52:23.0000] <zcorpan>
"dot all the ı's" nice one

[00:07:59.0000] <MikeSmith>
about comments in https://github.com/whatwg/html/pull/563 on the URLs-ending-with-# thing, isn't that the infamous http-range perma-issue that the old TAG spent literally a decade or something discussing?

[00:10:13.0000] <MikeSmith>
ritsyy: thanks for writing up https://richarupela.wordpress.com/2016/01/26/outreachy-mid-term/ and for previous blog updates about your whatwg contributions you written so far

[00:12:13.0000] <MikeSmith>
zcorpan: about https://github.com/whatwg/wattsi/pull/15 code-wise it's fine but what I had wanted to ask you about is if there is if you have a suggestion for how I can test it

[00:13:00.0000] <MikeSmith>
by changing something locally on the HTML source side rather than caniuse which I can't change directly of course

[00:13:38.0000] <MikeSmith>
or I can could I guess change something in the local cache of the caniuse data

[00:14:31.0000] <MikeSmith>
but right now I don't remember clearly what error case this would prevent

[00:14:32.0000] <zcorpan>
MikeSmith: yeah or change the code to rewrite some URL before calling CanIUseURLToID maybe

[00:14:40.0000] <MikeSmith>
OK

[00:14:58.0000] <zcorpan>
MikeSmith: mainly "seamless not found"

[00:15:16.0000] <MikeSmith>
hai

[00:15:23.0000] <ritsyy>
philipj: updated, ta!

[00:16:16.0000] <MikeSmith>
zcorpan: this kinda gets back to, it would be nice to have regression tests for the spec build

[00:16:20.0000] <ritsyy>
MikeSmith: Thank you :)

[00:16:21.0000] <MikeSmith>
maybe someday

[00:16:29.0000] <zcorpan>
MikeSmith: yeah

[00:17:58.0000] <philipj>
ritsyy: where did you update it? I already updated and pushed your commit, no need to do anythin more for that issue, I was just saying for next time :)

[00:23:57.0000] <ritsyy>
philipj: yes, i did only the commit message, if referred some time

[00:25:07.0000] <philipj>
ritsyy: ok, no harm in that, but updating the PR at this point isn't necessary

[00:25:18.0000] <philipj>
thanks for the fixes!

[00:25:38.0000] <philipj>
if you like fixing URLs I'm sure you could find a lot more that aren't W3C URLs too

[00:26:39.0000] <ritsyy>
philipj: yeah, will remember

[00:27:47.0000] <ritsyy>
philipj: like the URLs fix w3c validator pointed out?

[00:30:53.0000] <philipj>
ritsyy: well, you could find more problems like that for sure, but you could also try to extract all HTTP URLs, and write a script to check if changing them to HTTPS works

[00:31:18.0000] <philipj>
maybe something like wget on both forms and see if they are the same, not sure about the details

[00:31:39.0000] <philipj>
It's very ow priority, just some tips if you enjoy that kind of thing

[00:33:35.0000] <jochen__>
are there any parts in the html spec that require one origin to be an alias for another?

[00:33:46.0000] <jochen__>
i.e., not ones that define one origin to be an alias for another

[00:33:57.0000] <ritsyy>
philipj: yeah, it could be good thing to work on, i will try to do that, thanks :)

[00:33:57.0000] <jochen__>
but something that checks whether one is already an alias for another

[00:34:17.0000] <jochen__>
(trying to figure out which operation in blink would map to the "alias" concept)

[00:56:27.0000] <philipj>
jochen__: do you mean if the spec ever does the equivalent of x.isAliasOf(y)? If so I don't know the answer, at least

[01:00:09.0000] <philipj>
jochen__: there's "If the effective script origin of the Document is an alias, set it to the value of the effective script origin (essentially de-aliasing the effective script origin)."

[01:00:25.0000] <philipj>
(found by looking for concept-origin-alias in the source)

[01:01:25.0000] <philipj>
that also seems to be the only case, and is x.isAlias() rather than x.isAliasOf(y)

[01:01:32.0000] <philipj>
HTH

[01:18:59.0000] <philipj>
is it a principle of APIs returning promises, that if the promise is rejected the object will be left in its original state?

[03:53:00.0000] <nox>
Apple just broke Safari.

[03:58:21.0000] <zcorpan>
yay https://codereview.chromium.org/1457783005 (fixes the ugly gradient at the bottom of whatwg specs)

[05:19:59.0000] <jochen__>
this whole aliasing concept appears to not be present in Blink :-/

[05:43:40.0000] <zcorpan>
MikeSmith: about https://github.com/whatwg/html/issues/534 and https://github.com/whatwg/html/issues/541 -- it struck me that the spec has requirements for elements that are not in a document, too, but the <template> arguments apply there also probably, except that validators don't check those trees. but an in-browser validator in devtools could...

[05:44:14.0000] <annevk>
jochen__: origin aliasing?

[05:44:31.0000] <annevk>
that would be rather curious

[05:44:47.0000] <zcorpan>
MikeSmith: also i wonder if we should whine about e.g. <template><source src="" srcset=""></template>

[05:47:21.0000] <jochen__>
annevk: is there a test that can tell the difference between origin aliasing and just copying the origin?

[05:49:14.0000] <annevk>
jochen__: I'm not sure, iirc this only matters when you set document.domain, it would then not just effect the current document, but also aliased children

[05:50:19.0000] <jochen__>
ok

[05:50:39.0000] <jochen__>
so at least in blink, when setting document.domain, we don't touch the security tokens of anything but that document

[05:51:37.0000] <jochen__>
(where security tokens are the thing used to do access checks)

[05:52:47.0000] <zcorpan>
jochen__: annevk: how about an about:blank iframe when the parent browsing context has a globally unique identifier as its origin? the spec says the iframe's origin and effective script origin are alias of the creator Document, AFAICT. Would copying a globally unique identifier result in them being same-origin?

[05:52:54.0000] <annevk>
jochen__: so if you set document.domain, you no longer access <iframe src=about:blank> children?

[05:54:04.0000] <annevk>
zcorpan: it would, because the identifier would be equal, but the question is what happens when you change the effective script origin

[05:56:36.0000] <annevk>
jochen__: <script>function x(el) {document.domain = document.domain; w(el.contentWindow.document)}</script><iframe onload=x(this)></iframe> in http://software.hixie.ch/utilities/js/live-dom-viewer/ seems to be able to access the document just fine in Blink

[05:56:37.0000] <jochen__>
interestingly that still works

[05:57:01.0000] <annevk>
I guess you might implement this in some different way then

[05:58:22.0000] <jochen__>
hum hum

[05:58:30.0000] <jochen__>
so maybe this works as follows

[05:58:56.0000] <jochen__>
the token check fails and then we fall back to comparing the actual origins

[05:59:03.0000] <jochen__>
which appear to be sharable objects

[05:59:44.0000] <jochen__>
according to gdb that's the case

[06:01:32.0000] <jochen__>
now does somebody know what it means in firefox if you check that principals match

[06:01:41.0000] <jochen__>
is that checking whether the origins are aliased?

[06:02:19.0000] <annevk>
smaug____ probably knows that

[06:03:44.0000] <annevk>
Maybe you can always copy the origin, but you need to alias the effective script origin

[06:04:01.0000] <annevk>
But I might be missing a subtlety

[06:04:27.0000] <jochen__>
well, basically, i'm still trying to figure out what document.open() should do :)

[06:05:14.0000] <jochen__>
while firefox' code reads pretty close to what the spec says, it doesn't modify the origin, but it throws an security error if the principal doesn't match

[06:05:18.0000] <jochen__>
whatever that means

[06:09:02.0000] <smaug____>
/me is not too familiar with all the quirks in .domain handling. bholley is the right person to ask

[06:09:39.0000] <annevk>
jochen__: I found https://developer.mozilla.org/en-US/docs/Mozilla/Gecko/Script_security#Security_principals

[06:09:58.0000] <smaug____>
oh, the question was more about principals

[06:11:44.0000] <smaug____>
http://mxr.mozilla.org/mozilla-central/source/caps/nsIPrincipal.idl#27

[06:15:29.0000] <jochen__>
thx

[06:18:42.0000] <nox>
Hixie_, Domenic: Some links don't work in the forms chapter: https://html.spec.whatwg.org/multipage/forms.html#radio-button-state-%28type=radio%29

[06:19:13.0000] <smaug____>
jochen__: if I'm reading the code right, setting document.domain does modify the principal of the document, and since that principal can be used also by other documents (about:blank iframes, data: stuff etc), also those should get updated. But better to verify from bholley. He was fighting with .domain not too long ago

[06:20:09.0000] <smaug____>
/me has tried to stay away from .domain insanity ;)

[06:25:34.0000] <jochen__>
smart move

[06:26:45.0000] <annevk>
nox: Firefox does something weird there on copy-and-paste

[06:27:00.0000] <nox>
annevk: I see.

[06:27:02.0000] <annevk>
nox: with parenthesis, as the link is in the source, that works fine

[06:27:19.0000] <annevk>
nox: might want to file a bug and copy dao and valentin

[06:27:20.0000] <nox>
Shouldn't it work even if the characters are escaped, though?

[06:27:43.0000] <annevk>
nox: I don't think that's how fragments work, though maybe

[06:27:47.0000] <nox>
Ok.

[06:29:22.0000] <annevk>
nox: yeah actually, Firefox should decode

[06:29:42.0000] <annevk>
https://html.spec.whatwg.org/multipage/browsers.html#the-indicated-part-of-the-document

[06:29:56.0000] <annevk>
not sure why that is not working

[06:30:09.0000] <nox>
annevk: Decode what where when?

[06:30:28.0000] <nox>
annevk: Note that clicking on that link still redirects to forms.html#forms, which I find weird.

[06:31:09.0000] <annevk>
aah

[06:31:22.0000] <annevk>
maybe what happens is that the lookup script doesn't decode

[06:33:46.0000] <annevk>
nox: yeah okay, not sure where to file a bug, probably against html-build or wattsi

[06:34:22.0000] <annevk>
multipage/fragment-links.js doesn't decode the fragment in the same way that browsers are required to do and therefore gets this wrong

[06:34:37.0000] <annevk>
however, Firefox escaping that is very curious as well

[06:49:41.0000] <smaug____>
so FF seems to inherit domain changes to about:blank iframes as I expected. but perhaps you tested that already

[07:04:55.0000] <miketaylr>
zcorpan: around?

[09:04:28.0000] <zcorpan>
miketaylr: am now

[09:11:42.0000] <miketaylr>
zcorpan: i saw your reply to my question -- thanks!

[09:11:56.0000] <miketaylr>
just leaving another comment now

[11:31:51.0000] <Domenic>
My hobby: replacing 90s era screenshots https://html.spec.whatwg.org/images/sample-url.png with hand-rolled SVGs https://jsbin.com/cocodi/edit?html,output

[11:33:25.0000] <miketaylr>
amazing.

[11:36:58.0000] <nikkibee>
that's cool

[11:37:45.0000] <nikkibee>
I'm always kinda partial to the blocky look of old screenshots- though the last time I tried using Windows XP I was very frustrated, haha

[11:37:57.0000] <Domenic>
yeah it is kind of fun history

[11:38:08.0000] <Domenic>
but this one in particular has broken URLs in it so it's gotta go

[11:38:22.0000] <annevk>
What is 🗋  and why doesn't it display on my computer

[11:38:29.0000] <Domenic>
aww

[11:38:38.0000] <Domenic>
http://www.iemoji.com/view/emoji/1063/new/empty-document

[11:39:32.0000] <nikkibee>
oh yeah, that doesn't show up for me either

[11:39:43.0000] <annevk>
That is a nice change though

[11:39:55.0000] <nikkibee>
broken urls, oh geeze I didn't even think of that. that's a good catch!

[11:40:11.0000] <nikkibee>
it's kinda messed up how easily historic urls break though

[11:41:42.0000] <Domenic>
yeppp

[11:42:14.0000] <Domenic>
annevk: nikkibee: if we can find something else, maybe a globe like Firefox does, we can use that instead.

[11:42:48.0000] <Domenic>
🌎

[11:42:54.0000] <Domenic>
so colorful :-/

[11:45:08.0000] <annevk>
Domenic: Firefox has the info icon

[11:45:24.0000] <Domenic>
find me a unicode i can use. or a svg path i guess

[11:45:28.0000] <annevk>
Domenic: we could also not have it as it doesn't really add anything

[11:45:44.0000] <Domenic>
without it the top bar felt indistinct from the bottom section

[11:46:29.0000] <Domenic>
woah firefox's actual implementation of <input type=url> + <datalist> is very interesting

[11:46:40.0000] <Domenic>
it only displays the labels but when you select one it fills in the URL

[11:47:27.0000] <annevk>
Domenic: ☞

[11:47:35.0000] <Domenic>
hah

[13:06:50.0000] <annevk>
Domenic: so looking at the sortable tables thing again, scope/abbr are definitely only part of HTMLTableHeaderCellElement and have nothing to do with sortable tables

[13:07:21.0000] <Domenic>
annevk: I am pretty sure they were introduced as part of sortable tables... I also was pretty sure they play into the sorting data model

[13:08:50.0000] <Domenic>
annevk: the fact remains nobody implements the class split

[13:09:26.0000] <Domenic>
annevk: yes, scope is used to determine when you click on a th, what sorts

[13:10:00.0000] <Domenic>
annevk: all of "Forming relationships between data cells and header cells" is sorting

[13:10:40.0000] <Domenic>
+ the whole concept of given header cells "applying" to given tds

[13:12:02.0000] <annevk>
No that is all from HTML4

[13:12:37.0000] <Domenic>
... weird

[13:12:50.0000] <Domenic>
i can't find out how else it is used

[13:13:12.0000] <annevk>
https://www.w3.org/TR/html4/struct/tables.html#h-11.2.6

[13:13:39.0000] <annevk>
Forming relationships between data cells and header cells is not sorting, it's just explaining how to read a table

[13:13:58.0000] <Domenic>
I guess

[13:14:17.0000] <Domenic>
Just not used by anyone and seems like it's specified in detail way beyond what developers need

[13:49:52.0000] <annevk>
It's for assistive technology mostly I suppose

[13:50:24.0000] <annevk>
So the difference btw is that in HTML4 scope/abbr also applied to <td>

[13:50:32.0000] <annevk>
That was changed

[13:57:13.0000] <Domenic>
yeah that's what's implemented in browsers it seems

[15:15:54.0000] <MikeSmith>
Domenic: https://jsbin.com/cocodi/edit?html,output love it ❄️

[15:23:54.0000] <MikeSmith>
botie, inform zcorpan about <template><source src="" srcset=""></template> checking, if you mean the errors for the empty values, suppressing those is doable though somewhat significantly more work to implement in the checker than the attribute-is-just-missing case

[15:23:54.0000] <botie>
will do

[15:31:07.0000] <MikeSmith>
botie, inform zcorpan abou 「the spec has requirements forelements that are not in a document」I'm not sure what you mean, so please enlighten me further

[15:31:07.0000] <botie>
will do

[15:42:32.0000] <MikeSmith>
someday I hope somebody can clue me in on why my Firefox doesn't warn me on quit/close despite the fact I have browser.warnOnQuit, browser.tabs.warnOnClose, and browser.showQuitWarning all set to true


2016-01-28
[16:48:36.0000] <annevk>
Hmm, GitHub is down

[16:49:03.0000] <annevk>
Fortunately Git is decentralized harhar

[16:52:32.0000] <MikeSmith>
heh

[16:55:27.0000] <MikeSmith>
the graphs at https://status.github.com/ provide some entertainment value as we wait for life to begin again

[16:58:14.0000] <MikeSmith>
I like how the Server Availability one shows a 95% average for the day, since it was 100% all day til now that it's 0%

[16:59:04.0000] <MikeSmith>
anyway I guess I'll use the opportunity to stare out the window for a while

[22:24:41.0000] <Domenic>
philipj is on an editing blitz while annevk and I are stuck in meetings this week :D

[22:26:47.0000] <philipj>
Domenic: just doing some easy stuff to avoid the hard stuff (play() promises) :)

[22:34:25.0000] <MikeSmith>
heh

[22:51:27.0000] <botie>
zcorpan, at 2016-01-27 23:24 UTC, MikeSmith said: about <template><source src="" srcset=""></template> checking, if you mean the errors for the empty values, suppressing those is doable though somewhat significantly more work to implement in the checker than the attribute-is-just-missing case and at

[22:51:28.0000] <botie>
2016-01-27 23:31 UTC, MikeSmith said: abou 「the spec has requirements forelements that are not in a document」I'm not sure what you mean, so please enlighten me further

[22:52:24.0000] <zcorpan>
MikeSmith: i meant that both src and srcset attributes were present

[22:53:36.0000] <zcorpan>
MikeSmith: for the other, consider e.g. <script>var img = document.createElement('img');</script> - now that img element is not conforming because it lacks a src attribute

[22:54:41.0000] <ritsyy>
philipj: for these urls https://w3c.github.io/webappsec-csp/#initialise-global-object-csp (line 2661) https://w3c.github.io/webappsec-csp/#initialise-document-csp (lines 2661, 58669) , http should be done right?

[22:55:16.0000] <zcorpan>
MikeSmith: i think we need to allow arbitrary values for all attributes, so you can do <img src="{{url}}"> etc

[22:56:15.0000] <philipj>
ritsyy: I'm not sure what you mean, but see https://github.com/whatwg/html/pull/574 and the other PRs linked from https://github.com/whatwg/html/issues/573

[22:57:09.0000] <zcorpan>
MikeSmith: so what i wondered was if we should check presence of attributes based on other attributes, e.g. <template><input type=submit alt></template>, or don't bother

[22:58:13.0000] <philipj>
ritsyy: I actually think I've taken care of most issues, so it may be best to wait until they've been merged to see what remains

[22:58:15.0000] <ritsyy>
philipj: i was seeing the "broken URI fragments" of the link checker results

[22:58:29.0000] <ritsyy>
philipj: oh okay

[22:58:43.0000] <philipj>
ritsyy: the CSP one was because of en-US vs. en-GB

[22:58:55.0000] <philipj>
initialize vs initialise

[23:00:30.0000] <ritsyy>
philipj: okay yes i see that, okay will wait until the PRs merge

[00:04:10.0000] <MikeSmith>
zcorpan: so it seems like one way to consider the document-conformance requirements is that they can only apply to a specific state of a document, and certainly it's only possible to HTML-check a particular state

[00:04:43.0000] <MikeSmith>
so to me, the <script>var img = document.createElement('img');</script> case is sorta irrelevant

[00:06:08.0000] <MikeSmith>
because when you check the document in the state of the source prior to the JS executing, the contents of that script element are just an opaque string, text

[00:07:06.0000] <MikeSmith>
or when you consider it terms of the document-conformance requirements for the spec

[00:08:29.0000] <MikeSmith>
of course if we're considering (or checking) the resulting DOM, that's a different case (state)

[00:09:15.0000] <MikeSmith>
but I guess your point is that the <template> contents are similar to unexecuted JS in that regard

[00:11:09.0000] <MikeSmith>
to me I think the big difference is that we have no way to evaluate any part of arbitrary unexecuted JS in terms of the document-conformance requirements for the DOM it would produce

[00:11:39.0000] <MikeSmith>
since it could be doing anything in any number of ways

[00:12:49.0000] <MikeSmith>
but in constrast we do have a way to evaluate (static) <template> contents prior to JS execution

[00:13:12.0000] <MikeSmith>
we just clearly need to be more liberal about the requirements

[00:16:02.0000] <zcorpan>
MikeSmith: agreed on everything you just said, BUT it's not unreasonable to validate DOM at any point in time during a document's lifetime using a browser's devtools

[00:16:54.0000] <zcorpan>
MikeSmith: which could validate out-of-document trees just as easily as in-document trees, i would think

[00:17:00.0000] <MikeSmith>
yeah true

[00:17:22.0000] <MikeSmith>
incidentally I want to write devtools integration to actually do that

[00:17:54.0000] <MikeSmith>
though would be glad if somebody else beat me to it

[00:18:57.0000] <MikeSmith>
I can imagine that browser project could run their own vnu somewhere and their devtools could call that through its HTTP API and show the results

[00:19:15.0000] <MikeSmith>
sending the serialized DOM

[00:19:42.0000] <MikeSmith>
so yeah it's not actually so hypothetical a case

[00:19:43.0000] <MikeSmith>
I

[00:19:57.0000] <MikeSmith>
I am certain we will have it eventually

[00:21:54.0000] <MikeSmith>
but since for now the majority case is still people just checking their actual source, I guess I tend to think about the spec doc-conformance requirements more in terms of that, along with the checker behavior

[00:22:29.0000] <zcorpan>
MikeSmith: what do you think about skipping validation for <template> children altogether, and effectively only report parse errors? that seems like it would be simple to implement and solve the issue, but we'd miss typoed attribute names and content model violations

[00:23:47.0000] <MikeSmith>
zcorpan: that would be easier as far as the checker goes, but I think it would be less helpful to authors

[00:23:53.0000] <MikeSmith>
for the reasons you mentioned

[00:24:01.0000] <MikeSmith>
they can't catch typos

[00:25:09.0000] <MikeSmith>
and they may break the content-model rules in ways that, e.g., are going to result in a non-intuitive DOM

[00:25:28.0000] <zcorpan>
my thinking was that it could be more useful to validate the template's output, after transformation

[00:25:35.0000] <zcorpan>
aren't those parse errors anyway?

[00:26:02.0000] <MikeSmith>
yeah I guess they are more parse errors than validation

[00:26:59.0000] <zcorpan>
if someone does <template><ul> {{ if foo }} <li> bar </li> {{ /if }} </ul></template>, is it helpful to report the content model violation?

[00:28:06.0000] <MikeSmith>
and yeah it would be more useufl to validate the template's output and authors can actually do that now if they use something like the bookmarklets at https://validator.w3.org/nu/about.html#extras to send a DOM to the checker

[00:28:46.0000] <MikeSmith>
in teh case of <template><ul> {{ if foo }} <li> bar </li> {{ /if }} </ul></template>, no it's clearly not helpful to report errors there

[00:29:04.0000] <MikeSmith>
but I get your point

[00:29:36.0000] <MikeSmith>
in that it would be very hard to have the validator not report an error for that case

[00:29:54.0000] <MikeSmith>
and the only way to avoid it would just be to not check the subtree at all

[00:30:43.0000] <zcorpan>
given that we want to allow things like duplicate IDs, empty table rows, etc, i'm leaning more towards skipping validation altogether and focus our work on the more useful validate the output in a good way

[00:31:34.0000] <MikeSmith>
yeah I agree, given cases like <template><ul> {{ if foo }} <li> bar </li> {{ /if }} </ul></template> and the duplicate-ID case

[00:32:57.0000] <zcorpan>
really the content model for <template> should be "empty", since that's what it ends up being (unless you appendChild() to it)

[00:34:32.0000] <MikeSmith>
yeah, in terms of the behavior/function of it

[00:36:16.0000] <MikeSmith>
it's somewaht sad if we end up not being able to provide mistake-catching help for <template> contents in source, but I guess that gives me that much more motivation to make the devtools HTML checker integration happen, so that we can provide checking where it really should be in this regard

[01:25:37.0000] <zcorpan>
philipj is now officially the space-slash hitler :-D

[01:34:49.0000] <philipj>
zcorpan: it's a shit job, but someone has to do it

[01:35:14.0000] <philipj>
MikeSmith: there? I'm puzzled by [[ ! $QUIET = "true" || ! "$WATTSI_RESULT" = "0" ]] in build.sh

[01:37:31.0000] <philipj>
MikeSmith: trying to make wattsi run only once if there are no errors, which saves a few seconds every build

[02:01:11.0000] <zcorpan>
/me -> Arlanda

[03:31:33.0000] <ondras>
so, service worker push messages

[03:31:37.0000] <ondras>
the docs are so confusing

[03:31:47.0000] <ondras>
with respect to the "push service"

[03:31:59.0000] <ondras>
can *I* implement the push service on my server infrastructure?

[03:32:16.0000] <ondras>
or are my servers supposed to deliver push notifications by pushing them to {mozilla,google} ifrastructure?

[03:32:37.0000] <ondras>
can someone please provide some more insight -- or better, link to docs -- for this?

[04:16:31.0000] <JeanCarloMachado>
exit

[04:31:26.0000] <ondras>
JakeA: ^^

[04:44:31.0000] <MikeSmith>
philipj: here now. did you get it worked out?

[04:44:56.0000] <MikeSmith>
I have some wattsi and html-build PRs pending to fix that

[04:45:21.0000] <MikeSmith>
in the mean time you'll need to edit the build script locally

[04:45:56.0000] <MikeSmith>
ondras: I believe you cannot implement the push service on your own server yet

[04:47:13.0000] <MikeSmith>
I think google's implementation currently only works with gcm and they haven't yet implemented support for the IETF Web Push protocol spec

[04:48:18.0000] <MikeSmith>
I think Mozilla has some support for them protocol already but not sure it's enough that you could implement a server yourself and have it work with Firefox

[04:51:20.0000] <JeanCarloMachado>
         unbanme <channel>

[04:52:31.0000] <ondras>
MikeSmith: now I am puzzled. So to support all browsers, my servers would push to every vendor's push endpoint?

[04:52:57.0000] <ondras>
MikeSmith: sounds weird. Why no provide my own push enpoint as a parametrization to the service worker?

[04:53:07.0000] <ondras>
*not

[05:12:56.0000] <MikeSmith>
because there's no standard protocol that's been implemented in browsers yet

[05:13:12.0000] <MikeSmith>
well at least not in Chrome yet as far as I understand

[05:27:21.0000] <beverloo>
ondras, MikeSmith: there will be some turbulence in both implementations in the next few months

[05:27:40.0000] <beverloo>
encryption will slightly change, Chrome will switch to the Web Push protocol

[05:28:17.0000] <beverloo>
but we have slightly different requirements and will use server authentication, whereas Mozilla allows "anonymous" pushes

[05:28:23.0000] <beverloo>
happy to detail more if you're interested :)

[05:28:56.0000] <ondras>
well

[05:29:09.0000] <ondras>
I am interested in having a browser impl that allows me to specify my own endpoint

[05:29:21.0000] <beverloo>
Ah, right. No, we're very unlikely to allow that

[05:29:37.0000] <ondras>
beverloo: any particular reasons?

[05:29:42.0000] <beverloo>
the reason of the push API is exactly to avoid needing multiple persistent connections

[05:30:06.0000] <ondras>
beverloo: I mean, am I ultimately supposed to push data from my server to vendor{1..X}.pushservices.com ?

[05:30:17.0000] <beverloo>
which costs a fair amount of resources for the user (i.e. power usage) and causes network noise

[05:30:23.0000] <beverloo>
Yes

[05:30:30.0000] <ondras>
ah

[05:30:31.0000] <ondras>
:/

[05:30:47.0000] <beverloo>
The goal of the standardization process is that you don't have to care how it gets to the user (whilst the user is protected by you not having their identity, only a key that may allow you to reach them)

[05:30:57.0000] <MikeSmith>
oh, all good to hear

[05:31:06.0000] <beverloo>
tickles are easy, but if you have payloads they must be encrypted because you don't know who the man in the middle is

[05:31:48.0000] <ondras>
beverloo: my priority here would be to have a guarantee of my own infrastructure for the delivery

[05:32:00.0000] <ondras>
but I guess this is an unreal request

[05:32:29.0000] <beverloo>
you could achieve that while the user is on the page, e.g. using web sockets, but for mobile devices it's much too expensive to keep a page (or even a Service Worker) running continuously

[05:32:38.0000] <ondras>
right

[06:24:22.0000] <philipj>
MikeSmith: I got distracted with other things

[06:25:30.0000] <philipj>
MikeSmith: like the html-build PR I just created, because it was on the same lines

[07:44:56.0000] <jgraham>
smaug____: I got 48, but maybe that changes if I turn off the Fx tracking protection thing

[07:45:55.0000] <jgraham>
Yup 624 in Chromew

[07:47:40.0000] <jgraham>
In case people were wondering: *that* is the biggest threat to the web. Not "mobile has more APIs"

[07:48:28.0000] <jgraham>
It's "native apps aren't 90% ad delivery to 10% content"

[07:49:11.0000] <smaug____>
( I consider Facebook as the biggest threat to the web. )

[07:54:24.0000] <Hory_>
only indirectly by being the biggest threat to humanity

[07:56:33.0000] <jgraham>
smaug____: It's part of the same problem

[07:57:04.0000] <tobie>
Hey, annevk, dom standard asks to ping WHATWG when wanting to create new Event interface. I'm not sure that's what I need to do for the sensor spec, though.

[07:57:49.0000] <jgraham>
If most websites are slow and messy it's not a surprise if people chose to use walled gardens, which then makes those walled gardens more attractive places to publish content

[07:58:25.0000] <annevk>
tobie: heh, me neither

[07:58:47.0000] <annevk>
tobie: I wonder if Streams can be reused in some way and/or what Domenic's thoughts are

[07:59:12.0000] <tobie>
So we discussed that already and agreed that no.

[08:00:12.0000] <tobie>
(reasoning, streams are for when you want to handle/buffer back-pressure, which isn't the case with sensors--mostly)

[08:01:13.0000] <annevk>
Okay, would that not be a way to slow down the rate of signals from the sensor?

[08:01:44.0000] <tobie>
annevk: (for ref: https://github.com/w3c/sensors/issues/70)

[08:01:55.0000] <annevk>
Anyway, if you want to use events, it's mostly suggesting to talk to us to see if your new Event subclass makes sense

[08:02:10.0000] <annevk>
Which I think shouldn't be a problem for you, but who knows 😛

[08:03:00.0000] <tobie>
yeah--who knows.

[08:03:42.0000] <annevk>
So do all sensors really work identically enough that a single pattern makes sense?

[08:04:09.0000] <tobie>
So basically, there are two broad categories of sensors. Those that are polled at regular intervals (e.g. gyroscopes, etc.)

[08:05:04.0000] <tobie>
... and those that are a bit smarter and sort of emit an event when they change beyond a certain threshold.

[08:06:02.0000] <tobie>
In practice, though, this distinction can be a bit muddied, as the latter type can actually be implemented in terms of the former.

[08:06:31.0000] <tobie>
I'm still struggling to find the right way to represent these two types on the platform.

[08:06:55.0000] <tobie>
See https://github.com/w3c/sensors/issues/75 for details.

[08:07:16.0000] <annevk>
I guess for polling perhaps just a method that returns a promise

[08:07:24.0000] <annevk>
And the treshold ones seems like an event

[08:08:24.0000] <tobie>
the polling is done at the hardware abstraction layer.

[08:08:58.0000] <tobie>
so the implementation basically sets a frequency and listens to the ouput.

[08:09:41.0000] <tobie>
So basically both categories are event targets.

[08:10:11.0000] <tobie>
One gets an event a regular intervals. The other on configurable changes.

[08:10:34.0000] <tobie>
What I had in mind for the Event interface was something like:

[08:11:04.0000] <tobie>
SensorReadingEvent : Event { readonly attribute SensorReading reading }

[08:12:56.0000] <tobie>
SensorReading basically contains a High resolution timestamp, an identifier to the sensor and sensor values (e.g. temperature, longitude, etc.)

[08:22:35.0000] <jochen__>
annevk: i think the idl level thing is a different thing

[08:22:42.0000] <jochen__>
annevk: that's about who may access that API at all

[08:22:57.0000] <jochen__>
while the in code check is about the origin, not the effective origin

[08:22:58.0000] <annevk>
ah

[08:23:06.0000] <jochen__>
MDN also mentions this

[08:23:36.0000] <jochen__>
https://developer.mozilla.org/en-US/docs/Web/API/Document/open#Gecko-specific_notes

[08:25:56.0000] <annevk>
thanks

[08:28:58.0000] <annevk>
jochen__: so do you want to make the style edits or shall I do that?

[08:49:48.0000] <jochen__>
I thought I already did?

[08:49:55.0000] <jochen__>
Maybe I forgot to push

[08:51:07.0000] <jochen__>
Apparently, I didn't :-(

[08:51:21.0000] <jochen__>
On the subway right now, will push later

[08:56:49.0000] <annevk>
ta

[09:15:14.0000] <Domenic>
tobie: is there a reason SensorReading is a separate interface instead of just properties on the event?

[09:16:21.0000] <tobie>
Domenic: https://github.com/w3c/sensors/issues/82

[09:17:21.0000] <Domenic>
Hmm the overwriting timestamp question is tricky

[09:17:33.0000] <Domenic>
I think last we checked event timestamps cannot be changed as it breaks the web :(

[09:17:51.0000] <Domenic>
so dom needs high res timestamps as a separate property

[09:17:51.0000] <Domenic>
annevk should just add that

[09:18:31.0000] <tobie>
Domenic: there's also the oneshot, promise-returning method which needs to return a Reading object, not an event.

[09:18:35.0000] <annevk>
I thought that was still ongoing

[09:18:54.0000] <Domenic>
tobie: ah if that's the case then just a property makes sense to me

[09:19:00.0000] <annevk>
rbyers should know

[09:19:11.0000] <Domenic>
I think it broke Angular according to bz, which was game over

[09:20:27.0000] <tobie>
Could also do `SensorReadingEvent implement SensorReading` or something of the like.

[09:20:56.0000] <annevk>
I see

[09:21:44.0000] <annevk>
tobie: I was thinking that, little tricky with the initdict, but doable

[09:23:16.0000] <tobie>
At which point I could also do: `Sensor implement SensorReading`

[09:24:32.0000] <tobie>
So instead of doing: sensor.reading.temperature or event.reading.temperature you'd do sensor.temperature and event temperature in both cases.

[09:26:56.0000] <tobie>
I'm not sure if this isn't trading looks against cognitive load, though. E.g. what does sensor.timestamp mean? (Compared to sensor.reading.timestamp)

[09:28:54.0000] <Domenic>
Yeah I prefer separate object

[09:29:04.0000] <Domenic>
If SensorReading is going to be a first-class thing in other parts of the API it should be that here too

[09:29:16.0000] <Domenic>
Ideally sensor.hrTimestamp or whatever we end up with is === sensor.reading.timestamp

[09:29:25.0000] <Domenic>
(Hmm I think we spell it timeStamp)

[09:29:48.0000] <tobie>
well, that's a hard one, though.

[09:30:05.0000] <tobie>
is it event timestamp or sensor reading timestamp?

[09:30:07.0000] <Domenic>
sorry s/sensor.hrTimestamp/event.hrTimestamp

[09:30:11.0000] <Domenic>
ah i see

[09:30:15.0000] <Domenic>
so maybe not ===

[09:30:18.0000] <Domenic>
that seems reasonable too

[09:30:26.0000] <Domenic>
i think people probably prefer the reading timestamp

[09:30:29.0000] <tobie>
yup

[09:31:00.0000] <tobie>
ideally latency = event.hrtimestamp - reading.timestamp

[09:31:49.0000] <tobie>
which screams for using hrtimestamp on the SensorReading too (or whatever it is going to be).

[09:32:35.0000] <tobie>
Thanks both of you (annevk + Domenic ). This is super helpful feedback.

[09:33:09.0000] <Domenic>
we should dig up those bugs and come to a conclusion and put it in the dom spec

[09:33:41.0000] <tobie>
<3

[10:01:13.0000] <jochen__>
annevk: pushed the formating changes

[10:32:40.0000] <Domenic>
yay, jochen__'s first HTML spec patch! \o/

[14:32:06.0000] <annevk>
I have another yay, we resolved the outstanding questions for HTML cross-origin objects, so once I integrate the answers, we can figure out how to merge the whole thing into the HTML standard


2016-01-29
[22:46:21.0000] <MikeSmith>
philipj: if you're around on IRC now, do you want to chat here about https://github.com/whatwg/wattsi/issues/16 or want me to add a comment to the issue?

[22:59:25.0000] <MikeSmith>
philipj: commented at https://github.com/whatwg/wattsi/issues/16#issuecomment-176606629 Just based on code inspection without testing, but I'm pretty sure that's accurate

[23:00:31.0000] <philipj>
MikeSmith: I am here

[23:01:47.0000] <philipj>
but your reply is all I need to tinker a bit

[23:01:52.0000] <MikeSmith>
k

[23:02:08.0000] <MikeSmith>
if it doesn't work lemme know

[23:02:24.0000] <MikeSmith>
or if it fails to compile or something

[23:03:00.0000] <MikeSmith>
Pascal indenting and block syntax is funky but I think you can get the idea from looking at the surrounding code

[23:13:45.0000] <philipj>
MikeSmith: Emacs knows how to indent this thing at least

[23:15:19.0000] <MikeSmith>
ah good

[23:15:33.0000] <MikeSmith>
Emacs knows everything :)

[23:18:20.0000] <philipj>
MikeSmith: got a crash simply by adding Warn('Unused reference '), can one get a symbolized backtrace?

[23:18:54.0000] <philipj>
/me finds MODE=DEBUG

[23:18:59.0000] <MikeSmith>
well that's weird

[23:19:06.0000] <MikeSmith>
yeah would try that first

[23:21:01.0000] <philipj>
well, merely trying to build with DEBUG or FAST-DEBUG with no changes crashes with EIntOverflow

[23:21:18.0000] <philipj>
and no usable stack or anything

[23:21:26.0000] <philipj>
maybe this sucks less on linux

[23:23:01.0000] <philipj>
MikeSmith: do you also get a million build warnings?

[23:23:36.0000] <MikeSmith>
yes, sorry, but I have a fix for that in another pending PR

[23:23:51.0000] <MikeSmith>
https://github.com/whatwg/wattsi/pull/11

[23:24:09.0000] <philipj>
so the actual crash I've added (back to MODE=RELEASE) is EAccessViolation exception: Access violation

[23:24:18.0000] <philipj>
I guess that's a segfault?

[23:24:55.0000] <MikeSmith>
I guess it must be yeah

[23:25:07.0000] <MikeSmith>
it's never segfaulted on me yet

[23:26:16.0000] <MikeSmith>
I guess I should just try this myself in my environment and see what happens

[23:29:56.0000] <philipj>
MikeSmith: https://github.com/whatwg/wattsi/pull/17 is what I did

[23:30:41.0000] <MikeSmith>
k, will pull that branch and try

[23:47:48.0000] <MikeSmith>
philipj: no segfault for me in my environment

[23:48:18.0000] <MikeSmith>
and I get a (long) list of unused references emitted as expected

[23:50:54.0000] <philipj>
mkwst: did you see https://github.com/whatwg/html/pull/574

[23:51:11.0000] <philipj>
MikeSmith: well that sucks, then I'll have to debug it :/

[23:51:18.0000] <mkwst>
If it happened in the last two weeks, you can safely assume I haven't seen it.

[23:51:19.0000] <philipj>
but not today, for sure

[23:51:22.0000] <mkwst>
So buried.

[23:51:36.0000] <mkwst>
Will look in a minute.

[23:51:54.0000] <philipj>
mkwst: not critical, just a typo in CSP integration and a question for you

[23:52:42.0000] <philipj>
MikeSmith: what are the last few refernces listen for HTML (not DEV) for you?

[23:52:49.0000] <philipj>
not sure if mine crahes before or after the last one

[23:53:07.0000] <MikeSmith>
mkwst: https://github.com/whatwg/html/pull/523 is also waiting on you but not in any way urgent so feel free to keep it on the back burner

[23:53:21.0000] <MikeSmith>
philipj: XSLT10 is the last one

[23:53:54.0000] <MikeSmith>
XHTML1, XHTMLMOD, XPATH10 before it

[23:54:24.0000] <philipj>
MikeSmith: interesting, the last I see is XHTMLMOD

[23:54:28.0000] <philipj>
so close :)

[23:55:01.0000] <MikeSmith>
oops

[23:55:14.0000] <MikeSmith>
sorry I misunderstood your question

[23:55:21.0000] <MikeSmith>
flip that around

[23:55:46.0000] <MikeSmith>
XHTMLMOD is the last I see for HTML (not DEV)

[23:55:53.0000] <MikeSmith>
those are what I see for DEV

[23:55:58.0000] <philipj>
ok...

[23:56:07.0000] <philipj>
well then I got them all, then crashed later for some reason

[23:56:25.0000] <MikeSmith>
interesting

[23:56:50.0000] <MikeSmith>
so I wonder if that crash might actually be unrelated to your change

[23:57:09.0000] <mkwst>
philipj: You found a bug. I responded on the patch. Also, hooray for Z's, boo for S's!

[23:58:55.0000] <mkwst>
MikeSmith: LGTM'd your patch. Thanks for cleaning that up, and apologies for the delay.

[00:00:02.0000] <MikeSmith>
mkwst: no worries & thanks

[00:02:07.0000] <philipj>
mkwst: I wouldn't mind switching HTML over to en-US-x-foolip, but so much work

[00:02:28.0000] <mkwst>
s/ou/o/g

[00:02:33.0000] <mkwst>
s/s/z/g

[00:02:34.0000] <mkwst>
done!

[00:02:51.0000] <philipj>
so simple, I'll do it now!

[00:03:34.0000] <philipj>
uzer agent muzt

[00:03:45.0000] <philipj>
silly americans

[00:03:55.0000] <mkwst>
zoundz legit.

[00:04:24.0000] <MikeSmith>
hah

[00:05:34.0000] <MikeSmith>
mkwst: hey while you're around, also been wondering if you know whether there are plans to take the Referrer Policy and Suborigins specs to FPWD any time soon

[00:06:10.0000] <mkwst>
referrer policy is already a WD. poke jochen__ and Emily about its status.

[00:06:46.0000] <MikeSmith>
k

[00:06:47.0000] <mkwst>
I think Joel is solidifying the Suborigins proposal in the hopes of having something publishable this quarter.

[00:06:55.0000] <MikeSmith>
super

[00:06:57.0000] <MikeSmith>
thanks

[00:07:10.0000] <mkwst>
np

[00:10:27.0000] <jochen__>
I want to add Ping-From and Emily wants to brush up the referrer policy header

[00:10:31.0000] <jochen__>
then we'll do another WD

[00:12:27.0000] <MikeSmith>
jochen__: great to hear

[00:12:56.0000] <MikeSmith>
I see it's been over a year since the previous WD publication (the FPWD)

[00:23:28.0000] <mkwst>
If/when we implement automagical WD publication (I think TabAtkins is doing something with zip files? Or maybe everything's already done?), the WD will be just as up to date as the ED, which was last touched in November.

[00:34:14.0000] <MikeSmith>
yes

[00:34:17.0000] <MikeSmith>
please

[00:34:35.0000] <MikeSmith>
if you need help lemme know

[00:35:25.0000] <MikeSmith>
mkwst: kinda surprised that wendy hasn't gotten y'all set up with that already

[00:36:08.0000] <MikeSmith>
but maybe she's waiting for Brad or the WG to formally decide to it

[00:36:35.0000] <mkwst>
We have tokens, and we have the formal whatever we need.

[00:37:03.0000] <mkwst>
I think we were waiting for better integration between Bikeshed and Specberus/Echidicantspellthename.

[00:37:24.0000] <Ms2ger>
mkwst, or just move everything to BS

[00:37:48.0000] <MikeSmith>
mkwst: ok I think that landed last week

[00:37:51.0000] <mkwst>
Ms2ger: Pretty much everything is Bikeshed. I think SRI is the only non-bikeshed spec that's active.

[00:38:18.0000] <MikeSmith>
that is, the zip-file support (actually tar I think) landed in the pub-system code

[00:38:47.0000] <mkwst>
MikeSmith: Ok. Are there docs anywhere? I can poke at it.

[00:39:44.0000] <MikeSmith>
mkwst: lemme check

[00:41:20.0000] <MikeSmith>
mkwst: https://lists.w3.org/Archives/Public/spec-prod/2016JanMar/0017.html

[00:42:01.0000] <MikeSmith>
mkwst: specifically https://github.com/w3c/echidna/wiki/Preparing-your-document#tar-file I guess

[00:42:55.0000] <mkwst>
That seems to only support respec (https://github.com/w3c/spec-generator/tree/master/generators).

[00:43:06.0000] <mkwst>
But I guess I can just wire it up manually.

[00:44:25.0000] <mkwst>
Basically, I was waiting for someone else to write some bash scripts. :)

[00:44:27.0000] <MikeSmith>
mkwst: it intends to support Bikeshed as well, I'm certain

[00:44:30.0000] <MikeSmith>
heh

[00:44:57.0000] <MikeSmith>
well I know it had been waiting on the W3C systeam to add that upload support, not waiting on Tab for anything

[00:45:33.0000] <MikeSmith>
previously they had supported tarred-up Bikeshed files if you posted them at some URL and it would grab that

[00:46:16.0000] <mkwst>
Yeah. It's the posting at some URL bit that I don't actually want to do. I generate the ED, and publish that. I'd prefer not to publish a copy of the WD somewhere at the same time.

[00:46:24.0000] <MikeSmith>
what they added recently is that you can just upload a tar file to the spec-generator tool (instead of pointing it at some URL)

[00:46:38.0000] <MikeSmith>
yeah, agreed

[00:46:46.0000] <mkwst>
Ok. I bet TabAtkins already has something then.

[00:47:13.0000] <MikeSmith>
yeah probably worth waiting til TabAtkins is around to ask him

[00:49:26.0000] <MikeSmith>
mkwst: oh btw I was told just now by Antonio from the systeam that there's unfortunately a (small) bug they need to fix before this will actually work

[00:49:30.0000] <MikeSmith>
https://github.com/w3c/echidna/issues/252

[00:50:59.0000] <mkwst>
In that case, I'll wait. :)

[00:51:17.0000] <MikeSmith>
yeah

[00:52:34.0000] <MikeSmith>
if/when you want direct help or somebody to ask who's actually working on the tooling, Antonio says to please feel free to contact him at antonio⊙wo

[00:55:06.0000] <MikeSmith>
Ms2ger: I have a specific question about Firefox Nightly troubleshooting but not sure if I want to (re)spam #developers with it, since I did that yesterday already and I don't want to wear out my welcome there

[00:55:26.0000] <MikeSmith>
maybe I can ask you here

[01:05:22.0000] <Ms2ger>
MikeSmith, sure, though I don't do much work on Fx anymore :)

[01:14:47.0000] <MikeSmith>
Ms2ger: OK the thing is, I share a profile between my Firefox and Nightly, and recently my Nightly started hanging every time I restarted it, just spinning indefinitely (OSX beachball). So I did some troubleshooting and discovered it seemed to be due to my webappsstore.sqlite file, which I guess it where localstorage stuff it stored

[01:15:34.0000] <MikeSmith>
anyway I would like to open a bug for it but I don't want to post my webappsstore.sqlite file because of course I guess it must have credentials in it. Or might at least

[01:15:46.0000] <Ms2ger>
Mhmm

[01:16:04.0000] <MikeSmith>
but anyway I can 100% reproduce the problem with that file if I use it with Nightly, but not with Firefox

[01:16:12.0000] <Ms2ger>
I'm not sure, might be that we changed something about that file

[01:16:18.0000] <MikeSmith>
OK

[01:16:32.0000] <Ms2ger>
Have you checked when it started happening?

[01:17:18.0000] <MikeSmith>
I tried it bit by rebuilding my Nightly from older revisions, going back to September I think

[01:17:42.0000] <Ms2ger>
Huh

[01:17:57.0000] <MikeSmith>
but it still happened not matter how far back I went so I started thinking it might not have been caused by a recent change

[01:18:07.0000] <MikeSmith>
anyway, it's not causing me problems personally now

[01:18:51.0000] <MikeSmith>
but I would like to do the good-citizen thing and try to help get it investigated by whoever is knowledgeable

[01:19:23.0000] <MikeSmith>
philipj: will you raise an HTML PR to remove those unused references, or do you want me to?

[01:20:31.0000] <philipj>
MikeSmith: I'm doing it

[01:21:02.0000] <Ms2ger>
MikeSmith, file a bug anyway? Not sure where, though

[01:21:08.0000] <philipj>
MikeSmith: but you can LGTM https://github.com/whatwg/html/pull/57 for me

[01:25:51.0000] <MikeSmith>
philipj: that issue? it's closed...

[01:26:42.0000] <MikeSmith>
it's not a PR either, but an issue 😕

[01:37:06.0000] <philipj>
MikeSmith: oops, typo: https://github.com/whatwg/html/pull/574

[02:45:47.0000] <Ms2ger>
dbates++

[02:47:42.0000] <Ms2ger>
Oh wow, webkit threw an XMLHttpRequestException from importScripts

[02:50:03.0000] <jgraham>
!¡

[04:46:21.0000] <Ms2ger>
miketaylr, ping

[04:49:32.0000] <Ms2ger>
Or anyone else who's worked on the WebKit matrix api

[04:57:35.0000] <Ms2ger>
zcorpan, hey, what's the testing situation for webkitcssmatrix?

[04:59:27.0000] <zcorpan>
Ms2ger: the changes i made to Geometry don't have tests yet. miketaylr would know better what exists today for it

[05:00:10.0000] <Ms2ger>
You know his timezone?

[06:01:47.0000] <MikeSmith>
https://github.com/whatwg/html/pull/574 LGTM'ed. Happy to also merge it for you if you want; otherwise, please merge away

[06:03:15.0000] <MikeSmith>
Ms2ger: miketaylr is US/Central I think

[06:03:37.0000] <MikeSmith>
so probably not online yet

[06:04:04.0000] <MikeSmith>
for another 1 hour or 2 more

[06:06:48.0000] <TabAtkins>
Domenic: scope/abbr are def old and used for a11y. I use scope regularly to mark up tables. I learned about this like 8 years ago.

[06:07:57.0000] <TabAtkins>
mkwst: Wait for me to get back from vacation. Spending Feb on solid Bikeshed dev, and hooking Bikeshed to Echidna is high priority.

[06:09:11.0000] <TabAtkins>
They added the piece I needed (uploading a tar of resources, rather than a URL of the resources), so I should have to much trouble doing it now.

[06:12:44.0000] <annevk>
TabAtkins: the confusion was that they used to be on td and th, we now have them on th only

[06:21:36.0000] <TabAtkins>
Oh, OK

[06:22:12.0000] <TabAtkins>
It seems weird for a td to have scope.

[06:25:16.0000] <annevk>
Yes

[07:40:08.0000] <annevk>
Domenic: I'm getting close to the point where I can integrate https://github.com/annevk/html-cross-origin-objects into HTML

[07:40:35.0000] <annevk>
Domenic: I would appreciate thoughts on how we want to handle that

[07:41:42.0000] <annevk>
Domenic: in terms of style and where to put all the abstract operations

[07:42:40.0000] <annevk>
I guess one thing I should do reorder since WindowProxy is defined first by HTML

[07:44:46.0000] <annevk>
Such a satisfying feeling that this is nearing completion

[08:35:40.0000] <Ms2ger>
annevk, \o/

[09:23:36.0000] <annevk>
philipj: if you go to issues and then labels you can add/change labels, added this one for you

[09:26:24.0000] <philipj>
annevk: thanks!

[09:34:47.0000] <annevk>
Domenic: it seems there's also a couple open bugs on structured cloning

[09:36:04.0000] <annevk>
Maybe I'll look into that after cross-origin objects, although I was also thinking of looking into web components, hmm

[09:37:14.0000] <annevk>
philipj: https://www.w3.org/Bugs/Public/show_bug.cgi?id=29066 got fixed, no?

[11:07:42.0000] <annevk>
wanderview: any ETA on https://github.com/whatwg/fetch/pull/194?

[11:07:45.0000] <annevk>
JakeA: ^^

[11:07:58.0000] <wanderview>
argh

[11:08:33.0000] <wanderview>
github method for tracking review requests sucks :-\

[11:10:23.0000] <JakeA>
Thanks for the nudge

[11:12:43.0000] <annevk>
wanderview: I wouldn't mind a notification of outstanding PRs every couple of days

[11:15:33.0000] <annevk>
wanderview: JakeA: btw, search for "Overview.src.html" as the diff of that resource is almost certainly easier to read

[12:00:21.0000] <Domenic>
annevk: I think in general I would probably isolate these into separate sections defining WindowProxy and Location, keeping all AOs under those sections, similar to your repo

[12:00:57.0000] <annevk>
Domenic: should I rename slots and such so we have concepts?

[12:01:17.0000] <annevk>
Domenic: I guess what I'm asking for is a review on naming and conventions now, before I convert the whole thing to HTML

[12:01:19.0000] <Domenic>
annevk: I would do that for existing objects (Window) but for objects which you are defining from scratch using slots makes sense

[12:01:29.0000] <Domenic>
Hmm OK

[12:01:30.0000] <Domenic>
I can do that

[12:01:35.0000] <Domenic>
open an issue and assign to me

[12:01:39.0000] <annevk>
That'd be great

[12:11:48.0000] <annevk>
wanderview: totally onboard with SQL btw

[12:12:22.0000] <annevk>
wanderview: perhaps attempt to get an (GSOC) intern to write a standard?

[12:12:52.0000] <wanderview>
annevk: sounds like a cruel thing to do to a young person

[12:13:18.0000] <wanderview>
in that I don't have high hopes it would go anywhere

[12:13:21.0000] <annevk>
wanderview: ok, let them implement streams and then you do it

[12:13:43.0000] <annevk>
I dunno, it seems like everyone has that under the hood already...

[12:14:03.0000] <wanderview>
all the reasons websql was torpedo'd previously

[12:14:37.0000] <wanderview>
annevk: at orlando sicking was suggesting to me any sql standard would have to guarantee algorithm complexity of every query combination... impossibly high bar being set by people

[12:15:07.0000] <annevk>
I don't understand what that means

[12:15:23.0000] <annevk>
Performance-wise?

[12:15:30.0000] <wanderview>
annevk: a join on an index must be at most O(log n), etc

[12:15:48.0000] <wanderview>
which the IDB spec doesn't guarantee, etc... seems kind of silly to require

[12:15:56.0000] <annevk>
Hmm, agreed

[12:16:07.0000] <annevk>
I think the most pressing problem has always been that SQL has been undefined

[12:16:40.0000] <wanderview>
I think we could define an sql subset/variant and then provide an open source validation library people could link in

[13:58:08.0000] <annevk>
tobie: is there some kind of limit to the amount of folks you can at-mention? https://github.com/w3c/web-platform-tests/pull/2531

[13:58:24.0000] <tobie>
Seems so.

[13:58:30.0000] <tobie>
annevk ^

[14:10:00.0000] <MikeSmith>
makes sense, given that the github API sets limits

[14:10:20.0000] <MikeSmith>
like, you can only get 30 issues at a time from the issues API

[14:10:47.0000] <MikeSmith>
maybe the at-mention limit is 30

[14:19:10.0000] <annevk>
tobie: ta

[14:19:27.0000] <tobie>
:)

[14:58:12.0000] <miketaylr>
botie: inform Ms2ger we have some reftests in moz-central, but no wpt yet for webkitcssmatrix -- i have plans to work on that (it's unclear if we can just port Apple's, IANAL). also on PTO until tuesday, but probably will end up on irc at some point between now and then

[14:58:12.0000] <botie>
will do

[14:58:16.0000] <miketaylr>
gracias botie

[15:01:11.0000] <miketaylr>
botie: inform Ms2ger s/reftests/mochitests/

[15:01:11.0000] <botie>
will do


2016-01-30
[16:07:02.0000] <roc>
annevk, wanderview: we're doing SQL now? why?

[16:07:41.0000] <roc>
Jonas is quite right, by the way. If you don't spec the same query planner then you have algorithms with different orders of complexity on different browsers, which is intolerable.

[16:07:57.0000] <roc>
IndexedDB doesn't have that problem

[16:09:56.0000] <roc>
maybe the spec doesn't say what the complexity should be, but it's pretty clear lookup should be O(1) or O(log N), and iteration the same per item, amortized. The difference between O(1) and O(log N) is not significant in practice. O(1) vs O(N) vs O(N^2) very much is

[16:17:34.0000] <jgraham>
Is the some repository I'm not subscribed to, or something?

[16:17:58.0000] <sicking>
roc: i'm also wondering where this discussion is happening

[16:20:04.0000] <annevk>
Just an idea, but the fact that developers write new SQL code against WebKit/Chromium is a problem

[16:20:31.0000] <sicking>
roc: and you are correct that the IDB spec designers all assumed that reading/writing would be O(log N) and iteration would be O(1)

[16:21:19.0000] <sicking>
I think count() is the only function which I'm uncertain about the complexity for

[16:22:24.0000] <jgraham>
What's the argument against putting the same effort into optimising https://github.com/google/lovefield ?

[16:22:37.0000] <sicking>
annevk: if we get to the point that we'll have to ship websql, the only realistic option is to just embed sqlite

[16:22:56.0000] <sicking>
annevk: writing a spec is effectively a waste of time

[16:23:42.0000] <sicking>
and then cross our fingers that sufficiently backwards compatible versions of sqlite will continue to be maintained forever

[16:25:17.0000] <sicking>
i guess another implementation strategy would be to run sqlite through emscripten

[16:29:54.0000] <jgraham>
Right, but if you can do that, why ship it with browsers?

[16:31:00.0000] <jgraham>
An interesting exercise might be to work out what would stop sqlite-though-emscripten happening today, and plug those gaps

[16:31:04.0000] <jgraham>
if any

[16:32:34.0000] <sicking>
you'd need something like the filesystem API

[16:32:49.0000] <sicking>
since you need the ability to do in-place modification of files

[16:33:21.0000] <annevk>
Perhaps if we add fulltext search to IDB we can sway some folks

[16:33:26.0000] <sicking>
you might also need a locking primitive, though you can do that with a shared worker

[16:46:30.0000] <roc>
you could use indexedDB as a block-based storage backend.

[16:46:52.0000] <sicking>
roc: yeah, but i suspect you'd have performance problems

[16:46:59.0000] <roc>
SQLite over IndexedDB over SQLite would be a bit crazy, but whatever

[16:47:11.0000] <roc>
sicking: it wouldn't be optimal, but if you want optimal, you don't use SQL anyway

[16:48:11.0000] <sicking>
roc: perf would need to be tested for sure. But I think using IDB as block storage might be problematic

[16:48:19.0000] <roc>
if WebSQL is or becomes necessary for meaningful Web compat, then that would suck, but I guess we'd have to spec it. I think that's the only reason to.

[16:48:34.0000] <sicking>
indeed

[16:49:00.0000] <sicking>
though i'd argue that even then writing a spec isn't worth it. Or rather, I think the spec should just be "be reasonably compatible with SQLite"

[16:49:24.0000] <sicking>
since i doubt that we'd write a sql engine compatible with a spec. We'd just ship sqlite

[16:52:07.0000] <Guest38441>
hi

[16:53:02.0000] <Guest38441>
Could I suggest an new function for the canvas handling here? Or is it better to do it on the mailing list?

[17:11:39.0000] <John2016>
Hi! I just was logged in as Guest38441. After logging out some minutes ago I looked at the logbot at http://logs.glob.uno/?c=freenode%23whatwg&s=today

[17:11:50.0000] <John2016>
and it simply doesn't show the text I posted here.

[17:12:31.0000] <John2016>
Could anyone who was online like 15 minutes ago tell me if my question showed up at all?

[17:13:22.0000] <John2016>
I just post my question again: Could I suggest an new function for the canvas handling here? Or is it better to do it on the mailing list?

[17:13:23.0000] <John2016>
Maybe someone could post it on the mailing list for me, please? :) I'm not good in using mailing lists.

[17:13:32.0000] <John2016>
When drawing a text on a canvas, a so far open path or subpath is closed and that way discarded. Could there be a function implemented like putTextPath?

[17:13:33.0000] <John2016>
So I can use the textpath in a row with other subpaths.

[17:13:33.0000] <John2016>
Annex: I wouldn't wonder that would be much slower for just drawing a single text, but for that the current functions would still be implemented.

[17:13:42.0000] <John2016>
2. Annex: I'm very sure, the current textdrawing functions are using paths themselves, as there is a high rated answer on stackoverflow on how to make a textdrawing animation, and the answer shows that using .setLineDash does that trick.

[17:13:42.0000] <John2016>
http://stackoverflow.com/questions/29911143/how-can-i-animate-the-drawing-of-text-on-a-web-page

[17:13:42.0000] <John2016>
Feel free to send me a link to an appropriate mailing list for suggesting a new function for the canvas handling, please! Thank you!

[17:13:42.0000] <John2016>
My Email is: John.rwhwh⊙sd

[17:40:28.0000] <zcorpan>
/me emailed John2016

[17:54:03.0000] <annevk>
🙌

[19:54:50.0000] <rbyers>
annevk, Domenic: sorry for delay (was on a flight to Sydney).  We're still pushing ahead with shipping DOMHighRes timestamp - I'm told the angular breakage appears tolerable.  https://www.chromestatus.com/features/5523910145605632

[19:56:14.0000] <rbyers>
But it may still fail.  If it does, yes we should just add a new property.

[01:06:48.0000] <Domenic>
rbyers: oh cool, that's much better than I hoped. And it's in 49 which should be seeing some pretty widespread usage. Good to hear.

[07:37:52.0000] <annevk>
That is great to hear

