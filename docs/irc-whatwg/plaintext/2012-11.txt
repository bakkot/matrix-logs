2012-11-01
[17:18:10.0000] <a-ja>
Version: Living ???

[17:21:52.0000] <GPHemsley>
Hixie: Well, it was merely half a sentence that I could add. (It's already there, commented out.)

[17:22:40.0000] <GPHemsley>
hsivonen: Could you explain what you mean by "prior art" in this context? The two MIME types you mentioned don't match what Hixie and I were discussing.

[17:23:19.0000] <Hixie>
zcorpan: my recommendation is to just do the FSAs every now and then

[17:23:22.0000] <Hixie>
GPHemsley: hm?

[17:23:53.0000] <zcorpan>
Hixie: right

[17:26:01.0000] <zcorpan>
hmm. reading licenses is not what i wanted to do tonight. :-(

[17:26:49.0000] <Hixie>
so do something else :-)

[17:27:02.0000] <GPHemsley>
Hixie: My addition of a 'font' type was somewhat back-handed, as in "*if* you have one, then it goes here"

[17:27:16.0000] <GPHemsley>
never saying that you might be expected to or anything

[17:27:58.0000] <zcorpan>
the something else will be sleeping. gn

[17:32:14.0000] <Hixie>
zcorpan: nn

[17:32:39.0000] <Hixie>
GPHemsley: not really sure how it would affect the algorithm. The algorithm is pretty much set in stone by legacy practice.

[17:32:50.0000] <Hixie>
gotta go. bbl.

[17:34:24.0000] <GPHemsley>
Hixie: It can't be too "legacy" if it includes WebP/WebM

[17:34:35.0000] <zcorpan>
http://simon.html5.org/dump/compressive/test.html now has a zoom thingie. the containing dir also has more image versions (i think 4:2:0 is interesting). ok now going for real

[19:24:49.0000] <Hixie>
GPHemsley: not clear it should include WebP and WebM, but yeah

[19:24:56.0000] <Hixie>
GPHemsley: most of it is legacy, certainly

[20:39:34.0000] <wirepair_>
well i'm amazed at how many people have CORS headers completely wrong.

[20:40:29.0000] <wirepair_>
anyone know when the access-control-allow-origin header went from allowing multiple origins to only allowing a single one in it's header value?

[00:21:58.0000] <Youdaman>
g'day

[01:37:37.0000] <hsivonen>
why is the CR discussion expected to be long?

[01:37:53.0000] <Ms2ger>
Because it's the HTML WG?

[01:38:29.0000] <hsivonen>
possibly

[01:46:07.0000] <hsivonen>
still no new memes :-(

[01:46:20.0000] <Ms2ger>
Clearly everyone is gathered around TimBL

[01:47:17.0000] <hober>
hsivonen: patches welcome :)

[01:49:46.0000] <hsivonen>
not a living standard: a living bug list

[01:52:07.0000] <MikeSmith>
heh

[01:52:28.0000] <hober>
night of the living bug list

[01:52:55.0000] <jgraham>
hsivonen: Maybe the "features at risk" discussion will be long?

[01:53:08.0000] <jgraham>
At least I plan to object to some of them

[01:53:14.0000] <hober>
jgraham: it probably should be, given how random the current list is

[01:53:23.0000] <Ms2ger>
Just mark everything at risk

[01:53:44.0000] <hsivonen>
what's the id thing about?

[01:57:03.0000] <annevk>
I think MIME Sniffing -> MIME makes sense to do at some point

[01:57:12.0000] <annevk>
MIME RFCs are way out of date

[01:57:32.0000] <hsivonen>
You know you don't need to maximize the IETF's anger

[01:59:59.0000] <hsivonen>
this meeting could go much faster

[02:00:12.0000] <jgraham>
/me pushes some WebSockets tests that need to be updated

[02:00:16.0000] <jgraham>
If anyone is bored

[02:00:30.0000] <jgraham>
Updated == converted to testharness

[02:00:38.0000] <jgraham>
(and changing the port)

[02:00:56.0000] <hsivonen>
like: "two impls missing. not gonna make it through CR. problem deferred for now"

[02:01:33.0000] <hsivonen>
isn't it a no-brainer to mark scoped beign at risk?

[02:01:44.0000] <Ms2ger>
No

[02:01:51.0000] <hsivonen>
why do we need to talk about it?

[02:03:38.0000] <Ms2ger>
To make the irrelevant people in the HTMLWG feel they have the control they wanted

[02:03:39.0000] <hober>
hsivonen: yes, it's a total no-brainer to mark <style scoped> at risk

[02:04:19.0000] <othermaciej>
style scoped is already on the draft at-risk list

[02:04:27.0000] <othermaciej>
the only reason to discuss it is because the css wg had a cow about it

[02:04:54.0000] <othermaciej>
thus http://w3cmemes.tumblr.com/post/34630866378/this-space-intentionally-left-blank

[03:33:02.0000] <hsivonen>
does anyone here have a computer with jpegtran on it?

[03:33:49.0000] <hsivonen>
it would be interesting to convert a jpeg image to arithmetic coding and see if browsers happen to support that already

[03:38:23.0000] <hsivonen>
zcorpan: did you test jpeg arithmetic coding yesterday?

[03:38:53.0000] <zcorpan>
hsivonen: i'm not sure what that means

[03:40:24.0000] <hsivonen>
jpeg can use huffman coding or arithmetic coding for the entropy coding scheme. arithmetic is more efficient but pretty much everyone uses huffman for historical royalty reasons

[03:40:44.0000] <hsivonen>
jpegtran lets you looslessly convert between the two

[03:41:46.0000] <hsivonen>
I'm interested in knowing if browsers support arithmetic coding as side effect of updating libjpeg after aritmetic coding became RF

[03:43:20.0000] <hsivonen>
/me regrets not bringing a laptop now

[03:43:46.0000] <hsivonen>
maybe I can run jpegtran in the cloud

[03:45:52.0000] <jgraham>
/me now has jpegtran

[03:52:41.0000] <hsivonen>
jgraham: can generate an arithmetic code jpeg and see if browsers render it?

[03:54:45.0000] <jgraham>
http://hoppipolla.co.uk/410/test.jpg <- doesn't work for me

[03:55:01.0000] <jgraham>
(works locally in gimp)

[04:07:18.0000] <hsivonen>
jgraham: thanks. oh well. need to test IE still, but no free ride here :-(

[04:24:09.0000] <hsivonen>
xforms mentioned

[04:25:02.0000] <MikeSmith>
awaken John Boyer

[04:33:03.0000] <annevk>
http://notifications.spec.whatwg.org/

[04:33:15.0000] <annevk>
http://quirks.spec.whatwg.org/ is also there, but zcorpan needs to commit some cleanup

[04:33:31.0000] <annevk>
both are synced from GitHub per usual

[04:33:37.0000] <hober>
word

[04:33:37.0000] <annevk>
Hixie: ^^ /specs/ can be updated now

[04:34:05.0000] <annevk>
MikeSmith: he's around?

[04:34:45.0000] <MikeSmith>
annevk: no that's why I said "awaken"

[04:34:55.0000] <annevk>
ah

[04:36:42.0000] <Ms2ger>
hsivonen, is that a kind of bingo?

[04:37:02.0000] <hsivonen>
Ms2ger: yes

[04:39:21.0000] <jgraham>
"we are writing a spec here for HTML, not for the entire browser environment"

[04:41:08.0000] <zcorpan>
annevk: thanks

[04:44:18.0000] <annevk>
I guess it's dinner time right?

[04:44:23.0000] <annevk>
euh lunch

[04:44:26.0000] <annevk>
with wine

[04:44:28.0000] <annevk>
hmmm

[04:46:03.0000] <zcorpan>
SGML-based templates?

[06:07:42.0000] <zcorpan>
annevk: do we want to move file-bug.js out of the quirks repo?

[06:08:00.0000] <annevk>
zcorpan: where should we put it?

[06:08:01.0000] <Ms2ger>
zcorpan, sounds like a sensible thing to do

[06:08:08.0000] <Ms2ger>
A repo of its own?

[06:08:15.0000] <annevk>
I meant which server

[06:08:51.0000] <zcorpan>
dunno, maybe a new repo and new subdomain on *.whatwg.org for common resources like scripts

[06:09:07.0000] <zcorpan>
maybe move dfn.js etc there as well

[06:09:11.0000] <annevk>
more subdomains

[06:09:15.0000] <annevk>
"resources"?

[06:09:30.0000] <annevk>
wfm

[06:09:35.0000] <Ms2ger>
cdn.whatwg.org

[06:09:45.0000] <annevk>
heh

[06:10:03.0000] <annevk>
so many DNS requests

[06:10:16.0000] <annevk>
Steve Souders would not be impressed

[07:01:53.0000] <jgraham>
MikeSmith: We have pywebsocket running on port 80?

[07:02:05.0000] <MikeSmith>
yes

[07:02:18.0000] <MikeSmith>
if it does not seem to be working correctly lemme know

[07:02:56.0000] <MikeSmith>
but I would think that for you to use it i'd need to install whatever handler you are using for your tests

[07:02:58.0000] <jgraham>
No, idea, just need to change a bunch of 8007s to 80s

[07:03:03.0000] <MikeSmith>
ok

[07:03:13.0000] <jgraham>
Yeah, we have a bunch of handlers zcorpan is reviewing

[07:03:19.0000] <MikeSmith>
ok

[07:04:35.0000] <zcorpan>
the pywebsocket on w3c-test.org is using the apache module rather than standalone.py, right?

[07:06:15.0000] <darobin>
did we get anywhere with the discussion on standardising on something for the server side of testing?

[07:08:12.0000] <GPHemsley>
/me wonders why Notifications uses [LANG] instead of [BCP47]

[07:09:47.0000] <GPHemsley>
Incidentally, quirks. does not appear to be working. Unless that's what you meant by "zcorpan needs to commit some cleanup", annevk.

[07:10:14.0000] <GPHemsley>
BTW: Is anyone going to the IETF conference in Atlanta next week?

[07:10:29.0000] <zcorpan>
GPHemsley: what is not working?

[07:10:35.0000] <jgraham>
darobin: I spoke with sicking and hsivonen a bit, so I have a better grasp of Mozilla's requirements

[07:10:40.0000] <GPHemsley>
zcorpan: The domain didn't resolve for me

[07:10:51.0000] <jgraham>
But we need to loop in the WebKit people of various kinds

[07:10:52.0000] <GPHemsley>
oh

[07:10:54.0000] <GPHemsley>
nevermind

[07:10:56.0000] <GPHemsley>
works now

[07:11:20.0000] <zcorpan>
ok. maybe a dns problem previously, since it was a new subdomain.

[07:11:23.0000] <jgraham>
And then we need to find the releng people (or ateam?) at Moz.

[07:11:23.0000] <darobin>
jgraham: ok, cool — will you post some form of plan or some such to test-infra?

[07:11:35.0000] <jgraham>
Yeah

[07:11:39.0000] <darobin>
coolness

[07:25:33.0000] <jgraham>
MikeSmith: http://dvcs.w3.org/hg/webapps/file/5b8b8f36e272/WebSockets/tests/submissions/Opera/handlers

[07:25:48.0000] <jgraham>
Dunno what you have to do with them

[07:26:47.0000] <MikeSmith>
jgraham: me looking nwo

[07:27:26.0000] <zcorpan>
MikeSmith: so the tests expect the resources to be available at the root when accessing over ws: or wss:

[07:27:42.0000] <MikeSmith>
OK think I will symlink them to where they expected to be

[07:27:46.0000] <zcorpan>
that can be changed if we want, we need to change the port anyway

[07:29:01.0000] <jgraham>
Yeah, if you need the tests to change it isn't a problem

[07:29:13.0000] <jgraham>
Have a metric shitload of changes to make anyway

[07:29:24.0000] <MikeSmith>
I think I can manage to get them in the root

[07:34:57.0000] <MikeSmith>
ok it's currently configured to look for them under /ws

[07:35:45.0000] <jgraham>
so e.g. /ws/echo?

[07:35:48.0000] <jgraham>
Thanks

[07:36:38.0000] <MikeSmith>
yeah

[07:36:49.0000] <MikeSmith>
config file has this:

[07:37:07.0000] <MikeSmith>
PythonOption mod_pywebsocket.handler_root /var/www

[07:37:14.0000] <MikeSmith>
PythonOption mod_pywebsocket.handler_scan /var/www/ws

[07:37:41.0000] <MikeSmith>
I assumed those two values might need to be different

[07:38:00.0000] <MikeSmith>
but I guess on your test server they must be set to the same

[07:38:20.0000] <MikeSmith>
if your server's looking for the handlers in the root

[07:38:30.0000] <MikeSmith>
so I can change it to that too if you want

[07:38:44.0000] <MikeSmith>
or leave it as-is and you change your tests to look in /ws instead

[07:39:09.0000] <zcorpan>
i get an error with make:

[07:39:15.0000] <zcorpan>
[Errno 20] Not a directory: 'data/specs.json'

[07:39:15.0000] <zcorpan>
make: *** [Overview.html] Error 1

[07:39:48.0000] <zcorpan>
was there some change to anolis?

[07:48:38.0000] <GPHemsley>
Argh, the definition-lookup script doesn't work on the multipage version of HTML.

[07:50:40.0000] <GPHemsley>
Double argh... the real list is really long ;_l

[07:50:51.0000] <GPHemsley>
(apparently my left eye has a pencil stuck in it)

[08:06:01.0000] <annevk>
zcorpan: i'll fix that up

[08:10:41.0000] <annevk>
zcorpan: actually, I'll let you fix that up

[08:11:21.0000] <GPHemsley>
Hixie: ping

[08:11:44.0000] <annevk>
zcorpan: just copy the style from other repositories, and clone xref

[08:17:25.0000] <GPHemsley>
Hixie: Regarding bug 19799, would it be enough to define "resource header" (and perhaps the "read the resource header" algorithm) outside of the main sniffing algorithm?

[08:17:41.0000] <zcorpan>
good news everyone http://lists.w3.org/Archives/Public/www-archive/2012Nov/0002.html

[08:24:55.0000] <miketaylr>
annevk: http://miketaylr.com/post/bc3c5669.png weird title

[08:25:34.0000] <annevk>
miketaylr: http://fullscreen.spec.whatwg.org/ does not have this problem

[08:25:40.0000] <miketaylr>
heh, ok

[08:26:48.0000] <annevk>
http://dvcs.w3.org/hg/fullscreen for some reason MikeSmith reverted the move

[08:27:04.0000] <annevk>
anyway, nobody is maintaining the W3C copy afaik

[08:27:18.0000] <zcorpan>
miketaylr: i complained about the robots.txt on dvcs.w3.org and w3.org before but maybe nothing happened

[08:27:50.0000] <miketaylr>
the lsd.taxonconcept.org looks might suspicious too, zcorpan

[08:28:04.0000] <miketaylr>
s/might/mighty/

[08:28:07.0000] <annevk>
zcorpan: see logs btw

[08:28:33.0000] <zcorpan>
annevk: what style, specifically?

[08:28:35.0000] <MikeSmith>
wtf where did the lsd.taxconcept.org come from

[08:28:57.0000] <annevk>
zcorpan: so clone whatwg/xref and put it next to whatwg/quirks

[08:29:06.0000] <annevk>
zcorpan: then change the data/ paths to ../xref/ paths

[08:29:10.0000] <miketaylr>
h4x

[08:29:11.0000] <MikeSmith>
miketaylr: ↑

[08:29:13.0000] <annevk>
zcorpan: be happy

[08:29:23.0000] <miketaylr>
MikeSmith: just a google search

[08:29:33.0000] <zcorpan>
annevk: i cloned xref and made a symlink of data/ to ../xref/

[08:30:04.0000] <annevk>
zcorpan: i'd prefer if it you did something that worked for other working with your repo

[08:30:09.0000] <annevk>
others*

[08:30:48.0000] <karlcow>
https://encrypted.google.com/search?q=taxonconcept+fullscreen+&hl=en&gs_l=heirloom-serp.3...2772.7948.0.8318.15.15.0.0.0.0.284.1359.8j4j1.13.0...0.0...1c.1.FhyoTQ-Htf4&oq=taxonconcept+fullscreen+

[08:31:06.0000] <miketaylr>
MikeSmith: check .htaccess for anything suspicious?

[08:33:08.0000] <zcorpan>
annevk: fair enough. i still get the same error though, which is weird... ([Errno 2] No such file or directory: 'data/specs.json')

[08:33:36.0000] <zcorpan>
actually not the same error

[08:33:41.0000] <zcorpan>
but still weird

[08:34:33.0000] <annevk>
zcorpan: ah

[08:34:37.0000] <annevk>
zcorpan: you need to pass a new parameter

[08:34:53.0000] <annevk>
--xref="../xref"

[08:35:05.0000] <annevk>
and maybe update Anolis?

[08:35:23.0000] <zcorpan>
ok

[08:35:26.0000] <annevk>
this was not configurable before; Anolis kind of required a separate xref repo per spec :/

[08:35:38.0000] <karlcow>
MikeSmith: it might be something done on Google side too

[08:36:27.0000] <MikeSmith>
fuck it's some sparql thing

[08:36:33.0000] <MikeSmith>
sparql leak

[08:37:06.0000] <karlcow>
it seems

[08:37:17.0000] <annevk>
i'm kinda amused by this

[08:37:20.0000] <annevk>
sorry

[08:37:46.0000] <karlcow>
/me thought for a few seconds that annevk was working for the Semantic Web in secret ;)

[08:37:47.0000] <MikeSmith>
https://www.google.com/search?&q=lsd.taxonconcept.org

[08:39:12.0000] <karlcow>
Now, I wonder how Google creates its search results list.

[08:39:21.0000] <karlcow>
maybe a bug in their code

[08:39:29.0000] <MikeSmith>
karlcow: I guess probably made the mercurial server a "sparql endpoint"

[08:39:30.0000] <MikeSmith>
wha

[08:39:35.0000] <MikeSmith>
whatever that is

[08:40:12.0000] <miketaylr>
it's cool, let's all just use duckduckgo and pretend it never happened

[08:40:27.0000] <karlcow>
\o/

[08:40:33.0000] <MikeSmith>
I can fix the robots.txt

[08:40:36.0000] <MikeSmith>
at least

[08:40:57.0000] <MikeSmith>
zcorpan: if you can remind me what it should have

[08:40:59.0000] <MikeSmith>
or not have

[08:41:11.0000] <karlcow>
I can fix the robots. Txt at least.

[08:43:19.0000] <zcorpan>
MikeSmith: remove Disallow: /Bugs/ from http://www.w3.org/robots.txt

[08:44:47.0000] <zcorpan>
MikeSmith: and http://dvcs.w3.org/robots.txt disallows everything which is not so nice

[08:45:01.0000] <zcorpan>
unless you're w3c-checklink

[08:45:05.0000] <MikeSmith>
zcorpan: ah I can't do it for www.w3.org but I can for dvcs.w3.org

[08:46:31.0000] <zcorpan>
i tried reinstalling anolis which appeared to succeed but i still get the same error message, so i guess it uses the old anolis.

[08:47:39.0000] <zcorpan>
$ anolis --version

[08:47:40.0000] <zcorpan>
anolis 1.2pre

[08:48:24.0000] <zcorpan>
--help says there's an --xref option

[08:50:35.0000] <zcorpan>
so the error now is [Errno 2] No such file or directory: '../xref--w3c-shortname=quirks-mode/specs.json'

[08:51:07.0000] <annevk>
where is xref located?

[08:51:24.0000] <annevk>
../xref relative to the dir?

[08:51:56.0000] <zcorpan>
oh i made a mistake in MakeFile

[08:52:04.0000] <annevk>
yeah, looks like there's no space there

[08:52:18.0000] <annevk>
you won't need w3c-shortname and such either anymore

[08:52:24.0000] <annevk>
other Makefiles are much much shorter

[08:56:29.0000] <MikeSmith>
zcorpan: fixed dvcs.w3.org robots.txt

[08:58:36.0000] <zcorpan>
MikeSmith: thanks

[08:59:58.0000] <zcorpan>
ok checked in an initial cleanup

[09:13:06.0000] <hsivonen>
386 opportunity: see first comment at https://hacks.mozilla.org/2012/11/html5-mythbusting/

[09:20:11.0000] <zcorpan>
/me tweaked the logo of http://quirks.spec.whatwg.org/

[09:21:14.0000] <hober>
zcorpan: nice

[09:21:31.0000] <zcorpan>
hober: thanks

[09:22:02.0000] <hober>
what's with the margin-bottom: 30% on <body>?

[09:23:22.0000] <zcorpan>
i think that was added to solve the problem of linking to things that are near the end of the page in the multipage version of html, and it wasn't obvious what was linked to when it wasn't aligned with the top of the page

[09:23:35.0000] <zcorpan>
but now we have highlighting for that, so maybe the margin is unnecessary

[09:23:41.0000] <zcorpan>
Hixie: ^

[09:25:28.0000] <zcorpan>
#html-wg discusses EME API blocking the UI thread

[09:27:58.0000] <zcorpan>
MikeSmith: can you make http://dvcs.w3.org/hg/quirks-mode/raw-file/tip/Overview.html redirect to http://quirks.spec.whatwg.org/ please?

[09:28:35.0000] <zcorpan>
or can i do that myself?

[09:28:51.0000] <MikeSmith>
yeah you can with an .htaccess file I think

[09:29:36.0000] <zcorpan>
should i kill the files in the hg repo?

[09:33:56.0000] <MikeSmith>
zcorpan: yeah

[09:34:01.0000] <MikeSmith>
no need to keep them there

[09:34:07.0000] <MikeSmith>
as far as I can see

[09:34:21.0000] <MikeSmith>
oh unless you want to preserve the history

[09:35:13.0000] <MikeSmith>
hsivonen: I'm noticing that the validator code's not yet checking rel values on area element

[09:35:31.0000] <MikeSmith>
as it now does for the link and a elements

[09:35:39.0000] <zcorpan>
MikeSmith: the history is in github

[09:35:44.0000] <MikeSmith>
ok

[09:36:28.0000] <zcorpan>
MikeSmith: the tests are there and are mirrored on w3c-test.org, so maybe i should have that be the canonical place for the tests

[09:36:54.0000] <MikeSmith>
yeah that'd make sense

[09:43:52.0000] <zcorpan>
MikeSmith: i tried and failed. :-/ http://dvcs.w3.org/hg/quirks-mode/file/1ef6ee6f995f/.htaccess http://dvcs.w3.org/hg/quirks-mode/raw-file/tip/Overview.html

[09:44:55.0000] <MikeSmith>
ok man

[09:44:59.0000] <MikeSmith>
will take a look

[09:46:23.0000] <zcorpan>
cheers

[09:52:38.0000] <zcorpan>
Hixie: http://www.whatwg.org/specs/ needs updating of the quirks link

[14:09:24.0000] <Hixie>
fwiw, re the cdn.whatwg.org idea, i already use images.whatwg.org or some such for the images in the whatwg spec

[14:09:30.0000] <Hixie>
whatwg.org/specs is updated

[14:09:40.0000] <Hixie>
and you guys are cracking me up with your logo variants, love it

[14:10:06.0000] <Hixie>
GPHemsley: pong

[14:10:27.0000] <GPHemsley>
Hixie: Nevermind, I went ahead with what I said. :P

[14:10:34.0000] <Hixie>
k

[14:11:14.0000] <GPHemsley>
/me wonders how long it takes DreamHost to fully set up a new subdomain...

[14:12:24.0000] <GPHemsley>
/me doesn't remember it taking this long.

[14:12:36.0000] <Hixie>
usually just a few minutes

[14:15:11.0000] <Hixie>
/me finds a random subdirectory on his account called whatwg.org that is empty of useful files

[14:15:28.0000] <Hixie>
nothing quite like the nervousness of typing "rm -rf whatwg.org"

[14:15:32.0000] <Hixie>
on the live webserver

[14:15:48.0000] <GPHemsley>
:)

[14:16:14.0000] <GPHemsley>
Did you at one point move from whatwg.org to www.whatwg.org?

[14:16:38.0000] <Hixie>
no, no idea what this directory was for

[14:16:43.0000] <Hixie>
spec.whatwg.org was pointing to it though

[14:17:00.0000] <GPHemsley>
oh, yes

[14:17:05.0000] <GPHemsley>
I became quite familiar with that directory

[14:17:26.0000] <Hixie>
hm?

[14:17:29.0000] <Hixie>
oh

[14:17:31.0000] <Hixie>
right

[14:17:45.0000] <GPHemsley>
kept wishing for something to show up

[14:17:47.0000] <Hixie>
hopefulyl should be fixed now

[14:18:08.0000] <GPHemsley>
if by "fixed" you mean "404ing"

[14:18:22.0000] <Hixie>
yeah well

[14:18:24.0000] <Hixie>
see above

[14:18:30.0000] <Hixie>
* GPHemsley wonders how long it takes DreamHost to fully set up a new subdomain...

[14:18:33.0000] <GPHemsley>
ah

[14:18:34.0000] <GPHemsley>
heh

[14:23:06.0000] <GPHemsley>
well, it's a coming soon page now

[14:23:27.0000] <GPHemsley>
I, on the other hand, have nothing

[14:24:28.0000] <GPHemsley>
Does anyone else think Google 404 pages are remarkably unhelpful, considering what Google is?

[14:26:03.0000] <GPHemsley>
(oh, but I just noticed the page title is funny-ish)

[14:47:04.0000] <GPHemsley>
"In case you were wondering, the HTTP specification states that, in

[14:47:04.0000] <GPHemsley>
the case of duplicates, the client should always use the last value specified

[14:47:04.0000] <GPHemsley>
for that duplicate header."

[14:47:14.0000] <GPHemsley>
Anyone know what section such a statement might be?

[14:48:09.0000] <Ms2ger>
An imaginary one?

[14:48:41.0000] <Hixie>
that can't be right

[14:48:56.0000] <Hixie>
duplicate Link: or Set-Cookie: headers for example

[14:50:00.0000] <GPHemsley>
Yeah, well, I assumed it was referring to the ones that don't allow having multiple instances

[14:50:20.0000] <GPHemsley>
but I was looking for this the other day, and all indications were that the HTTP spec didn't say what to do

[14:55:11.0000] <GPHemsley>
hmm... DNS has finally come around, but I still have a bad_httpd_conf error :/

[14:55:20.0000] <GPHemsley>
not that anyone here particularly cares..

[15:03:50.0000] <GPHemsley>
aha!

[15:11:02.0000] <Hixie>
hmm

[15:37:10.0000] <Hixie>
GPHemsley: the changes to mimesniff seem positive, though it's a bit ambiguous which resource things refer to since none of the algorithms take a resource as an argument as far as i can tell :-)

[15:38:20.0000] <Hixie>
Also the "rules for distinguishing if a resource is text or binary" don't seem to return anything, instead they set the return value of another algorithm? Not sure I follow

[16:16:46.0000] <GPHemsley>
Hixie: If the text/binary algorithm doesn't return text, it treats it as the same as unknown

[16:23:06.0000] <Hixie>
that wasn't clear when i was reading it

[16:23:10.0000] <Hixie>
it didn't seem to return anything

[16:26:10.0000] <GPHemsley>
Alright, I'll fix that when I edit them all to return values instead

[16:26:30.0000] <GPHemsley>
Incidentally, I wonder where this data came from, as Gecko doesn't seem to do any of it

[16:26:45.0000] <GPHemsley>
(which is a very broad statement to make from only 3 simple tests)

[16:31:13.0000] <GPHemsley>
e.g. Gecko simply prompts for download when a file is served as unknown/unknown

[16:31:39.0000] <GPHemsley>
Hixie: Did you put anything at spec.whatwg.org?

[16:33:34.0000] <zcorpan>
i heared complaints today that the ".spec" part of our urls are useless

[16:35:08.0000] <GPHemsley>
"PostScript is a registered trademark of Adobe Systems, Inc.  Use of

[16:35:08.0000] <GPHemsley>
   the MIME media type "application/postscript" implies recognition of

[16:35:08.0000] <GPHemsley>
   that trademark and all the rights it entails."

[16:35:10.0000] <GPHemsley>
/me sighs

[16:35:36.0000] <zewt>
zcorpan: well, they *are* useless to readers; but that's not who they're for

[16:35:52.0000] <zewt>
afaik it's just there to make administration easier

[16:36:38.0000] <zcorpan>
Hixie: what does it take to kill the ".spec" part?

[16:37:05.0000] <zewt>
guessing "a reason to" would be the first step :)

[16:37:38.0000] <zcorpan>
reason being that it's useless and is more annoying to type compared to url.whatwg.org

[16:38:03.0000] <zewt>
typing out urls? weird :)

[16:38:16.0000] <GPHemsley>
isn't the better question "how can we make spec.whatwg.org useful?"?

[16:38:58.0000] <zcorpan>
GPHemsley: i don't mind having spec.whatwg.org be useful but that doesn't change the other thing

[16:39:20.0000] <GPHemsley>
well, it does well to separate spec-related subdomains from others

[16:39:23.0000] <GPHemsley>
IMO

[16:39:58.0000] <zewt>
with w3's URLs being things like "http://dev.w3.org/2006/webapi/FileAPI/", this seems like a minor complaint, heh

[16:40:16.0000] <zcorpan>
sure

[16:40:32.0000] <zcorpan>
what we have now is almost convenient enough to type the whole url

[16:40:45.0000] <zcorpan>
but can be taken a step further

[16:40:51.0000] <GPHemsley>
/me is just beginning to realize just how much of a mess the whole MIME type situation is, independent of content sniffing.

[16:41:14.0000] <GPHemsley>
it'd be even more convenient to just have url.org

[16:41:17.0000] <GPHemsley>
but, you know..

[16:41:54.0000] <zcorpan>
or just url. but let's look at what's reasonable here

[16:41:57.0000] <zewt>
zcorpan: i don't know if it's worth the time of whoever would have to do it (especially if it's hixie), but i guess whatwg.org/url could just be a redirect to url.spec.whatwg.org

[16:42:19.0000] <zcorpan>
zewt: that's fair

[16:42:23.0000] <zewt>
which would make it easier to type, without changing the actual domain organization (which I believe is that way for a reason)

[16:42:26.0000] <GPHemsley>
zcorpan: Well, that's my point. I think it's perfectly reasonable to have all the specs under spec.whatwg.org

[16:43:20.0000] <GPHemsley>
It's not like it's url.annevk.spec.whatwg.org or something

[16:43:53.0000] <GPHemsley>
It's telling you that the WHATWG has a spec that documents URLs

[16:44:07.0000] <Hixie>
zcorpan: .spec. is needed because there's dozens of other subdomains and i don't want to get confused as to what's a spec and what isn't

[16:44:16.0000] <Hixie>
zcorpan: anyway, the whole point of these urls is you only ever type them once

[16:44:17.0000] <GPHemsley>
what if we wanted a spec that was called 'images'?

[16:44:24.0000] <GPHemsley>
exactly

[16:44:45.0000] <zcorpan>
ok

[16:45:05.0000] <Hixie>
i'm absolutely loving that i  type "mi" and my browser autocompletes it to "mimesniff.spec.whatwg.org"

[16:45:14.0000] <Hixie>
can definitely do the redirects zewt suggests, though

[16:45:29.0000] <zewt>
heh i gave up on browser autocomplete

[16:46:12.0000] <zewt>
i type "goog" in FF and it gives me something other than google.com, probably the most common thing i load (at least Chrome gets this one right, though I wonder if that one's a special case)

[16:46:33.0000] <Hixie>
oh christ, i typoed the directory for spec.whatwg.org _again_

[16:46:57.0000] <zcorpan>
specs?

[16:47:34.0000] <Hixie>
/me types "rm -rf whatwg.org" for the second time today, this time even closer to the actualy whatwg directory...

[16:47:45.0000] <Hixie>
specs?

[16:48:01.0000] <zcorpan>
spec vs specs appears to be a common mistake with these urls, i think

[16:48:22.0000] <Hixie>
specs.whatwg.org redirects to spec.whatwg.org; doing the others is possible but more timeconsuming so i haven't done it yet

[16:48:50.0000] <zcorpan>
ah, nice

[16:48:58.0000] <zewt>
Hixie: heh, when I have to do something like that, I tend to "mv whatwg.org probably-garbage" first, then double-check that everything is what I think it is, so I never have to type things like "rm -rf important-sounding-directory-name"

[16:50:05.0000] <Hixie>
i do "ls -alR foo", check the output, them change "ls -alR" to "rm -rf" by editing the command line

[16:51:39.0000] <zewt>
does anyone following this HTML template stuff know what "embedding scripts in templates" even means? that seems more like a widget-y feature than a template feature

[16:52:08.0000] <zewt>
(trying to avoid the noise of asking on the thread when I imagine it's been discussed already)

[16:53:36.0000] <GPHemsley>
zewt: Why do you type 'goog' when you can just have whatever you type automatically sent as a search?

[16:53:45.0000] <zewt>
because firefox is slooow at that

[16:53:52.0000] <GPHemsley>
?

[16:53:56.0000] <Hixie>
fyi http://damowmow.com/temp/whatwg-urls

[16:53:59.0000] <zewt>
i don't really know why; i suspect it may be trying to DNS my search first, or something silly like that

[16:54:03.0000] <GPHemsley>
I've been doing it for years without a problem

[16:54:08.0000] <GPHemsley>
so yeah, perhaps

[16:54:11.0000] <zewt>
chrome is way faster at that for me

[16:54:42.0000] <Hixie>
zcorpan: see the url above

[16:54:48.0000] <Hixie>
zcorpan: hopefully that helps people out

[16:54:53.0000] <zcorpan>
Hixie: doesn't the first two lines mean that you get redirected twice?

[16:54:55.0000] <GPHemsley>
Hixie: Shouldn't you have /specs/*, too?

[16:55:04.0000] <Hixie>
zcorpan: ?

[16:55:08.0000] <Hixie>
GPHemsley: ?

[16:55:16.0000] <GPHemsley>
whatwg.org/specs/url

[16:55:25.0000] <Hixie>
who's typing that when you can type whatwg.org/url

[16:55:41.0000] <GPHemsley>
people who forget the motto of WHATWG ;)

[16:55:48.0000] <zcorpan>
Hixie: /principles get redirected to /position-paper which gets redirected to /2004/04/webapps-cdf-ws/papers/opera.html

[16:56:04.0000] <zcorpan>
Hixie: or is apache smart enough to redirect to the final url directly?

[16:57:00.0000] <GPHemsley>
also, I think that anyone relying on the one-letter URLs has some issue with their autocomplete

[16:57:06.0000] <GPHemsley>
but whatever

[16:57:28.0000] <GPHemsley>
I don't mind typing

[16:57:35.0000] <Hixie>
zcorpan: ah, yeah. whatever. :-)

[16:57:49.0000] <GPHemsley>
poor fetch

[16:58:00.0000] <zcorpan>
Hixie: thanks for the redirects

[16:58:05.0000] <Hixie>
(i added /cors for /fetch as well btw)

[16:58:11.0000] <zewt>
zcorpan: that's intentional, hixie just wants to stress test the "fetch" algorithm

[16:58:23.0000] <Hixie>
ok i gotta go. i may or may not do .specs. redirects one day.

[16:58:26.0000] <Hixie>
probably not soon though.

[16:58:29.0000] <GPHemsley>
Hixie: is f = fullscreen new or existing?

[16:58:30.0000] <Hixie>
later

[16:58:43.0000] <Hixie>
GPHemsley: most of these are new from just now

[16:59:15.0000] <GPHemsley>
/me recommends fs


2012-11-02
[17:02:33.0000] <GPHemsley>
and f for fetch

[17:15:20.0000] <GPHemsley>
hmm

[17:15:38.0000] <GPHemsley>
it appears that Gecko does not do any sniffing at all—at least, not for GIFs

[17:16:02.0000] <GPHemsley>
hmm

[17:16:08.0000] <GPHemsley>
opera.com just sent me Japanese

[17:17:54.0000] <GPHemsley>
...apparently I had a language cookie set

[17:17:58.0000] <GPHemsley>
weird

[17:21:49.0000] <GPHemsley>
well, this lack of sniffing in no engine but Gecko is gonna make testing/debugging kinda annoying

[17:27:08.0000] <GPHemsley>
on the other hand, http://damowmow.com/temp/ is good for testing what happens when the server doesn't send a Content-Type header

[17:29:48.0000] <GPHemsley>
Hixie: s/write/right/ in your WebVTT comment commit

[23:46:58.0000] <wirepair_>
anyone here familiar with firefox's processing of CSP rules?

[01:27:19.0000] <annevk>
so people, GitHub is sponsoring WHATWG!

[01:27:31.0000] <annevk>
we got bronze for life :-)

[01:27:57.0000] <annevk>
so I guess I'll make a private repo for the info on the twitter accounts in due course

[01:28:05.0000] <annevk>
does that make sense?

[01:31:56.0000] <SimonSapin>
annevk: I might end up implementing Encoding (or not) in rust rather than python

[01:31:59.0000] <annevk>
so are we going to use images.whatwg.org?

[01:32:01.0000] <SimonSapin>
more fun

[01:32:07.0000] <annevk>
SimonSapin: fair enough :)

[01:32:56.0000] <MikeSmith>
annevk: rockin

[01:47:09.0000] <annevk>
MikeSmith: what's the W3C Team archive list?

[01:47:16.0000] <annevk>
MikeSmith: w3t-archive?

[01:50:20.0000] <MikeSmith>
annevk: yeah

[01:54:35.0000] <annevk>
posted a minor rant there

[02:26:26.0000] <othermaciej>
oh man there are some good new memes up

[02:37:10.0000] <annevk>
http://lists.w3.org/Archives/Public/uri/2012Nov/0000.html is interesting

[02:52:15.0000] <karlcow>
annevk: yup

[02:52:49.0000] <smaug____>
is hallvord ever here?

[02:53:17.0000] <SimonSapin>
annevk: uh, what? Is this ignoring your work while doing the same?

[02:53:43.0000] <karlcow>
SimonSapin: I don't think so.

[02:55:30.0000] <annevk>
SimonSapin: if it is, that's fine

[02:55:34.0000] <annevk>
SimonSapin: curious where we'll end up

[02:55:48.0000] <karlcow>
yes me too. Same than annevk.

[02:56:09.0000] <karlcow>
Whatever the outcomes, if in the end there's something which is better, whatever it is.

[02:56:14.0000] <karlcow>
The communities win.

[03:00:00.0000] <SimonSapin>
I just spent two hours writing up a 600-words email for www-style …

[03:08:47.0000] <jgraham>
smaug____: I think I might have seen hallvord here before

[03:08:55.0000] <jgraham>
But not often at least

[03:19:43.0000] <konza>
Hi all, I have subscribed to the mailing list. Can any one explain how can I contribute to the development. By contributing i mean to write code.. Can any one explain

[03:21:25.0000] <annevk>
konza: what are your interests?

[03:22:54.0000] <konza>
annevk, I love coding.. :) Could you please explain your question a bit?

[03:24:21.0000] <annevk>
konza: well WHATWG doesn't do a lot of coding (other than in English), so I was wondering why you joined the mailing list

[03:24:29.0000] <annevk>
like what you want to contribute to

[03:25:27.0000] <konza>
annevk, I thought some open source works are also done by this group

[03:26:14.0000] <annevk>
well yeah, I suppose, some of us work on http://code.google.com/p/html5lib/

[03:27:35.0000] <annevk>
but I suspect you might be better of contributing to Gecko/WebKit/Chromium if you like to work on code related to what we work on

[03:27:52.0000] <Ms2ger>
Let's just make that Gecko :)

[03:33:59.0000] <smaug____>
++Ms2ger

[03:34:41.0000] <MikeSmith>
zcorpan, jgraham : so I can add the symlinks for those websocket tests now

[03:35:03.0000] <zcorpan>
MikeSmith: ok

[03:35:08.0000] <zcorpan>
thanks

[03:35:56.0000] <MikeSmith>
zcorpan: including I will clobber the existing echo test that's there with a symlink to the one in the repo

[03:36:05.0000] <MikeSmith>
which I assume will not break anything

[03:36:13.0000] <MikeSmith>
for you guys

[03:36:42.0000] <MikeSmith>
since your tests are relying on the echo service you have there

[03:36:53.0000] <zcorpan>
the new one presumably works for us. i don't know what the existing one looks like or what uses it currently

[03:36:59.0000] <jgraham>
I think our echo is probably the default

[03:37:05.0000] <MikeSmith>
ah OK

[03:37:13.0000] <MikeSmith>
yeah it's likely the default I guess

[03:37:28.0000] <jgraham>
I just copied all the files we had in our handler directory that seemd to be referenced

[03:37:40.0000] <MikeSmith>
hai

[03:41:51.0000] <zcorpan>
"can i get two weeks?" "NO."

[03:43:24.0000] <konza>
annevk, can you please give the full url of gecko

[03:43:53.0000] <annevk>
konza: http://www.mozilla.org/en-US/contribute/ I suppose

[03:44:04.0000] <konza>
annevk, thanks

[03:45:30.0000] <konza>
annevk, pm?

[03:45:49.0000] <annevk>
sure

[03:49:18.0000] <hsivonen>
http://whatcanidoformozilla.org/

[03:49:45.0000] <konza>
thanks hsivonen

[03:56:35.0000] <MikeSmith>
zcorpan, jgraham : OK all those handlers should now be reachable at http://w3c-test.org/ws

[03:57:09.0000] <MikeSmith>
if not lemme know

[03:57:41.0000] <zcorpan>
MikeSmith: did you mean ws://w3c-test.org/ ?

[03:57:55.0000] <MikeSmith>
yeah

[03:58:02.0000] <zcorpan>
ok, excellent

[03:58:11.0000] <MikeSmith>
well ws: instead of http:

[03:58:47.0000] <MikeSmith>
you want them at the root? I thought you had changed your tests to look for them under /ws

[04:01:16.0000] <zcorpan>
MikeSmith: my error console for http://w3c-test.org/webapps/WebSockets/tests/submissions/Opera/interfaces/WebSocket/send/006.html says "WebSocket handshake failure, invalid response code '404'. "

[04:01:33.0000] <zcorpan>
MikeSmith: no the tests have /ws/ already, i didn't know that was changed

[04:02:39.0000] <MikeSmith>
ok will try to take a look at the server logs

[04:06:29.0000] <zcorpan>
q?

[04:06:33.0000] <zcorpan>
oops

[04:08:53.0000] <annevk>
so I walked in the HTML WG meeting to get some AC power

[04:09:37.0000] <annevk>
hsivonen just suggested to put everything "at risk" and undefine all the things when the time comes (kind of)

[04:11:53.0000] <hsivonen>
I asked what's the procedural reason not to

[04:12:03.0000] <hsivonen>
I didn't really suggest it

[04:12:17.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-ietf-w3c/2012Sep/thread.html#msg4

[04:12:42.0000] <MikeSmith>
/me ah wait that's not it

[04:13:14.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=18975

[04:13:45.0000] <MikeSmith>
-> https://www.w3.org/Bugs/Public/show_bug.cgi?id=18975 registerContentHanlder and registerProtocolHandler open huge security and privacy holes (bug raised by Larry Masinter)

[04:14:14.0000] <smaug____>
annevk: sounds like a fun meeting

[04:14:26.0000] <smaug____>
apparently discussions about the process ?

[04:14:41.0000] <annevk>
it's about CR exit criteria

[04:14:55.0000] <annevk>
since most of HTML is not interoperable if you look at the details, they're in kind of a fit

[04:14:57.0000] <MikeSmith>
ah wrong channel

[04:15:02.0000] <annevk>
so they're looking for loopholes

[04:15:15.0000] <annevk>
MikeSmith: sorry for the distraction :)

[04:16:08.0000] <jgraham>
/me thinks it is a bad idea to point out that we will not get interoperability on navigation

[04:16:17.0000] <Ms2ger>
Why's that?

[04:17:27.0000] <jgraham>
Or maybe I should just say that we will never get two complete implementations

[05:11:53.0000] <karlcow>
hmmm I had a parse error for Robin's email

[05:11:54.0000] <karlcow>
"or more precisely for a way of specifying isolates more powerful than <bdi> one possible implementation of which could rely on the dir attribute."

[05:12:20.0000] <karlcow>
— http://www.w3.org/mid/5093A450.5000107⊙wo

[06:12:11.0000] <karlcow>
https://tech.dropbox.com/2012/10/caching-in-theory-and-practice/

[06:19:02.0000] <annevk>
"it's a waste of time" "any other comments?"

[06:19:07.0000] <annevk>
this meeting is hilarious

[07:03:28.0000] <hsivonen>
Hixie: this xml-stylesheet is x3d all over again

[07:03:52.0000] <hsivonen>
you notes trigger concern

[07:28:23.0000] <annevk>
http://www.rfc-editor.org/errata_search.php?rfc=1123

[07:28:25.0000] <annevk>
wtf

[07:28:49.0000] <annevk>
all the rejected errata refers to each other for being rejected and nothing then addresses the problems

[07:29:27.0000] <annevk>
and how and http://tools.ietf.org/html/rfc1123 be the latest RFC for host names anyway?

[07:30:34.0000] <annevk>
and just look at the patchwork that is http://tools.ietf.org/html/rfc1035

[07:30:56.0000] <annevk>
you can't just go in and get an understanding of how this works

[07:31:09.0000] <annevk>
that's no documentation of the web architecture if you ask me

[07:31:12.0000] <karlcow>
I guess because nobody has been masochistic enough to touch hostnames spec ;)

[07:32:04.0000] <annevk>
pussies

[07:32:41.0000] <karlcow>
macho ;)

[07:33:20.0000] <annevk>
pew pew

[07:36:04.0000] <hober>
Scooby Doo: Special (Process) Victims Unit

[07:36:19.0000] <hober>
*dun dun*

[07:37:05.0000] <darobin>
at the end of the day we'll find out that it was just a dishonest land developer dressing up a Hixie to scare the locals

[07:37:16.0000] <darobin>
into selling their land

[07:38:47.0000] <karlcow>
:D

[07:38:50.0000] <MikeSmith>
heh

[07:39:51.0000] <GPHemsley>
:)

[08:20:39.0000] <karlcow>
/me found an oldie http://www.snee.com/xml/a-href.html

[08:23:13.0000] <MikeSmith>
karlcow: interesting

[08:24:22.0000] <karlcow>
It was a link in my today 10 years old blog post. It survived.

[08:25:08.0000] <karlcow>
It's kind of encouraging some of the things survive

[08:25:39.0000] <karlcow>
That was also the time where designers were experimenting with small icons http://www.antipixel.com/blog/archives/2002/10/22/steal_these_buttons.html

[08:31:36.0000] <hsivonen>
wow. I didn't realize it has been ten years alrady

[08:32:19.0000] <hsivonen>
also, when did you last see a mention of amphetadesk?

[08:32:30.0000] <karlcow>
:)

[08:40:04.0000] <annevk>
Hixie: it would be nice if http://dev.w3.org/html5/webvtt/ had Bugzilla links

[08:40:31.0000] <annevk>
Hixie: one instance of "WebVTT comments" is not linked

[08:40:51.0000] <annevk>
Hixie: the same for "ASCII digits"

[08:41:43.0000] <annevk>
Hixie: should also use the Encoding Standard

[09:09:39.0000] <karlcow>
/me recommends annevk to check out the source code of Arena beta-3, the file HTParse.h

[09:11:18.0000] <karlcow>
"Canonicalization of URIs is a difficult job" — https://gist.github.com/2569ea81038d5e98a7b2

[09:11:23.0000] <karlcow>
I put the file on gist

[09:37:52.0000] <annevk>
my parser handles those scenarios, not entirely in the same way, but then that browser is old :)

[09:40:34.0000] <annevk>
GPHemsley: you might want to look at MIME type usage in http://xhr.spec.whatwg.org/ too

[09:40:47.0000] <annevk>
GPHemsley: and I guess I might use some of the terminology you introduced, such as XML type

[09:41:51.0000] <annevk>
gotta go

[10:07:48.0000] <GPHemsley>
annevk: I don't see anything related to sniffing, per se, in XHR. But if there's something you want me to add to mimesniff to make your XHR life easier, let me know.

[10:16:07.0000] <smaug____>
hsivonen: ping

[11:47:11.0000] <Hixie>
hsivonen: what do you mean? (re xml-stylesheet and "you notes trigger concern")

[11:53:37.0000] <GPHemsley>
Hixie: There are points in HTML were MIME sniffing is explicitly encouraged/required, correct?

[11:54:38.0000] <GPHemsley>
Hixie: And, if so, can you provide me with a list of where that occurs (or point me to one)?

[12:36:13.0000] <Hixie>
GPHemsley: encouraged of whom? implementors?

[12:36:35.0000] <Hixie>
GPHemsley: mentions of MIME Sniff can be found by searching for [MIMESNIFF] then clicking the <dfn> links that those are next to

[13:58:39.0000] <Ms2ger>
Anne might be interested in http://docs.sqlalchemy.org/en/rel_0_7/core/engines.html#sqlite

[14:04:43.0000] <Hixie>
i'm amused at the meme with the caption "It seems that the people who most enjoy complaining about W3C Process are those who most enjoy Process discussions", but it seems incorrect

[14:05:03.0000] <Hixie>
since i enjoy complaining about w3c process, and i hate the process discussions so much i don't even turn up to tpac

[14:08:58.0000] <say2joe>
lol

[14:10:12.0000] <say2joe>
wish i lived in France

[15:37:07.0000] <GPHemsley>
Hixie: Well, the lists of mentions are quite long. I was hoping for you to narrow it down a little, since you're more familiar with exactly what the spec says. But yes, where implementors are encouraged to proactively sniff.

[15:38:26.0000] <Hixie>
the lists arne't long, it's like three areas

[15:38:53.0000] <Hixie>
ignore the <dfn>Content-Type metadata</dfn>, that's just references to Content-Type, not sniffing

[15:40:08.0000] <GPHemsley>
well, the lists only work on the one-page version, which my computer seems to hate

[15:40:26.0000] <GPHemsley>
which makes me afraid to go fishing for information directly

[15:41:26.0000] <GPHemsley>
oh, OK, I see

[15:41:31.0000] <GPHemsley>
I was working from memory when I asked

[15:41:40.0000] <GPHemsley>
and it was indeed only the content-type link that was long

[15:55:35.0000] <GPHemsley>
Hixie: Am I right in my understanding that the type SHOULD always be sniffed for resources called by <img> and <object>?

[15:59:35.0000] <GPHemsley>
Hixie: And the same for <link> (e.g. for a shortcut icon)?

[16:00:51.0000] <GPHemsley>
Hixie: Also, do you define precisely what an "image" is?

[16:05:03.0000] <GPHemsley>
Hixie: And your only use of the text-or-binary algorithm (in <object>) is just to ensure against binary files tagged as 'text/plain'?


2012-11-03
[00:04:22.0000] <zcorpan>
i don't see how <b><i><a><s><tt><div></b>abc</b></div></tt></s></a>xyz</i> invokes the loop limit

[00:04:48.0000] <zcorpan>
i wonder how old ie renders it

[00:07:32.0000] <zcorpan>
has an unnecessary </b>

[01:11:03.0000] <krijn>
Somebody in here who knows something about the WHATWG wiki?

[01:12:41.0000] <krijn>
Actually, never mind

[01:45:15.0000] <Ms2ger>
Whoa, whoa

[01:46:35.0000] <Ms2ger>
Microsoft is looking at http://dom.spec.whatwg.org ?

[03:10:39.0000] <hsivonen>
I don't see an email about polyglot by Lachy on public-html? what happened?

[03:16:03.0000] <othermaciej>
hsivonen: I see one by you, were you expecting one from him too?

[03:23:41.0000] <asmodai>
Good morning!

[03:25:28.0000] <asmodai>
hsivonen: talk of the devil ;)

[06:35:09.0000] <annevk>
I wonder at what point I should start filing bugs on browsers to fix certain bugs...

[06:36:07.0000] <boogyman>
annevk: you'd have a betterchance and convincing them to up the priority

[06:36:44.0000] <annevk>
that sentence missed "URLs"

[07:13:43.0000] <GPHemsley>
krijn: Anything I can help you with (re wiki)?

[07:14:49.0000] <krijn>
GPHemsley: nope, sorry, I misread a question somebody sent me via the logs, thought it was about the wiki

[07:15:13.0000] <krijn>
But I didn't understand the question itself, so I kind of stopped after that

[07:15:28.0000] <krijn>
It mentioned wiki somewhere in the sentence, but that's about it

[07:19:44.0000] <GPHemsley>
ah, ok

[08:00:27.0000] <annevk>
anyone from Chromium around? zcorpan found out that http://™%/ parses badly (in particular the bytes ™ is represented as in utf-8 get decoded using iso-8859-1 somehow)

[08:00:41.0000] <annevk>
abarth: ^^

[08:18:51.0000] <GPHemsley>
annevk: Is there any way you can prevent /^[a-z]+:[:\s]/i from being parsed as a URL?

[08:31:21.0000] <annevk>
 what does [:\s] do?

[08:42:38.0000] <annevk>
odinho: maybe fix that CORS graphic tomorrow? ;)

[08:43:50.0000] <GPHemsley>
annevk: Well, a lot of error messages tend to have <term>: <error message>

[08:44:11.0000] <GPHemsley>
annevk: So when I copy and paste them into the location bar to search, Firefox interprets it as a URL and fails.

[08:44:57.0000] <annevk>
"http: test" wfm

[08:45:13.0000] <annevk>
but the address bar does not have much to do with URL parsing

[08:46:12.0000] <boogyman>
GPHemsley: that shouldn't be interpreted as a url anyway, because it's missing the slashes

[08:46:45.0000] <GPHemsley>
annevk: Try "warning: text"

[08:47:03.0000] <zewt>
annevk: well, address bar parsing should probably be a superset of url parsing (but if they decide not to do that it's not really the spec's problem)

[08:47:26.0000] <zewt>
eg. pasting a URL from a link should always work, but what it does with things like ^ is up to it

[08:47:36.0000] <GPHemsley>
boogyman: I'm not sure what you mean. There are URLs that don't have slashes (e.g. mailto:)

[08:47:57.0000] <annevk>
GPHemsley: seems like Gecko should not do dispatching to external handlers from the address bar but instead use Google

[08:48:14.0000] <annevk>
GPHemsley: doesn't make much sense to me to handle external schemes there

[08:48:26.0000] <zewt>
firefox even screws up "site:foo.com bar" if i try to search in the address bar, heh

[08:48:34.0000] <annevk>
opera does too

[08:48:36.0000] <GPHemsley>
annevk: Try "irc: test"

[08:48:47.0000] <zewt>
(chrome gets that right, at least)

[08:48:51.0000] <zewt>
(site:, i mean)

[08:49:01.0000] <annevk>
GPHemsley: yeah sure, same thing imo

[08:49:18.0000] <annevk>
GPHemsley: file/http/https are the only scheme-things that should probably work there

[08:49:33.0000] <GPHemsley>
annevk: What are you suggesting they do for known protocols that they don't support (e.g. IRC)? Nothing?

[08:49:34.0000] <zewt>
anything that can fetch a file should, eg. ftp

[08:49:52.0000] <zewt>
anything that can launch a ui (if you have an irc handler registered, irc: should work)

[08:50:04.0000] <annevk>
GPHemsley: use Google?

[08:50:11.0000] <zewt>
(if someone gives an IRC URL in here, and i copy and paste it into the address bar, it should work if clicking a link would have worked)

[08:50:14.0000] <annevk>
I'd rather not have it launch UI from the address bar

[08:50:32.0000] <GPHemsley>
I think they'd disagree with you on that point (as do I)

[08:50:39.0000] <zewt>
that doesn't make sense, http is launching ui (an html document)

[08:50:48.0000] <zewt>
(well, if it points to html, you know what i mean)

[08:51:01.0000] <GPHemsley>
I agree with zewt: If I paste an IRC URL into the location bar, it should not go to search

[08:51:06.0000] <annevk>
no, http loads in the top-level browsing context

[08:51:16.0000] <annevk>
in any event, not my problem :)

[08:51:36.0000] <zewt>
yes, creating ui :)

[08:52:37.0000] <zewt>
gp: i suspect "web compatibility for URLs" and "user compatibility for people typing random noise in the address bar" is its own complicated problem; no idea what the overlap looks like

[08:52:56.0000] <zewt>
but the URL spec should only concern itself with the former

[08:53:26.0000] <zewt>
a hard enough problem by itself, heh

[08:54:50.0000] <zewt>
(i'm wondering if there are any cases of URLs that have to parse for web compatibility, but which conflict with address bars really wanting to parse user input differently, that might cause address bars to not accept every possible URL)

[08:57:42.0000] <zewt>
i suppose things like google metatags (site) could be in danger of that, where they might have to treat it differently if they end up with a scheme of "site", etc

[08:58:10.0000] <zewt>
(not an actual problem as long as there's no overlap between them and real schemes)

[09:05:49.0000] <SimonSapin>
TabAtkins: ping

[09:08:01.0000] <GPHemsley>
zewt, annevk: FTR, Firefox allows you to prefix something with '?' in order to force it to do a search.

[09:08:17.0000] <GPHemsley>
so "?site:test" will work

[09:49:18.0000] <annevk>
"I reserve this level of anger for when I'm flying Ryanair!" :-)

[10:10:12.0000] <Hixie>
annevk: not set on the top-level browsing context of a popup from an iframe that's sandboxed

[10:10:42.0000] <annevk>
Hixie: ah yeah, dunno either

[10:11:03.0000] <annevk>
Hixie: how about having cdn.whatwg.org or resources.whatwg.org or giving us access to images.whatwg.org?

[10:11:11.0000] <Hixie>
(that's the confusion that delayed me last time i tried to spec it, but i think it's clear now)

[10:11:17.0000] <Hixie>
sure

[10:11:23.0000] <Hixie>
you just want to stick images there, or other stuff too?

[10:11:27.0000] <annevk>
other stuff too

[10:11:29.0000] <Hixie>
k

[10:11:39.0000] <Hixie>
how about "anne.cdn.whatwg.org" :[D[D-)

[10:11:50.0000] <Hixie>
although "cdn" is a bit of a misnomer

[10:12:04.0000] <annevk>
yeah, agreed, Ms2ger suggested that

[10:12:10.0000] <annevk>
this is not just for me, fwiw

[10:12:22.0000] <Hixie>
yeah but i can only give one of you access at a time

[10:12:24.0000] <annevk>
it's for shared resources of *.spec.whatwg.org

[10:12:36.0000] <annevk>
Hixie: we're gonna manage access via GitHub

[10:12:44.0000] <Hixie>
ah right

[10:12:45.0000] <SimonSapin>
annevk: are you still in Lyon?

[10:12:53.0000] <annevk>
SimonSapin: back home

[10:12:59.0000] <SimonSapin>
ok

[10:13:12.0000] <Ms2ger>
You guys aren't taking the cdn thing seriously, are you? :)

[10:13:22.0000] <Hixie>
resources.whatwg.org done

[10:13:34.0000] <Hixie>
bbl

[10:17:12.0000] <annevk>
Ms2ger: well, I was, as I don't care about this bikeshed

[10:29:46.0000] <annevk>
I wonder if the CSS WG is open to defining "whatwggreen" as color value

[10:38:33.0000] <annevk>
data:text/html,<style>body{margin:.5em;font:20em sans-serif}b{color:%233c790a}</style>?&%23x2009;<b>&%23x20dd;</b>

[10:38:36.0000] <annevk>
so cool

[10:39:33.0000] <annevk>
(the thin space is arguably a hack)

[10:44:17.0000] <annevk>
hmm actually, ? needs to be green too

[11:19:23.0000] <GPHemsley>
annevk: And you gotta get the font right.

[11:55:46.0000] <GPHemsley>
I filled up the wiki sidebar with a bunch of linky goodness. Let me know if there's any links you want me to add.

[13:28:13.0000] <GPHemsley>
Can we move the spec stylesheets to resources.whatwg.org?

[13:29:36.0000] <Hixie>
feel free to make a copy, but i'm keeping mine :-P

[13:30:05.0000] <Hixie>
(i just have a spec-specific one for the HTML spec)

[13:33:47.0000] <GPHemsley>
/me imagines Hixie's house without any spoons or knives.

[13:40:31.0000] <abarth>
annevk: please file a bug: http://code.google.com/p/google-url/issues/entry

[14:51:27.0000] <GPHemsley>
Reviews welcome on my most recent mimesniff commit.

[15:34:52.0000] <smaug____>
jgraham: what was the name of the reviewing tool you talked about

[15:37:26.0000] <jgraham>
smaug____: critic

[15:37:47.0000] <jgraham>
Well technically "opera critic" (good pun, eh), but everyone calls it critic

[15:38:17.0000] <jgraham>
https://github.com/jensl/critic

[15:38:54.0000] <smaug____>
no no, obviously the page for it is http://www.theoperacritic.com/

[15:40:02.0000] <jgraham>
heh

[15:40:08.0000] <jgraham>
/me -> sleep

[16:25:28.0000] <gsnedders>
jgraham: It's called "opera critic"? I thought it was just "critic"?


2012-11-04
[19:12:26.0000] <GPHemsley>
/me grumbles something about fonts that annevk already grumbled a year and a half ago.

[19:13:47.0000] <GPHemsley>
Does anyone know of any images that do not use an "image/" MIME type?

[19:14:35.0000] <GPHemsley>
(Perhaps because they are part of an "application/" container, à la "application/ogg"?)

[19:19:06.0000] <Hixie>
application/xml ?

[19:19:26.0000] <GPHemsley>
Hixie: What images are in that format?

[19:19:29.0000] <Hixie>
SVG?

[19:19:47.0000] <GPHemsley>
I'm under the impression that uses image/svg+xml

[19:19:54.0000] <Hixie>
it uses many things

[19:20:02.0000] <GPHemsley>
But it doesn't really matter, because XML MIME types don't get sniffed.

[19:20:10.0000] <Hixie>
application/pdf?

[19:20:16.0000] <Hixie>
depends what you mean by "image", i guess

[19:20:26.0000] <GPHemsley>
yeah, I suppose

[19:20:27.0000] <Hixie>
ascii art images can be sent as text/plain

[19:20:30.0000] <GPHemsley>
heh

[19:20:33.0000] <GPHemsley>
probably not that

[19:21:16.0000] <GPHemsley>
Hixie: Have a look at mimesniff when you get a chance. I've cleaned most of it up, I think.

[19:21:28.0000] <Hixie>
remind me monday

[19:21:52.0000] <GPHemsley>
alright

[19:22:01.0000] <GPHemsley>
hopefully by then "most" will be closer to "all"

[19:22:06.0000] <Hixie>
cool :-)

[19:22:21.0000] <Hixie>
i wish html was easy like that :-P

[19:22:34.0000] <GPHemsley>
(I still have to deal with sections 7.2 and 7.7.)

[19:22:42.0000] <GPHemsley>
Yeah, I don't know how you do it

[19:23:11.0000] <Hixie>
i get paid

[19:23:15.0000] <GPHemsley>
ah, there's that

[19:23:18.0000] <GPHemsley>
/me doesn't

[19:23:19.0000] <Hixie>
:-)

[19:23:24.0000] <GPHemsley>
(by anybody)

[19:23:29.0000] <GPHemsley>
(for anything)

[19:23:49.0000] <annevk>
abarth: http://code.google.com/p/google-url/issues/detail?id=32 not the best report, but there you go

[19:24:05.0000] <Hixie>
GPHemsley: you at school/university, or just unemployed?

[19:24:15.0000] <GPHemsley>
just unemployed at the moment

[19:25:09.0000] <GPHemsley>
I left school at the end of spring semester, and how long unemployment lasts dictates whether I go back to school to do something else.

[19:25:26.0000] <GPHemsley>
So, you know, if you've got money to throw at me... ;)

[19:25:42.0000] <Hixie>
i wish

[19:27:01.0000] <Hixie>
(highly recommend higher education if you do want a job at a company like google, btw)

[19:27:42.0000] <GPHemsley>
I've got a Bachelor's and a year of grad school. How much does that buy me?

[19:27:49.0000] <zewt>
heh, when we were hiring, people with more than a CS only made me think "did they stay in school longer because they couldn't find a job?"

[19:27:53.0000] <Hixie>
GPHemsley: more than i have :-)

[19:28:52.0000] <GPHemsley>
Well, the offer for an offer is on the table. I'm enjoying this work, but it'd sure be nice to get paid while I do it.

[19:29:17.0000] <GPHemsley>
Feel free to spread that around. ;)

[19:29:57.0000] <GPHemsley>
In the meantime, I'm gonna go watch TV.

[20:10:21.0000] <annevk>
hmm

[20:10:33.0000] <annevk>
so Internet Explorer does not include the leading slash in pathname

[20:11:51.0000] <annevk>
and between Internet Explorer 6 and 7 they swapped \ for / in file: URLs

[20:12:14.0000] <annevk>
and the Windows drive thing is [a-z][:|

[20:12:15.0000] <annevk>
]

[20:12:25.0000] <annevk>
with | being converted to :

[20:12:34.0000] <annevk>
oh, also [A-Z] and it's case-sensitive

[20:12:39.0000] <annevk>
not too bad I guess

[20:14:02.0000] <annevk>
http://netrenderer.com/ ++

[21:13:26.0000] <MikeSmith>
oh wow

[21:13:37.0000] <MikeSmith>
didn't know about http://netrenderer.com/

[00:22:50.0000] <jgraham>
gsnedders: Without checking, I think the internal release email called it "the Opera Critic", and it says "Opera Critic" at the top of the page

[00:23:01.0000] <jgraham>
But I dunno. jl never calls it that

[00:24:31.0000] <asmodai>
Cute name that way

[01:54:34.0000] <MikeSmith>
was there some point within the last couple years when Hixie added more named character references?

[01:54:47.0000] <MikeSmith>
e.g., &dollar; and &minus; ?

[01:59:35.0000] <MikeSmith>
if now find http://html5.org/r/5557 but that's not what I'm looking for

[01:59:38.0000] <annevk>
Hixie imports the references from whatever the MathML comes up with

[01:59:46.0000] <annevk>
Math WG*

[01:59:57.0000] <annevk>
so if they make changes, those would affect HTML

[01:00:05.0000] <MikeSmith>
ok yeah I remember that now

[01:00:19.0000] <MikeSmith>
so I wonder if they made some changes upstream

[01:01:00.0000] <MikeSmith>
I'm asking because the validator source is missing some

[01:01:37.0000] <MikeSmith>
I guess it might make sense for the the part of the validator source that handles this to be imported and generated from the Math WG source

[01:02:38.0000] <MikeSmith>
I am pretty sure Henri already is generating the source

[01:02:56.0000] <MikeSmith>
but whatever script he's using to do that is not in the repo

[01:04:45.0000] <annevk>
weird that the related bug is marked NEEDSINFO while it was in fact fixed (for the multi-code point entities)

[01:05:42.0000] <annevk>
MikeSmith: I guess I'd ask hsivonen then

[01:05:56.0000] <MikeSmith>
yeah

[01:07:53.0000] <Ms2ger>
/me finds http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json

[01:10:40.0000] <MikeSmith>
ah yeah

[01:11:21.0000] <MikeSmith>
which reminds me Hixie must have some other list that he uses along with the upstream Math source

[01:11:45.0000] <MikeSmith>
but the Match source doesn't know anything about semicolon-less character references

[01:12:05.0000] <MikeSmith>
but which that entities.json is aware of

[01:14:22.0000] <annevk>
So masinter mentioned that Dave Thaler from Microsoft registered a whole bunch of URI schemes as provisional

[01:14:25.0000] <MikeSmith>
looking at the cvs log for http://www.w3.org/2003/entities/2007/htmlmathml-f.ent I see the only substantive change made to it was in February 2010 when David added NotGreaterFullEqual to it

[01:14:31.0000] <annevk>
http://www.iana.org/assignments/uri-schemes.html is a whole lot more up to date now

[01:14:35.0000] <MikeSmith>
annevk: yeah he told me that too

[01:14:54.0000] <MikeSmith>
in fact that was very recent I think

[01:15:02.0000] <MikeSmith>
I vaguely remember seeing mail about it

[01:17:54.0000] <asmodai>
morning folks

[01:18:58.0000] <Ms2ger>
Morning

[01:20:23.0000] <annevk>
Ms2ger: http://docs.sqlalchemy.org/en/rel_0_7/core/engines.html#database-urls - the problem here is that browsers only treat certain schemes as having that syntax

[01:20:48.0000] <annevk>
Ms2ger: I'm not sure if we can reconcile that somehow

[01:20:59.0000] <Ms2ger>
Dunno if we need to

[01:21:04.0000] <annevk>
Ms2ger: I guess it would be nice if we could so these things "would just work" in JavaScript

[01:21:42.0000] <annevk>
Apart from this another uncertain bit seems to be whether <query> needs to be parsed separately or not for non-relative schemes

[01:21:57.0000] <asmodai>
Did the definition of "talisman" to mean essentially a nop start with the HTML specs or was it already in tech use before? I never saw it before until I encountered it in relation to xmlns.

[01:22:02.0000] <annevk>
Apparently some UAs treat about:blank?test as about:blank and others do not

[01:23:38.0000] <annevk>
Chrome/Safari don't; Opera/Gecko do

[01:23:59.0000] <MikeSmith>
asmodai: Is that used in the current HTML spec?

[01:24:26.0000] <asmodai>
I encountered in various places, e.g. http://www.w3.org/html/wg/wiki/ChangeProposals/html:xmlns

[01:24:34.0000] <asmodai>
/me checks standards

[01:24:43.0000] <annevk>
asmodai: "tech use" dunno, as far as web specs I read goes, I believe Hixie coined it

[01:24:56.0000] <asmodai>
annevk: Ah, that might account for it.

[01:25:17.0000] <annevk>
and it's still there in the global attributes section

[01:25:17.0000] <asmodai>
MikeSmith: Doesn't seem to be in any specs as far as I can quickly see, mostly talks about standards

[01:25:28.0000] <asmodai>
annevk: I like the term though.

[01:25:53.0000] <MikeSmith>
annevk: it's just used about xmlns?

[01:26:03.0000] <MikeSmith>
/me reads the global attributes section

[01:26:03.0000] <annevk>
MikeSmith: yeah

[01:26:06.0000] <MikeSmith>
ok

[01:26:33.0000] <asmodai>
annevk: Ah yes, see it now

[01:26:46.0000] <MikeSmith>
asmodai: it's just a word :) there's other stuff more worthy of hate

[01:27:15.0000] <asmodai>
MikeSmith: Haha, I am not hating, I like it. :)

[01:27:30.0000] <MikeSmith>
ah

[01:27:32.0000] <asmodai>
MikeSmith: Just hadn't encountered it before and wondered if I missed some tech terminology :)

[01:27:44.0000] <MikeSmith>
somehow I misread your "like" as "hate"

[01:27:48.0000] <annevk>
Ms2ger: maybe if it keeps coming up we could make the "relative scheme" list dynamic from a JS perspective

[01:28:00.0000] <annevk>
Ms2ger: not entirely sure if that's desirable though

[01:28:00.0000] <asmodai>
MikeSmith: *grin* daijoubu yo! :D

[01:28:36.0000] <asmodai>
I encountered it because I am currently messing with SVG inline in HTML 5

[01:28:39.0000] <MikeSmith>
asmodai: I think it was used before in that context, but can't really recall

[01:28:59.0000] <annevk>
we used to have a funny thing for the / in <img/> too, but that got removed

[01:29:07.0000] <asmodai>
MikeSmith: For a parsing/tokenizing PoV it's clearer than calling it a nop.

[01:29:15.0000] <MikeSmith>
yeah

[01:29:59.0000] <annevk>
"Then, if the element is one of the void elements, then there may be a single U+002F SOLIDUS character. This character has no effect except to appease the markup gods. As this character is therefore just a symbol of faith, atheists should omit it."

[01:30:24.0000] <asmodai>
rofl

[01:30:28.0000] <MikeSmith>
annevk: so is it preferable to have about:blank?test treated as about:blank or it as case where it really doesn't matter as long as UAs just treat it the same?

[01:30:53.0000] <MikeSmith>
hah yeah the "atheists should omit it" bit

[01:30:54.0000] <asmodai>
annevk: I can see why that got removed, but dang, that's plain brilliant.

[01:31:38.0000] <annevk>
MikeSmith: Chrome WONTFIXED their bug on it (no compat concerns), Gecko has an about:* page that uses the query string functionality, and I cannot test Internet Explorer

[01:31:53.0000] <MikeSmith>
ok

[01:32:05.0000] <annevk>
MikeSmith: It might be nice to support it so about:unicorn can support a color parameter

[01:32:53.0000] <MikeSmith>
heh

[01:33:27.0000] <annevk>
but it does not make sense for javascript: and data:

[01:33:37.0000] <asmodai>
annevk: I'd propose Valve's balloonicorn: http://store.valvesoftware.com/product_images/main_images/balloonicorn_main_01.png

[01:33:38.0000] <asmodai>
:)

[01:33:39.0000] <annevk>
but they could be special cased in either the API or elsewhere

[01:34:02.0000] <annevk>
asmodai: haha; I need to find a public domain unicorn or create one...

[01:34:06.0000] <annevk>
asmodai: preferably SVG

[01:34:27.0000] <asmodai>
http://en.wikipedia.org/wiki/File:Invisible_Pink_Unicorn.svg

[01:34:45.0000] <annevk>
heh, just found the same :)

[01:34:47.0000] <MikeSmith>
ACID4 should be unicorn-based

[01:34:51.0000] <asmodai>
annevk: :D

[01:35:22.0000] <MikeSmith>
btw I found Henri's named-character-references generator code

[01:35:23.0000] <MikeSmith>
http://hg.mozilla.org/projects/htmlparser/file/default/translator-src/nu/validator/htmlparser/generator/GenerateNamedCharacters.java#l40

[01:36:14.0000] <MikeSmith>
uses a regexp to parse the table in the spec

[01:37:03.0000] <MikeSmith>
not sure it's worth switching it to do elsewise so I guess I'll just re-run it and see what I get

[01:38:22.0000] <annevk>
so yeah, with some cleanup I think we could use that SVG file

[01:38:58.0000] <annevk>
it's about time the platform has native unicorn support

[01:40:26.0000] <asmodai>
lol

[01:52:33.0000] <asmodai>
annevk: I predict bug reports demanding the unicorn be replaced by sharks with lasers

[02:13:40.0000] <annevk>
http://html5.org/temp/unicorn.svg

[02:13:52.0000] <annevk>
I wonder if there's some tool that clean up those coordinates

[02:13:56.0000] <annevk>
can*

[02:24:26.0000] <asmodai>
Hahaha

[02:24:31.0000] <asmodai>
Awesome Anne

[02:25:20.0000] <asmodai>
annevk: https://github.com/RazrFalcon/SVGCleaner ?

[02:29:38.0000] <annevk>
asmodai: can you maybe run that? I don't have the right OS

[02:29:44.0000] <annevk>
http://tools.ietf.org/html/rfc6694 is for about it seems

[02:30:56.0000] <annevk>
but it does not deal with e.g. about:BL%41NK not working

[02:31:03.0000] <annevk>
so I guess it's not useful

[02:31:16.0000] <asmodai>
annevk: Neither do I at the moment >_<

[02:31:33.0000] <asmodai>
need to reinstall this entire box, only have console access on FreeBSD atm

[02:31:41.0000] <asmodai>
and no VM around either

[02:31:44.0000] <annevk>
"The about:blank URI references a blank page." oh my what an idiots

[02:31:56.0000] <annevk>
they removed everything that was useful about that spec

[02:32:06.0000] <annevk>
asmodai: no worries, this can wait

[02:32:23.0000] <annevk>
should probably do host parsing first anyway before adding easter eggs

[02:32:30.0000] <asmodai>
*grin*

[02:32:34.0000] <annevk>
(and defining schemes in general)

[02:33:06.0000] <asmodai>
annevk: When they say blank page, do they mean a blank HTML page?

[02:33:41.0000] <annevk>
well the first definition was a resource whose MIME type is text/html and encoding is utf-8 and consists of the empty string

[02:33:45.0000] <annevk>
that's the one you want

[02:33:51.0000] <annevk>
now all that is undefined

[02:33:55.0000] <asmodai>
Yea

[02:34:10.0000] <asmodai>
because blank could also mean simply an initialized panel with no content whatsoever

[02:34:25.0000] <asmodai>
panel as in UI element

[02:38:08.0000] <asmodai>
You'd think people would've learnt from the past and just be explicit about stuff like this in specs.

[02:41:21.0000] <annevk>
it was explicit and then it was removed

[02:41:55.0000] <annevk>
http://tools.ietf.org/html/draft-holsten-about-uri-scheme-06#section-5.1.1

[02:43:13.0000] <asmodai>
annevk: I wonder what people have against explicitly defininf it.

[02:43:15.0000] <asmodai>
defining

[02:43:38.0000] <asmodai>
Then again, the IETF also isn't what it used to be since politics entered it

[02:46:46.0000] <annevk>
dunno either, I'm not really interested in following their mailing lists as I usually end up point-by-point sniping rather than getting somewhere

[02:48:09.0000] <annevk>
Lachy's older draft had the same problem btw in theoretically working with percent-escaped bytes

[03:03:42.0000] <asmodai>
annevk: having done compiler work, I just know how annoying a spec is that leaves stuff hanging and dangling. It's like people don't like clarity at times

[03:05:59.0000] <MikeSmith>
http://link.springer.com/chapter/10.1007%2F978-3-642-32759-9_26 "Reachability Analysis of the HTML5 Parser Specification and Its Application to Compatibility Testing"

[03:18:53.0000] <asmodai>
hot dang

[03:18:55.0000] <asmodai>
http://www.audiotool.com/app

[03:19:02.0000] <asmodai>
that's some impressive use of HTML5

[03:49:46.0000] <AryehGregor>
MikeSmith, so did they file bugs?  :)

[03:50:48.0000] <MikeSmith>
AryehGregor: one of the authors posted a question to the whatwg list about the adoption-agency algorithm

[04:26:31.0000] <annevk42>
http://www.ietf.org/mail-archive/web/apps-discuss/current/msg05435.html "in reality no sane software developer should rely on the semantics of any particular “about” token"

[04:26:36.0000] <annevk42>
Tim flipping bozo bits again

[04:26:47.0000] <annevk42>
I'm not sure why I

[04:27:14.0000] <annevk42>
'm going through the archives, but it seemed potentially interesting to find out why they fucked up so badly

[04:34:16.0000] <annevk42>
It seems it was removed somewhere around http://www.ietf.org/mail-archive/web/apps-discuss/current/msg03120.html when it was made a WG item but there's no mention of why

[04:40:44.0000] <annevk42>
http://www.ietf.org/mail-archive/web/apps-discuss/current/msg02863.html does not mention it either

[04:41:59.0000] <annevk42>
but does seem to indicate why Lachy gave up on them

[05:04:06.0000] <gsnedders>
jgraham: Interesting, given nowhere else on github does it call it that!

[05:06:34.0000] <gsnedders>
My monitor is… clicking.

[05:11:53.0000] <Philip`_>
MikeSmith: About semicolon-less character references: are you looking for a file like http://svn.whatwg.org/webapps/entities-legacy.inc ?

[05:14:03.0000] <Ms2ger>
Hey Philip`!

[05:52:36.0000] <[tm]>
Philip`_:  yeah, that (about character references)

[05:52:41.0000] <[tm]>
thanks

[05:54:09.0000] <[tm]>
though I've since figured out there's no bug in Henri's code

[05:54:22.0000] <[tm]>
I was just misunderstanding it

[06:38:03.0000] <GPHemsley>
/me wonders whether such a long document was required just to say that "about:blank" is blank.

[06:38:51.0000] <GPHemsley>
s/whether/why/, if you like

[06:40:22.0000] <Ms2ger>
"IETF"

[06:47:08.0000] <[tm]>
ha I see the author of the about blank rfc is that "sm" dude

[06:47:37.0000] <[tm]>
no wonder it's DOA

[07:25:30.0000] <Hixie>
annevk42: i think the use of "talisman" in the context of /> is actually hsivonen's, i would have called it something far less eloquent

[07:46:30.0000] <[tm]>
+1 to hsivonen way with words

[07:52:41.0000] <asmodai>
Ah, so hsivonen then?

[07:53:04.0000] <asmodai>
Still awesome.

[07:53:27.0000] <asmodai>
And I still have a tab open with that unicorn of anne's, heh

[08:27:38.0000] <jgraham>
So anyone at a university want to steal us a copy of the HTML5 testing paper?

[08:28:03.0000] <charl>
jgraham: will any university do?

[08:28:11.0000] <jgraham>
charl: Probably

[08:28:22.0000] <charl>
jgraham: html5 testing paper? what/where's that?

[08:28:27.0000] <jgraham>
Any one with a subscription to springer publications at least

[08:28:38.0000] <charl>
ah, ok

[08:28:50.0000] <jgraham>
http://link.springer.com/chapter/10.1007%2F978-3-642-32759-9_26

[08:28:53.0000] <charl>
i work at a university but i don't know about a subscription to that

[08:29:06.0000] <Ms2ger>
No access here either

[08:29:32.0000] <jgraham>
It's almost liek they don't want people reading their tuff

[08:29:36.0000] <jgraham>
*stuff

[08:29:57.0000] <zewt>
seems to me that if you're testing stuff and then not letting anyone see the results, motives come into question, heh

[08:30:22.0000] <charl>
the authors appear to be japanese?

[08:30:39.0000] <zewt>
since "improving the quality of things" plainly isn't the top priority, and if that's not the priority of testing ...

[08:31:21.0000] <charl>
looks more like somebody did research for their own benefit, not for the benefit of the web community

[08:35:18.0000] <jgraham>
Well sure, to a certain extent the point of doing research if you are an academic is that other academics will notice and give you a job where you can keep doing research

[08:35:54.0000] <jgraham>
There is more to it than that of course, but the current - much reviled - publication system is only really good for that purpose

[08:36:16.0000] <charl>
that is true but if the research doesn't have improvement in some way as a consequence, what's the point?

[08:36:43.0000] <Ms2ger>
Funding

[08:36:56.0000] <charl>
lol yeah

[08:36:59.0000] <charl>
pretty-much

[10:00:01.0000] <Philip`_>
jgraham: Apparently I'm still able to steal papers from there

[10:14:31.0000] <SimonSapin>
annevk: "All but two single-byte encodings have a unique index." What does that mean?

[11:09:47.0000] <annevk42>
SimonSapin: iso-8859-8 and iso-8859-8-i (iirc) have an identical index

[11:12:45.0000] <odinho_>
05:13 < MikeSmith> didn't know about http://netrenderer.com/ < saved my bun for many years :P

[11:13:17.0000] <odinho_>
Although in the beginning I never remebered the name, so I always had to re-find it again.

[11:36:49.0000] <asmodai>
annevk42: Still have that unicorn open in a tab, remains awesome :)

[11:38:05.0000] <annevk42>
heh

[13:14:20.0000] <GPHemsley>
The mimesniff rewrite is almost unofficially complete.

[13:15:10.0000] <GPHemsley>
Reviews welcome as I tie up loose ends.

[13:15:23.0000] <GPHemsley>
(Then we can get to the real bug fixinging.)

[13:15:27.0000] <GPHemsley>
ing

[13:27:51.0000] <aleray>
hi, i'm using html5lib and lxml to tidy some html content. For some reason, when I parse the content into a tree, it escapes the colons from xmlns attributes

[13:28:25.0000] <aleray>
eg. xmlnsU0003Adct="http://purl.org/dc/terms/"

[13:28:59.0000] <aleray>
why does it do it and how can I avoid this?

[13:31:49.0000] <annevk>
prolly because you parse HTML and use an XML-aware tree

[13:32:18.0000] <aleray>
annevk, thanks. what do you advise instead?

[13:33:12.0000] <annevk>
I guess you should use some tree structure that can deal with xmlns:dct

[13:33:28.0000] <annevk>
(with xmlns:dct not being in the XMLNS namespace, as is the case for HTML content)

[13:36:27.0000] <aleray>
annevk, what are the other tree structures possible?

[13:37:13.0000] <annevk>
maybe gsnedders can help you out there, it's been ages...

[13:37:23.0000] <aleray>
ok. Just foudn that http://stackoverflow.com/questions/12253791/html5lib-with-lxml-treebuilder-doesnt-parse-namespaces-correctly

[13:37:26.0000] <aleray>
reading...

[13:39:57.0000] <annevk>
the main problem though is using xmlns attributes in text/html content, that's just bogus

[13:41:12.0000] <aleray>
I'm gonna work with real webpages so that might happen unfortunatly

[13:45:33.0000] <aleray>
annevk, I basically want to write a rdfa spider. What would you advise regarding malformed html + rdfa pages?

[14:39:55.0000] <GPHemsley>
Does HTML have a stance on the Accept-Charset header?

[15:50:41.0000] <gsnedders>
aleray: Basically all the Python DOM impls don't support HTML DOMs, so you're basically stuck, even with alternate models like ElementTree.

[15:51:01.0000] <gsnedders>
aleray: If you're willing to take the perf hit, you could probably fork ElementTree quite easily to remove the checks


2012-11-05
[16:45:53.0000] <GPHemsley>
/me imagines what a world with an Internet Media Type like 'archive/tar+gz' would look like.

[16:46:14.0000] <GPHemsley>
'archive/tar+gzip' perhaps

[16:47:35.0000] <GPHemsley>
archive/tar+bzip2

[16:49:11.0000] <GPHemsley>
archive/xpi+zip

[16:49:25.0000] <GPHemsley>
hmm... needs some work

[16:52:29.0000] <GPHemsley>
image/svg+xml+bzip2

[16:53:10.0000] <GPHemsley>
maybe image/svg+xml.bzip2

[16:54:44.0000] <GPHemsley>
image/svg+xml$bzip2

[16:55:10.0000] <GPHemsley>
image/svg+xml!bzip2

[16:55:14.0000] <GPHemsley>
/me shrugs.

[17:11:30.0000] <GPHemsley>
/me also thinks that there should be an alias system, similar to how Encoding is doing it.

[18:52:15.0000] <wirepair_>
anyone here work with HSTS?

[19:03:33.0000] <MikeSmith>
aleray: you could try using validator.nu HTML parser instead

[19:03:45.0000] <MikeSmith>
http://about.validator.nu/htmlparser/

[19:04:06.0000] <wirepair_>
hey mike, are you familiar with HSTS at all?

[19:04:22.0000] <MikeSmith>
wirepair_: nope sorry

[19:04:26.0000] <MikeSmith>
dunno even what it is

[19:04:34.0000] <wirepair_>
strict-transport-security

[19:04:39.0000] <MikeSmith>
ah

[19:04:40.0000] <wirepair_>
for forcing https

[19:04:44.0000] <MikeSmith>
yeah

[19:04:53.0000] <MikeSmith>
so yeah heard of it but don't know the details

[19:04:59.0000] <MikeSmith>
never have worked with it

[19:05:08.0000] <wirepair_>
ok thanks anyways :)

[19:29:48.0000] <MikeSmith>
wirepair_: I guess abarth would be a good person to ask

[19:29:51.0000] <MikeSmith>
when he's around

[19:30:08.0000] <wirepair_>
yeah

[19:30:12.0000] <wirepair_>
will do

[19:35:02.0000] <Hixie>
GPHemsley: "archive" is spelt "multipart" in mime's world

[20:25:04.0000] <GPHemsley>
Hixie: AFAICT, "multipart" is mostly used for things like e-mail, where multiple files are included in a single file body, with a particular format. That's not the same as an "archive" as I would define it.

[20:25:17.0000] <GPHemsley>
"The body must then contain

[20:25:18.0000] <GPHemsley>
   one or more body parts, each preceded by a boundary delimiter line,

[20:25:18.0000] <GPHemsley>
   and the last one followed by a closing boundary delimiter line."

[20:26:03.0000] <GPHemsley>
I'd say it's rather e-mail specific.

[20:27:55.0000] <GPHemsley>
or "Internet message", if you'd like

[20:28:10.0000] <GPHemsley>
(multipart/voice-message suggests it's not just e-mail)

[20:28:51.0000] <GPHemsley>
but still, the list is small, and I don't think "multipart" and "archive" are necessarily the same thing

[20:29:44.0000] <GPHemsley>
The worst part, as annevk knows from his dealings with URLs, is that it's hard to track down the set of documents that describe all of what a MIME/Internet media type is and how the registry works, etc.

[20:30:11.0000] <GPHemsley>
It's strewn over a bunch of different RFCs, some of which are only partially obsoleted

[20:31:00.0000] <Hixie>
oh MIME definitely used to be for e-mail only

[20:31:13.0000] <Hixie>
i'm just saying the type that MIME uses for multiple files (an archive) is "multipart"

[20:31:24.0000] <Hixie>
but yes, multipart does imply a particular format for historical reasons

[20:31:51.0000] <GPHemsley>
I don't think you'd ever see something like "multipart/zip", even if that format restriction was lifted

[20:32:14.0000] <GPHemsley>
but I just discovered that there is currently a new draft document in the works

[20:32:50.0000] <GPHemsley>
http://tools.ietf.org/html/draft-ietf-appsawg-media-type-regs-14

[20:34:01.0000] <GPHemsley>
I don't have the mind to read it fully right now, though

[20:34:23.0000] <Hixie>
yeah, i was just coming to that conclusion myself :-)

[20:34:54.0000] <zewt>
what was "application/*" ever even supposed to mean

[20:34:56.0000] <GPHemsley>
last updated in June... not sure what that means for its progress

[20:35:08.0000] <zewt>
"a format read by applications" doesn't seem like it's much of a categorization, heh

[20:35:28.0000] <GPHemsley>
zewt: One of the RFCs describes that somewhere, but I'm too tired to look it up

[20:35:39.0000] <GPHemsley>
probably not a great definition, whatever it is, though

[20:36:19.0000] <zewt>
guessing it's something meaningless, because it sure seems like a meaningless group

[20:36:30.0000] <GPHemsley>
Does the RFC Editor's Queue mean that a draft is almost done?

[20:36:45.0000] <GPHemsley>
/me is not up on IETF terminology

[20:37:13.0000] <zewt>
actually it just seems like a weird name for "we don't have a category for this"

[20:38:03.0000] <GPHemsley>
probably

[20:38:11.0000] <zewt>
or at least that's what it turned into

[20:38:28.0000] <GPHemsley>
I was wondering whether also having "document" would make things better or worse

[20:39:49.0000] <zewt>
coming up with a bunch of new categories probably wouldn't actually help make things less confusing, particularly since it's not a single axis categorization so there's going to be overlap

[20:41:12.0000] <GPHemsley>
The only two I'm really proposing are "font" and "archive"; I think those are distinct enough to warrant their own categories.

[20:41:36.0000] <GPHemsley>
I think we can probably deprecate a few categories, too.

[20:41:50.0000] <GPHemsley>
But IDK. I haven't spent too much time thinking about it or looking into it yet.

[20:42:04.0000] <zewt>
but there are already mime types for the major file formats in use, so unless you think there'll be a big influx of new archive formats...

[20:42:05.0000] <Hixie>
/me mumbles something about just dropping this whole thing as much as possible

[20:42:07.0000] <GPHemsley>
(I did see a suggestion that "font" is being used in the wild somewhere.)

[20:42:28.0000] <GPHemsley>
zewt: Well, I was also proposing an alias mechanism, too.

[20:42:46.0000] <GPHemsley>
Hixie: The problem is, magic numbers aren't always magic.

[20:43:05.0000] <GPHemsley>
Nor should they always be.

[20:43:09.0000] <zewt>
sounds like something that would cause breakage and busywork

[20:43:50.0000] <GPHemsley>
Mozilla uses various ZIP-derived formats, for example. They're really just rebranded ZIPs, actually. Magic numbers wouldn't allow that.

[20:44:34.0000] <zewt>
but introducing an "archive/zip" alias for application/zip would only be making things more complicated

[20:45:02.0000] <GPHemsley>
zewt: It depends on how it was implemented/specced. Without any specifics, it's probably not worth speculating.

[20:45:46.0000] <zewt>
if it results in people serving ZIPs from HTTP servers with "Content-Type: archive/zip", then i don't think it matters how it's specced

[20:46:04.0000] <zewt>
it's something that people have to handle that they don't have to today

[20:48:20.0000] <GPHemsley>
It's a lot easier to handle "archive/*" than arbitrary types

[20:48:42.0000] <zewt>
you have to handle arbitrary types; application/zip isn't going away

[20:49:30.0000] <GPHemsley>
alright; like I said, I'm tired; not worth getting into a discussion right now

[20:49:34.0000] <zewt>
anyone who wants to say "match all mime types that are archive-like formats" will always need a list of formats

[20:50:26.0000] <GPHemsley>
zewt: We can discuss this more tomorrow, if you want. (Feel free to review mimesniff in the meantime.)

[20:50:30.0000] <GPHemsley>
/me heads off to bed.

[20:51:03.0000] <GPHemsley>
Oh, P.S.: http://tools.ietf.org/html/draft-ietf-appsawg-media-type-suffix-regs-07

[20:56:50.0000] <MikeSmith>
jgraham: I have a PDF copy of that HTML5 parser paper

[20:57:59.0000] <MikeSmith>
the references section lists html5lib

[20:58:09.0000] <MikeSmith>
and the validator.nu parser

[21:00:49.0000] <MikeSmith>
there is a section where they identify some markup cases where implementations have "incompatibilities" with the spec

[21:01:45.0000] <MikeSmith>
they fine one such incompatibility in Safari, 3 in html5lib, and 6 in the vnu parser and Firefox

[21:01:51.0000] <MikeSmith>
*find

[21:02:01.0000] <MikeSmith>
and none in Opera or IE

[21:02:59.0000] <MikeSmith>
one case they say the vnu parser and Firefox get wrong is this:

[21:03:01.0000] <MikeSmith>
<body><dd><optgroup><dd></dd></body>

[21:03:43.0000] <MikeSmith>
which parses as <body><dd><optgroup></optgroup></dd><dd></dd></body> in Safari, Opera, html5lib, and IE

[21:04:05.0000] <MikeSmith>
but as <body><dd><optgroup><dd></dd></optgroup></dd></body> in the vnu parser and FF

[21:05:15.0000] <MikeSmith>
<body><ruby><button><rp></rp></button></ruby></body> is another case that the vnu parser and FF and also Safari get wrong

[21:05:37.0000] <MikeSmith>
they parse it as <body><ruby><button></button><rp></rp></ruby></body>

[21:05:56.0000] <MikeSmith>
but it should stay as <body><ruby><button><rp></rp></button></ruby></body>

[21:07:33.0000] <MikeSmith>
ah the 3 cases they list as html5lib getting wrong are basically the same case

[21:07:46.0000] <MikeSmith>
so there're only one thing html5lib gets wrong

[21:07:46.0000] <MikeSmith>
w

[21:07:59.0000] <MikeSmith>
which is <body><table><li><li></li></table></body>

[21:08:20.0000] <MikeSmith>
it should parse as <body><li></li><li></li><table></table></body>

[21:08:31.0000] <MikeSmith>
but html5lib gives <body><li></li><table><li></li></table></body>

[21:09:16.0000] <MikeSmith>
and the 6 cases that FF and the vnu parser get wrong basically all come down to variations of the two cases listed above

[21:55:08.0000] <MikeSmith>
http://www.score.cs.tsukuba.ac.jp/~minamide/html5spec/model.html5

[23:12:10.0000] <annevk>
GPHemsley: seems like you're confusing MIME type and HTTP's Content-Encoding header

[23:15:02.0000] <annevk>
MikeSmith: pretty awesome that they found those bugs

[23:19:13.0000] <MikeSmith>
annevk: yeah and they found them by only testing with a subset of 24 elements

[23:19:34.0000] <MikeSmith>
if they tested with more they might find some other things that were missed

[23:20:25.0000] <MikeSmith>
btw the ruby bug they describe seems to have already been fixed in Gecko and WebKit

[23:20:42.0000] <MikeSmith>
actually I think it wasn't really even an oversight bug anyway

[23:21:33.0000] <MikeSmith>
it's just that the spec changed and the versions of Firefox and Safari they tested with at the time were before the parsers were brought up to date with the spec

[23:21:54.0000] <MikeSmith>
the versions they tested with were from around February I think

[23:22:26.0000] <annevk>
hmm okay

[00:03:15.0000] <MikeSmith>
question of the day:

[00:03:28.0000] <MikeSmith>
"Does IETF have an XML vocabulary for expressing ABNF (RFC 5234?) grammars?"

[00:03:45.0000] <MikeSmith>
solid gold

[00:04:47.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/uri/2012Nov/0005.html

[00:23:53.0000] <zcorpan>
"[whatwg] Question on Limits in Adaption Agency Algorithm" - does the provided case actually hit the loop limit? i'll admit that i don't know how aaa works but it's not obvious to me that it invokes the limit

[00:27:01.0000] <zcorpan>
though dropping the <i> makes the xyz go as the last child of body, so i guess it does invoke the limit

[00:40:50.0000] <annevk>
http://code.google.com/p/google-url/issues/detail?id=32 is an interesting discussion

[00:40:57.0000] <annevk>
it's about that weird behavior you found zcorpan

[01:02:11.0000] <zcorpan_>
annevk: http://simon.html5.org/tools/js/svg-optimizer/ (use quality 10 or so)

[01:05:21.0000] <annevk>
zcorpan_: higher is better?

[01:05:45.0000] <zcorpan_>
yes

[01:06:06.0000] <zcorpan_>
(try e.g. 0.1)

[01:06:11.0000] <annevk>
if I increase the quality the file savings get better...

[01:06:20.0000] <annevk>
oh wait, nm

[01:07:49.0000] <annevk>
I don't really see the difference between 10 and 100

[01:08:18.0000] <annevk>
zcorpan_: but this is very cool; how do I now remove the translate() ?

[01:08:43.0000] <zcorpan_>
change the viewBox values

[01:08:47.0000] <annevk>
zcorpan_: add it to each coordinate pair?

[01:09:06.0000] <zcorpan_>
something like that

[01:09:28.0000] <annevk>
would be nice if the tool did that

[01:11:48.0000] <zcorpan_>
this tool is such a gross hack that doing that is not implementable without reimplementing the whole thing in a more proper way

[01:11:56.0000] <zcorpan_>
like, e.g., operating on the parsed tree instead of the source

[01:15:26.0000] <annevk>
oh lol

[01:15:28.0000] <annevk>
okay then

[01:16:02.0000] <annevk>
did anyone write a tool to translate an SVG path and just get the normalized result?

[01:16:14.0000] <zcorpan_>
annevk: OH: "The behavior is very well-defined."

[01:16:40.0000] <annevk>
zcorpan_: I was quite surprised by that one

[01:18:41.0000] <annevk>
Inkscape reportedly has the ability to do this

[02:12:26.0000] <annevk>
zcorpan: I just got some SVG from ed and using that in your tool with a high quality makes the size bigger

[02:13:11.0000] <zcorpan>
annevk: not surprising if the original svg already uses integers for the coordinates, e.g.

[02:13:46.0000] <annevk>
k

[02:27:55.0000] <kennyluck>
I made a demo for calculating the dimension of a replaced element for whoever is interested: http://lists.w3.org/Archives/Public/www-archive/2012Nov/att-0010/replaced-element-dimension-calulation

[02:28:15.0000] <kennyluck>
It's a bit shocking that there's still non-interoperable case for this sort of thing...

[02:29:14.0000] <kennyluck>
(Note that most of the circles are draggable)

[02:31:50.0000] <annevk>
shocking and non-interoperable do not go together in one sentence

[02:32:07.0000] <annevk>
;)

[02:33:21.0000] <SimonSapin>
kennyluck: How does it work? What is each line?

[02:33:40.0000] <kennyluck>
huh

[02:33:42.0000] <annevk>
MikeSmith: public-iri has a restricted list?

[02:33:52.0000] <MikeSmith>
shouldn't

[02:33:54.0000] <kennyluck>
SimonSapin, the rectangle is the min/max constraint.

[02:33:59.0000] <annevk>
MikeSmith: you have to subscribe in order to post to it apparently

[02:34:07.0000] <MikeSmith>
hmm

[02:34:09.0000] <MikeSmith>
lemme check

[02:34:17.0000] <MikeSmith>
I can change that

[02:34:22.0000] <kennyluck>
SimonSapin, orange circle is the intrinsic dimension and the green circle is the specified dimension

[02:34:50.0000] <annevk>
my message did get archived at http://lists.w3.org/Archives/Public/uri/2012Nov/0007.html so I suppose it's not a big problem

[02:34:56.0000] <annevk>
but it's kind of a nuisance if someone cc's public-iri and you reply to that

[02:35:30.0000] <MikeSmith>
yeah

[02:35:49.0000] <kennyluck>
SimonSapin, oh, the red circle is the result dimension.

[02:36:05.0000] <SimonSapin>
kennyluck: I see, thanks

[02:36:56.0000] <kennyluck>
So I think to explain the min/max table for a replaced element in terms of this graph, it's something like this:

[02:39:03.0000] <kennyluck>
For a replaced element with intrinsic side and both dimension being 'auto' (not specified), the result dimension is the closest point from the intrinsic line to the constraint rectangle. Whenever there are multiple closest results (2 or infinity), the result dimension is the one that's closest to the intrinsic point.

[02:40:14.0000] <kennyluck>
s/2 or infinity/infinite ones/

[02:55:20.0000] <hsivonen>
MikeSmith: did the authors of the paper send it to you as a bug report? or was it up to you to discover that someone had written a paper about bugs without actually filing the bugs?

[02:58:08.0000] <jgraham>
hsivonen: Did you see the paper?

[02:58:43.0000] <hsivonen>
jgraham: no

[02:58:54.0000] <hsivonen>
jgraham: just a bug MikeSmith filed based on the paper

[03:06:13.0000] <hsivonen>
GPHemsley: my advice is trying to avoid fighting the IANA to make application/* make sense.

[03:06:41.0000] <hsivonen>
GPHemsley: better just treat the "application/" part as meaningless legacy boilerplate and move on with life.

[03:07:37.0000] <annevk>
fwiw, if you don't want jreschke to call you on that, s/IANA/IETF/

[03:07:56.0000] <annevk>
IANA supposedly does as they're told (except for when they broke all the registry URLs, that was them)

[03:23:47.0000] <kennyluck>
What paper?

[03:25:57.0000] <annevk>
kennyluck: http://krijnhoetmer.nl/irc-logs/whatwg/20121104#l-276

[03:26:32.0000] <kennyluck>
annevk, thanks~

[04:02:59.0000] <annevk>
http://html5.org/temp/unicorn.svg is now much smaller

[04:03:11.0000] <annevk>
further improvements under CC0 welcome

[04:05:17.0000] <annevk>
haha

[04:05:25.0000] <annevk>
that URL from that google-url bug report

[04:05:27.0000] <annevk>
http://%ef%bc%85%ef%bc%94%ef%bc%91.com/

[04:05:35.0000] <annevk>
gives different results in almost every browser

[04:06:11.0000] <annevk>
Safari's host name is the best ％４１.com (yes using fullwidth %, 4, and 1 afaict)

[04:07:50.0000] <annevk>
"The behavior is very well-defined."

[04:23:20.0000] <annevk>
matjas: you around? saw that １ turns into some Punycode string per http://mothereff.in/punycode but no browser does that, not even Opera

[04:23:48.0000] <annevk>
matjas: so if that's IDNA2008... well...

[04:24:45.0000] <matjas>
annevk: you’re really finding all the edge cases aren’t you :) good catch

[04:26:41.0000] <matjas>
filed https://github.com/bestiejs/punycode.js/issues/12

[04:29:20.0000] <Lachy>
"Polyglot markup is a super subset…" (from public-html) - WTF is a "super subset"? How can it be both a superset and a subset at the same time?!

[04:29:42.0000] <AryehGregor>
Perhaps it's just a particularly awesome type of subset.

[04:37:09.0000] <[tm]>
heh

[04:37:28.0000] <Stevef>
/me a day in the leif

[04:38:55.0000] <FireFly>
Wouldn't that basically be the definition of set equality? (being both a subset and superset of another set)

[04:41:36.0000] <annevk>
I think what's meant is "extended subset"

[04:44:40.0000] <annevk>
oh, that's not what's meant

[04:46:46.0000] <hsivonen>
besides, “extended subset” is a joke

[04:47:36.0000] <jgraham>
But also a term that people are using in ernest, I think?

[04:48:43.0000] <hsivonen>
sadly, that may be true

[04:49:22.0000] <jgraham>
I actually can't tell what Leif means

[04:51:21.0000] <jgraham>
This is not unusual

[04:54:53.0000] <annevk>
matjas: I'm really just doing some adhoc testing, I actually should do a thing where I just pour all code points in and see what comes out, but I'm lazy

[04:57:31.0000] <annevk>
matjas: so afiact what you're doing is correct per IDNA2008

[04:58:33.0000] <annevk>
matjas: mapping fullwidth to ASCII is something that's allowed in the UI layer (not required), but not the protocol layer, I wouldn't count <a href=""> as part of the UI layer

[04:59:14.0000] <hsivonen>
so I’m bad at this sysadmin stuff.

[04:59:35.0000] <hsivonen>
how should I debug when I have the same /etc/cron.d/foo file on two Ubuntu boxes

[04:59:38.0000] <zcorpan>
hsivonen: we made <a href="&reg=2"> parse different from legacy IE on the basis that legacy IE was not what people expect and there were few enough pages relying on this that we could change it

[04:59:51.0000] <zcorpan>
hsivonen: i had to argue the case to convince Hixie to change it

[04:59:57.0000] <hsivonen>
both have the same file permissions

[05:00:17.0000] <hsivonen>
the cron job works on only one of the Ubuntu boxes

[05:00:19.0000] <hsivonen>
how to debug?

[05:00:21.0000] <hsivonen>
zcorpan: ok

[05:01:14.0000] <hsivonen>
zcorpan: I think we shouldn’t change how it parses, but I think it’s bad that it isn’t a parse error

[05:01:46.0000] <annevk>
hsivonen: http://serverfault.com/ ?

[05:02:12.0000] <annevk>
hsivonen: not sure that's a maintained site, mind you

[05:08:02.0000] <hsivonen>
init: cron main process (314) killed by TERM signal

[05:08:10.0000] <hsivonen>
there’s my problem

[05:09:05.0000] <matjas>
annevk: http://mathias.html5.org/data/unicode/format?version=6.1.0&property=Any&type=symbols may be useful for your tests

[05:09:33.0000] <matjas>
annevk: see http://mathias.html5.org/data/unicode/ for README

[05:14:05.0000] <MikeSmith>
hsivonen: authors of that paper did not send a bug report to me

[05:14:36.0000] <MikeSmith>
and at the point when I first read the paper I didn't know it might be describing any bug cases

[05:15:05.0000] <hsivonen>
MikeSmith: ok. not cool.

[05:15:59.0000] <MikeSmith>
I just read it because I saw that one of them had posted an interesting question to the whatwg list recently. I didn't know about the paper at that point but I found it when looking at his about page as Tsukuba university

[05:16:11.0000] <MikeSmith>
hsivonen: yeah they should have taken the time to report the bug

[05:16:27.0000] <MikeSmith>
the paper is interesting

[05:16:35.0000] <MikeSmith>
the parts of it that I can understand at least

[05:18:16.0000] <MikeSmith>
the paper describes a method for generating test cases

[05:18:47.0000] <MikeSmith>
starting by using a language they developed to formalize the parser algorithm

[05:19:16.0000] <hsivonen>
looks like I had a midway interrupted update of cron itself on the system

[05:19:22.0000] <hsivonen>
dpkg --configure -a

[05:19:28.0000] <hsivonen>
did something to cron

[05:19:36.0000] <MikeSmith>
the method could be used to generate a lot more test cases if it were expanded to cover more than just the 24 elements they limited it to

[05:20:10.0000] <MikeSmith>
"we exclude formatting elements from our formalized specification because of difficulties with the destructive manipulation of the stack"

[05:21:14.0000] <MikeSmith>
"We are planning to address this limitation by checking the reachability to the first point where a destructive operation on the stack is required."

[05:21:15.0000] <Ms2ger>
Defining html parsing with a formal grammar�still hard?

[05:21:36.0000] <MikeSmith>
Ms2ger: still hard I guess

[05:22:30.0000] <hsivonen>
I wonder if someone offers bugzilla hosting priced by amount of traffic/bugs and allows custom hostnames

[05:22:53.0000] <hsivonen>
I’d like not having to run bugzilla.validator.nu myself

[05:23:17.0000] <hsivonen>
specifically, exposing perl and a bunch of CGI scares me from the security POV

[05:24:05.0000] <hsivonen>
this sysadmin stuff is really not my cup of tea

[05:24:09.0000] <Ms2ger>
perl scares me from any POV

[05:30:03.0000] <annevk>
hsivonen: why not ask for a Product on w3.org?

[05:30:16.0000] <annevk>
hsivonen: and just redirect there?

[05:30:42.0000] <hsivonen>
annevk: not sure what the Freedom to Leave situation at w3.org is

[05:31:18.0000] <annevk>
WHATWG is happy there

[05:31:34.0000] <hsivonen>
also, I’d like to keep the old bug numbers

[05:32:22.0000] <hsivonen>
/me wonders if Bugzilla works with a vanilla Dreamhost shared host where Dreamhost takes care of updating Perl

[05:38:41.0000] <annevk>
hsivonen: have a DreamHost account?

[05:38:56.0000] <annevk>
hsivonen: I'm happy to give you one for trying things out

[05:43:32.0000] <GPHemsley>
annevk: Where am I confusing MIME type and Content-Encoding?

[05:45:29.0000] <annevk>
GPHemsley: http://krijnhoetmer.nl/irc-logs/whatwg/20121105#l-24

[05:48:06.0000] <GPHemsley>
Hixie: I intend to avoid fighting with the IETF on anything. I was just pondering what would be necessary to improve MIME/Internet media types.

[05:52:05.0000] <GPHemsley>
Oh, that was supposed to be hsivonen: ^^

[05:53:48.0000] <karlcow>
MikeSmith: "Anyway, one problem currently is that a lot of people don't seem to know that the validator.nu HTML parser exists." — http://www.w3.org/mid/20121105074634.GG29943@sideshowbarker

[05:53:48.0000] <karlcow>
Are there wrappers (or equivalent built-ins) in scripting languages such as python, ruby, php?

[05:54:15.0000] <MikeSmith>
no

[05:54:31.0000] <GPHemsley>
annevk: Ah, that. I was confusing the two. I was imagining a world where a file could be described by only a media type. As it stands, would you really be required to have a Content-Encoding header for a .tar.gz file?

[05:54:42.0000] <GPHemsley>
/me wishes that weren't the case.

[05:55:23.0000] <annevk>
afaik, yes

[05:56:22.0000] <annevk>
matjas: I think IDNA2008 does require NFC at least, so input like è (e, followed by U+0300) gives the wrong output in your tool compared to browsers

[05:56:35.0000] <hsivonen>
GPHemsley: application/zip in ancient, so improving it would probably do more harm than good

[05:57:15.0000] <hsivonen>
.tar.gz is indeed annoying from the type perspective

[06:00:27.0000] <hsivonen>
GPHemsley: however, AFAICT, .tar.gz is a solved problem

[06:00:40.0000] <hsivonen>
you say Content-Type: application/x-tar

[06:00:41.0000] <hsivonen>
Content-Encoding: gzip

[06:00:46.0000] <annevk>
matjas: this is mostly about processing before Punycode happens though, so how you want to call that is another matter

[06:01:16.0000] <hsivonen>
and browsers will still save the gzipped file instead of ungzipping on the HTTP layer

[06:01:46.0000] <annevk>
that's prolly documented nowhere :/

[06:02:18.0000] <GPHemsley>
hsivonen: Well, alright. I wasn't necessarily saying it was a problem. I was actually just imagining what it would mean to extend +-suffixes.

[06:02:38.0000] <hsivonen>
GPHemsley: I’d much rather see documentation for application/x-tar than an invention of archive/tar

[06:02:40.0000] <GPHemsley>
hsivonen: I found out later that someone had already imagined that; it's written up in an IETF draft.

[06:03:05.0000] <GPHemsley>
hsivonen: What kind of documentation?

[06:03:59.0000] <hsivonen>
GPHemsley: saying it exists for starters. Maybe saying that if you are downloading application/x-tar to disk, don’t handle Content-Encoding: gzip on the HTTP layer

[06:04:47.0000] <GPHemsley>
hsivonen: Ah, so that would be what the +gzip would be useful for; but I see your point.

[06:06:39.0000] <hsivonen>
hmm. I don’t actually find any explicit code for making Necko not gzip that stuff

[06:06:47.0000] <hsivonen>
but I just tested and it doesn’t

[06:06:49.0000] <hsivonen>
hmm.

[06:08:02.0000] <hsivonen>
GPHemsley: anyway, this stuff needs testing and more than it needs new types

[06:08:10.0000] <GPHemsley>
Now, the Just Solve the File Format Problem project is documenting as many file formats as they can... but I wonder if it would be useful to have a document somewhere that said "Handle this format according to this spec."

[06:08:35.0000] <GPHemsley>
Something like "So you want to write a web browser" or something :P

[06:09:06.0000] <hsivonen>
I think +zip for new types like application/epub+zip is OK, but I think it would be disruptive to try to force it on existing types

[06:09:17.0000] <hsivonen>
like all the ODF/OOXML stuff

[06:09:36.0000] <hsivonen>
(there’s a crazy number of MIME types for ODF/OOXML)

[06:09:53.0000] <zcorpan>
a "So you want to write a web browser" document would probably just say "You must be new here."

[06:10:21.0000] <hsivonen>
the ODF/EPUB way of putting the MIME type in the file itself at a well-known byte position is kinda cool

[06:10:34.0000] <hsivonen>
I wonder if any server uses that to generate the Content-Type header

[06:10:38.0000] <hsivonen>
I suspect not

[06:11:26.0000] <zcorpan>
hsivonen: like html4 <meta http-equiv>?

[06:13:02.0000] <hsivonen>
zcorpan: well, that one wasn’t at a known byte pattern

[06:13:12.0000] <zcorpan>
true

[06:16:21.0000] <SimonSapin>
what’s wrong with writting a web browser?

[06:18:06.0000] <SimonSapin>
http://weasyprint.org/docs/tutorial/#weasyprint-navigator

[06:21:11.0000] <GPHemsley>
annevk: I see that you've spread out your definition of terms across multiple sections in URL, whereas I tend to stick them all into the "Terminology" section in mimesniff. Is there a preference for one way over another?

[06:25:02.0000] <odinho_>
SimonSapin: I really like that project :-) BTW, I'm _still_ in Lyon :S Waiting for flight now. Will leave in 2h30m.

[06:27:45.0000] <SimonSapin>
odinho_: eh. trouble with a previous flight?

[06:30:49.0000] <annevk>
GPHemsley: I put them closest to where they are used

[06:31:18.0000] <annevk>
GPHemsley: and if they're pretty general I put them in Terminology

[06:31:24.0000] <GPHemsley>
I see.

[06:31:37.0000] <GPHemsley>
annevk: How do you define "pretty general"? :)

[06:33:08.0000] <annevk>
either things that are used in most major sections or things that could move into some "Platform Terminology" document at some point

[06:33:17.0000] <annevk>
judgment call

[06:37:16.0000] <zcorpan>
http://vimeo.com/52740599 seems marcos misunderstands how !important works in css (around 9:00-10:00)

[06:38:44.0000] <annevk>
seems right to me

[06:39:05.0000] <annevk>
roughly, anyway

[06:40:00.0000] <odinho_>
Of what I said, it all sounded very much better inside my head :P I need moar training speaking.

[06:40:06.0000] <zcorpan>
an author rule without !important still overrides a user rule without !important. so adding !important to the author rule doesn't mean it overrides the user rule more.

[06:56:21.0000] <annevk>
learning way more about IDNA2008 than I ever wanted :/

[07:00:06.0000] <annevk>
GPHemsley: btw, for now you only clean up the draft right? no new concepts?

[07:00:21.0000] <GPHemsley>
annevk: 99%, yeah.

[07:01:07.0000] <annevk>
okay, as new implementation requirements I'd like to see discussed somewhere and definitely stuff like minting new MIME types

[07:01:44.0000] <GPHemsley>
incidentally... does <span class=XXX> work?

[07:01:48.0000] <annevk>
yes

[07:01:51.0000] <GPHemsley>
ok

[07:03:36.0000] <GPHemsley>
annevk: Anything in particular you want me to make note of?

[07:06:24.0000] <annevk>
no, just making sure we have the same understanding about what's going on at a high-level :)

[07:06:44.0000] <annevk>
though now I'm reading things, I'd prefer if you used "MIME type" as HTML does as media type is something CSS uses

[07:07:07.0000] <annevk>
GPHemsley: and the thing from XHR I was wondering about was "XML MIME type" which XHR defines

[07:08:07.0000] <GPHemsley>
annevk: HTML also defines an XML MIME type

[07:08:34.0000] <annevk>
yeah, as long as they're all the same we're good and at some point we should maybe have a common terminology doc

[07:08:59.0000] <GPHemsley>
yeah, they're all roughly the same; it's just the precise language that's different

[07:09:14.0000] <GPHemsley>
as for MIME type: arghhhh

[07:11:10.0000] <GPHemsley>
I'm pretty sure "Internet media type" is the "official" terminology now

[07:11:52.0000] <GPHemsley>
it's certainly the name of the Wikipedia article

[07:12:14.0000] <GPHemsley>
and the IANA calls them media types, too

[07:12:35.0000] <GPHemsley>
well, parts of it call them MIME media types, so that's not helpful

[07:22:08.0000] <SimonSapin>
"media type" is not much used anymore in CSS. We talk more of media queries

[07:23:15.0000] <annevk>
GPHemsley: hmm, I guess I'll defer to Hixie

[07:23:36.0000] <annevk>
GPHemsley: but if HTML is not going to use "media type" for that, I don't think this document should either

[07:23:57.0000] <GPHemsley>
annevk: I'll take a page out of Hixie's playbook and say that it's easier for me to do nothing at this point. ;)

[07:24:29.0000] <GPHemsley>
but we'll see what he says

[07:24:41.0000] <GPHemsley>
no one has mentioned it before

[07:24:44.0000] <GPHemsley>
and he has looked at it

[07:37:21.0000] <annevk>
sure man, I'll keep bringing it up until one of you convinced the other or you both agree :)

[07:56:46.0000] <annevk>
oh lol

[07:56:54.0000] <annevk>
http://tools.ietf.org/html/rfc5894#section-4.4 is the rationale document for changes in IDNA2008

[07:57:03.0000] <annevk>
"IDNA2008 permits, at the risk of some incompatibility"

[07:57:13.0000] <annevk>
hahaha

[07:58:48.0000] <annevk>
(that's about changing the mapping of ß to Punycode form rather than ss, ™ to Punycode form rather than tm, and similar such changes)

[07:59:28.0000] <MikeSmith>
J. Klensin

[08:01:55.0000] <annevk>
For an organisation that is concerned with current implementations that sure is a striking statement

[08:02:39.0000] <annevk>
oh oh oh, we cannot change URI because that would mean implementations are non-conforming, but sure we can piss all over domain names?

[08:03:53.0000] <MikeSmith>
I kind of wonder whether it might all have been intentional

[08:04:13.0000] <MikeSmith>
some people really didn't ever like the idea of IDNs

[08:04:30.0000] <MikeSmith>
sabotage

[08:06:20.0000] <annevk>
this rationale document also keeps talking about user input

[08:06:24.0000] <annevk>
user input, really?

[08:06:27.0000] <annevk>
users use Google

[08:06:57.0000] <annevk>
the input comes from strings, legacy strings spread all around the web

[08:07:03.0000] <annevk>
changing their meaning is insane

[08:07:33.0000] <annevk>
even in the name of "more sensible" and "less surprising" results (I kid you not, that's the justification thus far)

[08:08:48.0000] <Ms2ger>
Hi, IETF

[08:08:51.0000] <annevk>
whoever is on the IAB should be ashamed to have let this through

[08:10:57.0000] <MikeSmith>
whoever it was is probably graduated from the IAB already

[08:17:01.0000] <annevk>
http://unicode.org/reports/tr46/#Table_IDNA_Comparisons has a nice summary btw

[08:18:20.0000] <GPHemsley>
/me wonders if sniffing should have some sort of requirement that there be binary bytes, to avoid accidentally sniffing plaintext documents.

[08:18:20.0000] <GPHemsley>
/me also wonders whether there should be a requirement that future magic numbers contain at least one binary byte.

[08:18:49.0000] <annevk>
no and no

[08:19:50.0000] <jgraham>
/me gets confused from Hixie making multiple changes in a single commit

[08:20:09.0000] <annevk>
WebVTT and cache manifests don't such a byte and would not benefit from it

[08:21:07.0000] <GPHemsley>
/me wonders who annevk is talking to.

[08:21:24.0000] <annevk>
GPHemsley: last two lines were for you

[08:21:42.0000] <GPHemsley>
ah

[08:21:43.0000] <annevk>
GPHemsley: the rest is just blogging on IRC

[08:22:02.0000] <GPHemsley>
right

[08:22:19.0000] <GPHemsley>
your responses were generic enough that they could have been towards MikeSmith or someone

[08:22:49.0000] <GPHemsley>
annevk: But I'm wondering about your second no.

[08:23:39.0000] <GPHemsley>
I mean, what if I have a text file that begins "GIF89a"?

[08:24:00.0000] <GPHemsley>
Or worse, "BM"

[08:24:09.0000] <GPHemsley>
Like, "BMW Motors"

[08:24:17.0000] <GPHemsley>
that'll get sniffed as a bitmap

[08:24:32.0000] <annevk>
depends on the context

[08:25:04.0000] <GPHemsley>
What's the context? It's a file without a Content-Type header.

[08:25:10.0000] <GPHemsley>
There is no context.

[08:25:17.0000] <annevk>
loading context

[08:25:45.0000] <GPHemsley>
It's a file served by HTTP without a Content-Type header.

[08:25:51.0000] <GPHemsley>
It's the standard always-sniff context.

[08:26:49.0000] <annevk>
for non-text formats it might make sense to require a zero byte or some such

[08:27:29.0000] <annevk>
but typically those requirements are not read anyway so I'm not sure it makes sense

[08:29:03.0000] <GPHemsley>
what do you mean by "not read"?

[08:29:34.0000] <annevk>
well there's a requirement you register new MIME types for instance, that almost never happens

[08:30:00.0000] <GPHemsley>
oh, you're still talking about the magic number registration, OK

[09:19:13.0000] <GPHemsley>
hmm... CSS...

[09:28:58.0000] <MikeSmith>
so fwiw the IRI WG is meeting f2f at IETF tomorrow

[09:29:00.0000] <MikeSmith>
https://datatracker.ietf.org/meeting/85/agenda/iri/

[09:29:35.0000] <Ms2ger>
Time to set up ietfmemes

[09:29:42.0000] <MikeSmith>
hahaha

[09:29:43.0000] <MikeSmith>
yeah

[09:30:13.0000] <MikeSmith>
anyway the agenda has only 15 minutes set aside for "URI/IRI/URL thread among IETF/W3C/WHATWG (Larry Masinter)"

[09:30:20.0000] <MikeSmith>
from 18:00 to 18:15

[09:30:20.0000] <annevk>
IRI is not that interesting (imo) as you just get percent-encoded stuff out of the parser anyway

[09:30:34.0000] <annevk>
it's just a syntax

[09:31:12.0000] <GPHemsley>
annevk, TabAtkins_ : What was the discussion recently about charset determination for CSS?

[09:31:28.0000] <GPHemsley>
In particular, where does the outcome of that discussion now reside?

[09:31:39.0000] <annevk>
GPHemsley: css3-syntax

[09:32:16.0000] <GPHemsley>
Thanks.

[09:35:35.0000] <TabAtkins_>
GPHemsley: Yeah, I updated Syntax to the latest sometime last week.

[09:39:57.0000] <GPHemsley>
thanks

[09:58:04.0000] <TabAtkins_>
GPHemsley: Just to make sure, you're looking at dev.w3.org/csswg/css3-syntax, right?

[09:58:11.0000] <GPHemsley>
yup

[09:58:14.0000] <TabAtkins_>
GPHemsley: Also, I forget, did I end up meeting you sometime last week?

[09:58:18.0000] <GPHemsley>
heh, no

[09:58:33.0000] <GPHemsley>
/me has gone anywhere.

[09:58:35.0000] <GPHemsley>
n't

[09:58:47.0000] <Ms2ger>
You've gone anywhere? :)

[10:01:47.0000] <GPHemsley>
brain <--> fingers

[10:09:50.0000] <annevk>
aah, I was hoping zewt showed up in http://lists.w3.org/Archives/Public/www-international/

[10:10:25.0000] <Ms2ger>
More of a list for crazy, I guess

[10:10:49.0000] <annevk>
that's why I joined

[10:11:39.0000] <Ms2ger>
Fair enough

[10:12:14.0000] <GPHemsley>
/me grumbles something about mailing lists.

[10:13:38.0000] <Ms2ger>
They're support forums

[10:13:58.0000] <GPHemsley>
I suggest the IETF drop their version of mimesniff, they say they may assign new editors at the IETF meeting this week.

[10:14:05.0000] <GPHemsley>
-_-

[10:14:52.0000] <GPHemsley>
/me has no interest in participating in territory disputes.

[10:15:11.0000] <Ms2ger>
Then you came to the wrong place, sir

[10:15:18.0000] <gsnedders>
WELL IT'S OBVIOUSLY AN IETF SPEC SO WHY ARE YOU STEALING IT FROM US!?

[10:16:01.0000] <GPHemsley>
My statement that prompted such a response: "That's correct; I do not intend to work on this document through the IETF. I think the potentially fluid nature of the material would be better served as a living WHATWG standard than a frozen RFC. I would recommend that websec drop it as a deliverable."

[10:16:03.0000] <annevk>
GPHemsley: well, I'd welcome the competition

[10:16:21.0000] <gsnedders>
GPHemsley: Link?

[10:16:26.0000] <GPHemsley>
gsnedders: Private e-mail.

[10:16:58.0000] <annevk>
GPHemsley: history shows that unless a browser vendor is actively involved the IETF outcome is, well, not super

[10:17:02.0000] <gsnedders>
D'awww.

[10:17:06.0000] <gsnedders>
Where's the fun in that?

[10:18:21.0000] <GPHemsley>
gsnedders: Actually, the particular e-mail I'm quoted was also forwarded to a public mailing list without my permission, so you may be able to find it.

[10:18:30.0000] <GPHemsley>
s/quoted/quoting/

[10:18:32.0000] <Ms2ger>
s/unless a browser vendor is actively involved//

[10:18:37.0000] <GPHemsley>
gsnedders: But not he response.

[10:18:40.0000] <GPHemsley>
+t

[10:18:44.0000] <GPHemsley>
/me sighs at the keyboard.

[10:19:35.0000] <GPHemsley>
I don't really understand all these territorial disputes; in my mind, the WHATWG, W3C, and IETF all have different functions.

[10:21:22.0000] <Ms2ger>
The WHATWG writes specs, the W3C publishes them for patent protection, and the IETF whines about them in 1970's-style text files?

[10:22:08.0000] <GPHemsley>
lol

[10:24:31.0000] <annevk>
In the W3C WebApps Charles asked who wanted to become famous by copying WHATWG drafts, putting their name on it, and publishing them at the W3C

[10:24:38.0000] <annevk>
meeting /\

[10:25:37.0000] <gsnedders>
What followed that?

[10:26:00.0000] <annevk>
gsnedders: sorry?

[10:26:08.0000] <Ms2ger>
A call for editor for the URL spec?

[10:26:25.0000] <annevk>
Oh, that was about all drafts I used to edit at WebApps

[10:26:32.0000] <annevk>
I was in the room too

[10:27:07.0000] <annevk>
It's such a weird dynamic

[10:27:13.0000] <gsnedders>
annevk: What was the response from the group?

[10:27:35.0000] <annevk>
Well they have some volunteers for XHR; Lachy volunteered for DOM

[10:27:52.0000] <annevk>
dunno about Fullscreen / URL

[10:28:25.0000] <gsnedders>
So basically they decided who wanted to become famous by copying WHATWG drafts and putting their name on it.

[10:28:31.0000] <gsnedders>
Well done, W3C.

[10:29:55.0000] <GPHemsley>
Oh, is that what the IETF is gonna do to me?

[10:30:01.0000] <annevk>
I'm mostly here to solve problems and to raise problems with capital p Process

[10:30:43.0000] <annevk>
GPHemsley: well last time IETF tried (about:blank) they rendered their variant way worse so we have to take it back again

[10:31:12.0000] <annevk>
GPHemsley: I would not expect them to do a good job of capturing requirements of browsers

[10:31:32.0000] <GPHemsley>
Who does the IETF think they represent, if not the browsers?

[10:31:39.0000] <annevk>
the Internet

[10:31:48.0000] <GPHemsley>
which is... who, exactly?

[10:32:06.0000] <Ms2ger>
The Internet

[10:32:18.0000] <GPHemsley>
or do they do ephemeral work for an ephemeral entity?

[10:32:36.0000] <karlcow>
http://www.ietf.org/about/

[10:33:05.0000] <gsnedders>
GPHemsley: Everyone who uses the internet.

[10:33:33.0000] <GPHemsley>
karlcow: According to that, their area should be restricted to networking architecture.

[10:34:02.0000] <GPHemsley>
As long as the Web can be built on that architecture, they have no jurisdiction over the Web.

[10:34:13.0000] <GPHemsley>
In theory.

[10:34:37.0000] <Ms2ger>
/me sniggers

[10:34:41.0000] <karlcow>
GPHemsley: history, social dynamics, communities. People != robots. Or at least they try sometimes.

[10:35:16.0000] <GPHemsley>
karlcow: Pfft.

[10:35:39.0000] <karlcow>
QED. :)

[10:36:45.0000] <Ms2ger>
□

[10:37:21.0000] <GPHemsley>
:)

[10:37:39.0000] <GPHemsley>
Well, I guess we solved the Internet. We can all go home now.

[10:38:05.0000] <karlcow>
Was there something to solve? :)

[10:38:17.0000] <karlcow>
There is a story, but nothing to solve.

[10:38:23.0000] <karlcow>
It's more like an epic poem.

[10:38:50.0000] <GPHemsley>
Emphasis on the "epic"

[10:38:56.0000] <karlcow>
yup

[10:39:24.0000] <karlcow>
I meant https://en.wikipedia.org/wiki/Epic_poetry

[10:41:02.0000] <karlcow>
talking about it, I should go for writing a bit about webdriver hopes for testing. :)

[10:47:47.0000] <annevk>
ah karl left?

[10:48:21.0000] <annevk>
I was gonna say, I hope our epic poem is somewhat easier to read than e.g. that of John Milton

[10:48:33.0000] <annevk>
but then I suspect for many people it isn't :/

[10:52:55.0000] <annevk>
why does Fullscreen link to both HTML and HTML5?

[10:52:56.0000] <annevk>
did I do that?

[10:53:19.0000] <annevk>
ah https://github.com/whatwg/fullscreen/commit/1991f306a4e4e37c450542e29e78075de06305d2

[10:53:30.0000] <annevk>
hmm

[11:01:34.0000] <GPHemsley>
In case anyone here is interested, I filed a Mozilla bug on mimesniff implementation earlier today: https://bugzilla.mozilla.org/show_bug.cgi?id=808593

[11:17:25.0000] <annevk>
GPHemsley: I guess the stuff Zack mentions there could be done in a "css sniffing context" (or whatever that's called now)

[11:17:50.0000] <annevk>
GPHemsley: currently HTML defines those rules, and I'm not sure if they apply outside of HTML...

[11:18:28.0000] <GPHemsley>
right... I didn't finish investigating how far the HTML go

[11:18:35.0000] <GPHemsley>
+rules

[11:18:52.0000] <GPHemsley>
nor is it clear to me when CSS would be parsed outside of HTML

[11:19:11.0000] <GPHemsley>
(and thus not be covered by HTML rules)

[11:19:35.0000] <annevk>
SVG

[11:19:39.0000] <annevk>
CSS referencing CSS

[11:19:55.0000] <annevk>
HTTP Link header in some implementations

[11:20:15.0000] <annevk>
(but the last one should prolly be removed)

[11:20:34.0000] <annevk>
<?xml-stylesheet?>

[11:20:40.0000] <GPHemsley>
CSS doesn't give rules about how to parse other potentially CSS files?

[11:20:43.0000] <annevk>
although CSSOM might describe it for that at the moment

[11:21:20.0000] <annevk>
GPHemsley: CSS doesn't define the edges well, generally speaking

[11:21:37.0000] <GPHemsley>
I wouldn't even know how to go about sniffing CSS

[11:22:15.0000] <annevk>
GPHemsley: e.g. @import url(test\ test); // CSS does not define how to parse that URL well and does not define how it's fetched (what Referer is etc.) and does not define what to do with the result if it e.g. lacks a content-type header; in a way that matches implementations

[11:22:25.0000] <annevk>
GPHemsley: it's not exactly sniffing

[11:22:44.0000] <annevk>
GPHemsley: it's more like, lacks content-type, assume it's text/css if these other conditions are true

[11:22:57.0000] <GPHemsley>
annevk: Are there flaws in that method?

[11:23:07.0000] <GPHemsley>
annevk: Or is it just not specced?

[11:23:36.0000] <annevk>
as I said, it's specced in HTML, but whether it should apply elsewhere too is unclear

[11:23:48.0000] <GPHemsley>
right

[11:23:59.0000] <GPHemsley>
and you think it's within the scope of mimesniff to document that/

[11:24:01.0000] <GPHemsley>
?

[11:24:13.0000] <annevk>
kinda

[11:24:25.0000] <annevk>
lacks Content-Type, so what to do?

[11:25:05.0000] <GPHemsley>
well, without special handling, running it through the unknown sniffing algorithm would return text/plain, I think

[11:25:37.0000] <annevk>
model brainstorming: URL -> HTML fetch -> resource

[11:25:51.0000] <GPHemsley>
sounds reasonable

[11:25:52.0000] <annevk>
resource + context -> determine type

[11:25:59.0000] <annevk>
determine type is MIME sniffing

[11:26:10.0000] <annevk>
then process resource

[11:26:15.0000] <annevk>
based on type

[11:26:19.0000] <GPHemsley>
I see

[11:26:22.0000] <GPHemsley>
hmm

[11:26:40.0000] <GPHemsley>
who defines context?

[11:26:52.0000] <annevk>
the step before URL

[11:27:28.0000] <annevk>
API.resource = Fetch(API.url)

[11:28:17.0000] <annevk>
API.resource.type = MIME Sniffing(API.resource, API.context)

[11:28:29.0000] <annevk>
API.context can be something like "image context"

[11:29:30.0000] <GPHemsley>
so, "sniffing * specifically" = context?

[11:30:50.0000] <annevk>
if I rename context to constraints, does that help?

[11:31:42.0000] <GPHemsley>
neither is a term I use in mimesniff, so not really :P

[11:32:26.0000] <annevk>
e.g. for <img> you want to use the image sniffing rules for the resource you fetched

[11:32:29.0000] <GPHemsley>
I'm just trying to determine exactly which parts fall into my jurisdiction

[11:32:35.0000] <annevk>
<img> would be the API in the above example

[11:33:11.0000] <GPHemsley>
OK; <img> current invokes the 'rules for sniffing images specifically'

[11:33:23.0000] <annevk>
yeah that works

[11:33:28.0000] <GPHemsley>
+ly

[11:33:31.0000] <GPHemsley>
geez, keyboard

[11:34:44.0000] <annevk>
I guess my thinking was to have "get the MIME type for resource /resource/, constrained with /images/" or some such

[11:36:14.0000] <annevk>
not sure btw CSS really fits well into this model though, as I believe a number of things depend on whether the fetching resource is in standards mode and whether it's cross-origin or same-origin

[11:37:46.0000] <GPHemsley>
right now, I have the general sniffing algorithm that calls the various pattern matching algorithms based on UA preferences

[11:38:11.0000] <GPHemsley>
and then I have the separate algorithms that also call the pattern matching algorithms which can be used for hooks like HTML needs

[11:39:10.0000] <GPHemsley>
HTML calls the 'rules for distinguishing if a resource is text or binary' directly to work around the same Apache bug the main sniffing algorithm works around.

[11:39:55.0000] <GPHemsley>
and HTML calls the 'rules for sniffing images specifically' when dealing with images (<link>, <img>, <button>, <object>, etc.)

[11:40:38.0000] <GPHemsley>
otherwise, I think it defers to the 'media type sniffing algorithm' for detecting MIME types

[11:40:51.0000] <GPHemsley>
(or, it will, whenever Hixie gets around to updating references to the new spec)

[11:42:50.0000] <GPHemsley>
perhaps I could say somewhere that if a file is expected to be CSS and the sniffer determines it to be 'text/plain', then assume it's 'text/css'?

[11:45:38.0000] <asmodai>
I seriously wonder what this person thought when he put black text on a white/grey checkered background.

[11:45:55.0000] <annevk>
GPHemsley: it's not that simple

[11:46:30.0000] <GPHemsley>
annevk: Well, I'm not sure how else to worm my way into other specs.

[11:47:19.0000] <annevk>
http://www.whatwg.org/specs/web-apps/current-work/#link-type-stylesheet

[11:47:33.0000] <annevk>
not sure why that's just quirks mode though

[11:47:41.0000] <annevk>
Zack seemed to suggest it affects standards mode too

[11:48:27.0000] <annevk>
but it doesn't make much sense to define that override in MIME sniffing imo

[12:19:37.0000] <Hixie>
hober: https://www.w3.org/Bugs/Public/show_bug.cgi?id=18365#c6 "defined" is a strong word to use... :-P

[12:20:27.0000] <annevk>
heh

[12:21:29.0000] <annevk>
scumbag hober: says something is defined; is not actually defined :p

[12:22:13.0000] <Hixie>
nah, that would be if he said he would define it himself

[12:22:25.0000] <annevk>
fair enough

[12:23:04.0000] <GPHemsley>
lol

[12:30:12.0000] <annevk>
hmm so what Opera implements for http://™/ neither matches IDNA2003 nor IDNA2008

[12:30:27.0000] <GPHemsley>
Has anyone written a search: protocol so that you can link to the user's default search engine?

[12:31:06.0000] <annevk>
™ is in IDNA2008's DISALLOWED class and has a mapping to "tm" for IDNA2003

[12:31:38.0000] <annevk>
GPHemsley: http://www.iana.org/assignments/uri-schemes.html suggests no

[12:31:56.0000] <GPHemsley>
anyone else think one would be useful?

[12:32:29.0000] <annevk>
Opera maps ™ to "y2g" per Punycode which is probably correct, but it's not correct in the first place...

[12:33:26.0000] <annevk>
But Ａ is mapped to a...

[12:36:03.0000] <annevk>
Maybe Opera only implements the UI mapping http://tools.ietf.org/html/rfc5895#section-2 ? And somehow implements that for <a> too which is not UI?

[12:36:32.0000] <annevk>
Not really sure what Opera has done here makes a lot of sense...

[12:46:14.0000] <Hixie>
GPHemsley: isn't that what web intents was for?

[12:46:20.0000] <Hixie>
not sure what's going on with web intents

[12:46:31.0000] <GPHemsley>
Hixie: link?

[12:46:39.0000] <jgraham>
/me now has "let's Push Things Forward" by The Streets in his head, but with a web platform twist (You say every browser don't render the same / Then you download them / There ain't no excuses my friend / Let's test the web forward)

[12:46:45.0000] <Hixie>
GPHemsley: search:web%20intents ? :-)

[12:46:49.0000] <GPHemsley>
^_^

[12:46:56.0000] <jgraham>
Well that and "In the Aeroplane Over the Sea"

[12:47:03.0000] <jgraham>
Playing on top of each other

[12:47:37.0000] <GPHemsley>
oh, it has its own website!

[12:47:42.0000] <jgraham>
Hixie: There were plenty of TPAC sessions about it at least

[12:47:45.0000] <GPHemsley>
http://lbeach.org/schools/long_beach_high_school

[12:47:48.0000] <GPHemsley>
argh

[12:47:52.0000] <GPHemsley>
http://webintents.org/

[12:48:02.0000] <jgraham>
Not that I was at most of them

[12:48:13.0000] <TabAtkins_>
annevk: I'm one of the Values editors, so I can define whatever is necessary for url() handling when I'm told what it is.

[12:48:37.0000] <GPHemsley>
W3C Editor's Draft 11 September 2012

[12:48:56.0000] <TabAtkins_>
annevk: I assume we can get away with something simple in CSS, where we just automatically parse as whatever is necessary for the context without having to sniff much.

[12:49:22.0000] <TabAtkins_>
annevk: For @import, for example, CSS parsing is defined for all bytestreams, so it should be safe to just immediately parse as CSS regardless.

[12:49:48.0000] <GPHemsley>
/me thinks search: would be much simpler

[12:50:00.0000] <annevk>
TabAtkins_: yeah, I don't think CSS needs sniffing, it's more about what to do with unexpected Content-Type values or lack of Content-Type

[12:50:21.0000] <annevk>
TabAtkins_: will let you know when the hook for url() is ready

[12:50:34.0000] <TabAtkins_>
annevk: I'd have to test to see what browsers actually do, but I don't *think* we actually need to care about Content-Type at all for @import.  You do need to sniff for images, of course.

[12:50:41.0000] <annevk>
TabAtkins_: all the other specs that define values with a url() will need to hook into HTML fetch; I suspect that might be more controversial

[12:50:41.0000] <Hixie>
jgraham: last i heard it was DOA, but I haven't been even remotely looking closely, so my information may well be way out of date

[12:50:56.0000] <TabAtkins_>
annevk: That's not problematic - define it once per <type>.

[12:51:15.0000] <TabAtkins_>
GPHemsley: I kinda like that search: idea.

[12:51:20.0000] <annevk>
TabAtkins_: well you can't just ignore Content-Type all the time, that might expose sensitive information

[12:51:36.0000] <GPHemsley>
/me starts writing the IETF draft... oh wait

[12:51:59.0000] <TabAtkins_>
annevk: Really?  I wouldn't have thought so, actually.

[13:06:13.0000] <Hixie>
hsivonen/MikeSmith: can you help the guy out in help⊙wo? He's having trouble getting an uploaded file validate as XHTML on validator.nu, but he's exit my area of expertise

[13:06:36.0000] <MikeSmith>
Hixie: will take a look

[13:06:40.0000] <Hixie>
thanks

[13:13:10.0000] <annevk>
TabAtkins_: yeah e.g. for <link> it's restricted to quirks mode at the moment; not sure about all the details anymore

[13:21:04.0000] <MikeSmith>
Hixie: replied

[13:35:56.0000] <Hixie>
thanks

[13:36:33.0000] <TabAtkins_>
Ahahaha, holy crap, Twitter.com *breaks* if you try and bring up the short-details window for the @__proto__ account.

[13:36:43.0000] <TabAtkins_>
JS console shows the obvious reason why.

[13:36:54.0000] <TabAtkins_>
I wonder what it would do about a @toString account?

[13:37:03.0000] <gsnedders>
@valueOf?

[13:37:18.0000] <gsnedders>
TabAtkins_: __proto__ in what browser? Different ones have radically different behaviour.

[13:37:34.0000] <TabAtkins_>
Chrome, at least.  Haven't tried the others.

[13:37:35.0000] <Hixie>
how do i see this?

[13:37:44.0000] <TabAtkins_>
Hixie: One sec, I'll tweet it.

[13:37:45.0000] <Hixie>
(don't know twitter well)

[13:37:51.0000] <Hixie>
k :-)

[13:37:51.0000] <TabAtkins_>
Then you can just click on it in my tweet.

[13:38:16.0000] <Hixie>
woops, lunch is gonna end soon

[13:38:19.0000] <Hixie>
better go get some food

[13:38:20.0000] <Hixie>
bbiab

[13:41:24.0000] <TabAtkins_>
Hixie: https://twitter.com/tabatkins/status/265568812320047104

[13:43:05.0000] <smaug____>
seems to happen in FF too

[13:43:39.0000] <TabAtkins_>
Maps can't come soon enough.

[15:06:28.0000] <jgraham>
TabAtkins_: http://www.2ality.com/2012/01/objects-as-maps.html claims that google docs used to hang with __proto__ at the start of a document

[15:07:14.0000] <jgraham>
valueOf and toString on twitter seem to be fine, possibly due to case insensitivity

[15:07:40.0000] <TabAtkins_>
Alternately, they just don't invoke to valueOf or toString behavior on that object.

[15:07:47.0000] <TabAtkins_>
But they definitely depend on the proto chain.

[15:08:57.0000] <jgraham>
Sure, it could be that too

[15:09:32.0000] <jgraham>
But I think that even if they do use those properties it would be fine because the usernames are valueof and tostring

[15:11:09.0000] <TabAtkins_>
Yeah, if they lowercase it's fine.

[15:31:09.0000] <zewt>
annevk: fwiw here's a site off the top of my head that *can* use ISO-2022-JP (but it's one of a selection of available encodings, so it may be an outlier) http://rut.org/cgi-bin/j-e/jis/tty/dict

[15:31:34.0000] <zewt>
i *think* i've seen pages where i've had to pick that encoding to unmojibake it, but can't say for sure

[15:34:44.0000] <zewt>
wish there was a way to search google by HTTP headers


2012-11-06
[16:06:58.0000] <gsnedders>
TabAtkins_: V8 is one the engine now to have a non-deletable __proto__ and also the only with it on each object.

[16:07:36.0000] <gsnedders>
Everyone else who has __proto__ has it on Object.prototype as an accessor pair

[16:08:18.0000] <TabAtkins_>
Weird.

[16:11:17.0000] <gsnedders>
tl;dr, people surverted what most of TC39 wanted out of conservatism and fear of extra attack surface

[16:11:40.0000] <gsnedders>
And then we went, "oh, hey, look at the status quo. it appears to have change. soz guys!"

[16:12:08.0000] <gsnedders>
I say most of TC39, but it wasn't really that clear cut at all.

[16:14:18.0000] <TabAtkins_>
/me has no real idea what the details around __proto__ mean anyway.

[16:26:22.0000] <FireFly>
/me thinks the <| operator proposal made more sense than __proto__ -- not really a fan of mutable [[Prototype]]

[16:38:45.0000] <Benvie>
having it as an accessor on the top of the prototype chain means it can be deleted and rendered inert in cases where that security is needed

[16:40:13.0000] <Benvie>
I've been working on an es6 VM implemented in JS that runs in IE9+ currently and just changed the way it handles __proto__ from matching how V8 does to having it as an accessor. It's also nice in that it removes all sorts of special case checking for __proto__ everywhere and puts it in one spot.

[16:46:57.0000] <gsnedders>
Benvie: It was always going to be deletable, it was just how magical it was to achieve that without possibly risking leaking a setter function

[16:47:47.0000] <Benvie>
yeah I meant to say I implemented it as (I thin kthe current concensus says) a magical accessor-as-data property

[16:48:18.0000] <gsnedders>
Ah, which isn't what V8 does. :)

[16:48:31.0000] <Benvie>
v8 does the very least protectable of all options, ha

[16:48:37.0000] <gsnedders>
The current consensus now is an accessor, given everybody has basically bitten the bullet now

[16:48:55.0000] <gsnedders>
Possibly poison get/set in Object.getPropertyDescriptor

[16:48:56.0000] <Benvie>
oh that simplifies it slightly from what I have now then

[16:49:04.0000] <gsnedders>
(Carakan currently poisons set)

[16:49:12.0000] <Benvie>
the thing I ran into is: Object.create(null)

[16:49:24.0000] <gsnedders>
(Nobody else poisons anything, which is worse for SES)

[16:49:45.0000] <Benvie>
is it impossible to set the __proto__ on a newly nullary object? is it ever possible to use __proto__ as getter or setter on one?

[16:50:05.0000] <gsnedders>
Once you reach a null prototype you can never change it again, by design.

[16:50:47.0000] <Benvie>
I suppose. The use case I'm thinking of is basically creating a new object graph. The first step in that is to create the equivelent of Object.prototype

[16:51:10.0000] <Benvie>
with __proto__ as an accessor that's possible, if you can copy the getter/setter over

[16:51:13.0000] <gsnedders>
(Basically, you either need to poison Object.getPropertyDescriptor or you need a context check in the setter, for the sake of SES being able to lock down all prototypes)

[16:51:37.0000] <gsnedders>
(I prefer the former, because otherwise you need the context for all objects)

[16:52:50.0000] <Benvie>
kind of relatedly, implementing the runtime in js itself necessitates the ability to the do Object.create(null), or else insert checks everywhere to try and separate the meta level with the sandbox level

[16:53:11.0000] <gsnedders>
Anyhow, I need to go and sleep. :)

[16:53:20.0000] <Benvie>
fortunately I was able to figure out how to replicate the equivelent of Object.create(null) in ie6-8 so I'll be able to introduce es6 to ie6

[16:53:33.0000] <gsnedders>
How, out of interest?

[16:53:42.0000] <gsnedders>
More than welcome to discuss w/e sometime when I'm more awake. :)

[16:54:06.0000] <Benvie>
basically create a new Object.prototype in an iframe, steal it, strip it bare, use it as a prototype

[16:54:14.0000] <Benvie>
and then manufacture new empty objects from it

[16:54:18.0000] <gsnedders>
Oh wow.

[16:54:30.0000] <Benvie>
it's in es5-shimsham now

[16:54:42.0000] <gsnedders>
Does that not keep a reference to that whole iframe around though?

[16:54:49.0000] <gsnedders>
Which seems costly in terms of memory.

[16:55:01.0000] <Benvie>
I don't believe so

[16:55:08.0000] <Benvie>
the reference to the iframe itself is nulled immediately

[16:55:21.0000] <Benvie>
no reference to any object is saved except for the Object.prototype ref

[16:55:34.0000] <gsnedders>
All depends on how IE relates objects to browsing contexts.

[16:55:44.0000] <TabAtkins_>
That should still be enough to keep alive the connection to the scripting environment, which should keep alive the iframe, no?

[16:55:44.0000] <Benvie>
and all properties are immediately deleted from it, so no reference leaves the initialization aside from that

[16:55:54.0000] <Benvie>
good chance, but

[16:55:57.0000] <Benvie>
you only need to do it once

[16:56:12.0000] <gsnedders>
TabAtkins_: I believe it wouldn't in Opera, FWIW.

[16:56:20.0000] <Benvie>
once you have function Empty(){} Empty.prototype = stolenObjectPrototype

[16:56:22.0000] <gsnedders>
But I think we're unique in that way.

[16:56:40.0000] <Benvie>
it is unobservable that it's not prototypeless

[16:56:48.0000] <Benvie>
but a single step away from the top level

[16:57:05.0000] <Benvie>
so you can manufacture `new Empty` all day long from that single iframe

[16:57:31.0000] <TabAtkins_>
Right, you'd only need the one iframe, so it's not too bad.

[16:58:50.0000] <Benvie>
the value of Object.create(null) is immense for solving certain problems, so I'm glad that it can be counted amongst the list of solved problems

[17:00:07.0000] <Benvie>
I use it as the basis for hashes in property lists for the es6 vm and I also use it as the basis for each Realm's ObjectPrototype

[17:00:35.0000] <Benvie>
(http://benvie.github.com/continuum)

[17:01:00.0000] <Benvie>
seeing __proto__ in ie9 tugs at my heartstrings a little

[17:29:48.0000] <GPHemsley>
Blast from the past: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2004-June/000005.html

[17:33:12.0000] <zewt>
so does fred andrews basically want a big complicated feature to be specced just to support his extension? heh

[17:33:35.0000] <TabAtkins_>
Argh jeezus, I somehow lost focus-follows-mouse while I was gone at TPAC. >_<

[17:33:38.0000] <TabAtkins_>
zewt: Yes.

[17:34:06.0000] <GPHemsley>
Interesting... http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2004-June/000010.html

[17:36:32.0000] <zewt>
i'll visit anyone who tries to spec ie6 (in the asylum, as they walk in a 5-foot circle chewing away at what used to be fingernails while sporadically singing show tunes at the top of their lungs)

[00:11:02.0000] <rniwa>
oh no...

[00:11:07.0000] <rniwa>
is polyglot new long desc?

[00:11:57.0000] <annevk>
I'm surprised you have the time to be subscribed to that list

[00:12:22.0000] <annevk>
also, now you made me look at the archives :p

[00:13:34.0000] <rniwa>
annevk: i subscribe to it as sort of an entertainment and make me appreciate what i'm doing :)

[00:13:55.0000] <Hixie>
i'm highly amused that the w3c is interested in publishing the spec that is making the IETF have fits

[00:14:05.0000] <annevk>
heh, when I attended the WebApps and HTML WG meetings last week I had much the same feeling rniwa :)

[00:14:16.0000] <rniwa>
annevk: LOL.

[00:14:55.0000] <hsivonen>
must. resist. replying. to. polyglot. thread.

[00:15:00.0000] <rniwa>
annevk: working on standards was my childhood dream because back then (~1998), w3c seemed to work fairly well

[00:15:07.0000] <rniwa>
annevk: compared to IETF/IEEE/ISO

[00:15:51.0000] <rniwa>
but now… all "bureaucrats" seem to have taken over w3c :(

[00:16:59.0000] <rniwa>
hsivonen: it's a fun game :P

[00:17:06.0000] <annevk>
WHATWG holds the spirit of the web high at least (openness, permissive licensing, low overhead, etc.) which is why I ended up exclusively there for now

[00:17:49.0000] <rniwa>
annevk: yeah… i think what's nice about WHATWG is that there aren't that many rules & policies.

[00:18:06.0000] <rniwa>
annevk: the problem with standards body is that it attracts people who LOVE to create new policies and rules :(

[00:18:20.0000] <rniwa>
annevk: and very few who that hate policies and rules

[00:21:25.0000] <annevk>
uhuh; I was minuting this Process Agility meeting (god knows why) and Daniel Glazman was almost screaming how Chairs would be required to attend coordination meetings and be required to send status updates in advance of those meetings and all I could do was write down the irony of what was happening

[00:21:59.0000] <rniwa>
:(

[00:22:20.0000] <rniwa>
i always get skeptical when someone stays everyone has to do X.

[00:22:27.0000] <rniwa>
that's when I start to move away from that person...

[00:22:33.0000] <rniwa>
or organization for that matter.

[00:23:14.0000] <annevk>
well yeah, I quit the CSS WG first after he said stuff like that one to many times

[00:23:16.0000] <Hixie>
Bureaucracy Is Opt-In

[00:23:20.0000] <annevk>
nobody else there seems to really care

[00:23:26.0000] <Hixie>
that's the biggest lesson i learnt at the w3c (and now ietf)

[00:23:28.0000] <annevk>
maybe they're better at ignoring

[00:23:48.0000] <annevk>
http://www.w3.org/2012/10/31-agile-minutes#item05 are those minutes btw

[00:25:14.0000] <Hixie>
wow that meeting doesn't look useful

[00:25:30.0000] <Hixie>
but good to know that it used up the time of people like yourself, dbaron, and hsivonen

[00:25:49.0000] <Hixie>
i cannot imagine anything that y'all could have been doing that would have helped the world more. :-P

[00:26:58.0000] <annevk>
heh, we had a lunch discussion later in the week with two people from the AB that felt productive, but it remains to be seen what is actually going to happen

[00:27:04.0000] <Ms2ger>
And email is a support forum

[00:28:27.0000] <annevk>
that "Call for Editor" thread had a turn for the better, did not expect that

[00:29:34.0000] <rniwa>
annevk: i started anything says "objection", "editor", "chair", etc...

[00:29:41.0000] <rniwa>
ignoring*

[00:29:51.0000] <rniwa>
anything tha*t says

[00:29:55.0000] <rniwa>
ugh… i can't type :(

[00:30:19.0000] <annevk>
prolly bedtime ;)

[00:32:17.0000] <rniwa>
annevk: i can't… i'm fighting for a great cause of making html collection sane in webkit.

[00:32:47.0000] <annevk>
is that the NodeList + Array bug?

[00:32:56.0000] <rniwa>
annevk: oh, no.

[00:33:10.0000] <annevk>
ah, I guess I'm not following your work then

[00:33:14.0000] <rniwa>
annevk: we return a static node list when there are multiple elements matching a id on html collection :(

[00:33:22.0000] <rniwa>
annevk: https://bugs.webkit.org/show_bug.cgi?id=101311

[00:33:32.0000] <hsivonen>
It’s so annoying how Launchpad hides the bug filing function as a clue test

[00:34:35.0000] <annevk>
rniwa: and that behavior is web compatible?

[00:34:44.0000] <rniwa>
annevk: what behavior is?

[00:34:55.0000] <annevk>
rniwa: returning a static rather than live list

[00:35:03.0000] <rniwa>
annevk: i dunno.

[00:36:00.0000] <Ms2ger>
"Could be slightly more formal?"

[00:47:38.0000] <Hixie>
i was more formal for him

[00:47:41.0000] <Hixie>
i hope he enjoys it.

[00:49:38.0000] <Ms2ger>
I sure am glad that you're opting in to this thread, I cannot imagine anything that you could have been doing that would have helped the world more ;)

[00:50:16.0000] <Hixie>
i should be sleeping so i can work well tomorrow

[00:50:18.0000] <Hixie>
but let's be honest

[00:50:24.0000] <Hixie>
i'm not going to be worknig tomorrow

[00:51:20.0000] <Ms2ger>
Why not?

[00:51:27.0000] <Hixie>
elections

[00:51:32.0000] <Ms2ger>
Oh

[00:51:34.0000] <Ms2ger>
That's today

[00:51:46.0000] <Hixie>
"tomorrow" = after i sleep :-)

[00:52:47.0000] <Ms2ger>
You should get in line now, I hear ;)

[00:52:57.0000] <Hixie>
if i get in line, i'll get deported

[00:53:32.0000] <Ms2ger>
You're secretly an illegal alien?

[00:53:48.0000] <Hixie>
i'm not at all secretely a legal alien

[00:53:51.0000] <Hixie>
still can't vote!

[00:54:14.0000] <Ms2ger>
Actually, do you vote anywhere? :)

[00:55:25.0000] <Hixie>
not recently, though i could vote in switzerland and the UK if I put my mind to it and had any idea what the issues were

[00:55:55.0000] <Hixie>
anywho, bed time. nn :-)

[00:57:52.0000] <Ms2ger>
nn

[00:58:15.0000] <annevk>
oh yes

[00:58:20.0000] <annevk>
I did my first pull request

[00:58:23.0000] <annevk>
and succeeded

[00:58:24.0000] <annevk>
https://github.com/github/github-services/pull/438

[00:58:30.0000] <annevk>
<- success kid

[01:03:36.0000] <MikeSmith>
whoah

[01:03:37.0000] <MikeSmith>
score

[01:03:55.0000] <MikeSmith>
pull request against the github sources

[01:04:35.0000] <MikeSmith>
they should give you a beer mug for that

[01:48:24.0000] <karlcow>
[03:15]  <hsivonen> must. resist. replying. to. polyglot. thread.

[01:48:24.0000] <karlcow>
do. not. please. :)

[01:48:41.0000] <karlcow>
hmmm not clear

[01:48:51.0000] <karlcow>
do. not. reply. resist.

[01:49:14.0000] <karlcow>
still not clear. :)

[01:49:27.0000] <karlcow>
baaaaah. punctuation is important

[01:49:40.0000] <karlcow>
Do not reply. Resist.

[01:50:08.0000] <hsivonen>
karlcow: I have successfully avoided replying today.

[01:50:29.0000] <karlcow>
\o/ happiness.

[01:50:36.0000] <hsivonen>
I’m guilty of only two out of 34 polyglot emails starting with TPAC

[01:52:17.0000] <jgraham>
The new rule should be that you can only reply to the polyglot thread if you can compose a message that makes sense in two langauges

[01:52:52.0000] <MikeSmith>
hahaha

[01:52:55.0000] <MikeSmith>
bravo

[01:54:44.0000] <asmodai>
What's the best way forward to get HTML5/CSS3 to work with older browsers? Using Modernizr or some JS library that injects the HTML5 elements?

[01:54:58.0000] <MikeSmith>
jgraham: would someone hypothetically get points for composing multiple messages in that thread that make sense in no language?

[01:59:34.0000] <karlcow>
automatism and dadaism points?

[01:59:58.0000] <asmodai>
Mmm, looks like Modernizr does most of what you would want.

[02:00:05.0000] <MikeSmith>
karlcow: no that would be intentionally not making sense

[02:00:24.0000] <karlcow>
houla it becomes complicated :)

[02:05:49.0000] <Ms2ger>
zcorpan_, I think I poked you about a change to Opera's microdata test?

[02:06:58.0000] <zcorpan_>
Ms2ger: i seem to have forgotten what that was about

[02:07:11.0000] <Ms2ger>
Anyway, I pushed it :)

[02:08:38.0000] <zcorpan_>
http://dvcs.w3.org/hg/html/rev/880c38769cff ?

[02:11:31.0000] <Ms2ger>
Yeah

[02:28:00.0000] <zcorpan_>
Ms2ger: the test seems to have dup test names

[02:28:42.0000] <Ms2ger>
Looks that way, yes

[02:33:35.0000] <zcorpan_>
so opera and firefox both fail the new test but have different length

[02:35:20.0000] <Ms2ger>
Firefox passes, as of yesterday

[02:35:33.0000] <jgraham>
MikeSmith: I think people often post things to public-html that make sense in no language

[02:35:41.0000] <zcorpan_>
Ms2ger: ok

[02:35:58.0000] <Ms2ger>
jgraham, I thought that was what public-html was for?

[02:48:50.0000] <Stevef_>
dglazkov: i presume you are not promoting 'raspberry ketones' https://twitter.com/dglazkov/status/265767128945287168

[02:56:38.0000] <Ms2ger>
/me thinks

[02:59:08.0000] <annevk>
can someone review http://annevankesteren.nl/2012/11/copyright maybe?

[03:00:15.0000] <Ms2ger>
Sure, if you tell me what WebIDL thinks about http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1895

[03:00:22.0000] <SimonSapin>
annevk: s/clausule/clause/ ?

[03:01:17.0000] <annevk>
thanks

[03:01:24.0000] <annevk>
Ms2ger: heh

[03:01:59.0000] <Ms2ger>
lgtm

[03:04:04.0000] <SimonSapin>
annevk: I personally agree with you on this, but what kind of review do you want?

[03:06:42.0000] <annevk>
SimonSapin: whether it makes sense, that's all :)

[03:06:58.0000] <annevk>
sometimes I write stuff and nobody knows what's going on

[03:07:10.0000] <Ms2ger>
... a party?

[03:07:40.0000] <jgraham>
annevk: The last sentence is a bit weird

[03:08:01.0000] <jgraham>
It seems like mixed metaphors in English

[03:08:16.0000] <jgraham>
and a parody of them at that

[03:08:24.0000] <annevk>
jgraham: ah yeah, but that was meant to be weird

[03:08:33.0000] <annevk>
but maybe it didn't turn out the way I intended?

[03:08:53.0000] <annevk>
maybe I should leave out the marbles thing

[03:09:00.0000] <jgraham>
Well the phrases it recalls are "picked up my toys and went home" and "left for greener pastures"

[03:09:11.0000] <jgraham>
But I don't think you want to mix them like that

[03:09:27.0000] <SimonSapin>
annevk: I think your post makes sense, but I already had some context

[03:09:41.0000] <jgraham>
(I think it makes sense too)

[03:09:47.0000] <jgraham>
(as a whole)

[03:09:57.0000] <SimonSapin>
annevk: also, I read in some ML archive that you disagree with the Invited Expert Agreement (o

[03:10:11.0000] <SimonSapin>
(ok so far) but were ok to work at W3C through a Member company

[03:10:26.0000] <SimonSapin>
is that the case?

[03:11:43.0000] <annevk>
I'm not sure that's the case

[03:11:56.0000] <annevk>
it depends on Member's company legal department and their reading of the Agreement

[03:12:10.0000] <jgraham>
The agreement seems decidedly confused on this point

[03:12:27.0000] <zcorpan_>
Ms2ger: thanks for the test

[03:12:31.0000] <annevk>
the Member Agreement is different fwiw, but the W3C and I disagree on how

[03:13:06.0000] <jgraham>
" Member acknowledges that all such jointly owned inventions, software or other copyrightable materials, or materials owned by Member made available by Member for Consortium activities, will be made available to the general public pursuant to the then-current W3C Software Notice and License"

[03:13:47.0000] <jgraham>
Seems like the W3C agreement should see everything published under the software license

[03:14:01.0000] <annevk>
Ms2ger: that post was pretty literal :)

[03:14:01.0000] <jgraham>
(except when the AC and director both agree otherwise)

[03:14:19.0000] <Ms2ger>
:)

[03:34:51.0000] <annevk>
jgraham: guess it depends on what the actual Member Agreement says that was signed by the Member and W3C, which is prolly private to the Member and W3C

[03:35:24.0000] <jgraham>
Yeah, would be weird to have a different agreement on the website to that which was actually signed

[03:35:34.0000] <jgraham>
But I guess weird is par for the course

[03:36:34.0000] <annevk>
the one on the website says [DRAFT] for a reason

[03:42:03.0000] <SimonSapin>
annevk: I don’t know about other members, but I can tell you that the agreement signed by Kozea is the same as on the website, except for [DRAFT] and the signatures

[03:42:22.0000] <SimonSapin>
[DRAFT] is there only because it’s not really an agreement until it is signed

[03:42:45.0000] <SimonSapin>
at least that’s what we were told

[03:44:32.0000] <hsivonen>
annevk: “This in part is why left for greener style sheets.” missing “I”?

[03:45:51.0000] <SimonSapin>
annevk: what about "a greener logo" ?

[03:46:11.0000] <annevk>
SimonSapin: the joke is usually about style sheets

[03:46:14.0000] <annevk>
hsivonen: ta

[03:46:33.0000] <annevk>
SimonSapin: cool, so then the Document License thing is indeed dubious

[03:46:38.0000] <annevk>
someone else told me about that as well

[03:46:44.0000] <annevk>
oh well, gotta go

[04:45:01.0000] <karlcow>
"I'm responding privately (cc'ed to www-archive)"

[04:45:08.0000] <jgraham>
hahaha

[04:45:08.0000] <karlcow>
:)

[04:58:47.0000] <zcorpan>
hmm, not sure i'm happy with the banning of some encodings not being normative anymore, but i guess it'll fix itself when the spec is updated to use the Encodings spec

[05:22:16.0000] <MikeSmith>
hmm weird

[05:22:34.0000] <MikeSmith>
question about form submission with file upload

[05:25:30.0000] <MikeSmith>
if I'm sending multipart/form-data request with a file upload, should it matter whether the file-upload part is the first part in the request or the last part?

[05:26:29.0000] <MikeSmith>
because in the case of the vaidator.nu backend at least it does seem to matter

[05:27:07.0000] <MikeSmith>
in that if the file-upload part is the first part in the request, it seems to ignore all the other form-data parts that follow

[05:28:18.0000] <MikeSmith>
whereas if I send the request with the other form-data parts first and he form-data part for the file upload part last, it doesn't ignore the other form-data parts the precede it

[05:54:26.0000] <zcorpan>
MikeSmith: is this about what the browser sends over the wire or how the server exposes what it got over the wire?

[05:55:00.0000] <MikeSmith>
zcorpan: I was asking about it in the context of what the browser is supposed to send

[05:55:23.0000] <MikeSmith>
but in the mean time I think I found the cause of the problem in the validator code

[05:56:51.0000] <MikeSmith>
which is, it appears that when it's looping over the form-data parts, as soon as it sees a filename part, it processes that and then breaks out of the loop

[05:56:58.0000] <MikeSmith>
intentionally

[05:57:07.0000] <MikeSmith>
why I dunno

[05:58:41.0000] <zcorpan>
hmm, the multipart/form-data part of the spec references rfc2388 to get a byte stream of the data

[05:59:02.0000] <MikeSmith>
yeah I followed that reference

[05:59:30.0000] <MikeSmith>
which in turn references RFC1867

[06:00:05.0000] <zcorpan>
and rfc2047

[06:00:56.0000] <zcorpan>
wonder if i should file a spec bug to rewrite the requirements in the html spec

[06:00:57.0000] <MikeSmith>
hmm but it doesn't seem to actually be normatively referencing those

[06:01:16.0000] <MikeSmith>
yeah maybe

[06:01:45.0000] <MikeSmith>
rfc2388 doesn't seem like such a great thing to reference

[06:01:56.0000] <MikeSmith>
there's hardly anything in it

[06:02:05.0000] <zcorpan>
/me notices there are errata

[06:02:31.0000] <MikeSmith>
man there are virtually not conformance requirements stated in that RFC

[06:06:03.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=19879

[06:07:41.0000] <MikeSmith>
good

[06:12:02.0000] <MikeSmith>
so for validator.w3.org I'm using virtually the same markup for the input form as Henri has for the validator.nu input form, and only a slightly modified version of the JavaScript from the validator.nu UI

[06:12:43.0000] <MikeSmith>
and both have the file-input part of the form first, in document order, before all the other parts of the form where you can choose other options

[06:12:44.0000] <MikeSmith>
w

[06:13:03.0000] <MikeSmith>
which presets and which parser etc.

[06:14:06.0000] <MikeSmith>
but when I submit that form using the stock validator.nu stuff and sniff the request, I see it's somehow always putting the file-input part last

[06:14:47.0000] <MikeSmith>
different from the document order

[06:15:32.0000] <MikeSmith>
but when I submit it with the modified W3C version it always sends it in document order, so the file-upload part is first

[06:15:59.0000] <MikeSmith>
and I can't see anything in my modifications that would be causing it to behave any differently with respect to that

[06:16:26.0000] <MikeSmith>
anyway clearly I need to ask Henri what's up

[06:16:58.0000] <MikeSmith>
this is what caused the problem that dude reported on the help⊙lwo list yesterday

[07:02:05.0000] <zcorpan>
MikeSmith: http://validator.nu/script.js maybeMoveDocumentRowDown()

[07:02:19.0000] <MikeSmith>
ah

[07:02:28.0000] <MikeSmith>
will take a closer look at that

[07:02:46.0000] <annevk>
fwiw, the form submission thing has been discussed in the past

[07:02:59.0000] <annevk>
someone needs to reverse engineer it and write down the new spec

[07:03:12.0000] <annevk>
or write a bunch of tests so Hixie can write the spec

[07:05:41.0000] <annevk>
zcorpan: maybe Microsoft didn't pass that test? o_O

[07:05:45.0000] <annevk>
re http://dvcs.w3.org/hg/webapps/rev/d0ec1879951a

[07:06:58.0000] <zcorpan>
i thought they usually submit tests that they pass

[07:16:47.0000] <MikeSmith>
zcorpan: yeah maybeMoveDocumentRowDown() is what I'm missing

[07:17:05.0000] <MikeSmith>
well, it's still there in the modified version

[07:17:41.0000] <MikeSmith>
but it's not having the intended effect because I made multiple tables where Henri's source has the whole form in one table

[07:18:10.0000] <MikeSmith>
the file-upload part is in one table and the other parts in another

[07:18:23.0000] <zcorpan>
i can see that changing the document tree can break the script

[07:18:30.0000] <MikeSmith>
yeah

[07:18:41.0000] <MikeSmith>
I should of looked at it more carefully

[07:19:02.0000] <MikeSmith>
anyway thanks I know I can see how to fix it now

[07:24:41.0000] <zcorpan>
np

[07:41:35.0000] <Hixie>
hsivonen: the reason i mentioned the plagiarism angle is that i've started fielding e-mails from people who insult people at the whatwg on the grounds that we're stealing the w3c's work

[07:43:35.0000] <asmodai>
>_<

[07:44:04.0000] <asmodai>
I love how people have such a distorted view of the world.

[07:44:49.0000] <annevk>
Now the W3C claimed HTML for itself again, it seems a lot of people forgot how that thing started out...

[07:49:53.0000] <wilhelm>
The consortium consumes n million USD per year. They need a significant number of paying members to bring in that much money. As usual, just follow the money trail to understand the political priorities.

[07:50:26.0000] <wilhelm>
(n is a surprisingly high number.)

[07:55:50.0000] <Stevef_>
most of the money goes to fill MikeSmith's Gin can

[07:56:07.0000] <annevk>
so I'm writing a few blog posts to cover TPAC, for public interest and to hopefully give Mozilla the impression it was worth the expensive hotel

[07:56:25.0000] <annevk>
I'm wondering, should I just post them as I finish them or one a day? how does this work?

[07:56:57.0000] <annevk>
Stevef_: weekly bottle of Shōchū you mean

[07:57:52.0000] <wilhelm>
That simplifies things. We get Mike sacked, and W3Cs money addiction will cause less damage.

[07:58:47.0000] <annevk>
if you get Mike sacked, the W3C's ability to do good will greatly diminish

[07:59:17.0000] <wilhelm>
(c:

[07:59:48.0000] <karlcow>
wilhelm: n in fact is not high

[08:00:25.0000] <karlcow>
A couple of years ago it was ~10 times LESS than Mozilla

[08:00:50.0000] <karlcow>
annevk: I would do one a day

[08:01:16.0000] <karlcow>
to give time for readers to do other things in between.

[08:01:36.0000] <annevk>
I'll guess I put my draft online somewhere for this channel

[08:02:52.0000] <foolip>
annevk, I want one post every morning on the bus, like I got today ;)

[08:03:46.0000] <annevk>
heh okay, I'll try to make it so

[08:06:53.0000] <annevk>
sweet, my GitHub fix is already live, tweets no longer start with "Git: "

[08:07:27.0000] <annevk>
I guess for the @WHATWG account we could remove the em dash

[08:09:39.0000] <wilhelm>
karlcow: I strongly disagree - and a comparision to Mozilla is irrelevant. The money addiction leads to poor decisions to avoid offending paying, but irrelevant members. And the ROI per dollar spent is shockingly low compared to the WHATWG.

[08:10:35.0000] <GPHemsley>
annevk++ for removing "Git:" from tweets

[08:12:04.0000] <GPHemsley>
/me might be eligible to reply to polyglot, by jgraham's standards.

[08:12:26.0000] <GPHemsley>
But I wonder... are those rules applied before or after the reply?

[08:12:32.0000] <GPHemsley>
Also, what is polyglot? ;)

[08:13:56.0000] <annevk>
history will judge Polyglot Markup as an interesting exercise to keep the XML pipe dream alive just a little longer, but overall a gigantic waste of everyone's time

[08:14:33.0000] <wilhelm>
karlcow: Don't get me wrong here. I'm a W3C chair because I believe we need the consortium for a number of reasons. But I was shocked when I saw the budget numbers last week. I would spend those funds differently. And a big chunk of it - not at all, to maintain political independence.

[08:15:09.0000] <annevk>
then you don't quite get how the W3C operates

[08:15:44.0000] <wilhelm>
I do now. (c;

[08:15:45.0000] <karlcow>
/me wonders what you call money addiction.

[08:16:06.0000] <annevk>
they try to find certain activities to wiggle themselves into and then get those people to join the W3C so they get more money, forgetting they then also have to spend more money, and for some reason they now have to resort to asking money beyond their Members

[08:17:15.0000] <karlcow>
WHATWG budget is difficult to evaluate, you would have to calculate the time paid by companies. The time right now we are spending chatting for example.

[08:17:51.0000] <annevk>
Hixie: fwiw, I also started to call bullshit on "WHATWG uses a dictator model", "WHATWG is just browsers", "WHATWG is innovation whereas W3C is stability", and similar such themes

[08:18:13.0000] <annevk>
Hixie: no longer really interested in letting it slide, it seems

[08:18:40.0000] <annevk>
karlcow: you're draining my savings account, stop chatting!

[08:18:45.0000] <karlcow>
;)

[08:19:34.0000] <SimonSapin>
karlcow: if you count people’s time in WHATWG budget, it’s the same with W3C

[08:20:03.0000] <karlcow>
SimonSapin: for WG participants, yes.

[08:20:55.0000] <karlcow>
and it's why the cost of participation is not the membership for most companies, but the cost of contributing. :/ which is unfortunately not easy for all engineers, people of good will who would like to participate.

[08:21:13.0000] <wilhelm>
karlcow: If you need n million dollars per year to survive, you may do things you otherwise wouldn't have done. There's a continuum stretching from "not offending people unneccessarily" to prostitution.

[08:22:25.0000] <GPHemsley>
To all of those in the United States: Don't forget to vote today! For all of those in other places: Go see if there's something you can vote for today!

[08:22:41.0000] <karlcow>
GPHemsley: USA spam

[08:23:00.0000] <karlcow>
/me tempted to bring in a bot announcing elections of all countries in the world

[08:23:30.0000] <karlcow>
wilhelm: such as cutting the staff?

[08:23:35.0000] <annevk>
is anyone following the IETF meeting this week?

[08:23:48.0000] <wilhelm>
When annevk says "Although Jeff Jaffe personally agrees with licensing specifications as the WHATWG does.., his defence for not doing it at the W3C is because there is no consensus among the W3C Members to do so", alarm bells should go off.

[08:24:19.0000] <karlcow>
wilhelm: why?

[08:24:45.0000] <karlcow>
(trying to understand what bothers you in the previous sentence)

[08:25:16.0000] <SimonSapin>
Aren’t there both USA resident who can’t vote there and expats who can?

[08:25:27.0000] <wilhelm>
karlcow: Jeff is taking a position he personally believes is wrong to avoid losing the stream of money.

[08:25:42.0000] <wilhelm>
That is harmful.

[08:26:37.0000] <wilhelm>
And yes, if cutting staff is what's needed to maintain political independence, that is what one should do. It'll suck, of course, but finding new jobs should be easy in our industry these days.

[08:26:51.0000] <karlcow>
Jeff has a personal opinion. We all do. Then we are hired for position/role. That's life reality. You can as a personal position resign if you think it is too difficult to be aligned with your own beliefs or you may decide to try to convince to change things.

[08:26:55.0000] <karlcow>
Jeff is an employee.

[08:28:30.0000] <karlcow>
I'm pretty sure most of the people here working for companies Opera, Google, Apple, do not agree 100% with their companies. Still they didn't leave, they are trying to accomodate with it (personal reasons, etc.) and work for what they like.

[08:28:58.0000] <wilhelm>
I'm still a W3C chair. I'm ringing alarm bells, not jumping ship.

[08:29:47.0000] <annevk>
I haven't quite jumped ship either. I'm probably running for the TAG.

[08:30:12.0000] <gsnedders>
You can run for TAG without being a member of any WG? Heh.

[08:30:35.0000] <annevk>
(The way that'll sort itself out with licensing is that I will sign the Agreement, but not join any WG.)

[08:31:01.0000] <wilhelm>
annevk: I'd vote for you if I could. (c:

[08:32:23.0000] <wilhelm>
I don't have 1950 EUR available to buy a vote, unfortunately.

[08:32:34.0000] <karlcow>
http://www.w3.org/2005/10/Process-20051014/organization.html#tag-participation

[08:32:53.0000] <karlcow>
wilhelm: you do not need

[08:33:00.0000] <SimonSapin>
wilhelm: who votes?

[08:35:55.0000] <wilhelm>
karlcow: Can random invited experts vote? (I quit Opera a year ago, and am running my own business now. My company is not a member.)

[08:36:29.0000] <karlcow>
I think just the W3C AC vote.

[08:37:11.0000] <SimonSapin>
wilhelm: so your company has no "conflict of interest" that prevents you from being invited expert?

[08:39:23.0000] <wilhelm>
SimonSapin: No, I own and run the company. I can do whatever I want. (c:

[08:40:15.0000] <karlcow>
Maybe there could be a proposal for sharing the vote in between. Some seats elected by AC, some seats elected by WG participants.

[08:40:30.0000] <karlcow>
foodforthought

[08:41:30.0000] <SimonSapin>
wilhelm: sure, but when I was invited expert w3c said that could be only for 6 months since my employer is doing w3c-related stuff like implementing specs

[08:43:06.0000] <wilhelm>
SimonSapin: Oh. Uh, I haven't checked. I'm just doing work for free here. If W3C has a rule that causes me to be kicked out several months ago, that's their loss. (c:

[08:44:15.0000] <SimonSapin>
Sure. I’m just curious as to how things work. I certainly don’t want to get anyone kicked out.

[08:45:18.0000] <karlcow>
SimonSapin: because of patents and responsibilities of employes with regards to their employers :/ You gonna hate legal framework around IP. ☹

[08:45:58.0000] <annevk>
SimonSapin: it's a weird model imo; productive people get to pay to play and large corporations hardly do shit other than be conservative when it comes to changing things around

[08:46:14.0000] <wilhelm>
I have no idea how any of this works. I just want to get the work done.

[08:46:19.0000] <annevk>
karlcow: sounds like bullshit

[08:46:32.0000] <annevk>
karlcow: you don't need pay-to-play for his employer to sign of on patents

[08:46:45.0000] <SimonSapin>
we don’t even have any patent

[08:46:50.0000] <karlcow>
why bullshit?

[08:47:45.0000] <annevk>
karlcow: because the reason they want his company to join is for the money

[08:47:47.0000] <karlcow>
so much hate each time. I don't get that.

[08:48:15.0000] <karlcow>
ah, understood what you meant.

[08:48:38.0000] <wilhelm>
Money addiction leads to poor decisions.

[08:49:18.0000] <Stevef_>
annevk: i have been involved at W3C for years no money has changed hands

[08:49:19.0000] <karlcow>
yes because it's a source of money and if everyone participates without paying the system collapses. And we are back to initial situation. How do we create a system which is financially viable.

[08:49:21.0000] <manu-db>
TabAtkins, TabAtkins_: ping

[08:49:49.0000] <karlcow>
wilhelm: It is not money addiction. You need money to run a system.

[08:50:30.0000] <annevk>
Stevef_: sure

[08:50:31.0000] <karlcow>
an organization, infrastructure may decide to run the system differently, but usually it takes time to do so.

[08:51:10.0000] <wilhelm>
karlcow: Sure, but needing n million dollars is absurd. And leads to poor decisions.

[08:51:23.0000] <karlcow>
ISO is another system. financed by states, and I'm not sure I would like to see that for W3C. honestly. It might be another way.

[08:51:39.0000] <karlcow>
Mozilla found Search Revenues as a system for injecting the money.

[08:52:01.0000] <karlcow>
If we think of Not For Profit organizations

[08:52:19.0000] <karlcow>
Wikipedia has a system of donations, not sure if they run with something else.

[08:52:31.0000] <wilhelm>
I'm sure we could do a good job with a bootstrapped W3C for $1M per year. That's a fraction of the current cost.

[08:52:32.0000] <karlcow>
Openstreetmap → donations too

[08:52:59.0000] <karlcow>
wilhelm: It's also nice on paper.

[08:53:05.0000] <karlcow>
Reality is a different thing.

[08:53:19.0000] <annevk>
You need a server, some services, and an IP framework, a lot of the other things can be scrapped

[08:53:35.0000] <annevk>
(to put it simply)

[08:54:00.0000] <karlcow>
that's a start.

[08:54:07.0000] <karlcow>
Who manage the server?

[08:54:12.0000] <wilhelm>
annevk: Some administrative and techinical staff may be useful.

[08:54:19.0000] <karlcow>
Who pays the bandwidth bill?

[08:54:24.0000] <annevk>
wilhelm: yeah, I meant that to be included

[08:54:35.0000] <wilhelm>
$1M gets you about five people. You can get far with that.

[08:54:50.0000] <karlcow>
huh?

[08:54:58.0000] <karlcow>
in which country?

[08:55:41.0000] <karlcow>
5 persons + taxes + bills + offices + server + bandwidth + health insurance + etc.

[08:56:31.0000] <wilhelm>
In the most expensive country on the planet. Average Norwegian employees cost approximately 1M NOK per year, everything included, which translates to 175k USD.

[08:59:27.0000] <wilhelm>
Maintaining that would require membership fees from about 12 organizations, not 384(!!).

[09:00:22.0000] <karlcow>
ok so a system with no staff a bit like IETF

[09:00:52.0000] <wilhelm>
Limited, not zero staff.

[09:00:58.0000] <karlcow>
(a part the maintenance as you said)

[09:02:05.0000] <karlcow>
How do you dodge the patent attacks?

[09:02:14.0000] <karlcow>
special budget when it comes around?

[09:03:54.0000] <Ms2ger>
Kill software patents ;)

[09:04:15.0000] <karlcow>
hehe Ms2ger and rainbows and ponies

[09:04:31.0000] <Ms2ger>
Yes!

[09:04:46.0000] <karlcow>
/me would add copyrights too ;) 

[09:05:04.0000] <wilhelm>
The IP policies at W3C are useful. They should be maintained. 384 members buying into that model is great too. But we won't have to resort to prostitution in times of desparation just to bring in money from said member organizations.

[09:05:09.0000] <karlcow>
70 years after the death of the author is just insane

[09:06:21.0000] <karlcow>
/me wonders when wilhelm will make a kickstarter project :p

[09:07:25.0000] <wilhelm>
I won't. I propose reducing expenses, not increasing income.

[09:11:48.0000] <karlcow>
This will mean cutting the staff basically.

[09:12:29.0000] <karlcow>
and "hide" the management cost in relevant organizations/participants.

[09:12:32.0000] <Ms2ger>
How many employees does the W3C have nowadays?

[09:12:52.0000] <karlcow>
http://www.w3.org/People/

[09:13:00.0000] <karlcow>
72

[09:13:30.0000] <karlcow>
http://www.w3.org/2011/05/w3cteam

[09:13:34.0000] <Ms2ger>
That sounds like a lot

[09:14:15.0000] <Ms2ger>
Never heard of most of them, too

[09:15:01.0000] <karlcow>
Ms2ger: it depends on how much you consider a lot.

[09:15:22.0000] <Ms2ger>
I consider 72 a lot

[09:15:24.0000] <Ms2ger>
/me ducks

[09:15:29.0000] <karlcow>
heh

[09:15:45.0000] <annevk>
/me was about to say, what he considers a lot should be clear from the context

[09:16:11.0000] <karlcow>
it depends on the number of groups. So I guess in wilhelm plans, some staff disappears because we abandon some activities.

[09:17:23.0000] <karlcow>
Mozilla is now how many? 600

[09:17:29.0000] <karlcow>
Opera around 700

[09:17:31.0000] <wilhelm>
karlcow: "A lot" is a relative term. If one could maintain a staff of 72 without making stupid decisions to keep all member organizations, I have no objections to the number.

[09:18:03.0000] <karlcow>
I don't know how many people there are at wikipedia.

[09:18:17.0000] <Ms2ger>
At Mozilla, I actually see results from those 600 ;)

[09:18:34.0000] <karlcow>
http://wikimediafoundation.org/wiki/Staff_and_contractors

[09:18:49.0000] <wilhelm>
Mozilla has not yet made stupid decisions to make more money. Opera has, unfortunately.

[09:19:44.0000] <karlcow>
wikipedia seems to be around ~100

[09:19:47.0000] <Ms2ger>
wilhelm, we try :)

[09:20:07.0000] <karlcow>
and recruiting http://wikimediafoundation.org/wiki/Job_openings

[09:20:14.0000] <wilhelm>
Wikimedia has a business model that doesn't put them at odds with their principles. If they can get away with 100 employees - good for them.

[09:20:26.0000] <wilhelm>
W3C obviously can't. Not in its current shape.

[09:20:33.0000] <wilhelm>
Ms2ger: Good. (c:

[09:20:43.0000] <karlcow>
Mozilla is in a difficult position too :/

[09:21:21.0000] <Ms2ger>
Mozilla does a lot of silly things, but afaik not for the money ;)

[09:22:02.0000] <karlcow>
/me has to run for lunch. will come back later. 

[09:24:37.0000] <kennyluck>
Yeah, as a community member, I do think MozCamp is probably a silly idea.

[09:26:36.0000] <wilhelm>
That said, 72 people is a lot.

[09:27:31.0000] <JonathanNeal>
Hello

[09:39:48.0000] <GPHemsley>
/me doesn't take karlcow's temptation to be a threat.

[09:59:47.0000] <miketaylr>
back

[09:59:53.0000] <Ms2ger>
Hi

[10:15:15.0000] <Hixie>
annevk: christ, running for the TAG?

[10:15:21.0000] <Hixie>
i told you TPAC was a bad idea

[10:26:51.0000] <jgraham>
I dunno, it would be nice if we got a critical mass of web people onto the TAG

[10:27:10.0000] <jgraham>
so it wasn't all RDF and architecture astronautics

[10:30:42.0000] <karlcow>
/me has been caught with judgment of annevk in http://annevankesteren.nl/2012/11/copyright  but then I checked and found it was correct. I didn't know

[10:36:17.0000] <jgraham>
(everone should ask hsivonen to join the TAG so that his "how many times have I been asked to join the TAG" counter overflows)

[10:37:48.0000] <karlcow>
the issue is not about joining the TAG, but more about the expectations the person has by doing so, and the will to compromise pushing these goals.

[10:38:30.0000] <karlcow>
make a compromise

[10:38:40.0000] <karlcow>
/me is checking the English definition

[11:07:05.0000] <Hixie>
jgraham: you seem to assume the tag is relevant

[11:07:30.0000] <Hixie>
jgraham: as far as i can tell there is no more benefit to getting "web people" onto the TAG than there is getting them onto an NFL team

[11:16:02.0000] <jgraham>
It isn't terribly relevant today, but that doesn't mean that something like the TAG couldn't be useful if it was doing something different

[11:16:41.0000] <Hixie>
so you're saying that maybe a group of people different than the TAG, doing something different than the TAG, might be useful?

[11:17:13.0000] <Hixie>
...why don't we just form that group of people to do that useful thing, then, instead of adding the task of "convince the tag" to do that thing

[11:19:14.0000] <jgraham>
Well there are certian advantages to revolution-by-democracy rather than revolution-by-setting-up-your-own-thing-and-ignoring-the-old-thing

[11:20:15.0000] <karlcow>
NFL team… is IMHO more dangerous.

[11:24:08.0000] <Hixie>
jgraham: what is the thing the TAG could be doing that would be useful?

[11:26:47.0000] <karlcow>
The sense of useful depends on what the community defines it to be useful.

[11:34:32.0000] <Hixie>
hmm, no roc

[11:34:43.0000] <Hixie>
so i'm looking at this canvas-in-workers idea

[11:35:11.0000] <Hixie>
the main thing i'm wondering is, how do we get the data from the thread onto the display?

[11:35:16.0000] <Hixie>
i can think of three main approaches:

[11:35:27.0000] <Hixie>
1. getImageData(), postMessage(), putImageData()

[11:35:45.0000] <Hixie>
this could be implemented somewhat efficiently (lazily) so long as the author keeps his hands off

[11:36:23.0000] <Hixie>
2. something similar to getImageData() but that is officially async and hands-off, only useful for this purpose

[11:36:37.0000] <Hixie>
3. a way to have a <canvas> in the DOM, but _hand the context over to the worker_

[11:36:45.0000] <Hixie>
so the drawing always happens async straight from the worker

[11:36:55.0000] <Hixie>
any opinions?

[11:42:49.0000] <Hixie>
i'm thinking 3, with canvas.getContext('worker') returning a Transferable object

[11:43:24.0000] <Hixie>
once you have a worker context like this, the methods on canvas like toDataURL() are blocked

[11:43:37.0000] <Hixie>
the object itself just has a getContext() method

[11:43:54.0000] <Hixie>
and once it has a context gotten, it can no longer be transferred

[11:43:58.0000] <Hixie>
hmmm

[11:56:55.0000] <annevk>
Hixie: to support Alex Russell

[11:59:59.0000] <hober>
how many open seats are there?

[12:00:05.0000] <hober>
4?

[12:08:17.0000] <Hixie>
hmmmm

[12:08:27.0000] <Hixie>
how do we get the equivalent of HTMLImageElement into a worker

[12:08:30.0000] <Hixie>
XR?

[12:08:32.0000] <Hixie>
XHR even?

[12:08:42.0000] <Hixie>
have it return an opaque Image object

[12:08:43.0000] <Hixie>
?

[12:08:55.0000] <yuhong>
<annevk> history will judge Polyglot Markup as an interesting exercise to keep the XML pipe dream alive just a little longer, but overall a gigantic waste of everyone's time

[12:09:08.0000] <yuhong>
Thanks god IE8 is finally beginning to die.

[12:09:36.0000] <yuhong>
Another ~10 years old feature IE8 fails to support is DOM level 2.

[12:09:52.0000] <yuhong>
Google Docs will drop IE8 support soon.

[12:11:00.0000] <yuhong>
jQuery is planning to maintain two parallel codebases, 1.9 and 2.0, with 1.9 supporting IE8 and 2.0 not.

[12:13:22.0000] <yuhong>
37signals's Basecamp too.

[12:34:06.0000] <Hixie>
annevk: how do you feel about making XMLHttpRequest have an 'image' responseType that returns an HTMLImageElement in the main thread and an Image object in a worker thread?

[12:34:27.0000] <Ms2ger>
That sounds somewhat fishy to me

[12:35:00.0000] <Hixie>
i need a way to get an opaque non-dom image object in workers for canvas workers

[12:35:26.0000] <Ms2ger>
Can we put that Image API on the main thread too?

[12:35:55.0000] <Hixie>
API?

[12:36:04.0000] <Hixie>
canvas is already on the main thread

[12:36:08.0000] <Ms2ger>
Interface, whatever you want to call it:)

[12:36:33.0000] <Hixie>
what use would it have?

[12:37:05.0000] <Ms2ger>
Making it easier to share code between workers/non-workers

[12:37:15.0000] <Ms2ger>
And a simpler API to learn

[12:37:31.0000] <Hixie>
when i say "opaque non-dom image object" i mean opaque

[12:37:35.0000] <Hixie>
as in, has no members

[12:37:40.0000] <Hixie>
interface Image { };

[12:37:55.0000] <Hixie>
so it would be a strict subset of HTMLImageElement

[12:38:05.0000] <Hixie>
not much point exposing it on the main thread...

[12:44:37.0000] <Hixie>
roc: opinions on http://junkyard.damowmow.com/514 is welcome

[12:44:39.0000] <Hixie>
anyone else, too

[12:44:45.0000] <Hixie>
it's a strawman for canvas in workers

[12:44:55.0000] <Hixie>
2d and gl, though i have only looked at the 2d part

[12:45:03.0000] <Hixie>
afk, bbiab

[12:50:05.0000] <roc>
Hixie: sounds pretty good

[12:51:41.0000] <roc>
a convenient way to pass binary image data across to the worker might be interesting

[12:52:11.0000] <roc>
I suppose you can kinda do it by creating a Blob on the main thread and using XHR with the Blob URI on the worker?

[12:52:16.0000] <roc>
but that requires the awful revocation stuff

[12:52:36.0000] <roc>
anyway, it looks like a good start

[13:33:15.0000] <annevk>
Hixie: happy with that in general, file a bug

[13:33:19.0000] <annevk>
Hixie: had been thinking about it

[13:36:04.0000] <zcorpan>
roc: or paint the image on a canvas and send the ImageData. but that's also not very convenient

[13:36:43.0000] <zcorpan>
convenient would be to postMessage(<img>) and have it come out as an Image on the other end. but that wouldn't make sense for cross-document messaging

[13:37:44.0000] <zcorpan>
Hixie: since "Image" already exists as a constructor in window, maybe we should call it something else

[13:37:56.0000] <zcorpan>
Hixie: e.g. WorkerImage

[13:54:44.0000] <MikeSmith>
"URI/IRI/URL thread among IETF/W3C/WHATWG" discussion at IETF f2f is starting in a few minutes

[13:54:51.0000] <MikeSmith>
http://www.ietf.org/proceedings/85/agenda/agenda-85-iri

[13:55:00.0000] <MikeSmith>
http://tools.ietf.org/wg/iri/minutes

[13:58:45.0000] <hober>
MikeSmith: is there an IRC channel into which things get scribed / where we can follow along?

[13:58:58.0000] <MikeSmith>
hober: no, XMPP

[13:59:02.0000] <MikeSmith>
XMPP chat

[13:59:15.0000] <MikeSmith>
which I think you can do via Adium

[13:59:34.0000] <hober>
do you have a link to the xmpp conference room?

[14:00:01.0000] <MikeSmith>
xmpp:iri⊙jio?join

[14:00:39.0000] <smaug____>
/me assumes annevk will attend the meeting

[14:01:08.0000] <hober>
/me actually managed to join

[14:01:15.0000] <MikeSmith>
oh iChat also

[14:02:04.0000] <hober>
yeah, i'm using ichat :)

[14:22:21.0000] <MikeSmith>
http://www.meetecho.com/ietf85/iri works too I guess

[14:22:28.0000] <MikeSmith>
browser-based

[14:24:25.0000] <MikeSmith>
Roy at the mic

[14:25:47.0000] <MikeSmith>
"will not resolve the anti-social behavior within the WHATWG"

[14:26:02.0000] <hober>
wat

[14:26:34.0000] <hober>
i don't understand the relationship between the minutes and whatever's actually happening in that room

[14:27:39.0000] <wilhelm>
Did the scribe die?

[14:29:05.0000] <MikeSmith>
hahaha "negotiating with terrorists"

[14:29:17.0000] <MikeSmith>
way to sling the rhetoric man

[14:29:37.0000] <MikeSmith>
"I have no problem ignoring their work in the future"

[14:29:54.0000] <MikeSmith>
where "their work" is the URL standard

[14:30:09.0000] <hober>
wow, sounds like a wonderfully productive meeting...

[14:30:18.0000] <MikeSmith>
"You don't have critical mass for doing work. You're done."

[14:30:22.0000] <MikeSmith>
heh

[14:31:15.0000] <gsnedders>
Critical mass of random server people, where most of the weirdness is handled by either clients or CGI scripts?

[14:31:32.0000] <MikeSmith>
hober, wilhelm : yeah in my experience the minutes/scribing are not nearly as detailed as most W3C meetings are

[14:31:42.0000] <MikeSmith>
it's more like the minutes are notes

[14:31:48.0000] <MikeSmith>
scratchpad

[14:32:13.0000] <MikeSmith>
"URXes" "HURLs"

[14:32:15.0000] <hober>
how very open of them

[14:32:33.0000] <MikeSmith>
"get them to call it something else" [other than URLs]

[14:32:40.0000] <MikeSmith>
bravo Larry

[14:32:54.0000] <MikeSmith>
Larry is now pointing out that they are called URLs

[14:33:20.0000] <MikeSmith>
Larry replying to whoever it was who made the "get them to call it something else" comment

[14:33:33.0000] <MikeSmith>
Larry, "I don't see any point in fighting over the name."

[14:35:00.0000] <MikeSmith>
"Let the WHATWG go for it. They'll break the Web but not the Internet."

[14:35:32.0000] <wilhelm>
Did he just say "browsers are not the web"?

[14:35:40.0000] <MikeSmith>
yeah

[14:35:46.0000] <MikeSmith>
no the speaker didn't say it

[14:35:48.0000] <MikeSmith>
Roy did

[14:36:04.0000] <MikeSmith>
he said Roy said it and he agreed with it

[14:36:33.0000] <wilhelm>
Fascinating.

[14:37:45.0000] <MikeSmith>
whoo boy now they're talking about LEIRIs

[14:39:04.0000] <MikeSmith>
funny how they keep using the term "the outside world" to refer to well, the actual world and the actual people in the world

[14:40:08.0000] <MikeSmith>
we need to get Steven Soderbergh to direct the screen version of the multi-year drama

[14:40:13.0000] <MikeSmith>
someday

[14:40:23.0000] <MikeSmith>
*this multi-year drama

[14:41:03.0000] <MikeSmith>
this is like word-for-word the discussion we had at the BOF in Hiroshima before they even chartered the IRIbis WG

[14:41:12.0000] <MikeSmith>
groundhog day

[14:41:15.0000] <wilhelm>
Interesting to observe Larry as a voice of reason here.

[14:41:28.0000] <MikeSmith>
wilhelm: indeed yeah he is

[14:42:07.0000] <MikeSmith>
the scribing here is near worthless

[14:42:26.0000] <MikeSmith>
I don't know if it's just Martin not bothering to even try or what

[14:42:38.0000] <MikeSmith>
but he's not even indicating who the current speaker is

[14:43:09.0000] <MikeSmith>
the keep scribing "Mic:" to indicate that that somebody is talking at the mic

[14:43:20.0000] <MikeSmith>
instead of actually noting who the person is

[14:43:24.0000] <MikeSmith>
really fucking helpful

[14:43:30.0000] <wilhelm>
(c:

[14:45:01.0000] <MikeSmith>
god almighty we need some metaphor that's way beyond "going off into the weeds"

[14:45:10.0000] <MikeSmith>
we are way way past the weeds here

[14:45:25.0000] <nessy>
wow, you got me curious!

[14:46:42.0000] <MikeSmith>
this is like a Virginia Wolfe novel

[14:46:50.0000] <hober>
going off the cliffs of insanity?

[14:47:22.0000] <wilhelm>
MikeSmith: http://upload.wikimedia.org/wikipedia/commons/1/19/Train_wreck_at_Montparnasse_1895.jpg

[14:49:26.0000] <MikeSmith>
"ok other speaker you rambled on again about some stuff you talked about in almost the same exact words 4 years ago but you had your say (again) and now it's my turn to (again) further pile my stream of consciousness on top of what you said"

[14:50:07.0000] <MikeSmith>
I am beginning to suspect this is some highly refined art form

[14:50:12.0000] <MikeSmith>
like Noh drama

[14:52:08.0000] <Hixie>
zcorpan: I was thinking of using Image precisely because it already exists :-)

[14:52:43.0000] <MikeSmith>
performance repeated each couple years or whatever with the performers just making slight variations in the way they hold their folding fans

[14:53:52.0000] <MikeSmith>
oh somebody just dropped the phrase "doesn't give a rat's ass"

[14:54:00.0000] <MikeSmith>
guess which performer that is

[14:54:40.0000] <Hixie>
when i was talking to IETF folk about during URL at the IETF, one of the things I said was that if we did it, we had to have a guarantee that the tone of discussion would be productive and respectful

[14:54:46.0000] <Hixie>
I CAN'T IMAGINE WHY I THOUGHT THAT WAS IMPORTANT

[14:55:01.0000] <Hixie>
not like there's any reason for me to fear it might not be!

[14:56:40.0000] <MikeSmith>
pretty much all of the people in this discussion are respectful at least. except for one

[14:56:46.0000] <MikeSmith>
if not productive

[14:57:16.0000] <Hixie>
given that you've quoted multiple people already...

[14:57:58.0000] <MikeSmith>
Hixie: they have an empty chair in the room that they're referring to as "the WHATWG ghost"

[14:58:01.0000] <MikeSmith>
can't make this stuff up

[14:58:16.0000] <Hixie>
MikeSmith: and you say they're all being respectful? :-)

[14:58:20.0000] <MikeSmith>
heh

[14:58:31.0000] <MikeSmith>
at least that's what I think they are referring to

[14:58:42.0000] <Hixie>
/me ponders roc's thing about how to transfer images across postMessage()

[14:59:29.0000] <Hixie>
having HTMLImageElement transfer into an Image, and transfer back into an HTMLImageElement, is one option

[14:59:31.0000] <MikeSmith>
it's possible that they have collectively ascended to some other level of abstraction with the "the WHATWG ghost" metaphor that's of too great refinement for me to appreciate

[15:00:02.0000] <hober>
MikeSmith: that's probably it

[15:01:12.0000] <Hixie>
if i have this object in the worker that's like an HTMLImageElement except for not being a DOM node, should I just call it HTMLImageElement? Or Image? or something else and we'll eventually put it on the main thread even though it's redundant?

[15:05:03.0000] <MikeSmith>
Hixie: would seem odd to call it HTMLImageElement

[15:05:08.0000] <MikeSmith>
or misleading

[15:05:16.0000] <Hixie>
yeah

[15:05:29.0000] <Hixie>
but if we ever put the DOM into workers, would be weird to not have it called that...

[15:06:22.0000] <MikeSmith>
oh

[15:08:48.0000] <MikeSmith>
yay finally Pete Resnick talking now

[15:09:14.0000] <MikeSmith>
Hixie: mentioning that he talked along with others with you and Anne

[15:10:22.0000] <MikeSmith>
I like Pete

[15:10:24.0000] <annevk>
so sorry for not attending the IRI thing

[15:10:30.0000] <annevk>
I was busy drinking wine

[15:10:39.0000] <MikeSmith>
heh

[15:10:41.0000] <annevk>
back tomorrow

[15:15:18.0000] <MikeSmith>
"I'm looking for some reason not to close down this working group."

[15:15:45.0000] <MikeSmith>
"Does anyone want to explain to me why the working group should not be shut down?"

[15:42:56.0000] <Hixie>
heycam: yt?

[15:43:02.0000] <heycam>
hi Hixie

[15:43:07.0000] <Hixie>
hey hey

[15:43:12.0000] <Hixie>
hope you had a good vacation

[15:43:17.0000] <heycam>
yes thanks :)

[15:43:39.0000] <Hixie>
question about "implements", what happens if you have an interface that has an "attribute DOMString foo", and it implements another interface with "readonly attribute DOMString foo"?

[15:43:43.0000] <Hixie>
is that just non-conforming?

[15:44:08.0000] <heycam>
yeah I think the spec either says that's non-conforming, or that which one "wins" is undefined

[15:44:12.0000] <Hixie>
k

[15:44:15.0000] <heycam>
what do you want to do?

[15:44:38.0000] <Hixie>
dunno. my general problem is that i want to represent images in both the main thread and workers

[15:44:50.0000] <Hixie>
and ideally want to make the objects postMessage()able from one to the other

[15:45:25.0000] <Hixie>
i'm scared of making an HTMLImageElement (or just Image) object in the worker that is a subset of HTMLImageElement in the main thread because people might rely on it not being a Node and then if we ever add the DOM to workers we'll be in a world of hurt

[15:45:57.0000] <Hixie>
but then i don't want to introduce a separate object that isn't HTMLImageElement because it's bound to get into the main thread and then it's Yet Another Way to represent images there

[15:45:58.0000] <heycam>
ok so you don't want some properties not being on the worker-version of the object, in case they pop up later

[15:46:24.0000] <Hixie>
well my question above was about making HTMLImageElement implement Image, and having just Image in the worker

[15:46:28.0000] <Hixie>
and having Image have a readonly "src"

[15:46:31.0000] <heycam>
oh, what's Image

[15:46:39.0000] <heycam>
that used to be just a named constructor

[15:46:55.0000] <Hixie>
some theoretical new object for workers that is a subset (non-Node) of HTMLImageElement, named to coincide with the constructor Image() that creates an HTMLImageElement

[15:47:07.0000] <Hixie>
the naming being intentional to indicate that they're hte "same object" in principle

[15:47:18.0000] <Hixie>
and to make it so we can never bring Image to the main thread

[15:47:55.0000] <Hixie>
maybe i should just bite the bullet and introduce the Yet Another Way To Represent Bitmap Images

[15:47:56.0000] <heycam>
ok so Image would now be an interface, its contructor would return an HTMLImageElement in non-workers

[15:48:04.0000] <Hixie>
yeah

[15:48:19.0000] <Hixie>
(well, it'd be an interface in workers, and not in main thread)

[15:48:24.0000] <Hixie>
not present

[15:48:32.0000] <heycam>
do you think it would really be an issue if the worker version of the object some time in the future gained the reaminder of the HTMLImageElement properites?

[15:48:44.0000] <Hixie>
i don't know, but it sure seems plausible

[15:49:28.0000] <heycam>
btw what do you get from passing images to workers?

[15:49:39.0000] <heycam>
that isn't just what you get from passing a CanvasPixelArray of the image?

[15:50:17.0000] <Hixie>
well this is in the context of http://junkyard.damowmow.com/514 - adding canvas to workers

[15:50:25.0000] <Hixie>
and canvas needs images, really

[15:50:56.0000] <Hixie>
now i imagine we'll get images in a number of ways, e.g. from Blobs fetched from IndexDB (assuming we add a toImage() method to Blob), from XHR (responseType='image')

[15:51:05.0000] <Hixie>
but it makes sense that we'd also get images from the main thread

[15:51:06.0000] <heycam>
I see

[15:51:18.0000] <heycam>
I guess it is kind of weird to have the DOM element be the canonical representation of images

[15:51:25.0000] <Hixie>
welcome to the web, but yeah

[15:51:30.0000] <heycam>
:)

[15:53:27.0000] <Hixie>
current ways to represent binary (bitmap) image data in the main thread that I can think of: HTMLCanvasElement, HTMLImageElement, ImageData, Blob, a data: URL

[15:53:46.0000] <Hixie>
I suppose I could add a new object that can be constructed from any of those

[15:53:50.0000] <Hixie>
and just be done with it

[15:54:10.0000] <heycam>
well what about ImageData

[15:54:20.0000] <heycam>
or does that not include some information that the others have

[15:54:44.0000] <Hixie>
ImageData's problem is that it exposes every pixel and so it is trivial for the author to monkey with the data, which immediately breaks every optimisation you can think of

[15:54:58.0000] <Hixie>
if you don't allow that, you can do everything async or even off the main thread

[15:55:08.0000] <Hixie>
so we really don't want the primary representation to be ImageData

[15:55:32.0000] <Hixie>
or at least, it seems like a bad idea to me

[15:57:27.0000] <Hixie>
yeah ok i think i should just bite the bullet and make a new object for everywhere

[15:58:06.0000] <Hixie>
with a factory method that can take any of the above and asynchronously returns an object that has the data loaded

[15:58:44.0000] <Hixie>
BitmapImage maybe?

[15:59:07.0000] <zewt>
in principle you should be able to fast path until someone changes bits, but it probably does make sense to have an "async-optimized" container for images, in the same way Blob is that for generic data (vs. ArrayBuffer)

[15:59:46.0000] <Hixie>
zewt: yeah, and i expect people will do that (lazy ImageData), but the problem is that it's really easy to run into the slow path by mistake


2012-11-07
[16:00:16.0000] <Hixie>
zewt: e.g. you dump the ImageData to the console, and boom, now you need to synchronously fetch the data across both the GPU and process boundaries

[16:00:18.0000] <zewt>
also, ImageData is really bad at certain types of optimizations

[16:00:46.0000] <zewt>
for example, in principle an ImageData might be backed by a PNG until it's read--but that means you have a huge synchronous (and possibly UI thread) hitch on the first access, since you have to decompress it

[16:01:03.0000] <Hixie>
right

[16:01:06.0000] <zewt>
which you can give workarounds for, but they're just that

[16:01:12.0000] <Hixie>
which is bad enough, but that access might be in debug code

[16:01:16.0000] <Hixie>
which makes it even worse

[16:02:39.0000] <zewt>
i wonder if there's overlap between ImageWhatever and Blob

[16:04:41.0000] <MikeSmith>
Hixie: hey wasn't the sortable-tables idea part of the datagrid spec?

[16:04:44.0000] <MikeSmith>
essentially

[16:05:18.0000] <Hixie>
yes, datagrid had that too

[16:09:23.0000] <MikeSmith>
I think the sortable-table part of datagrid is what was most appealing thing to web developers

[16:09:34.0000] <Hixie>
possibly

[16:09:44.0000] <Hixie>
the only reason for datagrid was the lack of a DOM backing

[16:09:51.0000] <MikeSmith>
OK

[16:10:06.0000] <Hixie>
the just-in-time API

[16:10:11.0000] <Hixie>
dunno what it's formally called

[16:16:55.0000] <MikeSmith>
good feedback from nessy on that thread

[16:19:12.0000] <MikeSmith>
Hixie: btw thanks again for the heads-up the day before yesterday about the validator-related message on the whatwg help list

[16:19:22.0000] <MikeSmith>
it help me find and fix a bug

[16:20:15.0000] <MikeSmith>
also made me take time to read Henri's file-upload handling code

[16:20:49.0000] <MikeSmith>
anyway I wasn't subscribed the the help list before but I am now

[16:25:03.0000] <Hixie>
MikeSmith: cool

[16:28:11.0000] <wirepair_>
might be interesting to some people here: http://www.veracode.com/blog/2012/11/security-headers-report/

[16:33:02.0000] <zewt>
heh searching pdfs in chrome is still seriously annoying

[16:33:17.0000] <zewt>
type one letter, wait several seconds while it counts the letter in the whole document before being able to type anything else

[16:38:13.0000] <Hixie>
searching the spec in chrome is even worse

[16:38:29.0000] <Hixie>
you type something not in the document and it just stops working for a few minutes

[16:38:47.0000] <zewt>
searching the spec works for me in chrome, except whenever i do, it jumps back to the top of the page

[16:38:50.0000] <zewt>
which is maddening

[16:39:08.0000] <zewt>
to search from the current position, i have to type it somewhere else, and copy and paste it into the search box

[16:39:37.0000] <Hixie>
try clicking on the text where you want to search from

[16:39:40.0000] <Hixie>
like you're putting the caret down

[16:40:00.0000] <zewt>
i've tried that, doesn't help

[16:40:13.0000] <zewt>
mostly i just load in FF to search

[16:41:10.0000] <zewt>
ff is also better at navigating anchors, eg. i can go to the address bar and hit enter and it'll jump back to the current #hash

[16:41:19.0000] <zewt>
if i do that in chrome it reloads

[16:41:49.0000] <zewt>
maybe that's just a weird usage pattern that only i do, using the hash as a short-term bookmark then doing the above to jump back to it

[16:42:40.0000] <Hixie>
i do that all the time. in chrome i worked around it by just changing the url to end in an x and then deleting the x :-)

[16:42:51.0000] <Hixie>
http://junkyard.damowmow.com/515 <- new strawman for canvas in workers

[16:42:52.0000] <zewt>
the "weird browser dance"

[16:44:44.0000] <zewt>
Hixie: i wonder how things like this (canvas in workers) would actually work for shared workers, where afaik (unlike dedicated workers) you may not be in the same process

[16:45:07.0000] <zewt>
(unlike dedicated workers created by the UI thread, i mean)

[16:45:16.0000] <MikeSmith>
wirepair_: interesting

[16:45:18.0000] <zewt>
maybe just a really slow path? dunno

[16:45:55.0000] <wirepair_>
MikeSmith: hence why i was asking those questions yesterday :)

[16:46:01.0000] <wirepair_>
got the answer from mozilla folks

[16:46:09.0000] <MikeSmith>
ah yeah

[16:46:13.0000] <MikeSmith>
about Strict Transport Security

[16:46:20.0000] <Hixie>
zewt: i don't understand

[16:46:26.0000] <Hixie>
zewt: how would that matter?

[16:46:34.0000] <Hixie>
zewt: dedicated worekrs aren't likely in the same process either

[16:46:59.0000] <MikeSmith>
wirepair_: incidentally speaking of browsers taking a long time to do things, that page seems to take a long long time to load for me

[16:47:14.0000] <zewt>
an implementation can guarantee that dedicated workers created by a browsing context are in the same process, but it's impossible to guarantee otherwise

[16:47:23.0000] <zewt>
(that is, they can guarantee it if they want to)

[16:47:44.0000] <zewt>
i guess it's a case of "this is hard, deal with it"

[16:47:51.0000] <zewt>
such is the web

[16:48:15.0000] <zewt>
(hard as in, harder than "just" rendering from another thread in the same process--you have to support an IPC path too)

[16:48:18.0000] <wirepair_>
hmm odd seems to load fine for me ;)

[16:49:37.0000] <MikeSmith>
anyway, retweeted

[16:49:51.0000] <Hixie>
zewt: same process as what? The graphics are happening on the GPU...

[16:50:52.0000] <zewt>
same process as the process that's displaying the results, which owns the OS window where the results are going, etc

[16:51:03.0000] <wirepair_>
MikeSmith: what's your twitter handle?

[16:51:16.0000] <MikeSmith>
sideshowbarker

[16:51:48.0000] <wirepair_>
cheers

[16:51:55.0000] <zewt>
i guess it all gets more complex depending on how the browser's compositing system works anyway

[16:52:13.0000] <zewt>
(which I have no idea about)

[16:52:59.0000] <zewt>
anyway, you probably want implementor feedback on that, not mine

[16:54:03.0000] <Hixie>
zewt: all feedback is welcome :-)

[16:57:57.0000] <zewt>
Hixie: is there no analog to toDataURL and toBlob from within the thread? (since CanvasTransferableRenderingContext doesn't have those, and since it neuters, they wouldn't work anyway)

[16:59:24.0000] <zewt>
and a way to createImageBitmap in the thread from another canvas in that thread (since you don't have the HTMLCanvasElement)

[17:04:51.0000] <Hixie>
zewt: .canvas on the 2d context

[17:05:14.0000] <Hixie>
zewt: returns an ImageBitmap object

[20:27:08.0000] <msangel>
hi

[20:29:14.0000] <msangel>
all is sleaping

[20:29:17.0000] <msangel>
ok

[20:30:56.0000] <Hixie>
all is watching US election :-)

[21:16:21.0000] <MikeSmith>
the gonna fly the flag at half staff at all NASCAR races for a while I guess

[21:16:55.0000] <MikeSmith>
poor crackers

[21:17:59.0000] <MikeSmith>
but wait I see from the map that Mexico and Canada have not voted yet!

[21:25:02.0000] <MikeSmith>
in other news I wonder why I didn't realize Hubbub was as far along as it is

[21:25:17.0000] <MikeSmith>
http://www.netsurf-browser.org/projects/hubbub/

[22:05:43.0000] <annevk>
oh lol, Roy called me a terrorist?

[22:09:59.0000] <MikeSmith>
annevk: not by name

[22:10:09.0000] <MikeSmith>
sorta just by association

[22:11:52.0000] <MikeSmith>
anyway, wear it with pride man

[22:11:59.0000] <MikeSmith>
considering the source

[22:13:43.0000] <MikeSmith>
the part where is he spoke about "anti-social behavior within the WHATWG" was fun too

[22:14:07.0000] <MikeSmith>
considering, you know, how social and civil he is

[22:14:28.0000] <MikeSmith>
and his lovable, charming way with words that just endears everybody to him so much

[22:14:44.0000] <MikeSmith>
we should be more like him

[22:14:47.0000] <MikeSmith>
follow his example

[22:15:05.0000] <annevk>
the irc-logs from (for me) last night crack me up

[22:16:08.0000] <MikeSmith>
the funniest part was where you said you're going to run for the TAG

[22:16:29.0000] <MikeSmith>
next thing you'll be telling us your going to run for the Supreme Court of the IETF

[22:20:04.0000] <annevk>
yeah man, IAB, IESG, all the acronyms

[22:20:51.0000] <annevk>
Hixie: I wonder if we should merge XHR and Workers a bit more, or maybe Workers in general with the rest of the platform

[22:21:13.0000] <annevk>
Hixie: that instead of Workers saying how APIs behave, APIs define how they work in Workers

[22:21:42.0000] <annevk>
Hixie: e.g. I just noticed you can set responseType to "document" in a Worker per the XHR spec, which makes little sense

[22:23:28.0000] <MikeSmith>
annevk: it almost sounds like you're discussing architecture right now

[22:24:02.0000] <annevk>
MikeSmith: don't tell anyone, they might get the wrong impression

[22:24:31.0000] <MikeSmith>
hehheh

[22:25:43.0000] <annevk>
https://twitter.com/sideshowbarker/status/265980959848022020 he was surprised?

[22:25:55.0000] <annevk>
sounds more like Film at 11 to me

[22:27:53.0000] <MikeSmith>
wirepair_: annevk is saying "You must be new here"

[22:29:21.0000] <annevk>
that people get CORS wrong is kinda funny, because if you don't get it right, stuff won't work...

[22:29:51.0000] <annevk>
afaict the other headers are about additional protection

[22:36:48.0000] <annevk>
twitter is basically useless now

[22:37:02.0000] <annevk>
will it take another day for the election thing to go away?

[22:39:06.0000] <MikeSmith>
don't think it'll take that long

[22:39:24.0000] <MikeSmith>
Turn out the lights the party's over

[22:40:36.0000] <Hixie>
annevk: i'm all for making xhr know about workers, sure

[22:41:43.0000] <annevk>
Hixie: it would be nice if we had simple language like "in Window context" and "in Worker context" to hook into

[22:42:05.0000] <annevk>
Hixie: currently I'm using some hack based on whether or not XHR has an associated Document, but that's not very clear

[22:43:17.0000] <annevk>
Hixie: so I guess you'd need to provide those hooks, and then I can take some probable future work and maintenance away from you

[22:47:39.0000] <annevk>
Hixie: oops, you already do

[22:47:49.0000] <annevk>
Hixie: document and worker environment, great

[22:49:45.0000] <Hixie>
yeah, added those recently cos i needed them for the same reason :_)

[22:55:01.0000] <annevk>
Hixie: so I guess I'll make those changes when we do the Image thing

[22:55:18.0000] <Hixie>
i think i may end up not needing the Image thing

[22:55:26.0000] <Hixie>
i'm just gonna have a way to go from Blob to ImageBitmap

[22:56:51.0000] <annevk>
that works too, we can always add it later as convenience (we have "json" too)

[22:56:57.0000] <Hixie>
yeah

[23:09:05.0000] <annevk>
so yesterday was copyright, today capital-p Process http://annevankesteren.nl/2012/11/process

[00:00:59.0000] <hsivonen>
must. resist. making. technical. arguments. about. polyglot. on. public-html.

[00:02:41.0000] <MikeSmith>
snort

[00:02:50.0000] <hsivonen>
(people in that thread seem to have forgotten query strings)

[00:03:03.0000] <hsivonen>
I must look away. otherwise, it would be 386 time.

[00:05:16.0000] <kennyluck>
must. resist. opening. public-html. archive

[00:12:06.0000] <annevk>
Hixie: http://junkyard.damowmow.com/515 Alex Russell is going to nuke you

[00:12:14.0000] <annevk>
Hixie: "ImageBitmapFactory"...

[00:12:18.0000] <annevk>
Hixie: need to use constructors man

[00:12:42.0000] <MikeSmith>
annevk: the punctuation in the last paragraph of your blog posting shows that you've reached the next level of the game and are now ready to start writing Lisp

[00:13:09.0000] <MikeSmith>
annevk: the next thing you need to do is start growing a neckbeard

[00:13:20.0000] <annevk>
heh, on it :)

[00:13:36.0000] <annevk>
the parenthesis nicely illustrate the complexity

[00:13:54.0000] <MikeSmith>
indeed

[00:13:56.0000] <MikeSmith>
clever

[00:15:49.0000] <yuhong>
 /msg NickServ identify asdasd

[00:16:47.0000] <annevk>
Hixie: I see, you want ImageBitmap to be created asynchronously, but I'm not sure why that's necessary if the object itself is async...

[00:16:51.0000] <hsivonen>
not that strong a password to begin with

[00:16:52.0000] <yuhong>
On the TAG, I hope this work can be finished:

[00:16:55.0000] <yuhong>
http://www.w3.org/2001/tag/2011/12/evolution/

[00:17:10.0000] <yuhong>
hsivonen: I know.

[00:18:25.0000] <yuhong>
http://www.w3.org/wiki/Evolution

[00:18:51.0000] <yuhong>
It will be useful in proving that the W3C process and versioning HTML is flawed.

[00:38:29.0000] <MikeSmith>
hey guys we need somebody to write a rebuttal blog posting explaining all the positive aspects if the current publication Process

[00:38:33.0000] <MikeSmith>
oops

[00:38:36.0000] <MikeSmith>
wrong channel

[00:38:56.0000] <Ms2ger>
MikeSmith, I'll do that

[00:38:59.0000] <Ms2ger>
"None"

[00:39:07.0000] <Ms2ger>
Want to publish it? I don't have a blog

[00:39:15.0000] <MikeSmith>
we pay by the word

[00:39:39.0000] <annevk>
Stevef_: don't worry, technical stuff is next

[00:39:41.0000] <MikeSmith>
or alternatively by the depth of parenthesis

[00:39:49.0000] <Ms2ger>
(((((((((None)))))))))))))

[00:40:09.0000] <Ms2ger>
http://xkcd.com/1131/ < Hah

[00:41:01.0000] <Stevef_>
annevk: not worried, just thinking aloud about the general tone of your posts, which I understand, but don't necessarily agree with

[00:42:04.0000] <Stevef_>
annevk: I have experienced the BS, but also the opportunity

[00:42:10.0000] <annevk>
copyright is dialed down a bunch from what I had initially, but sure

[00:42:39.0000] <yuhong>
Ms2ger: http://www.reddit.com/r/IAmA/comments/120oif/we_are_mozilla_aua/c6r65h3

[00:42:54.0000] <Stevef_>
annevk: and "I have experienced the BS, but also the opportunity" this goes for both w3C and whatwg

[01:10:05.0000] <annevk>
Stevef_: happy to reword things on request btw

[01:11:01.0000] <annevk>
Stevef_: I wouldn't write a critique if I didn't care and if I can improve it all the bette

[01:11:02.0000] <annevk>
r*

[01:34:50.0000] <annevk>
Hixie: aah, I guess the main problem with "data is valid" is Blob

[01:37:02.0000] <annevk>
Hixie: but if it's just for Blob, something like ImageBitmap.create(Blob, callback) might be nicer

[01:37:24.0000] <annevk>
Hixie: more like URL.createFromObject() or whatever we ended up calling that

[01:38:19.0000] <jgraham>
annevk: Iy might be worth mentioning the unicode exception on your blog

[01:38:29.0000] <jgraham>
Also the last paragraph reads like lisp

[01:39:45.0000] <annevk>
Unicode is not quite an exception always I think. See IDNA2003 and XML

[01:41:52.0000] <annevk>
Unicode is also decidedly less modular. It affects e.g. what whitespace and identifiers can consist of in JavaScript

[01:42:05.0000] <Stevef_>
annevk: no requests, you have to telll it as you see it

[01:43:15.0000] <SimonSapin>
what’s the unicode exception?

[01:43:40.0000] <jgraham>
Unicode is unstable, but people tend not to object when you reference it

[01:43:51.0000] <jgraham>
(without specifying a particular version)

[01:45:07.0000] <jgraham>
For some reason, in that case, people accept that the dependency will be a single reusable library

[01:46:58.0000] <annevk>
https://twitter.com/dirkschulze/status/263591602960879617 hehe

[01:48:44.0000] <SimonSapin>
I think that stability is not binary: there is a whole scale from something widely implemented and in a "set in stone" rec, to the crazy idea in a CSS editor’s draft that no-one heard about or intends to implement

[01:50:05.0000] <jgraham>
Well yes, I think that everyone agrees on that in principle

[01:50:07.0000] <annevk>
"set in stone" is exactly right, typical RECs are bogus if you look at details, and most if you just glance over them

[01:50:36.0000] <annevk>
(I meant including the quotation marks is exactly right.)

[01:50:39.0000] <jgraham>
The Process is a lot further toward the binary end of the scale though

[01:51:03.0000] <annevk>
SimonSapin: the "crazy idea in a CSS editor's draft" is a distraction I think

[01:51:12.0000] <SimonSapin>
how so?

[01:51:24.0000] <annevk>
SimonSapin: it's the exception

[01:51:28.0000] <SimonSapin>
do you mean it shouldn’t be there at all?

[01:51:58.0000] <jgraham>
FWIW,if I were editing, I think I would work like this:

[01:52:08.0000] <jgraham>
Bugfixes - straight into the main spec

[01:52:32.0000] <jgraham>
New ideas without any review - onto a work branch to get review

[01:52:33.0000] <annevk>
no I mean that a) that argument carries way less weight and b) everyone agrees a stability annotation system would be useful

[01:52:54.0000] <jgraham>
Then I would annotate sections for actual stability

[01:53:22.0000] <annevk>
SimonSapin: the "crazy idea" argument is often used, but in practice it's rarely a problem, whereas a REC not describing what you actually need to implement whereas there's an "editor's draft" that does is common

[01:53:31.0000] <annevk>
and is a problem

[01:54:02.0000] <SimonSapin>
my point is that the crazy idea might gradually get more and more attention, discussion and acceptance : the stability scale is not discrete, there are all the intermediate states

[01:54:11.0000] <jgraham>
Yeah

[01:54:14.0000] <jgraham>
Of course

[01:54:23.0000] <annevk>
if it gets acceptance it might not be so crazy :)

[01:54:52.0000] <annevk>
anyway, I'm gonna miss yet another train this way

[01:55:07.0000] <jgraham>
But if it is "fantasai's personal scratchpad for collaboration with TabAtkins_" (a use case that came up at TPAC), that sounds like "shared branch" to me

[01:55:48.0000] <SimonSapin>
agreed

[01:55:56.0000] <jgraham>
If it is something that is a new idea, that the editor thinks is good and that shows some interest, that should be main spec + a label indicating high instability

[01:56:29.0000] <SimonSapin>
another data point: I just made a clarification change to Selectors4. It applies equally to level 3 but I didn’t bother because of the Process

[01:56:30.0000] <jgraham>
If it is something that has two implementations that don't yet fully interoperate, that is main spec + a label that says high stability

[01:59:15.0000] <zcorpan>
hsivonen: maybe v.nu should validate http headers

[02:00:32.0000] <zcorpan>
" Of the 217 invalid values, most were attempting to mix SAMEORIGIN with Allow-From, which ends up causing Chrome and IE9 to simply fail open and allow any site to frame the resource." seems scary

[02:00:37.0000] <zcorpan>
(http://www.veracode.com/blog/2012/11/security-headers-report/ )

[02:07:29.0000] <zcorpan>
for STS, maybe we should ignore the specified value and always treat it as "long max-age"

[02:11:15.0000] <odinho>
zcorpan: That's a good idea.

[02:12:38.0000] <zcorpan>
these results need pondering

[02:27:02.0000] <annevk>
jgraham: yeah, I don't scratch in the spec, like Hixie I use some text file on a server or mailing list discussion

[02:32:21.0000] <zcorpan>
annevk: http://lists.w3.org/Archives/Public/uri/2012Nov/0013.html

[02:33:05.0000] <annevk>
sweet

[02:34:00.0000] <annevk>
zcorpan: I think what he should maybe do first is produce a grid of results

[02:34:51.0000] <annevk>
zcorpan: then we can re-evaluate the specs

[02:35:12.0000] <zcorpan>
so keep webkit as the expected result for now?

[02:37:54.0000] <annevk>
we could make them match the URL Standard

[02:38:07.0000] <annevk>
just noticed fragment behavior is even weirder than I thought :/

[02:39:53.0000] <annevk>
back in a bit

[03:15:07.0000] <jgraham>
SteveF: You might find http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1897 illuminating

[03:15:19.0000] <jgraham>
/me assumes he will read the logs

[03:36:33.0000] <MikeSmith>
zcorpan: about v.nu providing validation for headers, in a follow-up comment to that security-headers posting somewhere, I remember seeing a mention of the idea  of a linter for headers

[03:38:11.0000] <MikeSmith>
would be good to have at least for whatever higher-priority problem cases we might be able to identify

[03:38:30.0000] <MikeSmith>
like the same-origin with Allow-From case you cited there

[03:41:06.0000] <hsivonen>
MikeSmith: which reminds me that I should drive the HttpClient update into the repo

[03:41:43.0000] <hsivonen>
as a side effect of updating HttpClient, I ended up validating the headers that the validator uses as part of its own operation

[03:41:56.0000] <MikeSmith>
oh

[03:41:59.0000] <MikeSmith>
nice

[03:42:22.0000] <hsivonen>
i.e. Content-Length and the like

[03:43:43.0000] <jgraham>
hsivonen: BTW <main><p></main><p> seems like particularly nasty behaviour

[03:45:05.0000] <hsivonen>
/me expects IE10 to surpass IE6 for Christmas in usage

[03:45:57.0000] <hsivonen>
jgraham: ouch. yeah. :-(

[03:46:05.0000] <hsivonen>
<p> still sucks

[03:46:13.0000] <hsivonen>
(though Hixie considers it a feature)

[03:46:56.0000] <hsivonen>
I may have to revise my opinion of not changing the parser if <main> is introduced to the platform

[03:55:24.0000] <annevk>
I like <p> too

[03:57:58.0000] <odinho>
<p> and not doing </p> is a feature. I use it a lot :P[6~[D[D[D[C[C[D

[03:58:16.0000] <Stevef_>
jgraham:thanks

[04:00:14.0000] <Stevef_>
so i guess that I add advice about adding main as per zcorpans email and let implementers fight it out...

[04:00:46.0000] <karlcow>
hsivonen: nice for HTTP validation. I often wished that http://redbot.org/ was into the markup validator

[04:01:56.0000] <jgraham>
Stevef_: Yes, I think I would monkey-patch the parsing algorithm for now and look for pushback

[04:02:19.0000] <Stevef_>
jgraham: OK thanks again!

[04:03:17.0000] <jgraham>
(it is easier to put the change in and back out later than the opposite)

[04:22:49.0000] <annevk>
zcorpan: my tentative plan is to require http://unicode.org/reports/tr46/ btw for IDNA

[04:22:59.0000] <annevk>
zcorpan: prolly with "Transitional" set

[04:23:11.0000] <MikeSmith>
ah that

[04:23:12.0000] <MikeSmith>
yeah

[04:23:34.0000] <annevk>
zcorpan: trying to work out with Mark Davis if we can improve the language around the hooks somehow

[04:23:45.0000] <MikeSmith>
I remember now that Mark Davis brought that to everybody's attention when we had he TPAC in Santa Clara

[04:24:03.0000] <MikeSmith>
there was even a dinner meeting to talk about it

[04:24:19.0000] <annevk>
I wish I started this a year earlier :/

[04:24:32.0000] <annevk>
He emailed me a bunch of times too, but I wasn't involved in any way with any of this

[04:24:43.0000] <MikeSmith>
yeah you lazy sluggard

[04:24:53.0000] <MikeSmith>
you just sat around daydreaming all this time

[04:27:43.0000] <MikeSmith>
annevk: do any UAs actually implement that yet?

[04:37:06.0000] <annevk>
MikeSmith: I'm not sure what UAs do

[04:46:51.0000] <SimonSapin>
http://beta.ohmytoast.com/toast/view/3f4b8a72-dda2-6834-bdbe-d0203c46bade

[04:46:54.0000] <zcorpan>
annevk: that's close but not exactly what opera does, right?

[04:47:53.0000] <zcorpan>
the emails about conversion of opera's tests annoy me

[04:48:12.0000] <zcorpan>
people should be thankful that we released tests at all

[04:48:52.0000] <zcorpan>
not complain that them not being in the right format yet blocks the Process

[04:49:49.0000] <zcorpan>
W3C, if you don't give us a pleasant work environment for testsuites, well, you know the drill

[04:51:30.0000] <karlcow>
is /007 a leading zero a license to kill http://www.ietf.org/mail-archive/web/apps-discuss/current/msg07727.html

[04:51:42.0000] <karlcow>
* double zero

[04:52:44.0000] <annevk>
zcorpan: I'm not sure what Opera does

[04:53:10.0000] <zcorpan>
annevk: ok. same here :-(

[04:53:25.0000] <annevk>
zcorpan: Opera e.g. applies Punycode to ™ whereas that's invalid per IDNA2008 and should be mapped per IDNA2003 / #46

[04:53:29.0000] <zcorpan>
though i haven't looked at this closely either

[04:53:37.0000] <annevk>
zcorpan: I would strongly encourage to revert the IDNA2008 patch for now

[04:57:12.0000] <annevk>
zcorpan: I need to fix some bugs in the DOM and XHR, I guess then I'll work on that

[04:57:54.0000] <annevk>
I read the relevant RFCs now so I do at least know what the ideas are behind the 3 strategies, need to look into the details a bit more

[04:58:29.0000] <annevk>
and maybe make a post comparing the models

[05:47:59.0000] <annevk>
http://www.microsoft.com/learning/en/us/offers/html5.aspx (via #fronteers)

[05:48:37.0000] <zewt>
first impression of this stuart guy: he doesn't have much experience with list discussions (as I skip over his mail)

[05:57:44.0000] <annevk>
which list?

[05:58:34.0000] <zewt>
whatwg, just a four-page wall of text

[06:00:31.0000] <annevk>
oh, he's been around for a long time

[06:00:58.0000] <hsivonen>
are the minutes from last night’s URL meeting still available somewhere? or the audio?

[06:02:00.0000] <hsivonen>
note to self: don’t install OpenJDK security patches when Eclipse is running

[06:02:36.0000] <zewt>
easy solution: don't run eclipse

[06:03:04.0000] <zewt>
(results may vary)

[06:03:11.0000] <annevk>
seems actually like he gives extremely useful feedback

[06:03:48.0000] <zewt>
not saying it's not useful, just that it's a wall of text, heh

[06:05:00.0000] <annevk>
hsivonen: all I can find is http://tools.ietf.org/wg/iri/minutes which is not yet filled in

[06:05:20.0000] <hsivonen>
annevk: ok. :-(

[06:05:22.0000] <annevk>
hsivonen: there's some humorous minuting in #whatwg irc-logs

[06:05:28.0000] <hsivonen>
did they record audio?

[06:05:36.0000] <hsivonen>
annevk: I saw those and wanted to see more

[06:05:59.0000] <hsivonen>
podcast idea: audio from URL meetings

[06:10:03.0000] <annevk>
hsivonen: it looks like there should be, but it's not clear there is

[06:10:16.0000] <annevk>
in particular http://www.meetecho.com/ietf85/recordings is 404

[06:13:31.0000] <annevk>
hsivonen: http://www.ietf.org/audio/ietf85/ietf85-209-20121106-1700-pm3.mp3

[06:13:37.0000] <annevk>
hsivonen: starts at 1:43

[06:13:43.0000] <annevk>
hsivonen: I guess I'm gonna listen now too

[06:17:05.0000] <annevk>
hsivonen: really starts 4:30 or so

[06:26:19.0000] <zcorpan>
"this is a working group that is not doing very much work"

[06:33:14.0000] <annevk>
so this is news to me

[06:33:30.0000] <annevk>
I thought Larry was planning to tackle this, but he's actually trying to find someone else to do it

[06:37:35.0000] <odinho>
annevk: Are you doing the MS HTML5 course? :D

[06:41:03.0000] <MikeSmith>
he's teaching it

[06:41:09.0000] <MikeSmith>
without access to IE

[06:41:31.0000] <hsivonen>
annevk: thanks. is that file still being appended to? or is just a case of the IETF serving a file without Content-Length?

[06:41:35.0000] <karlcow>
brainwaves

[06:42:09.0000] <hsivonen>
apparently just the latter

[06:42:12.0000] <annevk>
hsivonen: it has been buffering here for a while and now seems complete, I should have downloaded it instead I guess

[06:42:31.0000] <annevk>
hsivonen: but these are supposed to be static resources

[06:42:44.0000] <annevk>
hsivonen: static resources are hosted elsewhere

[06:42:50.0000] <annevk>
hsivonen: euh, streaming resources

[06:42:52.0000] <hsivonen>
yeah, it’s a static resource without Content-Length

[06:43:11.0000] <annevk>
HTTP is hard

[06:43:14.0000] <annevk>
even for the IETF

[06:44:10.0000] <annevk>
stuff gets good at 28

[06:44:35.0000] <annevk>
it has the terrorists bit

[06:45:39.0000] <hsivonen>
only has left audio channel?

[06:45:55.0000] <hsivonen>
MP3 is hard, too?

[06:46:23.0000] <annevk>
even text/plain is hard :)

[06:46:33.0000] <annevk>
or moving away from it is, maybe :p

[06:55:50.0000] <annevk>
I wish the IETF was on IRC

[06:59:57.0000] <jgraham>
NIH

[07:01:11.0000] <annevk>
44 minutes in it is explained that only browsers want "fixup" and web spiders don't

[07:01:29.0000] <annevk>
it's like all the arguments and explanation I gave on the mailing list went to waste

[07:01:55.0000] <karlcow>
annevk: which web spiders?

[07:02:34.0000] <karlcow>
because if I remember at least for Google, there was an intent to behave like  a headless browser.

[07:02:42.0000] <annevk>
karlcow: curl/wget? Bing/Google

[07:02:47.0000] <annevk>
anything really

[07:03:58.0000] <danbri>
is there a transcript?

[07:04:51.0000] <karlcow>
It is strange to think that (search engine) web spiders will not want to behave like browsers as they are made to index what a human could access.

[07:06:08.0000] <danbri>
so a headless old-style browser was something that showed you a document; a headless shiny-futuristic browser, is an all singing, all dancing pseudo-OS

[07:06:15.0000] <karlcow>
I can imagine a client which do not want fixup for testing an API, but that could be implemented with a switch in the client.

[07:06:19.0000] <danbri>
wanting to behave like the former sounds easier

[07:07:09.0000] <hsivonen>
the observation that there’s Stop Energy against URL work everywhere except the WHATWG was pretty apt

[07:07:15.0000] <karlcow>
The Web is not an easy ride. :)

[07:07:26.0000] <hsivonen>
the naming because there’s no versioning thing is so theoretical. sad.

[07:08:10.0000] <annevk>
danbri: couldn't find a transcript

[07:08:39.0000] <danbri>
/me nods

[07:08:52.0000] <annevk>
danbri: I would appreciate one because I can't easily scan this MP3 file in Chrome and I think I'm missing points people are making

[07:09:07.0000] <danbri>
tried Opera?

[07:09:27.0000] <karlcow>
/me loves scribes o/

[07:09:27.0000] <annevk>
so far though I'm not really convinced this is a good use of my time, especially since they appear to not have read my emails closely which would take them only a couple of minutes

[07:09:41.0000] <annevk>
whereas this is taking me an hour

[07:13:19.0000] <annevk>
Larry is channelling the WHATWG now

[07:13:23.0000] <annevk>
51 in

[07:13:27.0000] <annevk>
it's pretty good

[07:17:27.0000] <annevk>
lol

[07:17:46.0000] <annevk>
hober gave actual feedback, they skipped over it, prolly didn't know he represented a browser

[07:21:08.0000] <annevk>
oh, they get to it now

[07:22:19.0000] <sedovsek>
Is position: sticky already implemented in any of the browsers?

[07:25:36.0000] <annevk>
"The W3C is at a lower level in the standards food chain than the IETF"

[07:28:37.0000] <odinho>
Don't like the sticky.

[07:29:23.0000] <broquaint>
sedovsek: http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit

[07:30:00.0000] <sedovsek>
Support right now is Chrome 23.0.1247.0+ (current Canary) and WebKit nightly.

[07:30:02.0000] <sedovsek>
Thanks.

[07:31:39.0000] <odinho>
Seems like a feature designed in a very restrictive way to do a popular thing right now.

[07:34:03.0000] <hsivonen>
"The error handling in a health information system is different from error handling on a porn site."

[07:34:08.0000] <odinho>
And help, anyone know how to get to the real page of player.vimeo.com/video/52914691  ? I don't have flash, so I always push the "download" button on vimeo to see videos, -- but I can't get to the non-flash site from that url. vimeo.com/52914691 doesn't work.

[07:34:46.0000] <hsivonen>
I guess whoever said that hasn’t looked at the screens in a hospital and seen that there are browser-based interfaces to heald information systems

[07:35:05.0000] <hsivonen>
*health

[07:36:13.0000] <annevk>
sometimes I wonder if you hear like decade old arguments that were never updated

[07:39:38.0000] <hsivonen>
I wonder if anyone told the IETF about xsd:anyURI

[07:41:38.0000] <annevk>
I like how the IESG had a similar range of reactions to doing the URL Standard at the IETF (from optimistic to snickering)

[07:41:54.0000] <annevk>
1:07 in

[07:43:24.0000] <annevk>
iPad Mini commercial 12:30 in, mnot got one!

[07:43:30.0000] <annevk>
1:12:30*

[07:45:06.0000] <karlcow>
/me heads to hsivonen http://losangeles.cbslocal.com/2012/01/17/city-council-to-vote-on-mandatory-condom-use-for-adult-film-stars/

[07:56:30.0000] <jgraham>
karlcow: If real life is like Grey's Anatomy, I think porn stars and hospital staff need exactly the same kind of error protection in that regard

[07:56:43.0000] <jgraham>
(note: I have never seen Grey's Anatomy)

[07:59:17.0000] <annevk>
I wonder if beyond 1:20 there's anything useful or if it's just about chartering

[07:59:27.0000] <karlcow>
I don't know what is Grey Anatomy, but yes for the rest.

[07:59:53.0000] <jgraham>
It seems to be a hospital drama in which there is very little hospital and lots  of drama

[08:00:29.0000] <karlcow>
ah ! ok ☺ like Web standards then… little technology and lots of drama ;)

[08:05:07.0000] <annevk>
so earlier in (forgot the time) mnot asked about normatively referencing WHATWG

[08:05:21.0000] <annevk>
could be done, but you'd had to copy the relevant bit in

[08:05:25.0000] <annevk>
so it wouldn't change

[08:05:27.0000] <annevk>
brilliant

[08:08:40.0000] <annevk>
at 1:28:-- there's a bit about URI scheme registration

[08:08:56.0000] <annevk>
someone from Microsoft bulk registered the schemes mentioned on Wikipedia

[08:35:53.0000] <GPHemsley>
FTR: http://wiki.whatwg.org/wiki/WHATWG_Wiki:How_to_create_a_user_account

[09:36:07.0000] <gavinp>
Is an autoconfirmed user here able to help me, gavinp⊙co get a whatwg wiki account?

[09:36:31.0000] <gavinp>
Hixie: pingity

[09:37:44.0000] <smaug____>
annevk: ^

[09:37:59.0000] <annevk>
yeah I can

[09:38:36.0000] <gavinp>
actually, I already had an account.

[09:38:38.0000] <gavinp>
Gavinp

[09:39:00.0000] <annevk>
ah okay

[09:39:16.0000] <gavinp>
my apologies for taking your time. Thanks all the same for your time!

[09:39:32.0000] <annevk>
/me goes back to refactoring XHR

[09:58:58.0000] <annevk>
Hixie: XHR now uses JavaScript global environment as a concept

[09:59:16.0000] <annevk>
Hixie: it became much easier to follow I think as a result :)

[10:14:18.0000] <annevk>
relevant bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19892

[10:35:45.0000] <hober>
anything i should bring up in the unicode meeting?

[10:37:27.0000] <TabAtkins_>
FINISH THE UTR-50 REPORT

[10:37:49.0000] <TabAtkins_>
IT'S BEEN MONTHS SINCE THEY DECIDED ON WHAT TO DO

[10:40:56.0000] <hober>
yeah, that's why i'm in the room :)

[11:02:45.0000] <MikeSmith>
where's the details on the unicode meeting?

[11:03:05.0000] <MikeSmith>
hober: ↑

[11:04:06.0000] <hober>
MikeSmith: i don't know offhand where the meeting info is posted

[11:04:27.0000] <MikeSmith>
ok

[11:05:28.0000] <MikeSmith>
oh

[11:05:33.0000] <Adept>
Hello

[11:05:34.0000] <MikeSmith>
yall are hosting it

[11:05:40.0000] <MikeSmith>
http://www.unicode.org/timesens/logistics-utc133.html

[11:05:47.0000] <MikeSmith>
hey Adept

[11:05:58.0000] <MikeSmith>
hmm

[11:06:04.0000] <MikeSmith>
not much details there

[11:06:12.0000] <hober>
yeah, i biked over for the utr50 discussion

[11:07:05.0000] <MikeSmith>
I bet the meeting next week in Hanoi would be more fun

[11:07:14.0000] <MikeSmith>
you should have picked that one instead man

[11:07:32.0000] <MikeSmith>
the beer costs like 20 cents

[11:07:42.0000] <MikeSmith>
though it's unpasteurized

[11:07:59.0000] <Adept>
sentatic beer ? :)

[11:08:16.0000] <MikeSmith>
and the guy that serves it to you has to suck out of hose from a bucket

[11:08:18.0000] <TabAtkins>
Do shared workers outlive the last page that opened them?

[11:08:19.0000] <MikeSmith>
bia hoi

[11:08:30.0000] <gavinp>
I'm confused. What does it mean for a beer to be unpasteurized?

[11:08:39.0000] <gavinp>
Most beer is not a sterile product; there's live yeast in it, or at least yeast cysts.

[11:08:43.0000] <TabAtkins>
gavinp: It means... they don't pasteurize it?

[11:08:59.0000] <gavinp>
And you can't make beer without boiling it first, that's how you catalyze the breakdown of the malt so it will ferment.

[11:09:06.0000] <MikeSmith>
gavinp: I'm not good with words

[11:09:06.0000] <gavinp>
OK. I guess I don't understand beer production.

[11:09:18.0000] <Adept>
only English language , or some russian ?

[11:09:26.0000] <MikeSmith>
it doesn't keep like other beer

[11:09:28.0000] <MikeSmith>
or something

[11:09:33.0000] <MikeSmith>
bia hoi man

[11:09:47.0000] <TabAtkins>
Adept: If you're asking what languages you can speak in this room, mostly English, though we have some Dutch lying around.

[11:09:54.0000] <karlcow>
wooot next week in Hanoi… damn.

[11:10:12.0000] <karlcow>
too late I'm already heading to Fujisawa next week.

[11:10:15.0000] <Adept>
TabAtkins , thk :)

[11:10:27.0000] <gavinp>
Ah, I just don't know 'bout beer production. In the USA, foreign draught beer and canned & bottled beer is normally pasteurized, but domestic draught beer is not.

[11:10:34.0000] <gavinp>
/me idles again.

[11:10:37.0000] <TabAtkins>
So anyway, hey, about those Shared Workers.

[11:10:47.0000] <TabAtkins>
/me doesn't want to try and decipher lifetime semantics from the spec right now.

[11:11:22.0000] <MikeSmith>
/me was going to ask HIxie's boilerplate question, "Does the spec not make that clear?"

[11:11:37.0000] <TabAtkins>
Lifetime semantics are nearly never clear.

[11:11:46.0000] <Adept>
red wine like some ?

[11:12:02.0000] <MikeSmith>
even Hixie doesn't always know that "that" is when he asks it

[11:12:46.0000] <Hixie>
tis true

[11:13:00.0000] <Adept>
gavinp , now beer is powder

[11:13:42.0000] <MikeSmith>
btw some of the band names from the band names list at the bottom of http://www.unicode.org/timesens/calendar.html should be added to our band-names list

[11:13:52.0000] <MikeSmith>
e.g., Ideographic Rapporteur Group

[11:14:07.0000] <Adept>
But I do my natural red wine :)

[11:16:26.0000] <Adept>
You can find out? who tried Native Client SDK ?

[11:31:57.0000] <MikeSmith>
wow dhyatt over on #webkit asking for review

[11:32:11.0000] <MikeSmith>
oh he's asking SImon Fraser

[11:32:16.0000] <MikeSmith>
but still

[11:33:12.0000] <MikeSmith>
there should be a "Hyatt's waiting on me for code review" beer mug awarded for that

[11:38:55.0000] <MikeSmith>
TabAtkins: Hixie is ignoring your question about persistent workers

[11:39:16.0000] <Hixie>
what's the question?

[11:39:44.0000] <MikeSmith>
Hixie: "Do shared workers outlive the last page that opened them?"

[11:40:01.0000] <Hixie>
shared workers last as long as people have references to them

[11:40:06.0000] <Hixie>
doesn't have to be documents

[11:40:12.0000] <Hixie>
could e.g. be other workers

[11:40:20.0000] <Hixie>
so long as they're themselves opened (indirectly) by a document

[11:40:34.0000] <Hixie>
the ownership is decided via the MessagePort objects

[11:40:37.0000] <Hixie>
iirc

[11:40:50.0000] <Hixie>
so short answer no, long answer yes.

[11:41:27.0000] <MikeSmith>
that sounds like a good message for a fortune cookie, man

[11:41:38.0000] <divya>
ahaha

[11:41:47.0000] <karlcow>
:D

[11:41:53.0000] <divya>
/me thinks of posting it to w3cmemes and have a yoda meme around it

[11:42:15.0000] <divya>
MikeSmith: your gin joke never made it :(

[11:43:34.0000] <MikeSmith>
divya: I tried to pushed the w3cmemes button at the time but I was too ginned up and pushed another button and send it somewhere else

[11:43:53.0000] <MikeSmith>
divya:btw I hope you over your cold

[11:44:16.0000] <MikeSmith>
and high five on your book getting published soon

[11:44:43.0000] <MikeSmith>
I will shoplift some copies of it for sure once I can get my hands on some

[11:44:45.0000] <divya>
MikeSmith: i am miraculously over it. i am shocked myself.

[11:44:52.0000] <divya>
MikeSmith: LOLOLOLOL thanks

[11:45:03.0000] <MikeSmith>
thank Jesus for you cold recovery

[11:45:09.0000] <divya>
ahahahah

[11:45:15.0000] <divya>
or should I thank TPAC

[11:45:23.0000] <divya>
everyone who was at TPAC is sick @ office.

[11:45:28.0000] <MikeSmith>
oh

[11:45:33.0000] <MikeSmith>
well that sucks

[11:45:48.0000] <MikeSmith>
but at least you're better so too bad for the rest of em!

[11:45:50.0000] <divya>
inorite. i think I am the only one left standing.

[11:45:51.0000] <divya>
ahahaha

[11:45:57.0000] <divya>
EXACTLY

[11:46:07.0000] <MikeSmith>
anyway I think God was focusing on helping you get over your cold instead of listening to prayers from Mitt

[11:46:20.0000] <divya>
HAHAHAHHAA

[11:46:33.0000] <divya>
this might make me a believer again.

[11:46:42.0000] <divya>
/me makes note to visit temples next time in India

[11:47:52.0000] <MikeSmith>
I can take you to some good temples when you visit here

[11:48:06.0000] <MikeSmith>
get you some of the voodoo trinkets they sell at temples here

[11:48:32.0000] <MikeSmith>
problem is those are almost all for traffic safety or getting good grades at school

[11:48:46.0000] <divya>
MikeSmith: naiceee

[11:48:54.0000] <divya>
all the more reason to find excuses to visit japan

[11:49:15.0000] <divya>
traffic safety trinklets would be good.

[11:49:41.0000] <divya>
i assume all mechanical means of transportation must give way to pedestrians.

[11:49:51.0000] <MikeSmith>
heh

[11:49:53.0000] <divya>
which is not a good assumption when the traffic signal is red for pedestrians

[11:53:27.0000] <MikeSmith>
divya: mostly here the taxi drivers pretend they can't see you

[11:53:40.0000] <MikeSmith>
so you have to kick their mirrors off with you boots

[11:53:51.0000] <MikeSmith>
to teach them a lesson

[11:54:09.0000] <MikeSmith>
because they roll their windows up when they see you coming

[11:55:11.0000] <MikeSmith>
all right friends we have a Disposition of Comments

[11:55:15.0000] <MikeSmith>
of sorts

[11:55:16.0000] <MikeSmith>
http://w3c.github.com/html/CR/doc/

[11:55:21.0000] <MikeSmith>
FWIW

[11:55:23.0000] <divya>
ahahah MikeSmith

[11:55:46.0000] <divya>
what the what is a DOC

[11:56:37.0000] <MikeSmith>
shows how many comments we responded to during Last Call

[11:56:44.0000] <MikeSmith>
and how we responded

[11:56:51.0000] <MikeSmith>
where "we" equals Hixie

[11:56:57.0000] <divya>
ahaha

[11:57:33.0000] <MikeSmith>
in this case it shows that Hixie is agreeable 38.75% of the time and disagreeable 61.25% of the time

[11:57:57.0000] <MikeSmith>
which pretty much matches my anecdotal experience closly

[11:58:17.0000] <divya>
AHAHAH

[11:58:26.0000] <karlcow>
divya: Disposition Of Comments. :)

[11:58:44.0000] <divya>
ya ya i know that karlcow which is why i was asking. coz i didnt know what that meant

[11:58:46.0000] <karlcow>
the nightmare of working groups

[11:59:43.0000] <divya>
ahaha

[12:05:55.0000] <Hixie>
ok i have a shed here, i figure we'll put bikes in it

[12:06:00.0000] <Hixie>
anyone got an opinion on the colour?

[12:06:03.0000] <Hixie>
specifically:

[12:06:15.0000] <Hixie>
what should this ImageBitmap interface be called

[12:06:31.0000] <Hixie>
it's an interface with initially no properties, though i expect we'll eventually add stuff like height, width, maybe some methods

[12:06:49.0000] <Hixie>
it represents bitmap data, i.e. image, that can be used for drawing with minimal delay

[12:07:00.0000] <Hixie>
and it can be copied around over postMessage()

[12:07:09.0000] <Hixie>
it's the replacement for HTMLImageElement in workers

[12:07:39.0000] <Hixie>
candidate colours so far are "Bitmap", "BitmapImage", and "ImageBitmap". I think I prefer the second of these; the former kind of implies you can edit the pixels.

[12:08:18.0000] <annevk>
hober: I want them to fix UTS #46

[12:08:30.0000] <annevk>
hober: In particular I want the algorithm there to be clearer

[12:09:28.0000] <annevk>
hober: I need something which you pass the domain string, which allows ASCII characters such as "_" and prolly ";", and then returns a list of ASCII labels, with either the last label being empty for a trailing dot, or an explicit trailing dot flag

[12:09:55.0000] <annevk>
hober: (or of course an error of some kind)

[12:10:03.0000] <Hixie>
annevk: you can only get a Blob out of XHR once the download is complete, right?

[12:10:09.0000] <annevk>
hober: Mark Davis has probably seen this in his inbox

[12:10:14.0000] <annevk>
Hixie: that is currently the case

[12:10:19.0000] <Hixie>
k

[12:11:02.0000] <MikeSmith>
Hixie:  in your party-rocking survey I vote for "BitMap"

[12:11:36.0000] <Ms2ger>
That sounds like something else to me

[12:11:47.0000] <MikeSmith>
what else would it be?

[12:11:53.0000] <Hixie>
slightlyoff: i have an object which needs to represent something that can only be created once the data for it is available (don't want the object to be constructed while it's pending network I/O, so that the object can be used synchronously)

[12:11:56.0000] <Ms2ger>
A map of bits

[12:12:03.0000] <Ms2ger>
/flags

[12:12:18.0000] <annevk>
Hixie: for HTMLImageElement you know the data is available, same for HTMLCanvasElement and such

[12:12:27.0000] <annevk>
Hixie: so those can be done sync and via a constructor

[12:12:31.0000] <Hixie>
slightlyoff: this means that when the data for this object is coming from the network, its construction has to be done async, so for some of the ways it is created, it needs a factory method

[12:12:48.0000] <annevk>
Hixie: I think for Blob we should have ImageBitmap.create(blob) (static method)

[12:12:58.0000] <Hixie>
slightlyoff: my question is, which do you think is more important: providing a consistent way of building this object for all mechanisms, or providing a real constructor for the ones where it's not necessary to be async?

[12:13:17.0000] <Hixie>
annevk: HTMLImageElement can be delayed on network I/O.

[12:13:49.0000] <annevk>
Hixie: you'd throw or something if load has not dispatched yet

[12:13:53.0000] <Hixie>
i'm leaning towards consistent mechanism, otherwise the error handling has to be drastically different

[12:13:56.0000] <Hixie>
annevk: that's lame.

[12:14:07.0000] <annevk>
Hixie: that's how drawImage() already works

[12:14:41.0000] <Hixie>
annevk: the way it works in practice is that you want for the image's onload.

[12:15:02.0000] <Hixie>
annevk: which means you have this object hanging around that you could use to paint, but which you're avoiding using because if you do it'll fail.

[12:16:24.0000] <annevk>
hmm mkay; I still prefer ImageBitmap.create(..., callback) over the factory thing though

[12:16:37.0000] <Hixie>
that would be inconsistent with, like, the entire rest of the platform

[12:17:36.0000] <annevk>
putting factory methods on the global object is not necessarily consistent either, and static methods are used on e.g. URL

[12:17:56.0000] <Hixie>
URL is new and wildly inconsistent with the platform :-)

[12:18:47.0000] <annevk>
not much platform without them :p

[12:19:07.0000] <Hixie>
?

[12:19:11.0000] <Hixie>
i mean the object

[12:19:19.0000] <annevk>
/me was using a smiley

[12:19:24.0000] <Hixie>
k :-P

[12:19:57.0000] <Hixie>
anyway really my question is "consistency for life" or "constructors where possible"

[12:20:29.0000] <Hixie>
i guess the other option is toImageBitmap(callback) on all these objects

[12:20:45.0000] <annevk>
(I'll also note Element.create() has been floating around)

[12:20:54.0000] <Hixie>
yeah but that seems DOA

[12:21:26.0000] <annevk>
I'd be interested what slightlyoff has to say about this

[12:21:58.0000] <annevk>
It's kinda annoying to wait for load I suppose, but otherwise you have to wait for the callback...

[12:23:36.0000] <Hixie>
you'll have to most of hte time anyway

[12:23:47.0000] <Hixie>
since most of the time you'll be using either HTMLImageElement or Blob

[12:26:09.0000] <Hixie>
annevk: btw instead of Element.create I now use http://junkyard.damowmow.com/516

[12:26:15.0000] <Hixie>
annevk: which i find works rather nicely

[12:26:52.0000] <Hixie>
E('element', { title: "attributes" }) returns an element with an attribute

[12:26:58.0000] <Hixie>
attribute dict is optional

[12:27:11.0000] <TabAtkins>
Hixie: The context of the question about SharedWorkers was if that would help us with the more complex use-cases around the "kill onbeforeunload" jihad.

[12:27:32.0000] <Hixie>
annevk: E('element', E('anotherElement')); returns an element with a child

[12:27:46.0000] <Hixie>
annevk: E('element', 'text') returns an element with a child text node "text"

[12:28:26.0000] <TabAtkins>
Hixie: Yes, I use that too.  What proved useful was to make the thing fully n-ary, with complete array flattening.

[12:28:30.0000] <Hixie>
so e.g. E('p', 'Hello ', E('a', { href: "/" }, 'World'), '!'); is like <p>Hello <a href="/">World</a>!</p>

[12:28:36.0000] <Hixie>
TabAtkins: yeah

[12:28:45.0000] <TabAtkins>
So you can pass as many arguments as you want, *and* group them arbitrarily into arrays.

[12:28:49.0000] <Hixie>
yup

[12:29:08.0000] <Hixie>
i don't recall if i support multiple arrays, but i agree that'd be a good thing too

[12:29:21.0000] <Hixie>
(and F(...) is like E() but returns a fragment instead of an element)

[12:29:27.0000] <TabAtkins>
Though I ended up with El.div(...)

[12:29:42.0000] <annevk>
Hixie: looks simple enough to script too... It would be nice to add something like that, but we can't just take up window.E I think :)

[12:29:53.0000] <TabAtkins>
HTML.div would be fine too.

[12:30:02.0000] <Hixie>
ah, yes, i do support multiple arrays. neat.

[12:30:04.0000] <arv>
What methods may throw TYPE_MISMATCH_ERR? Should it be deprecated in favor of TypeError?

[12:30:44.0000] <Hixie>
TabAtkins: yeah, doing that would be interesting, and would mean you could easily do SVG. and MathML.

[12:30:51.0000] <TabAtkins>
Yup.

[12:30:54.0000] <annevk>
arv: yeah maybe, if you think it's worth it

[12:31:04.0000] <TabAtkins>
And we already have a CSS global sitting around for this purpose, too.

[12:31:14.0000] <annevk>
arv: file a bug on DOM?

[12:31:21.0000] <annevk>
arv: I can do a query

[12:31:26.0000] <arv>
annevk: thanks

[12:31:49.0000] <arv>
annevk: It is used in a whole lot of places in WebKit but they all look like TypeErrors

[12:32:18.0000] <Hixie>
ok well back to ImageBitmap, I'm gonna stick all these factories on the global object and see how many people complain

[12:32:35.0000] <annevk>
arv: I bet HTML uses it a lot

[12:32:39.0000] <annevk>
anyway, gotta run

[12:33:12.0000] <Ms2ger>
Hixie, hmm, I don't seem to find email about your canvas changes in March

[12:33:30.0000] <Ms2ger>
I don't have to go look into public-html archives, do I? :)

[12:33:58.0000] <TabAtkins>
Hixie: Do you just discriminate the second argument based on being an Object, for determining whether it's an attr bag or a child?

[12:34:17.0000] <Hixie>
Ms2ger: you mean v3?

[12:34:29.0000] <Ms2ger>
... maybe?

[12:34:40.0000] <Ms2ger>
I would've guessed v5

[12:34:43.0000] <Hixie>
TabAtkins: (typeof attributes != 'string') && (!(attributes instanceof Node))

[12:34:50.0000] <Hixie>
Ms2ger: uh yeah. v5.

[12:34:51.0000] <Hixie>
whatever

[12:34:54.0000] <Hixie>
v some number.

[12:35:18.0000] <Ms2ger>
Unless you just happen to remember if lineDashOffset is the thing we implement as mozDashOffset

[12:35:52.0000] <Hixie>
Ms2ger: http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Mar/0269.html

[12:36:01.0000] <Hixie>
Ms2ger: it's similar, but not identical, iirc.

[12:36:16.0000] <Hixie>
Ms2ger: (based on feedback from mozilla that we shouldn't do what mozDashOffset did, also iirc)

[12:36:47.0000] <Hixie>
TabAtkins: so just checking it's not a valid child, basically

[12:43:28.0000] <zcorpan_>
Hixie: instanceof Node fails cross-window

[12:43:42.0000] <Hixie>
close enough for my purposes

[12:44:44.0000] <Ms2ger>
/me goes back to marking <main> emails as read

[12:50:01.0000] <Ms2ger>
Hixie, this is one for you: http://i.minus.com/ibx7mxJlLVaXp5.gif

[12:56:37.0000] <TabAtkins>
Hixie: And not an array either, presumably?

[13:10:50.0000] <gavinp>
Dumb question: how do I create a page in the wiki?

[13:11:07.0000] <TabAtkins>
Make a link to a non-existent page.  Follow that link.

[13:11:12.0000] <TabAtkins>
Then edit the page you end up at.

[13:11:18.0000] <gavinp>
OK. I just navigated to a non existent page

[13:11:18.0000] <annevk>
or just URL hack it

[13:11:26.0000] <gavinp>
http://wiki.whatwg.org/wiki/Link_prerender_events

[13:11:29.0000] <gavinp>
As annevk suggested

[13:11:35.0000] <gavinp>
and there was no edit option presented to me.

[13:11:43.0000] <gavinp>
Does Gavinp lack the mojo?

[13:11:43.0000] <TabAtkins>
Don't url-hack it, because then there's no guarantee that you'll remember to actually link the page from somewhere.  ^_^

[13:11:51.0000] <TabAtkins>
Free-floating pages are the death of wikis.

[13:12:01.0000] <gavinp>
OK. I will stop URL hacking, since I love TabAtkins.

[13:12:05.0000] <annevk>
gavinp: left from search there should be "create"

[13:12:12.0000] <annevk>
gavinp: as long as you add a category URL hacking is fine

[13:12:30.0000] <gavinp>
Here's the complete text: "Link prerender events

[13:12:30.0000] <gavinp>
There is currently no text in this page. You can search for this page title in other pages, or search the related logs."

[13:12:33.0000] <annevk>
also, pretty sure GPHemsley and I track stuff that's being added and make sense out of it

[13:14:06.0000] <divya>
annevk: ahahaha glad to know your views are being expanded (w.r.t chat conversation)

[13:14:28.0000] <annevk>
gavinp: http://html5.org/temp/whatwg-wiki-create.png

[13:15:52.0000] <annevk>
gavinp: if you don't see that, I can create it for you I guess

[13:18:07.0000] <gavinp>
I do not see that. That's what I have been trying to say.

[13:18:23.0000] <gavinp>
Please create it for me, or, I'd prefer to have the mojo so that I don't come beg each time.

[13:18:28.0000] <gavinp>
But, I doubt I do this often.

[13:18:43.0000] <gavinp>
I am "Gavinp"

[13:19:24.0000] <annevk>
gavinp: sorry about that

[13:19:37.0000] <annevk>
there's a page now, hopefully GPHemsley upgrades your account

[13:19:50.0000] <annevk>
I have no idea how to do that and couldn't find it either

[13:19:56.0000] <gavinp>
Outstanding, thanks!

[13:35:21.0000] <GPHemsley>
gavinp: Ah, one of the requires to become an autoconfirmed user is to have a minimum number of edits. (Only autoconfirmed users can create new pages.)

[13:35:32.0000] <GPHemsley>
gavinp: I forget whether the minimum is 1 or 5.

[13:35:52.0000] <GPHemsley>
gavinp: If it's 1, then just creating the dead link should be enough.

[13:36:12.0000] <GPHemsley>
gavinp: But there is also a time aspect to being autoconfirmed.

[13:38:38.0000] <GPHemsley>
gavinp: You may also be at a disadvantage because your account is older. (Counter-intuitive, I know.)

[13:40:18.0000] <annevk>
GPHemsley: because we vet who's registered I think we should allow those registered to do most things

[13:40:27.0000] <annevk>
GPHemsley: or is there some hole in that reasoning?

[13:40:56.0000] <GPHemsley>
annevk: It's a bit of a cushion in case we turn registration back on.

[13:41:09.0000] <GPHemsley>
annevk: But I don't necessarily disagree with you.

[13:42:50.0000] <GPHemsley>
As soon as I remember how, I'll make gavinp a permanent autoconfirmed user.

[13:46:49.0000] <GPHemsley>
/me wonders if he made a permission change that made the option disappear.

[13:47:21.0000] <GPHemsley>
Apparently I did.

[13:47:26.0000] <GPHemsley>
>_<

[13:48:55.0000] <Hixie>
TabAtkins: i don't check if it's an array, but that's just a bug.

[13:53:07.0000] <GPHemsley>
annevk: OK, administrator will now see the "User rights management" link restored to the Special pages page.

[13:53:11.0000] <GPHemsley>
+s

[13:53:27.0000] <annevk>
IRI WG may have given up on the WHATWG, but I thought I'd give it one last shot: http://lists.w3.org/Archives/Public/uri/2012Nov/0015.html

[13:53:48.0000] <annevk>
GPHemsley: cool

[13:55:34.0000] <Hixie>
annevk: not saying you should do this, but if you want to get them on board, what might help is documenting what software you have tested, what software you intend to test but haven't, and what software you haven't tested and are unlikely to test

[13:56:26.0000] <Hixie>
annevk: not sure exactly how to test a lot of this, e.g. URLs are used all over the place in the SIP stack, but I dunno how you'd test a SIP client's or server's URL handling exactly

[13:56:34.0000] <annevk>
I mainly want to stop misrepresenting my position

[13:56:42.0000] <Hixie>
good luck with that

[13:56:45.0000] <annevk>
want them*

[13:56:58.0000] <annevk>
yeah, too much 386 I guess

[13:57:02.0000] <Hixie>
people still fight strawmen over what i do with html :-)

[13:57:28.0000] <GPHemsley>
gavinp: You are now a permanent autoconfirmed user. Enjoy!

[13:57:52.0000] <annevk>
And I should test more than wget/curl and browsers I suppose, but then there's enough difference there to converge first

[13:59:26.0000] <Hixie>
i suspect they're all basically sharing the same relatively small set of URL parsing libraries, and that it's therefore possible to converge somewhat reasonably

[13:59:51.0000] <Hixie>
but it's always possible that e.g. the SIP world's handling of URLs is so far from the browser's world, that WebRTC browsers are going to have to end up with two different URL parsers.

[14:00:05.0000] <Hixie>
that would be worth discovering and speccing, maybe by calling them different things

[14:00:15.0000] <Hixie>
no idea how to test the SIP side of that, really, though

[14:03:09.0000] <annevk>
I don't know SIP so there's that

[14:03:13.0000] <GPHemsley>
/me finds a standard dated 1987-04-31

[14:03:23.0000] <divya>
what is that?

[14:03:54.0000] <annevk>
but I suspect it will come up if what you say is the case. Someone is going to notice there's more than one library, attempts to merge them, and succeed/fail.

[14:30:38.0000] <Hixie>
bikeshed painters, if any of you have a better idea for the name of the object that you get using getContext('foo') that represents a transferable <canvas> proxy, let me know

[14:30:49.0000] <Hixie>
also if you can think of a better term than "worker" for the argument to getContext()

[14:30:59.0000] <Hixie>
right now i'm using "CanvasTransferableRenderingContext" which isn't ideal

[14:31:17.0000] <TabAtkins>
How do you know what kind of context it'll be if you start out with getContext('worker')?

[14:31:32.0000] <Hixie>
the object you get back itself has a getContext() method

[14:31:38.0000] <TabAtkins>
Oh, weird.

[14:31:47.0000] <Hixie>
see http://junkyard.damowmow.com/515

[14:31:58.0000] <Hixie>
and yeah, if you have any better ideas for this i'm definitely all ears

[14:32:01.0000] <Hixie>
i'm not sure how else to do it

[14:32:08.0000] <Hixie>
the idea is to be able to have a worker paint to a canvas

[14:32:15.0000] <Hixie>
but you can't send the canvas to the worker

[14:32:24.0000] <Hixie>
so you have to send a kind of proxy object

[14:32:28.0000] <TabAtkins>
I think someone already shot down the idea of just making Canvas transferable, and turn into the neutered thing when passed to a worker?

[14:33:10.0000] <Hixie>
the main problem with doing that is that i'm scared of whehter it'll block up from ever adding the DOM to workers

[14:33:24.0000] <Hixie>
because transfering another element would presumably take it out of its home DOM

[14:33:35.0000] <Hixie>
but we'd be stuck with transfering a canvas not doing that

[14:33:38.0000] <TabAtkins>
Ah, true.

[14:33:52.0000] <TabAtkins>
Why can't you make the context object transferable?

[14:33:58.0000] <Hixie>
too much state

[14:34:29.0000] <TabAtkins>
Hm, that makes sense.  You'd have to copy over the entire stack of context data.

[14:34:40.0000] <Hixie>
e.g. i don't even want to consider how much pain it'd be to transfer a live 3D GL context around between processes

[14:34:57.0000] <Hixie>
bad enough that we're requiring implementations have a way to push instructions across process boundaries

[14:35:10.0000] <TabAtkins>
Actually, from my conversations with Greg (one fo the webgl people, and my cubemate), that's not problematic to him.

[14:35:35.0000] <Hixie>
good, maybe he can convince some of the others ;-)

[14:35:37.0000] <TabAtkins>
He just wants a way to hook up a canvas on the DOM end to a context on the Worker end, so that you can blit across.

[14:36:09.0000] <Hixie>
my plan is to have a commit() method on the CanvasTransferableRenderingContext that tells the UA "ok, now apply all of that to the context"

[14:36:23.0000] <Hixie>
the on-screen context, that is

[14:36:30.0000] <Hixie>
s/context/surface/

[14:36:35.0000] <TabAtkins>
Actually, though, I think your idea is what he's asking for.  You get a canvas hooked up to a dummy bitmap, which can only be manipulated in teh worker.

[14:36:50.0000] <TabAtkins>
Right?

[14:37:14.0000] <Hixie>
well

[14:37:24.0000] <Hixie>
you can describe it in various ways depending on how you look at it

[14:37:40.0000] <Hixie>
but basically yes, except there's also a link to a <canvas> in the Document that you can push to

[14:37:46.0000] <Hixie>
if you want to

[14:37:49.0000] <TabAtkins>
Yeah, that's what I meant.

[14:38:00.0000] <Hixie>
(push to without using postMessage())

[14:38:10.0000] <Hixie>
i may also provide a way to get a context that is just entirely in the worker

[14:38:15.0000] <Hixie>
on which commit() does nothing

[14:38:18.0000] <TabAtkins>
You have a canvas on the document side which is solely a dumb bitmap, can't be manipulated directly.  It's just a rectangle into the Worker world, which is doing the actual drawing on the context.

[14:38:27.0000] <Hixie>
yeah

[14:38:28.0000] <TabAtkins>
Yeah, both of those are good.

[14:38:52.0000] <Hixie>
you'll probably be able to grab a frame of the canvas bitmap from the main thread

[14:39:09.0000] <TabAtkins>
Yeah, you can always draw that canvas onto another canvas.

[14:39:10.0000] <Hixie>
which grabs a frame at some arbitrary call to commit()

[14:41:55.0000] <TabAtkins>
What's the purpose of ImageBitmap here?  I'm not sure I understand it from these notes.

[14:42:13.0000] <Hixie>
something you can pass drawImage() in a worker

[14:42:46.0000] <TabAtkins>
Can't you just pass an ImageData?

[14:43:22.0000] <TabAtkins>
I presume you mean for the Document to send something to the worker, that it can use for drawing?

[14:43:58.0000] <Hixie>
well whatever solution we use, has to be something you can populate lazily. ImageData can be implemented lazily, but only so long as the author doesn't accidentally poke at the actual pixel data.

[14:44:03.0000] <Hixie>
and it's really easy to accidentally do that.

[14:44:11.0000] <Hixie>
e.g. dumping state to the console

[14:44:37.0000] <Hixie>
so you really want an ImageData that specifically doesn't expose any pixels

[14:45:14.0000] <TabAtkins>
Oh, interesting.  You want it to be lazy so that it's cheaper to send to the Worker?

[14:45:19.0000] <Hixie>
yeah

[14:45:33.0000] <annevk>
Hixie: ImageBlob maybe?

[14:45:47.0000] <annevk>
but I guess it wouldn't implement the same stuff so that's not really good

[14:45:53.0000] <Hixie>
TabAtkins: and back again; one common use case will be for the worker to do the drawing, then grab a frame to send back to the document so that it can be drawn at the same time as something on the DOM is moved

[14:46:10.0000] <Hixie>
annevk: it's not a Blob, yeah. Also that sounds like it'd include SVG.

[14:46:41.0000] <TabAtkins>
Okay, I see.  And if it's lazy, you can just late-compute the actual data in the Document, drawing directly from the Worker's information (or reverse), without exposing transfer details in a detectable way.

[14:46:49.0000] <TabAtkins>
s/detectable/unsafe/

[14:46:50.0000] <Hixie>
yeah

[14:46:54.0000] <Hixie>
you can in fact just do it all on the GPU

[14:46:59.0000] <Hixie>
at least, i assume so :-)

[14:47:02.0000] <TabAtkins>
Yeah, okay.

[14:47:05.0000] <TabAtkins>
(I think so, yeah.)

[14:47:21.0000] <TabAtkins>
I'd like to run this through Greg next time he shows up in the office.

[14:47:51.0000] <TabAtkins>
And I'll think on the names I guess.  ^_^

[14:48:02.0000] <Hixie>
i'm speccing the strawman so hopefully it'll be something concrete people can comment on

[14:52:20.0000] <TabAtkins>
Okay, I think I'm okay with this, and I'll give you concrete feedback from the dude who pesters me about this exact subject every month or so soon.  ^_^

[14:52:54.0000] <Hixie>
:-)

[14:53:35.0000] <annevk>
getContext returning a <canvas>-like object seems a bit weird

[14:53:52.0000] <Hixie>
this whole thing is weird

[14:54:04.0000] <annevk>
doing getWorkerCanvas() or some such seems cleaner

[14:54:24.0000] <Hixie>
what's the difference?

[14:54:35.0000] <Hixie>
it's just another method that's mutually exclusive

[14:54:46.0000] <Hixie>
it's semantically identical

[14:56:35.0000] <annevk>
makes it clear what's actually going on

[14:56:41.0000] <TabAtkins>
I'm with annevk, fwiw.  getContext() doesn't normally return something that you can further call getContext() on.

[14:57:20.0000] <annevk>
could even do new WorkerCanvas(HTMLCanvasElement)

[14:58:06.0000] <Hixie>
TabAtkins: getContext() returns one of two objects, that have basically nothing in common with each other. I'm not sure one can draw conclusions from that.

[14:58:14.0000] <Hixie>
annevk: constructors with side-effects on the arguments are weird.

[14:58:31.0000] <Hixie>
also, it's not just a worker canvas.

[14:58:35.0000] <Hixie>
you can use this in the main thread too.

[14:58:40.0000] <Hixie>
it's just a disconnected context.

[14:58:43.0000] <TabAtkins>
Hixie: They have plenty in common!  They're both objects that represent how you can push pixels onto the canvas.

[14:58:53.0000] <Hixie>
(for some definition of "disconnected")

[14:59:24.0000] <Hixie>
TabAtkins: gl's doesn't really push pixels, it pushes scenes that then turn into pixels. :-)

[15:00:14.0000] <TabAtkins>
Same difference.

[15:00:33.0000] <Hixie>
it's not that far from this new object, either

[15:05:13.0000] <TabAtkins>
The new object exists solely to link up the canvas with the eventual context that will be created from it.  It's like a deferred context or something.

[15:05:27.0000] <Hixie>
a proxy of sorts

[15:05:32.0000] <TabAtkins>
Yup.

[15:05:32.0000] <Hixie>
except it's not even that

[15:05:36.0000] <Hixie>
it's a representation of the canvas

[15:06:24.0000] <Hixie>
a context factory proxy context

[15:06:26.0000] <TabAtkins>
It's like "var proxy = canvas.getContext.bind(canvas);" or something - just yanking the getContext method out of the canvas, so that you'll still get the right link-up when it's eventually called.

[15:06:48.0000] <Hixie>
yeah, more or less

[15:07:13.0000] <Hixie>
creating it also makes height and width no longer work on the canvas

[15:07:24.0000] <Hixie>
and prevents getContext() from working again

[15:08:34.0000] <TabAtkins>
Yeah, the various fiddly necessary details.

[15:08:46.0000] <TabAtkins>
Anyway, I emailed Greg so I wouldn't have to wait for him to come in.

[15:08:53.0000] <TabAtkins>
He only gets into the office once or twice a week.

[15:11:10.0000] <Hixie>
another question:

[15:11:45.0000] <Hixie>
if i do: var img = new Image(); img.src = 'a'; var bitmap = createImageBitmap(img, cb); img.src='b';

[15:12:02.0000] <Hixie>
should cb be invoked with null, an ImageBitmap for 'a', or an ImageBitmap for 'b'?

[15:12:13.0000] <TabAtkins>
Why you gotta bug me with race conditions.

[15:12:15.0000] <Hixie>
what if the setting of src to 'b' happens in a 0ms setTimeout?

[15:12:31.0000] <Hixie>
this isn't really a race condition, the timing is all defined

[15:12:36.0000] <Hixie>
i just need to know what we want to have happen

[15:13:08.0000] <TabAtkins>
Ideally, with 'a'.  Setting src is synchronous already.  It would be confusing if you could ask it to create an imageBitmap and then set what image for it to use *afterwards*.

[15:13:40.0000] <TabAtkins>
Also, it would be pretty cool if createImageBitmap took a string, and acted as if an <img> was loaded with that as its src.

[15:13:51.0000] <Hixie>
right now if you do var img = new Image(); img.src = 'a'; img.src='b';, per spec, only one HTTP request is made, and it's for 'a'.

[15:13:59.0000] <Hixie>
er

[15:14:02.0000] <Hixie>
for 'b', not 'a'

[15:14:36.0000] <TabAtkins>
Because you dont' start the load until the next microtask or whatever?

[15:14:48.0000] <Hixie>
and if you do a timeout to set 'b', and getting 'a' required a DNS lookup, then you'll probably still only get one request, for 'b'

[15:15:11.0000] <Hixie>
every time you set src or srcset it resets the img element and starts the fetch afresh, and the fetch itself isn't started until the event loop spins.

[15:15:14.0000] <Hixie>
(stable state)

[15:16:05.0000] <TabAtkins>
Hmm.  Personally, I still stick with my answer - I think it should snapshot the image that you pass to it at that moment.

[15:16:57.0000] <Hixie>
i'm thinking maybe the way to go is to just get the URL out of the <img> and fetch that independent of the <img>

[15:17:08.0000] <TabAtkins>
Yeah, that's what I'm saying.

[15:17:28.0000] <TabAtkins>
Though if the bitmap is already loaded, you can of course skip the fetch itself.

[15:17:33.0000] <TabAtkins>
But that can be an impl detail.

[15:17:34.0000] <Hixie>
yeah

[15:17:42.0000] <Hixie>
well, it's a detectable detail

[15:17:44.0000] <Hixie>
but yeah

[15:17:58.0000] <Hixie>
that's a lot of functionality to duplicate in the spec, but it does mean we can support createImageBitmap(url)

[15:18:04.0000] <TabAtkins>
Only insofar as caches are detectable, right?

[15:18:30.0000] <TabAtkins>
Well, if the same url would result in different images at different times, it would be different.

[15:18:34.0000] <TabAtkins>
But again, caching.

[15:19:07.0000] <Hixie>
similar to caching, yes

[15:19:19.0000] <Hixie>
<img> elements have their own special cache though

[15:19:29.0000] <TabAtkins>
Ah, weird.

[15:19:34.0000] <Hixie>
yeah

[15:19:40.0000] <Hixie>
hmmmm

[15:19:47.0000] <Hixie>
also, some UAs don't fetch images immediately

[15:20:06.0000] <Hixie>
so we'd have to decide, in those UAs, whether calling createImageBitmap(img) would fire img.onload

[15:20:23.0000] <Hixie>
or if the img would remain not loaded

[15:20:31.0000] <Hixie>
with the fetch being done independently

[15:20:32.0000] <Hixie>
hmmmmmmmm.

[15:20:40.0000] <TabAtkins>
Interesting question!  I lean toward loading it.

[15:21:04.0000] <Hixie>
another problem is crossorigin=""

[15:21:12.0000] <TabAtkins>
Ah, yeah.

[15:21:18.0000] <Hixie>
if we did createImageBitmap(url) we'd have to provide a separate argument for that

[15:21:28.0000] <Hixie>
and then duplicate all that work

[15:21:30.0000] <Hixie>
or factor it out

[15:21:46.0000] <Hixie>
anne's suggestion earlier is sounding better and better

[15:21:52.0000] <Hixie>
(just bail if the img isn't loaded yet)

[15:22:06.0000] <TabAtkins>
Hah.

[15:22:24.0000] <TabAtkins>
Would be nice to be able to load an image directly in the worker.

[15:22:35.0000] <Hixie>
well you can do that with XHR

[15:22:46.0000] <Hixie>
XHR the image as a blob, then createImageBitmap(blob)

[15:22:59.0000] <TabAtkins>
Ah, indeed.

[15:23:12.0000] <TabAtkins>
That would be why you were asking Anne earlier about adding 'image' as an XHR type.

[15:23:30.0000] <Hixie>
you know, if we send <img> packing and require that the data be fetched, we wouldn't really need to do anything asynchronously

[15:23:52.0000] <Hixie>
and we could make slightlyoff happy and have a constructor instead

[15:23:55.0000] <TabAtkins>
The blob case still needs asynchrony, no?

[15:24:12.0000] <Hixie>
can you get a blob before you have its data?

[15:24:58.0000] <TabAtkins>
I dunno.  Haven't worked with blobs yet.

[15:24:59.0000] <Hixie>
what's the maximum latency on getting Blob's data? wider web? NFS? disk i/o? ram?

[15:25:17.0000] <Hixie>
if it's disk i/o or worse, that's a problem, indeed

[15:26:18.0000] <Hixie>
based on FileReader, i guess it's disk i/o or worse

[15:27:02.0000] <TabAtkins>
Yeha, I think it's disk i/o.

[15:27:26.0000] <TabAtkins>
The blob is like imagebitmap - it represents, abstractly, a bunch of data that might be expensive to fetch/transfer eagerly.

[15:27:52.0000] <TabAtkins>
No reason why its latency couldn't be wider web, either.

[15:27:54.0000] <Hixie>
yeah but imagebitmap is intended to have max latency O(GPU)

[15:28:13.0000] <Hixie>
Blobs know their length with latency O(RAM)

[15:28:25.0000] <Hixie>
but presumably not their data, yeah

[15:28:45.0000] <TabAtkins>
Actually, blob.size was a mistake in the API that we can't take back now.

[15:28:51.0000] <TabAtkins>
It should have been asynchronous too.

[15:28:51.0000] <Hixie>
indeed

[15:28:53.0000] <dgorbik>
Hello everybody! Which pseudo-elements use property whitelists? I would like to see examples of the implementation in the code for those.

[15:29:02.0000] <TabAtkins>
::first-line and ::first-letter.

[15:29:18.0000] <TabAtkins>
Implementations are... varied and tricky.

[15:31:04.0000] <TabAtkins>
dgorbik: The rule of thumb is that, if the pseudo-element is a normal, independent box, it can take all properties.  If it wraps existing content (particularly, in ways that might violate the tree structure of HTML), it has a whitelist.

[15:31:11.0000] <Hixie>
blob is easier than img because once created, it can't change identity

[15:31:19.0000] <TabAtkins>
Right.

[15:31:30.0000] <Hixie>
i think sanity is going o require that <img> has to be loaded before it can be used here

[15:31:34.0000] <Hixie>
anne wins again

[15:31:41.0000] <TabAtkins>
That's fine with me.

[15:31:55.0000] <TabAtkins>
Waiting for img.onload to send the data to the worker seems okay.

[15:32:05.0000] <TabAtkins>
You'll have to wait for that at some point anyway.

[15:32:25.0000] <Hixie>
yeah, it's not that i have a problem with

[15:32:28.0000] <Hixie>
it's anne being right!

[15:32:29.0000] <Hixie>
:-P

[15:32:36.0000] <TabAtkins>
This is a major problem.

[15:32:41.0000] <TabAtkins>
We can't be seen agreeing with a terrorist.

[15:32:48.0000] <Hixie>
true dat

[15:33:49.0000] <dgorbik>
TabAtkins: thanks. Is features.usesFirstLineRules related to those?

[15:34:12.0000] <TabAtkins>
dgorbik: No clue!  If you're talking about Firefox, I'm a WebKit hacker.

[15:34:20.0000] <dgorbik>
that's in webkit

[15:34:35.0000] <TabAtkins>
Then still, dunno.  Our ::first-line implementation is crazy, and I'm never ever touching it.

[15:35:12.0000] <TabAtkins>
(Granted, I'm not sure how sane any implementation of ::first-line can be.)

[15:35:22.0000] <dgorbik>
Thanks, I will look closer at this

[15:37:51.0000] <Hixie>
ok the object you get from canvas is no called TransferableCanvasRenderingContextFactory, which is obviously not a name I can seriously keep in the spec

[15:38:00.0000] <Hixie>
so painters, your input is more than ever welcome now

[15:38:28.0000] <Hixie>
if you don't help me get this thing down, people will start saying i hang out with java programmers

[15:38:57.0000] <TabAtkins>
Hahaha

[15:39:28.0000] <TabAtkins>
CanvasDelayedContext

[15:39:32.0000] <TabAtkins>
CanvasNullContext

[15:39:55.0000] <dglazkov>
annevk: yo

[15:40:00.0000] <Hixie>
if we're not returning it from getContext(), it probably shouldn't be called *Context

[15:40:14.0000] <Hixie>
though if we are, those are good names

[15:40:21.0000] <Hixie>
CanvasDelayedContext in particular

[15:43:13.0000] <TabAtkins>
If it's delivered from a different method, CanvasProxy.

[15:43:37.0000] <Hixie>
yeah, that could work

[15:44:43.0000] <hober>
dglazkov: he went to bed

[15:45:14.0000] <dglazkov>
hober: wat

[15:45:25.0000] <dglazkov>
okay

[15:45:42.0000] <dglazkov>
timezones suck


2012-11-08
[16:14:16.0000] <GPHemsley>
Argh, Apache/DreamHost. When I say "unset Content-Header, I do NOT mean "send Content-Type: text/plain"

[16:14:21.0000] <GPHemsley>
+"

[16:19:43.0000] <GPHemsley>
Firefox, Chrome, and Opera sniff PDFs; Safari doesn't

[16:19:53.0000] <GPHemsley>
at least, not with just '%PDF-'

[16:24:43.0000] <GPHemsley>
ARGH.

[16:24:58.0000] <GPHemsley>
This testing is going to be impossible if the server insists on ignoring my directives.

[16:28:42.0000] <zewt>
sure would be great if firefox's options ui wasn't in the dark ages

[16:28:56.0000] <zewt>
spending more than a minute looking through every screen searching for the cookie display heh

[16:30:27.0000] <zewt>
what the hell? they changed the cookie button to something that's not a button at all, which makes it unfindable since i was looking at the buttons, not things that look like links

[16:30:58.0000] <zewt>
and serious question: how is it 2012, and popunders are still possible

[16:31:25.0000] <zewt>
they're easily the single most user-hostile abusive things that websites do, and i'm pretty sure there are literally 0 legitimate non-abusive uses for doing it

[16:33:49.0000] <zewt>
wow, seriously: firefox's UI for opening the cookies display is totally different depending on an unrelated option

[16:34:08.0000] <zewt>
(which is why I couldn't find it--I was in a clean profile, with that unrelated option set to something else)

[16:34:32.0000] <GPHemsley>
/me mumbles something about stupid .htaccess rules.

[16:37:12.0000] <GPHemsley>
ah, 500 error, even better

[16:44:34.0000] <TabAtkins>
Anyone know Hg well enough to help me unwedge my repo, before I just nuke it from orbit?

[16:44:56.0000] <TabAtkins>
I didn't pull before I started editting, and the commits hanging in the ether conflicted with the local changes I just made to a file.  Merge conflict, obviously.

[16:45:45.0000] <TabAtkins>
I try to hg merge, then hg resolve -am.  Now, if I try to hg merge, it tells me I can't because I have uncommited changes.  If I try to hg commit, it tells me I can't partially commit a merge.

[16:46:48.0000] <TabAtkins>
Ah, got myself unwedged.

[16:47:12.0000] <zewt>
that's what i like about plain old svn: i just never hit stupid weird things like that

[16:47:32.0000] <TabAtkins>
I never hit stupid things like that in Git, either.  Hg is just slightly worse at everything.

[16:54:53.0000] <roc>
it is possible to get confused in git

[16:55:26.0000] <TabAtkins>
Yo, roc, am I being dumb in the thread with Dirk, or is he just confused?

[16:55:36.0000] <roc>
of course git advocates will say "oh, you just do <MAGIC> to get out of that"

[16:55:56.0000] <roc>
TabAtkins: you're perfectly clear to me

[16:56:23.0000] <roc>
I think he's confused but it could just be monumental miscommunication

[16:58:45.0000] <TabAtkins>
Usually with Dirk it's the latter, sprinkled with a little bit of confusion.

[16:58:52.0000] <TabAtkins>
But I feel better now.

[17:56:28.0000] <TabAtkins>
Hixie: Got some initial feedback from Gregg.

[17:57:03.0000] <TabAtkins>
He says that WebGL people are moving to prefer contexts being separable from canvases, so that you can render to multiple canvases without having to duplicate all the state.

[17:57:16.0000] <Hixie>
yeah, i saw them talking about that on the gl list

[17:57:38.0000] <TabAtkins>
"var x = new WebGLRenderingContext(...); canvas.bindDrawingBuff(x); canvas2.bindDrawingBuff(x);"

[17:57:45.0000] <Hixie>
i think that if they do that the way it sounds like they are going to do that, it'll work fine with this too

[17:58:21.0000] <Hixie>
(they just need to get the CanvasProxy objects into th worker with the WebGLRenderingContext() object)

[17:58:22.0000] <TabAtkins>
Yeah, then the context can be constructed, either on the worker or in the document and sent to the worker, and then bound to the canvas by the document.

[17:58:47.0000] <Hixie>
the way i'm currently going you'd send the proxy to the worker and the context would be created in the worker

[17:58:52.0000] <Hixie>
since you can't transfer contexts

[17:59:16.0000] <TabAtkins>
Unfortunately, he didn't directly respond about context transfer across process boundaries.  I'll press him on that.

[18:03:35.0000] <TabAtkins>
Hixie: Were you thinking that you'd always have to call commit(), or that the browser would normally automatically shuttle things back and forth, and commit() would be a helpful reminder for "I'm done for this frame, go ahead and take it".

[18:03:51.0000] <Hixie>
that you'd need commit(), i think

[18:04:02.0000] <Hixie>
we could imply commit if you spin the event loop in the worker

[18:04:19.0000] <TabAtkins>
Yeah, Greg was talking about putting rAF in a worker.

[18:04:30.0000] <TabAtkins>
Which would accomplish the event-loop spin *and* let you safely modulate your frame rate.

[18:04:30.0000] <Hixie>
definitely need to do that, yes

[18:04:49.0000] <TabAtkins>
Cool.

[18:11:01.0000] <TabAtkins>
Hixie: Did you mean for the CanvasProxy, once neutered, to throw when you read width/height?

[18:12:16.0000] <Hixie>
pretty much everything on the proxy will need to throw once neutered, yeah

[18:15:15.0000] <TabAtkins>
That's annoying, since it neuters as soon as you generate a context from it.  That means you can no longer use the CanvasProxy to get at the width/height of your drawing surface.

[18:15:36.0000] <TabAtkins>
I don't see why the CanvasProxy should throw on reads of width/height.

[18:16:38.0000] <Hixie>
oh i'm planning on changing that

[18:16:42.0000] <Hixie>
creating a context shouldn't neuter it

[18:17:04.0000] <Hixie>
sorry that sketch is out of date

[18:18:08.0000] <TabAtkins>
Ah, kk.

[18:23:43.0000] <Hixie>
TabAtkins: (in particular, i'm using the Proxy now as a way to get the image from the canvas in the worker)

[18:24:38.0000] <TabAtkins>
Hm, kk.  I'm interested to see what you end up with when you're finished.

[18:26:15.0000] <Hixie>
you and me both :-)

[00:16:33.0000] <annevk>
terrorists win? :p

[00:22:30.0000] <Ms2ger>
You win?

[00:32:03.0000] <MikeSmith>
after re-listening to that conversation I think now that Roy was referring to browser-engine projects collectively when he said that

[00:32:05.0000] <MikeSmith>
not to the whatwg

[00:32:15.0000] <MikeSmith>
but hey it works great either way

[00:56:24.0000] <hsivonen>
how healthy to see the producers of products that are complementary to your own products as “terrorists”

[00:56:59.0000] <hsivonen>
not even optionally complementary but necessary complements for your product to have demand

[00:57:48.0000] <hsivonen>
browser people aren’t particularly happy about how Apache has handled a couple of config issues, but at least we’ve managed to avoid terrorist comparisons

[00:59:25.0000] <Ms2ger>
... in public

[01:04:08.0000] <MikeSmith>
if it was the ruler of the nginx project and he called me a terrorist, that would hurt a lot more

[01:09:48.0000] <hsivonen>
looks like my Rust efforts broke frameset-ok.

[01:09:50.0000] <hsivonen>
oops.

[01:09:59.0000] <hsivonen>
good thing I didn’t land this stuff yet

[01:10:06.0000] <hsivonen>
refactoring is hard.

[01:17:58.0000] <annevk>
TabAtkins: is there an online tool for those railroad diagrams?

[01:18:02.0000] <annevk>
TabAtkins: URL wants to use

[01:20:18.0000] <MikeSmith>
annevk: which railroad diagrams*

[01:20:22.0000] <annevk>
MikeSmith: if you heard something the URL Standard can address please let me know

[01:20:36.0000] <annevk>
MikeSmith: http://dev.w3.org/csswg/css3-syntax/#token-diagrams

[01:20:39.0000] <MikeSmith>
didn't hear anything

[01:20:58.0000] <MikeSmith>
oh nice

[01:21:20.0000] <hsivonen>
good luck using diagrams like that in an RFC

[01:21:22.0000] <annevk>
I listened to it once and I missed a few words, but I did not get the impression there was anything actionable there

[01:21:36.0000] <annevk>
hsivonen: heh

[01:26:27.0000] <MikeSmith>
annevk: wait sorry I think I still made a mistake

[01:26:31.0000] <hsivonen>
the way they think about naming vs. versioning at the IETF is fascinating

[01:28:10.0000] <MikeSmith>
annevk: I listened to it again really carefully and now I'm pretty sure what he really said is, "Anne's a rhyme terrorist at the microphone, Hixie drops the beats like a predator drone."

[01:29:52.0000] <hsivonen>
It takes a correct observation that if you have an old API entry points and you want and you incompatible new API entry point, the solution is to give the new one a different name. But then it confuses this with non-operational naming and definitional incompatibility (as opposed to actual operational incompatibility).

[01:30:50.0000] <hsivonen>
s/and you and you/and you want to have/

[01:32:09.0000] <hsivonen>
also ignores that the operational names that take the thing annevk is speccing are already called “url()” and the like

[01:32:58.0000] <MikeSmith>
annevk: https://github.com/tabatkins/railroad-diagrams

[01:34:35.0000] <annevk>
ah cool

[01:38:43.0000] <hsivonen>
I feel like a blog post coming up, but must avoid 386.

[01:39:20.0000] <annevk>
hsivonen: I wrote http://lists.w3.org/Archives/Public/uri/2012Nov/0015.html but that's mostly technical

[01:39:35.0000] <annevk>
hsivonen: I'd be interested in a blog post on the manner though if it doesn't take up too much of your time

[01:41:21.0000] <annevk>
(posted a short TPAC note on text/css btw; might do another one later on CORS)

[01:44:35.0000] <hsivonen>
annevk: cool. I’ll update my Gecko patch.

[01:45:39.0000] <zcorpan>
GPHemsley: if you're tying to test invalid http responses with apache, you're gonna have a bad time

[01:45:47.0000] <zcorpan>
GPHemsley: don't use apache

[01:46:15.0000] <zcorpan>
GPHemsley: use a custom server where you can control the bytes

[01:48:02.0000] <Ms2ger>
GPHemsley, https://bitbucket.org/annevk/simpleserver perhaps

[01:48:58.0000] <hsivonen>
zcorpan: is your CSS BOM test suite available under a permissive license?

[01:50:05.0000] <zcorpan>
hmm, wonder if a license is applied when submitting to csswg

[01:50:59.0000] <jgraham>
I think that all of W3C uses testsuite license + BSD

[01:51:13.0000] <hsivonen>
ok.

[01:51:30.0000] <hsivonen>
zcorpan: did you submit it already? where do I find the submission?

[01:51:37.0000] <zcorpan>
https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/

[01:52:13.0000] <zcorpan>
i was told that's the proper home for css tests

[01:52:46.0000] <hsivonen>
zcorpan: thanks

[01:54:00.0000] <zcorpan>
"The tests are intended to be released under both the W3C Document License and the BSD 3-clause license, so unless you represent a W3C Member, you must give your explicit permission for us to use your contributions under these licenses." http://wiki.csswg.org/test/css2.1/contribute

[01:54:18.0000] <hsivonen>
zcorpan: what’s the expected header config for .bogus.css files?

[01:54:24.0000] <jgraham>
I thought it was 2 clause

[01:55:03.0000] <jgraham>
Oh, I was wrong

[01:55:11.0000] <zcorpan>
hsivonen: clone http://hg.csswg.org/test

[01:56:51.0000] <zcorpan>
or http://hg.csswg.org/test/file/7feb6727108c/contributors/opera/submitted/css3-syntax/charset/.htaccess

[01:57:35.0000] <zcorpan>
confusing that it shows a completely unrelated commit message

[01:58:06.0000] <hsivonen>
zcorpan: thanks

[02:14:54.0000] <MikeSmith>
hsivonen: is there any reason for not adding ITS validation support to the default preset at this point?

[02:15:05.0000] <MikeSmith>
if there is none, I'll go ahead and add it

[02:28:44.0000] <hsivonen>
MikeSmith: IIRC, Jirka had a reason to wait for a bit.

[02:30:08.0000] <hsivonen>
MikeSmith: as for making it default, I think ITS would be mostly harmless functionally as part of the default but making a non-browser-targeted extension part of the default is a bit of a slippery slope as far as setting a precedent goes

[02:31:20.0000] <MikeSmith>
I see

[02:31:34.0000] <MikeSmith>
i'll go back and re-read the thread with Jirka

[02:32:09.0000] <MikeSmith>
making it not part of the default has the downside of further complicating the list of presets

[02:32:39.0000] <hsivonen>
MikeSmith: yeah, the list of presets is not great

[02:32:59.0000] <hsivonen>
MikeSmith: identifying presets by URLs rather than some persistent symbols is not great in practice

[02:33:12.0000] <hsivonen>
but hey, the URL thing is right in principle!

[02:33:46.0000] <MikeSmith>
hah

[02:34:11.0000] <hsivonen>
I heard ITS described as an enterprise feature at TPAC.

[02:48:19.0000] <MikeSmith>
hsivonen: hmm that's the kiss of death

[02:48:45.0000] <MikeSmith>
I hope the ITS advocates don't use that term themselves if they want to have people view ITS positively

[02:50:45.0000] <hsivonen>
MikeSmith: it wasn’t ITS advocacy :-)

[02:51:00.0000] <MikeSmith>
ok

[02:51:13.0000] <MikeSmith>
"enterprise" is like "terrosist"

[02:51:27.0000] <MikeSmith>
except spelled correctly

[03:03:15.0000] <annevk>
hsivonen: only URIs are correct in principle

[04:01:23.0000] <annevk>
slightlyoff: meant to talk to you about the URL API last week, but for some reason it didn't happen

[04:01:36.0000] <annevk>
but twitter works

[04:02:07.0000] <jgraham>
API design via twitter? What could possibly go wrong?

[04:02:25.0000] <annevk>
@__proto__, right? :)

[04:08:03.0000] <smaug____>
s/API design//

[04:08:52.0000] <annevk>
but don't worry, it's going to a list ;)

[04:15:30.0000] <zcorpan>
jgraham: at least we don't have to worry about overly long names

[04:18:04.0000] <jgraham>
Heh. But I don't think that Hixie is so influential that we need to worry about annevk making a DeferredURLProxyFactoryFactory yet

[04:20:55.0000] <odinho>
/me h8 .stopPropagation .cancelDefault .stopImmediatePropagation and whatstheirnames

[04:21:13.0000] <odinho>
preventDefault it was I think, omg, always have to look that up

[04:23:48.0000] <annevk>
defaultPrevented?

[04:23:55.0000] <annevk>
oh the method

[04:25:29.0000] <smaug____>
naming is inconsistent. events can be cancelable, in which case  preventDefault()  isn't no-op

[04:25:38.0000] <smaug____>
but too late to change that all

[04:26:11.0000] <odinho>
Sugar Spec, -- just sayin'.

[04:32:43.0000] <vargadanis>
is a PHP version os the lib lagging so much behind the pythong version? 3 years?

[04:34:10.0000] <annevk>
vargadanis: the person working on PHP html5lib stopped working on it

[05:27:32.0000] <annevk>
http://www.sitepoint.com/have-you-considered-polyglot-markup/

[05:27:40.0000] <annevk>
"You want better quality. This goes along with the first item. Also, “application/xhtml+xml” can signify quality."

[05:28:28.0000] <annevk>
:/

[05:29:27.0000] <Ralt>
hello people

[05:29:55.0000] <Ralt>
should I trust WHATWG living DOM standard or W3C DOM3 standard?

[05:30:31.0000] <MikeSmith>
annevk: I think Sitepoint meant to publish that article in their Onion section

[05:31:14.0000] <annevk>
Ralt: DOM3 is obsolete

[05:31:26.0000] <annevk>
Ralt: apart from DOM3 Events I suppose, that lingers on

[05:31:27.0000] <Ralt>
can't find DOM4 :(

[05:31:51.0000] <annevk>
Ralt: it's somewhere, but also not as up to date as the DOM Standard (and it's a fork of that anyway)

[05:32:01.0000] <Ralt>
hm, got it

[05:32:09.0000] <Ralt>
there are some differences though

[05:32:25.0000] <annevk>
?

[05:32:25.0000] <Ralt>
ah no

[05:32:30.0000] <Ralt>
it's ok, my bad

[05:33:35.0000] <Ralt>
hm, there isn't supposed to be any live NodeList anymore then, right?

[05:34:08.0000] <Ralt>
since the only method returning NodeList is QSA

[05:35:38.0000] <zcorpan>
readonly attribute NodeList childNodes;

[05:37:10.0000] <annevk>
Ralt: there's some dispute over getElementsByClassName as to whether or not they should return HTMLCollection, though maybe that's settled by now

[05:38:22.0000] <Ralt>
annevk: in both specs, they return HTMLCollections (living & DOM4), so I guess it's settled?

[05:38:58.0000] <annevk>
Ralt: W3C DOM is just a copy; settled refers to potential ongoing debate

[05:39:14.0000] <annevk>
Ralt: I haven't looked into that particular issue in a while

[05:39:19.0000] <annevk>
/me is fixing mutation observers

[05:39:36.0000] <annevk>
(out of date copy*)

[05:39:40.0000] <Ralt>
so W3C DOM4 just merges DOM living standard from time to time?

[05:40:07.0000] <annevk>
afaik that's the plan

[05:40:32.0000] <Ralt>
alright, thanks :)

[05:41:04.0000] <Ralt>
zcorpan: ah! thanks

[05:42:35.0000] <hsivonen>
annevk: Polyglot will supply 386 for the next decade.

[05:42:52.0000] <annevk>
Ralt: if you're an implementor I suggest using the WHATWG copy, even Microsoft does so

[05:43:15.0000] <annevk>
Ralt: if you're a lawyer I suggest using the W3C copy

[05:43:35.0000] <Ralt>
haha ok

[05:43:45.0000] <annevk>
hsivonen: hahaha

[05:43:51.0000] <annevk>
hsivonen: also tragedy

[05:53:04.0000] <hsivonen>
unsurprisingly, implementing the new CSS charset stuff fails a test called test-charset-utf-16-le-no-bom.html

[05:53:18.0000] <hsivonen>
also be

[05:54:15.0000] <hsivonen>
uh oh. looks like those are part of an official test suite

[05:55:55.0000] <hsivonen>
when I seach for “test-charset-utf-16-le-no-bom.html” on DDG, I get a Microsoft ad saying that IE is better now.

[05:56:21.0000] <zcorpan>
is ie better at bomless utf-16 now?

[05:56:45.0000] <jgraham>
That's a super targetted ad ;)

[05:58:04.0000] <zcorpan>
microsoft went "gotta convince hsivonen that ie doesn't suck these days. what do we do?"

[05:59:15.0000] <hsivonen>
how does the CSS WG deal with Level 3 invalidating a test in the CSS 2.1 test suite?

[05:59:47.0000] <MikeSmith>
take 2.1 back to CR!

[06:00:01.0000] <jgraham>
You might hope that there was one testsuite to rule them all

[06:00:19.0000] <zcorpan>
http://w3cmemes.tumblr.com/post/31865121758/the-joker-shares-his-approach-on-css2-1-issues

[06:03:09.0000] <hsivonen>
sigh. I don’t like test cases that I have to look in a hex editor to see what they are doing.

[06:03:13.0000] <zcorpan>
hsivonen: maybe reply to http://lists.w3.org/Archives/Public/www-style/2012Oct/0870.html ? (or an earlier email in the thread)

[06:03:46.0000] <zcorpan>
hsivonen: are my tests like that?

[06:04:04.0000] <hsivonen>
zcorpan: I trust your tests do what they say on the tin.

[06:04:46.0000] <zcorpan>
hsivonen: i got little-endian and big-endian wrong at first, FYI :-)

[06:05:48.0000] <hsivonen>
now I’m unhappy about web-sniffer.net

[06:06:09.0000] <hsivonen>
the test case I’m looking at tests what it says but web-sniffer.net drops 0x00

[06:08:24.0000] <hsivonen>
aaargh. someone at Microsoft though about evil test cases for CSS 2.1 syndata but instead of concluding that the spec didn’t make sense, the WG put the tests in the test suite

[06:09:20.0000] <hsivonen>
once you have a test case like http://test.csswg.org/suites/css2.1/20110111/html4/at-charset-045.htm in hand, aren’t you supposed to conclude the spec is crazy?

[06:13:44.0000] <Lachy>
hsivonen, does the spec say that @charset takes precedence over the BOM?

[06:13:51.0000] <hsivonen>
interesting https://bugzilla.mozilla.org/show_bug.cgi?id=462458#c0

[06:14:27.0000] <hsivonen>
Lachy: yes! http://www.w3.org/TR/CSS21/syndata.html#charset

[06:14:33.0000] <hsivonen>
Lachy: Level 3 fixes this.

[06:20:16.0000] <Lachy>
wow, that's crazy.

[06:26:14.0000] <GPHemsley>
/me wonders if Google has any Hey GURL memes lying around.

[06:30:28.0000] <GPHemsley>
Interestingly, Chrome and Opera seem to also store the appropriate file extension when doing sniffing.

[06:31:08.0000] <GPHemsley>
If you load a resource with a file type that they don't support, they will offer to download it—with a file extension appended.

[06:31:22.0000] <GPHemsley>
(My tests don't use file extensions.)

[06:31:33.0000] <GPHemsley>
I wonder if that should be specced?

[06:34:20.0000] <annevk>
whereis smaug?

[06:36:22.0000] <zcorpan>
GPHemsley: that seems like a platform-specific thing and also something that doesn't get exposed to web content directly so we don't need interop

[06:37:11.0000] <GPHemsley>
zcorpan: Ah, OK.

[06:40:29.0000] <hsivonen>
zcorpan: can you explain https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/page-windows-1251-css-utf8-bom.html ?

[06:40:53.0000] <hsivonen>
the id is the REPLACEMENT CHARACTER but the selector is not bogus UTF-8

[06:44:29.0000] <zcorpan>
hsivonen: it was intended to be bogus utf-8. seems i forgot to remove the 80 byte when switching from 80 to c8 as the "interesting byte"

[06:44:34.0000] <zcorpan>
will fix

[06:45:15.0000] <hsivonen>
also, https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/page-windows-1251-charset-attribute-bogus.html seems to be off

[06:45:29.0000] <hsivonen>
it has a C8 byte but the test is written for E8 byte

[06:47:43.0000] <hsivonen>
zcorpan: https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/page-windows-1251-css-at-charset-bogus.html fails because the .css file is 404

[06:47:46.0000] <zcorpan>
fixed the first thing

[06:48:21.0000] <hsivonen>
zcorpan: https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/page-windows-1251-css-http-bogus.html also has the C8 vs. E8 thing

[06:49:18.0000] <hsivonen>
\o/ the UTF-8 one passes now

[06:50:54.0000] <zcorpan>
man, case folding :-(

[06:52:23.0000] <hsivonen>
https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/page-utf16-css-bomless-utf16be.html fails, but that’s because the decoder sniffs endianness when the BOM is missing and the test assumes that not to happen, right?

[06:55:59.0000] <GPHemsley>
Is there a convention for naming tests?

[06:56:29.0000] <zcorpan>
hsivonen: fixed c8 vs e8

[06:59:21.0000] <zcorpan>
note to self: use data:text/html;charset=windows-1251,%c8 and javascript:alert(document.body.textContent.charCodeAt(0).toString(16)) instead of looking up the character with a google search

[07:01:55.0000] <zcorpan>
hsivonen: fixed the 404

[07:01:59.0000] <zcorpan>
hsivonen: thanks

[07:02:01.0000] <hsivonen>
zcorpan: thanks

[07:02:07.0000] <hsivonen>
can you explain https://test.csswg.org/source/contributors/opera/submitted/css3-syntax/charset/page-windows-1251-css-at-charset-windows-1250-in-utf16.html ?

[07:03:06.0000] <hsivonen>
AFAICT, the windows-1251 interpretation of the style rule is the one that should match

[07:03:26.0000] <hsivonen>
but the test does not want it to match

[07:04:06.0000] <annevk>
no smaug today?

[07:04:51.0000] <hsivonen>
https://twitter.com/ronsman/status/266538463262801921

[07:05:08.0000] <zcorpan>
hsivonen: you're right

[07:05:41.0000] <annevk>
http://html5.org/temp/mo-queue.html was hard to write :(

[07:08:02.0000] <zcorpan>
hsivonen: fixed. (also utf16be)

[07:08:09.0000] <MikeSmith>
hsivonen: the guy wants you tell him in 500 to 1000 words how to acquire clue?

[07:10:54.0000] <zcorpan>
hsivonen: ask in #css-test on irc.w3.org if you want push access

[07:11:26.0000] <zcorpan>
hsivonen: i have to leave now

[07:15:06.0000] <annevk>
so the queue thing

[07:15:10.0000] <annevk>
each time you modify a DOM node

[07:15:12.0000] <annevk>
that runs

[07:15:24.0000] <annevk>
well, if you have some listeners set up

[07:15:30.0000] <annevk>
shit's expensive

[07:16:47.0000] <miketaylr>
http://dvcs.w3.org/hg/webevents/raw-file/default/gamepad.html :|

[07:17:09.0000] <miketaylr>
"error: gamepad.html@cde6c06f4579: not found in manifest"

[07:18:01.0000] <hsivonen>
/me reviews test cases by implementing the spec and then running the tests

[07:24:41.0000] <annevk>
IDNA disallows http://💩.la too

[07:24:49.0000] <annevk>
IDNA2008

[07:25:44.0000] <hsivonen>
huh. no Ms2ger

[07:41:55.0000] <GPHemsley>
annevk: Whoever's in charge of that site is bad for the Web.

[07:42:35.0000] <annevk>
yeah, better invalidate his domain name

[07:42:38.0000] <annevk>
o_O

[07:42:50.0000] <GPHemsley>
Independent of his domain name.

[07:42:56.0000] <GPHemsley>
He uses webkit-only CSS

[07:42:59.0000] <annevk>
they don't really seem to see it as a problem either, invalidating domain names

[07:43:07.0000] <annevk>
so sad

[07:43:13.0000] <gavinp>
GPHemsley: may I have wiki user rights?

[07:43:29.0000] <gavinp>
Yesterday annevk had to create an entry for me, which is fine, but it would be nice to do that myself.

[07:43:34.0000] <GPHemsley>
gavinp: What kind? I already added you to the autoconfirmed list.

[07:43:38.0000] <gavinp>
ok, great.

[07:43:51.0000] <GPHemsley>
gavinp: You should be able to create pages and all that good stuff. :)

[07:44:06.0000] <gavinp>
Right now I cannot create pages

[07:44:09.0000] <gavinp>
should i log out and back in or something?

[07:44:13.0000] <GPHemsley>
hmm

[07:44:16.0000] <GPHemsley>
couldn't hurt

[07:44:41.0000] <gavinp>
and that did it.

[07:44:42.0000] <gavinp>
thanks.

[07:44:46.0000] <GPHemsley>
Ah, good.

[07:44:48.0000] <gavinp>
next step was to reboot my windows machine.

[07:44:51.0000] <GPHemsley>
heh

[07:44:56.0000] <gavinp>
'k. You're awesome. Thank you.

[07:44:59.0000] <GPHemsley>
:)

[07:45:21.0000] <gavinp>
I am going to assume the ~18hrs of silence that my prerender events proposal has received is widespread unanimous consent from all implementers and developers.

[07:45:23.0000] <gavinp>
and proceed on that basis.

[07:45:26.0000] <GPHemsley>
gavinp: Thank you, too. Your request for rights uncovered a bug with permissions to give those rights. :)

[07:46:39.0000] <annevk>
gavinp: http://en.wikipedia.org/wiki/Warnock's_dilemma (though I suspect most of the other browsers are just not doing prerendering at all yet)

[07:47:22.0000] <gavinp>
afaik we are the only one, and partly for architectural reasons.

[07:48:04.0000] <gavinp>
And I think the first rev of the API wasn't as useful for sites as it could be. So hopefully this kind of incremental change is working.

[07:48:21.0000] <gavinp>
I was very happy to just use element removal as an API signal to kill prerenders; that feels very natural and doesn't increase the scripting language surface area at all.

[07:55:39.0000] <SimonSapin>
Is it necessary or useful to escape > in HTML text?

[08:58:07.0000] <dglazkov>
good morning, Whatwg!

[09:00:02.0000] <Ms2ger>
Good night

[09:05:34.0000] <TabAtkins>
annevk: I should definitely make an online tool for them, but as MikeSmith already pointed to the repo, you can probably do it yourself.  ^_^

[09:11:04.0000] <TabAtkins>
hsivonen: If level 3 changes 2.1 behavior in a way that would invalidate a 2.1 test, that's fine.  You can just claim conformance with the higher spec.  If it bothers you, you can submit a revised version of the 2.1 test; if that's not possible, you can ask for it to be undefined in 2.1 with a pointer to level 3.  But I wouldnt' care about it.

[09:11:51.0000] <TabAtkins>
hsivonen: As long as there's no BOM, if you're using sublime text you can just go File->Reopen with Encoding and choose Hexadecimal.

[09:12:00.0000] <TabAtkins>
hsivonen: For a hex editor, that is.

[09:13:58.0000] <TabAtkins>
SimonSapin: No need to escape > in raw text or in a quoted attribute.  Escape it otherwise.

[09:14:41.0000] <TabAtkins>
(Of course, you shouldn't have > in an element or attribute name in the first place, and if your attribute value is outside alphanumeric range, you should be quoting it.)

[09:15:26.0000] <TabAtkins>
So in practice, no, never escape >.  The only things you need to escape are < (always), & (most of the time, might as well do it for safety), and your quoting character inside an attribute value.

[09:16:14.0000] <jgraham>
M-x hexl-mode

[09:16:20.0000] <jgraham>
But it's still annoying

[09:16:39.0000] <SimonSapin>
TabAtkins: great, thanks

[09:23:01.0000] <bLh>
Ello fellas, i`ve few questions about wc3 web sql database. I`ve created mobile app with PhoneGap, which uses Web sql database, since it`s not in active maintance anymore, i`m worried what will happen with newer versions of browsers(webkit)

[09:23:18.0000] <bLh>
did i made a big mistake ;|

[09:26:23.0000] <smaug____>
bLh: don't use Websql

[09:26:27.0000] <Ms2ger>
Yeah, you don't want to use websql

[09:26:29.0000] <smaug____>
use IndexedDB

[09:28:02.0000] <bLh>
Phonegap only supports websql ;[

[09:29:12.0000] <bLh>
the only alternative i had was key/value storage, which didnt really satisfied me at the point i was developing it

[09:30:13.0000] <TabAtkins>
I kinda doubt that webkit will be able to remove websql (for reasons like yours), but nobody else is going to add it, so your "mobile app" won't work on other mobile browsers.

[09:32:26.0000] <bLh>
yeah, i guess was a big mistake i`ve done, didnt research it enough at that point

[09:32:36.0000] <bLh>
i guess i made myself some extra work ;[

[09:36:22.0000] <GPHemsley>
/me wonders why he's the only one who ever has to merge branches with xref

[09:37:34.0000] <GPHemsley>
blame would be cooler if the lines were color-coded by age

[09:48:14.0000] <GPHemsley>
annevk: When you move the web-apps-tracker to github, did you set the site up to automatically pick up changes?

[09:48:17.0000] <GPHemsley>
+d

[09:50:07.0000] <Ms2ger>
GPHemsley, doesn't look like it, afaict

[09:50:39.0000] <GPHemsley>
Ms2ger: So committing to that repo will do nothing? :P

[09:51:49.0000] <Ms2ger>
GPHemsley, maybe the password is in the private repo ;)

[09:53:22.0000] <GPHemsley>
Ms2ger: If it is, then I don't know what I'm looking for.

[09:54:02.0000] <GPHemsley>
ow, my eyes! http://html5.org/tools/

[09:55:58.0000] <Ms2ger>
Hah

[09:56:06.0000] <Ms2ger>
Looks like an anneism

[09:56:23.0000] <TabAtkins>
Argh dammit

[09:56:28.0000] <TabAtkins>
jeezus

[09:56:39.0000] <TabAtkins>
whoever decided that 'lime' should be a named color should be shot.

[09:57:14.0000] <Ms2ger>
lime is nice for tests

[09:57:32.0000] <TabAtkins>
True.  You should need to set a debug flag in order to use lime. ^_^

[10:06:36.0000] <MikeSmith>
GPHemsley: hahaha

[10:07:01.0000] <MikeSmith>
maybe the purpose is to get you to never visit that URL again but instead bookmark the stuff it links to

[10:11:48.0000] <paul_irish>
<h1 style="text-transform:uppercase">Title Case</h1>  <== If I select and copy/paste that, what case should it be in?

[10:12:22.0000] <GPHemsley>
/me guess Title Case

[10:12:25.0000] <GPHemsley>
+es

[10:12:51.0000] <TabAtkins>
Pretty sure it's DOM-based.

[10:13:36.0000] <paul_irish>
Right now WebKit's behavior is uppercase though Title Case seems much more reasonable to me

[10:13:46.0000] <paul_irish>
https://bugs.webkit.org/show_bug.cgi?id=43202#c5

[10:14:18.0000] <paul_irish>
Let me confirm, but iirc Mozilla/IE do Title Case

[10:18:18.0000] <paul_irish>
Confirmed. Opera/IE/FF behavior is to copy the DOM text.   WebKit behavior is to copy the transformed text.

[10:18:40.0000] <paul_irish>
What's the best way to resolve this? Does this belong in a spec?

[10:19:06.0000] <smaug____>
yes, but which spec :)

[10:19:18.0000] <smaug____>
someone started a spec for selection handling

[10:19:25.0000] <smaug____>
Ms2ger: maybe you

[10:19:35.0000] <Ms2ger>
Eh?

[10:19:37.0000] <Ms2ger>
Maybe AryehGregor

[10:19:50.0000] <smaug____>
ah, yeah, perhaps Aryeh

[10:20:01.0000] <Ms2ger>
Or, hmm, copy/paste may be hallvors

[10:20:27.0000] <divya>
yeah thats hallvors1

[10:25:04.0000] <paul_irish>
pinging hallvord. thanks

[10:25:05.0000] <karlcow>
/me votes for Title Case too. 

[10:26:14.0000] <karlcow>
or at least having the option in the browser as a "Copy" (default),  "Copy with style", "Copy Markup"

[10:28:40.0000] <karlcow>
Though I have seen users who loves to have the style and the links copied from a Web page into an html email. So It might depends on the users

[10:29:40.0000] <Ms2ger>
karlcow, style or markup? :)

[10:32:35.0000] <karlcow>
Ms2ger: I have the impression it is a combination of both.

[10:32:40.0000] <karlcow>
/me is trying something

[10:39:52.0000] <karlcow>
Ms2ger: http://www.la-grange.net/2012/11/08/copy-paste

[10:40:06.0000] <karlcow>
copy on the Web page in Safari

[10:40:50.0000] <karlcow>
Paste in Adium top left

[10:40:51.0000] <karlcow>
Paste in Text Mail top right

[10:40:51.0000] <karlcow>
Paste in Rich Text Mail in bottom right

[10:41:24.0000] <karlcow>
it depends on the paste context, but at least the rich text information is in the clipboard.

[10:49:00.0000] <mhausenblas>
/me waves to paul_irish 

[10:49:30.0000] <mhausenblas>
thanks again a million for connecting me with Monsur - we're making good progress, see https://github.com/mhausenblas/enable-cors.org/issues?state=open

[10:50:18.0000] <paul_irish>
:D awesome

[10:50:32.0000] <mhausenblas>
yeah. you are, indeed! ;)

[11:32:31.0000] <MikeSmith>
eleven sparql specifications published today

[11:32:52.0000] <TabAtkins>
woooo

[11:33:18.0000] <MikeSmith>
making it up for it in volume

[11:47:29.0000] <GPHemsley>
/me hates it when he forgets to resolve a bug when he makes a comment about resolving it.

[11:47:43.0000] <GPHemsley>
IOW: Yay bugspam!

[12:36:33.0000] <Hixie>
what's the snapshot state for, in the File API?

[12:42:14.0000] <Hixie>
i gotta say, the File API spec has reached a point where it's pretty well written

[12:42:28.0000] <Hixie>
nice work

[12:42:41.0000] <Hixie>
(sicking: ^)

[12:43:08.0000] <sicking>
Hixie: all credit should go to Arun

[12:43:26.0000] <sicking>
Hixie: now the only problem is that I think FileReader uses the wrong model :)

[12:44:03.0000] <sicking>
Hixie: we should have had blob.readAsX methods instead, which return promise-like objects

[12:46:38.0000] <Hixie>
sicking: oh i wasn't talking about the design, just the actual spec writing :-)

[12:46:51.0000] <sicking>
Hixie: yeah, i know

[12:46:55.0000] <Hixie>
sicking: as the editor of the html spec, i understand only too well the difficulty of designing these things :-P

[12:47:28.0000] <Hixie>
(i don't really know of anything in the html spec that i wouldn't change in some way or other if we could start over)

[13:52:26.0000] <gsnedders>
HTML6?

[13:52:31.0000] <gsnedders>
Oh, wait, that was already done!

[14:02:02.0000] <TabAtkins>
Fun times: Fixing a parsing quirk to be strict, like FF and IE are, and finding that it causes a test to fail.  The test has a note saying that it's making sure we're loose, because FF and IE are.

[14:02:07.0000] <TabAtkins>
Races to the bottom are great.

[14:02:16.0000] <TabAtkins>
(Even better when we can arrest them and go back up.)

[14:04:20.0000] <smaug____>
TabAtkins: how old is the test?

[14:04:39.0000] <TabAtkins>
smaug____: Haven't checked, but clearly old.

[14:05:03.0000] <smaug____>
since hsivonen's parser is quite different from the old Gecko parser

[14:05:14.0000] <TabAtkins>
This is a CSS parser thing.

[14:05:17.0000] <smaug____>
ah

[14:05:18.0000] <TabAtkins>
How to parse @charset.

[15:17:28.0000] <TabAtkins>
Anyone have an opinion on whether a <style scoped> scoped to the root element should be more specific than an unscoped stylesheet?

[15:20:34.0000] <TabAtkins>
(Rules scoped to a descendant element are more specific than one scoped to an ancestor.)

[15:21:58.0000] <divya>
what does more specific mean

[15:22:17.0000] <divya>
override general html {} rule?

[15:38:45.0000] <TabAtkins>
divya: I mean like specificity.  This sets at a higher level than selector-specificity - if you're scoped at a lower element, you *automatically* win against rules scoped at a higher element.

[15:38:55.0000] <TabAtkins>
Just like !important rules auto-win against normal rules, regardless of the selector.

[15:40:43.0000] <divya>
TabAtkins: srry i am rusty on the jargon how would it look like in an e.g


2012-11-09
[17:16:07.0000] <GPHemsley>
/me wonders why the IETF refers to us as WHAT-WG

[17:18:03.0000] <GPHemsley>
[22:38:11] <cyrusdaboo> MIME-Sniffing: no objections from the room to drop the draft in favor of WHAT-WG doing the work.

[17:18:10.0000] <GPHemsley>
[22:40:02] <cyrusdaboo> MIME-Sniffing: W3C had a reference to it, but now points to WHAT-WG so no issue with WG dropping it.

[17:18:26.0000] <GPHemsley>
(yay?)

[17:19:25.0000] <GPHemsley>
In other news, I hate M3U files.

[17:19:43.0000] <jwalden>
/me guesses they're wondering, what working group?

[17:19:46.0000] <jwalden>
;-)

[17:20:20.0000] <annevk>
WhatWG is also sometimes used

[17:20:32.0000] <annevk>
as the old old proverb goes, spelling is hard, lets go shopping

[17:22:01.0000] <annevk>
GPHemsley: not sure if yay or nay that IETF decides this is not important

[17:23:25.0000] <GPHemsley>
annevk: Well, I don't know if they think it isn't important... I asked them to drop it: http://trac.tools.ietf.org/agenda/85/slides/slides-85-websec-3.pdf

[17:24:14.0000] <GPHemsley>
(page 4, FTW)

[17:25:33.0000] <annevk>
"from WHAT-WG" nice

[17:26:43.0000] <GPHemsley>
Indeed.

[17:27:50.0000] <GPHemsley>
Sadly, the audio for the meeting doesn't work.

[17:28:43.0000] <annevk>
did you try to open it in VLC?

[17:29:04.0000] <GPHemsley>
yup

[17:29:09.0000] <GPHemsley>
apparently the stream 404s

[17:29:21.0000] <GPHemsley>
It may have only been a livestream, rather than a recording

[17:30:46.0000] <annevk>
oh yeah it is

[17:31:01.0000] <annevk>
you can find recordings here: http://www.ietf.org/audio/ietf85/

[17:36:30.0000] <GPHemsley>
oh my

[17:36:30.0000] <GPHemsley>
ok

[17:39:54.0000] <GPHemsley>
I think this is supposed to be it, but it's very quiet: http://www.ietf.org/audio/ietf85/ietf85-grandballroomc-20121108-1730-pm3.mp3

[17:40:05.0000] <GPHemsley>
And it doesn't sound like anybody is discussing any agenda items

[17:40:11.0000] <GPHemsley>
it's also very short

[17:40:56.0000] <GPHemsley>
/me shrugs

[17:41:17.0000] <GPHemsley>
I guess they got on alright without me

[19:31:55.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-iri/2012Nov/0016.html

[21:41:57.0000] <MikeSmith>
cool to see ap unilaterally declaring "consensus" based on feedback from just three people https://dvcs.w3.org/hg/FXTF/raw-file/tip/web-anim/index.html

[21:42:51.0000] <MikeSmith>
https://bugs.webkit.org/show_bug.cgi?id=101660#c1

[23:28:19.0000] <hsivonen>
/me learns about HTTP response code 420 Enhance Your Calm

[00:24:42.0000] <hsivonen>
patch review in the morning: r+ to flipping the default endianness for "UTF-16" in FileReader from Workers.

[00:41:55.0000] <hsivonen>
annevk: see https://bugzilla.mozilla.org/show_bug.cgi?id=809934#c1

[00:45:10.0000] <zcorpan>
annevk: "Remove any leading and trailing ASCII whitespace from input." why does this only happen if /url/ is not given?

[01:01:08.0000] <hsivonen>
https://twitter.com/ronsman/status/266692044460802048

[01:02:24.0000] <annevk>
zcorpan: state override is given if url is given

[01:02:39.0000] <annevk>
zcorpan: e.g. when you set query or pathname you don't want to strip spaces, afaict

[01:03:27.0000] <zcorpan>
annevk: ok

[01:05:38.0000] <annevk>
I guess I should change http://url.spec.whatwg.org/#dom-url-href to not pass *url* and instead set *url* to the return value

[01:07:51.0000] <annevk>
and it should return url when neutering

[01:10:29.0000] <MikeSmith>
wait you're really using the term neuter in the spec?

[01:11:20.0000] <MikeSmith>
hmm so I see there's so precedent for that

[01:11:27.0000] <annevk>
"Who will defend UTF-8 from ASCII suppremacists?" :-)

[01:11:59.0000] <annevk>
MikeSmith: I would not have come up with that term on my own

[01:12:07.0000] <MikeSmith>
heh

[01:12:21.0000] <hsivonen>
who did?

[01:12:52.0000] <MikeSmith>
postMsg

[01:12:53.0000] <MikeSmith>
I think

[01:13:02.0000] <hsivonen>
In other news, someone found a tokenizer bug in the V.nu/Firefox HTML parser

[01:13:19.0000] <MikeSmith>
oh

[01:13:22.0000] <MikeSmith>
bug number?

[01:13:36.0000] <hsivonen>
MikeSmith: https://bugzilla.mozilla.org/show_bug.cgi?id=809956

[01:14:21.0000] <MikeSmith>
"lighting source"?

[01:14:28.0000] <MikeSmith>
ah

[01:14:36.0000] <MikeSmith>
he means syntax highlighting?

[01:14:52.0000] <hsivonen>
the summary had me go "WTF?", too, for a while

[01:15:46.0000] <annevk>
more pruf that spelling is hard

[01:15:48.0000] <MikeSmith>
I still wondering what "Pruf" means

[01:15:51.0000] <MikeSmith>
heh

[01:15:53.0000] <annevk>
and we should just go shopping

[01:16:00.0000] <MikeSmith>
ah proof

[01:16:02.0000] <MikeSmith>
ok

[01:23:02.0000] <hsivonen>
the tokenizer bug is rather shocking

[01:23:46.0000] <zcorpan>
hsivonen: were there more bugs in the css tests?

[01:24:08.0000] <hsivonen>
zcorpan: no, AFAICT. thanks for fixing them

[01:24:33.0000] <zcorpan>
do you pass all tests except the utf-16 endianness one?

[01:24:53.0000] <hsivonen>
zcorpan: yes (unless I forgot to reload some test)

[01:25:03.0000] <zcorpan>
nice

[01:25:50.0000] <hsivonen>
I’m waiting for advice from Ms2ger and fantasai on how to import the tests

[01:26:09.0000] <hsivonen>
it seems unprecedented to import testharness.js tests from the CSS test suite

[01:27:11.0000] <zcorpan>
i wonder if the tests should be "approved"

[01:30:18.0000] <hsivonen>
this kind of tokenizer bug arises when Hixie is lazy and writes the spec like this: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#cdata-section-state

[01:34:53.0000] <annevk>
confirmed

[01:34:58.0000] <annevk>
Opera violated IDNA2008 first

[01:36:51.0000] <annevk>
zcorpan: Kajtan did not mention supporting more domain label separators but Opera does

[01:37:25.0000] <annevk>
zcorpan: http://mathias.html5.org/tests/url/idna2003-separators/

[01:37:38.0000] <zcorpan>
annevk: feel free to reply to the email. he's cc-ed

[01:39:40.0000] <annevk>
hsivonen: btw, re that utf-16 bug, I'm not sure how we're gonna find out except by testing

[01:40:26.0000] <annevk>
hsivonen: I guess the another thing that could work is not flip the default on Unicode, but mandate sniffing

[01:46:07.0000] <annevk>
hmm no feedback yet on http://html5.org/temp/mo-queue.html

[01:50:01.0000] <zcorpan>
hsivonen: would it be better to have separate states for "]" "]" and ">"?

[01:50:50.0000] <zcorpan>
(well i guess the ">" doesn't need a state of its own since you'd switch to the data state at that point)

[01:51:12.0000] <annevk>
hsivonen: why is that lazy? it's perfectly clear, no?

[01:52:15.0000] <hsivonen>
annevk: well, IE compat involves willfully violating Unicode/IANA for the UTF-16 default endianness

[01:52:41.0000] <hsivonen>
annevk: the question is, should we have three independent labels that have defaults but all sniff the BOM

[01:52:54.0000] <annevk>
hsivonen: yeah, I said the other thing we could do is not flip the default on Unicode

[01:53:00.0000] <annevk>
hsivonen: aaahh, that would be another option

[01:53:17.0000] <hsivonen>
annevk: but chances are that UTF-16 is so rare anyway that we can just go ahead with implementing the Encoding Standard

[01:53:49.0000] <hsivonen>
who checks document.characterSet anyway?

[01:54:20.0000] <annevk>
dunno; all three solutions above seem equally fine to me, though I guess the one in the Encoding Standard is the cleanest

[01:54:54.0000] <annevk>
(well, except maybe if we are going to mandate utf-16 sniffing anyway, then we could probably align with Unicode)

[01:55:07.0000] <hsivonen>
yay. Google Analytics

[01:55:49.0000] <hsivonen>
dunno if we’ll break them, but they can take care of themselves and aren’t critical for the functionality experienced by the site user

[01:56:13.0000] <annevk>
they check document.characterSet? whoa

[01:56:27.0000] <annevk>
I wonder what the use case for that is

[01:57:11.0000] <hsivonen>
https://code.google.com/codesearch#search/&q=.characterSet%20lang:^javascript$%20-file:urchin.js%20-file:ga.js&type=cs

[01:59:12.0000] <annevk>
some weird code there

[01:59:36.0000] <annevk>
setting script.charset to document.charset, seems kinda redundant

[02:00:02.0000] <annevk>
but then it also sets script.type to text/javascript

[02:00:07.0000] <annevk>
people don't really know what they're doing

[02:02:01.0000] <hsivonen>
If I add UTF-16 to the search, I find Gecko sources

[02:02:44.0000] <hsivonen>
so probably the Web doesn’t care

[02:02:48.0000] <hsivonen>
carry on

[02:07:16.0000] <hsivonen>
/me sees https://twitter.com/JibberJim/status/266828515830272000

[02:10:07.0000] <annevk>
yeah, beautiful

[02:18:50.0000] <zcorpan>
annevk: "Path could be reused here to keep parsed URL simple." seems confusing and unnecessary

[02:41:44.0000] <annevk>
mkay

[02:54:06.0000] <annevk>
thanks for reviewing btw

[02:56:42.0000] <Stevef_>
FYI - I have taken up the position of co-faciltator of the html accessibility taskforce http://lists.w3.org/Archives/Public/public-html-a11y/2012Nov/0002.html and would like to encourage everybody and anybody to participate or at least be open to providing technical feedback, feel free to ping me at anytime if you don't/won't/can't particiapate directly, I will endeavour to work constructively wit

[02:56:43.0000] <Stevef_>
h anyone within the constraints of the role (noting that I don't necessarily agree with all/some/any of the work being carried out at any particlaur time). And will be continuing my other web standards work as per usual

[02:58:08.0000] <annevk>
good luck to you and prolly good news for MikeSmith too

[02:58:43.0000] <Stevef_>
annevk: thanks i will need it...

[03:04:52.0000] <zcorpan>
annevk: can http://resources.whatwg.org/ be made to show a directory index?

[03:04:53.0000] <annevk>
zcorpan: for the :active and :hover quirk, the way it is defined might lead to divergent results once there's a new selector type in town

[03:05:18.0000] <zcorpan>
annevk: it's a living standard, i can update it when that happens :-P

[03:06:03.0000] <annevk>
zcorpan: it just seems like implementations would have implemented this as a standalone :hover / :active

[03:06:19.0000] <annevk>
zcorpan: so now it's a bunch of work to check whether that's the case in the spec too

[03:07:07.0000] <zcorpan>
annevk: how do you suggest it should be specced?

[03:07:29.0000] <annevk>
/me ducks

[03:07:57.0000] <annevk>
zcorpan: if you commit a .htaccess to whatwg/resources.whatwg.org it should work

[03:15:42.0000] <annevk>
we should prolly think a bit about what we want to do there

[03:15:53.0000] <annevk>
maybe put the style sheet there too? logos

[04:01:12.0000] <annevk>
zcorpan: hmm, I'll kill some of those DreamHost generated files

[04:01:35.0000] <zcorpan>
annevk: thanks

[04:02:22.0000] <annevk>
fixed

[04:03:34.0000] <zcorpan>
excellent

[04:18:51.0000] <annevk>
teehee, mutation observer queue approved

[04:18:51.0000] <annevk>
now I need to commit it and then Opera and Microsoft better ship it fast

[04:26:10.0000] <zcorpan>
MikeSmith: http://dvcs.w3.org/hg/quirks-mode/raw-file/tip/Overview.html doesn't redirect though .htaccess has a directive to redirect it. (i'd like to redirect file-bug.js as well)

[04:33:01.0000] <hsivonen>
hmm. Sam is trolling me to reply https://twitter.com/samruby/status/266875865609146370

[04:34:36.0000] <zcorpan>
annevk: i don't see my changes reflected on http://resources.whatwg.org/

[04:36:03.0000] <annevk>
something is wrong with the script

[04:36:13.0000] <annevk>
755 is the correct chmod right?

[04:38:31.0000] <zcorpan>
"755 means read and execute access for everyone and also write access for the owner of the file." says my first google result

[04:39:24.0000] <jgraham>
So Sam's position is that the tools won't save us, except for hsi tool that will?

[04:39:27.0000] <annevk>
zcorpan: ooh

[04:39:39.0000] <annevk>
zcorpan: when you added the .htaccess Options, ExecCGI got turned off I think

[04:40:09.0000] <hsivonen>
maintaining a polyglot site without tools is quite a party trick

[04:40:34.0000] <annevk>
zcorpan: so I will commit a change to set that to on

[04:40:42.0000] <annevk>
then run the script manually, then it should work

[04:41:11.0000] <zcorpan>
what i find interesting with Sam's post is his use of "SHOULD NOT" which links to http://www.ietf.org/rfc/rfc2119.txt

[04:43:12.0000] <annevk>
long live error logs

[04:43:16.0000] <annevk>
zcorpan: should all work now

[04:43:23.0000] <zcorpan>
thanks

[04:43:38.0000] <annevk>
maybe I should become sysadmin

[04:44:12.0000] <zcorpan>
now we need to update all specs that point to the old file-bug.js. :-/

[04:45:00.0000] <annevk>
mine are slowly getting updated

[04:45:22.0000] <annevk>
I guess we should not move other files there unless there's an actual need

[04:46:03.0000] <annevk>
although I might put logos there so I need to change cgi scripts around to copy entire directories rather than just Overview.html

[04:46:09.0000] <annevk>
so I don't need*

[04:47:07.0000] <annevk>
" There is no way to represent a constant sequence value in IDL." :/ wanted to set it to empty by default

[04:47:08.0000] <hsivonen>
Should I file a spec bug about the Polyglot doc inspiring the SitePoint article? http://intertwingly.net/blog/2012/11/09/In-defence-of-Polyglot#c1352464695

[04:49:40.0000] <jgraham>
I think he has failed to demonstrate an actual problem that needs solving. He says that he wants to produce polyglot markup because he wants to avoid contructs that non-conformant HTML parsers can't deal with. But it is still entirely unclear why a specification is needed; he is totally free to invent whatever restrictions he likes on the output of his tool beyond that logically required by the existing specs. Since it is an assumption that the cons

[04:49:46.0000] <jgraham>
... is no possibility of consumers and producers converging on common behaviour. It sounds like what he wants is a document describing how to avoid bugs in existing consumers. Which doesn't sound much like a Rec. track spec.

[04:51:59.0000] <smaug____>
what is polyglot

[04:52:09.0000] <smaug____>
/me must have missed something amusing

[04:52:28.0000] <hsivonen>
smaug____: good for you

[04:52:43.0000] <jgraham>
It's a way for markup geeks to rathole the HTMLWG

[04:54:14.0000] <hsivonen>
smaug____: (It’s making a document both HTML and XHTML at the same time so that you can swap the content-type header and keep the same DOM)

[04:54:39.0000] <jgraham>
(modulo some constructs that just don't work)

[04:55:28.0000] <smaug____>
sounds like something silly

[04:55:39.0000] <smaug____>
so, amusing

[04:57:30.0000] <hsivonen>
“It is helpful and pragmatic advice” http://intertwingly.net/blog/2012/11/09/In-defence-of-Polyglot#c1352465225

[05:10:31.0000] <zcorpan>
smaug____: the old name for it is "appendix c"

[05:14:34.0000] <zcorpan>
"Similarly, it would be great if browser vendors didn’t have to agree on error recovery as this makes the creation of streaming parsers more difficult." um, it's not the agreeing on error recovery that makes streaming difficult

[05:14:46.0000] <zcorpan>
it's streaming-incompatible error recovery being required for web compat that makes streaming "difficult"

[05:19:13.0000] <jgraham>
In fairness there is a reading of that that isn't insane; "it would be nice if browsers didn't need to do error recoveray at all"

[05:19:17.0000] <jgraham>
*recovery

[05:20:11.0000] <jgraham>
Although since two sentences up he said that he wouldn't recommend a format with no error recovery, it's hard to work out what the consistent position is

[05:21:19.0000] <jgraham>
(for large values of two)

[05:30:39.0000] <zcorpan>
annevk: is there a twitter account for quirks changes?

[05:32:29.0000] <annevk>
zcorpan: I haven't created one

[05:33:55.0000] <annevk>
jgraham: zcorpan: I recommend leaving a comment, Sam is fairly responsive usually

[05:47:56.0000] <zcorpan>
annevk: is http://enable-cors.org/#how right about the space-separated value?

[05:57:28.0000] <hsivonen>
zcorpan: I thought you could only have * or one host

[05:57:43.0000] <zcorpan>
right

[06:03:24.0000] <zcorpan>
"In practice the origin-list-or-null production is more constrained. Rather than allowing a space-separated list of origins, it is either a single origin or the string "null"." http://fetch.spec.whatwg.org/#http-access-control-allow-origin

[06:05:55.0000] <zcorpan>
annevk: why is the authoring conformance criteria wrong?

[06:08:06.0000] <hsivonen>
Sam was successful in getting me into the 386 mode. :-(

[06:11:55.0000] <annevk>
zcorpan: the author conformance criteria are under resources

[06:13:09.0000] <zcorpan>
annevk: i'm looking at http://fetch.spec.whatwg.org/#access-control-allow-origin-response-header

[06:13:54.0000] <annevk>
yeah, we need HTTP to update I guess

[06:14:00.0000] <annevk>
and then we can fix that section

[06:17:40.0000] <zcorpan>
it doesn't reference http. why does http need to update?

[06:18:36.0000] <annevk>
so that it's more clear how to define a header value

[06:18:48.0000] <annevk>
and yeah, for this I guess Origin needs to be fixed too

[06:19:06.0000] <annevk>
but I'm not sure if we need this syntax section at all

[06:19:31.0000] <zcorpan>
can't you do s#origin-list-or-null#%x6E %x75 %x6C %x6C / serialized-origin#

[06:20:37.0000] <annevk>
 / "*" ?

[06:20:41.0000] <annevk>
euh |

[06:21:38.0000] <annevk>
oh, it's / these days

[06:21:52.0000] <annevk>
oh but not in HTTP

[06:21:57.0000] <annevk>
man this shit is confusing

[06:22:39.0000] <annevk>
zcorpan: feel free to file a bug but please consider if we should say something in the Origin header section too

[06:22:55.0000] <annevk>
zcorpan: I'm gonna look at garbage collection for mutation observers first

[06:23:04.0000] <zcorpan>
ok

[06:24:13.0000] <zcorpan>
i don't recall how origin: works. does it use multiple values for redirects or something?

[06:24:45.0000] <annevk>
no, it's the same

[06:24:59.0000] <annevk>
but they rejected my errata for the Origin RFC

[06:25:26.0000] <hsivonen>
gotta love how Sam calls my wording condecending after starting a post with “I see that Henri Sivonen is once again being snarky without backing his position.”

[06:26:18.0000] <zcorpan>
annevk: i guess we either need to put in a willful violation or take over editing of the origin spec :-(

[06:26:52.0000] <annevk>
Origin allows subsetting it

[06:27:03.0000] <annevk>
and only HTML fetch and CORS are involved with setting Origin

[06:27:05.0000] <annevk>
so it's kinda okay

[06:27:09.0000] <zcorpan>
ok

[06:27:18.0000] <annevk>
but I think in the end we should just fold it into "Fetch" therefore

[06:32:17.0000] <zcorpan>
ok filed a bug

[06:32:40.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=19920

[06:34:10.0000] <hsivonen>
hmm. krijn is here but logs stopped growing.

[06:36:14.0000] <annevk>
krijn: ^^

[06:47:09.0000] <karlcow>
log overflow

[06:49:53.0000] <jgraham>
An unfortunate consequence of blocked tubes

[06:50:28.0000] <hsivonen>
Sam is very good at writing something that’s annoying in the 386 sense to bait a reply

[06:53:52.0000] <zcorpan>
hsivonen: now go back to killing utf-16 :-)

[07:02:09.0000] <karlcow>
http://www.twilio.com/engineering/2012/11/08/adventures-in-unicode-sms

[07:03:08.0000] <hsivonen>
hmm. has optgroup been in the "special" group at some point during the lifetime of the spec?

[07:59:42.0000] <annevk>
jgraham: what is confusing about empty text node?

[08:00:46.0000] <annevk>
I guess I'll just add a definition

[08:17:58.0000] <annevk>
GPHemsley: why would we want sniffing to be configurable? do we expect anyone to actually do that?

[08:18:45.0000] <GPHemsley>
annevk: Well, the spirit of the old document pointed in that direction. And Gecko currently does very little sniffing.

[08:19:04.0000] <GPHemsley>
(At least, compared to e.g. Chrome.)

[08:24:03.0000] <GPHemsley>
/me wonders what 386 is.

[08:28:24.0000] <SimonSapin>
/me too (about 386)

[08:30:23.0000] <GPHemsley>
"Perhaps this is the most literal "corner case" in the history of software."

[08:36:31.0000] <annevk>
it's a reference to a URL

[08:36:33.0000] <annevk>
http://xkcd.com/386/

[08:41:29.0000] <GPHemsley>
Oh, wow. XKCDs are just referred to as numbers now?

[08:42:17.0000] <annevk>
386 is

[08:42:34.0000] <GPHemsley>
That's cool.

[08:43:02.0000] <GPHemsley>
annevk: BTW, looks like Larry's coming around on more fronts than just URL. This is good news. :)

[08:43:06.0000] <annevk>
may or may not have started with http://annevankesteren.nl/2010/09/h264-still-not-free

[08:44:14.0000] <annevk>
GPHemsley: pointer?

[08:44:24.0000] <GPHemsley>
annevk: Private e-mail, sorry.

[08:44:47.0000] <annevk>
GPHemsley: btw, I think http://www.ietf.org/audio/ietf85/ietf85-grandballroomc-20121108-1730-pm3.mp3 has contents

[08:44:55.0000] <annevk>
GPHemsley: you just need to wait a couple of minutes

[08:45:14.0000] <GPHemsley>
When I checked it last night, it seemed to be really quiet "Sorry about my computer problems"

[08:45:15.0000] <annevk>
GPHemsley: it's background noise at least until 1:40 or so, but at some point it should start

[08:45:35.0000] <annevk>
GPHemsley: it's a big file

[08:45:54.0000] <GPHemsley>
Interesting... it seems to not be loading correctly, then.

[08:46:07.0000] <GPHemsley>
because it only lasts a few seconds when I play it in-browser

[08:46:11.0000] <GPHemsley>
/me tries downloading it.

[08:46:50.0000] <GPHemsley>
Hmm

[08:47:00.0000] <GPHemsley>
I wonder whether Firefox or the QuickTime plugin is at fault here.

[08:47:09.0000] <annevk>
GPHemsley: works in Chrome here

[08:47:15.0000] <GPHemsley>
/me shrugs

[08:47:43.0000] <annevk>
yeah not sure if useful

[08:51:02.0000] <GPHemsley>
Ah, the actual meeting starts at the 4-minute mark

[08:54:45.0000] <GPHemsley>
"Let them have it!"

[08:57:15.0000] <GPHemsley>
There is some anonymous W3C document that used to reference the IETF draft that now references the WHATWG version.

[08:57:29.0000] <annevk>
I think that's the HTML spec

[08:57:31.0000] <GPHemsley>
Trying to get clarification on what that document was. (I'm assuming HTML(5) at this point.(

[08:57:36.0000] <GPHemsley>
)

[08:57:38.0000] <GPHemsley>
)

[08:57:41.0000] <annevk>
oh, and maybe Widgets?

[08:58:09.0000] <GPHemsley>
No idea.

[08:59:19.0000] <GPHemsley>
The relevant portion of the audio is between the 5-minute to 10-minute points, if you're interested.

[08:59:35.0000] <GPHemsley>
(If you haven't already listened to it.)

[09:01:57.0000] <GPHemsley>
7:20 to 10:20, specifically

[09:04:54.0000] <GPHemsley>
The first reference to 386 in the logs appears to be 2008-04-08.

[09:05:48.0000] <GPHemsley>
The first use of '386' by itself appears to be on 2010-09-14, by hsivonen.

[09:06:24.0000] <GPHemsley>
But annevk expresses knowledge of its use at that time, implying that it had been used as such elsewhere.

[09:06:53.0000] <GPHemsley>
s/\./ previously\./

[09:07:16.0000] <GPHemsley>
ahf: 	annevk	see last two blog posts I made

[09:07:26.0000] <GPHemsley>
-f

[09:07:55.0000] <GPHemsley>
annevk: So it seems you may be right about your H264 blog post.

[09:08:18.0000] <GPHemsley>
(I didn't notice the first time that you used "386" in the post title.)

[09:09:08.0000] <GPHemsley>
zcorpan used "386" as a verb on 2011-02-03

[09:09:46.0000] <GPHemsley>
Which may its first use outside of "386 time"

[09:10:27.0000] <GPHemsley>
So, it seems that '386' can be used as a noun, verb, and adjective.

[09:10:55.0000] <GPHemsley>
"Everything you wanted to know about '386' but were afraid to ask."

[09:28:14.0000] <annevk>
man, why can't we kill childElementCount?

[09:29:27.0000] <annevk>
prolly cause https://code.google.com/codesearch#search/&q=childelementcount%20lang:js

[09:29:31.0000] <annevk>
ffffffffuuuuuuuuuuu

[10:14:45.0000] <Hixie>
hsivonen: i'm amused that what would, by most standards groups, be considered overly-verbose text, is what you consider to be my being lazy in spec writing :-P

[11:27:04.0000] <Hixie>
ah, rats

[11:27:17.0000] <Hixie>
the origin of ImageBitmap objects is going to be a mess

[11:27:38.0000] <Hixie>
if you create an ImageBitmap from a CORS-same-origin <img>

[11:27:45.0000] <Hixie>
then you post that ImageBitmap to a worker

[11:27:54.0000] <Hixie>
and then you change hte origin of the document using document.domain

[11:28:01.0000] <Hixie>
should the origin of the ImageBitmap change?

[11:28:26.0000] <Hixie>
what if you post it to a worker again afterwards, are the two resulting ImageBitmaps in the worker same-origin?

[11:28:54.0000] <Hixie>
i'm thinking the answer is that we always _copy_ the origin, don't alias it, since we can't alias across workers and we don't want the behaviour to change based on who you posted the image to

[11:29:07.0000] <Hixie>
which means it would become cross-origin afte you change document.domain

[11:48:08.0000] <annevk>
why would you consider document.domain?

[11:48:36.0000] <annevk>
CORS does not have to be affected by document.domain

[11:48:46.0000] <annevk>
it can just the actual origin, not the effective origin

[11:50:21.0000] <Hixie>
hmm

[11:50:23.0000] <Hixie>
so wait

[11:50:29.0000] <Hixie>
why do we have aliases then

[11:50:32.0000] <annevk>
gotta run actually

[11:50:41.0000] <Hixie>
oh, i remember

[11:50:44.0000] <Hixie>
nevermind

[11:57:29.0000] <Hixie>
hm

[11:57:33.0000] <Hixie>
if you take a canvas

[11:57:34.0000] <Hixie>
get a proxy

[11:57:37.0000] <Hixie>
send it to another origin

[11:57:39.0000] <Hixie>
and they draw on it

[11:57:44.0000] <Hixie>
should you be able to read it?

[11:58:01.0000] <Hixie>
i guess not

[12:01:39.0000] <Hixie>
if, in a worker, you draw green to a canvas, commit, then draw red to the canvas, don't commit, and then spin an infinite loop; and then outside the worker you try to get the bitmap data, you'll get green.

[12:01:59.0000] <Hixie>
but what if in a worker, you draw green to a canvas, commit, then draw red to the canvas, don't commit, and then try to get the bitmap data?

[12:02:08.0000] <Hixie>
getImageData() will return red, that's clear

[12:02:23.0000] <Hixie>
drawImage() presumably will too

[12:02:25.0000] <Hixie>
but what about createImageBitmap()?

[12:03:50.0000] <Hixie>
i guess getting stuff from the Proxy should return the red bitmap, but getting stuff from the canvas should return the green one...

[12:04:10.0000] <Hixie>
that makes sense, basically have the proxy itself be the decided in terms of where the pixels get to

[12:04:13.0000] <Hixie>
ok

[12:16:20.0000] <GPHemsley>
In Which Hixie Explains to Himself How Things Work

[12:20:04.0000] <Hixie>
i dump my thought process to #whatwg in the interests of transparency :-P

[12:24:18.0000] <Hixie>
sicking: any idea what origin a Blob should be treated as having?

[12:24:45.0000] <Hixie>
entry script's origin, i guess?

[12:25:38.0000] <sicking>
Hixie: I believe that in firefox we use the origin of the window from which you got the URL object

[12:26:08.0000] <sicking>
Hixie: i.e. windowB.URL.createObjectURL(blob) => windowB.location.origin is used as origin

[12:26:23.0000] <sicking>
Hixie: but you'd have to check

[12:26:31.0000] <Hixie>
that disagrees with the spec, fwiw. But I actually meant for a case like createImageData(Blob) followed by drawImage(imageData)

[12:26:55.0000] <Hixie>
(file api spec says origin of blob: URL is the origin of the script that called the method)

[12:27:08.0000] <Hixie>
(not that it matters since all these origins are forcibly the same)

[12:27:16.0000] <Hixie>
(unless you have document.domain, i guess)

[12:28:18.0000] <sicking>
Hixie: I'm not sure I understand. Does imageData have an origin? I.e. can it ever taint the canvas? That doesn't seem needed if you can't get imageData from a "foregin" canvas

[12:28:43.0000] <sicking>
Hixie: With blobs we assume that if you have access to the Blob object you have access to its data. Just like with a string

[12:28:52.0000] <sicking>
Hixie: can imageData do the same thing?

[12:29:23.0000] <Hixie>
you can get a cross-origin ImageData by constructing it from a cross-origin <img>

[12:29:33.0000] <sicking>
ugh

[12:29:39.0000] <Hixie>
and you can pass them to cross-origin workers

[12:29:51.0000] <Hixie>
so even if they only start off same-origin, they can end up in other origins

[12:30:05.0000] <sicking>
when did we get cross-origin workers?

[12:30:13.0000] <Hixie>
never not had them

[12:30:31.0000] <sicking>
explain

[12:30:44.0000] <Hixie>
you can create a port in a worker in one origin, post it to your document, have that document post it to another origin's document via an iframe, and have it post it to its own worker

[12:30:53.0000] <sicking>
ah

[12:30:54.0000] <Hixie>
now the workers can directly communicate

[12:30:57.0000] <Hixie>
but are cross-origin

[12:31:14.0000] <sicking>
i still think that having access to a imageData should be equivalent to having access to the data it holds

[12:31:26.0000] <sicking>
that matches what string, arraybuffers, blobs and js-objets do

[12:31:48.0000] <Hixie>
if you post a blob to another origin, you give them access to the data? i guess that is true, huh

[12:31:51.0000] <Hixie>
interesting

[12:32:06.0000] <Hixie>
so maybe you just can't create an ImageData from a cross-origin <img>, but once you've created an ImageData, it's just always same-origin?

[12:32:13.0000] <Hixie>
that certainly would make my life easier

[12:32:16.0000] <sicking>
yeah

[12:32:27.0000] <sicking>
that's a much simpler mental model I'd say

[12:32:34.0000] <Hixie>
that's for damn sure

[12:32:44.0000] <Hixie>
wonder what the implications are for security

[12:32:50.0000] <Hixie>
i guess it's no worse than now

[12:32:56.0000] <Hixie>
since you can always serialise to data: and pass that around

[12:33:01.0000] <sicking>
exactly

[12:33:09.0000] <Hixie>
sir, you have made my life significantly easier

[12:33:09.0000] <sicking>
or to a string

[12:33:16.0000] <Hixie>
so five points to you

[12:33:17.0000] <sicking>
you're welcome :)

[12:33:27.0000] <Hixie>
/me starts deleting text :-P

[12:40:30.0000] <Hixie>
aw man, yeah, that's way cleaner

[12:53:04.0000] <Hixie>
wow

[12:53:13.0000] <Hixie>
one omitted </dfn> tag in the spec made the validator Very Angry

[13:33:25.0000] <JonathanNeal>
What do you folks think of these html markup options for a poll? https://gist.github.com/4041906

[13:47:04.0000] <divya>
a lot of you here came to our test the web forward paris event http://blogs.adobe.com/webplatform/2012/11/09/test-the-web-forward-paris/

[14:11:39.0000] <Hixie>
JonathanNeal: i'd replace the aria-label="poll" with <fieldset> <legend> Poll </legend>  so that everyone could benefit, but otherwise they seem about equivalent

[14:12:20.0000] <JonathanNeal>
Hixie: I would love to use a field set and a legend, but legends are impossible to style with sanity.

[14:13:31.0000] <Hixie>
<section><h1>...</h1> then

[14:15:11.0000] <JonathanNeal>
form > fieldset > legend + section > h1? Or form > section > h1?

[14:15:48.0000] <Hixie>
section > form > h1 is probably how i'd do it, but doesn't matter one way or the other :-)

[14:15:58.0000] <Hixie>
not fieldset and section though

[14:16:39.0000] <JonathanNeal>
oh good.

[14:16:47.0000] <JonathanNeal>
Because a poll may have multiple parts, would form > section be all right?

[14:17:09.0000] <Hixie>
form is like <div> as far as this kind of thing goes

[14:17:15.0000] <Hixie>
doesn't matter where you put it, semantically

[14:17:41.0000] <Hixie>
hard to give more concrete advice without seeing the full thing in context though

[14:23:01.0000] <Hixie>
roc: so with a worker drawing to a canvas, the plan is to not actually update the screen until either the worker spins its event loop, or until the worker calls commit() on the CanvasProxy object

[14:23:19.0000] <roc>
sounds good

[14:23:26.0000] <Hixie>
roc: question, though: should it also commit if you try to drawImage() using the CanvasProxy, or try to use getImageData()?

[14:24:02.0000] <Hixie>
or should those grab the data from an off-screen buffer somehow?

[14:24:04.0000] <roc>
I think not

[14:24:25.0000] <roc>
I think the way this has to work is that there's a local copy of the canvas that gets updated by drawing commands in the worker

[14:24:33.0000] <roc>
and logically, commit() makes a copy of that for rendering to the screen

[14:24:43.0000] <roc>
getImageData etc simply access the local copy

[14:24:50.0000] <Hixie>
ok, that's what i was hoping you'd say

[14:25:10.0000] <Hixie>
does it make sense then to just let you create a CanvasProxy without it actually being connected to a real <canvas>? i.e. one on which there is no commit()?

[14:25:33.0000] <Hixie>
(obviously we'd have to find a new name)

[14:25:37.0000] <roc>
apart from being logical in terms of the mental model, it would be insane to have getImageData or drawImage cause screen updates with partially rendered content

[14:26:25.0000] <roc>
yes, that would be very useful

[14:26:43.0000] <roc>
although you could just have commit() be a noop

[14:26:53.0000] <Hixie>
sure, that's a detail

[14:28:52.0000] <Hixie>
maybe i should just make the 2d contexts have constructors and be bindable the way the gl people are doing

[14:42:15.0000] <JonathanNeal>
I hope this clarifies things better, Hixie. https://gist.github.com/4041906

[14:42:39.0000] <JonathanNeal>
I'm personally in favor of the third and fourth options.

[14:43:45.0000] <Hixie>
for bRevity i'd prefer the first one with <p> in front of each <label>

[14:43:54.0000] <Hixie>
but that, or any of hte first three, are exactly equivalent

[14:44:13.0000] <Hixie>
the fourth (with links) is semantically weird since a GET request shouldn't have side effects like picking an option in a poll

[14:44:41.0000] <Hixie>
if you want that kind of UI (one-activation instead of pick a radio button then click a button), which i agree is better, then i'd use <input type=submit> or <button type=submit>.

[14:45:10.0000] <Hixie>
roc: do you know anything about what the purpose of binding WebGLRenderingContext objects to two canvases is?

[14:47:09.0000] <JonathanNeal>
Hixie, good advice. Okay.

[14:48:55.0000] <JonathanNeal>
If I used a <p> there would be unaccounted groupings.

[14:49:09.0000] <JonathanNeal>
unless I put a div around all the options' <p> .

[14:51:32.0000] <Hixie>
unaccounted groupings?

[15:38:24.0000] <Hixie>
/me ponders whether to have these transferable objects go from the context to the canvas or the canvas to the context

[15:39:04.0000] <Hixie>
(as in, do you get a canvasproxy to which you can bind a context in a worker, or a contextproxy that you can bind to a canvas on the main thread)

[15:39:12.0000] <Hixie>
canvasproxy probably makes the most sense

[15:42:00.0000] <JonathanNeal>
Hixie, yea, in the first example there was no element wrapping just the four options. Those wrappers make it useful for styling.

[15:58:51.0000] <Hixie>
JonathanNeal: ah well if you want to wrap things feel free to just stick <div>s wherever you want

[15:59:57.0000] <dglazkov>
Hixie: in custom DOM elements, I need to run lifecycle callbacks for all newly created elements right after the HTML parser finishes. What's the appropriate HTML idiom for this?


2012-11-10
[16:00:31.0000] <dglazkov>
Hixie: queue a task, but what's the task source

[16:01:26.0000] <dglazkov>
dom manipulation seems close

[16:06:38.0000] <Hixie>
dglazkov: the task source is a different issue than deciding when it fires

[16:06:50.0000] <Hixie>
dglazkov: can you tell me more about these callbacks?

[16:09:34.0000] <dglazkov>
they are creation callbacks. When HTML parser runs and finds a custom element, it creates the instance, but the element's initialization code is deferred until the parser finishes -- with the use of a callback. These callbacks are part of the element definition. Once parser finishes, we invoke all the callbacks.

[16:11:04.0000] <dglazkov>
typical uses for these callbacks is wiring up events in the shadow tree, starting xhr requests, etc.

[16:11:09.0000] <Hixie>
dglazkov: you probably want an algorithm that asynchronously waits for the document to be "Ready for post-load tasks" and then for each callback "queue a task" to invoke the callback. The DOM manipulation task source is probably the right one for hte tasks, yeah.

[16:12:02.0000] <Hixie>
dglazkov: remember though, some documents never finish loading, so waiting for load is not something i'd always recommend

[16:12:42.0000] <dglazkov>
yeah. also, won't this fail for foo.innerHTML = 'markup goes here';?

[16:12:59.0000] <annevk>
Hixie: cross-origin image with CORS because readable right?

[16:15:11.0000] <Hixie>
annevk: probably, just the spec, the ImageBitmap stuff is live

[16:15:17.0000] <Hixie>
s/just/check/

[16:15:41.0000] <Hixie>
dglazkov: well if the document is already "ready for post-load tasks" you'd just queue a task, not wait first, is that what you mean?

[16:17:23.0000] <dglazkov>
oh i see. I think I've got it. let me read up on "ready for post-load tasks" and see how it fits.

[16:18:04.0000] <Hixie>
k

[21:12:04.0000] <GPHemsley>
Wow. admin@wiki is already getting spam.

[22:40:48.0000] <ruby_on_tails>
hello

[22:41:03.0000] <Hixie>
hi

[22:43:05.0000] <ruby_on_tails>
anyone alive enough to want to try out a new app i am making ?

[22:51:30.0000] <cgcardona>
ruby_on_tails: whacha got?

[22:51:50.0000] <ruby_on_tails>
cgcardona: http://thecodeplayer.com/play/add

[22:53:12.0000] <cgcardona>
so i type code and then it plays it back character by character ?

[22:53:16.0000] <cgcardona>
ruby_on_tails: ^

[22:53:18.0000] <ruby_on_tails>
cgcardona: yes

[22:53:26.0000] <cgcardona>
wow that's really cool

[22:53:43.0000] <ruby_on_tails>
along with output, you can try some walkthroughs already made on the home page

[22:54:16.0000] <cgcardona>
this is really cool. can I spread this url?

[22:55:30.0000] <ruby_on_tails>
you can spread the home page, i might close down the editor after weekend for fixing things if issues come up in testing

[22:56:01.0000] <cgcardona>
sure. this really is great. nice work

[22:56:15.0000] <cgcardona>
i'm watching http://thecodeplayer.com/walkthrough/make-a-particle-system-in-html5-canvas

[22:56:35.0000] <ruby_on_tails>
cool

[23:58:14.0000] <SimonSapin>
TabAtkins: ping

[00:45:18.0000] <matjas>
wooooo http://trac.webkit.org/changeset/133966

[00:58:48.0000] <annevk>
that code player thing is nify

[00:58:52.0000] <annevk>
nifty

[00:59:21.0000] <annevk>
matjas: aaahh "requited" :)

[01:00:15.0000] <annevk>
matjas: have you discussed that spec on es-discuss btw? I wonder what TC39 thinks

[01:03:49.0000] <annevk>
matjas: also if you want and it's unlikely this spec will be made redundant somehow by TC39, you can have whatwg/javascript on GitHub and javascript.spec.whatwg.org

[01:17:54.0000] <ruby_on_tails>
annevk: yea it is :D

[01:48:17.0000] <annevk>
SVG path syntax is simpler than I thought

[02:01:50.0000] <annevk>
and now Fullscreen API has a better logo http://fullscreen.spec.whatwg.org/

[02:09:28.0000] <SimonSapin>
annevk: is there a unicode combining character for this? ;)

[02:09:46.0000] <annevk>
heh, I doubt it

[02:26:54.0000] <annevk>
http://url.spec.whatwg.org/ has one too now

[02:27:22.0000] <SimonSapin>
nice

[02:27:28.0000] <annevk>
if anyone has ideas for the others, https://www.w3.org/Bugs/Public/show_bug.cgi?id=19795

[02:28:05.0000] <annevk>
dom / xhr / notifications / fetch (CORS) are still lacking

[02:29:16.0000] <SimonSapin>
annevk: how about ↓ for fetch?

[02:29:38.0000] <annevk>
sweet :)

[02:29:58.0000] <annevk>
now how to create a good path for that one...

[02:49:59.0000] <annevk>
SimonSapin: http://fetch.spec.whatwg.org/

[02:52:07.0000] <annevk>
oh yes

[02:52:12.0000] <annevk>
Notifications API can be a "!"

[03:00:08.0000] <annevk>
http://notifications.spec.whatwg.org/

[03:45:11.0000] <karlcow>
sniffing hmm could be 👃 or 💩 if emoji were more common

[03:46:18.0000] <Velmont>
I only see the encoding standard icon for both of those, karlcow :P

[03:47:11.0000] <karlcow>
yes it's why I said if emojis were more common.

[03:47:55.0000] <Velmont>
But most of the icons are pictures anyways(?), so it can work I guess.

[03:50:20.0000] <karlcow>
(⸪)

[03:52:06.0000] <karlcow>
⌘ ← place of interest sign (found often in Norway)

[03:52:29.0000] <karlcow>
which could be a bit like parsing.

[04:27:49.0000] <annevk>
SVG path syntax is interesting, but it's kinda annoying there's no processing model

[04:28:16.0000] <annevk>
E.g. you can omit the final "z" in implementations, but whether that's conforming does not seem to be defined in http://www.w3.org/TR/SVG/paths.html

[04:59:37.0000] <annevk>
Hixie: in "If image is an ImageData object" you don't have the explicit "return" step, although I'm not sure that step is at all necessary in all cases

[05:00:38.0000] <annevk>
Hixie: also again, I really think we should have a better solution than putting this on the global object

[05:01:58.0000] <annevk>
Hixie: I thought we decided static methods was the way forward when we added createObjectURL; seems kinda weird for you to then introduce new factory methods

[07:20:23.0000] <GPHemsley>
maybe a question mark in a file-like square?

[07:22:52.0000] <annevk>
for MIME Sniffing that might make sense

[07:23:08.0000] <annevk>
maybe for MIME in general too if we eventually tackle that whole subject

[07:23:28.0000] <annevk>
it's about resource labels after all

[07:24:05.0000] <annevk>
IDNA notes: http://wiki.whatwg.org/wiki/URL#IDNA

[07:26:37.0000] <GPHemsley>
annevk: BTW, why did you make me read that whole post about colons?

[07:26:50.0000] <annevk>
for the memes

[07:26:59.0000] <annevk>
how do I use the obsolete template on the wiki?

[07:27:41.0000] <GPHemsley>
{{obsolete|spec=<link to spec>|see=<link to related document>}}

[07:27:47.0000] <GPHemsley>
all parameters optional

[07:27:57.0000] <GPHemsley>
Perhaps I should write that down on the wiki

[07:29:06.0000] <annevk>
nah it's k

[07:29:21.0000] <GPHemsley>
annevk: Do you have a list of things that would go into "MIME in general"?

[07:30:03.0000] <annevk>
I guess mainly parsing a MIME type

[07:30:24.0000] <annevk>
not sure what else is there really, would have to take a look at those unmaintained RFCs

[07:34:10.0000] <annevk>
oh also, not sure everyone agrees with me that's a good plan

[07:36:01.0000] <GPHemsley>
annevk: BTW, if you find that the spec and see parameters aren't enough, let me know.

[07:36:44.0000] <GPHemsley>
annevk: Given how vilified MIME types seem to be, I don't know if it's necessary.

[07:36:51.0000] <annevk>
vilified?

[07:37:08.0000] <GPHemsley>
IDK, people seem to not like them.

[07:37:18.0000] <GPHemsley>
Or maybe that's just you.

[07:37:20.0000] <GPHemsley>
;)

[07:39:30.0000] <annevk>
well, they're there, and are used in a number of our formats, and we should define how those work

[07:39:53.0000] <annevk>
e.g. <Script type="TEXT/javascript;bogus=tralal;™=test">

[07:39:55.0000] <annevk>
what does that mean?

[07:40:19.0000] <annevk>
the wiki should have a category for pages such as http://wiki.whatwg.org/wiki/SVG_and_canvas

[07:40:48.0000] <gsnedders>
annevk: That's surely a quite simple case?

[07:41:32.0000] <annevk>
gsnedders: browsers were not interoperable on stuff like that, might still not be

[07:41:58.0000] <gsnedders>
I think the varience was in how unknown parameters were handled, not the parsing of them

[07:48:00.0000] <annevk>
gsnedders: well e.g. ™ does not match the production in the MIME RFCs, should it not apply?

[07:48:29.0000] <annevk>
I think they're very much related

[07:51:47.0000] <GPHemsley>
it could arguably nullify the entire value, then, no?

[07:51:58.0000] <GPHemsley>
bad parameter = no valid MIME type

[07:52:37.0000] <annevk>
sure, but I doubt that's what happens in practice

[07:52:51.0000] <annevk>
there's similar things

[07:53:01.0000] <annevk>
e.g. "Content-Type: text/html;" is invalid

[07:53:04.0000] <annevk>
but works perfectly fine

[07:53:09.0000] <annevk>
MIME RFCs don't tell you that

[07:53:39.0000] <GPHemsley>
ah

[07:53:42.0000] <annevk>
it's been a while since I looked into this, but there's a lot of little gotchas like that

[07:54:03.0000] <GPHemsley>
annevk: BTW, if something is "in the spec now", it'd be useful to link to what spec and where :)

[07:54:45.0000] <annevk>
maybe next time :)

[07:54:50.0000] <annevk>
it's all HTML I think

[07:58:08.0000] <GPHemsley>
also, for the future (not sure if people still do this): only use level-2 headers and below; level-1 headers are reserved for the page title

[07:58:20.0000] <GPHemsley>
(it seems to be common on some of the old pages)

[08:04:00.0000] <hsivonen>
researched the history of polyglot and was reminded that Sam gaa been pushing this stuff since 2006

[08:37:39.0000] <MikeSmith>
hsivonen: so it's been 6 years and you're still just not getting it

[08:37:55.0000] <MikeSmith>
obstinacy in the face of plain reason

[08:56:45.0000] <annevk>
http://whitepeoplemourningromney.tumblr.com/ :)

[09:11:52.0000] <matjas>
annevk: well I’ve been filing most of the new stuff in the JS spec as ECMAScript bugs, and the editor seems to listen to my arguments

[09:12:54.0000] <matjas>
annevk: the latest ES6 draft already include some of the changes, which is kinda cool

[09:13:01.0000] <matjas>
annevk: but i haven’t really asked on es-discuss

[09:13:13.0000] <matjas>
/me adds to TODO list

[09:13:36.0000] <matjas>
annevk: also, javascript.spec.whatwg.org + github repository sounds cool. where do i sign up?

[09:15:44.0000] <WeirdAl>
Hi, folks - are there any semi-standard API's on how to format whitespace inside a DOMDocument as we're serializing, when whitespace is insignificant?  I'm thinking I'd like to serialize the document, but preserve the general formatting so svn blame and hg blame show only the relevant changes.

[09:15:55.0000] <WeirdAl>
s/blame/diff/

[09:26:24.0000] <WeirdAl>
(I have to leave for a bit, but I'll be back in probably about an hour - I'll check IRC logs to see if there's an answer.  Worst case, I try to write my own.)

[10:04:23.0000] <annevk>
WeirdAl: http://domparsing.spec.whatwg.org/ ?

[10:06:03.0000] <annevk>
matjas: I added you to whatwg on GitHub, feel free to create a repo

[10:06:30.0000] <annevk>
matjas: we'll have to wait for Hixie to set up a domain then I can set up syncing between the repo and the domain

[10:07:27.0000] <annevk>
gotta go

[10:21:16.0000] <AryehGregor>
paul_irish, Selection.toString() is a complete mess.  There's like zero interop on any nontrivial case.  WebKit has some algorithm that depends on the internal representation of text it uses for layout after CSS has been applied, as I understand it.  I think Gecko uses a basically DOM-based view of things with hacks to account for display: none.  Other browsers are in between.  I tried writing a spec once, but it was far too much of a headach

[10:21:16.0000] <AryehGregor>
e and it didn't look like browsers wanted to converge.

[10:22:15.0000] <AryehGregor>
The basic problem is: a purely DOM-based view is thoroughly inadequate because it doesn't match user expectations at all.  So you have to figure in CSS somehow if you want to be at all sane.  But then there are massive numbers of details you could choose to account for, or not.

[10:22:18.0000] <paul_irish>
:(

[10:22:22.0000] <AryehGregor>
CSS is 2D, and you have to serialize it.

[10:22:38.0000] <paul_irish>
Yeah.

[10:22:41.0000] <AryehGregor>
You can't do anything sensible with, e.g., non-static positioning.

[10:22:43.0000] <AryehGregor>
Or flats.

[10:22:44.0000] <AryehGregor>
floats.

[10:23:20.0000] <AryehGregor>
I believe Gecko doesn't look at CSS at all except for display: none -- e.g., <p style="display:inline">foo</p>bar will still serialize as "foo\nbar" or such, not "foobar" as in some other browsers.

[10:23:38.0000] <AryehGregor>
This is the abortive spec I wrote: http://aryeh.name/spec/innertext/innertext.html

[10:23:51.0000] <AryehGregor>
(in the context of innerText, but it's the same idea)

[10:24:35.0000] <AryehGregor>
That was one of the first specs I wrote.

[10:24:43.0000] <AryehGregor>
(note date)

[10:28:42.0000] <cgcardona>
"introduced by Microsoft in Internet Explorer sometime in the mists of history"

[10:28:44.0000] <cgcardona>
nice

[10:38:00.0000] <Hixie>
what domain am i setting up?

[10:43:42.0000] <Ms2ger>
Hixie, polyglot.s.w.o

[10:43:43.0000] <Ms2ger>
/me runs

[10:43:50.0000] <Hixie>
o_O

[10:44:17.0000] <Ms2ger>
Hixie, javascript., actually

[10:44:28.0000] <Hixie>
matjas: we're taking over from ECMA now? :-P

[10:47:04.0000] <MikeSmith>
it's an "extension spec"

[10:47:14.0000] <Hixie>
what does it extend?

[10:47:29.0000] <MikeSmith>
the EcmaScript spec

[10:47:38.0000] <Hixie>
does it exist yet? i'm very confused

[10:47:43.0000] <MikeSmith>
it exists

[10:47:50.0000] <Hixie>
url?

[10:47:54.0000] <MikeSmith>
http://mathias.html5.org/specs/javascript/

[10:48:00.0000] <Ms2ger>
http://mathias.html5.org/specs/javascript/

[10:48:04.0000] <Ms2ger>
Damn you, MikeSmith!

[10:48:16.0000] <MikeSmith>
heh

[10:48:19.0000] <Ms2ger>
Shouldn't the sake slow you down? :(

[10:48:39.0000] <MikeSmith>
I'm drinking pink lemonade tonight

[10:48:48.0000] <Ms2ger>
/me raises an eyebrow

[10:49:12.0000] <Hixie>
dudes that spec is the awesome

[10:49:17.0000] <Hixie>
matjas++

[10:49:41.0000] <MikeSmith>
さすがmatjas

[10:50:24.0000] <Hixie>
ok created subdomain

[10:50:29.0000] <SimonSapin>
About http://mathias.html5.org/specs/javascript/ , are greater and smaller implicitly "strict" in english? (ie: not greater or equal)

[10:51:02.0000] <Hixie>
the captcha i got was "selffula surrounds" which sounds like one of those phrases evil forces make their minions repeat to each other to spread their mythos

[10:51:16.0000] <Ms2ger>
Alright

[10:51:21.0000] <Ms2ger>
selffula surrounds

[10:51:38.0000] <Hixie>
selffula is coming!

[10:51:42.0000] <Hixie>
selffula surrounds!

[10:52:21.0000] <Hixie>
/me prostrates himself

[10:52:33.0000] <Ms2ger>
Get back to work, Great Master

[10:52:56.0000] <Hixie>
selffula is the great master! selffula surrounds!

[10:55:23.0000] <cgcardona>
interesting

[10:55:28.0000] <AryehGregor>
SimonSapin, that's the accepted convention outside of advanced math, in my experience.

[10:56:20.0000] <AryehGregor>
If you're a math major or grad student, at least in pure math, people often are sloppy about the difference between strict and loose inequality because it's often not important and it's extra info to track when doing a proof.

[10:57:04.0000] <AryehGregor>
(in particular because certain operations switch between strict and loose inequality and it can be annoying to keep track of them, and it makes no difference if your result doesn't care about sets of zero measure or whatever)

[10:57:05.0000] <SimonSapin>
AryehGregor: it’s ambiguous in French if you don’t specify otherwise

[10:57:10.0000] <AryehGregor>
Interesting.

[10:57:31.0000] <Hixie>
vraiment?

[10:57:40.0000] <AryehGregor>
I think in the context of the spec, it's unambiguous.

[10:57:46.0000] <SimonSapin>
At least that’s what I was taught in school. Many people don’t really care

[10:58:04.0000] <WeirdAl>
annevk: that was the first place I looked.

[10:58:08.0000] <Hixie>
what's the ambiguous phraseology?

[10:58:09.0000] <SimonSapin>
English might be different from French of course, it is for "positive".

[10:58:21.0000] <SimonSapin>
Hixie: greater than, smaller than

[10:58:25.0000] <Hixie>
i meanin french

[10:58:33.0000] <SimonSapin>
supérieur à, inférieur à

[10:59:05.0000] <SimonSapin>
C’est plus précis de dire : strictement supérieur à, supérieur ou égal à

[10:59:13.0000] <Hixie>
i wouldn't say that's ambiguous

[10:59:39.0000] <WeirdAl>
/me is thankful for the French 1A class he took this past summer :)

[10:59:46.0000] <SimonSapin>
people use it to mean either

[11:00:28.0000] <Ms2ger>
Hixie, yeah, but you speak French like a 10 years old boy :)

[11:00:45.0000] <Hixie>
in particular, neither http://fr.wiktionary.org/wiki/sup%C3%A9rieur nor http://en.wiktionary.org/wiki/sup%C3%A9rieur suggest it's ambiguous

[11:00:50.0000] <SimonSapin>
… but of course it doesn’t matter to define min and max

[11:01:29.0000] <Hixie>
"greater than" seems equally unambiguous to me. 3 is obviously not greater than 3

[11:02:42.0000] <Hixie>
http://fr.wikipedia.org/wiki/Table_des_symboles_math%C3%A9matiques seems to consider the term unambiguous too, though they do use the more verbose "strictement" in some cases

[11:04:07.0000] <Hixie>
http://fr.wikipedia.org/wiki/Nombre_positif does agree though

[11:04:11.0000] <Hixie>
interesting

[11:04:27.0000] <Hixie>
weird

[11:05:49.0000] <SimonSapin>
My guess is that it *should* unambiguously mean "strictement supérieur", but sometimes people get sloppy and use the short form when they mean "supérieur ou égal". So in practice in can be ambiguous, so you sometimes use "strictement" to disambiguate.

[11:06:05.0000] <Hixie>
yeah, i guess so

[11:06:13.0000] <Hixie>
weird

[11:06:19.0000] <Hixie>
none of the dictionaries i found say it's ambiguous

[11:07:01.0000] <Hixie>
the only example of it being ambiguous i found was that "positive numbers" page and it disambiguated in parentheses which makes me skeptical that the usage is really correct in the firstplace

[11:08:31.0000] <SimonSapin>
In French schools we’re often advised to use "strictement …" or "… ou égal", especially in math class

[11:09:10.0000] <SimonSapin>
anyway, the good news is that both possibility gives the same definition of max(a, b) and min(a, b)

[11:09:51.0000] <Hixie>
assuming that if values a and b are equal they're also identical

[11:09:59.0000] <Hixie>
which isn't a given depending on what the values are

[11:10:59.0000] <SimonSapin>
http://mathias.html5.org/specs/javascript/ defines min() and max() for use in the document but I don’t see it used at all

[11:12:23.0000] <SimonSapin>
same for ToInteger()

[11:13:13.0000] <SimonSapin>
where should I send feedback?

[11:13:54.0000] <Hixie>
MikeSmith: is there a bug component for this spec?

[11:14:11.0000] <MikeSmith>
no

[11:14:16.0000] <MikeSmith>
I'll make one now

[11:14:24.0000] <Hixie>
assuming matjas wants one

[11:19:42.0000] <GPHemsley>
I just discovered there's a file format where multiple sources claim its mimetype as either chemical/cif or chemical/x-cif

[11:19:51.0000] <GPHemsley>
(as if it's the subtype that's the problem)

[11:21:19.0000] <SimonSapin>
twitter shall be the bug tracker until then

[11:24:39.0000] <WeirdAl>
uh, that JS spec sounds like a Bad Idea - not something that is really a spec, but simply documentation of historical practices of browsers

[11:25:46.0000] <WeirdAl>
the defineGetter function and its friends have been obsoleted by ES5's Object.defineProperty

[11:25:55.0000] <WeirdAl>
and Object.getOwnProperty

[11:26:47.0000] <Ms2ger>
SimonSapin, those functions are defined in ES proper

[11:27:23.0000] <WeirdAl>
Ms2ger: are you talking to me instead of SimonSapin? :)

[11:27:23.0000] <Ms2ger>
WeirdAl, you mean "a spec for features a browser is required to implement to be able to browse the web as it actually exists"?

[11:27:44.0000] <SimonSapin>
Ms2ger: these are not JS functions but functions for the algorithms in the document: http://mathias.html5.org/specs/javascript/#abstract-operations

[11:27:45.0000] <Ms2ger>
WeirdAl, no, he said something about ToInteger() not being defined

[11:27:53.0000] <Ms2ger>
SimonSapin, exactly

[11:27:58.0000] <SimonSapin>
defined but not used

[11:28:08.0000] <Ms2ger>
SimonSapin, they are used in and defined by the ES spec

[11:28:36.0000] <WeirdAl>
Ms2ger: some of these problems, I'm saying, the new ES specs already handle

[11:28:44.0000] <SimonSapin>
Ms2ger: is there a need to repeat them in this spec?

[11:28:52.0000] <Ms2ger>
WeirdAl, I don't think you get what I'm saying

[11:29:23.0000] <gsnedders>
WeirdAl: Yes, there are ways to achieve that in ES5. But any browser that wishes to be compatible with the web must support the older, non-standard means.

[11:29:26.0000] <Ms2ger>
WeirdAl, the existence of Object.defineProperty doesn't magically make pages that use __defineGetter__ disappear

[11:30:12.0000] <WeirdAl>
must we be compatible with <blink> and <marquee>? :)

[11:30:28.0000] <WeirdAl>
(I know, I'm trolling with a line like that)

[11:30:47.0000] <Ms2ger>
Yeah, we must

[11:31:05.0000] <Ms2ger>
marquee in particular is required to render a lot of East-Asian sites correctly

[11:31:11.0000] <gsnedders>
/me wonders what effect IE9 has had on __define{G,S}etter__

[11:31:37.0000] <WeirdAl>
hm, I should pick my fights more carefully, based on what I actually care about :p

[11:33:10.0000] <Hixie>
WeirdAl: the html spec defines <blink> (that's trivial) and <marquee> (in great depth, there's a whole section devoted to it)

[11:33:14.0000] <Hixie>
WeirdAl: so... yes

[11:33:24.0000] <Hixie>
(blink is just one line of CSS)

[11:34:34.0000] <Hixie>
WeirdAl: of course, i'm pretty sure we'd all be happier if ES did just spec all this stuff for us :-)

[11:34:37.0000] <SimonSapin>
Hixie: CSS makes conforming to just ignore 'text-decoration: blink'

[11:34:44.0000] <Hixie>
SimonSapin: indeed

[11:34:53.0000] <Hixie>
SimonSapin: that's why <blink> doesn't blink in all browsers

[11:35:08.0000] <Hixie>
well, at least, that's the formal reason why it's ok that it doesn't blink in all browsers

[11:35:17.0000] <SimonSapin>
I guess that’s fine

[11:35:45.0000] <SimonSapin>
but I can imagine how not supporting <marquee> would break stuff

[11:39:14.0000] <WeirdAl>
/me wonders idly where the whatwgmemes website is

[11:39:32.0000] <Hixie>
you mean separate from http://w3cmemes.tumblr.com/ ?

[11:39:43.0000] <Hixie>
cos that's what we use :-)

[11:39:46.0000] <WeirdAl>
yeah :p

[11:40:11.0000] <WeirdAl>
I need moar funny

[11:41:21.0000] <Ms2ger>
Sorry, we don't do crazy in here ;)

[11:41:51.0000] <Hixie>
o_O

[11:42:04.0000] <WeirdAl>
gotta go - my flight's boarding

[11:42:17.0000] <Ms2ger>
ttyl

[11:47:24.0000] <gsnedders>
/me would still like Web ECMAScript to define most of it in ES code.

[11:47:59.0000] <gsnedders>
Obviously parts can't be, but all the librar yparts can.

[11:48:37.0000] <Ms2ger>
/me wonders what Hixie is working on at the moment

[11:51:16.0000] <Hixie>
canvas in workers

[11:52:55.0000] <Ms2ger>
Oh, right

[11:59:13.0000] <Hixie>
do i still need to have spec prose to handle the opera-2d context?

[11:59:27.0000] <Hixie>
or can i change the spec so that it assumes that each canvas can only ever have one context at a time?

[12:01:28.0000] <Hixie>
i'm thinking i'm going to throw opera-2d under the bus

[12:06:50.0000] <Ms2ger>
sgtm

[15:31:45.0000] <Hixie>
heycam|away: any way i can have an enum but instead of throwing if the value is not a valid enum value, the method just returns null?


2012-11-11
[17:03:25.0000] <heycam>
annevk, there's a difference between including a final "z" and not. if you don't have it, it's an open path, and you won't get a stroke on that final edge

[17:03:44.0000] <heycam>
Hixie, mm I think you may have asked for something like this before. or it was "do nothing" in the method.

[17:05:05.0000] <heycam>
Hixie, it feels like it's just on the other sound of my "too hacky" boundary. :) what mehod do you want it for?

[17:05:38.0000] <heycam>
annevk, (oh I see rcabanier already answered you)

[18:22:25.0000] <annevk>
heycam|away: yeah, but I'm only filling so it appears to be fine

[18:22:27.0000] <annevk>
heycam|away:

[18:22:50.0000] <annevk>
heycam|away: there's a few bug reports, but I guess you'll get to them at some point

[18:27:31.0000] <annevk>
matjas: let me know when you create whatwg/javascript, I'll set up the rest then

[19:34:07.0000] <Hixie>
heycam|away: getContext()'s first argument, which is either '2d' or 'webgl'

[19:34:44.0000] <Hixie>
heycam|away: what i really want isn't so much that it return null, but that the enum get coerced to null or something i can detect

[19:35:07.0000] <Hixie>
heycam|away: but there's not really a good reason to do it that way rather than prose other than being clear in the IDL about the intentions

[19:52:31.0000] <Hixie>
how come, in Gecko, does a.document instanceof Document return true, where a is some other Window?

[19:53:13.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1905

[19:53:27.0000] <Hixie>
(also, anyone with IE around? what does IE put in the log for that test?)

[20:51:08.0000] <Hixie>
annevk: what does "standards must define scheme data either literally as or as a subset of one or more URL units that do not start with "?"." mean?

[23:45:39.0000] <annevk>
Hixie: trying to say that if you define e.g. the javascript URL scheme you need to limit it to the allowed syntax of scheme data

[23:48:17.0000] <annevk>
Hixie: so either you define it the same way (literally), as one or more URL units that does not start with "?", or you define it otherwise, e.g. as a sequence of ASCII digits

[23:50:23.0000] <annevk>
Hixie: my plan is to give some examples by defining the javascript and about URL schemes in the specification

[00:07:19.0000] <annevk>
"X-XSS-Protection"

[00:07:25.0000] <annevk>
when will the X- stop?

[00:07:59.0000] <annevk>
apparently http://tools.ietf.org/html/rfc6648 was not read

[00:56:25.0000] <hsivonen>
too bad mark pilgrim doesn't blog anymore. I'like to see his take on polyglot

[00:58:29.0000] <annevk>
GPHemsley: created http://resources.whatwg.org/logo-mime.svg for you

[00:58:45.0000] <annevk>
hsivonen: I would love him to blog about a lot of things

[00:58:56.0000] <annevk>
anything really

[00:59:17.0000] <annevk>
created http://resources.whatwg.org/logo-dom.svg for the DOM, okay Ms2ger?

[00:59:25.0000] <annevk>
/me is not entirely sure about that one

[00:59:54.0000] <Ms2ger>
annevk, what's it supposed to be? :)

[01:00:17.0000] <annevk>
Ms2ger: a tree

[01:01:19.0000] <Ms2ger>
Ah

[01:01:30.0000] <Ms2ger>
wfm

[01:01:58.0000] <annevk>
cool, I hope I don't have to explain that all the time, but I guess it's all open source so we can just ask for patches :)

[01:06:26.0000] <SimonSapin>
annevk: I can see the binary tree once you tell me it’s there … but not really obvious otherwise

[01:07:39.0000] <annevk>
DOM API is non-intuitive too :p

[01:08:24.0000] <SimonSapin>
is it in r.w.o?

[01:09:09.0000] <annevk>
SimonSapin: what do you mean?

[01:09:12.0000] <MikeSmith>
annevk: suggest U+1F4A9 for the DOM logo

[01:09:38.0000] <Ms2ger>
MikeSmith, I *knew* it!

[01:09:44.0000] <SimonSapin>
annevk: I understood you already had a logo for DOM API

[01:10:20.0000] <MikeSmith>
Ms2ger: quit reading my mind. It makes it hard for me to concentrate

[01:10:25.0000] <annevk>
SimonSapin: not before the one I just created, but that one is hosted on resources.whatwg.org now

[01:10:51.0000] <annevk>
MikeSmith: I like how I know what that is by the number

[01:10:59.0000] <Ms2ger>
/me wonders about that girl MikeSmith met last week

[01:11:04.0000] <annevk>
MikeSmith: but my SVG path skills are not good enough for that

[01:11:30.0000] <SimonSapin>
oh, DOM API is the same as DOM

[01:12:21.0000] <MikeSmith>
Ms2ger: :-)

[01:13:03.0000] <annevk>
SimonSapin: ah, I see what tripped you now :)

[01:15:38.0000] <SimonSapin>
so "DOM API" is the long form to disambiguate from "DOM Parsing", just like "strictement supérieur à" :p

[01:22:29.0000] <annevk>
well with DOM API I meant to refer to the API part of the DOM, which is generally considered non-intuitive and crappy

[02:05:11.0000] <annevk>
I wonder at what point Apache will stop emitting stuff like <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">

[02:05:25.0000] <annevk>
once Roy gets veto power over HTML?

[02:06:20.0000] <Stevef>
othermaceij: am I right in thinking that a patch to add <main> to webkit would be pretty much the same as the patch for the <nav> element? https://bugs.webkit.org/attachment.cgi?id=35098&action=prettypatch

[02:08:48.0000] <Stevef>
othermaciej: (sorry mispelt nick first time around) am I right in thinking that a patch to add <main> to webkit would be pretty much the same as the patch for the <nav> element? https://bugs.webkit.org/attachment.cgi?id=35098&action=prettypatch

[02:15:18.0000] <annevk>
yeah

[02:16:46.0000] <SimonSapin>
so Google never dropped h264, did they?

[02:23:15.0000] <Stevef>
annevk: whas that a yeah to my question or some other?

[02:32:05.0000] <annevk>
yeah

[02:32:13.0000] <annevk>
SimonSapin: nope

[02:32:58.0000] <annevk>
hehe http://t.co/qApp3RWc

[02:34:47.0000] <Stevef>
thanks

[02:36:10.0000] <annevk>
Stevef: ;)

[02:49:43.0000] <Philip`>
annevk: The logo looks to me like a Darwinian who has suffered a terrible accident

[02:49:51.0000] <Philip`>
(http://i.neoseeker.com/n/8/multiwinia2_thumb.jpg)

[02:50:13.0000] <annevk>
yay, Philip` is back

[03:31:17.0000] <asmodai>
annevk: aside from the spec, any other SVG documents that are a must-read?

[03:55:30.0000] <annevk42>
http://code.google.com/p/html5lib/issues/detail?id=216 seems like Google is porting html5lib to Dart

[04:01:54.0000] <smaug____>
crazy stuff

[04:02:08.0000] <smaug____>
I already imagined Dart kind of died

[04:53:37.0000] <annevk42>
http://homepages.cwi.nl/~steven/vandf/2012-11-teneuro.html

[05:20:21.0000] <gsnedders>
annevk42: https://github.com/dart-lang/html5lib

[05:52:10.0000] <gsnedders>
Anyone happen to know off-hand what Philip` used to generate all those tests for the tokenizer (from OCaml?)?

[05:54:16.0000] <Philip`>
I used some OCaml code that tried every possible interesting input to the tokeniser (and then pruned inputs that took the tokeniser into states it had already been in)

[05:54:34.0000] <gsnedders>
So no library to generate it from the model?

[05:54:35.0000] <gsnedders>
Okay.

[05:55:58.0000] <Philip`>
http://canvex.lazyilluminati.com/svn/tokeniser/test_gen.ml

[05:56:40.0000] <Philip`>
No libraries

[05:57:29.0000] <gsnedders>
/me was planning on prescan tests this evening

[06:25:50.0000] <annevk42>
didn't know http://www.w3.org/TR/media-frags/ was a rec

[08:05:57.0000] <GPHemsley>
DreamHost suspended my account for lack of payment without even notifying me.

[08:06:22.0000] <GPHemsley>
And they have this message on the web panel: "get paid up to prevent permanent data loss (we only have your data for as long as we have backups of it, usually a week or two from day of suspension)"

[08:06:35.0000] <GPHemsley>
So it's not even clear that my website will be as I left it when payment is made.

[08:06:53.0000] <GPHemsley>
This is supremely frustrating.

[10:10:19.0000] <GPHemsley>
ah, well, at least they were quick to restore

[10:19:04.0000] <heycam>
annevk, I like the logos. :) SVG spec bug reports very welcome too.

[10:23:34.0000] <heycam>
Hixie, filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=19936 for the enum thing

[10:28:34.0000] <Hixie>
GPHemsley: what has the "has content type" flag? is it a system-global flag?

[10:29:13.0000] <Hixie>
annevk42: i don't think "literally"  means what you think it means, then

[10:29:20.0000] <GPHemsley>
annevk: Here's a case for you: a file:/// page with a // href - the domain disappears

[10:29:37.0000] <GPHemsley>
Hixie: If I understand what you're asking, yes.

[10:30:15.0000] <Hixie>
heycam: thanks

[10:30:31.0000] <GPHemsley>
Hixie: It is set in the "supplied media type detection algorithm" and checked again in the "media type sniffing algorithm"

[10:30:46.0000] <Hixie>
GPHemsley: so if two pages are both going to read a resource's mime type at the same time, they interfere?

[10:31:29.0000] <GPHemsley>
Hixie: Oh, it's not that global. This entire spec assumes each resource analysis is self-contained.

[10:31:47.0000] <Hixie>
heycam: yeah, that'd be neat. Purely editorial, in effect, but would be nice to make the IDL clearer that the argument expects a particular set of values, not just arbitrary strings.

[10:32:01.0000] <Hixie>
GPHemsley: "assumes" gets us into a lot of trouble :-P

[10:32:14.0000] <GPHemsley>
Hixie: Yeah... hadn't considered the possibility

[10:32:27.0000] <Hixie>
i recommend just making it a return value

[10:32:38.0000] <Hixie>
return a pair (type, had-content-type)

[10:32:40.0000] <heycam>
Hixie, I think not using null would make me feel better about it, because that then means you could only use the enum if it's nullable.

[10:32:43.0000] <Hixie>
or some such

[10:32:48.0000] <heycam>
(like how I used "")

[10:33:07.0000] <Hixie>
heycam: yeah "" would be fine. It only needs to be distinguishable from valid values.

[10:33:15.0000] <heycam>
ok

[10:33:23.0000] <GPHemsley>
Hixie: Would you mind filing a bug for the issue?

[10:33:43.0000] <Hixie>
heycam: i like the explicit "this is the default" syntax, fwiw

[10:33:47.0000] <Hixie>
GPHemsley: sure

[10:33:47.0000] <heycam>
cool

[10:34:13.0000] <Hixie>
man every time i file a bug the whatwg product has more components

[10:34:16.0000] <GPHemsley>
annevk: Oh, that's also the reason the dfn script doesn't work locally. Interesting.

[10:35:22.0000] <GPHemsley>
Hixie: That's good, isn't it?

[10:37:40.0000] <GPHemsley>
annevk: BTW, the WHATWG logo has an opaque white center; the mimesniff logo is transparent.

[10:39:10.0000] <Hixie>
GPHemsley: neither good or bad, just amusing

[10:39:13.0000] <GPHemsley>
annevk: Oh, also, thanks. :)

[10:41:52.0000] <Hixie>
GPHemsley: so i'm confused by the "Configurable flag" thing

[10:42:04.0000] <Hixie>
GPHemsley: are you saying that browsers can have any of these arbitrarily enabled or disabled?

[10:42:15.0000] <Hixie>
GPHemsley: that seems like it'd mean that almost any behaviour is conforming...

[10:42:25.0000] <GPHemsley>
Hixie: Yes, either based on their own decisions, or by leaving the decision in the hands of the user.

[10:42:41.0000] <Hixie>
why?

[10:42:51.0000] <GPHemsley>
Hixie: Well, one of the overarching themes of this spec was that UAs SHOULD NOT sniff.

[10:43:06.0000] <GPHemsley>
Hixie: That idea was pre-existing when I came on the scene.

[10:43:19.0000] <GPHemsley>
The only behavior that is required is for unknown types

[10:43:27.0000] <Hixie>
i'm fine with a browser never doing sniffing, but if it's going to sniff, it should do it consistently for everything

[10:43:41.0000] <Hixie>
having many different conforming configurations defeats the point of having a spec

[10:44:08.0000] <GPHemsley>
Hixie: Well, without it, I think there will be a lot of pushback in certain situations.

[10:44:17.0000] <Hixie>
from whom? implementors?

[10:44:25.0000] <GPHemsley>
Hixie: For example, I don't think Mozilla wants to sniff content tagged as "text/plain".

[10:44:31.0000] <GPHemsley>
(They don't do it now.)

[10:44:40.0000] <Hixie>
in what situation?

[10:44:44.0000] <Hixie>
they certainly do for <img>

[10:45:04.0000] <GPHemsley>
Step 4 of "media type sniffing algorithm"

[10:45:11.0000] <GPHemsley>
Doing it for <img> is a different case.

[10:45:28.0000] <Hixie>
they definitely do for "text/plain; charset=ISO-8859-1"

[10:45:45.0000] <GPHemsley>
Sniffing for <img> is defined in the "rules for sniffing images specifically", which are invoked by HTML directly.

[10:46:02.0000] <GPHemsley>
Hixie: Do they? Well, then I suppose I'll have to follow up on that.

[10:46:16.0000] <GPHemsley>
Hixie: But they don't do it for text/plain—which I discovered by accident.

[10:46:21.0000] <Hixie>
the goal here should be to define the exact rules required to be compatible with the web

[10:46:29.0000] <Hixie>
if we don't have to do it for text/plain, then nobody does

[10:46:34.0000] <Hixie>
if we do, then everybody does

[10:46:49.0000] <Hixie>
there might be some cases where people disagree about how important it is to do it, but then it's your job to decide who's right :-)

[10:47:02.0000] <GPHemsley>
Very well.

[10:47:03.0000] <gsnedders>
And to convince everyone else you are. :)

[10:47:22.0000] <Hixie>
imho you just want the algorithms to have a single bail-out point at the top, along the lines of "if you want to not be interoperable with anyone but want to be strictly correct per the IETF, then use the specified type, otherwise, follow the rest of this algorithm to the letter"

[10:47:38.0000] <GPHemsley>
Like I said, most of these concepts were written by abarth. I don't necessarily fully understand the motivation behind them (yet).

[10:48:00.0000] <GPHemsley>
But I see your point.

[10:48:17.0000] <GPHemsley>
I suppose he did have something to that effect in the old draft, so maybe this was my addition.

[10:48:22.0000] <GPHemsley>
I'll have to go back and check.

[10:49:02.0000] <GPHemsley>
Hixie: But there is the situation where the user might want to override the UA.

[10:49:15.0000] <GPHemsley>
One way or the other.

[10:49:36.0000] <Hixie>
there is?

[10:49:50.0000] <Hixie>
/me is not aware of any UA that supports that

[10:52:46.0000] <GPHemsley>
Hixie: Well, they may not currently support it... but it's a relatively common requested feature, AFAICT.

[10:53:29.0000] <GPHemsley>
(though perhaps not in all cases)

[10:54:05.0000] <gsnedders>
Has anyone got any intention of supporting it?

[10:54:26.0000] <GPHemsley>
No idea

[10:54:34.0000] <Hixie>
GPHemsley: that's actually setting an override type, though, right? not just disabling specific sniffers.

[10:54:58.0000] <GPHemsley>
hmm... perhaps

[10:55:01.0000] <Hixie>
GPHemsley: i would put that closer to where the type gets processed, not in the sniffing spec. e.g. in the navigation algorithm, or something.

[10:55:35.0000] <GPHemsley>
Hixie: Alright, if you wanna take it on

[10:55:45.0000] <GPHemsley>
It would simplify things, I think.

[10:59:58.0000] <annevk42>
Hixie: maybe not :)

[11:01:20.0000] <annevk42>
GPHemsley: the file: thing you encouter is a Gecko-ism

[11:02:01.0000] <annevk42>
GPHemsley: I made the WHATWG logo no longer white I think

[11:02:51.0000] <GPHemsley>
annevk42: What about the icon? Does that maybe not use SVG?

[11:03:01.0000] <GPHemsley>
(or it could just be a cache thing)

[11:03:27.0000] <GPHemsley>
annevk42: Do you suppose the URL spec will encourage them to fix that Gecko-ism?

[11:04:02.0000] <annevk42>
GPHemsley: well yes

[11:04:19.0000] <annevk42>
GPHemsley: btw, I wrote it as utf-8 because that's the canonical case these days

[11:04:43.0000] <annevk42>
GPHemsley: and you want file-bug.js from resources.whatwg.org, not from dvcs

[12:31:39.0000] <gsnedders>
/me wonders if there's any bug report on non-IE browsers on removing __lookupGetter__, etc.

[14:32:35.0000] <GPHemsley>
annevk: What are the PNGs for?

[14:32:49.0000] <annevk>
twitter

[14:33:08.0000] <annevk>
and whatever other crappy piece of software does not accept SVG

[14:34:07.0000] <GPHemsley>
ah

[14:37:08.0000] <annevk>
didn't know people viewed specs locally, then of course scheme-relative URLs are going to fail

[14:52:55.0000] <annevk>
maybe we should make xn--zn7c.spec.whatwg.org redirect to encoding.spec.whatwg.org for fun

[14:55:09.0000] <SimonSapin>
annevk: is that the replacement character?

[14:55:18.0000] <annevk>
yes

[14:56:07.0000] <SimonSapin>
do browsers support it? (depending on the IDNA version…)

[14:56:12.0000] <annevk>
(which is not valid in an IRI, and probably not a valid IDN code point either, but fuck the police)

[14:56:45.0000] <annevk>
SimonSapin: it would highly surprise me if that lookup failed

[14:57:09.0000] <annevk>
SimonSapin: but I need to do more testing still

[15:00:36.0000] <annevk>
SimonSapin: Safari and Opera both do a lookup for that if you type in http://�.spec.whatwg.org even

[15:03:50.0000] <SimonSapin>
annevk: firefox gives an error page, chromium does a search of http:// .spec.whatwg.org/ (with a space)

[15:04:24.0000] <annevk>
SimonSapin: the error page Firefox gives suggests a DNS lookup took place

[15:04:43.0000] <SimonSapin>
Epiphany (WebKit-GTK) gives an error saying http://%20.spec.whatwg.org/

[15:05:48.0000] <annevk>
oh sweet, works in Safari's address bar, but not through <a>

[15:06:05.0000] <annevk>
browsers are silly

[15:06:20.0000] <annevk>
Film at 11; bedtime here

[15:06:21.0000] <SimonSapin>
wireshark shows no sign of a DNS request from firefox

[15:06:57.0000] <annevk>
SimonSapin: hmm, "Firefox can't find the server at �.spec.whatwg.org." is kinda misleading then

[15:07:16.0000] <SimonSapin>
it is

[15:08:03.0000] <annevk>
SimonSapin: Firefox prolly uses system DNS so if it was already cached there you might not see another DNS request, fwiw

[15:10:03.0000] <SimonSapin>
yeah, I tried ��.spec.whatwg.org and a�.spec.whatwg.org

[15:11:59.0000] <annevk>
interesting

[15:15:32.0000] <annevk>
nn


2012-11-12
[16:46:39.0000] <Yuhong>
<annevk> apparently http://tools.ietf.org/html/rfc6648 was not read

[16:46:50.0000] <Yuhong>
X-XSS-Protection dates back to IE8.

[16:51:33.0000] <Yuhong>
<Hixie> http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1905

[16:51:40.0000] <Yuhong>
<Hixie> (also, anyone with IE around? what does IE put in the log for that test?)

[16:51:50.0000] <Yuhong>
In IE9 mode: false, true

[16:52:19.0000] <Yuhong>
IE9 in IE8 mode: true

[16:52:27.0000] <Yuhong>
IE9 in IE7 mode: true

[22:52:59.0000] <hsivonen>
the attempts to spin the claim that polyglot leads to better structure and quality into something non-bogus are embarrassing. this really is a déjà vu all over again.

[22:54:39.0000] <Hixie>
any idea what the real reason people want it is yet? just misguided, or is there some ulterior reason?

[22:57:20.0000] <hsivonen>
Hixie: I think the reason TimBL/TAG wanted it was that they were distressed about XML toolchains getting cast aside and didn’t realize there were better solutions to the problem than getting everyone to produce polyglot markup

[22:57:47.0000] <hsivonen>
(dunno what’s TimBL’s current thinking after the HTML—XML Task Force report)

[22:58:10.0000] <hsivonen>
as for why Sam wants it, Sam’s intentions are always mysterious

[22:59:05.0000] <hsivonen>
I also can’t tell why Leif wants it

[22:59:34.0000] <hsivonen>
polyglot does have certain party trick hack value which makes it appealing

[22:59:54.0000] <matjas>
jgraham: re: http://wiki.whatwg.org/index.php?title=Web_ECMAScript&diff=3938&oldid=3798 could you chime in here please? https://github.com/whatwg/javascript/issues/1

[23:00:49.0000] <hsivonen>
Hixie: FWIW, looking at the old archives, the TAG didn’t develop its wish for polyglot on its own. Someone told them about Sam using polyglot markup on his blog.

[23:01:12.0000] <MikeSmith>
interesting

[23:02:03.0000] <hsivonen>
the email that started it all: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2006-November/008035.html

[23:02:11.0000] <hsivonen>
aka. “the white pebble”

[23:02:31.0000] <hsivonen>
see http://www.intertwingly.net/blog/2006/12/01/The-White-Pebble

[23:14:51.0000] <hsivonen>
fun fact: the first occurrence of the word “polyglot” on public-html is in an email where Hixie calls it a ridiculous idea: http://lists.w3.org/Archives/Public/public-html/2008Aug/0301.html

[23:16:09.0000] <hsivonen>
the first mention on www-tag is in an email written by me. oops.

[23:18:42.0000] <hsivonen>
who coined the term polyglot? did Hixie do so in passing in the above email or was the term already used on IRC or blogs?

[23:19:39.0000] <hsivonen>
first mention on the whatwg list seems to be http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-August/021725.html

[23:27:01.0000] <hsivonen>
So TAG’s request for the HTML WG to create the polyglot spec emerged from a TAG meeting that Sam attended (or called into?)

[23:28:26.0000] <hsivonen>
are TAG f2f meetings minuted?

[23:29:11.0000] <hsivonen>
ah. here http://lists.w3.org/Archives/Public/www-tag/2010Apr/0060.html

[23:29:34.0000] <hsivonen>
oh. MikeSmith was there, too.

[23:29:54.0000] <SimonSapin>
what wrong with polyglot? pointlessly taking editing resources?

[23:33:08.0000] <hsivonen>
SimonSapin: pointlessly taking the resources of Web authors (if they are made believe they should do polyglot) or software developers (if authors who’ve been made believe they want polyglot demand polyglot features)

[23:33:32.0000] <hsivonen>
SimonSapin: also taking review resources at the WG

[23:37:35.0000] <zcorpan>
do we have a canned response in the form of a whatwg wiki page to why appendix c/polyglot is a bad idea?

[23:39:36.0000] <hsivonen>
unfortunately, it looks like my 386 limit is going to be exceeded at some point and I will end up writing a canned response

[23:49:40.0000] <hsivonen>
MikeSmith: I just learned that you saved HTML5 from having an Appendix C in the sense of having the polyglot stuff be an actual appendix.

[23:49:59.0000] <hsivonen>
(from reading TAG minutes)

[23:50:08.0000] <MikeSmith>
oh

[23:51:30.0000] <hsivonen>
MikeSmith: no recollection?

[23:52:10.0000] <MikeSmith>
yeah vaguely

[23:52:17.0000] <MikeSmith>
f2f meeting in Boston?

[23:52:30.0000] <hsivonen>
yeah

[23:56:55.0000] <MikeSmith>
the main thing I can remember for those discussions is that I didn't think that document had much chance of actually being written

[23:57:22.0000] <MikeSmith>
because there was lots of talk about what a great idea it would be if somebody would write it

[23:57:47.0000] <MikeSmith>
but as usual nobody showing any sign of actually planning to do that

[00:04:00.0000] <hsivonen>
gotta love how TimBL’s requirements didn’t get minuted: “TBL: my requirement is [everybody talks at once]”

[00:05:32.0000] <MikeSmith>
which minutes?

[00:06:17.0000] <hsivonen>
MikeSmith: the same as above

[00:07:53.0000] <MikeSmith>
oh god

[00:08:07.0000] <MikeSmith>
I think I tried to block some of this out of my memory

[00:08:30.0000] <MikeSmith>
was just reading the decentralized extensibility part

[00:11:39.0000] <MikeSmith>
I remember being back home after that meeting -- either that one or an earlier one -- and I was speaking at a meeting of the W3C Japan members

[00:12:07.0000] <MikeSmith>
and someone asked me about use of namespaces in text/html

[00:12:33.0000] <MikeSmith>
and I said, We'll never have namespaces in text/html

[00:12:48.0000] <MikeSmith>
but I forgot that Henry Thompson was in the room

[00:12:58.0000] <MikeSmith>
he was visiting at the time for something

[00:13:47.0000] <MikeSmith>
and he spoke up right away to say that No, there is still ongoing discussion about that

[00:14:34.0000] <Hixie>
hsivonen: the term polyglot is just the term used for any file that is in multiple languages at once

[00:14:51.0000] <zcorpan>
annevk: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1909

[00:15:06.0000] <Hixie>
hsivonen: btw, it taking the htmlwg's time up isn't a big deal if the people whose time we care about aren't in htmlwg

[00:15:06.0000] <zcorpan>
annevk: btw, don't we want the white background in the logo?

[00:15:11.0000] <Hixie>
/me gives hsivonen a look :-P

[00:16:40.0000] <hsivonen>
MikeSmith: regarding the HTML parser bugs you mentioned the other day, http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1910 WFM in Firefox

[00:17:33.0000] <Hixie>
nn

[00:17:53.0000] <MikeSmith>
it can take time up when people start (re)lobbying to have polyglot-checking supporte added to the validator -- their logic being, there's a spec for it, so we should therefore provide some support for it

[00:18:14.0000] <MikeSmith>
hsivonen: yeah, I noticed that too

[00:18:21.0000] <MikeSmith>
that's why I didn't file a bug for it

[00:18:31.0000] <MikeSmith>
I think they were testing with code from February

[00:18:44.0000] <zcorpan>
so polyglot could instead be Guidelines for Spec Writers Using Anolis With Libxml2 Instead Of Html5lib

[00:18:55.0000] <MikeSmith>
heh

[00:18:57.0000] <MikeSmith>
yeah

[00:18:58.0000] <zcorpan>
1. If you're Hixie, don't omit </td> tags

[00:19:05.0000] <hsivonen>
zcorpan: yes

[00:19:11.0000] <annevk>
zcorpan: heh nice

[00:19:19.0000] <zcorpan>
2. Your spec is small enough to not take ages to generate, use html5lib instead.

[00:19:31.0000] <annevk>
zcorpan: feel free to commit and update the twitter account (that's all that's needed)

[00:20:25.0000] <hsivonen>
just when I thought I could finally get to making a libxml2-compatible version of the V.nu parser, I get this Rust thing on my plate

[00:20:34.0000] <MikeSmith>
hsivonen: in that paper they found that WebKit has the same bug, but when I tested in WebKit I couldn't reproduce it there either. So I guess you must have fixed it between February and now, and also it was fixed in WebKit too

[00:20:56.0000] <hsivonen>
MikeSmith: I can’t recall fixing anything of that nature in February

[00:21:02.0000] <hsivonen>
or since February

[00:21:10.0000] <MikeSmith>
hmm ok

[00:21:17.0000] <MikeSmith>
weird then

[00:21:42.0000] <hsivonen>
Hixie: do you recall why you have foreign-namespace stuff on the "special" list of the parsing algorithm?

[00:22:13.0000] <hsivonen>
Hixie: when can an "is special?" check end up being performed on an SVG or MathML stack node?

[00:23:17.0000] <MikeSmith>
I vote for you work on the libxml2-compatible v.nu parser before the Rust one

[00:24:11.0000] <annevk>
zcorpan: as for the white background, dunno, maybe that should be added back? seems kinda nice if the logo just works on photos and such, but that's largely theoretical :)

[00:24:12.0000] <MikeSmith>
btw it's possible to plug a different parser into libxml2?

[00:24:32.0000] <hsivonen>
MikeSmith: not that I know of

[00:24:49.0000] <hsivonen>
MikeSmith: I was thinking of having a new entry point for parsing but returning a libxml2 tree

[00:24:56.0000] <MikeSmith>
ah OK

[00:25:36.0000] <hsivonen>
So my isScoping() and isSpecial() checks assume it’s impossible for those questions to be posed about foreign nodes

[00:25:51.0000] <hsivonen>
great optimization or horrible bug?

[00:27:05.0000] <zcorpan>
annevk: the original has the white background. i guess me being used to it makes me think it looks better with the white.

[00:27:26.0000] <zcorpan>
annevk: maybe i should ask divya, she likes bikesheds i heard

[00:28:10.0000] <MikeSmith>
wtf why does live dom viewer add a <style type="text/css"></style> node in that example?

[00:28:18.0000] <MikeSmith>
I never noticed it doing that before

[00:28:39.0000] <MikeSmith>
hsivonen: ↑

[00:29:07.0000] <hsivonen>
MikeSmith: what example? I see no style with 1910

[00:29:47.0000] <MikeSmith>
weird

[00:29:50.0000] <MikeSmith>
I do in Chrome

[00:30:08.0000] <MikeSmith>
<!DOCTYPE HTML><html><head><style type="text/css"></style></head><body><ruby><button><rp></rp></button></ruby></body></html>

[00:31:20.0000] <hsivonen>
ooh. not a horrible bug. just a more clever optimization elsewhere

[00:31:27.0000] <MikeSmith>
chrome dev-version bug I guess

[00:31:38.0000] <hsivonen>
I’m so old I forget what code I have written

[00:32:03.0000] <zcorpan>
MikeSmith: can't reproduce in 24.0.1312.5 dev

[00:32:15.0000] <MikeSmith>
zcorpan: crazy

[00:32:19.0000] <MikeSmith>
that's what I'm running too

[00:32:27.0000] <zcorpan>
MikeSmith: any addons?

[00:32:38.0000] <MikeSmith>
ah yeah

[00:32:47.0000] <MikeSmith>
several

[00:32:53.0000] <MikeSmith>
lemme try turning some off

[00:33:09.0000] <MikeSmith>
ah

[00:33:15.0000] <MikeSmith>
Adblock

[00:34:16.0000] <hsivonen>
MikeSmith: so all in all, I have just the <dd><optgroup><dd> bug to fix from the paywalled paper?

[00:34:28.0000] <zcorpan>
so adblock advertises its presence to the page

[00:35:56.0000] <MikeSmith>
hsivonen: yes, just that one bug

[00:36:06.0000] <MikeSmith>
zcorpan: I guess so

[00:36:25.0000] <MikeSmith>
I just starting using Adblock today

[00:37:01.0000] <zcorpan>
annevk: how are the pngs created?

[00:42:14.0000] <annevk>
http://www.fileformat.info/convert/image/svg2raster.htm with 500x500

[00:42:35.0000] <annevk>
I guess I should add a README.md for that

[00:44:35.0000] <SimonSapin>
annevk: how about using http://cairosvg.org/ ? :)

[00:44:41.0000] <annevk>
zcorpan: btw, (hope you read the logs), you can omit "," in a path if the next character is a "-"

[00:44:59.0000] <annevk>
SimonSapin: why download something if I can use the web?

[00:45:30.0000] <hsivonen>
annevk: what do you need the bitmaps for?

[00:45:51.0000] <SimonSapin>
annevk: why depend on a service if you can run stuff locally?

[00:46:25.0000] <annevk>
hsivonen: twitter

[00:46:42.0000] <annevk>
SimonSapin: because they're easier

[00:46:48.0000] <SimonSapin>
ok

[00:47:07.0000] <SimonSapin>
whatever works for you :)

[00:48:12.0000] <SimonSapin>
MikeSmith: "btw it's possible to plug a different parser into libxml2?" maybe not in libxml2, but in lxml yes. See http://lxml.de/html5parser.html

[00:48:52.0000] <MikeSmith>
yeah that I knew

[00:49:42.0000] <annevk>
zcorpan: see logs

[00:49:47.0000] <zcorpan>
yep

[00:49:56.0000] <annevk>
biab

[00:49:58.0000] <SimonSapin>
zcorpan: "so polyglot could instead be Guidelines for Spec Writers Using Anolis With Libxml2 Instead Of Html5lib" is that libxml2’s XML parser, not HTML? I know the latter is not quite html5 but is it that bad?

[00:50:20.0000] <SimonSapin>
(it’s what I use in WeasyPrint)

[00:50:43.0000] <zcorpan>
SimonSapin: html

[00:51:07.0000] <SimonSapin>
so how is polyglot relevant?

[00:51:38.0000] <hsivonen>
SimonSapin: apparently having explicit end tags helps the HTML parser in libxml2

[00:51:39.0000] <zcorpan>
SimonSapin: http://intertwingly.net/blog/2012/11/09/In-defence-of-Polyglot

[00:53:13.0000] <zcorpan>
however i think libxml2 also screws up hex character references (so the non-normative column in the entities table in the spec is wrong)

[00:53:28.0000] <zcorpan>
but the polyglot spec doesn't discuss any solutions to that problem

[00:54:30.0000] <zcorpan>
the html5 editors seem to have chosen "use html5lib" as the solution; i'm not sure if they care about it being slow

[00:59:39.0000] <zcorpan>
annevk: svg2raster is too slow for me on the train

[01:01:35.0000] <hsivonen>
annevk: boo for twitter not accepting SVG avatars

[01:04:20.0000] <MikeSmith>
"I'd like to propose as a constructive strategy not to flame/offend everybody right off the bat."

[01:04:23.0000] <MikeSmith>
too late for that

[01:20:33.0000] <hsivonen>
MikeSmith: context?

[01:21:09.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-webapps/2012OctDec/thread.html#msg430

[01:23:22.0000] <hsivonen>
ah.

[01:23:31.0000] <hsivonen>
/me expected something HTML-related

[01:34:23.0000] <annevk>
hsivonen: well, SVG is way more complex from a security pov, but yeah, they should fix that

[01:38:34.0000] <annevk>
zcorpan: I guess I can do that once I add the javascript logo for matjas

[01:39:39.0000] <zcorpan>
annevk: ok. thanks. i'm at the office now, but rasterizing the logos one by one from a web form seems boring

[01:40:26.0000] <SimonSapin>
zcorpan: well, you could use a local, scriptable tool :) … if you like

[01:47:25.0000] <hsivonen>
yay. still not resolved: https://www.w3.org/Bugs/Public/show_bug.cgi?id=13392 a bug arising from stating Leif’s preference rather than just the conclusions arising from other specs

[01:56:16.0000] <sangwhan>
Noob question, apart from being a effective tormenting agent for browser engineer one has a grudge against, what upsides *do* polyglot bring?

[01:56:35.0000] <sangwhan>
s/engineer one/engineers one/

[01:57:34.0000] <annevk>
zcorpan: just generating logo-dom.png and uploading it to twitter does not seem too bad

[01:57:59.0000] <zcorpan>
annevk: i changed the background on all logos except encoding

[01:58:39.0000] <annevk>
if it doesn't affect the twitter icon I don't think I'm going to bother either

[02:07:45.0000] <hsivonen>
sangwhan: no real upsides of its own. but there’s overlap between other sets of restrictions that have upsides and the polyglot set of restrictions.

[02:08:36.0000] <hsivonen>
sangwhan: for example, if you need explicit end tags to deal with libxml2, then polyglot has that upside

[02:08:51.0000] <hsivonen>
but also misses other relevant things and brings along a bunch of irrelevant things

[02:15:06.0000] <MikeSmith>
I thought for some people at least the original motivation was that they wanted to use XML toolchains to create their XHTML documents but IE did not handle application/xhtml+xml so they wanted their XHTML documents to work in IE when they served them as text/html

[02:15:53.0000] <sangwhan>
hsivonen: ok, that sort of makes sense - although that might not be a strong enough argument to convince people en masse

[02:22:45.0000] <MikeSmith>
hsivonen: about the validator stats, would it be worth adding stats on the input mechanisms -- address vs file upload vs text field?

[02:23:10.0000] <MikeSmith>
oh an also post with entity body

[02:23:28.0000] <MikeSmith>
if you think it's worth it I can try adding it

[02:29:08.0000] <annevk>
zcorpan: you could write your own web service using <canvas> that converts those images :)

[02:33:53.0000] <zcorpan>
annevk: that does seem less boring

[02:34:20.0000] <annevk>
I created http://resources.whatwg.org/logo-javascript.svg btw

[02:34:47.0000] <annevk>
and opened https://github.com/voodootikigod/logo.js/issues/32 for contributing it back to the original project

[02:34:53.0000] <annevk>
matjas: ^^

[02:35:35.0000] <MikeSmith>
annevk: you should use http://es5.github.com/js-mascot.svg instead

[02:38:49.0000] <annevk>
MikeSmith: heh

[02:43:41.0000] <annevk>
IETF does session recording a lot better than W3C, funny tha

[02:43:42.0000] <annevk>
t

[02:43:43.0000] <annevk>
http://ietf85.conf.meetecho.com/index.php/Recorded_Sessions

[02:43:49.0000] <annevk>
video + audio + minutes

[02:44:04.0000] <annevk>
with W3C you never know what was said unless you were there

[02:46:40.0000] <annevk>
jgraham: https://github.com/whatwg/javascript/issues/1

[03:16:39.0000] <annevk>
http://html5sec.org/#19 is interesting

[03:16:51.0000] <annevk>
didn't know supporting other Mac encodings can actually be a security risk

[03:42:53.0000] <hsivonen>
MikeSmith: nope, polyglot does not really help in the “I’ve got an XML serializer but want to support IE8” case

[03:43:28.0000] <hsivonen>
MikeSmith: if you have a use for the input stats, I don’t see any reason not to add those

[03:50:07.0000] <hsivonen>
hmm. why is Gecko passing zcorpan’s BOMless UTF-16 test...

[04:01:14.0000] <hsivonen>
the test doesn’t fail, because it doesn’t get run

[04:02:21.0000] <matjas>
logo suggestion for domparsing.spec.whatwg.org: <dom/>

[04:02:48.0000] <matjas>
and for XHR: “!Ajax”

[04:04:07.0000] <hsivonen>
anomalous – Ms2ger is not on IRC

[04:04:08.0000] <annevk>
heh

[04:11:35.0000] <annevk>
matjas: preferably non-text in a way that works with ? or a circle

[04:12:07.0000] <annevk>
hsivonen: he's studying, only online during the evenings and weekends I think

[04:24:32.0000] <zcorpan>
hsivonen: bug in the test?

[04:27:44.0000] <zcorpan>
annevk: the JS logo seems a bit dull :-/

[04:28:44.0000] <annevk>
don't let it keep you up

[04:34:35.0000] <zcorpan>
annevk: how about a mashup between the whatwg logo and the dutch ajax logo?

[04:35:25.0000] <annevk>
zcorpan: for XMLHttpRequest?

[04:35:30.0000] <zcorpan>
yeah

[04:35:37.0000] <annevk>
zcorpan: I think that could work

[04:35:47.0000] <annevk>
kinda obscure and fun

[04:35:54.0000] <annevk>
zcorpan: make it :)

[04:38:58.0000] <zcorpan>
copyright might be slightly problematic. not sure we want to rely on "fair use"s

[04:39:06.0000] <zcorpan>
s/s//

[04:39:59.0000] <zcorpan>
http://en.wikipedia.org/wiki/File:Ajax_Amsterdam.svg

[04:40:46.0000] <zcorpan>
LimeChat tries to show that url as an inline image and fails

[04:41:49.0000] <zcorpan>
i guess i can make a new logo resembling it

[04:58:26.0000] <Ms3ger>
hsivonen: you called, sir?

[04:59:00.0000] <annevk>
zcorpan: I suspect LimeChat of doing file extension sniffing

[04:59:13.0000] <zcorpan>
annevk: yeah

[05:00:52.0000] <hsivonen>
Ms3ger: it seems the test suite import script doesn’t generate the appropriate ^headers^ files

[05:01:09.0000] <hsivonen>
for *.bogus.css and *.windows1250.css

[05:02:26.0000] <hsivonen>
Ms3ger: should it, or should the HTTP server be changed to recognize .bogus. and .windows1250. ?

[05:02:28.0000] <Ms3ger>
Ah

[05:02:50.0000] <Ms3ger>
Mm, how do they work upsteam? htaccess?

[05:04:21.0000] <hsivonen>
Ms3ger: .htaccess, I believe

[05:05:03.0000] <Ms3ger>
/me thinks

[05:09:56.0000] <Ms3ger>
hsivonen: could you send me an email? I can probably try to fix it tonight

[05:10:39.0000] <hsivonen>
Ms3ger: ok

[05:12:26.0000] <Ms3ger>
Thanks

[05:21:05.0000] <zcorpan>
some images in https://github.com/joyent/node/pull/1580 are bitrotting :-(

[05:21:06.0000] <hsivonen>
Excercise: Apply Mark Pilgrim’s taxonomy of developers to this case: http://code.google.com/p/chromium/issues/detail?id=94369

[05:39:48.0000] <zcorpan>
does the whatwg list prune attachments?

[05:41:03.0000] <annevk>
hsivonen: ah, the old argument of one URL per resource, or one for many

[05:41:39.0000] <annevk>
zcorpan: dunno, you could test

[05:41:56.0000] <annevk>
but better to link to resources

[05:42:09.0000] <zcorpan>
boris claimed he had attached a test case but i don't see it

[05:43:27.0000] <annevk>
hsivonen: reading a bit on it seems to be about content negotiation, the thing that trips up anyone everywhere

[06:35:56.0000] <GPHemsley>
annevk: I look at the spec locally when I'm editing it.

[06:36:01.0000] <jarek>
Hi

[06:36:14.0000] <jarek>
SVG 2 spec says that you can specify fill like this:

[06:36:16.0000] <jarek>
fill="#MyLightPurple"

[06:36:38.0000] <jarek>
but how does parser can know whether the fill  value is IRI reference or hex color?

[06:37:00.0000] <jarek>
e.g. if fill="#ffffff"

[06:37:14.0000] <GPHemsley>
matjas, MikeSmith: Shouldn't bugs be filed in Bugzilla, not on GitHub?

[06:37:23.0000] <matjas>
GPHemsley: why?

[06:37:43.0000] <GPHemsley>
matjas: Because that's where the bugs for all the other specs are filed...

[06:37:57.0000] <matjas>
GPHemsley: but I’m much more comfortable with the GitHub Issues UI

[06:45:19.0000] <annevk5>
fwiw, GitHub issues is fine

[06:46:35.0000] <annevk5>
maybe we find out it works better and want to use it elsewhere

[06:47:41.0000] <annevk5>
jarek: no need to wrap it in url()?

[06:48:21.0000] <jarek>
annevk5: SVG2 spec says "Paint servers are used by including an IRI reference in a ‘fill’ or ‘stroke’ property (i.e. fill="#MyLightPurple")."

[06:49:40.0000] <annevk5>
jarek: seems like a bug in the example

[06:50:02.0000] <jarek>
annevk5: also, on WebKit $element.style.fill always returns IRI references without url(), is this standard behavior?

[06:51:57.0000] <annevk5>
also seems bogus, but TabAtkins might know more

[06:52:22.0000] <annevk5>
connection is kinda flaky :/

[06:54:25.0000] <GPHemsley>
annevk5, matjas: Well, one of the downsides is that we're all subscribed to everything by default.

[06:54:56.0000] <matjas>
GPHemsley: that’s easy to fix, no?

[06:55:12.0000] <annevk5>
sure, I unsubscribed

[06:55:14.0000] <GPHemsley>
annevk5, matjas: Bugzilla has much better user/e-mail management in general, IMO

[06:55:56.0000] <annevk5>
matjas is doing the work and wants to try something else

[06:56:20.0000] <matjas>
thanks for understanding, annevk5 :)

[06:56:24.0000] <annevk5>
he does the work and that is all there is to it imo

[06:56:39.0000] <matjas>
sorry for the inconvenience, GPHemsley

[06:56:42.0000] <GPHemsley>
/me shrugs

[06:58:44.0000] <GPHemsley>
meanwhile, the repo itself isn't being used?

[06:59:24.0000] <hsivonen>
GPHemsley: should I resend the feedback I wrote on bugzilla to the mailing list?

[06:59:48.0000] <GPHemsley>
hsivonen: Couldn't hurt

[06:59:54.0000] <hsivonen>
GPHemsley: ok

[07:00:46.0000] <hsivonen>
meanwhile: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19925

[07:01:39.0000] <GPHemsley>
No, Firefox; just because a site forces me to download a file does not mean I have "chosen to open" it.

[07:06:10.0000] <Smylers>
matjas: Small correction: in http://mathias.html5.org/specs/javascript/#annex-b the 3rd bullet point (escape) is already covered by the 2nd one (escape and unescape).

[07:07:41.0000] <matjas>
Smylers: whoops, fixed

[07:08:11.0000] <hsivonen>
Importing testharness.js tests is harder than I expected.

[07:09:12.0000] <hsivonen>
I’d probably have spent less time manually repurposing zcorpan’s tests as mochitests than I’ve now spent trying to grok the import process. :-(

[07:10:23.0000] <annevk>
GPHemsley: Look, we're not trying to reach uniformity in specification development. We are trying to document the web (and sometimes beyond) and people have different approaches to doing so.

[07:10:50.0000] <GPHemsley>
annevk: So... the non-use of the repo was on purpose?

[07:10:53.0000] <annevk>
GPHemsley: If we put restrictions on what they can do, they might not do it altogether or we end up where in 2012 we still publish in text/plain ASCII (as a matter of saying)

[07:11:53.0000] <annevk>
GPHemsley: We lack rules (other than being civil) on purpose. Lacking rules facilitates innovation and people having a chance to do what they came here to do.

[07:12:34.0000] <annevk>
GPHemsley: The non-use of the repo is temporary as I understand it. It will be used and http://javascript.spec.whatwg.org/ too within the next few days.

[07:12:43.0000] <GPHemsley>
OK, that's all I was asking.

[07:12:45.0000] <hsivonen>
/me wonders if MP3 is the new text/plain. if the IETF uses XMPP instead of IRC in order to eat their own dogfood, shouldn’t they use Opus instead of MP3 to eat their own dogfood, too.

[07:13:19.0000] <annevk>
GPHemsley: I thought I should elaborate on my earlier "let matjas do as he pleases", sorry if it went a bit too far :)

[07:13:34.0000] <hsivonen>
at least MP3 does not sound as bad as text/plain looks

[07:14:16.0000] <GPHemsley>
hsivonen: Though I did have trouble attempting to listen to it in-browser; haven't investigated why that was, though.

[07:14:27.0000] <GPHemsley>
annevk: S'ok

[07:17:26.0000] <zcorpan_>
hsivonen: :-( why is it hard?

[07:18:36.0000] <jgraham>
/me hopes this is "because I haven't done it before"

[07:19:16.0000] <jgraham>
Maybe it could be a web service of some sort?

[07:22:58.0000] <hsivonen>
jgraham: because I can’t import failures from the try run

[07:23:21.0000] <hsivonen>
jgraham: because the failure setup script doesn’t behave like the README seems to say

[07:23:38.0000] <hsivonen>
jgraham: or because our build system changed and the log format is now different

[07:23:52.0000] <hsivonen>
jgraham: because .bogus. is not automagic

[07:24:35.0000] <hsivonen>
jgraham: because Ms2ger forgot one Makefile line in his patch that I expected to have that sort of thing covered

[07:25:20.0000] <hsivonen>
jgraham: because syncing the tree leads to a "REBUILD ALL THE THINGS" sort of phenomenon

[07:30:31.0000] <jgraham>
hsivonen: I am not entirely sure, but it sounds like bugs rather than an intrinsic problem?

[07:30:50.0000] <zcorpan_>
.bogus. not being automagic, i.e. .htaccess not working for you, seems like something we should resolve in some way. not sure how.

[07:31:28.0000] <zcorpan_>
the other issues seem less actionable from my and jgraham's perspective

[07:32:45.0000] <zcorpan_>
.htaccess works for opera, microsoft, w3c. but mozilla and webkit don't use an apache server for testing currently

[07:42:20.0000] <hsivonen>
zcorpan_: I didn’t mean to suggest these problems were actionable by you or jgraham

[07:42:53.0000] <zcorpan_>
hsivonen: yeah i understand that

[07:43:32.0000] <zcorpan_>
hsivonen: we're interested in improving the situation with tests, so it's good to know what the issues are

[08:52:50.0000] <GPHemsley>
Hmm... either Gecko doesn't allow SVG as favicons, or I broke something.

[08:58:10.0000] <GPHemsley>
hsivonen: I responded.

[09:33:40.0000] <GPHemsley>
/me wonders why html5lib rearranges the attributes on <link>

[09:34:51.0000] <SimonSapin>
 GPHemsley: are the attributes in a dictionary? Python dicts are unordered

[09:34:51.0000] <GPHemsley>
wait... html5lib alphabetizes the attributes? o_0

[09:35:28.0000] <GPHemsley>
SimonSapin: Nope, they are definitely alphabetized.

[09:35:39.0000] <GPHemsley>
alt height src width

[09:35:50.0000] <GPHemsley>
href rel type

[09:41:12.0000] <gsnedders>
GPHemsley: html5lib does not guarantee attribute order

[09:41:31.0000] <gsnedders>
GPHemsley: Any order is purely coincidental.

[09:41:35.0000] <GPHemsley>
riiiight

[09:41:43.0000] <gsnedders>
(Different tree-builders give different orders)

[09:41:58.0000] <GPHemsley>
ah

[09:42:07.0000] <gsnedders>
(Fundementally we cannot because none of the third-party tree-builders we rely on don't!)

[09:42:17.0000] <gsnedders>
s/don't/do/

[09:42:31.0000] <GPHemsley>
I see

[09:54:15.0000] <jsbell>
Anyone know why ArrayBuffers are not one of the types enumerated in the structured clone algorithm? http://www.w3.org/TR/html5/common-dom-interfaces.html#safe-passing-of-structured-data

[09:54:50.0000] <jsbell>
i.e. was there discussion which led to them being excluded, or has the algorithm just not been updated since WebGL landed?

[09:55:33.0000] <gsnedders>
"If input is an object that another specification defines how to clone"

[09:55:40.0000] <gsnedders>
The Typed Array specification defines it.

[09:56:00.0000] <GPHemsley>
I have to say... SVG syntax is extremely opaque

[09:56:01.0000] <jsbell>
Ah, yes.

[09:56:17.0000] <gsnedders>
(It was previously in HTML, I believe)

[09:56:29.0000] <jsbell>
thx

[10:00:28.0000] <gsnedders>
GPHemsley: fantasai was wanted a guaranteed-order for attributes, FWIW. I think insertion order.

[10:01:08.0000] <GPHemsley>
gsnedders: if "insertion order" means "the way I typed it", then I concur

[10:01:48.0000] <dglazkov>
good morning, Whatwg!

[10:02:16.0000] <gsnedders>
GPHemsley: document order

[13:24:06.0000] <SimonSapin>
lang="en-US-x-Hixie" humm…

[13:28:15.0000] <FireFly>
SimonSapin: see http://ian.hixie.ch/bible/english :p

[13:44:52.0000] <bholley>
abarth: yt?

[13:45:21.0000] <annevk>
GPHemsley: I recommend browsers not supporting SVG as favicon as a bug in that browser and not working around it, but up to you

[13:46:54.0000] <abarth>
bholley: hi

[13:47:26.0000] <bholley>
abarth: hey, so I've been talking with bz, mrbkap, and jst about the Location stuff

[13:47:42.0000] <abarth>
ok

[13:49:17.0000] <bholley>
abarth: the general consensus is that people want to land it, given that we have the patches ready, and given that there's currently no accord among different UAs and the spec

[13:49:50.0000] <bholley>
abarth: and try to get in touch with MS in parallel to see what their position is

[13:50:26.0000] <abarth>
bholley: that sounds like a reasonable choice from your perspective

[13:51:02.0000] <abarth>
I doubt that anyone from MS would object to your making Gecko more like Trident

[13:51:08.0000] <bholley>
abarth: I don't want to be a jerk about it though :-(

[13:51:40.0000] <bholley>
abarth: it's just not clear to me how to resolve the current impasse here

[13:52:53.0000] <abarth>
bholley: the impasse is only that the different engines are constructed differently, so the engineering tradeoffs are different

[13:53:37.0000] <abarth>
its good that we have diversity in implementations, but it does lead to situations like this where what's of benefit to one engine is a cost to another

[13:53:57.0000] <abarth>
I don't think you should feel bad about aligning gecko's behavior with IE and opera

[13:54:05.0000] <bholley>
abarth: right. And Gecko's in a position to tilt the ship one way or another by throwing its weight a given direction, whereas WebKit isn't

[13:54:46.0000] <abarth>
my guess is that we won't change WebKit to match here unless there is a compatibility reason to do so

[13:54:54.0000] <abarth>
the engineering costs are pretty high

[13:55:06.0000] <abarth>
its possible that as ECMAScript evolves, the costs will get lower

[13:55:09.0000] <bholley>
abarth: yeah. It doesn't seem like a very high-priority issue

[13:55:11.0000] <abarth>
e.g., with harmony proxies and such

[13:55:26.0000] <bholley>
abarth: similar to aligning on document.domain behavior

[13:55:39.0000] <bholley>
abarth: (per the spec issue I raised a few months ago - similar roots in our different implementations)

[13:57:39.0000] <abarth>
document.domain I feel more passionate about :)

[13:58:11.0000] <abarth>
the consequences of changing its behavior are more likely to cause compatibility problems

[13:58:21.0000] <abarth>
(and I want the API to die in a fire) :)

[13:58:26.0000] <bholley>
abarth: heh, yeah

[13:58:43.0000] <bholley>
abarth: While we're talking, do you have any thoughts on the revocation issue?

[13:59:29.0000] <bholley>
abarth: per http://lists.w3.org/Archives/Public/public-script-coord/2012AprJun/0120.html

[14:03:42.0000] <abarth>
there's very little chance that we'd implement revocation in WebKit

[14:03:46.0000] <abarth>
its not actually needed for security

[14:03:55.0000] <abarth>
and we don't have any mechanism with which to implement it

[14:04:15.0000] <bholley>
abarth: do you think it's problematic to be unaligned here?

[14:04:56.0000] <abarth>
yes, i'd much prefer user agents to interoperate, especially on security checks

[14:06:41.0000] <bholley>
abarth: so the issue is that WebKit has no way to keep track of cross-scope references?

[14:07:02.0000] <abarth>
WebKit has no wrappers

[14:07:10.0000] <abarth>
especially not CrossOriginWrappers

[14:07:23.0000] <bholley>
abarth: they're just raw JS refs?

[14:18:47.0000] <jgraham>
Lack of interop. on th ocation object would be sadness

[14:18:53.0000] <jgraham>
*the location

[14:45:06.0000] <annevk>
jgraham: Opera caused lack of interop on IDNA

[14:45:10.0000] <annevk>
jgraham: not sure which is worse

[14:48:31.0000] <annevk>
for those interested in IDNA, http://www.alvestrand.no/pipermail/idna-update/2012-November/date.html has the "good" stuff

[14:49:39.0000] <annevk>
it's kinda sad IDNA is not a solved problem by now, but it's interesting enough

[15:02:36.0000] <zcorpan>
annevk: WIP http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1911

[15:03:26.0000] <annevk>
genius

[15:04:11.0000] <zcorpan>
with this in the textarea:

[15:04:17.0000] <zcorpan>
M17,66C21,63,43,76,37,68

[15:04:17.0000] <zcorpan>
M33,75a8,8,0,0,16,8

[15:04:17.0000] <zcorpan>
M50,84C68,49,57,90,63,77,

[15:04:18.0000] <zcorpan>
66,58,75,87,71,69,

[15:04:20.0000] <zcorpan>
68,62,74,65,78,66

[15:04:22.0000] <zcorpan>
M65,62C57,64,64,71,67,64

[15:04:24.0000] <zcorpan>
M47,60L43,69,44,69,51,66

[15:04:26.0000] <zcorpan>
M50,52C47,60,53,54,52,60,

[15:04:28.0000] <zcorpan>
50,68,62,60,57,62,

[15:04:30.0000] <zcorpan>
58,54,65,60,59,54,

[15:04:32.0000] <zcorpan>
48,42,20,25,29,37

[15:06:38.0000] <annevk>
neat

[15:07:05.0000] <annevk>
you're better than I am at this

[15:07:33.0000] <annevk>
my skills fall apart when things go round :-)

[15:07:48.0000] <annevk>
"skills"

[15:11:10.0000] <zcorpan>
if you look at where the points go in a bezier curve, you kinda know where to click, and then i just tweak the values a bit

[15:12:25.0000] <annevk>
make a short documentary, "Creation of the XMLHttpRequest logo"

[15:12:32.0000] <annevk>
/me would watch it

[15:15:15.0000] <zcorpan>
"instead of using a proper authoring tool i hacked together my own, inefficient, and annoying-to-use "tool" in live dom viewer"

[15:16:04.0000] <zcorpan>
maybe i should work on an svg authoring tool that sucks less

[15:17:53.0000] <annevk>
"use Live DOM Viewer for all the things"

[15:17:56.0000] <annevk>
I do that too

[15:18:08.0000] <gsnedders>
x-x-big5 not in HTML in any more?

[15:18:15.0000] <annevk>
sometimes I need to write some HTML, so I open Live DOM Viewer

[15:19:28.0000] <annevk>
gsnedders: HTML is going to use http://encoding.spec.whatwg.org/

[15:21:20.0000] <gsnedders>
Sorry, 386 occuring.

[15:21:30.0000] <Hixie>
the quirk and encoding logos are still the best ones

[15:39:11.0000] <zcorpan>
annevk: quirks.spec doesn't seem to update

[15:58:43.0000] <GPHemsley>
annevk: It was my own personal workaround, especially since the PNG was already there. I can certainly file a browser bug on the issue, though.


2012-11-13
[19:22:49.0000] <GPHemsley>
Hixie: To confirm, I should nix sniffing archives specifically, but keep the rest?

[19:23:19.0000] <GPHemsley>
Or comment out the rest?

[19:54:13.0000] <GPHemsley>
Interesting...

[19:54:31.0000] <GPHemsley>
apparently tagging a <tr> with class=XXX adds an extra cell to the row

[19:56:00.0000] <GPHemsley>
...which seems to stem from having content :before

[21:10:49.0000] <navin>
hi

[21:12:10.0000] <navin>
hello

[21:56:07.0000] <kennyluck>
Was there ever a thread on whatwg talking about changing <img> to a non-void element?

[21:56:37.0000] <kennyluck>
I am being asked by some folks about this idea. I am pretty sure it's a crazy idea, but it would be nice to share some old discussions of course.

[22:06:55.0000] <Aniruddh>
Hi

[22:24:03.0000] <Aniruddh>
Welcome to #whatwg dbaron

[22:24:20.0000] <kennyluck>
orz

[22:25:13.0000] <dbaron>
Aniruddh, it's better not to welcome individual people (especially when you don't know them); many people have IRC clients configured to join many channels at once, and asking for their attention is unnecessary.

[22:26:12.0000] <Aniruddh>
Welcome to #whatwg Somatt_wrk

[22:29:35.0000] <Aniruddh>
Welcome to #whatwg ehsan

[22:30:00.0000] <Aniruddh>
Welcome to #whatwg tomasf

[22:30:10.0000] <gavin>
Aniruddh: are you a bot?

[22:33:12.0000] <Aniruddh>
Welcome to #whatwg yoshiaki

[22:33:54.0000] <yoshiaki>
thank you, Aniruddh

[22:46:20.0000] <Aniruddh>
Welcome to #whatwg mattgifford

[22:47:58.0000] <Aniruddh>
Welcome to #whatwg Transfusion

[22:48:10.0000] <Aniruddh>
Welcome to #whatwg maikmerten

[22:48:29.0000] <Aniruddh>
Welcome to #whatwg Mr-ex777

[22:50:45.0000] <Aniruddh>
Welcome to #whatwg capella

[22:51:43.0000] <capella>
/me mozillians be there

[22:52:28.0000] <Aniruddh>
Welcome to #whatwg jayne

[22:53:29.0000] <Aniruddh>
Welcome to #whatwg mattgifford

[22:53:49.0000] <Aniruddh>
Welcome to #whatwg yoshiaki

[22:55:10.0000] <MikeSmith>
Hixie: if you have a second can you maybe please kick Aniruddh

[22:55:23.0000] <MikeSmith>
seems like it must be some bot

[22:58:23.0000] <hsivonen>
twisting polyglot enough to lose the endorsement of TAG members? https://www.w3.org/Bugs/Public/show_bug.cgi?id=19925#c7

[22:59:57.0000] <Aniruddh>
Hi

[23:00:07.0000] <Aniruddh>
Sorry, I had bot mode activated

[23:00:17.0000] <Aniruddh>
I was afk

[23:05:05.0000] <MikeSmith>
hsivonen: clearly the solution here is, we need two specs: one "HTML/XHTML Compatibility Authoring Guide" and one "Robust Profile for Documents which Compensates for Imperfect Parsers" https://www.w3.org/Bugs/Public/show_bug.cgi?id=19925#c9

[23:08:31.0000] <annevk>
zcorpan: looks updated to me

[23:09:05.0000] <annevk>
zcorpan: I think GitHub had some issues yesterday, might be a hickup on their end

[23:22:27.0000] <MikeSmith>
btw I added collection of statistics on POST input type (textarea vs file input vs entity-body) to the validator statistics code

[23:25:35.0000] <MikeSmith>
hsivonen: looking at the stats for validator.nu vs html5.validator.nu it seems like they're being used quite differently

[23:26:23.0000] <MikeSmith>
e.g., GET-based input for validator.nu is only 6%

[23:27:23.0000] <MikeSmith>
also 89% JSON output

[23:27:53.0000] <MikeSmith>
which would seem to be from some third-party service

[23:27:55.0000] <MikeSmith>
or services

[00:01:03.0000] <hsivonen>
MikeSmith: I suspect the main user of validator.nu is Roger Johansson’s Firefox extension, but that’s just a guess

[00:02:11.0000] <MikeSmith>
OK

[02:12:40.0000] <matjas>
ok, http://mathias.html5.org/specs/javascript/ 301s to http://javascript.spec.whatwg.org/

[02:27:24.0000] <annevk>
matjas: btw, if you want you can use the new xref repository

[02:27:40.0000] <annevk>
matjas: https://github.com/whatwg/xref

[02:27:48.0000] <annevk>
matjas: specification-data is no longer maintained

[02:28:04.0000] <annevk>
matjas: see the other specs for how to make Anolis use it

[02:28:04.0000] <darobin>
ah, that's good to know for my integration project too

[02:28:19.0000] <annevk>
darobin: ah yeah, was meaning to ping you about that at some point

[02:28:30.0000] <annevk>
darobin: and maybe figure out if I can patch Anolis to make it all work somehow

[02:28:52.0000] <darobin>
annevk: no worries, I'm rather far behind on actually putting that together tbh

[02:29:27.0000] <darobin>
I'd initially planned to do that during TPAC, but TTWF folks seemed to want a WebIDL.js update more

[02:31:47.0000] <matjas>
annevk: thanks, will do

[02:31:50.0000] <matjas>
annevk: btw how/when does javascript.spec.whatwg.org get updated? are you using GitHub hooks for that, or what?

[02:32:07.0000] <annevk>
matjas: yes, see the admin panel

[02:32:23.0000] <annevk>
matjas: a shell script fetches index.html from GitHub

[02:32:41.0000] <annevk>
matjas: note that using whatwg/xref requires updating Anolis

[02:33:02.0000] <matjas>
lol @ cgi-script URL

[04:16:10.0000] <zcorpan>
http://resources.whatwg.org/logo-xhr.svg

[04:19:18.0000] <beverloo>
haha

[04:19:27.0000] <beverloo>
not everone may get that reference :)

[04:20:35.0000] <zcorpan>
that's fine

[04:21:53.0000] <zcorpan>
wonder why firefox doesn't render all lines

[04:22:37.0000] <kennyluck>
Is there any presentation in http://wiki.whatwg.org/wiki/Presentations that talks about why folks should participate in the Standards community?

[04:23:12.0000] <zcorpan>
hmm seems that page hasn't been updated lately :-(

[04:25:36.0000] <zcorpan>
kennyluck: quick scan suggests no

[04:25:47.0000] <zcorpan>
kennyluck: what's the audience?

[04:25:54.0000] <kennyluck>
zcorpan, hmm OK thanks.

[04:26:07.0000] <kennyluck>
I am going to do a video presentation on Sunday to kids so I am brainstorming on how to persuade them to join these kids of effort.

[04:26:18.0000] <kennyluck>
You know, kids like to create apps.

[04:27:19.0000] <kennyluck>
Perhaps I would say saying in this line "by contributing to standards, you are for sure not doing any make work (meaning that Standards never fails). "

[04:27:43.0000] <kennyluck>
s/kids of effort/kinds of effort/

[04:28:22.0000] <zcorpan>
"If you want to be in the Time Wasting Business, choose Standards!"

[04:28:45.0000] <kennyluck>
*shrug*

[04:30:46.0000] <zcorpan>
maybe point out that it's easier to contribute than they might think, and that it's not a magic castle

[04:31:44.0000] <zcorpan>
i mean, it's easier to get involved than they might think. getting what they want done get done might be harder than they think

[04:32:33.0000] <kennyluck>
Yeah, that makes sense.

[04:33:13.0000] <jgraham>
It's not a magic castle?

[04:33:17.0000] <jgraham>
/me cries

[05:08:01.0000] <zcorpan>
seems i hit https://bugzilla.mozilla.org/show_bug.cgi?id=629897

[05:17:20.0000] <kennyluck>
zcorpan, yeah, I think the rule here is that you can't have a comma before a command.

[05:17:47.0000] <zcorpan>
opera and webkit ignore the comma

[05:19:16.0000] <zcorpan>
it seems like a silly restriction. d="" allows you to omit commands, commas, zeros, spaces, and do all sorts of things, but is unforgiving when it comes to an *extra* comma

[05:25:25.0000] <zcorpan>
is "const" specified yet?

[05:32:32.0000] <MikeSmith>
zcorpan: just replied to that bug

[05:33:00.0000] <MikeSmith>
I guess to fix this I get to become the maintainer for the SVG 1.1 schema

[05:33:17.0000] <MikeSmith>
since the SVG WG refuses to take any responsibility for it

[05:35:08.0000] <MikeSmith>
ah great

[05:35:49.0000] <MikeSmith>
attribute d { PathData.datatype }

[05:35:54.0000] <MikeSmith>
PathData.datatype = xsd:string

[05:36:01.0000] <MikeSmith>
gotta love the precision there

[05:36:42.0000] <zcorpan>
anything goes?

[05:36:53.0000] <MikeSmith>
yeah

[05:37:06.0000] <zcorpan>
excellent

[05:37:27.0000] <kennyluck>
zcorpan, (re. opera and webkit ignore the comma) That's not quite true either, you can't put a comma but a space after a command in WebKit and Opera, so… *shrug*

[05:37:35.0000] <MikeSmith>
$ grep "datatype =" * | wc -l

[05:37:39.0000] <MikeSmith>
52

[05:37:49.0000] <MikeSmith>
$ grep "datatype =" * | grep "xsd:string" | wc -l

[05:37:54.0000] <MikeSmith>
45

[05:37:57.0000] <zcorpan>
kennyluck: ok

[05:38:41.0000] <zcorpan>
MikeSmith: so now you have something to work on eh?

[05:38:49.0000] <MikeSmith>
hah

[05:38:57.0000] <MikeSmith>
yeah

[05:43:40.0000] <MikeSmith>
oh god

[05:44:06.0000] <MikeSmith>
It's not even clear from the spec what the microsyntax of that d attribute is supposed to be

[05:44:14.0000] <MikeSmith>
http://www.w3.org/TR/SVG11/paths.html#DAttribute

[05:44:22.0000] <MikeSmith>
"The definition of the outline of a shape. See Path data."

[05:44:42.0000] <MikeSmith>
ok, so let's take a look at the definition of "Path data"

[05:44:50.0000] <MikeSmith>
http://www.w3.org/TR/SVG11/paths.html#PathData

[05:47:21.0000] <MikeSmith>
ah sweet

[05:47:22.0000] <MikeSmith>
http://www.w3.org/TR/SVGTiny12/paths.html#PathDataBNF

[05:48:06.0000] <zcorpan>
also http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes

[05:48:08.0000] <MikeSmith>
yes, let's define the allowed value for a attribute using BNF

[05:54:25.0000] <MikeSmith>
zcorpan: so what is it basically? just a comma-separated list of three items?

[05:55:11.0000] <zcorpan>
it's not necessarily comma-separated, but it's a flat list

[05:55:26.0000] <MikeSmith>
god almighty

[05:55:34.0000] <MikeSmith>
and the items in the list can have spaces in them?

[05:55:35.0000] <zcorpan>
you have a command, then something following it depending on what the command is

[05:55:41.0000] <zcorpan>
yes

[05:55:44.0000] <MikeSmith>
wow

[05:57:15.0000] <zcorpan>
it would be nice to have helpful error messages here, like "hey dude you have a comma here that i didn't expect, remove it" rather than "attribute "d" invalid"

[05:57:36.0000] <zcorpan>
i'm not sure what that implies in terms of impl

[05:57:57.0000] <zcorpan>
but i guess more of a parser than a regex

[05:58:09.0000] <jgraham>
Yeah, I was going to say :)

[05:59:32.0000] <MikeSmith>
well there's a way to use a regexp with capturing groups that allows further checking of the capturing groups

[05:59:52.0000] <MikeSmith>
it's what we're using to check datetime values for the time element

[05:59:58.0000] <zcorpan>
ok

[06:00:29.0000] <MikeSmith>
I wonder if anybody has written a regexp for svg path data already

[06:00:34.0000] <MikeSmith>
if so that'd be a start at least

[06:00:44.0000] <jgraham>
/me wonders if java has something more like parsec

[06:01:51.0000] <hsivonen>
about implied </p> being a feature: https://twitter.com/julien_igel/status/268175514261401601

[06:01:52.0000] <MikeSmith>
jgraham: don't know what parsec is but I doubt java has anything more than the matcher stuff we're using

[06:02:07.0000] <jgraham>
Haskell parser library

[06:02:21.0000] <jgraham>
Supposed to be good, but I haven't ever used it :)

[06:02:52.0000] <MikeSmith>
ok

[06:03:12.0000] <MikeSmith>
"An inline <div> is spelled <span> ever since HTML 4. "

[06:03:13.0000] <MikeSmith>
heh

[06:42:27.0000] <MikeSmith>
oh boy

[06:42:30.0000] <MikeSmith>
zcorpan: http://www.w3.org/Graphics/SVG/2002/01/pathdata.re

[06:45:18.0000] <hsivonen>
“now you have two problems”

[06:46:24.0000] <darobin>
hsivonen: it gets a lot more interesting if you use that regex in an XML Schema type :)

[06:48:06.0000] <MikeSmith>
do we have Dean to thank for that?

[06:48:07.0000] <MikeSmith>
http://tech.groups.yahoo.com/group/svg-developers/message/10650

[06:49:42.0000] <darobin>
MikeSmith: yeah, though IIRC there are later versions by me lying around

[06:49:57.0000] <MikeSmith>
ok

[06:50:57.0000] <darobin>
honestly though I really don't think that you want a regex here

[06:51:00.0000] <zewt>
hsivonen: only two?

[06:51:22.0000] <darobin>
this is substantially more complicated than datetime

[06:51:41.0000] <darobin>
or rather, it's substantially longer so providing good error reporting on a regex is going to be painful at best

[06:52:49.0000] <darobin>
it's not impossible that the current SVG RNG is based on the one I made a loooong time ago, if so I can probably help with tweaking

[06:52:55.0000] <darobin>
(assuming I recall how that stuff works)

[06:53:37.0000] <darobin>
you'll find that most of the attribute values are indeed strings because there's rarely much useful stuff you can do within the constraints of XSD simple types

[06:53:42.0000] <shepazu>
darobin: we'd love if you could help us with an RNG for SVG 2

[06:53:46.0000] <darobin>
(which is what RNG uses, or rather, what's implemented)

[06:54:21.0000] <darobin>
shepazu: that might be possible at some point :)

[06:59:48.0000] <MikeSmith>
what's the current home for anolis?

[06:59:52.0000] <MikeSmith>
Ms2ger: your repo?

[07:01:02.0000] <Ms2ger>
Yeah

[07:03:54.0000] <MikeSmith>
ok

[07:03:58.0000] <MikeSmith>
thanks

[07:16:25.0000] <MikeSmith>
zcorpan: I find http://xn--dahlstrm-t4a.net/svg/tools/scour/svg_regex.py from Erik

[07:16:41.0000] <MikeSmith>
which might be port-able

[07:17:02.0000] <MikeSmith>
and which seems to do at least some actual error reporting

[07:18:39.0000] <zcorpan>
yeah

[07:19:18.0000] <zcorpan>
wonder if it's up to date

[07:19:52.0000] <MikeSmith>
dunno but if it's not I'd guess Erik might could be convinced to update it

[07:21:32.0000] <matjas>
ping jgraham

[07:22:00.0000] <jgraham>
matjas: If this is about escapes, I don't think I know the answer :)

[07:22:17.0000] <matjas>
jgraham: ah, i was just wondering if you got the message or not

[07:22:39.0000] <matjas>
jgraham: fair enough. any idea where this requirement originates from?

[07:22:40.0000] <jgraham>
Yeah, sorry, I have been a bit behind on replying

[07:22:44.0000] <matjas>
no worries

[07:23:11.0000] <jgraham>
I have no memory of it at all. Did I actually add it to the original wiki page or was it someone else?

[07:23:38.0000] <matjas>
it was you :)

[07:23:43.0000] <jgraham>
Oh

[07:23:52.0000] <jgraham>
Maybe I had been hyponotized

[07:24:27.0000] <matjas>
http://wiki.whatwg.org/index.php?title=Web_ECMAScript&diff=3938&oldid=3798

[07:24:28.0000] <TabAtkins>
jarek, annevk: The IRI without url() behavior is totally bogus.  WebKit has several serialization bugs where the value obviously won't round-trip.

[07:25:14.0000] <matjas>
jgraham: ok, i’ll remove it then. thanks!

[07:26:30.0000] <TabAtkins>
darobin: Pathdata sounds like a relatively trivial regex to write, actually.  There's nothing optional, and the structure is simple.

[07:26:44.0000] <TabAtkins>
I could understand error-reporting being annoying, though.

[07:27:08.0000] <zcorpan>
TabAtkins: "There's nothing optional" doesn't sound right

[07:28:12.0000] <TabAtkins>
All of the path commands have a very strict syntax.

[07:28:50.0000] <darobin>
TabAtkins: I didn't mean that a regex matching it is hard (it isn't) but one that provides good error reporting is less fun

[07:29:10.0000] <TabAtkins>
I don't even know how you get "good error reporting" out of a regex.

[07:30:15.0000] <darobin>
you haven't done enough Perl :)

[07:30:23.0000] <TabAtkins>
This is true.

[07:32:04.0000] <MikeSmith>
TabAtkins: https://bitbucket.org/validator/syntax/src/default/relaxng/datatype/java/src/org/whattf/datatype/AbstractDatetime.java?at=default#cl-191

[07:32:19.0000] <Ms2ger>
You've done more than enough perl if you've never done perl

[07:33:21.0000] <darobin>
/me thought he heard some strange hissing sound. Weird.

[07:35:27.0000] <Ms2ger>
That must've been me spitting at the sound of "perl"

[07:36:37.0000] <darobin>
Ms2ger: I'd troll you back, but frankly with Python it just seems unfair

[07:41:51.0000] <MikeSmith>
hmm Java doesn't have anything like Python "yield"

[07:41:57.0000] <MikeSmith>
as far as I know

[07:42:33.0000] <MikeSmith>
(I mention because Erik's pathdata parser uses it)

[07:45:51.0000] <MikeSmith>
maybe the pathdata parsing code from Batik might be usable for validation

[07:46:47.0000] <darobin>
MikeSmith: googling around brings up some Java implementation of yield

[07:46:55.0000] <darobin>
(not sure if any of those is any good)

[07:46:58.0000] <MikeSmith>
ok

[07:47:20.0000] <darobin>
e.g. http://jimblackler.net/blog/?p=61

[07:47:32.0000] <MikeSmith>
thanks

[07:47:48.0000] <jgraham>
MikeSmith: Surely in java you wouldn't use that, but would use a class to store state

[07:48:19.0000] <jgraham>
/me doesn't really know how iteration in java typically works

[07:49:07.0000] <darobin>
jgraham: you cast a subclass of the iterator interface through using a pattern factory

[07:54:10.0000] <jgraham>
Can't tell if joking or java

[07:54:54.0000] <MikeSmith>
hah

[08:02:42.0000] <MikeSmith>
so http://svn.apache.org/repos/asf/xmlgraphics/batik/branches/svg11/sources/org/apache/batik/parser/PathParser.java looks like it might actually be useable as a starting point at least

[08:05:05.0000] <darobin>
MikeSmith: if you need help pinging heycam is prolly the right thing to do there

[08:05:14.0000] <MikeSmith>
ok

[08:41:54.0000] <dglazkov>
good morning, Whatwg!

[09:17:50.0000] <heycam>
MikeSmith, there's some info here on using Batik's parser classes: http://xmlgraphics.apache.org/batik/using/parsers.html

[09:26:32.0000] <[tm]>
heycam: thanks

[09:28:37.0000] <[tm]>
hoping i can repurpose some of that code without needing to depend on a bunch of other batik code

[09:29:19.0000] <[tm]>
the stuff in the abstract superclass

[09:31:52.0000] <heycam>
I can't remember how tightly it is entwined with the rest of it, but hopefully not too much

[09:33:50.0000] <[tm]>
anyway in trying to prioritize my choice of what to work on as far as my contributions to the validator code, a simple rule I've tried to follow is, if zcorpan files a bug, i try to fix it

[09:34:38.0000] <[tm]>
that rule has worked out pretty well so far

[09:34:40.0000] <heycam>
sounds like a fine strategy

[09:34:56.0000] <[tm]>
yeah

[09:35:29.0000] <jgraham>
That is also how Opera's bugtracker assigns priority

[09:35:36.0000] <jgraham>
(not really)

[09:35:45.0000] <jgraham>
(but maybe it should)

[10:31:10.0000] <GPHemsley>
annevk: Can you figure out what's going on with the encoding here? http://atlc.sourceforge.net/bmp.html#_toc381201084

[10:35:02.0000] <GPHemsley>
(The tagged encoding is clearly not correct.)

[10:46:24.0000] <GPHemsley>
/me wonders who it helps to have file format specs use C code instead of describing the bytes.

[10:46:43.0000] <jsbell>
hackers?

[11:19:28.0000] <Hixie>
GPHemsley: implementors, they can copy the data straight out

[12:29:03.0000] <Yuhong>
Just installed IE10 for Win7 Release Preview released today!

[12:29:47.0000] <Yuhong>
Results for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1905 in IE10 mode: false, true


2012-11-14
[16:52:57.0000] <Hixie>
TabAtkins: does an element htat is display:none ahve a computer 'color' ?

[16:52:58.0000] <Hixie>
er

[16:53:01.0000] <Hixie>
typo central

[16:53:20.0000] <Hixie>
TabAtkins: does an element that is 'display:none' have a computed value for its 'color' property?

[16:56:13.0000] <Hixie>
dbaron: you might know the answer too ^

[17:37:51.0000] <Hixie>
hm, @font-face in a worker

[17:37:52.0000] <Hixie>
damn

[17:40:06.0000] <Hixie>
well that puts a damper on things, doesn't it

[17:40:29.0000] <Hixie>
time to go home i think; good luck figuring this one out, future hixie.

[18:11:44.0000] <dbaron>
Hixie, I don't see any reason it would have a computed value

[19:10:16.0000] <zewt>
i hate working in reference-counted GC environments; idioms that you just expect to work don't

[19:30:19.0000] <annevk>
zcorpan: that logo is awesome

[19:31:31.0000] <Hixie>
which one?

[19:31:49.0000] <annevk>
http://resources.whatwg.org/logo-xhr.svg

[19:32:15.0000] <Hixie>
data:text/html,<style>body { font: 35em sans-serif;}</style><center>o_O

[19:32:59.0000] <annevk>
heh

[19:33:06.0000] <annevk>
see http://en.wikipedia.org/wiki/AFC_Ajax for context

[19:33:33.0000] <Hixie>
lol

[01:04:05.0000] <hsivonen>
annevk: Do you know of anyone implementing Encoding Standard-compliant converters that output UTF-8 and that are implemented in C/C++?

[01:51:08.0000] <zcorpan>
annevk: thanks

[02:21:17.0000] <zcorpan>
i wanted to +1 Hixie's email about [hidden] but didn't

[03:44:17.0000] <smaug____>
am I allowed to hate Ranges a bit

[03:47:01.0000] <jgraham>
No

[03:47:04.0000] <jgraham>
Only a lot

[03:54:48.0000] <MikeSmith>
I wonder who is was who coined the term "drive-by Web"

[04:00:17.0000] <hsivonen>
MikeSmith: what does the term mean?

[04:00:41.0000] <hsivonen>
annevk: maybe the Encoding Standard should have a security considerations section about stuff like https://bugzilla.mozilla.org/show_bug.cgi?id=408457#c99

[04:00:58.0000] <MikeSmith>
hsivonen: as far as I can tell it just means the Web

[04:01:48.0000] <MikeSmith>
but the people who use it do so in order to contrast the Web with something that's not the Web but that they don't actually have a name for

[04:02:14.0000] <MikeSmith>
so instead of naming that other thing, they call the Web the "drive-by Web"

[04:02:24.0000] <hsivonen>
/me wonders how the Web is drive-by

[04:02:40.0000] <MikeSmith>
this practice seems to be limited just to members of the Google Chrome engineering team

[04:02:57.0000] <hsivonen>
strange

[04:03:25.0000] <MikeSmith>
hsivonen: I suspect the term originally came from security discussion of "drive by" exploits on the Web

[04:03:29.0000] <jgraham>
So this means something like "web where SOP is the security model"

[04:03:42.0000] <MikeSmith>
jgraham: yeah, pretty much

[04:03:45.0000] <MikeSmith>
as far as I can tell

[04:04:01.0000] <jgraham>
As opposed to "non-web downloadable stuff that happens to reuse the web stack"

[04:04:08.0000] <MikeSmith>
yup

[04:04:42.0000] <MikeSmith>
anyway for the latest seen-in-the-wild usage of the term, see http://lists.w3.org/Archives/Public/public-webapps/2012OctDec/0470.html

[04:04:48.0000] <MikeSmith>
from Michael Nordman

[04:08:39.0000] <jgraham>
"drive-by web" makes me think of "drive-by shooting", which seems like the wrong image. It's more like the "drive-thru web".

[04:08:54.0000] <jgraham>
Or, if you don't like long names, "web"

[04:09:38.0000] <MikeSmith>
I have no idea what it has to do with driving at all.

[04:09:39.0000] <hsivonen>
should I start speaking about “drive-by UTF-16” instead of just “UTF-16”?

[04:09:40.0000] <zcorpan>
http://code.google.com/codesearch#search/&q=lang:%5Esgml$&type=cs

[04:09:48.0000] <MikeSmith>
hsivonen: heh

[04:10:11.0000] <zcorpan>
/me notices "HTML" isn't in the drop-down in google code search

[04:10:19.0000] <MikeSmith>
anyway I think they'd be a lot better off using "off Web" to their other thing

[04:10:40.0000] <jgraham>
Well it sounds like the metaphor is supposed to be something that is an point on a journey.

[04:11:09.0000] <MikeSmith>
ok

[04:11:36.0000] <zcorpan>
hsivonen: do we have data about how much utf-16 content there is?

[04:11:40.0000] <MikeSmith>
zcorpan: yeah I wonder what the rationale is for not providing HTML search

[04:11:46.0000] <hsivonen>
zcorpan: I don’t

[04:11:52.0000] <zcorpan>
MikeSmith: lang:html in the search box works, though

[04:12:01.0000] <MikeSmith>
oh

[04:12:18.0000] <zcorpan>
but SGML being in the drop-down is pretty surprising

[04:13:42.0000] <zcorpan>
http://w3techs.com/technologies/details/en-utf16/all/all

[04:14:09.0000] <hsivonen>
Gives a good impression about a security org to have "confidential" written in the footer of each page of a PDF available by simple HTTP GET from the organization’s site.

[04:15:06.0000] <zcorpan>
that page gives some URLs we can try to evang if we want to kill utf-16

[04:16:52.0000] <hsivonen>
zcorpan: some of those sites say UTF-16 in <meta> but actually use something ASCII-compatible

[04:17:10.0000] <zcorpan>
though the data might be bogus. i checked app.com which uses <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> and later has <?xml version="1.0" encoding="UTF-16"?>

[04:17:17.0000] <MikeSmith>
Orcs.in ?

[04:18:26.0000] <hsivonen>
zcorpan: I checked six sites none of which actually ended up decoded as UTF-16

[04:18:42.0000] <hsivonen>
zcorpan: they just have a bogus declaration that doesn’t get honored

[04:19:20.0000] <zcorpan>
hsivonen: yeah, so not the data we're looking for

[04:19:27.0000] <hsivonen>
right

[04:21:32.0000] <zcorpan>
reported the bogusness on twitter

[04:23:38.0000] <zcorpan>
http://trends.builtwith.com/topsites/UTF-16-UCS-2 also appears to have a bogus list of sites

[04:25:04.0000] <zcorpan>
also reported on twitter

[04:29:18.0000] <hsivonen>
said "confidential" document claims UTF-16 is popular and says “Taiwanese” when meaning “Korean”

[04:37:11.0000] <zcorpan>
$ grep -aPic "Content-Type:\s*text/html\s*;\s*charset\s*=\s*[\"']?utf-16(le|be)?" web200904

[04:37:13.0000] <zcorpan>
0

[04:37:40.0000] <zcorpan>
(though maybe they excluded utf-16 content from web200904, intentionally or not)

[05:33:51.0000] <annevk>
zcorpan: btw, I'm making the stroke-width 1

[05:34:40.0000] <annevk>
zcorpan: looks a lot better around the eye

[05:34:50.0000] <annevk>
GPHemsley: no idea what's wrong with that file

[05:38:28.0000] <annevk>
insertAdjacentElement / insertAdjacentText are kinda sucky imo given that we just added before/after

[05:38:35.0000] <annevk>
which are way way nicer

[06:09:10.0000] <annevk>
hsivonen: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19961 (security considerations)

[06:14:48.0000] <annevk>
hsivonen: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19962 (insertAdjacent... crap)

[06:15:28.0000] <zewt>
(i thought the "before/after" names were changed to something less confusing)

[06:17:29.0000] <annevk>
(no)

[06:17:35.0000] <zewt>
(lame)

[06:17:43.0000] <annevk>
(care)

[06:17:53.0000] <zewt>
(i hope you care about good api naming)

[06:18:00.0000] <annevk>
(of course)

[06:20:32.0000] <hsivonen>
crap’s supported by multiple browsers, though, right?

[06:20:54.0000] <hsivonen>
makes it a feature

[06:21:24.0000] <annevk>
dunno, haven't tested Opera

[06:22:27.0000] <annevk>
hsivonen: the other weird thing is that Gecko sometimes takes the lead in removing stuff, but maybe this is a case where that cannot be done

[06:26:32.0000] <zcorpan>
annevk: i think 2 is closer to the original. i made it thicker to be slightly consistent with the other whatwg logos

[06:26:55.0000] <annevk>
I tried 2, but it looks ugly

[06:28:15.0000] <annevk>
hsivonen: so yeah, Opera supports it too

[06:31:30.0000] <zcorpan>
i guess 1.5 is closer to the original

[06:35:33.0000] <annevk>
k, I'll change it to that

[07:11:03.0000] <annevk>
http://lists.w3.org/Archives/Public/public-iri/2012Nov/0021.html maybe if they stopped publishing in ASCII...

[07:13:58.0000] <smaug____>
zcorpan: what does grep -aPc "\.insertAdjacent(Text|Element)\s*\(" stevef-all mean?

[07:14:35.0000] <zcorpan>
smaug____: it's this data set http://www.paciellogroup.com/blog/2012/04/html5-accessibility-chops-data-for-the-masses/

[07:14:36.0000] <smaug____>
also, I assume even 85 is very low number

[07:14:47.0000] <zcorpan>
yeah

[07:15:34.0000] <zcorpan>
that data set is about 600,000 pages iirc

[07:16:37.0000] <smaug____>
not too many

[07:17:00.0000] <zcorpan>
so at most it's 0.014%

[07:17:01.0000] <zcorpan>
but that data set is pretty old now

[07:17:36.0000] <smaug____>
0.0.14 doesn't sound a good reason to add somewhat bad API to web

[07:22:09.0000] <zcorpan>
i guess there's also not so much incentive for opera/webkit/ie to remove it, since doing so can make some pages to stop working (they might work in firefox due to different code paths)

[07:23:05.0000] <zcorpan>
but we have removed old IEisms and continue to do so. maybe this is something that should be removed as well.

[07:24:41.0000] <zcorpan>
also these data sets don't have external scripts

[07:30:12.0000] <annevk>
zcorpan: any chance the IDNA implementor is going to deny/confirm what I posted?

[07:33:51.0000] <zcorpan>
annevk: i can ping him

[07:38:58.0000] <zcorpan>
oh, i didn't know brucel came up with "scooby doo". i thought jgraham made it up on the spot at tpac.

[07:41:23.0000] <darobin>
zcorpan: no, it's classic brucel :)

[07:47:15.0000] <Ms2ger>
/me thought he knew "scooby doo" from elsewhere

[07:49:53.0000] <darobin>
Ms2ger: I think they also made a TV show out of it

[07:50:28.0000] <jgraham>
Sorry, I should have made it clear that I'm not a comic genius

[07:50:38.0000] <jgraham>
Although frankly I thought it was already obvious

[07:52:08.0000] <darobin>
/me has often found jgraham quite amusing

[07:52:38.0000] <jgraham>
You've been laughing at me? :(

[07:54:29.0000] <darobin>
jgraham: awwwww

[07:54:38.0000] <GPHemsley>
I was actually wonder what Scooby Doo had to do with that algorithm...

[07:54:40.0000] <GPHemsley>
+ing

[08:10:11.0000] <odinho>
GPHemsley: Because he always does that kind of deducting.

[08:10:25.0000] <GPHemsley>
hmm...

[08:10:34.0000] <odinho>
GPHemsley: "It's not a, it's not b, ---   it must be c!!!!112"

[08:18:46.0000] <darobin>
speaking of data sets with which to figure out compat issues, this just came up: http://www.w3.org/community/webdevdata/

[08:21:12.0000] <annevk>
I wonder why the check for ":" in http://mxr.mozilla.org/mozilla-central/source/nsprpub/pr/src/misc/prnetdb.c#1575 is not an "else if"

[08:21:24.0000] <annevk>
I'm gonna treat as an oversight in that code

[08:22:27.0000] <divya>
TabAtkins: PING

[08:24:34.0000] <jgraham>
/me falls over

[08:24:42.0000] <jgraham>
That was a very loud ping

[08:24:54.0000] <TabAtkins>
divya: pong

[08:27:30.0000] <annevk>
zcorpan_: thanks

[08:31:30.0000] <dglazkov>
good morning, Whatwg!

[08:32:52.0000] <TabAtkins>
divya: For serious, I pong you right back, and you ignore me. SO RUDE.

[08:34:14.0000] <annevk>
TabAtkins: maybe it didn't work because you replied in lowercase

[08:34:37.0000] <TabAtkins>
That's what I'm thinking.

[08:34:49.0000] <TabAtkins>
DIVYA: POOOOOOOONG

[08:37:07.0000] <zcorpan_>
/me sees jgraham fly outside his train

[08:43:15.0000] <divya>
TabAtkins: omg

[08:43:17.0000] <divya>
sorry

[08:43:26.0000] <divya>
TabAtkins: SORRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRY

[08:43:42.0000] <TabAtkins>
Why you hate jgraham's ears so much?

[08:43:54.0000] <jgraham>
/me no longer has ears

[08:44:14.0000] <divya>
ahahah

[08:50:30.0000] <odinho>
Hmm, so, public ping/pong, but private chat? Good to know that we get all the interesting signaling-bits without all the superflous data noise ;P

[08:51:49.0000] <TabAtkins>
odinho: You're welcome.

[08:52:33.0000] <divya>
ahahaha odinho

[08:52:42.0000] <divya>
/me reminds self to never use ahaha again

[09:13:53.0000] <annevk>
oh man

[09:13:59.0000] <annevk>
even IPv6 syntax is not interoperable

[09:14:03.0000] <annevk>
http://[0:0:0:0:0:FFFF:129.144.52.38]/ does not parse in Opera

[09:14:36.0000] <annevk>
and http://tools.ietf.org/html/rfc4291#section-2.5.5.1 seems to suggest this is allowed

[09:17:47.0000] <MikeSmith>
no zcorpan

[09:18:03.0000] <annevk>
which contradicts RFC 3986

[09:18:03.0000] <MikeSmith>
wanted to ask about SVG path error reporting for the validator

[09:18:35.0000] <annevk>
MikeSmith: you want to write a parser for that I think

[09:18:44.0000] <MikeSmith>
I did

[09:18:48.0000] <annevk>
MikeSmith: I think in general SVG data types have weak checking

[09:18:48.0000] <MikeSmith>
well not really

[09:18:50.0000] <annevk>
MikeSmith: cool

[09:18:52.0000] <MikeSmith>
yeah

[09:19:01.0000] <MikeSmith>
I didn't write it

[09:19:16.0000] <MikeSmith>
I just stole some code from Batik

[09:19:26.0000] <MikeSmith>
real parsing code

[09:20:06.0000] <MikeSmith>
anyway I wanted to ask what error message Simon expected for the case he reported

[09:20:13.0000] <MikeSmith>
which is <path stroke="#000" d="M0,0,L5,5"/>

[09:21:29.0000] <MikeSmith>
not that I'm offering a choice

[09:21:44.0000] <MikeSmith>
just wondering if what it does report is what he expected or not

[09:23:05.0000] <annevk>
M coordinate expected, none found?

[09:23:05.0000] <MikeSmith>
hmm so I could probably change it to say that

[09:23:05.0000] <MikeSmith>
but what is says now is

[09:23:05.0000] <MikeSmith>
Unexpected character "L"

[09:23:05.0000] <annevk>
that seems okayish too

[09:23:05.0000] <MikeSmith>
OK

[09:23:05.0000] <annevk>
it's kinda weird path syntax allows both commas and whitespace as separators, but extra commas are problematic

[09:25:29.0000] <MikeSmith>
yeah

[09:25:44.0000] <MikeSmith>
but hey why is something like <path stroke="#000" d="M 0,0,1,2,3,4 L5,5"/> valid?

[09:26:07.0000] <MikeSmith>
you're allowed to have an unlimited list of coordinate pairs for each command?

[09:26:22.0000] <TabAtkins>
Unlimited duplicates of the arg list.

[09:26:31.0000] <MikeSmith>
wtf

[09:26:33.0000] <MikeSmith>
why?

[09:27:21.0000] <TabAtkins>
Because the path syntax is heavily optimized for length, so omitting the letter from subsequent commands lets you drop one character.

[09:27:34.0000] <MikeSmith>
ah

[09:27:35.0000] <MikeSmith>
I see

[09:27:46.0000] <TabAtkins>
I'm not a fan of the path syntax.

[09:28:15.0000] <MikeSmith>
I think anybody who's ever tried to write a parser for it is not a fan either

[09:28:25.0000] <TabAtkins>
Nah, parsing's easy.

[09:33:11.0000] <SimonSapin>
TabAtkins: seen the syntax3 stuff?

[09:33:48.0000] <TabAtkins>
SimonSapin: Yup, I'm in the middle of a patch for one of the issues on my home computer.

[09:34:03.0000] <SimonSapin>
no hurry

[09:34:21.0000] <annevk>
MikeSmith: that one doesn't make much sense though

[09:34:46.0000] <annevk>
MikeSmith: the validator could issue a warning because when you duplicate M or m arguments you could write it more concise

[09:35:05.0000] <TabAtkins>
annevk: Nope, duplicate M commands can be useful.  They define zero-length path segments, which get markers.

[09:35:36.0000] <annevk>
what's a marker used for?

[09:36:36.0000] <TabAtkins>
It's a symbol placed at the vertexes between path segments.

[09:37:10.0000] <TabAtkins>
Used for, for example, arrowheads (placed on the last vertex), or circles-joints (placed at the internal vertexes).

[09:40:30.0000] <MikeSmith>
anyway I guess I could at least have the error be "Expecting a coordinate pair for the M command but instead found unexpected character 'L' ." and "Expecting second coordinate of a coordinate pair for the M command but instead found unexpected character 'L' ."

[10:44:56.0000] <zcorpan>
[tm]: i was expecting an error at all and a pointer to the first unexpected character in the value

[11:02:17.0000] <Ms2ger>
annevk, heh, thunderbird thinks your ipv6 email is a scam

[11:02:40.0000] <annevk>
really? not going to get much replies then :/

[11:03:10.0000] <Ms2ger>
Well, it still ended up in my inbox

[11:05:12.0000] <svl>
Thunderbird's "scam" detection algorithm is rather laughable. Does it contain a link with an ip address => scam

[11:05:41.0000] <svl>
luckily it's only a warning message, not an actual filter

[11:28:23.0000] <annevk>
I guess we'll see what happens with that message

[11:28:47.0000] <annevk>
I suspect there's not much interest in it from implementors anyway, until it starts biting them

[11:34:25.0000] <zcorpan>
annevk: i'd say, just spec something that makes sense

[12:01:05.0000] <GPHemsley>
FTR, official IETF 85 minutes: http://www.ietf.org/proceedings/85/minutes/minutes-85-websec (PDF)

[12:01:29.0000] <GPHemsley>
"Gordon Hemsley (not present) had taken on writing

[12:01:30.0000] <GPHemsley>
a mime

[12:01:30.0000] <GPHemsley>
sniffing document at

[12:01:30.0000] <GPHemsley>
WHAT

[12:01:30.0000] <GPHemsley>
WG. This has been a charter item in WebSec, but we have not done any

[12:01:30.0000] <GPHemsley>
work on this for over a year. The W3C has documents referencing the mime

[12:01:32.0000] <GPHemsley>
sniffing document. Nobody in the group objected to having this move to WHAT

[12:01:34.0000] <GPHemsley>
WG,

[12:01:36.0000] <GPHemsley>
and according to Larry Manister, the W3C is also fine with referencing the

[12:01:38.0000] <GPHemsley>
WHAT

[12:01:40.0000] <GPHemsley>
WG document, so the work item will be removed from our charter.

[12:01:42.0000] <GPHemsley>
"

[12:01:44.0000] <GPHemsley>
(terrible formatting, eh?)

[12:35:31.0000] <Ms2ger>
/me has heard Larry say some questionable things before

[13:29:57.0000] <Smylers>
IETF minutes are published in PDF?

[13:31:56.0000] <jwalden>
that's...kind of funny

[13:32:32.0000] <Ms2ger>
/me wonders if they get to use non-ASCII characters

[13:39:53.0000] <gsnedders>
Ms2ger: What sort of madness are you talking about?

[13:40:08.0000] <gsnedders>
What is this non-ASCII of which you speak?

[13:40:47.0000] <Ms2ger>
Crossing from another IRC channel, what's the first browser you used?

[13:41:19.0000] <TabAtkins>
Whatever version of Netscape was built into AOL at the time.

[13:42:43.0000] <gsnedders>
IE4/Mac, I think.

[13:44:18.0000] <Ms2ger>
Wow, you had a mac at the time?

[13:44:36.0000] <gsnedders>
My father did. I didn't.

[13:44:56.0000] <Ms2ger>
/me guesses Rick Waldron is a troll

[13:45:08.0000] <gsnedders>
What's his response?

[13:45:33.0000] <Ms2ger>
That people use vendor prefixes because they're in a spec, AFAICT

[13:47:05.0000] <divya>
where is this from Ms2ger?

[13:47:17.0000] <Ms2ger>
https://github.com/whatwg/javascript/issues/4#issuecomment-10386022

[13:53:58.0000] <jsbell>
I think he's implying: developers use prefixed APIs despite them not being in a spec.

[13:54:49.0000] <Ms2ger>
Isn't that the opposite of the point he's trying to make?

[13:55:32.0000] <divya>
rick waldron is saying that implementation requirements actually imply green light to using them

[13:55:49.0000] <divya>
or that is what i gathered Ms2ger

[13:56:11.0000] <Ms2ger>
Yeah

[13:56:20.0000] <Ms2ger>
I just can't square that with his latest comment

[13:56:33.0000] <Ms2ger>
(besides it being nonsense, of course)

[13:57:18.0000] <jsbell>
Yeah, I can't come up with a coherent stance for his comments.

[13:57:28.0000] <jsbell>
And: NCSA Mosaic on a Sun3 (I think).

[13:57:55.0000] <Ms2ger>
Can't beat that :)

[13:58:07.0000] <Ms2ger>
/me wanders off

[14:01:04.0000] <miketaylr>
funny i was just having this coversation with rwaldron in another chan

[14:01:07.0000] <miketaylr>
/me gives up too

[14:02:19.0000] <gsnedders>
MULTI-TASKING!

[14:02:25.0000] <miketaylr>
heh

[14:03:57.0000] <GPHemsley>
/me used AOL 3.0 and/or Netscape 4.x

[14:04:02.0000] <miketaylr>
s/coversation/conversation/

[14:04:16.0000] <GPHemsley>
(depending on your definition)

[15:11:01.0000] <Hixie>
damn you past hixie for leaving me with this conundrum

[15:11:20.0000] <Hixie>
so, anyone have any hot ideas for how to do web fonts in a worker?

[15:11:47.0000] <Hixie>
is there some non-@font-face mechanism for loading web fonts?

[15:12:48.0000] <heycam>
http://lists.w3.org/Archives/Public/www-style/2012Sep/0101.html

[15:13:30.0000] <Hixie>
seems reasonable

[15:13:33.0000] <Hixie>
did it get any buy-in?>

[15:13:57.0000] <heycam>
not sure, can't remember where the thread ended up

[15:14:00.0000] <heycam>
TabAtkins probably knows

[15:24:34.0000] <TabAtkins>
Hixie: http://dev.w3.org/csswg/css3-fonts/#document-fontloader

[15:24:47.0000] <TabAtkins>
So, yes.

[15:25:03.0000] <TabAtkins>
At least among Moz, and I don't know any reason why we'd object.  No objections on the mailing list.

[15:25:59.0000] <Hixie>
sweet

[15:26:02.0000] <TabAtkins>
document.fontloader.loadFont("font name", "optional text for figuring out unicode ranges needed")

[15:26:59.0000] <TabAtkins>
Ugh, jdaggett is still doing the indire tion through fontface for the event.

[15:27:14.0000] <TabAtkins>
That would make it hard in a Worker, because you'd have to instead return a neutered property bag or something.

[15:27:15.0000] <Hixie>
jdaggett: ping

[15:27:50.0000] <TabAtkins>
jdaggett: Yo, here's a stronger use-case for flattening the CSSFontFaceRule properties onto the CSSFontFaceLoadEvent interface.

[15:38:36.0000] <Hixie>
hm

[15:38:40.0000] <Hixie>
workers don't have a direction

[15:38:48.0000] <Hixie>
how do we pick a default writing direction

[15:38:58.0000] <Hixie>
workers suck.

[15:42:25.0000] <Hixie>
jdaggett, TabAtkins: would be good for canvas if there could be some conceptual "fonts in scope" which would be defined for each Element, Document, and worker

[15:56:16.0000] <TabAtkins>
Hixie: The same way that documents choose their default direction?  Is that applicable?  (I don't know what it is.)

[15:56:31.0000] <TabAtkins>
(Is it just ltr by default?)

[15:59:55.0000] <TabAtkins>
Hixie: "fonts in scope" should be pretty easy to define, I think.  It's the set of local fonts available to the document, plus any webfonts after they trigger a "load" event.


2012-11-15
[16:01:00.0000] <TabAtkins>
jdaggett: Mind if I clean up the Fonts event stuff to hook into DOM Core terminology and whatnot?  No significant changes from your perspective, just synchronization and tightening of some definitions.

[16:02:50.0000] <Hixie>
TabAtkins: (plus scoped fonts for <style scoped>, though i dunno how to even do that given the cascade)

[16:03:29.0000] <TabAtkins>
I don't think impls accept that <style scoped> scopes resource loads like that.

[16:03:30.0000] <Hixie>
TabAtkins: right now the spec doesn't have a conceptual list at all, as far as i can tell, it's all implied that hte fonts are reset on page load, etc

[16:04:49.0000] <TabAtkins>
Hixie: Yeah, there's no concept of it yet.  Just saying that it's an easy thing to define.

[16:05:11.0000] <Hixie>
agreed

[16:07:09.0000] <Hixie>
(<style scoped> has to have some solution for font scoping, otherwise two different scoped blocks defining the same font differently would conflict)

[16:07:30.0000] <TabAtkins>
Yes.  I think that problem is what impls plan to stick themselves with.

[16:08:00.0000] <Hixie>
it's not a problem for impls, it's a problem for syndicators using scopes styles.

[16:08:32.0000] <TabAtkins>
Sure.  But it's impls that decide whether they'll do anything about it.  ^_^

[16:09:16.0000] <Hixie>
it would be sad if we didn't find a solution, but yeah

[16:09:24.0000] <Hixie>
wouldn't be the first time we screwed authors, certainly :-)

[16:09:29.0000] <TabAtkins>
Same thing with all the name-defining at-rules, like @counter-style.

[16:11:19.0000] <Hixie>
yeah

[16:11:29.0000] <Hixie>
we really should find a solution

[16:11:51.0000] <Hixie>
maybe it's as "simple" as automatically munging names to be prefixed with the block's name or something?

[16:15:28.0000] <Hixie>
in other news, rewriting the entire canvas section to compatible with workers is about as mind-numbing as rewriting a library to be thread-safe

[16:19:50.0000] <Hixie>
oh.... bummer.

[16:20:02.0000] <TabAtkins>
"The block's name"?  There is no such thing.

[16:20:04.0000] <Hixie>
addHitRegion is going to be exciting

[16:20:09.0000] <Hixie>
TabAtkins: an anonymous one

[16:20:22.0000] <Hixie>
TabAtkins: not one the author can see

[16:20:28.0000] <TabAtkins>
Oh, and then rewrite all references inside the stylesheet as well?

[16:20:31.0000] <TabAtkins>
Contextually?

[16:20:33.0000] <Hixie>
(s/anonymous/internal/)

[16:20:36.0000] <Hixie>
something like that

[16:20:42.0000] <TabAtkins>
That sounds unfun.

[16:21:29.0000] <Hixie>
yeah

[16:21:34.0000] <Hixie>
hrm

[16:21:39.0000] <Hixie>
really no idea how to do addHitRegion()

[16:22:31.0000] <Hixie>
oh i guess it's no so bad

[16:27:00.0000] <jamesr>
Hixie, i don't think you could call addHitRegion() from the worker anyway, since that's about interactivity with the DOM and you can't really manipulate interactive things from a worker

[16:27:44.0000] <Hixie>
you can, it just ends up pushing the data to the main thread

[16:27:57.0000] <Hixie>
the only thing you can't do is use the 'control' thing

[16:29:13.0000] <Hixie>
TabAtkins: can you think of any way in which changing the directionality would affect the metrics measured in a canvas TextMetrics object?

[16:29:32.0000] <Hixie>
bounding box, positions of baselines, advance width...

[16:29:58.0000] <Hixie>
i guess if a ( and a ) have different dimensions

[16:29:59.0000] <Hixie>
hmm

[16:30:25.0000] <zewt>
kerning differences?

[16:31:14.0000] <Hixie>
hm yeah I guess "+-" could kern differently than "-+"

[16:31:34.0000] <zewt>
oh, i was thinking horizontal vs. vertical, but i guess that applies to rtl too

[16:32:32.0000] <Hixie>
oh i'm not talking about the writing direction, just the directionality

[16:32:36.0000] <zewt>
yeah

[16:32:46.0000] <Hixie>
canvas doesn't do vertical text yet

[16:53:42.0000] <jdaggett>
TabAtkins: can you send me a patch with whatever changes you want to make?

[16:54:03.0000] <jdaggett>
TabAtkins: then I'll move it back into the src

[00:00:44.0000] <zcorpan>
hsivonen: https://twitter.com/builtwith/status/268951926085910528 https://twitter.com/W3Techs/status/268835927500148737 we'll see if they publish correct reports next

[00:15:58.0000] <hsivonen>
zcorpan: thanks

[00:17:03.0000] <zcorpan>
hsivonen: do you have any ideas for how to approach http://bugzilla.validator.nu/show_bug.cgi?id=945#c7 ?

[00:30:03.0000] <hsivonen>
zcorpan: the datatype back end can report which character was the problem. I don’t recall how well (if at all) the front end handles that data

[00:30:22.0000] <hsivonen>
zcorpan: but I expect it to not handle line breaks in the attribute value very well

[00:35:41.0000] <zcorpan>
hsivonen: ok

[00:45:40.0000] <hsivonen>
zcorpan: yeah, the front end doesn’t handle the error index given by the back end: http://html5.validator.nu/?doc=data%3Atext%2Fhtml%3Bcharset%3Dutf-8%2C%3C!DOCTYPE+html%3E%3Ctitle%3E%3C%2Ftitle%3E%3Cinput+type%3Drange+step%3D0.k5%3E

[01:18:06.0000] <MikeSmith>
zcorpan: yeah I think this is a general limitation for all the attribute-microsyntax checking

[01:18:26.0000] <zcorpan>
yeah :-(

[01:18:26.0000] <MikeSmith>
maybe can try to figure out some clever way to get past it

[01:19:21.0000] <zcorpan>
can the front end be fixed to use the position that the back end reports?

[01:20:52.0000] <MikeSmith>
possibly

[01:21:44.0000] <MikeSmith>
though even if we do that it's not clear to me how it's going to handle line breaks in attribute values

[01:22:32.0000] <MikeSmith>
anyway I'll mess around with it a bit

[01:51:04.0000] <MikeSmith>
zcorpan: one thing I guess we could have it do it is, emit the entire current command expression it was parsing when it found the error

[01:52:04.0000] <MikeSmith>
just one command along with all its arguments

[01:53:20.0000] <MikeSmith>
do you think would that be useful enough that I should bother to try adding it?

[01:54:50.0000] <zcorpan>
MikeSmith: giving a small context around the error seems good enough to be able to locate the error

[01:55:52.0000] <MikeSmith>
OK

[01:56:43.0000] <zcorpan>
MikeSmith: the message doesn't trim the attribute value, but the source extract does. that seems like a bug

[01:57:24.0000] <zcorpan>
MikeSmith: maybe the message should omit the value completely if it's longer than some value

[01:57:42.0000] <MikeSmith>
yeah

[01:58:09.0000] <MikeSmith>
that would not be too hard to change

[01:58:12.0000] <MikeSmith>
so I wonder how long is too long

[02:01:44.0000] <MikeSmith>
300 characters?

[02:01:46.0000] <MikeSmith>
200?

[02:08:30.0000] <MikeSmith>
zcorpan: btw the attribute value doesn't get trimmed in the source extract either, does it?

[02:09:56.0000] <zcorpan>
my test case in the bug seems to get trimmed in the source extract

[02:10:10.0000] <MikeSmith>
strange

[02:10:16.0000] <MikeSmith>
it doesn't for me

[02:10:23.0000] <MikeSmith>
can you make a screen shot?

[02:11:10.0000] <MikeSmith>
the extract I'm seeing has the whole element emitted and highlighted in red

[02:11:18.0000] <Ms2ger>
/me mumbles something about CSS specs

[02:11:19.0000] <zcorpan>
um. now it doesn't

[02:13:55.0000] <MikeSmith>
zcorpan: ok

[02:14:18.0000] <zcorpan>
MikeSmith: if i use <img src="aaaaaaaa b"> where there are many "a"s, i get trimmed source extract.

[02:14:26.0000] <zcorpan>
d>↩<body>↩<img src="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa…aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa b">↩</bod

[02:14:49.0000] <MikeSmith>
oh

[02:14:50.0000] <zcorpan>
i thought i saw that for d="" previously as well

[02:15:45.0000] <MikeSmith>
I'll take a look at that part of the message code

[02:16:35.0000] <MikeSmith>
for the riduculously-long case I can have it truncate the value or omit it completely

[02:16:39.0000] <MikeSmith>
in both places

[02:17:33.0000] <zcorpan>
i think i'd prefer omit in the message and truncate in the source extract

[02:17:53.0000] <MikeSmith>
OK

[02:18:18.0000] <MikeSmith>
that makes sense

[02:18:41.0000] <zcorpan>
as for too long, let's go with 200, since that's about as long as the truncated highlighted source extract is

[02:19:02.0000] <MikeSmith>
yeah that's what I was thinking too

[02:19:11.0000] <MikeSmith>
300 is too long

[02:35:05.0000] <kmbarnhart>
Can someone answer a question I have about the WebVTT specification

[02:35:59.0000] <kmbarnhart>
Sepecifically, a number of times the spec states "one or more characters other than" and say line feed and ampersand

[02:37:20.0000] <kmbarnhart>
It seems to me that that means line feed and ampersand are not allowed at all

[02:38:21.0000] <kmbarnhart>
Which would mean that in the cue text cannot have newline or an & without &amp;

[02:39:20.0000] <zcorpan>
kmbarnhart: right, line feed and ampersand are not allowed at all for that particular part of the syntax it's discussing, because they have special meaning and are allowed in other parts of the syntax

[02:39:42.0000] <kmbarnhart>
ok thanks

[02:40:00.0000] <zcorpan>
kmbarnhart: e.g. with the cue data "foo &amp; bar", there is text "foo ", entity "&amp;" and text " bar"

[02:40:08.0000] <zcorpan>
kmbarnhart: ampersand is not allowed in the text parts

[02:40:34.0000] <zcorpan>
does that make sense?

[02:41:15.0000] <kmbarnhart>
yes. I was a bit unclear because ok, however the newline issues is contrary to the non-normative example and is allowed by the parser

[02:42:11.0000] <zcorpan>
can you explain what the newilne issues are?

[02:42:17.0000] <zcorpan>
newline, even

[02:42:43.0000] <kmbarnhart>
The part I'm concerned with is here http://dev.w3.org/html5/webvtt/#webvtt-cue-text-span

[02:43:00.0000] <kmbarnhart>
The example here: http://dev.w3.org/html5/webvtt/#cues-with-multiple-lines

[02:43:55.0000] <zcorpan>
see http://dev.w3.org/html5/webvtt/#webvtt-cue-text

[02:44:41.0000] <zcorpan>
each line is a cue text span

[02:45:07.0000] <kmbarnhart>
ok ic

[02:45:12.0000] <kmbarnhart>
I missed that, thank you

[02:45:16.0000] <zcorpan>
np

[02:46:44.0000] <zcorpan>
(each line in the example in the spec, i mean. a line can have several webvtt components, too.)

[06:45:26.0000] <annevk>
Oh Mozilla killed XML Events. Well Opera, when will you?

[06:48:40.0000] <smaug____>
Does Opera have XML Events?

[06:48:42.0000] <smaug____>
for what?

[06:48:57.0000] <smaug____>
XML Events require special kinds of event listeners

[06:49:09.0000] <smaug____>
xforms elements or such

[06:49:34.0000] <smaug____>
Don't remember how that all worked in X+V

[06:52:21.0000] <darobin>
I didn't know anyone supported XML Events in the first place

[06:53:12.0000] <jgraham>
If you supported XML events you would keep quiet about it too

[06:53:44.0000] <darobin>
yeah you would, nasty buggers to use they were

[07:01:02.0000] <smaug____>
XML Events was the first larger contribution I made to Gecko (2004, I think) . And now I removed it :)

[07:28:30.0000] <annevk>
Pretty sure Opera has it for SVG

[07:29:14.0000] <annevk>
Opera also still has xml:id :-(

[08:51:35.0000] <dglazkov>
good morning, Whatwg!

[09:41:14.0000] <tantek>
good morning dglazkov!

[10:18:59.0000] <TabAtkins>
jdaggett: Looks like Ms2ger handled the rewrite for me.  His suggested patch looks good on its face.

[10:19:33.0000] <Ms2ger>
TabAtkins, not to me, half of it needs to be filled in still

[10:20:47.0000] <TabAtkins>
Ms2ger: The part you've filled in looks fine with me skimming it, though.

[11:30:43.0000] <Hixie>
should scrollPathIntoView() in a worker do anything?

[11:31:06.0000] <Hixie>
(i could, in theory, have it remember what it was told to scroll to, and when you call commit(), have it tell teh main thread to actually do that scroll)

[11:33:23.0000] <TabAtkins>
Interesting.

[11:33:27.0000] <TabAtkins>
That sounds useful, actually.

[11:34:00.0000] <TabAtkins>
It would probably be good, as much as possible, to make the deferred canvas act like the original canvas would, just delayed by the commit().

[11:35:36.0000] <Hixie>
ok

[11:38:03.0000] <Hixie>
so when you're doing this worker-to-main-thread thing, i push the bits out when the main thread is in a stable state (between tasks)

[11:38:15.0000] <Hixie>
(though i suppose i could queue a task)

[11:39:17.0000] <Hixie>
anyway. if, for whatever reason, the "worker" is actually script running on the same thread, should commit() switch to being synchronous? i'm thinking not, it should still queue...

[11:54:40.0000] <Hixie>
context.fillRect(0,0,10,10); context.drawImage(context, 20,0); -- how many rectangles?

[11:54:58.0000] <Hixie>
i was planning on making it one rectangle in workers and two for the case where you getContext()

[11:55:11.0000] <Hixie>
(because in the former case you have to commit() and the latter you don't)

[11:55:17.0000] <Hixie>
but i'm thinking maybe it should always be two


2012-11-16
[16:08:03.0000] <Hixie>
heycam: can i typedef a union type?

[16:08:19.0000] <heycam>
Hixie, yep!

[16:08:24.0000] <Hixie>
cool

[16:08:35.0000] <Hixie>
typedef NewType (A or B); ?

[16:08:42.0000] <heycam>
other way around

[16:08:45.0000] <Hixie>
oh ok

[16:12:54.0000] <Moo^_^>
is it defined how dtawImage() should behave with color spaces, gamme information and such?

[16:12:58.0000] <Moo^_^>
http://stackoverflow.com/questions/13394276/safari-ignores-colorspace-of-images-in-canvas

[16:13:52.0000] <Hixie>
yes

[16:13:55.0000] <Hixie>
see the spec :-)

[16:13:59.0000] <Hixie>
search for "color space"

[16:14:16.0000] <Hixie>
there's a section called "color spaces and color correction"

[16:14:19.0000] <Hixie>
http://whatwg.org/html

[16:14:49.0000] <Moo^_^>
Hixie: it applies for <canvas> too?

[16:15:15.0000] <Moo^_^>
ah

[16:15:16.0000] <Moo^_^>
thx

[16:15:18.0000] <Moo^_^>
it is canvas spec

[16:15:51.0000] <Hixie>
right

[16:36:34.0000] <annevk>
did anyone else get a "[whatwg] Proposal: implement a <usescookies> tag." email?

[16:36:52.0000] <Hixie>
i didn't

[16:36:55.0000] <annevk>
it's from "whatwg-owner⊙lwo"

[16:37:08.0000] <annevk>
which seems dubious

[16:37:10.0000] <Hixie>
oh maybe i block that

[16:37:25.0000] <Hixie>
(since i get a _lot_ of mail from that address)

[16:37:58.0000] <annevk>
and if it's to whatwg⊙wo that list must be on the bcc

[16:38:13.0000] <annevk>
but it seems like a legitimate email, albeit a kind of silly proposal

[16:38:59.0000] <zewt>
heh, not as silly as the idiotic cookie law

[16:41:09.0000] <TabAtkins>
Yes, I got it.

[16:41:22.0000] <TabAtkins>
Was a dumb email.

[16:43:19.0000] <annevk>
dbaron: if you want window.CSS.supports() in http://dev.w3.org/csswg/css3-conditional/#the-css-interface you need to put "static" between "boolean" and "supports"

[16:43:56.0000] <annevk>
dbaron: because now you'd need to get an instance of the CSS object first which I don't think is what is intended

[16:44:20.0000] <dbaron>
annevk, hmmm, Tab wrote that part

[16:44:29.0000] <annevk>
TabAtkins: ^^

[16:45:20.0000] <dbaron>
annevk, and you really want "boolean static supports" rather than "static boolean supports" (which would be the C++ way)?

[16:45:50.0000] <annevk>
dbaron: yeah, sorry

[16:46:02.0000] <annevk>
dbaron: http://dev.w3.org/2006/webapi/WebIDL/#idl-static-attributes-and-operations fwiw

[16:46:03.0000] <dbaron>
annevk, so "static boolean supports"?

[16:46:18.0000] <annevk>
yup

[16:46:27.0000] <TabAtkins>
Ah yeah, makes sense.

[16:47:07.0000] <dbaron>
is there a way to say that an interface exists only to have static methods and can't have instances?

[16:47:42.0000] <annevk>
dbaron: that's implied

[16:47:54.0000] <TabAtkins>
By what?

[16:47:55.0000] <annevk>
but Alex Russell might not like you

[16:48:15.0000] <annevk>
TabAtkins: by not having a constructor and not having anything that returns the interface

[16:48:20.0000] <TabAtkins>
Nah, it's clear that CSS is a namespace object only.

[16:48:36.0000] <TabAtkins>
annevk: I think dbaron is hoping for something that avoids the hazard of accidentally adding non-static attributes in the future.

[16:49:07.0000] <Hixie>
add <!-- FOR THE LOVE OF KITTENS DON'T ADD NON-STATIC ATTRIBUTES --> to the source of the spec

[16:50:00.0000] <TabAtkins>
Hixie: Doesn't help partial interfaces in other specs.

[16:50:57.0000] <annevk>
TabAtkins: it seems if you define a partial interface like that and there's nothing that returns a CSS object someone will point that out and it'll get fixed

[16:51:29.0000] <dbaron>
so heycam and I have been discussing this IRL

[16:51:43.0000] <TabAtkins>
Sure, but if your WebIDL-based code generator knows ahead of time that the interface mustn't produce instances, and thus must be static-only, seems like a win.

[16:52:07.0000] <dbaron>
one thing he said is that if any future extensions to CSS might have window-specific information rather than being purely global

[16:52:09.0000] <Hixie>
nothing stops other spec writers doing whatever they want including "ignore the other spec's statement that says this is wrong..."

[16:52:27.0000] <dbaron>
then he'd think it would be better to have a CSS object (that's some other interface, I presume) than have a CSS interface

[16:52:58.0000] <dbaron>
do we think we'll never want anything on CSS that's window-specific?

[16:53:16.0000] <dbaron>
anyway, I'll add the static unless TabAtkins has already

[16:53:22.0000] <Hixie>
wouldn't such things just go on Screen?

[16:53:27.0000] <annevk>
seems like you do want that, but given that interface objects already have a relationship with the Window I'm not sure it's problematic

[16:53:33.0000] <TabAtkins>
dbaron: Maybe.  But what annevk said.

[16:53:56.0000] <TabAtkins>
A CSS object living in an attribute on Window is identical to just defining a CSS interface.

[16:57:08.0000] <dbaron>
annevk, anyway, fixed

[16:57:19.0000] <zewt>
fg

[16:57:25.0000] <zewt>
... hi

[16:57:31.0000] <dbaron>
annevk, and I alphabetized your name under "v" in the Acknowledgements; hoping that's correct

[16:57:44.0000] <annevk>
A or K, sorry

[16:57:58.0000] <annevk>
now if I was from Sweden I believe it would be v

[16:57:59.0000] <zewt>
my mind will never really fully intuit multiple monitors; hard wired to "looking at a window && window is fullscreen == window is focused"

[16:58:03.0000] <annevk>
and US probably too

[16:58:33.0000] <TabAtkins>
zewt: Make sure you have focus-follows-mouse.  It at least makes things easier.

[16:58:48.0000] <TabAtkins>
I somehow lost that setting when I came in this week, and it's the most frustrating thing ever.

[16:58:57.0000] <Hixie>
i want "focus follows intent"

[16:59:05.0000] <TabAtkins>
Good luck speccing that.

[16:59:26.0000] <Hixie>
the number of times i hit Command+W attempting to close a tab in a browser when I've switched to my Terminal is just stupid

[16:59:39.0000] <zewt>
after a couple decades of mouse-position-has-no-effect-on-focus, i'm pretty sure that would be worse, heh

[16:59:52.0000] <Hixie>
and i'll do that while looking at the focused terminal with my mouse on the terminal, so focus-follows-mouse and focus-follows-eyes wouldn't help

[17:00:06.0000] <dbaron>
your mouse position may have no effect on focus, but mine does

[17:00:47.0000] <zewt>
and in general i dislike the mouse position having side-effects (webpages that go "your mouse went over our facebook/twitter/whatever widget, you must want us to expand it to cover up what you're reading! (and then never hide it)" drive me crazy)

[17:00:56.0000] <TabAtkins>
zewt: I thought so too, until I switched myself with registry hacks in Windows.

[17:00:59.0000] <TabAtkins>
Now I can't go back.

[17:01:39.0000] <TabAtkins>
Oh gosh, I just re-set my config, and I'm so happy.

[17:02:50.0000] <Hixie>
(focus follows mouse is definitely superior)

[17:03:20.0000] <TabAtkins>
Specifically, you want "sloppy" focus-follows-mouse, where entering a window grants it focus, but leaving it doesn't remove focus.

[17:03:39.0000] <TabAtkins>
The latter often plays very badly with things like alt-tab.

[17:07:51.0000] <annevk>
http://www.alvestrand.no/pipermail/idna-update/2012-November/007465.html

[17:07:59.0000] <annevk>
that's the author of IDNA2008

[17:08:26.0000] <annevk>
and it's mind boggling

[17:08:43.0000] <annevk>
especially the last two paragraphs

[17:12:03.0000] <jsbell>
I could attempt to say something profound like: Even very smart people have a hard time understanding that the Web is orders of magnitude larger, more complex and has more legacy despite its short lifetime than anything humans have ever created before" but it would probably be nitpicked to death.

[17:12:12.0000] <TabAtkins>
Sigh.

[17:12:31.0000] <jsbell>
and on that note...

[17:14:34.0000] <annevk>
I was gonna reply with "And this is why we ignore the IETF"

[17:36:10.0000] <Hixie>
almost done with this canvas worker monster

[17:36:15.0000] <Hixie>
just CanvasProxy to spec now

[17:36:29.0000] <Hixie>
(if you want to see the current state, the single-page spec has been updated)

[17:39:39.0000] <annevk>
ah, glad there's no getContext("worker") anymore

[17:39:52.0000] <annevk>
Hixie: is the typedef stuff to prevent people from making new stuff up?

[17:40:02.0000] <Hixie>
no it's for my sanity

[17:40:14.0000] <Hixie>
it just changes a union to a typedef

[17:40:23.0000] <Hixie>
doesn't make any difference to other specs as far as i ca ntell

[17:41:06.0000] <annevk>
ah

[17:41:24.0000] <Hixie>
bbl

[17:44:18.0000] <annevk>
at some point lineCap / lineJoin should become enum

[17:44:33.0000] <annevk>
same for direction and such

[17:48:49.0000] <Yuhong>
http://www.alvestrand.no/pipermail/idna-update/2012-November/007467.html

[23:25:52.0000] <Davstern15>
Man.

[23:26:11.0000] <Davstern15>
I have come to the conclusion that Firefox is horrible at drawing to canvas and that I hate it.

[23:26:18.0000] <Davstern15>
And that especially archs seem to be super slow.

[23:26:42.0000] <Davstern15>
Even if Firefox 16 (latest stable) does ALL of the drawing to canvas in CPU with NO help at all from the GPU in any way... wouldn't the drawing be faster on a super Xeon Quad-core 3.4 GHz compared to a PC from 2006?

[23:26:51.0000] <Davstern15>
On both machines, it seems just as sluggish at drawing it. Also, HOW can a computer made after 1970 or so have trouble calculating archs?

[00:14:16.0000] <MikeSmith>
can somebody with IE please test https://bugzilla.mozilla.org/attachment.cgi?id=292660 and let me know what the result is?

[00:14:50.0000] <MikeSmith>
do an on-page find for "mozilla"

[00:15:05.0000] <MikeSmith>
and see if it scrolls the overflow:hidden area on that page to show it

[00:32:08.0000] <Davstern15>
MikeSmith: I will try in IE 10.

[00:32:27.0000] <zcorpan>
ok! anyone else have opinions about this quirk? https://bugzilla.mozilla.org/show_bug.cgi?id=747517#c7

[00:32:38.0000] <Davstern15>
It highlights the "mozilla" text in the bottom-left corner of the square, miketaylr.

[00:32:43.0000] <Davstern15>
*MikeSmith

[00:32:47.0000] <MikeSmith>
Davstern15: thanks much

[00:37:33.0000] <MikeSmith>
zcorpan: so dbaron is saying he's open to anything except applying the quirk in all modes?

[00:38:31.0000] <zcorpan>
MikeSmith: if 'anything' is three possible things, then yes

[00:38:45.0000] <Davstern15>
I am going insane here.

[00:39:07.0000] <Davstern15>
I cannot find any references to Firefox 16 being slow or how to turn on some supposedly off-by-default hardware rendering of canvas.

[00:39:12.0000] <Davstern15>
But it IS very slow.

[00:45:42.0000] <MikeSmith>
zcorpan: I think that should be quirks-mode only

[00:46:04.0000] <zcorpan>
MikeSmith: why?

[00:47:20.0000] <MikeSmith>
I don't think normal authors would expect the underline color to change

[00:47:32.0000] <MikeSmith>
nor users

[00:49:31.0000] <MikeSmith>
I think not having the underline color change for that case is a better user experience

[00:50:20.0000] <zcorpan>
that seems to argue for dropping the quirk

[00:53:41.0000] <MikeSmith>
zcorpan: yeah, though I don't feel strongly against keeping it just for quirks mode, as in FF

[00:59:55.0000] <MikeSmith>
zcorpan: I updated the SVG path-data checker along the lines we talked about yesterday

[01:00:09.0000] <MikeSmith>
just now posted comment http://bugzilla.validator.nu/show_bug.cgi?id=945#c9

[01:00:36.0000] <MikeSmith>
please give it a try again on http://qa-dev.w3.org:8888/ when you have time

[01:01:16.0000] <MikeSmith>
I found that it's not practical at all on the current code to try to truncate the extracts on the server side

[01:02:04.0000] <MikeSmith>
because the code that emits those extracts does not expose any way to measure their length before they're emitted

[01:03:37.0000] <MikeSmith>
it just streams them out

[01:05:11.0000] <MikeSmith>
so the "truncation" is done on the client side just be setting an explicit height and overflow:hidden on any extract area whose textContent is more than 200 characters

[01:18:22.0000] <zcorpan>
MikeSmith: thanks. A+

[01:19:36.0000] <MikeSmith>
zcorpan: super

[01:19:44.0000] <MikeSmith>
thanks for the test cases and suggestions

[01:19:55.0000] <zcorpan>
np man

[01:20:06.0000] <MikeSmith>
will get the patch to Henri for review

[01:22:57.0000] <zcorpan>
MikeSmith: for the overflow thing, i think i'd skip the character count and just do max-height:3em; overflow:hidden;

[01:23:11.0000] <MikeSmith>
oh

[01:23:16.0000] <MikeSmith>
good idea

[01:23:25.0000] <MikeSmith>
didn't think of max-height

[01:23:30.0000] <MikeSmith>
will change that now

[01:26:07.0000] <Davstern15>
Is there a way to trim an image?

[01:28:19.0000] <zcorpan>
MikeSmith: i found a different bug now. newlines in the attribute value get shown as literal newlines in the message (both for "bad value `...`" and the new context)

[01:28:44.0000] <MikeSmith>
oh

[01:28:54.0000] <zcorpan>
MikeSmith: maybe they should be replaced with ↩

[01:29:17.0000] <MikeSmith>
yeah, I attempted to convert them as such for the context case

[01:29:25.0000] <MikeSmith>
I must have missed something

[01:29:38.0000] <Davstern15>
Oh, God, let somebody have a trim() example...

[01:29:54.0000] <Davstern15>
I need to remove all transparent parts and return only the resulting trimmed image.

[01:30:00.0000] <Davstern15>
(As a rectangle.)

[01:30:42.0000] <MikeSmith>
for the "bad value `...`" part, the existing behavior is to display the newlines as-is. But I agree it'd be better to have them replaced with "↩"

[01:31:07.0000] <MikeSmith>
will need to ask Henri about that

[01:31:59.0000] <MikeSmith>
zcorpan: anyway if you have a test case where they're not being converted in the new context stuff, I'll fix it now for that part at least

[01:33:35.0000] <zcorpan>
<svg><path d="M204.33

[01:33:35.0000] <zcorpan>
139.83 ,C196.33 133.33 206.68 132.82 206.58 132.58"/></svg>

[01:36:38.0000] <zcorpan>
MikeSmith: <path d="M0,0C"/> seems to have slightly wrong message and empty context

[01:37:30.0000] <zcorpan>
"Expected number for c command but found nothing (context: )."

[01:38:01.0000] <zcorpan>
the wrong part being "c" (lowercase)

[01:39:24.0000] <MikeSmith>
oh

[01:39:31.0000] <MikeSmith>
copy pasta

[01:39:32.0000] <MikeSmith>
thanks

[01:39:34.0000] <MikeSmith>
will fix that

[01:39:54.0000] <MikeSmith>
though dunno why the context is empty

[01:40:03.0000] <MikeSmith>
/me looks

[04:38:46.0000] <annevk>
MikeSmith: pretty awesome to have better SVG validation

[04:43:07.0000] <ManDay>
Oh cool, this channel actually exists

[04:43:26.0000] <MikeSmith>
annevk: only for path@d values so far

[04:43:35.0000] <Moo^_^>
ManDay: here you find more insight on spec matters

[04:43:37.0000] <ManDay>
What's your opinion on a <toc> element which generates a table of contents from the page?

[04:44:06.0000] <jgraham>
ManDay: Cool idea, doesn't work at all

[04:44:38.0000] <ManDay>
jgraham: "Your opinion" => "Your elaborated opinion"

[04:45:54.0000] <ManDay>
I do agree that it appears somewhat strange with regards to how HTML is marking up content and not marking up places where content is supposed to be generated - BUT, what other solution do you see for creating TOCs?

[04:46:02.0000] <jgraham>
It doesn't work well with incremental rendering because it depends on the full content of the document. It would need to be live, which would be a performance issue. Historically the one example of a macro-like element turned out to be a bad idea so we don't do that anymore

[04:46:31.0000] <jgraham>
If you have a static document, use a preprocessing step

[04:46:59.0000] <jgraham>
Otherwise you could use a script attached to DOMContentLoaded

[04:47:01.0000] <ManDay>
preprocessing... hm. I currently do that with mathml, works nice

[04:47:11.0000] <ManDay>
nah... scripts, bah

[04:47:30.0000] <ManDay>
do you happen to have a tool for such preprocessing?

[04:47:35.0000] <jgraham>
With web components you might even be able to make that script look like an <x-toc> tag, or <div is=toc> or similar

[04:47:57.0000] <jgraham>
Only one that is heavily optimised for producing full specifications

[04:47:58.0000] <ManDay>
<div is=toc>? I've been living in a hole in the ground for too long

[04:48:01.0000] <ManDay>
What the heck is "is"?

[04:48:10.0000] <jgraham>
Well it isn't yet :)

[04:48:14.0000] <ManDay>
oh, k

[04:48:38.0000] <jgraham>
But there is a plan for a technology called web components that will make it easier to create reusable components

[04:48:52.0000] <jgraham>
And that is one proposed syntax for embedding a component

[04:49:06.0000] <ManDay>
Uhm... XML Namespaces, anyone?

[04:49:14.0000] <jgraham>
No

[04:49:15.0000] <Moo^_^>
ManDay: not supported in HTML5

[04:49:19.0000] <jgraham>
:)

[04:49:40.0000] <ManDay>
What? Works "fine" (as in: Throws no errors in Webkit and FF) with mathml xmlns

[04:49:41.0000] <zcorpan>
xml namespaces is a problem, not a solution

[04:49:46.0000] <ManDay>
What the ...

[04:50:05.0000] <ManDay>
Imho the real problem is that HTML5 isn't designed as XML in the first place

[04:50:27.0000] <Moo^_^>
ManDay: so you have been living in a hole in the ground :)

[04:50:34.0000] <ManDay>
it's like completely non-strict with a dose of "you may use xml markup if you fancy it"

[04:50:48.0000] <ManDay>
Moo^_^: My brain is still working, though

[04:50:58.0000] <Moo^_^>
ManDay: I think there are several reasons why people chose this road

[04:51:09.0000] <ManDay>
I'd be curious to read one

[04:51:12.0000] <Moo^_^>
ManDay: if you want to find out about those reasons people here can probably help you

[04:52:10.0000] <zcorpan>
ManDay: http://wiki.whatwg.org/wiki/FAQ#Why_does_this_new_HTML_spec_legitimise_tag_soup.3F

[04:53:17.0000] <ManDay>
zcorpan: My concern is more wrt to you saying that XMLNS are not the solution but instead contrive something called "web components"

[04:53:57.0000] <zcorpan>
i only said that xml namespaces is a problem, not a solution

[04:55:09.0000] <ManDay>
Well, if we consider something like embedding, say, SVG and MathML in XHTML, we can do that generically for everything. Like <x-toc xmlns="manday.org/yeah"> - Why web components?

[04:56:54.0000] <zcorpan>
SVG and MathML were grandfathered into the HTML syntax and don't use a generic syntax that can or should be used for new features

[04:57:13.0000] <zcorpan>
generally, new features that are supposed to work with HTML go in the HTML namespace

[04:57:37.0000] <zcorpan>
i don't know enough about web components to have a useful opinion about it

[04:57:43.0000] <ManDay>
yes, I know the current status. question is: Why do you approve that idiocity

[04:57:52.0000] <ManDay>
(you = pl.)

[04:58:04.0000] <ManDay>
(as in: so.)

[04:58:09.0000] <ManDay>
(just to be less insulting)

[04:58:21.0000] <zcorpan>
i guess we disagree about what part is idiocity

[04:58:32.0000] <zcorpan>
"we" think xml namespaces are idiocity

[04:58:41.0000] <ManDay>
Why??

[04:59:04.0000] <ManDay>
XML is one of the most consistent things that ever came from W3

[04:59:09.0000] <zcorpan>
because they are a source of confusion for people and a source of bugs in software

[04:59:42.0000] <zcorpan>
http://wiki.whatwg.org/wiki/Namespace_confusion has some notes

[05:00:07.0000] <ManDay>
/me has the feeling whatwg.org maintains a defamatory wiki about w3

[05:01:56.0000] <Moo^_^>
ManDay: no, I think they are just pragmatic and deal more with real world use cases

[05:02:04.0000] <ManDay>
"Bugs caused by Namespaces" - that's just pathetic... Be at least as fair as to say "Bugs caused by people who are incapable of using Namespaces properly"

[05:02:49.0000] <ManDay>
You find an idiot who doesn't understand it for everything. But you can't call the thing bad for that

[05:03:09.0000] <ManDay>
Namespaces are necessary to allow for embedding DTDs into others, right?

[05:03:29.0000] <ManDay>
We see what's the alternative with HTML5 where, as you said, the elements are "grandfathered" into the DTD

[05:03:34.0000] <ManDay>
Which is bollocks

[05:04:15.0000] <ManDay>
(PS: I don't claim that I'm capable of using Namespaces properly, but if I read the docs carefully, I will)

[05:05:25.0000] <jgraham>
FWIW namespaces and components don't solve the same problem

[05:05:33.0000] <Moo^_^>
ManDay: I think if you want to critize the made decisions you should write to whatwg mailing list

[05:05:36.0000] <Moo^_^>
ManDay: or in a blog

[05:05:45.0000] <Moo^_^>
ManDay: it would be the most efficient media for that

[05:06:15.0000] <jgraham>
components are like a descendant of XBL in Mozilla which was namespace-loving XML and embedded in XUL, which is also namespace-loving XML

[05:07:53.0000] <darobin>
/me giggle at the notion of using DTDs and namespaces together

[05:09:22.0000] <ManDay>
darobin: It might not have been perfectly expressed, but aren't namespaces related to DTDs in that elements from two different namespaces are defined by different DTDs?

[05:09:22.0000] <Moo^_^>
ManDay: but as you find out, the matter is opinionated

[05:09:48.0000] <Ms2ger>
ManDay, no

[05:09:50.0000] <darobin>
ManDay: no, the notions are completely orthogonal

[05:10:25.0000] <darobin>
and you in fact cannot use DTDs and namespaces completely together; in the general case they are strictly incompatible; if you stick to conventions you can parametrise them to work together

[05:11:10.0000] <darobin>
but you're just saying that because you're confusing DTDs and languages

[05:11:59.0000] <ManDay>
darobin: The syntax of one XML (say, XHTML) is defined by a DTD, right?

[05:12:12.0000] <darobin>
ManDay: no, the syntax is defined by the XML specification

[05:12:15.0000] <ManDay>
Or am I mistaken about the terminology

[05:12:23.0000] <darobin>
completely mistaken I'm afraid :)

[05:12:41.0000] <ManDay>
darobin: The "XML Specification" being a DTD, I thought?!

[05:12:50.0000] <darobin>
uhm, no

[05:12:52.0000] <ManDay>
Like RelaxNG or whatever there is

[05:12:59.0000] <darobin>
http://www.w3.org/TR/xml/

[05:13:05.0000] <darobin>
you're thinking of schemata

[05:13:23.0000] <darobin>
which are ways of giving a formal definition within some constraints to a language

[05:13:30.0000] <darobin>
but a language does not need that

[05:13:36.0000] <darobin>
and schemata are orthogonal to syntax

[05:14:09.0000] <darobin>
no offence but I would recommend that you get your story straight before calling anything else bollocks :)

[05:15:14.0000] <ManDay>
No need to tell me that

[05:15:25.0000] <ManDay>
I only realized that my story wasn't straight

[05:15:50.0000] <ManDay>
a DTD defines, for instance, which nodes may be childnodes of other nodes, right?

[05:16:37.0000] <darobin>
it defines which element types can contain which other element types, yes

[05:16:47.0000] <darobin>
though that's a notion that doesn't map with nodes

[05:17:12.0000] <darobin>
nodes can be things that aren't elements; and element types are limited to local names and don't take namespaces into account

[05:17:16.0000] <zcorpan>
annevk: doesn't &#{decimal code point}; in URLs break the URL since both & and # have special meaning in URLs?

[05:19:12.0000] <annevk>
zcorpan: you wouldn't put them there as literals

[05:19:31.0000] <zcorpan>
annevk: percent-escaped?

[05:19:35.0000] <annevk>
zcorpan: note that form submission (with GET) munges the URL too so you already have that

[05:19:37.0000] <annevk>
zcorpan: right

[05:19:47.0000] <annevk>
or URL escaped in current lingo, but I should change that back

[05:19:49.0000] <zcorpan>
ah

[05:20:34.0000] <zcorpan>
yeah if <form method=GET> already does it, i guess we can do the same for <a href>

[05:20:48.0000] <ManDay>
darobin: Ok, so DTD define which elements can contain other elements and the XML Spec defines which elements exist and which attributes they have?

[05:21:54.0000] <darobin>
ManDay: no, the XML spec defines (mostly) how you parse the syntax of XML (elements, attributes, etc.)

[05:22:06.0000] <zcorpan>
ManDay: DTDs have been obsolete since XML Namespaces were introduced. The XML Core WG considered fixing DTDs to support namespaces when introducing namespaces, but decided against it because they figured DTDs suck anyway and it was better to replace it with a more expressive schema language.

[05:22:22.0000] <darobin>
then if you want to define an XML-based language, you can indeed give it a DTD if you're masochistic

[05:22:48.0000] <darobin>
ManDay: but I'm not sure IRC is the best medium from a ground-up course on the XML stack..,

[05:23:34.0000] <ManDay>
darobin: Which "thing" defines which elements have which attributes?

[05:24:00.0000] <ManDay>
darobin: That was a misunderstanding

[05:24:07.0000] <annevk>
zcorpan: I think it makes sense, especially since we'll prolly define URLQuery in terms of application/x-www-form-urlencoded too

[05:24:19.0000] <darobin>
ManDay: it can be many things

[05:24:33.0000] <darobin>
you can write it up in text, you can use code, you can use a schema language

[05:24:50.0000] <ManDay>
darobin: That's what I was thinking ever since I came here

[05:25:03.0000] <darobin>
there is no set "thing" for that; all that matters is that the parties involved agree on how to agree

[05:25:09.0000] <zcorpan>
ManDay: in the case of HTML and SVG, that's defined in the relevant spec using English

[05:25:09.0000] <ManDay>
I know

[05:25:30.0000] <darobin>
(or something that bears some resemblance to English at any rate :)

[05:27:19.0000] <ManDay>
Yes, so here is the question wrt DTD vs. namespaces: If I want to embed SVG into another XML Language which happens to have elements whose names are the same as those of SVG, I would use namespaces, right? So that if an element <foo> exists in both, my XML language and SVG, I could specify    my:foo  or svg:foo , right? So and here is where I think the DTD comes in that, depending on which namespace and thus which element I referen

[05:27:27.0000] <ManDay>
So and here is where I think the DTD comes in that, depending on which namespace and thus which element I reference, the allowed children are different.

[05:31:15.0000] <ManDay>
It was my original impression (and I still think it would be the right thing to do), that every XML Language needs a strict definition (which satisfies a specification for such definitions) of all elements, their attributes and relationships.

[05:31:27.0000] <MikeSmith>
zcorpan: btw http://qa-dev.w3.org:8888/ now has a couple further updates of path-data checking, based on your suggestions. it now consistently replaces newlines with "↩" in both places, and for the context it now just consistently shows the last up-to 20 characters in the value preceding the place where the error was found.

[05:31:56.0000] <ManDay>
After what you've been telling me about DTD being obsolete I get the impression XML became nothing but a bunch of "<" and ">" with no clear statement on how the language is actually constructed

[05:34:45.0000] <zcorpan>
MikeSmith: excellent

[05:34:54.0000] <zcorpan>
MikeSmith: nice work

[05:35:29.0000] <MikeSmith>
nice suggestions :)

[05:36:01.0000] <ManDay>
darobin: Any comment?

[05:36:30.0000] <zcorpan>
ManDay: one of the main points with XML was to allow for DTDless parsing

[05:36:41.0000] <darobin>
yeah

[05:36:55.0000] <darobin>
ManDay: also, you really can't use namespaces with DTDs

[05:37:11.0000] <darobin>
so, you can indeed use namespaces for disambiguation

[05:37:17.0000] <darobin>
and there are plenty of cases in which that's useful

[05:37:36.0000] <darobin>
but it wouldn't particularly help with Web Components

[05:37:37.0000] <ManDay>
zcorpan: What you say doesn't make much sense to me. "Parsing" itsself does not require anything but "parsing" successfully.

[05:37:44.0000] <ManDay>
The question is how to specify a language

[05:38:23.0000] <zcorpan>
ManDay: you specify a language in a specification

[05:39:01.0000] <ManDay>
darobin: Wrt to webcomponents, I think of something like   <div xmlns="something.org/mytemplate_A"><templatevalueA something="foo" /><templatevalueB bar="something"></templatevalueB></div>

[05:39:13.0000] <ManDay>
zcorpan: Yes, I know. Why are you telling me this?

[05:39:25.0000] <zcorpan>
ManDay: i'm just trying to answer your questions

[05:39:36.0000] <ManDay>
Which question?

[05:39:45.0000] <zcorpan>
"The question is how to specify a language"

[05:40:18.0000] <ManDay>
Well, that was meant figuratively. As in: "The concern of XML it should be to specifiy how to specify a language"

[05:40:29.0000] <ManDay>
Which doesn'T have anything to do with parsing something.

[05:44:24.0000] <zcorpan>
the context for my comment about parsing is that SGML did not allow for DTDless parsing, which was something the XML designers wanted to allow

[05:46:18.0000] <darobin>
zcorpan: made for much more creative parsing though :)

[05:47:39.0000] <ManDay>
Point is, after all: There is no specification on how to specify an XML Language formally and in particular what constitutes an XML Language (what is the extend of validity)

[05:48:04.0000] <ManDay>
XML just seems to say: This is the syntax (as in "well formedness") of XML, do whatever you like with it

[05:48:15.0000] <zcorpan>
yeah that seems about right

[05:52:02.0000] <ManDay>
So in terms of XML nothing prevents me from adding a <foo> element to my XHTML document - only some additional requirements for the document?

[05:52:10.0000] <ManDay>
What about XML's <!DOCTYPE ?

[05:52:21.0000] <ManDay>
Doesn't that explicitly have notion of a DTD?

[05:55:39.0000] <zcorpan>
ManDay: XML doesn't prevent you from doing that, but the HTML spec does.

[05:56:21.0000] <ManDay>
zcorpan: Yes, so every XML Language re-invents the wheel for defining a strict language

[05:56:27.0000] <zcorpan>
ManDay: XML still supports DTDs, they just don't work well together with namespaces and have some other problems (like not being expressive enough to be useful for validation)

[05:59:32.0000] <zcorpan>
ManDay: right. i think some specs use a formal grammar for defining the content model, while others use just prose, and some have a mix of both

[06:00:09.0000] <zcorpan>
ManDay: some requirements are not expressible in a formal grammar, even grammars that are more expressive than DTDs. for instance, HTML requires that table cells don't overlap each other.

[06:02:52.0000] <ManDay>
zcorpan: Sure, I do realize that you may always contrive requirements which are too complex for a certain grammar to express. Still, isn't imposing *anything* *but* well-formedness a mistake?

[06:03:42.0000] <zcorpan>
why?

[06:05:36.0000] <ManDay>
Because all the XML languages than have a 80% overlap which is being "re-invented" (as in: not standardized) over and over again

[06:05:41.0000] <ManDay>
s/than/then

[06:05:55.0000] <ManDay>
Hm, wait a second

[06:07:09.0000] <ManDay>
I think I could live with that specification of what is a valid language being a separate spec (say, DTD), but then again, I don't understand why namespaces and DTD don't work together as imagine it. That is:

[06:07:37.0000] <ManDay>
The namespace designating the element from a specific  DTD (and thus its semantics)

[06:08:37.0000] <annevk_>
euhm, DTDs are a relic from the past; they're only part of XML because they didn't think it through at the time

[06:09:37.0000] <zcorpan>
DTDs denote the element's name before namespace processing is performed. that is, you don't put namespace+local name pairs in the DTD, you use the tag name (including namespace prefix) and can't hook in to namespaces

[06:10:24.0000] <zcorpan>
if you use namespaces, you want to use the namespace+local name pair, and the namespace prefix should be able to vary

[06:10:41.0000] <zcorpan>
that's why they don't work together

[06:11:34.0000] <zcorpan>
RELAXNG supports namespaces

[06:16:39.0000] <annevk>
so apparently IE does not do IDNA2008 either?

[06:17:18.0000] <annevk>
I wonder what the chances are of browsers other than Opera adopting some of it

[06:33:00.0000] <annevk>
zcorpan: does https://www.w3.org/Bugs/Public/show_bug.cgi?id=19980#c3 sound okay to you?

[06:34:03.0000] <zcorpan>
annevk: yes

[06:46:41.0000] <ManDay>
Does HTML5 have notion of hyphenation?

[06:50:28.0000] <zcorpan>
ManDay: what kind of hyphenation?

[06:51:29.0000] <ManDay>
Like hy-phen-ation for justified text.

[06:53:54.0000] <Ms2ger>
That's another layer

[06:55:31.0000] <jgraham>
In the web platform lasagne

[06:58:07.0000] <zcorpan>
ManDay: automatic hyphenation is the responsibility of CSS. i don't recall if it's part of CSS yet, or if it is, if it's implemented anywhere yet.

[06:59:07.0000] <zcorpan>
ManDay: it's possible to put in &shy; in long words in HTML, though

[06:59:21.0000] <Ms2ger>
I'm pretty sure Gecko implements something about hyphenation

[06:59:25.0000] <ManDay>
See, there we go

[06:59:27.0000] <ManDay>
Shy...

[06:59:57.0000] <Ms2ger>
&shy; is simply syntax for a unicode character, so hardly HTML

[07:00:49.0000] <zcorpan>
Ms2ger: hey, that character is about the only thing the html4 spec actually had requirements for!

[07:02:38.0000] <annevk>
that can hardly be true, because then dbaron's table with quotes on the side would not be a conforming HTML4 implementation

[07:03:36.0000] <ManDay>
That doesn't make sense

[07:09:54.0000] <jgraham>
ManDay: See /topic

[07:10:34.0000] <ManDay>
Oh, my bad

[07:15:20.0000] <zcorpan>
new DragEvent('dragstart', {dataTransfer:{}}); should that throw TypeError?

[07:15:47.0000] <zcorpan>
member is specced as:   DataTransfer? dataTransfer;

[07:18:23.0000] <zcorpan>
my reading of webidl says yes

[07:19:35.0000] <annevk>
{} != DataTransfer and {} != null so yeah

[07:20:30.0000] <zcorpan>
that kind of reasoning for webidl has failed me before

[07:23:06.0000] <jgraham>
What screenshot sizes do people use for reftests?

[07:23:20.0000] <jgraham>
I have a vauge memory that Mozilla use 800x600?

[07:47:21.0000] <annevk>
I wonder why everyone wants user/password to be supported in URLs

[07:52:50.0000] <Ms2ger>
jgraham, I'm told 600�600

[08:09:18.0000] <SimonSapin>
does html5lib support python3?

[08:10:10.0000] <SimonSapin>
I see a python3 directory in the source repo, but "pip-3.3 install html5lib" fails with syntax errors

[08:11:01.0000] <Ms2ger>
gsnedders would know

[08:11:49.0000] <jgraham>
I think yes, but I don't kow how you arrange it

[08:12:15.0000] <gsnedders>
The latest PyPi release doesn't, what's in hg does except for charset detection I believe.

[08:12:18.0000] <gsnedders>
See the bug.

[08:12:52.0000] <gsnedders>
http://code.google.com/p/html5lib/issues/detail?id=187

[08:13:53.0000] <SimonSapin>
jgraham, gsnedders: is it expected that two separate code bases will be maintained?

[08:15:05.0000] <Ms2ger>
SimonSapin, the idea is to use py3to2, iirc

[08:18:31.0000] <SimonSapin>
Ms2ger: this one? http://pypi.python.org/pypi/py3to2/ I don’t quite understand what it is … how does it compare to 2to3?

[08:18:52.0000] <Ms2ger>
It's the other direction

[08:19:24.0000] <Ms2ger>
For 2to3, the python 2 source is the canonical one; for 3to2, it's the python 3 source

[08:19:54.0000] <SimonSapin>
do you mean http://pypi.python.org/pypi/3to2 maybe?

[08:20:46.0000] <Ms2ger>
Probably

[08:21:02.0000] <SimonSapin>
I see

[08:21:03.0000] <Ms2ger>
/me is surprised this isn't all in the bug

[08:31:20.0000] <MikeSmith>
annevk: about http://www.alvestrand.no/pipermail/idna-update/2012-November/007465.html

[08:32:21.0000] <MikeSmith>
dude is like the Christian Democrat wing of the IETF

[08:32:58.0000] <MikeSmith>
or maybe more like Tea Party

[08:34:03.0000] <MikeSmith>
it seems like there are plenty of people active in IETF work who are a lot less dogmatic and reactionary

[08:36:25.0000] <MikeSmith>
they just have a hard time getting any changes past the old-guard inertia

[08:37:09.0000] <MikeSmith>
e.g., pretty sure dude is on of those who consistently argues against moving away from plain text for RFCs

[08:37:58.0000] <MikeSmith>
some other standards bodies have the same problem

[08:38:55.0000] <MikeSmith>
the only thing that seems to get their attention is when you say "fuck it" and seriously start doing significant "competing" work elsewhere

[08:39:59.0000] <dglazkov>
good morning, Whatwg!

[08:48:42.0000] <annevk>
MikeSmith: yeah, dunno what to do about this problem though

[08:49:24.0000] <annevk>
MikeSmith: Opera has some IDNA2008 hack, other browsers, including IE it appears, implement IDNA2003+ (IDNA2003 with Unicode > 3.2)

[08:50:09.0000] <MikeSmith>
where does the Unicode 46 thing fit into this?

[08:50:23.0000] <annevk>
MikeSmith: Gecko may or may not implement IDNA2008 (what the code does they have access to is not clear), Chrome/Safari are unlikely to move afaict, dunno about IE

[08:50:49.0000] <MikeSmith>
I thought the unicode 46 thing was supposed to fix all this

[08:51:02.0000] <annevk>
MikeSmith: it defines IDNA2003+, but has some modifications in place for a few things IDNA2008 does

[08:51:25.0000] <annevk>
nobody does UTS 46 at this point

[08:51:44.0000] <annevk>
well, actually, some Unicode Members might use it, I'm told, but I'm not sure for what

[08:51:57.0000] <annevk>
maybe Google's search engine does

[09:09:54.0000] <GPHemsley>
dglazkov always knows the right time in a discussion to say good morning.

[09:10:29.0000] <MikeSmith>
GPHemsley: the fact is he has some AI he's written to do that

[09:10:41.0000] <MikeSmith>
really sophisticated stuff

[09:10:45.0000] <GPHemsley>
:)

[10:16:08.0000] <SimonSapin>
TabAtkins: see https://github.com/tabatkins/railroad-diagrams/issues/3#issuecomment-10456348

[10:38:12.0000] <TabAtkins>
SimonSapin: I get emails from issues, you know. ^_^

[10:51:18.0000] <SimonSapin>
TabAtkins: ah, of course. Sorry for being impatient :)

[11:13:06.0000] <Hixie>
nearly done with first draft of proposal for cross-worker canvas! woot!

[11:13:34.0000] <TabAtkins>
Woo!

[11:13:45.0000] <Hixie>
now to write up an e-mail explaining why it's crazy

[11:13:49.0000] <Hixie>
:-P

[11:14:18.0000] <SimonSapin>
Hixie: so you’d rather not have it?

[11:14:36.0000] <Hixie>
no, i mean, why it's a crazy api, but why it's crazy to have it

[11:14:59.0000] <TabAtkins>
s/but/but not/

[11:15:08.0000] <Hixie>
right

[11:15:12.0000] <Hixie>
s/but/not/

[11:15:28.0000] <TabAtkins>
Man, now I gotta fix it.

[11:15:31.0000] <TabAtkins>
s/not not/not/

[11:17:32.0000] <Hixie>
hah

[11:30:44.0000] <cabanier>
Hixie: is it the crazy because of the double-buffering and passing objects across threads?

[11:34:01.0000] <Hixie>
it's mostly crazy being whole chunks of the API assumed the <canvas> and other DOM objects were available to scripts that had a CanvasRenderingContext2D object

[11:34:37.0000] <Hixie>
so i had to go through the whole thing and change it to refer to "the scratch bitmap", provide an ImageBitmap object to handle images, redo the way the "origin-clean" flag was set, etc

[11:35:17.0000] <Hixie>
plus having to still support the old API alongside the new one means there's like 3 ways you can use <canvas> now (x2 for WebGL, so 6) that all involve slightly differnet APIs

[11:35:43.0000] <Hixie>
so e.g. how you change the size of the bitmap when you're in a worker vs when you're using the old getContext() method

[11:36:06.0000] <cabanier>
so, there's a new context with reduced 2d APIs?

[11:36:35.0000] <Hixie>
no, i just use the same interface

[11:36:48.0000] <Hixie>
see http://www.whatwg.org/specs/web-apps/current-work/#2dcontext

[11:36:53.0000] <Hixie>
the single-page copy has the new stuff

[11:37:00.0000] <Hixie>
i'm writing up an e-mail describing it now

[11:37:34.0000] <cabanier>
cool!

[11:37:48.0000] <Hixie>
but e.g. making things like scrollIntoView() work cross-worker involves some pretty... special logic

[11:38:01.0000] <Hixie>
not quite how i would have done it if starting from scratch :-)

[11:43:15.0000] <cabanier>
"list of pending interface actions" :-)

[11:44:16.0000] <Hixie>
yeah :-/

[11:53:49.0000] <Ms2ger>
matjas, if you're going to write something to list implementation status... I've got a few more specs I'd like to see that use :)

[11:54:28.0000] <Hixie>
if anyone wants to use what hte HTML spec uses, we can probably figure something out

[11:54:47.0000] <Hixie>
it's a bit tangled right now but if you know perl and JS, you can probably make a generic version

[11:54:56.0000] <Hixie>
uses mysql on the backend

[11:55:06.0000] <Ms2ger>
Eh, perl ;)

[12:19:20.0000] <annevk>
Hixie: I'm interested in seeing what it would take, though my Perl knowledge is non-existent

[12:26:46.0000] <Hixie>
ok!

[12:26:52.0000] <Hixie>
first draft of proposal is checked in

[12:27:03.0000] <Hixie>
bbl

[12:33:11.0000] <annevk>
createImageBitmap could use the same typedef defined earlier for images

[12:33:20.0000] <annevk>
also, _callback can be written callback again

[12:51:37.0000] <jgraham>
plh started with something for the W3C HTML spec, but it doesn't actually integrate into the document

[12:52:06.0000] <jgraham>
Uses caniuse for the data, which is better than the status annotations in WHATWG HTML

[13:10:02.0000] <Hixie>
jgraham: yeah, that'd be nice.

[13:10:13.0000] <Hixie>
jgraham: any idea how he mapped the data from one to the other?

[13:14:22.0000] <jgraham>
http://dvcs.w3.org/hg/html/file/c1a296c26d12/tools/json/caniuse.json

[13:14:45.0000] <jgraham>
Maps sections

[13:15:37.0000] <Hixie>
yikes

[13:15:49.0000] <Hixie>
hm

[13:15:54.0000] <Hixie>
is that all caniuse has?

[13:15:57.0000] <Hixie>
that seems limited

[13:16:20.0000] <Hixie>
maybe caniuse could override the spec status for sections it has, or something, and leave the others?

[13:16:23.0000] <Hixie>
hmmmm

[13:16:51.0000] <jgraham>
Not "yikes, they think that blobbuilder is still a thing"

[13:17:08.0000] <Hixie>
i didn't even look at the empty lines

[13:17:28.0000] <jgraham>
But I agree it's not super-fine-graied

[13:17:31.0000] <jgraham>
*grained

[13:18:03.0000] <annevk>
xhr2!

[13:20:29.0000] <annevk>
http://dvcs.w3.org/hg/xhr/shortlog

[14:04:54.0000] <GPHemsley>
Hixie: Feedback welcome on my most recent mimesniff commits.

[14:20:31.0000] <Hixie>
GPHemsley: from a quick glance, seems solid

[14:20:53.0000] <GPHemsley>
Anyone have anything to say about the (X-)Content-Type-Options header? I just sent an e-mail to the list about it.

[14:20:59.0000] <GPHemsley>
Hixie: Awesome, thanks.

[14:32:38.0000] <annevk>
GPHemsley: just replied

[14:32:46.0000] <GPHemsley>
thanks

[14:43:26.0000] <GPHemsley>
annevk: Replied. :)

[14:45:31.0000] <marcosc>
Hi, I'm currently implementing img@srcset's parsing algorithm but I'm a bit stuck (http://dev.w3.org/html5/srcset/#processing-the-image-candidates). I'm having trouble groking step 19:

[14:45:42.0000] <marcosc>
"If there are any entries in candidates that have an associated width that is less than max width, then remove them, unless that would remove all the entries, in which case remove only the entries whose associated width is less than the greatest such width."

[14:45:58.0000] <marcosc>
I don't really understand what "the greatest such width" is

[14:46:08.0000] <marcosc>
;(

[14:46:16.0000] <marcosc>
/me sad panda 

[14:46:28.0000] <Ms2ger>
I don't think that was the link you meant to mention here :)

[14:47:18.0000] <Hixie>
marcosc: it means remove all by thte biggest one

[14:47:35.0000] <marcosc>
Hixie: thanks!

[14:48:12.0000] <annevk>
GPHemsley: if content uses X-Content-Type-Options, there's no need to start calling it Content-Type-Options and break that content imo

[14:48:19.0000] <Hixie>
GPHemsley: my understanding is that X-Content-Type-Options basically doesn't do anything useful

[14:48:19.0000] <annevk>
GPHemsley: that's the main point I wanted to make

[14:48:30.0000] <Hixie>
GPHemsley: and that it mostly just makes IE behave like other browsers

[14:49:42.0000] <GPHemsley>
annevk: I was intending to have them both be equal, but that's the least of my worries.

[14:50:11.0000] <annevk>
GPHemsley: equal or not equal, you double (if not worse, because of combinations) testing effort

[14:50:13.0000] <GPHemsley>
Hixie: AFAICT, the browsers all behave differently in a lot of cases, so I'm not sure what that means.

[14:50:26.0000] <GPHemsley>
annevk: Fair enough.

[14:50:34.0000] <annevk>
GPHemsley: we already have x- prefixed features standardized too, it's not a big deal

[14:50:42.0000] <Hixie>
GPHemsley: i mean IE still does a ton of sniffing even with it set, but less sniffing than it otherwise would, and that browsers in general do a ton less sniffing than IE

[14:50:46.0000] <annevk>
e.g. application/x-www-form-urlencoded

[14:50:59.0000] <GPHemsley>
annevk: It was more based on my impression that it wasn't widely implemented; if it is, that's a different story.

[14:51:19.0000] <annevk>
btw, idna-update is still ongoing

[14:51:31.0000] <annevk>
http://www.alvestrand.no/pipermail/idna-update/2012-November/007477.html is my latest

[14:52:11.0000] <Hixie>
GPHemsley: if it's only in IE, the best thing to do would be to just ignore it and specify what it does as being the default, imho

[14:52:14.0000] <GPHemsley>
Hixie: According to abarth's article, IE does a lot less sniffing than you think, IIUIC. And most of it is covered by this spec.

[14:52:17.0000] <Hixie>
it=header

[14:52:37.0000] <Hixie>
GPHemsley: mimesniff = a ton of sniffing

[14:52:55.0000] <Hixie>
sorry for not defining my units :-)

[14:53:20.0000] <GPHemsley>
:)

[14:53:39.0000] <GPHemsley>
Hixie: According to abarth, IE sniffs on only 35 MIME types.

[14:53:51.0000] <GPHemsley>
And a bunch are not even widely used.

[14:53:55.0000] <Hixie>
four tons of sniffing

[14:54:32.0000] <GPHemsley>
s/IE/IE7/

[14:56:10.0000] <Hixie>
the real problem btw is not sniffing, the real problem is ignoring Content-Type

[14:56:34.0000] <Hixie>
when there's no Content-Type, the ideal browser would sniff millions of types and pick the exact right one

[14:56:41.0000] <GPHemsley>
Hixie: AFAICT, IE's sniffing behavior is not terrible.

[14:57:00.0000] <Hixie>
old IE used to sniff text/html from an image/png file

[14:57:04.0000] <Hixie>
which is a security nightmare

[14:57:16.0000] <GPHemsley>
other than that part

[14:57:23.0000] <Hixie>
that's the only part that's the problem :-)

[14:57:28.0000] <Hixie>
that's what mimesniff is about fixing

[14:57:47.0000] <GPHemsley>
Hixie: Would you mind defining the difference between "sniffing" and "ignoring Content-Type" in this context?

[14:58:21.0000] <GPHemsley>
mimesniff says "you are allowed to ignore Content-Type in only these specific instances"

[14:58:28.0000] <Hixie>
i mean that if you don't know what the type is, then trying to work out if it's a PNG or a GIF is fine, but if you've been told it's an HTML file, trying to determine if it's a PNG or a GIF is bad.

[14:58:47.0000] <GPHemsley>
the addition of X-Content-Type-Options: nosniff will mean "you have much fewer opportunities to ignore Content-Type"

[14:58:58.0000] <Hixie>
what opportunities does it remove?

[14:59:29.0000] <GPHemsley>
Hixie: The way I have it now, everything that isn't sniffing undefined/unknown content-types

[14:59:55.0000] <Hixie>
i doubt that is web-compatible

[15:00:15.0000] <GPHemsley>
Hixie: But annevk's suggested alternative is to only limit sniffing scriptable types, which is a much smaller list.

[15:00:30.0000] <annevk>
well my suggestion was to test IE

[15:00:31.0000] <Hixie>
in particular, if you receive an image/png with X-Content-Type-Options: nosniff, but it's actually a GIF, I doubt it's web-compatible to treat it as a PNG (and fail) rather than sniffing it to be a GIF.

[15:00:35.0000] <annevk>
and whoever else implements the header

[15:00:38.0000] <GPHemsley>
(But would also mean that Gecko has much farther to go to reach compliance with the spec, I think.)

[15:00:51.0000] <Hixie>
i think there is no way to spec this without actually testing it

[15:01:16.0000] <Hixie>
which means writing lots of tests and running them and works out what is implemented

[15:01:53.0000] <GPHemsley>
right

[15:19:35.0000] <GPHemsley>
According to http://www.browserscope.org/?category=security , X-C-T-O is only implemented in IE and Chrome

[15:19:52.0000] <GPHemsley>
Not Firefox, Opera, or Safari


2012-11-17
[16:53:31.0000] <GPHemsley>
It strikes me that a lot of the proposals and/or criticisms around HTML involve trying to make it more XML-like.

[17:23:17.0000] <annevk>
GPHemsley: really?

[17:23:28.0000] <annevk>
GPHemsley: or what I mean is, where do you see that?

[17:24:18.0000] <annevk>
heycam: are you fixing Web IDL bugs again?

[17:24:29.0000] <GPHemsley>
annevk: It's not explicit.

[17:24:45.0000] <annevk>
heycam: wondering what your thoughts are on https://www.w3.org/Bugs/Public/show_bug.cgi?id=19646

[17:25:07.0000] <heycam>
annevk, hey yeah I am. (I'll get back more into it next week.)

[17:25:35.0000] <heycam>
annevk, sorry bit busy atm, I'll take a look later

[17:25:40.0000] <annevk>
fair enough

[17:26:11.0000] <annevk>
heycam: there's a bunch of things actually in your queue, they're not actually that important, I just like to move past them :p

[17:26:43.0000] <annevk>
but I guess I should fix my own bugs, like username/password for URLs

[17:29:09.0000] <annevk>
We use "append" in specs quite a lot, any problems if I start using "prepend"?

[17:33:54.0000] <heycam>
yeah I'll get stuck in to them soon, sorry for the delay

[17:42:02.0000] <TabAtkins>
annevk: No, feel free to use prepend.  I use it all the time.

[17:42:29.0000] <annevk>
putting stuff in front feels kinda like a hack :)

[17:42:34.0000] <annevk>
but yeah, I went with it

[17:42:53.0000] <TabAtkins>
Sometimes that's what you gotta do!

[17:43:06.0000] <annevk>
btw man, happy b-day!

[17:43:19.0000] <TabAtkins>
Yay!  It's already the day after for you, though.

[17:44:34.0000] <divya>
wahh BIRTHDAY TIMES TabAtkins?!

[17:44:39.0000] <divya>
how old are you now? 14?

[17:44:44.0000] <divya>
:)))))

[17:44:46.0000] <divya>
/me runs

[17:44:57.0000] <divya>
HAPPY BUDDAYYYYY

[17:45:58.0000] <TabAtkins>
divya === jerk

[17:46:04.0000] <TabAtkins>
Anyway, 27 this year.

[17:46:12.0000] <divya>
:))))

[17:46:21.0000] <divya>
TabAtkins:  I can be because i am older than you!

[17:46:31.0000] <TabAtkins>
Yeah, you're like 50.

[17:46:41.0000] <divya>
:)))) YOU FOUND MY SEKRIT

[17:56:44.0000] <annevk>
GPHemsley: you should look into your git thingie

[17:56:54.0000] <annevk>
GPHemsley: the "Merge branch 'master' of github.com:whatwg/xref" should not be needed

[17:57:11.0000] <annevk>
GPHemsley: at least GitHub.app never does it when I push after you have pushed something

[17:59:51.0000] <divya>
anybody know of this canvas() as value for content prop http://trac.webkit.org/changeset/134100

[17:59:54.0000] <divya>
TabAtkins: ^

[18:00:00.0000] <divya>
or hober^

[18:00:11.0000] <TabAtkins>
What about it?  It's a webkit-specific more-limited version of element().

[18:00:25.0000] <divya>
no i wonder if it was proposed anywhere

[18:00:40.0000] <TabAtkins>
No, because element() is a superset of its functionality.

[18:00:50.0000] <divya>
wanted to see context to how it came to be TabAtkins. i am intrigued.

[18:00:53.0000] <divya>
o ic.

[18:01:50.0000] <TabAtkins>
I dunno if it was inspired by -moz-element(), or vice versa, or if they were independent inventions at the same time, but they solve the same basic problem.

[18:02:01.0000] <TabAtkins>
Just element() can also take <img>, <video>, and other elements.

[18:02:27.0000] <divya>
well its not quite the same as per implementation at least.

[18:02:28.0000] <TabAtkins>
And, for SVG purposes, is morphing into a general way to refer to paint servers unambiguously.

[18:02:43.0000] <divya>
it has a getCSSCanvasContext and stuff

[18:02:47.0000] <TabAtkins>
Of course not, canvas() is simpler to implement, because it's exactly *one* of element()'s abilities.

[18:03:03.0000] <divya>
no i mean it is not gathering selectors to render is what i mean.

[18:03:10.0000] <divya>
which is what element() does.

[18:03:24.0000] <TabAtkins>
element() had, and will regain, a way to refer to an element without a selector.

[18:03:24.0000] <divya>
it seems to refer to a specific canvas context.

[18:03:33.0000] <divya>
o okay.

[18:03:35.0000] <TabAtkins>
So you can just create the canvas in script, never insert it, but use it as an image.

[18:03:43.0000] <divya>
right yeah thats what.

[18:04:04.0000] <divya>
that is what is happening here from test sample.

[18:20:40.0000] <kennyluck>
Happy b-day, TabAtkins!

[18:21:31.0000] <TabAtkins>
Thanks!

[19:43:23.0000] <Davstern15>
Sigh.

[19:43:36.0000] <Davstern15>
Can somebody figure out how to trim an image in JS in Canvas?

[19:47:18.0000] <Hixie>
Davstern15: how do you mean?

[19:49:12.0000] <Davstern15>
Basically, I have a Canvas and I want to turn it into a trimmed version where any whitespace outside of the rectangle with drawn stuff is removed.

[19:49:33.0000] <Davstern15>
That is, unknown stuff is drawn to it, and where alpha == 0, it's "blank".

[19:49:45.0000] <Davstern15>
I have been at this annoying problem for a long time now.

[19:49:56.0000] <Davstern15>
The only examples I've found are broken and/or nonsensical.

[19:50:49.0000] <Hixie>
just create a new canvas element of the right size, and drawImage() the part you want to keep into the new canvas

[19:51:18.0000] <zewt>
sounds like his question is how to determine the "right size"

[19:51:23.0000] <Davstern15>
Yes...

[19:51:25.0000] <Davstern15>
The coordinates.

[19:51:30.0000] <Davstern15>
x1, y1, x2, y2.

[19:51:44.0000] <Hixie>
ooh

[19:51:48.0000] <Davstern15>
And, preferably, packaged into an isolated function that I can just "plug and play", because I hate this particular problem.

[19:51:49.0000] <Hixie>
that's not a canvas question then :_)

[19:51:54.0000] <Hixie>
it's just a graphics question

[19:51:59.0000] <Hixie>
/me isn't a graphics person, sorry :-)

[19:52:10.0000] <Davstern15>
It's always "something else".

[19:52:21.0000] <zewt>
well, it could be a canvas question, it's just a question of whether "trimming away empty space" is a use case for canvas

[19:52:23.0000] <Davstern15>
You could join any channel and ask something on-topic and they'd twist it to be irrelevant.

[19:52:57.0000] <zewt>
(eg. photoshop image -> trim -> transparent pixels)

[19:53:23.0000] <Hixie>
Davstern15: i'm just saying i don't know the answer, you are welcome to ask here if you want

[19:53:29.0000] <Hixie>
Davstern15: we do sometimes have graphics people here

[19:53:55.0000] <Davstern15>
Isn't it more a "logic" question?

[19:54:03.0000] <Hixie>
Davstern15: however, you may be able to get an answer easier and quicker on a channel dedicated to graphics algorithms rather than one to do with the web specifically

[19:54:28.0000] <Davstern15>
The reason I ask here is I am hoping that somebody would have a function lying around to do this.

[19:54:31.0000] <zewt>
well, doing it algorithmically is trivial; grab the image data and do the work

[19:54:37.0000] <Davstern15>
Since this is done in Canvas context, it's quite special.

[19:55:00.0000] <Davstern15>
No pun intended with "Canvas context", BTW.

[19:55:02.0000] <Hixie>
if the question is "given a set of pixels, find the smallest subset rectangle that contains all pixels with a non-zero alpha" then it's an algorithm question, the answer would presumably be the same for any graphics system, not just canvas

[19:55:11.0000] <zewt>
might not be very efficient for large images but probably the only way for 2d canvases (speaking off the top of my head so don't read too deeply, heh)

[19:55:19.0000] <Hixie>
i mean i guess we could do a brute force approach, yeah

[19:55:23.0000] <Hixie>
/me tries

[19:55:32.0000] <Davstern15>
It doesn't need to be efficient. It's done in the beginning of the program. It's only done because Firefox sucks.

[19:55:42.0000] <Davstern15>
And cannot do a certain thing in realtime, wheras the other browsers can.

[19:55:48.0000] <zewt>
everything sucks, firefox just has the misfortune to be a subset of everything

[19:55:51.0000] <Davstern15>
So this whole thing is only for Firefox to run properly.

[19:56:21.0000] <Davstern15>
Hardware acceleration my shoes...

[19:57:09.0000] <zewt>
hardware acceleration for javascript pixel access is hard, possibly impossible

[19:57:17.0000] <zewt>
dunno if that's what you're complaining about, heh

[19:57:45.0000] <Davstern15>
No...

[19:57:57.0000] <Davstern15>
The reason this is done to begin with is that its drawing functions are so slowl.

[19:57:59.0000] <Davstern15>
-l

[19:58:00.0000] <zewt>
if you want hardware-accelerated image trimming, you probably need some clever webgl work

[19:58:07.0000] <Davstern15>
arc() = turtle speed @ Firefox.

[19:58:17.0000] <Davstern15>
WebGL Is worthless because IE doesn't support it.

[19:58:26.0000] <zewt>
itym ie is worthless because it doesn't support webgl

[19:58:43.0000] <Davstern15>
IE is the only browser that truly is fast at rendering 2D Canvas, so I love it because of that.

[19:58:59.0000] <Davstern15>
It has actual hardware acceleration as opposed to "pretend acceleration".

[20:07:54.0000] <Hixie>
Davstern15: ok

[20:07:56.0000] <Hixie>
Davstern15: here:

[20:08:32.0000] <Hixie>
one sec, goo.gl and bit.ly are being annoying

[20:09:28.0000] <zewt>
for a change of pace

[20:09:42.0000] <Hixie>
ok screw it

[20:09:49.0000] <Hixie>
Davstern15: go to http://software.hixie.ch/utilities/js/canvas/

[20:09:58.0000] <Hixie>
Davstern15: and click the "Download" button

[20:10:03.0000] <Hixie>
(it won't download anything)

[20:10:33.0000] <Davstern15>
Thank you very much for the effort. I will review the code now. It looks logical at first glance.

[20:11:54.0000] <Hixie>
probably the most naive code of the year, but like i said, i'm no graphics person :-)

[20:14:35.0000] <Hixie>
hit download again, i made it more fun

[20:14:58.0000] <Hixie>
actually renders pretty fast on this machine, but it's stupidly overpowered

[20:15:54.0000] <Davstern15>
"naive" code?

[20:16:05.0000] <GPHemsley>
annevk: If I had to guess, I'd say GitHub.app probably automatically pulls at some point. But I'll look into it.

[20:16:27.0000] <Hixie>
Davstern15: brute-force

[20:16:42.0000] <Hixie>
Davstern15: for example, it checks all the pixels in the corner twice, once for the left and once for the top

[20:16:47.0000] <Hixie>
Davstern15: (for each corner)

[20:17:40.0000] <Hixie>
maybe checking the rows and columns at the same time would be more efficient (like, going in a spiral)

[20:17:46.0000] <Hixie>
that way you'd only need to check each pixel once

[20:17:51.0000] <Hixie>
anyway

[20:17:57.0000] <Hixie>
that's all Exercises Left To The Reader

[20:18:54.0000] <Davstern15>
Hixie: Sorry for being slow... I still have to do some unexpected things before I can sink my teeth into your nice code.

[20:19:05.0000] <Hixie>
no worries :-)

[20:19:18.0000] <Hixie>
anyway i hope it helps

[20:19:19.0000] <Hixie>
bbl

[20:20:04.0000] <GPHemsley>
Hixie: What is this code doing? Is the image supposed to keep moving?

[20:22:10.0000] <GPHemsley>
I mean, it looks like it's calculating the height of the image, but it keeps getting bigger again after it gets smaller...

[20:22:20.0000] <GPHemsley>
(And it hasn't stopped yet.)

[20:23:24.0000] <GPHemsley>
Hixie: Incidentally, former Mozillians on Twitter seem to love your canvas on workers proposal.

[20:41:09.0000] <Hixie>
GPHemsley: that console just runs the script over and over and over

[20:41:26.0000] <Hixie>
GPHemsley: each iteration, it draws a picture, then finds the bounding box

[20:46:36.0000] <Davstern15>
Hixie: I am going insane here... about a small detail.

[20:46:52.0000] <Hixie>
yessir

[20:47:13.0000] <Davstern15>
For some reason, tmpContext.drawImage(targetContext, 0, 0); is a "TypeMismatchError"

[20:47:34.0000] <Hixie>
until today (and therefore, not implemented by any browsers yet) you couldn't drawImage() a rendering context

[20:47:42.0000] <Hixie>
just replace targetContext with the canvas element

[20:47:56.0000] <Davstern15>
But... then how could I do that in my previous stuff?

[20:48:01.0000] <Davstern15>
And why "today"?

[20:48:25.0000] <Hixie>
i checked in a big change to the canvas spec today that, amongst many other things, lets you pass a rendering context to drawImage()

[20:48:39.0000] <Hixie>
but none of the browsers support that yet, so i doubt that's worked before

[20:48:49.0000] <Davstern15>
That is one of the more bizarre coincidences this month for me.

[20:48:52.0000] <Hixie>
you probably passed a canvas, which is the only way that used to work :-)

[20:48:55.0000] <Hixie>
heh

[20:48:55.0000] <Davstern15>
I now must check this.

[20:49:08.0000] <Hixie>
it's what GPHemsley was talking about above :-)

[20:49:13.0000] <Hixie>
GPHemsley: speaking of which, which tweets?

[20:49:26.0000] <Hixie>
Davstern15: http://html5.org/tools/web-apps-tracker?from=7508&to=7509

[20:49:31.0000] <Davstern15>
Yes, you are right. I was sending a canvas and not the context in the previous stuff.

[20:49:53.0000] <Davstern15>
Not sure why they would decide to change that, though.

[20:50:10.0000] <Hixie>
they?

[20:50:17.0000] <GPHemsley>
Hixie: https://twitter.com/jeresig/status/269653285168902145 https://twitter.com/dalmaer/status/269654501441556480

[20:51:46.0000] <Hixie>
GPHemsley: awesome, someone finally liked something i specced :-D

[20:51:48.0000] <Hixie>
it's been a whiel :-)

[20:52:46.0000] <GPHemsley>
:)

[20:54:57.0000] <Davstern15>
"Unexpected call to method or property access. "

[20:54:58.0000] <Davstern15>
Sigh.

[20:55:03.0000] <Davstern15>
I don't get what the hell it is talking about.

[20:55:18.0000] <Davstern15>
Hixie: Yes. They. I guess... you? :)

[20:55:44.0000] <Davstern15>
It is ambiguous what "checked" meant in that case.

[20:55:54.0000] <Davstern15>
Maybe you meant that you passed that into the standard.

[20:57:52.0000] <Davstern15>
Please forget my last quote.

[20:58:02.0000] <Davstern15>
"Unexpected call to method or property access." was due to a stupid error.

[20:58:19.0000] <Davstern15>
Getting IndexSizeErrorsm though.

[20:58:22.0000] <Davstern15>
*,

[21:08:15.0000] <Davstern15>
If I draw stuff to a context, do I have to do something special for that to apply to its associated canvas?

[21:09:58.0000] <Davstern15>
Hixie: http://pastebin.com/raw.php?i=2XASh10q

[21:10:05.0000] <Davstern15>
It seems like it ignores everything I draw.

[21:17:03.0000] <Davstern15>
Hixie: Any idea at all?

[21:19:49.0000] <Hixie>
sorry, was off watching tv

[21:20:08.0000] <Hixie>
that code looks fine to me

[21:20:17.0000] <Hixie>
returns a canvas with a rectangle on it

[21:20:25.0000] <Davstern15>
Well...

[21:20:31.0000] <Davstern15>
It doesn't seem to be...

[21:20:35.0000] <Hixie>
(well, returns a 32x32 square canvas of a solid colour, really)

[21:20:40.0000] <Hixie>
i posit the problem is elsewhere :-)

[21:21:07.0000] <Hixie>
re why the spec changed, it was part of a larger change enabling the use of canvas in workers

[21:21:34.0000] <Davstern15>
Wow. You are right.

[21:21:38.0000] <Davstern15>
I can't believe I make so many errors.

[21:21:41.0000] <Davstern15>
Stupid, stupid errors.

[21:43:51.0000] <GPHemsley>
Hixie, annevk: I'm curious what your thoughts are on http://trac.tools.ietf.org/wg/websec/trac/ticket/22

[21:44:43.0000] <GPHemsley>
Davstern15: I think you're a bit hard on yourself (and others, perhaps). Making errors is how you learn.

[21:45:04.0000] <Davstern15>
Well, I am getting stuck constantly with these things and inch forward so slowly...

[21:45:19.0000] <Davstern15>
The translate() thing makes no sense either.

[21:45:47.0000] <Davstern15>
testContext.scale(2, 1); = Oval but cuts off. testContext.scale(4, 1); = Nothing is drawn.

[21:54:02.0000] <Davstern15>
"#¤%&/()

[21:54:05.0000] <Davstern15>
WHAT?

[21:54:19.0000] <Davstern15>
The MDN does a horrible job at explaining anything.

[21:55:04.0000] <Davstern15>
All I want is to draw an oval.

[21:55:08.0000] <Davstern15>
Why doesn't it let me draw an oval?

[22:02:56.0000] <GPHemsley>
hmm... it appears I broke the IRC log search, because it takes the search query as a raw regexp

[22:04:51.0000] <Davstern15>
This kind of stress can't be good.

[22:05:02.0000] <Davstern15>
http://jsfiddle.net/xLxM5/ <-- Okay, please tell me why this doesn't draw an arc at all.

[22:05:12.0000] <Davstern15>
I am trying to make a minimal example of what the problem is.

[22:05:22.0000] <Davstern15>
But now it won't even draw an arch without any special stuff.

[22:28:37.0000] <GPHemsley>
latenight bugmail ftw

[22:31:23.0000] <Davstern15>
Helping Davstern15 "ftw".

[22:31:39.0000] <Davstern15>
Looking at Davstern15's jsfiddle and figuring it out and reporting the issues ftw.

[22:32:04.0000] <Davstern15>
Hixie: BTW... I am still very grateful for your help earlier, but there is a piece missing from the puzzle.

[22:36:36.0000] <Davstern15>
Somebody helped me already. So no need.

[01:14:21.0000] <Ms2ger>
Oh, yay, drawImage gained steps

[06:29:28.0000] <Davstern15>
Can you somehow set the amount of anti-aliasing for text drawn in a Canvas? Like you can in Flash?

[07:15:01.0000] <annevk>
GPHemsley: charset sniffing is done after you know the type of content so it seems that's a separate layer tied to sniffed/actual type

[07:15:23.0000] <annevk>
GPHemsley: extracting charset from a content-type header however may be part of your document I suppose

[07:16:09.0000] <annevk>
GPHemsley: e.g. a <script> pointing to something labeled with text/html;charset=windows-1253

[07:23:42.0000] <annevk>
so the username/password stuff is slightly buggy

[07:24:53.0000] <annevk>
I need to escape / \ ? # on setting too, and also : for username

[07:30:03.0000] <annevk>
matjas: please implement the implementation status thingie in a somewhat generic way so we can reuse it :-)

[07:34:13.0000] <annevk>
Hixie: you have a stray BitmapImage in the spec

[07:34:30.0000] <annevk>
Hixie: actually you have that twice

[08:19:06.0000] <GPHemsley>
annevk, Hixie: See also page 10 of http://tools.ietf.org/agenda/82/slides/websec-2.pdf

[08:20:06.0000] <GPHemsley>
annevk: In terms of "sniffing", rather than just parsing the Content-Type header, isn't charset determination done elsewhere? Encoding, maybe?

[08:20:33.0000] <GPHemsley>
Reading the charset parameter of the Content-Type header is trivial, I think; I'm not sure that's what the issue was.

[08:26:34.0000] <GPHemsley>
TIL that LF-only linebreaks in text/* documents is a violation of the spec

[08:27:34.0000] <GPHemsley>
(RFC 2046)

[08:30:08.0000] <GPHemsley>
Also: "The rules

[08:30:08.0000] <GPHemsley>
   regarding line breaks detailed in the previous section must also be

[08:30:09.0000] <GPHemsley>
   observed -- a character set whose definition does not conform to

[08:30:09.0000] <GPHemsley>
   these rules cannot be used in a MIME "text" subtype."

[08:35:22.0000] <GPHemsley>
"   Unrecognized subtypes of "text" should be treated as subtype "plain"

[08:35:22.0000] <GPHemsley>
   as long as the MIME implementation knows how to handle the charset.

[08:35:22.0000] <GPHemsley>
   Unrecognized subtypes which also specify an unrecognized charset

[08:35:22.0000] <GPHemsley>
   should be treated as "application/octet- stream".

[08:35:22.0000] <GPHemsley>
"

[08:35:29.0000] <GPHemsley>
hmm

[08:41:51.0000] <annevk>
GPHemsley: no that issue was Larry thinking all the sniffing should be done in MIME sniff

[08:42:07.0000] <annevk>
GPHemsley: which I disagree with, that's a format matter

[08:42:12.0000] <GPHemsley>
ok

[08:42:20.0000] <GPHemsley>
so what part should I worry about?

[08:42:29.0000] <annevk>
GPHemsley: maybe parsing Content-Type

[08:42:57.0000] <GPHemsley>
including all of its parameters?

[08:43:03.0000] <annevk>
GPHemsley: yeah

[08:43:05.0000] <GPHemsley>
(not just the ones we know about)

[08:43:06.0000] <GPHemsley>
ok

[08:44:09.0000] <annevk>
GPHemsley: the stuff I mentioned earlier, whether "Content-Type:text/html;" means text/html or undefined

[08:44:39.0000] <annevk>
GPHemsley: I guess the same would go for "...:text/html;charset=utf-8;"

[08:44:55.0000] <GPHemsley>
right

[08:45:40.0000] <annevk>
pretty sure HTTP is just dead wrong there

[08:45:44.0000] <GPHemsley>
I think extraneous spaces and semicolons should be fine in the values

[08:45:54.0000] <annevk>
not sure whether they fixed that for HTTPbis, I believe I did raise it at one point on their list

[08:45:58.0000] <GPHemsley>
but I'm not sure about the separator between header name and header value

[08:46:28.0000] <annevk>
well that's a different level, ideally

[08:46:38.0000] <GPHemsley>
OK

[08:46:46.0000] <GPHemsley>
so, assuming that the header itself is formatted correctly

[08:46:54.0000] <GPHemsley>
as far as HTTP is concerned

[08:46:59.0000] <GPHemsley>
generically

[08:47:34.0000] <GPHemsley>
now... does SMTP use the same format as HTTP for headers like this?

[08:52:17.0000] <GPHemsley>
annevk: Do you suppose I should look specifically for certain parameters (like charset) or just treat them all generically and let downstream figure it out?

[08:52:52.0000] <annevk>
GPHemsley: I think the parsing should be generic

[08:53:26.0000] <annevk>
GPHemsley: you might want to have a shorthand for certain things though

[08:54:32.0000] <annevk>
like "give me the value of charset" (and here you need to take into account there could be multiple parameters named charset), or give me the encoding from charset (here you need to use "get an encoding" from the Encoding Standard)

[08:57:11.0000] <GPHemsley>
right... although I don't think the current version of the spec has any use for those calls

[08:57:22.0000] <GPHemsley>
oh

[08:57:25.0000] <GPHemsley>
I see you what you mean

[08:57:54.0000] <GPHemsley>
wouldn't it make sense to combine the two?

[08:58:20.0000] <GPHemsley>
as in, mimesniff handles the logic of turning a charset parameter into an encoding

[09:00:27.0000] <annevk>
yeah maybe

[09:00:46.0000] <annevk>
in that case you'd just use the algorithm from the Encoding Standard

[09:01:16.0000] <annevk>
I suppose MIME sniffing might be the right layer to address this

[09:01:59.0000] <annevk>
mimesniff tells you the MIME type and the encoding specified at the encapsulation level (e.g. HTTP)

[09:02:24.0000] <annevk>
and then it dispatches to the format layer (based on MIME type) which takes the encoding into account

[09:47:56.0000] <Davstern15>
Can you somehow set the amount of anti-aliasing for text drawn in a Canvas? Like you can in Flash?

[11:44:26.0000] <zewt>
javascript "compression" needs to die a flaming death

[11:49:20.0000] <Davstern15>
zewt: What do you mean?

[11:49:50.0000] <zewt>
well, shooting it into the sun would be preferable, but a volcano would suffice

[11:50:04.0000] <Davstern15>
What is it?

[11:50:34.0000] <zewt>
removing whitespace from javascript and other nonsense

[11:52:26.0000] <Davstern15>
Obscurification.

[11:52:29.0000] <Davstern15>
Compilation.

[11:52:36.0000] <Davstern15>
I find it to be a necessity.

[11:53:06.0000] <zewt>
that's an odd way of saying "complete nonsense"

[12:27:13.0000] <annevk>
MikeSmith: care to address https://www.w3.org/Bugs/Public/show_bug.cgi?id=19993 ?

[12:27:18.0000] <annevk>
MikeSmith: I guess I can do it myself

[12:34:30.0000] <annevk>
fixed

[12:35:49.0000] <annevk>
Hixie: http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[12:36:11.0000] <annevk>
Hixie: kinda interesting approach, it's at least acknowledging the copy

[13:05:37.0000] <annevk>
GPHemsley: http://stackoverflow.com/questions/2871655/proper-mime-type-for-fonts might be of interest

[13:06:08.0000] <annevk>
GPHemsley: in general though I'm not sure why we need a MIME type here

[13:06:31.0000] <annevk>
GPHemsley: MIME types are just identifiers for formats after all, you might as well point straight to the format

[13:09:52.0000] <Ms2ger>
TabAtkins, happy (birth + 1)day

[13:26:51.0000] <SimonSapin>
TabAtkins: is it enough to escape just "<" ?

[13:29:20.0000] <annevk>
matjas: so for http://url.spec.whatwg.org/ you get the new icon?

[13:30:03.0000] <annevk>
SimonSapin: you don't need to escape >

[13:30:08.0000] <annevk>
SimonSapin: in HTML anyway

[13:30:24.0000] <annevk>
not needed in most of XML either

[13:30:56.0000] <Velmont>
Ms2ger: You could do that for a full year :D

[13:33:48.0000] <SimonSapin>
annevk: this is for generated SVG: https://github.com/tabatkins/railroad-diagrams/blob/89b7679ae2282207cb42f353f44fbdd4f013411d/railroad-diagrams.js#L71

[13:34:09.0000] <SimonSapin>
although it is often inline SVG inside HTML

[13:34:54.0000] <annevk>
SimonSapin: seems safer to construct a Text node

[13:35:48.0000] <annevk>
SimonSapin: hmm, is the input constrained?

[13:36:17.0000] <annevk>
SimonSapin: e.g. this doesn't seem to cater for &

[13:36:20.0000] <SimonSapin>
annevk: the function above does that, this is to get a string. I guess it could be useful in a non-browser environment

[13:36:33.0000] <SimonSapin>
Tab just fixed it: https://github.com/tabatkins/railroad-diagrams/commit/96ce88eb51

[13:37:38.0000] <SimonSapin>
unconstrained input, at least for text

[13:38:08.0000] <annevk>
but I guess it's your own input

[13:40:09.0000] <SimonSapin>
it’s a lib that could be useful to other people

[13:42:17.0000] <SimonSapin>
and the same input should work with both toSVG (assigning to element.textContents) and toString (appending strings, without a DOM)

[13:50:39.0000] <annevk>
yeah, I'm thinking of using it for URLs at some point

[13:51:49.0000] <SimonSapin>
cool

[13:54:26.0000] <SimonSapin>
annevk: you can either keep just the JS source and have the client regenerate the SVG every time the page is loaded (as in the example page) or copy the SVG output into your document (as in css3-syntax)

[13:54:37.0000] <SimonSapin>
the latter is probably "safer" in terms of JS compat

[13:55:06.0000] <annevk>
yeah, I suppose I'll do the latter once we've decided on the syntax :)

[13:55:38.0000] <SimonSapin>
the URL syntax?

[13:56:39.0000] <annevk>
yeah

[14:13:56.0000] <annevk>
fixed the username/password bug

[14:26:04.0000] <GPHemsley>
annevk: Yeah, I've seen that. I think having an authoritative MIME type is important. No need to throw the baby out with the bathwater.

[14:28:25.0000] <GPHemsley>
I still think it'd be appropriate to create a 'font' type

[14:28:39.0000] <GPHemsley>
especially given the existence of e.g. 'font/opentype'

[14:28:51.0000] <GPHemsley>
hsivonen doesn't seem to agree, though

[14:31:21.0000] <GPHemsley>
If not, then 'application/font-(ttf|otf)' or 'application/font-(truetype|opentype)'

[14:31:45.0000] <GPHemsley>
(The key being that they start with 'application/font-')

[14:31:52.0000] <annevk>
throw what baby out?

[14:32:16.0000] <GPHemsley>
MIME types

[14:33:26.0000] <annevk>
not really sure what the benefit of a MIME type would be

[14:34:09.0000] <GPHemsley>
at all, ever?

[14:34:09.0000] <annevk>
maybe in the context of viewing the file directly?

[14:35:10.0000] <GPHemsley>
sniffing should be a backup plan, ideally

[14:35:25.0000] <annevk>
nah, it's too hard to deploy MIME types

[14:35:46.0000] <annevk>
WebVTT and cache manifests moved to sniffing too, fortunately both have a good signature

[14:36:38.0000] <GPHemsley>
what makes MIME types any harder to deploy than sniffing?

[14:38:12.0000] <annevk>
setting a MIME type on a server is hard, letting the user agent figure it out by resource inspection is easier

[14:38:23.0000] <annevk>
(far easier, in fact)

[14:38:57.0000] <annevk>
I was surprised by this too, but lots of developers don't have access to .htaccess, or don't know how to use it, etc.

[14:39:18.0000] <annevk>
and it's just a pain, see the emails from foolip with regards to media sniffing

[14:42:51.0000] <GPHemsley>
where?

[14:42:53.0000] <zewt>
also, so long as browsers do sniffing (in any particular domain), lots and lots of people will ignore them and not set them, which means nobody can ever actually depend on or require them--which limits their usefulness

[14:43:15.0000] <GPHemsley>
vicious cycle

[14:43:35.0000] <zewt>
just the usual web issues, heh

[14:44:36.0000] <annevk>
GPHemsley: whatwg list

[14:44:45.0000] <GPHemsley>
then perhaps we should be keeping a registry of signatures?

[14:44:53.0000] <GPHemsley>
(which we sort of already are)

[14:45:08.0000] <GPHemsley>
(and the Just Solve the File Format Problem people are sort of, too)

[14:45:18.0000] <GPHemsley>
(plus whatever IANA has)

[14:45:32.0000] <GPHemsley>
annevk: Approximate date?

[14:45:51.0000] <annevk>
oh dunno, like a year ago?

[14:45:59.0000] <zewt>
in the case of fonts, there's already at least "application/x-font-ttf"; i definitely would not add another MIME type to the mix that means the same thing

[14:46:08.0000] <annevk>
GPHemsley: well yeah, MIME sniff is that registry :-)

[14:46:28.0000] <annevk>
zewt: is that for truetype or opentype?

[14:46:37.0000] <GPHemsley>
annevk: There's a bazillion file formats. If we stored them all in this one document, it'd be way too long.

[14:46:47.0000] <zewt>
not for the sake of "prettiness" eg. being able to say "all font mime types look like font/foo"; there's just not much gain there, and a definite (and IMO significant) cost to adding more competing mime types

[14:47:00.0000] <zewt>
annevk: it's what nginx defaults to for *.ttf, at least

[14:47:04.0000] <annevk>
GPHemsley: not all need to be identified via sniffing

[14:47:20.0000] <zewt>
i mean, filenames matching *.ttf

[14:47:46.0000] <zewt>
oh wait, i might have added that one, heh--can't say how much research I might have done first (though I definitely didn't just make it up)

[14:47:51.0000] <GPHemsley>
annevk: Was it related to WebVTT or more in general?

[14:47:59.0000] <zewt>
guessing nothing actually cares, though

[14:48:06.0000] <annevk>
GPHemsley: that was more general, about sniffing for <video>/<source> resources

[14:48:08.0000] <GPHemsley>
zewt: I'm told there was registration in process for these fonts

[14:48:22.0000] <annevk>
zewt: application/x-font-ttf is listed on Wikipedia as most popular for TrueType

[14:48:28.0000] <GPHemsley>
zewt: http://lists.w3.org/Archives/Public/public-webfonts-wg/2011Apr/0005.html

[14:48:37.0000] <zewt>
annevk: yeah, google says ~150k results, so it's not uncommon at least

[14:48:46.0000] <GPHemsley>
Not sure the status, though

[14:49:06.0000] <zewt>
GPHemsley: that's a lump of nonsense, at least at first glance

[14:49:16.0000] <GPHemsley>
good to know

[14:49:21.0000] <zewt>
if everyone's using "application/x-font-ttf", then just keep using application/x-font-ttf, at least it's consistent and on the web that matters more than most things

[14:50:16.0000] <zewt>
(of course, MIME types weren't conceived for the web, and it may be that the mime type registry is not actually appropriate for the web, or even web compatible)

[14:50:35.0000] <annevk>
GPHemsley: they can register all they want, but as long as implementations sniff I'm not sure how it matters, what the observable effect is going to be

[14:51:29.0000] <annevk>
GPHemsley: if there's no observable effect, it's like typing <img/> rather than <img>, something to appease the MIME type gods who really are irrelevant when it comes to fonts, just like / in <img> is irrelevant when it comes to HTML

[14:51:41.0000] <zewt>
annevk: probably not the "observable effect" you're referring to, but the main observable effect would be to make the MIME types used for fonts less reliable (probably forever)

[14:52:00.0000] <GPHemsley>
I just want to make sure I get the most common, and I don't know what they are

[14:52:26.0000] <GPHemsley>
there are two compartments in my head for this

[14:52:34.0000] <annevk>
zewt: so did you not like aligning encoders on the &#...; behavior?

[14:52:35.0000] <zewt>
(of course, since lots of fonts on the web are probably served as octet-stream or even text/plain, it's not like it's taking something consistent and making it not, so it probably just doesn't matter)

[14:52:44.0000] <GPHemsley>
one is the Just Work™ one, and the other is the Make It Nice™ one

[14:52:49.0000] <zewt>
annevk: not familiar with it

[14:52:56.0000] <zewt>
or don't recall off-hand anyway

[14:53:23.0000] <zewt>
GPHemsley: the web needs to be very heavily biased towards the former :)

[14:53:26.0000] <annevk>
zewt: because if we're going to have this URLQuery API, aligning URLs and <form> submission with respect to unencodable code points makes a lot of sense to me

[14:53:45.0000] <annevk>
now URLs use ? and <form> uses &#...;

[14:53:50.0000] <GPHemsley>
zewt: Yeah, but if we can skew towards Make It Nice™ without losing Just Work™, we should, IMO

[14:53:55.0000] <annevk>
but WebKit uses &#...; in URLs too

[14:54:23.0000] <GPHemsley>
zewt: Not that I'm saying we can in this case.

[14:54:31.0000] <GPHemsley>
(That remains to be seen.)

[14:54:33.0000] <annevk>
GPHemsley: I don't really see how MIME types make things nice if they're just ignored

[14:54:36.0000] <zewt>
GPHemsley: and i also think it's less "nice" to have two (or N+1) mime types in use for a file type than one, more so than the gain of the particular strings of text being pretty

[14:54:43.0000] <annevk>
GPHemsley: seems like a waste of bytes

[14:54:55.0000] <annevk>
GPHemsley: and potential for error

[14:55:21.0000] <zewt>
the key thing to remember is that (for example) application/x-font-ttf will *never go away*--it might be different if that wasn't the case, but that's the web

[14:55:27.0000] <GPHemsley>
any waste of bytes or N+1 is sacrificing Just Work™

[14:55:33.0000] <GPHemsley>
so I'm not arguing for that

[14:56:34.0000] <GPHemsley>
zewt: The issue here, basically, is whether we have 0. If we don't, then we have no choice but to Just Work™. But if we do, then we should try for Make It Nice™.

[14:56:58.0000] <GPHemsley>
if application/x-font-ttf is the one that everyone has already basically standardized on, then fine

[14:57:07.0000] <GPHemsley>
what about the others?

[14:57:35.0000] <zewt>
not something i can answer

[14:59:05.0000] <zewt>
is this something that actually bears on the web? for example, are there any browsers that refuse to load a font if the MIME type isn't x-font-ttf or something else?

[14:59:46.0000] <zewt>
(i don't know the answer--I don't know if I set the above case because something wasn't working, or if i was just being pedantic with my HTTP headers)

[15:00:08.0000] <annevk>
browsers ignore MIME types for fonts

[15:00:22.0000] <annevk>
at least when I looked at it

[15:00:51.0000] <zewt>
i assume that they'll never change that, then, since it would break tons of sites

[15:01:06.0000] <zewt>
(i suppose there are ways they could--sniffing, again--but I don't know why they would)

[15:02:59.0000] <annevk>
TIL the person who registered all the URI schemes is on the IAB http://research.microsoft.com/en-us/um/people/dthaler/

[15:03:15.0000] <annevk>
(all the URI schemes listed on Wikipedia)

[15:10:25.0000] <annevk>
kinda weird that a modern RFC like http://tools.ietf.org/html/rfc6055 still talks about ISO-2022-JP is if it would be used at the system level

[15:12:34.0000] <zewt>
i wonder if japan is still fighting tooth and nail against unicode, heh

[15:12:44.0000] <zewt>
not that japan is a single consciousness or anything

[15:14:44.0000] <annevk>
http://tools.ietf.org/html/rfc6055#section-3 is interesting, I hadn't considered that even "." could be a valid part of a label

[15:15:29.0000] <annevk>
although using a "." might require a bunch of custom software


2012-11-18
[20:21:15.0000] <heycam>
TIL: <p><div></div></p> is actually <p></p><div></div>

[20:21:34.0000] <heycam>
(should have known)

[23:49:48.0000] <MikeSmith>
"The value attribute, if specified, must have a value that contains no U+000A LINE FEED (LF) or U+000D CARRIAGE RETURN (CR) characters."

[23:50:04.0000] <MikeSmith>
for input type=text and type=search

[23:50:17.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#text-(type=text)-state-and-search-state-(type=search)

[23:50:37.0000] <MikeSmith>
does that mean the value can be empty?

[01:40:30.0000] <annevk>
MikeSmith: yeah

[01:40:45.0000] <annevk>
MikeSmith: only when it's required="" it must be non-empty

[02:00:00.0000] <annevk>
matjas: you sure it works in Chrome for url.spec.whatwg.org and that it's not caching?

[02:00:16.0000] <annevk>
matjas: because if it does it's very weird the JS one does not work

[02:01:25.0000] <annevk>
matjas: in any event, the modifications I made were relative to the JS original logo so I'm not sure how that would have an effect on favicon use, does the original work as favicon?

[02:01:45.0000] <annevk>
context: https://github.com/voodootikigod/logo.js/issues/32

[02:07:26.0000] <annevk>
I wonder how the GitHub language algorithm works... https://github.com/whatwg/quirks is 100% Racket?! I guess it doesn't work

[02:15:18.0000] <annevk>
http://www.unicode.org/mail-arch/unicode-ml/y2011-m07/0036.html

[02:16:56.0000] <annevk>
http://www.unicode.org/mail-arch/unicode-ml/y2011-m07/0057.html

[03:57:15.0000] <MikeSmith>
yay we got a code contribution for the validator that provides a "Show outline" feature

[03:57:36.0000] <MikeSmith>
and that conforms to the outline algorithm, as far as I can see

[04:47:17.0000] <Davstern15>
Can you somehow set the amount of anti-aliasing for text drawn in a Canvas? Like you can in Flash?

[04:49:08.0000] <MikeSmith>
Davstern15: no

[05:18:07.0000] <MikeSmith>
oh

[05:18:53.0000] <MikeSmith>
Davstern15: see recent discussion at http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Nov/thread.html#msg124

[05:52:54.0000] <Davstern15>
MikeSmith: Reading.

[05:53:11.0000] <Davstern15>
Or at least I thought I was reading it...

[05:53:55.0000] <Davstern15>
Reading, but am confused by the bizarre format it's in.

[06:01:35.0000] <MikeSmith>
Davstern15: eh?

[06:06:49.0000] <Davstern15>
MikeSmith: The weird threaded stuff.

[06:07:08.0000] <MikeSmith>
I don't understand what's weird about it man

[06:07:32.0000] <Davstern15>
I always found it weird. Unnavigitable.

[06:07:36.0000] <Davstern15>
I like the term "enable-able".

[06:11:46.0000] <Davstern15>
MikeSmith: I don't understand why people are opposed to letting me change how the text is displayed.

[06:11:56.0000] <Davstern15>
I want blurry AA sometimes.

[06:12:01.0000] <Davstern15>
I want sharp text sometimes.

[06:12:25.0000] <Davstern15>
I actually love the way text looks in Flash.

[07:38:16.0000] <zewt>
most font renderers in browsers probably don't have anything like that, so you're not asking for a simple feature

[08:27:57.0000] <GPHemsley>
annevk: Is Tcl

[08:28:05.0000] <GPHemsley>
annevk: mimesniff is Tcl

[08:35:56.0000] <GPHemsley>
/me wonders why so many people are now requesting wiki accounts, and why they're not using them.

[08:43:00.0000] <MikeSmith>
GPHemsley: spammers maybe?

[08:43:18.0000] <GPHemsley>
MikeSmith: If so, then I'm glad I left the autoconfirmed user restrictions in place.

[08:44:04.0000] <GPHemsley>
There was one request to day where the guy wants one username for himself and another for his company

[08:44:10.0000] <GPHemsley>
Not sure I understand that one

[08:46:55.0000] <Davstern15>
"today" or "to day"?

[08:47:01.0000] <Davstern15>
Very different meanings.

[09:02:55.0000] <GPHemsley>
Wow, Microsoft. Way to be annoying.

[09:03:02.0000] <GPHemsley>
The EOT magic number is 34 bytes in.

[09:14:06.0000] <Davstern15>
GPHemsley: ?

[09:30:35.0000] <Hixie>
anyone know of any online software that i can use to edit subtitles?

[09:31:37.0000] <GPHemsley>
Hixie: UniversalSubtitles.org?

[09:32:20.0000] <GPHemsley>
Davstern15: This mostly a development channel; we blog out loud here.

[09:32:24.0000] <GPHemsley>
+is

[09:34:39.0000] <Hixie>
GPHemsley: that looks like it'd be awesome, except the video i want to subtitle is private

[09:34:52.0000] <GPHemsley>
oh :/

[09:35:00.0000] <Hixie>
yeah :-(

[09:35:08.0000] <Hixie>
i'll just do it by hand i guess

[09:35:14.0000] <zewt>
maybe one of these days i'll get around to hacking up mpc or something to let me edit subtitles in-place

[09:35:26.0000] <Davstern15>
If I had the authors of Firefox, Chrome, Safari and Opera in a room... I would make so many threats...

[09:35:28.0000] <zewt>
for those regular occurances of seeing a really bad translation and wanting to just pause and fix it and continue

[09:35:28.0000] <Hixie>
yeah i was just thinking i'd just do it by hand at some point

[09:35:29.0000] <Davstern15>
Terrible, terrible threats.

[09:35:48.0000] <Davstern15>
And also IE.

[09:36:14.0000] <GPHemsley>
Davstern15: And what purpose would that serve?

[09:40:22.0000] <Davstern15>
GPHemsley: Hopefully it would make them fix the broken things.

[09:40:32.0000] <GPHemsley>
And those would be...?

[09:40:36.0000] <Davstern15>
Such as... actually make Canvas rendering fast (all except for IE).

[09:40:50.0000] <GPHemsley>
And you think human beings respond best to threats?

[09:40:52.0000] <Davstern15>
IE guys would have to make WebGL or some kind of WebX.

[09:41:07.0000] <Davstern15>
No, but it was more of a joke.

[09:41:12.0000] <GPHemsley>
You think threatening them would motivate them to do things for you more than being kind to them?

[09:41:15.0000] <GPHemsley>
Maybe lending them a hand?

[09:41:31.0000] <GPHemsley>
Because you basically have developers from all those camps right here in this room.

[09:41:42.0000] <Davstern15>
They are here?

[09:42:01.0000] <Davstern15>
If a Firefox developer is here right now: kindly fix your slow Canvas rendering. Please.

[09:42:18.0000] <GPHemsley>
I would guess it's a lot harder than waving a magic wand.

[09:42:19.0000] <Davstern15>
And if an Opera guy is here: PLEASE let me hide the cursor when hovering a div square used for a game.

[09:42:28.0000] <Davstern15>
There is nothing security-related that prevents that.

[09:42:32.0000] <Davstern15>
It is only annoying.

[09:42:51.0000] <Davstern15>
Well...

[09:43:09.0000] <Davstern15>
It is year 2012 after all. I frankly cannot believe that even CPU-based drawing is this slow.

[09:43:43.0000] <Davstern15>
I mean, when arc() for example is called, that isn't JavaScript doing it. It's the implementation being told what to do.

[09:44:09.0000] <Davstern15>
So it should be native speed, which means any computer younger than 40 years or so should be able to draw an arc flawlessly at super speed.

[09:44:49.0000] <GPHemsley>
It being "the year 2012" is also a magic wand.

[09:45:01.0000] <GPHemsley>
The actual design behind canvas is only a few years old.

[09:45:11.0000] <GPHemsley>
The code has likely not been optimized for every usecase.

[09:45:17.0000] <GPHemsley>
Have you file a bug with Mozilla?

[09:45:21.0000] <GPHemsley>
+d

[09:45:38.0000] <Philip`>
Davstern15: Anybody who cares about speed likely uses pre-rendered bitmaps, so browser developers can provide the most benefit by optimising that - arcs are used too rarely to be worth much development effort

[09:46:23.0000] <Philip`>
GPHemsley: The basic design is from about 2005, I think

[09:46:43.0000] <GPHemsley>
Philip`: That falls within my definition of "a few" :)

[09:47:03.0000] <GPHemsley>
(Although 2005 keeps getting farther and farther away....)

[09:48:03.0000] <Davstern15>
Arcs are integral for games, though.

[09:48:26.0000] <Davstern15>
And yes, I ended up pre-rendering them, but that also is very... undynamic.

[09:48:28.0000] <Davstern15>
Stiff, if you will.

[09:48:40.0000] <Davstern15>
And also was a nightmare code-wise.

[09:49:18.0000] <Davstern15>
I guess I cannot comprehend why it is such a problem to draw 2D stuff to a canvas speed-wise in this day and age.

[09:49:22.0000] <Davstern15>
Even with no optimizations.

[09:49:41.0000] <Davstern15>
Also, drawing text with shadows is SUPER slow.

[09:52:31.0000] <Philip`>
What you need to do is make a cool-looking benchmark that depends on all the features you care about it, and then publicise it to all the people who publish graphs of Sunspider performance every time a new browser version or new CPU comes out

[09:52:53.0000] <Philip`>
and then browser developers will be motivated to improve those features

[09:54:32.0000] <Davstern15>
Dang...

[09:57:28.0000] <annevk5>
Sniffing EOT is not needed. Just treat it like any other unknown format GPHemsley

[09:57:44.0000] <GPHemsley>
Why?

[09:59:20.0000] <annevk5>
Because it's not part of the platform

[09:59:47.0000] <annevk5>
No need to support unsupported proprietary formats

[10:01:10.0000] <annevk5>
You only need to sniff the formats from my email. Supporting other formats would be bad for interop

[10:02:24.0000] <GPHemsley>
Sniffing and supporting are separate things, though.

[10:02:53.0000] <annevk5>
No they are closely related

[10:03:26.0000] <annevk5>
Why waste code on sniffing something that must be rejected?

[10:04:21.0000] <GPHemsley>
To present the user with information about what kind of file it is?

[10:04:34.0000] <GPHemsley>
Firefox, at least, displays the MIME type in the download box

[10:04:39.0000] <GPHemsley>
s/box/prompt/

[10:04:40.0000] <GPHemsley>
IIRC

[10:05:02.0000] <GPHemsley>
TabAtkins: Hey, why didn't you mention that there were plans to go ahead with the 'font' type?

[10:06:01.0000] <GPHemsley>
annevk5: Weren't we just discussing yesterday that we should have a list of magic numbers?

[10:11:27.0000] <GPHemsley>
also, there appears to be discussion about a WOFF 2 format

[10:21:19.0000] <GPHemsley>
top-level 'font': http://www.w3.org/Fonts/WG/track/actions/115

[10:27:41.0000] <Yuhong>
annevk5: I do agree that other browsers have never supported EOT, but you do want IE implementing the standard do you?

[10:30:09.0000] <GPHemsley>
I maintain that sniffing is not the same as supporting.

[10:30:28.0000] <GPHemsley>
In fact, this document says nothing about what UAs should or should not support.

[10:37:04.0000] <Yuhong>
Sniffing without supporting is not very useful, but just because the formats are listed in the spec don't mean that the browser need to sniff all the formats.

[10:46:33.0000] <GPHemsley>
The sole purpose of this document is to be able to properly identify a file.

[10:46:54.0000] <GPHemsley>
What a user agent does with that information is beyond the scope of this document.

[10:48:02.0000] <GPHemsley>
The barrier for inclusion in this document is whether the UA is likely to encounter such a file on the Web.

[11:25:53.0000] <zewt>
doesn't sound like the right approach for a web spec; specs should specify things that determine browser behavior, not just pools of data that they might or might not use

[11:31:24.0000] <GPHemsley>
zewt: The behavior is deciding what kind of file something is.

[11:31:58.0000] <GPHemsley>
It is up to the browser to decide whether to then parse the file or to pass it off to some other software that can.

[11:34:04.0000] <zewt>
but it should specify only cases where browsers need the info, and there are normative requirements depending on the result

[11:36:18.0000] <GPHemsley>
Browsers can need the info without there being normative requirements that depend on it.

[11:37:23.0000] <zewt>
specs are about normative requirements

[11:38:11.0000] <GPHemsley>
again, the normative requirements are only regarding identifying the file

[11:38:22.0000] <GPHemsley>
the mimesniff spec says nothing else

[11:39:43.0000] <Ms2ger>
Hmm, apparently SMS encoding depends on the country you're in

[11:39:50.0000] <zewt>
normative requirements that aren't used normatively don't make much sense, afaik

[11:40:48.0000] <GPHemsley>
mimesniff defines the behavior of sniffing a file... it is up to other specs to decide how that information is used

[11:40:55.0000] <GPHemsley>
I don't see the issue here

[11:41:58.0000] <GPHemsley>
it is the first filter between the server and the rest of the browser

[11:42:37.0000] <zewt>
it should only define formats that other specs actually need to know about--for example, unless some spec actually cares, there's no need to say anything about .torrent files

[11:43:18.0000] <Yuhong>
zewt: Normative requirements can be optional.

[11:43:55.0000] <GPHemsley>
Yuhong: But they're not, in this case

[11:45:36.0000] <GPHemsley>
zewt: Are there browsers that parse postscript files?

[11:46:04.0000] <zewt>
having a "file type unknown to the spec with a content-type of foo" fallback is fine, it's the "include every file format that browsers might see on the web" thing that i don't like

[11:46:26.0000] <zewt>
(no idea)

[11:48:15.0000] <GPHemsley>
Part of this spec is identifying the type of a file whose type is unknown; without these additional signatures, many files would be spit out as application/octet-stream or text/plain

[11:49:16.0000] <GPHemsley>
and given that there are certain types that are common on the Web that no browser actually supports, I don't think it hurts to do a little extra

[11:50:01.0000] <GPHemsley>
and certainly if there are some but not all browsers that support a particular type (like EOT)

[11:50:47.0000] <zewt>
files that are common on the web is a much larger set than files that browsers do magic file detection for

[11:51:19.0000] <zewt>
torrent files are common, and browsers don't sniff them; you have to either have the content-type set, or the resource's filename needs to match *.torrent, basically

[11:51:44.0000] <GPHemsley>
well, part of the point of this spec, too, is to get away from sniffing based on file extension

[11:51:46.0000] <zewt>
(maybe the latter is a subset of sniffing, but there's no peeking at the contents of the file and looking for a header)

[11:52:06.0000] <zewt>
... have browser vendors agreed to do that? heh

[11:52:19.0000] <GPHemsley>
well, it's part of the security concerns

[11:52:26.0000] <zewt>
that's not specifying current behavior, that's specifying something new

[11:52:33.0000] <Yuhong>
Of course. Some are difficult to sniff, like docx and odt.

[11:52:49.0000] <GPHemsley>
Yuhong: Actually, odt is much easier than docx.

[11:52:54.0000] <GPHemsley>
docx is pretty much impossible

[11:52:58.0000] <Yuhong>
But both are based on ZIP.

[11:53:20.0000] <GPHemsley>
Yeah, but ODT actually makes an effort to provide a mechanism for detection.

[11:53:42.0000] <Yuhong>
And there are many times where they are sniffed as such and the files had to be manually renamed..

[11:53:43.0000] <zewt>
but have browser vendors agreed to switch from filename matching (ridiculously simple) to file content detection (much more complex, not always possible and sometimes ambiguous)?

[11:54:12.0000] <GPHemsley>
I have no idea what the browsers have agreed to

[11:54:12.0000] <zewt>
that sounds like a hard sell, so i'm just wondering if you've actually sold it :)

[11:54:17.0000] <GPHemsley>
I wasn't privy to any of those discussions

[11:54:23.0000] <GPHemsley>
if there even were any

[11:54:32.0000] <Yuhong>
I'd focus on moving away from filename matching for *scriptable* formats, like HTML and XML.

[11:55:01.0000] <zewt>
well, if you don't know whether vendors have agreed to such a big and probably risky change, then you may be wasting a bunch of effort

[11:55:20.0000] <GPHemsley>
why risky?

[11:55:48.0000] <Yuhong>
Most of the others typically have filename extensions, and scriptable formats present more of a security risk..

[11:55:58.0000] <zewt>
because what's deployed now works, and whatever you spec may or may not work in the real world

[11:56:53.0000] <zewt>
additionally it would interact in some unobvious way with the file type UIs that most browsers give, which tend to be based on extensions (in part because users understand extensions better than MIME types)

[11:57:37.0000] <GPHemsley>
the problem is, there are at least 3 different ways to identify a file, and only one of them is anywhere near reliable

[11:58:38.0000] <zewt>
i don't know if i agree with that or not, but it's not really the point

[11:59:09.0000] <GPHemsley>
and besides, not using the file extension to determine the supplied type is one of the normative requirements of the spec

[11:59:49.0000] <GPHemsley>
...although I suppose there is no restriction on using it for sniffing...

[11:59:49.0000] <zewt>
but you putting a normative requirement in a spec isn't going to magically make browsers agree to do it

[11:59:49.0000] <GPHemsley>
hmm

[12:00:04.0000] <GPHemsley>
zewt: Well, actually, I didn't put that one in there ;)

[12:00:34.0000] <GPHemsley>
remember, this spec began as basically documenting what Chrome did

[12:01:00.0000] <zewt>
if you drop this spec on vendors without talking to them first, i predict a response of: "wooooah slow down we're not changing something that fundamental"

[12:01:23.0000] <zewt>
chrome definitely uses the file extension in some cases

[12:01:31.0000] <GPHemsley>
yeah, IDK

[12:01:37.0000] <GPHemsley>
I'll have to do some investigating

[12:02:03.0000] <Yuhong>
Yea, the original author was abarth.

[12:02:48.0000] <zewt>
(at least, when it relates to launching registered system handlers, which in windows are entirely extension-based)

[12:03:12.0000] <GPHemsley>
I suppose the question is where the line is drawn between what the browser does and what the OS does

[12:04:58.0000] <GPHemsley>
/me shrugs

[14:48:49.0000] <annevk>
GPHemsley: Firefox' download dialog is UI and therefore interoperability does not matter

[14:49:03.0000] <annevk>
GPHemsley: so I would not consider that a valid use case for defining EOT sniffing

[14:50:04.0000] <annevk>
GPHemsley: the magic number list is only for formats that are actually part of what we want interoperability for and what we want developers to use

[14:50:31.0000] <gsnedders>
SimonSapin: As Ms2ger said, plan is to use 3to2 and have Py3 as the main copy (mainly because there's enough gnarly Unicode/bytes frontieers as to make it important to get those right and keep them right, which Py3 enforces)

[14:50:58.0000] <annevk>
GPHemsley: and in particular for format identifiers not documented in MIME sniffing, such as WEBVTT and CACHE MANIFEST

[14:51:19.0000] <annevk>
Yuhong: I want IE to drop support for EOT in the end

[14:59:12.0000] <annevk>
zewt: I doubt browsers sniff on filename actually, be interesting to see a testcase for that (outside the limited case for plugins the HTML spec does require it for)

[14:59:35.0000] <annevk>
GPHemsley: zewt is right that we only want to list things which can be tested

[15:00:04.0000] <annevk>
GPHemsley: I think some browsers might have postscript support, or maybe it's important to detect postscript so it doesn't get detected as something else?

[15:00:14.0000] <zewt>
annevk: they do for the "figure out whether to open with an external program, save to disk, prompt the user, etc." path

[15:00:25.0000] <zewt>
i don't know of any for file types supported *internally* by browsers

[15:00:30.0000] <SimonSapin>
gsnedders: for new projects I prefer running in 2 and 3 with the same code base

[15:00:38.0000] <annevk>
zewt: ah yeah, the UI layer might be broken

[15:00:38.0000] <SimonSapin>
but porting existing code to that can be painful

[15:00:45.0000] <annevk>
zewt: well, "broken"

[15:01:22.0000] <annevk>
but in any event the UI layer is outside our jurisdiction

[15:01:30.0000] <SimonSapin>
https://github.com/mitsuhiko/python-modernize can help

[15:01:32.0000] <gsnedders>
SimonSapin: That's always harder for things where you have complex encoding boundaries, in my experience

[15:02:57.0000] <SimonSapin>
yeah it can be hard, but once the switch is done everything is so much easier than running 2to3 (sloooooow) all the time

[15:03:39.0000] <SimonSapin>
but of course every project is different

[15:04:10.0000] <gsnedders>
I think there are sufficently few changes made that that isn't a problem :P

[15:04:56.0000] <SimonSapin>
night time. ’later

[15:05:11.0000] <gsnedders>
gn

[15:05:30.0000] <annevk>
gsnedders: how many more years of studying?

[15:05:53.0000] <gsnedders>
annevk: 1.5

[15:06:08.0000] <annevk>
then you come back to us or are you going to do something new?

[15:06:20.0000] <gsnedders>
"us"? the web?

[15:06:29.0000] <annevk>
uhuh

[15:06:42.0000] <gsnedders>
I guess.

[15:24:41.0000] <annevk>
btw, I was thinking of writing a blog post / email announcing all the new stuff on /specs/ one of these days

[15:25:03.0000] <annevk>
if people have suggestions, let me know, or leave them here for me to read later

[15:27:28.0000] <GPHemsley>
annevk: Can you elaborate on your reference to WEBVTT and CACHE MANIFEST?

[15:28:32.0000] <GPHemsley>
Also, why do we have RAR, ZIP, and GZIP in the list, anyway?

[15:28:45.0000] <GPHemsley>
given what you've said

[15:29:19.0000] <GPHemsley>
and if you only detect the other things as specced, there's no need to sniff postscript separately

[15:29:24.0000] <GPHemsley>
as protection

[15:29:54.0000] <GPHemsley>
but abarth's article also discussed sniffing from a file upload perspective, too

[15:30:02.0000] <GPHemsley>
so I wonder if that's related and if that should be in the spec

[15:30:18.0000] <GPHemsley>
(server-side sniffing)

[15:30:26.0000] <annevk>
GPHemsley: http://dev.w3.org/html5/webvtt/#webvtt-file-body has a required file signature, http://www.whatwg.org/specs/web-apps/current-work/#writing-cache-manifests does too

[15:30:43.0000] <GPHemsley>
right, but how does that relate to the current spec?

[15:30:54.0000] <GPHemsley>
i.e. mimesniff

[15:31:15.0000] <annevk>
GPHemsley: I meant that if we want a registry for file signatures important to the platform, which is pretty much mime sniff, we might want to mention these somehow too

[15:31:28.0000] <GPHemsley>
ah

[15:31:28.0000] <GPHemsley>
ok

[15:31:35.0000] <annevk>
GPHemsley: maybe Safari supports postscript?

[15:31:40.0000] <GPHemsley>
so that was a separate thing, then?

[15:31:49.0000] <GPHemsley>
I don't think so, but let me check

[15:32:05.0000] <annevk>
GPHemsley: I had not considered file upload, for file upload the Content-Type header user agents set does matter for interoperability

[15:32:32.0000] <annevk>
GPHemsley: that seems related to defining multipart/form-data, which we haven't fixed either yet

[15:32:56.0000] <annevk>
GPHemsley: yes, the file signature registry was a separate thing

[15:33:22.0000] <GPHemsley>
well, you didn't mention it in the context of a registry this most recent time

[15:33:24.0000] <GPHemsley>
but ok

[15:35:58.0000] <GPHemsley>
Opera and Chrome sniff postscript

[15:36:00.0000] <GPHemsley>
but don't parse it

[15:36:09.0000] <GPHemsley>
Safari and Firefox do not sniff it

[15:36:16.0000] <GPHemsley>
(and treat my test file as plaintext)

[15:36:18.0000] <GPHemsley>
http://whatwg.gphemsley.org/tests/mimesniff/application/postscript/PS-Adobe-

[15:37:02.0000] <GPHemsley>
incidentally, when Opera and Chrome prompt for download, they automatically add a .ps extension

[15:37:03.0000] <annevk>
my Minefield.app says postscript

[15:37:23.0000] <GPHemsley>
really? where?

[15:37:36.0000] <zewt>
browsers that aren't IE messing with filenames? gross

[15:38:03.0000] <annevk>
GPHemsley: offers a download dialog

[15:38:05.0000] <zewt>
thought that was just an IE evil :|

[15:38:07.0000] <GPHemsley>
oh

[15:38:08.0000] <GPHemsley>
shoot

[15:38:15.0000] <GPHemsley>
I might have cached it

[15:38:28.0000] <GPHemsley>
looks like you're right

[15:38:28.0000] <GPHemsley>
ok

[15:38:36.0000] <zewt>
actually i vaguely recall something about old safari adding .zip (the most common completely-broken-renaming-behavior), but that was a long time ago

[15:38:44.0000] <annevk>
and Safari opens it directly

[15:38:51.0000] <annevk>
as a postscript file

[15:38:55.0000] <annevk>
inline

[15:38:57.0000] <GPHemsley>
really?

[15:38:59.0000] <GPHemsley>
hmm

[15:39:03.0000] <zewt>
(since .zip is probably the single most widely repurposed file format)

[15:39:05.0000] <GPHemsley>
need a real file to test that

[15:39:15.0000] <GPHemsley>
bbl, dinner

[15:39:24.0000] <zewt>
(well, unless you consider "text file" to be a file format, which I don't think I do, any more than "binary file" is a file format)

[15:39:25.0000] <annevk>
I'm gonna sleep, ttyl

[15:40:03.0000] <annevk>
GPHemsley: fwiw, displaying as "text/plain" versus offering a download dialog does seem like a potential interoperability issue and something we should tackle, though it's not really clear to me that's the case here

[15:52:57.0000] <annevk>
TabAtkins: hmm yeah, url.query = new URLQuery(...) might be nice

[15:53:12.0000] <annevk>
TabAtkins: guess I should work with heycam|away to get the necessary IDL hooks

[15:56:02.0000] <annevk>
TabAtkins: also note that http://wiki.ecmascript.org/doku.php?id=harmony:simple_maps_and_sets does not account for setting to a list

[15:56:36.0000] <annevk>
TabAtkins: other than that the current proposal should map pretty closely

[15:57:25.0000] <annevk>
TabAtkins: and given that we have duplicate keys, I was thinking delete(key, val) might be nice too next to having delete(key)

[15:58:38.0000] <GPHemsley>
annevk: No, I think it was a side effect of the file originally having different headers sent.

[15:58:49.0000] <GPHemsley>
(which were cached on my primary browser)

[15:59:18.0000] <annevk>
no?

[15:59:46.0000] <GPHemsley>
it seems that they all prompt to download

[15:59:59.0000] <GPHemsley>
(at least Firefox doesn't append a file extension, AFAICT)


2012-11-19
[16:00:46.0000] <annevk>
are you using Safari on Mac?

[16:00:49.0000] <annevk>
doesn't download for me

[16:00:58.0000] <GPHemsley>
except Safari

[16:01:21.0000] <annevk>
ah okay, by "No" you indicated agreement with my observations?

[16:01:39.0000] <GPHemsley>
yeah; I was disagreeing with your interop statement

[16:01:58.0000] <annevk>
what statement?

[16:02:01.0000] <GPHemsley>
how do I check the type/headers in Safari?

[16:02:07.0000] <GPHemsley>
[18:40:21]  <annevk> GPHemsley: fwiw, displaying as "text/plain" versus offering a download dialog does seem like a potential interoperability issue and something we should tackle, though it's not really clear to me that's the case here

[16:02:29.0000] <annevk>
well yeah, it's not the case here, but why would you disagree with that in general?

[16:02:32.0000] <GPHemsley>
agreeing/disagreeing

[16:02:36.0000] <GPHemsley>
blame the English language

[16:02:49.0000] <annevk>
bedtime, it seems :)

[16:02:52.0000] <GPHemsley>
:)

[16:04:15.0000] <GPHemsley>
I think we do need to come up with a metric for deciding what needs to go in the mimesniff spec and what can be elsewhere

[16:40:41.0000] <GPHemsley>
hmm... cache manifest is going to be a little complex to handle in the current styling, given the allowance of an optional BOM

[16:41:20.0000] <GPHemsley>
oh, same with WebVTT

[16:41:21.0000] <GPHemsley>
hmm

[16:51:45.0000] <Yuhong>
<annevk> Yuhong: I want IE to drop support for EOT in the end

[16:52:29.0000] <Yuhong>
Actually, they do sometimes do things like this, but notice they disabled it by default only in the Internet zone and allow it to be reenabled:

[16:52:33.0000] <Yuhong>
http://blogs.msdn.com/b/ie/archive/2012/06/04/legacy-dx-filters-removed-from-ie10-release-preview.aspx

[22:43:33.0000] <sangwhan>
ls

[22:43:40.0000] <sangwhan>
/me oops

[22:55:50.0000] <karlcow>
aha

[23:54:57.0000] <zcorpan>
http://www.alvestrand.no/pipermail/idna-update/2012-November/007482.html

[00:08:55.0000] <MikeSmith>
zcorpan: wow

[00:35:35.0000] <zcorpan>
MikeSmith: indeed

[00:49:29.0000] <annevk>
GPHemsley: you don't take BOM into account for HTML?

[01:39:33.0000] <zcorpan>
heycam: <p><div></div></p> is actually <p></p><div></div><p></p>

[01:44:05.0000] <zcorpan>
annevk: http://krijnhoetmer.nl/irc-logs/whatwg/20121118#l-136 doesn't seem right.

[01:44:38.0000] <zcorpan>
<input required value> is valid, afaict

[01:57:23.0000] <annevk>
zcorpan: didn't realize he was talking about the validator

[01:57:36.0000] <zcorpan>
ah

[01:57:48.0000] <annevk>
happy b-day btw

[01:57:52.0000] <zcorpan>
thanks

[02:15:34.0000] <zcorpan>
should it be possible to create a DataTransfer object from script?

[02:17:05.0000] <zcorpan>
the DragEvent constructor seems a bit pointless without being able to use custom DataTransfer

[02:19:13.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=20004

[02:26:58.0000] <annevk>
zcorpan: can't you still test your drag & drop code with custom events even if there's no DataTransfer object? arguably you can't test all of it then, but still a bit

[02:27:31.0000] <zcorpan>
you can't test the dataTransfer aspects

[02:27:41.0000] <zcorpan>
which seems like the useful ones

[02:28:23.0000] <annevk>
zcorpan: that whole idna-update thread is full of wow

[02:29:43.0000] <zcorpan>
yeah. but this email seemed like a level above the rest

[02:33:02.0000] <annevk>
http://iutf.org/wiki/Main_Page can't help but read "intelligent design"

[02:33:27.0000] <annevk>
http://wiki.whatwg.org/wiki/URL#IDNA has my IDNA notes

[02:38:28.0000] <zcorpan>
nice

[02:40:40.0000] <annevk>
the not so nice thing is that e.g. thus far I've heard no interest from WebKit in doing anything, IE apparently has not moved either even though Windows 8 reportedly supports IDNA2008, and Gecko seems to be planning on moving forward still? https://bugzilla.mozilla.org/show_bug.cgi?id=479520

[02:41:09.0000] <annevk>
well, and Opera did something, but thus far it's not very clear whether Gecko plans on matching that

[02:54:04.0000] <annevk>
https://github.com/jclark/microxml-er/blob/master/recovery.md seems to match what I had defined more or less, minus DOCTYPEs

[03:18:30.0000] <zcorpan>
and the multiple roots case

[03:18:55.0000] <zcorpan>
and </>

[03:20:08.0000] <annevk>
oh it supports multiple roots? how would the result still match element then?

[03:21:13.0000] <zcorpan>
"If at this point we do not have a single element, wrap everything in an element named #doc."

[03:21:40.0000] <annevk>
ooh

[03:21:50.0000] <annevk>
how is that streaming?

[03:21:51.0000] <zcorpan>
means it can't be streaming :-(

[03:22:07.0000] <annevk>
that's kinda contrary to an earlier stated goal

[03:22:11.0000] <annevk>
weird

[03:22:36.0000] <zcorpan>
where are the goals stated?

[03:23:20.0000] <annevk>
oh

[03:23:21.0000] <annevk>
"The tokenization phase is also designed to be allow for a streaming implementation, whereas the tree-building phase is not."

[03:23:26.0000] <annevk>
misremembered

[03:23:38.0000] <annevk>
seems silly

[03:24:46.0000] <jgraham>
You just start streaming with a QuantumStartTag which is ina superposition of the present and not present states. Reaching the end of the input is like collapsing the wavefunction so you end up in a concrete state.

[03:25:23.0000] <annevk>
right

[03:25:35.0000] <jgraham>
(Man I feel bad for such a hideous use of pseudo-physics. Although like all great pseudo-physics it doesn't actually work)

[03:26:03.0000] <jgraham>
(next up: how to use the endless cycling of Working Group debates to generate infinite energy)

[03:26:11.0000] <annevk>
in the new bond movie they have a lot of pseudo-computery-stuff

[03:26:42.0000] <annevk>
aside from that it was pretty decent

[03:38:02.0000] <odinho>
Yeah, had the same feeling. Had to look away quite a bit.

[03:38:14.0000] <odinho>
Don't understand why they do that.

[03:39:03.0000] <odinho>
Even Helene (my gf) felt bad because of it.

[04:05:40.0000] <zcorpan>
i totally overlooked the pseudo-computer stuff. i guess i'm used to it

[04:07:39.0000] <annevk>
I think I might have done that too but it was pointed out to me and then I couldn't stop noticing it

[04:28:54.0000] <annevk>
AryehGregor_: basically, I'm unsure of all changes to ranges :-)

[04:29:14.0000] <annevk>
AryehGregor_: not sure what it is exactly, I feel like I don't quite grasp them or something

[04:30:12.0000] <annevk>
AryehGregor_: anyway, will fix that bug shortly

[04:33:31.0000] <AryehGregor_>
annevk, thanks.

[05:56:30.0000] <annevk>
hmm

[05:56:34.0000] <annevk>
Chrome supports http://[2::%5d/

[05:58:18.0000] <annevk>
and stuff like http://[3%3a:1:0:0:0:0]/

[05:59:17.0000] <annevk>
Safari does not reject http://[3%3a:1:0:0:0:0%]/

[05:59:32.0000] <annevk>
Safari does reject %5d instead of ]

[05:59:35.0000] <annevk>
man

[05:59:40.0000] <annevk>
is there nothing that just works?

[05:59:49.0000] <zcorpan>
you must be new here

[06:03:40.0000] <annevk>
I guess I'll go with RFC 3986 which puts [, :, and ] in reserved and has them as part of the syntax of IP literals and therefore using them in percent-encoded fashion should result in a syntax error

[06:04:43.0000] <annevk>
Opera just gives me illegal URL for http://[3a::1:0:0:0:0]/test btw

[06:04:47.0000] <annevk>
not sure what is up with that

[06:08:59.0000] <MikeSmith>
"The rank of an hgroup element is the rank of the highest-ranked h1–h6 element descendant of the hgroup element, if there are any such elements, or otherwise the same as for an h1 element (the highest rank)." is not very friendly to streaming processing to generate an outline.

[06:10:42.0000] <zcorpan>
MikeSmith: just defer creating the outline item for the hgroup until the element is closed

[06:11:03.0000] <zcorpan>
or heading, i guess

[06:11:37.0000] <MikeSmith>
hmm yeah true

[07:36:40.0000] <GPHemsley>
annevk: BOM seems to be handled in a haphazard way. For sniffing, it is used as the signature for text/plain. AFAICT, if an HTML file has a BOM, it will be sniffed as text/plain by the unknown type sniffer. But if a HTML file as a BOM, it will be properly handled to determine if it is a feed.... >_>

[07:42:03.0000] <annevk>
GPHemsley: I guess if that's what implementations do it's okay

[07:42:25.0000] <GPHemsley>
IDK, I'll have to check

[08:08:48.0000] <MikeSmith>
per the outline algorithm, what text should be used as the heading for <hgroup>foo<h2>bar</h2><h3>baz</h3></hgroup> in an outline?

[08:09:15.0000] <MikeSmith>
just "foo"? or "foo bar"? or just "bar"?

[08:13:31.0000] <jgraham>
Just bar I think, although it is unclear

[08:20:22.0000] <MikeSmith>
jgraham: yeah

[08:21:29.0000] <MikeSmith>
the three existing outliner implementations I tried all emit just "bar" for that case

[08:22:02.0000] <MikeSmith>
which makes sense intuitively I guess

[08:22:21.0000] <MikeSmith>
but I can't see where the spec makes it clear that's what it should be

[08:23:36.0000] <MikeSmith>
or also why the should be any different handling for <h1>foo<h2>bar</h2><h3>baz</h3></h1>

[08:24:00.0000] <MikeSmith>
it seems to me the outline algorithm requires both of the cases to be handled exactly the same

[08:24:54.0000] <MikeSmith>
because hgroup and h1 are both "heading content"

[08:25:43.0000] <jgraham>
Well you can't get that out of the parser (h2 as a child of h1)

[08:25:46.0000] <MikeSmith>
but the existing outliner implementations don't handle them the same -- they handle the  <h1>foo<h2>bar</h2><h3>baz</h3></h1> case by making nested sections for the h2 and h3 elements

[08:25:51.0000] <MikeSmith>
ah

[08:25:54.0000] <MikeSmith>
yeah OK

[08:26:14.0000] <MikeSmith>
so that part makes sense at least

[08:39:19.0000] <dglazkov>
good morning, Whatwg!

[08:40:02.0000] <Ms2ger>
Good night

[08:42:28.0000] <GPHemsley>
annevk: What was that pseudo-server you recommended for testing, again?

[08:43:26.0000] <annevk>
GPHemsley: someone might have recommended https://bitbucket.org/annevk/simpleserver I suppose? not sure I did though

[08:43:32.0000] <Ms2ger>
I think I mentioned it

[08:43:45.0000] <GPHemsley>
oh

[08:43:54.0000] <GPHemsley>
well, thanks nonetheless :)

[08:44:10.0000] <annevk>
you gonna test HTTP stuff?

[08:44:18.0000] <GPHemsley>
yeah

[08:44:38.0000] <GPHemsley>
I figured I'd write a script that builds all the test files automatically

[08:44:46.0000] <GPHemsley>
so I can finally make some progress

[08:45:32.0000] <GPHemsley>
hmm... what was the one that Mozilla uses?

[08:45:39.0000] <GPHemsley>
where you put headers in a separate file?

[08:45:44.0000] <GPHemsley>
(or is that custom?)

[08:46:14.0000] <Ms2ger>
That's custom

[08:47:43.0000] <GPHemsley>
oh, hmm...

[08:47:58.0000] <GPHemsley>
annevk: This would have to be modified to do what I want

[08:48:13.0000] <GPHemsley>
Maybe it'd be easier to just generate .htaccess files alongside the tests

[08:49:35.0000] <GPHemsley>
it's OK (or even good) if I include the tests and the generator script in the mimesniff repo, right?

[08:50:51.0000] <Ms2ger>
Sure

[09:13:51.0000] <TabAtkins>
GPHemsley: Was I *supposed* to inform you of pending mimetype requests?

[09:14:31.0000] <GPHemsley>
TabAtkins: No, we were just discussing it in here. :)

[09:14:39.0000] <GPHemsley>
the 'font' type specifically

[09:16:58.0000] <TabAtkins>
annevk: Yeah, an independent object for setting a query would be useful.  It's a separable piece.

[09:17:38.0000] <TabAtkins>
annevk: While Maps don't set to a list, there's nothing that says your own implementation of the methods can't do that internally.  The point is just to provide same-named methods with similar functionality, such that they can be used interchangeably.

[09:18:05.0000] <annevk>
TabAtkins: sure, I think that's already done more or less

[09:18:18.0000] <annevk>
TabAtkins: but apart from some missing stuff

[09:18:23.0000] <TabAtkins>
annevk: delete(key, val) might run into identity problems.  Best think about what concept of identity you want - the tc39 guys have strong opinions about what they've gotten wrong in the past with, for example, Array#contains.

[09:18:28.0000] <annevk>
TabAtkins: but that seems different than what's suggested on the list

[09:18:40.0000] <annevk>
TabAtkins: identify problem?

[09:18:50.0000] <annevk>
ty*

[09:20:49.0000] <TabAtkins>
annevk: For example, whether NaN is equal to NaN, +0 to -0, etc.

[09:21:08.0000] <annevk>
key/val are converted to DOMString first

[09:21:16.0000] <TabAtkins>
Oh, then you're fine.  No worries.

[09:21:26.0000] <TabAtkins>
Forgot about the type coercion.

[09:21:57.0000] <annevk>
it's still not really clear to me if what you're saying and what David/Boris are discussing is the same

[09:22:43.0000] <annevk>
and I have a hard time following terms like "subclassing"

[09:22:56.0000] <annevk>
does that involve me talking to heycam or does it mean to just make it look kinda the same?

[09:23:37.0000] <TabAtkins>
It just means that (a) it should ducktype as a Map, and (b) (new URLQuery) instanceof Map should be true.

[09:23:49.0000] <TabAtkins>
The latter just does prototype comparisons.

[09:24:13.0000] <TabAtkins>
(take proto of both sides, then walk the proto chain of lhs until you find a match or hit the root)

[09:24:38.0000] <annevk>
hmm, so I guess that means talking to heycam

[09:24:51.0000] <annevk>
heycam|away, ^^

[09:24:57.0000] <TabAtkins>
Hmm, maybe.  If Map was already defined in WebIDL, it would be no problem, obviously - you'd just extend it.

[09:29:37.0000] <annevk>
no, you can't extend it and change argument types

[09:45:41.0000] <TabAtkins>
You can't override methods that come from the extended interface?

[09:46:56.0000] <annevk>
no

[09:47:08.0000] <TabAtkins>
Well that's just silly.

[09:47:18.0000] <TabAtkins>
In that case, yeah, bug heycam for hooks.

[09:47:34.0000] <TabAtkins>
It would be great to have the ability to declare something as a Map or Set in the platform.

[09:47:44.0000] <TabAtkins>
The same way we're gradually rationalizing things to be Arrays.

[09:48:27.0000] <annevk>
not sure how much things are actually Arrays in the platform

[09:48:35.0000] <TabAtkins>
Not as much as they should be.

[09:48:44.0000] <annevk>
they have the same basic problem with not being tied to some underlying concept

[09:48:54.0000] <TabAtkins>
Hm?

[09:49:39.0000] <annevk>
so e.g. you get an array of path segments, then start modifying it or "copying" it around and then modifying, do you expect the URL to be modified?

[09:49:55.0000] <TabAtkins>
Oh, that.

[09:50:22.0000] <Ms2ger>
Who cares

[09:50:25.0000] <TabAtkins>
I'm still not sure why that's supposed to be a problem.  You return an Array subclass, not a plain array.  The subclass manages (in IDL prose) the necessary mutations.

[09:50:27.0000] <Ms2ger>
Just toss a coin

[09:50:34.0000] <annevk>
"gradually rationalizing" and "oh that" make me not convinced this is really a solved problem

[09:50:46.0000] <TabAtkins>
Bah, that was a dismissive "oh that".

[09:51:08.0000] <annevk>
there's no such thing as subclass

[09:51:13.0000] <TabAtkins>
...

[09:51:14.0000] <annevk>
have you talked to heycam?

[09:51:34.0000] <TabAtkins>
Dude.  Bro.  A subclass is simply something for which "object instanceof superclass" is true.

[09:52:12.0000] <Ms2ger>
Sis?

[09:52:20.0000] <TabAtkins>
No, Anne's my bro.

[09:52:40.0000] <annevk>
apparently it also magically handles mutations in prose? is there any example of such an array in the platform today?

[09:52:58.0000] <TabAtkins>
Uh, whatever object you just talked about?

[09:53:19.0000] <annevk>
that was a hypothetical for something I might introduce one day if there's hooks

[09:55:13.0000] <TabAtkins>
So, I'm unsure what the problem is here.  What do you think is weird about this?  I've done precisely this kind of thing in JS code before (subclassing an array), and it's fine.

[09:55:30.0000] <jgraham>
Hmm, having magic internal state does sound like it has the possibility to invalidate supposed invariants of the base clas API if you're not very careful

[09:55:39.0000] <jgraham>
Or rather magic internal algorithms

[09:55:53.0000] <TabAtkins>
jgraham: You can always invalidate supposed invariants.  Just... don't do it?

[09:56:27.0000] <jgraham>
That's supposedly easier said than done. If you believe all these "A square is not a rectangle" type articles

[09:56:47.0000] <Ms2ger>
Say what?

[09:56:50.0000] <TabAtkins>
That's cool if you're really into type safety.  This is JS, man.

[09:57:15.0000] <TabAtkins>
Ms2ger: Strictly, a mutable square is *not* a subclass of mutable rectangle, due to the violation of implicit contracts.   Immutables are, though.

[09:57:42.0000] <TabAtkins>
(The main contract being that you can independently mutate the width and height without affecting the other.)

[09:58:26.0000] <jgraham>
Ms2ger: Part of the internet is fascinated with the idea that *in OO software* a square is not a subclass of rectangle because squares impose extra invariants on the relationship between width and height

[09:59:01.0000] <TabAtkins>
Here in reality land, if it acts mostly the same, you're good.  Just be aware of where things are different. ^^_

[10:03:48.0000] <TabAtkins>
You're welcome: http://heeeeeeeey.com/

[10:13:29.0000] <Stevef>
mikesmith: as per the required acc API implementation in the spec it would be <h2>foo bar baz</h2> for AT users

[10:16:39.0000] <MikeSmith>
Stevef: OK

[10:20:12.0000] <annevk>
TabAtkins: just wondering how to do it in spec language

[10:20:54.0000] <annevk>
TabAtkins: although an example in JS might also help

[10:24:52.0000] <TabAtkins>
annevk: awb just responded in that vein.

[10:33:24.0000] <annevk>
TabAtkins: yeah, noticed, but not the spec part, which is more important

[10:34:58.0000] <TabAtkins>
Yeah, if you want WebIDL, there's not a good solution yet, and you need heycam.

[10:35:17.0000] <TabAtkins>
If you're willing to define it in JS (I wouldn't recommend it), you can just use AWB's code.

[10:35:41.0000] <annevk>
so reading http://html5.org/tools/web-apps-tracker?from=7509&to=7510 it seems we're open to XSS there

[10:35:46.0000] <annevk>
only XSS From Hixie though

[10:36:09.0000] <Hixie>
(oops, that reminds me i forgot to escape those <s)

[10:36:14.0000] <Hixie>
why are we open to XSS?

[10:38:12.0000] <Hixie>
on another note

[10:38:28.0000] <Hixie>
annevk: are URLUtils' members going to be unforgeable on HTMLAnchorElement?

[10:38:37.0000] <Hixie>
annevk: or are they only to be unforgeable on Location?

[10:38:57.0000] <annevk>
Hixie: oh if you forgot to escape them maybe we aren't :)

[10:39:29.0000] <annevk>
Hixie: only on Location I think, I'm not sure how to deal with that, I tried to raise that issue when it came up, not sure if heycam|away took it into account

[10:39:41.0000] <Hixie>
http://html5.org/tools/web-apps-tracker?from=7510&to=7511

[10:39:50.0000] <Hixie>
annevk: k

[10:39:54.0000] <Hixie>
heycam|away: ping

[10:40:07.0000] <Ms2ger>
The </pre>?

[10:40:07.0000] <annevk>
Hixie: worst case scenario is that you define the IDL attributes as unforgeable and just say they behave the same as on URLUtils other than IDL differences

[10:40:20.0000] <Hixie>
k

[10:40:41.0000] <Hixie>
that's what i'm currently doing wit the UAE attributes or whatever they're called

[10:42:13.0000] <annevk>
I was hoping we could get away with one interface somehow so whenever we upgrade it we don't have to change Location too

[10:42:22.0000] <Hixie>
yeah

[10:43:02.0000] <annevk>
oh, maybe if we really need it this way and heycam|away doesn't give another shortcut I could create LocationURLUtils as an exact duplicate which is implemented only by Location

[10:43:23.0000] <annevk>
or just do a partial thingy for Location

[10:43:46.0000] <annevk>
so whoever ends up maintaining URL (if it's not me) will take that into account

[10:45:26.0000] <Hixie>
UnforgeableURLUtils

[10:45:49.0000] <Hixie>
or partial, yeah

[10:46:26.0000] <Ms2ger>
Maybe we should do the unforgeable interface after all

[10:49:30.0000] <annevk>
Ms2ger: I guess I was in favor of that, not sure if I stressed that

[10:50:44.0000] <matjas>
polyglot.gif http://lists.w3.org/Archives/Public/public-markdown/2012Nov/0019.html

[10:56:59.0000] <Hixie>
i'm not at the office -- anyone got IE handy?

[10:57:14.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1916 - hit the Navigate button then the Compare button and tell me what gets logged

[10:57:16.0000] <Ms2ger>
I've got a VM with some version

[10:58:24.0000] <Ms2ger>
Hixie, false

[10:58:29.0000] <Hixie>
cool, thanks

[10:58:52.0000] <Hixie>
(which version?)

[10:59:00.0000] <Ms2ger>
IE10

[10:59:11.0000] <Hixie>
k

[10:59:17.0000] <Hixie>
can you try removing the doctype?

[10:59:42.0000] <Ms2ger>
Still false

[10:59:46.0000] <Hixie>
k

[10:59:48.0000] <Hixie>
wtf

[11:05:04.0000] <Hixie>
bholley: sorry, didn't notice you were here either :-)

[11:05:20.0000] <bholley>
Hixie: hm, interesting. Did you try mwobensmith's tests?

[11:05:42.0000] <bholley>
Hixie: those were the ones I tested, in a VM. Let me try again

[11:05:59.0000] <Hixie>
i didn't test them in IE, no

[11:06:07.0000] <bholley>
/me boots vmware

[11:06:09.0000] <Hixie>
they were scary long :-)

[11:06:42.0000] <bholley>
Hixie: ok, so first of all, looks like I've  got IE9

[11:06:58.0000] <Hixie>
does it log true on my test?

[11:07:02.0000] <Hixie>
that'd be interesting ifso

[11:07:03.0000] <bholley>
Hixie: checking

[11:07:21.0000] <Hixie>
in particular because changing the doctype didn't change the result

[11:07:27.0000] <Hixie>
though maybe it's the iframe's doctype that matters

[11:07:34.0000] <Hixie>
and we didn't try changing that

[11:07:50.0000] <bholley>
Hixie: it does log true

[11:07:56.0000] <Hixie>
ho ho ho

[11:07:57.0000] <Hixie>
interesting

[11:08:09.0000] <Hixie>
huh

[11:08:53.0000] <Hixie>
i bet they tried to implement the spec and just assumed it was right and didn't push back because for some reason they think it's ok to have different behaviours in different modes

[11:08:56.0000] <Hixie>
good times

[11:09:22.0000] <Hixie>
what's gecko's behaviour been, historically?

[11:09:38.0000] <bholley>
Hixie: on this issue? One Location object per Window

[11:09:49.0000] <Hixie>
and the motivation to change is what? security bugs?

[11:09:56.0000] <bholley>
Hixie: yes

[11:10:06.0000] <bholley>
Hixie: 16.0.1, 16.0.2

[11:10:33.0000] <Hixie>
basically the difficulty of "inspect the js stack"?

[11:10:56.0000] <Hixie>
the way the spec has it, it should be the same kind of security check as for Document's members

[11:11:15.0000] <bholley>
Hixie: well, there are two issues with the spec

[11:11:23.0000] <Hixie>
more than two, but go ahead :-)

[11:11:32.0000] <bholley>
Hixie: the part that appears to be pure fiction is that Location describes the Document

[11:11:40.0000] <Hixie>
yeah that needs to change regardless

[11:11:45.0000] <Hixie>
dunno what i was testing there

[11:11:58.0000] <Hixie>
should be the active document of the document's browsing context

[11:12:05.0000] <bholley>
Hixie: so once it gets changed so that Location describes the active Document in the browsing context

[11:12:25.0000] <bholley>
Hixie: then we have this weirdness where the security characteristics of Location don't match everything else in its scope

[11:12:31.0000] <bholley>
Hixie: which is wacky for Gecko's compartment model

[11:12:48.0000] <bholley>
Hixie: I think we're pretty safe now TBH, because in 16.0.2 I just hardcoded the checks in C++. But that's not where security checks in Gecko are supposed to live

[11:13:01.0000] <Hixie>
same security model as Window, no?

[11:13:18.0000] <bholley>
Hixie: No, it's different

[11:13:23.0000] <Hixie>
what's the difference?

[11:13:27.0000] <bholley>
Hixie: WindowProxy

[11:13:44.0000] <bholley>
Hixie: that's the identity object in question, and we transplant it between compartments

[11:13:51.0000] <Hixie>
ah

[11:13:53.0000] <bholley>
Hixie: effectively, what I've been pushing to do for Location

[11:14:01.0000] <Hixie>
that sounds incredibly scary

[11:14:04.0000] <bholley>
Hixie: you could say having a LocationProxy

[11:14:06.0000] <bholley>
Hixie: why?

[11:14:41.0000] <bholley>
Hixie: the WindowProxy is just a tiny wrapper around the Window anywaty

[11:14:46.0000] <Hixie>
mostly because i don't understand the implications or how to spec it

[11:14:55.0000] <bholley>
Hixie: well, it's already specced right for Window

[11:14:59.0000] <bholley>
Hixie: and WindowProxy

[11:15:00.0000] <Hixie>
the way the spec has it, the security on WindowProxy is actually specced on Window

[11:15:08.0000] <bholley>
Hixie: right

[11:15:12.0000] <Hixie>
the Proxy aspect could be removed without affecting the security

[11:15:12.0000] <bholley>
Hixie: and the same would hold for Location

[11:15:42.0000] <bholley>
Hixie: oh, hm. Well, not in Gecko

[11:16:00.0000] <bholley>
Hixie: well, hm

[11:16:13.0000] <bholley>
Hixie: my basic beef with our current implementation is that Location wants to be two different things

[11:16:15.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#security-2 is how Window security is specced

[11:16:35.0000] <Hixie>
for Location, seems to me the simplest fix is just to make it work the same as that -- but there's no Proxy needed to do that

[11:16:39.0000] <bholley>
Hixie: it wants to be resolved like Document, but operate on the WIndowProxy

[11:16:55.0000] <Hixie>
you just need to compare the script's security context to the active document's

[11:17:18.0000] <Hixie>
why is it hard for an object to operate on the active document in gecko?

[11:17:29.0000] <Hixie>
History works like that, more or less, no?

[11:18:33.0000] <Hixie>
as specced, the History objects from all of the Documents in a browsing context basically act the same as each other

[11:18:52.0000] <bholley>
Hixie: sure. But they don't do security checks, right?

[11:19:18.0000] <Hixie>
they don't do "can you access this member" checks, but they do check whether the URL you're pushing is the same origin as the URL of the active document

[11:19:27.0000] <Hixie>
otherwise you could load a bank site and change its URL to something else

[11:19:46.0000] <bholley>
Hixie: the issue for us is that "can you access this member" checks are best implemented at compartment boundaries

[11:20:06.0000] <bholley>
Hixie: and this generally works, because for everything but Location, you can infer an object's security characteristics from its scope

[11:20:34.0000] <Hixie>
what's a compartment, in gecko?

[11:20:48.0000] <Hixie>
i don't think the spec has that concept

[11:20:55.0000] <bholley>
Hixie: it doesn't

[11:21:00.0000] <bholley>
Hixie: we have a separate JS heap for each scope

[11:21:26.0000] <bholley>
Hixie: and we enforce security invariants at the border between heaps

[11:21:43.0000] <Hixie>
how does that work with document.domain?

[11:22:04.0000] <bholley>
Hixie: cross-compartment access is done with special wrapper objects, which we can enumerate

[11:22:12.0000] <bholley>
Hixie: when someone sets document.domain, we recompute all those wrappers

[11:22:19.0000] <Hixie>
yikes

[11:22:22.0000] <bholley>
Hixie: the wrappers contain static security policy

[11:22:28.0000] <bholley>
Hixie: no, it's awesome!

[11:23:01.0000] <bholley>
Hixie: we can compute our security policy statically, when computing the wrapper

[11:23:09.0000] <bholley>
Hixie: all accesses after that are super fast, because there's no dynamic check needed

[11:23:26.0000] <bholley>
Hixie: if the security relationship ever changes, like with document.domain, we just recompute

[11:23:47.0000] <bholley>
Hixie: it's orthogonal enough to what everyone else does that it doesn't belong in the spec. But it's really awesome for us

[11:24:09.0000] <bholley>
Hixie: this also ties into document.domain revocation

[11:24:25.0000] <bholley>
Hixie: it's what our system does naturally, but is very difficult for WebKit to do

[11:24:50.0000] <Hixie>
document.domain revocation?

[11:25:34.0000] <bholley>
Hixie: I sent a spec proposal a while back. Basically, if some page grabs stuff from a same-origin page and then sets document.domain to something else, whether those references are revoked or not

[11:25:46.0000] <Hixie>
they should not be

[11:25:48.0000] <Hixie>
right?

[11:25:56.0000] <bholley>
Hixie: I proposed they should

[11:26:01.0000] <Hixie>
oh

[11:26:02.0000] <Hixie>
ew

[11:26:04.0000] <Hixie>
nooo

[11:26:18.0000] <Hixie>
if you have an object, why make it stop working?

[11:26:23.0000] <Hixie>
that's just confusing

[11:26:32.0000] <bholley>
Hixie: because it's not same-origin anymore!

[11:26:34.0000] <Hixie>
it's bad enough that we had to do that for document.storage

[11:26:49.0000] <bholley>
Hixie: and it's now exposed to all kinds of malicious stuff

[11:26:57.0000] <bholley>
Hixie: that it never agreed to

[11:27:45.0000] <bholley>
Hixie: from a security perspective, I think it would be what people would expect

[11:27:54.0000] <Hixie>
well i agree document.domain is a sandtrap, but this doesn't make things particularly safer. I mean, the other side now has access to your origin insofar as sending requests to your server goes, the game is more or less lost if you didn't want that.

[11:28:23.0000] <bholley>
Hixie: well, consider this

[11:28:56.0000] <Hixie>
i mean, you can just import the script you're worried about.

[11:29:06.0000] <Hixie>
or create an iframe that emulates the page you want access to.

[11:29:13.0000] <bholley>
/me CCs hixie on a bug

[11:29:45.0000] <bholley>
Hixie: bug 655649 comment 0

[11:30:01.0000] <bholley>
Hixie: this was from abarth actually

[11:30:42.0000] <bholley>
Hixie: the thing is, revocation is currently specced

[11:30:49.0000] <Hixie>
only for storage

[11:30:50.0000] <bholley>
Hixie: but _only_ if you happen to touch the Window object

[11:31:04.0000] <bholley>
Hixie: because per spec that's the only thing that does security checks

[11:31:12.0000] <Hixie>
that's not revocation per se, that's just, right, where the checks are

[11:31:13.0000] <bholley>
Hixie: but those checks use the effective script orogin

[11:31:14.0000] <bholley>
*origin

[11:31:34.0000] <bholley>
Hixie: well, if you have a reference to a Window, then it is revocation, because it stops working

[11:31:44.0000] <bholley>
Hixie: but if you have a reference to a DOM node, it doesn't stop working

[11:32:05.0000] <bholley>
Hixie: and you can waltz your way around the DOM, so long as you avoid touching any of the objects that will reexamine the script origin

[11:32:13.0000] <bholley>
Hixie: it's totally unintuitive

[11:32:40.0000] <Hixie>
i agree it's pretty silly, but hey, it's the web. document.domain is a bad feature, and people shouldn't use it. but it's far too late to start changing how it works, IMHO.

[11:33:01.0000] <bholley>
Hixie: well, Opera and Gecko ship full revocation

[11:33:15.0000] <bholley>
Hixie: against the spec

[11:33:28.0000] <Hixie>
:-(

[11:34:04.0000] <jwalden>
and note that Gecko didn't ship full-revocation until semi-recently

[11:34:17.0000] <jwalden>
so the position in the spec here is not particularly important for the web

[11:34:50.0000] <Hixie>
anyway as far as Location goes, it'd be nice to have a solution that is both implementable in Gecko's model and implementable in the spec's model without introducing more crazy stuff like the WindowProxy object

[11:35:05.0000] <bholley>
Hixie: yeah. I agree that we should spec align on security stuff. But fixing this requires would require me adding a bunch of goop to our security code to specifically waive security checks in this particular situation, which never seems like an attractive thing to spend my time on

[11:35:34.0000] <Hixie>
yeah this whole part of the platform isn't particularly fun to work on :-)

[11:35:38.0000] <Hixie>
either in code or in the spec, let me assure you

[11:36:05.0000] <bholley>
Hixie: :-)I

[11:36:55.0000] <Hixie>
how do you handle giving scripts access to Document objects but not any properties of Document objects?

[11:37:04.0000] <Hixie>
for cross-origin Documents

[11:37:12.0000] <bholley>
Hixie: they just get an opaque wrapper

[11:37:20.0000] <bholley>
Hixie: that allows no property access

[11:37:42.0000] <bholley>
Hixie: actually, _all_ cross-origin references use the same wrapper

[11:37:50.0000] <bholley>
Hixie: er, same policy

[11:38:11.0000] <bholley>
Hixie: which just does this: http://mxr.mozilla.org/mozilla-central/source/js/xpconnect/wrappers/AccessCheck.cpp#155

[11:38:35.0000] <bholley>
Hixie: (when trying to access properties on it)

[11:40:44.0000] <bholley>
Hixie: to be honest, depending on how much work it is for WebKit to reuse its WindowProxy logic, it might be easier for us to align with WebKit than the reverse

[11:40:51.0000] <Hixie>
so basically your problem is you don't have a good way to get "the entry script's effective script origin" for the purpose of comparing to other origins?

[11:41:18.0000] <bholley>
Hixie: no, we can do that. And I actually did that, for 16.0.2

[11:41:36.0000] <bholley>
Hixie: it just runs contrary to the way everything else works

[11:42:38.0000] <Hixie>
can it be localised enough that you can just but big "here by dragons, don't copy this code into newer APIs" warnings around it or something?

[11:42:54.0000] <Hixie>
if it's not much work for you to do that, i'm definitely leaning towards that kind of approach rather than a proxy

[11:43:10.0000] <Hixie>
mostly because i don't have a good handle on how to reason about the security of a proxy

[11:43:13.0000] <Hixie>
and thath scares me

[11:43:40.0000] <bholley>
Hixie: we can do that, sure. But I'd like to convince you that the proxy isn't actually scary

[11:43:58.0000] <Hixie>
nobody's managed that yet for WindowProxy, but i'm definitely open for you trying :-)

[11:44:11.0000] <bholley>
Hixie: well, do you find WindowProxy scary?

[11:44:27.0000] <Hixie>
i consider WindowProxy to be one of the most horrific things in the web platform :-)

[11:44:43.0000] <Hixie>
it gives me headaches whenever i try to understand what a test should do

[11:45:03.0000] <Hixie>
i got the security for it working mostly by making the security not involve the proxy

[11:45:08.0000] <bholley>
Hixie: exactly

[11:45:12.0000] <bholley>
Hixie: the same would apply for Location

[11:45:26.0000] <bholley>
Hixie: all I'm proposing is that we say that window.location returns a LocationProxy rather than a Location

[11:45:43.0000] <bholley>
Hixie: that has the same behavior as WindowProxy

[11:46:01.0000] <bholley>
Hixie: the security isn't affected from a spec level. It just lets us implement it the way we want

[11:46:38.0000] <bholley>
Hixie: basically, saying that LocationProxy === WindowProxy.location, whatever that may be at the moment

[11:46:44.0000] <Hixie>
so why is this not a problem for History?

[11:47:14.0000] <Hixie>
because the security checks are in the members, not the accessing of the members?

[11:47:43.0000] <bholley>
Hixie: Yes. Again, we can (and did!) just stick C++ security checks in the getters/setters

[11:48:12.0000] <bholley>
Hixie: but then, for example, those properties can be enumerated, which they aren't in the current world

[11:48:21.0000] <Hixie>
(i understand that you can do both but one is nicer, i'm just trying to work out why you're not going to later say we should have HistoryProxies)

[11:48:59.0000] <bholley>
Hixie: also, history is simple because it's not cross-origin accessible

[11:51:02.0000] <bholley>
Hixie: I think speccing this stuff isn't that hard. IMO the biggest issue is that it's hard from WebKit to implement, and abarth says he isn't likely to do it

[11:51:06.0000] <bholley>
which is understandable

[11:51:31.0000] <bholley>
Hixie: given the testing we did, jst decided that we should just align with Presto/Trident for the time being

[11:52:00.0000] <bholley>
Hixie: since it makes things nicer for us, and we're not really close to spec consensus at this point

[11:52:01.0000] <Hixie>
that's definitely a concern, though not one which i give much more weight than your opinion regarding the complexity it adds to your code

[11:52:07.0000] <Hixie>
that=abarth's comments about webkit

[11:52:12.0000] <bholley>
Hixie: but the IE10 thing is interesting

[11:52:23.0000] <Hixie>
yeah the IE10 thing definitely puts more spice into the discussion

[11:52:26.0000] <bholley>
Hixie: if Gecko were the only engine that did things our way, I'd align with the spec

[11:52:35.0000] <bholley>
Hixie: I don't think the same is true for WebKit

[11:52:51.0000] <annevk>
Ms2ger or Ms3ger: can we make Anolis match on both word plus trailing "s" and word minus trailing "s"?

[11:53:08.0000] <abarth>
bholley: it's just a cost benefit issue.  the engineering you're asking for is highly non-trivial

[11:53:10.0000] <annevk>
Ms2ger or Ms3ger: because that would save a lot of typing (and fixing)

[11:53:21.0000] <Hixie>
bholley: i don't give much weight to arguments along the lines of "even if we're the only ones left, we'll never change!", because i feel that's more like hostage taking than negotiation.

[11:53:37.0000] <Hixie>
bholley: but i don't think that's what webkit peeps are saying

[11:53:43.0000] <Hixie>
oh hey, a wild abarth appears!

[11:54:11.0000] <bholley>
abarth: I understand, and am not blaming you

[11:54:29.0000] <bholley>
abarth: we'd do it because the engineering on our side would likely be simpler

[11:54:37.0000] <abarth>
bholley: if you wrote a patch that implement the behavior, i'd be happy to review it.  I'm just being honest and telling you that the folks with the expertise to make such a change aren't likely to see enough benefit to outweigh the other things they could spend their time on

[11:54:59.0000] <Hixie>
bholley: ignoring implementation complexity for now, since it seems that argument can be drawn in all directions (especially given IE10), it does seem like from an author's perspective the proxy thing would be net worse than having different Location objects for each Document

[11:55:16.0000] <bholley>
Hixie: how come?

[11:55:49.0000] <Hixie>
bholley: well, say you have a Document, and you grab it's Location and decide you're going to shim in support for anne's new methods

[11:56:05.0000] <Hixie>
bholley: and then later you navigate that iframe to a different page on the same origin

[11:56:09.0000] <Hixie>
bholley: suddenly your shims are gone

[11:56:21.0000] <Hixie>
bholley: but it's the "same object"

[11:56:29.0000] <Hixie>
bholley: then the user hits back, and your shims are suddenly back

[11:56:34.0000] <Hixie>
bholley: i think it'd be really confusing

[11:56:39.0000] <bholley>
Hixie: no, they're not back

[11:56:46.0000] <Hixie>
they'd be back if it worked like Window

[11:56:57.0000] <Hixie>
but if tehy're not back that's even more confusing :-)

[11:56:58.0000] <bholley>
Hixie: my proposal was to  clear expandos on each navigation, which seemed the most sane

[11:57:16.0000] <Hixie>
i meant changes to the Location interface object, not the instance

[11:57:27.0000] <bholley>
Hixie: oh, the interface object would stay, yeah

[11:57:57.0000] <Hixie>
permanently clearing the properties set on the object seems bad too, though

[11:58:13.0000] <bholley>
Hixie: welll...

[11:58:34.0000] <bholley>
Hixie: currently, if you go back/forward, whether your properties persist on Window or not depends on whether the page persisted

[11:59:04.0000] <bholley>
Hixie: though I guess in this case we're only discussing the persisted case

[12:00:30.0000] <Hixie>
bholley: having the Window object's prototype chain change when you navigate is weird enough, having a Location object change when you navigate seems even worse

[12:00:59.0000] <Hixie>
bholley: if it wasn't for implementation ease, do you agree that we wouldn't design the API this way?

[12:02:14.0000] <bholley>
Hixie: well, I think the current spec language is the sanest way to design the API

[12:02:32.0000] <bholley>
Hixie: once we're stuck with the constraint that the object operates on the active browsing context…iunno

[12:02:54.0000] <bholley>
Hixie: but I am not the expert on that part

[12:03:09.0000] <Hixie>
i think officially i'm supposed to be, but hell if i know

[12:03:12.0000] <bholley>
Hixie: (API design for web authors)

[12:04:16.0000] <Hixie>
i think i'm leaning towards the webkit model, but i hope you don't feel i'm ignoring your feedback here. it just seems that the arguments are slightly in that direction.

[12:05:19.0000] <Hixie>
i'll respond to the thread in more detail this afternoon.

[12:05:28.0000] <bholley>
Hixie: I don't feel that way. I'm probably not the best person to be thinking about this from a spec level though. Can we send mail and let bz weight in?

[12:05:37.0000] <bholley>
Hixie: ok great

[12:05:56.0000] <Hixie>
definitely always want more input from bz :-)

[12:06:07.0000] <Hixie>
ok i gotta go. bbl. thanks for walking me through this.

[12:06:23.0000] <bholley>
Hixie: no problem - thanks for your help/interest here :-)

[12:09:33.0000] <annevk>
oh browsers, y u silly

[12:09:40.0000] <annevk>
input http://%80

[12:10:03.0000] <annevk>
Chrome: fatal error, nonetheless modifies input to http://%EF%BF%BD/

[12:10:49.0000] <annevk>
Safari: no problem, but outputs host as � (presumably trying to decode byte using utf-8)

[12:11:07.0000] <annevk>
Firefox: no problem, outputs host as %80

[12:11:38.0000] <annevk>
Opera: fatal error, with its usual weird opera:illegal-url-* bullshit

[12:12:00.0000] <annevk>
I suspect Internet Explorer does something else, but who knows

[12:21:47.0000] <annevk>
but if input is http://%80†

[12:22:01.0000] <annevk>
Opera: no problem, xn--%80-mp0a

[12:22:32.0000] <annevk>
Safari: no problem, but same problem, outputs xn--�-mp0a

[12:23:01.0000] <annevk>
Chrome: fatal error, same problem, http://%EF%BF%BD%E2%84%A2/	

[12:23:14.0000] <annevk>
oops, http://%EF%BF%BD%E2%80%A0/

[12:23:40.0000] <annevk>
Firefox: no problem, outputs xn--%80-mp0a

[12:24:02.0000] <a-ja>
IE10: This page can't be displayed (for http://%80 )

[12:26:00.0000] <annevk>
a-ja: ah yeah, you need to use some kind of inspector thingie in the DOM for results

[12:27:00.0000] <a-ja>
IE10: Windows cannot find 'http://%80†'. Check the spelling and try again.....in an Address Bar popup

[12:30:02.0000] <annevk>
a-ja: use http://dump.testsuite.org/url/inspect.html

[12:33:02.0000] <annevk>
a-ja: the URLs themselves don't resolve in this case, the question is more what happens with them in the DOM and what kind of DNS lookup might happen in the end

[12:33:39.0000] <a-ja>
tool wont take addy with †

[12:34:37.0000] <annevk>
not sure what you mean?

[12:36:47.0000] <a-ja>
using that tool with http://%80† url typed in gives me nada

[12:37:08.0000] <annevk>
ah okay, thanks

[13:01:53.0000] <annevk>
hmm, Opera's display of IDNA versus non-display of IDNA leaks into the DOM

[13:02:19.0000] <annevk>
%C3%A0 becomes é and %C3%A0% becomes xn--%-rfa

[13:03:02.0000] <annevk>
oh, but %41% is an invalid URL

[13:03:07.0000] <annevk>
wtf Opera

[14:03:09.0000] <annevk>
looks like denying U+FFFD might be http://tools.ietf.org/html/rfc3454#appendix-C.6

[14:03:26.0000] <annevk>
which is via various references part of IDNA2003

[14:18:34.0000] <heycam>
/me must be missing some context because he doesn't know what annevk and TabAtkins were talking about earlier re arrays, maps, and things

[14:19:05.0000] <heycam>
Hixie, pong

[14:19:28.0000] <annevk>
heycam: for ES6 Map, have a way to subclass that including overriding argument types

[14:20:33.0000] <annevk>
heycam: for ES Array, have a way to subclass that in similar manner, so you can e.g. do url.segments[2] = "partOfPath" (which will get some pre-processing on setting and affects the url object)

[14:20:51.0000] <heycam>
annevk, we do?

[14:21:00.0000] <heycam>
oh sorry, I accidentally a word

[14:21:35.0000] <heycam>
the whole thing with subclassing arrays, I was kind of waiting for the ES spec to make that possible before trying something like that

[14:22:13.0000] <annevk>
heycam: http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Nov/0235.html

[14:22:26.0000] <annevk>
heycam: I see, TabAtkins tells me it's already possible...

[14:22:31.0000] <heycam>
I am out of date then!

[14:22:46.0000] <annevk>
well or TabAtkins is in the future

[14:22:52.0000] <heycam>
ha

[14:23:04.0000] <heycam>
/me wonders what it would mean to call the proto's get/set on a subclassed map

[14:24:26.0000] <annevk>
I'm a little sceptic there's a lot of value to be gained here, but who knows

[14:24:47.0000] <heycam>
what API is this wanted for btw?

[14:25:06.0000] <annevk>
Map is wanted for URLQuery: http://url.spec.whatwg.org/#urlquery

[14:25:34.0000] <annevk>
Array might be wanted for non-existing URLSegments or some such

[14:27:24.0000] <annevk>
heycam: oh, and if you're short on things to do, there's a question on "throw" in https://www.w3.org/Bugs/Public/show_bug.cgi?id=19110 and one on optional arguments versus dictionaries in https://www.w3.org/Bugs/Public/show_bug.cgi?id=19646

[14:27:36.0000] <heycam>
annevk, would URLQuery.set do some validation on the value you pass in? so it doesn't contain a "&" character or something?

[14:27:49.0000] <heycam>
shorrt on things to do, right :)

[14:28:16.0000] <annevk>
heycam: it would probably transform certain characters

[14:28:37.0000] <annevk>
heycam: percent encode them or some such

[14:28:48.0000] <heycam>
so I am wondering whether subclassing is the right relationship for the URLQuery, if we want to prevent certain characters from getting into the map without being transformed

[14:29:11.0000] <heycam>
we probably want to use the same interface as Map, but not be a subclass of Map -- more like we want to wrap an internal map that you can't get to

[14:30:25.0000] <heycam>
sorry to do this to you, but would you mind mailing or filing a bug about the Map thing?

[14:31:15.0000] <heycam>
/me will work on a few webidl bugs later this week -- I'll put the above bugs 19110 and 19646 on my list to do

[14:31:29.0000] <annevk>
heycam: yeah can do (I'm not really sure subclassing Map is the right solution either, maybe I'll post to the whatwg list about it again with some of the requirements and see if that makes it still a good approach)

[14:31:48.0000] <annevk>
heycam: ta

[14:32:00.0000] <heycam>
yeah if you can tease those things out first before I plunge into doing Map stuff in the spec, that would be good

[14:44:16.0000] <TabAtkins>
heycam: The reason to subclass Map is to, well, have a Map.  So people with code that expects to take a Map can do the obvious test (foo instanceof Map) and have it work correctly.

[14:44:46.0000] <TabAtkins>
heycam: AWB has JS code on the thread in WHATWG about how you would do it in ES5 or in ES6-with-classes.

[14:44:54.0000] <TabAtkins>
heycam: It's pretty trivial.

[14:45:29.0000] <heycam>
does it matter that calling Map.__proto__.set on the subclassed map will subvert the argument checking?

[14:45:33.0000] <heycam>
er

[14:45:36.0000] <heycam>
Map.prototype.set

[14:46:05.0000] <TabAtkins>
I recommend *actually* setting a hidden internal Map, so it's safe from outside manipulation.

[14:46:39.0000] <heycam>
TabAtkins, ok. but we would still have the outer one being a real Map, even though it doesn't use its Map-ness?

[14:47:04.0000] <TabAtkins>
Yes.  The Map-ness is used for type checks, mostly.

[14:47:12.0000] <TabAtkins>
Or only, I guess.

[14:47:39.0000] <heycam>
so I could imagine code that expects, if it is "instanceof Map", that calling Map.protoype.get on it will do something useful

[14:47:44.0000] <TabAtkins>
But still, when I need to distinguish code-paths by type, I use instanceof checks.  Having DOM types pass the most appropriate basic ES type is useful.

[14:48:11.0000] <TabAtkins>
...why would anyone do that, rather than just calling get on the object itself?

[14:48:33.0000] <heycam>
well I don't know, but it seems like something that should work if an object "is a Map"

[14:48:47.0000] <heycam>
I guess it comes down to what you think "instanceof Map" implies

[14:49:07.0000] <TabAtkins>
That sort of thing only makes sense in general if you are *actually* a Map, not a subclass of.

[14:49:22.0000] <TabAtkins>
You must assume that subclasses have overridden the methods with something useful.

[14:49:42.0000] <TabAtkins>
instanceof implies that Map's prototype is *somewhere* in your object's prototype chain.

[14:50:12.0000] <heycam>
sure, but that doesn't mean that calling .get() on the object will do you want either

[14:50:16.0000] <heycam>
it *probably* will...

[14:50:48.0000] <TabAtkins>
If it doesn't act more-or-less like a Map, then you've obviously broken the type contract and deserve pain.

[14:51:03.0000] <TabAtkins>
URLQuery does indeed act like a Map.  It just coerces its key and value to strings first.

[14:51:19.0000] <heycam>
I guess I was thinking that calling Map.prototype.get on it is something that is part of the contract

[14:51:59.0000] <TabAtkins>
That seems like a silly thing to expect.  ^_^  It basically assumes that the object never overrides any of the superclass's methods.

[14:52:51.0000] <TabAtkins>
It's true if you subscribe to the very strictest idea of when it is appropriate to "subclass" (when the subclass is *literally indistinguishable* from the superclass, using operations that the superclass provides), but not in most of the real world.

[14:53:30.0000] <heycam>
right, that is how I was thinking about it

[14:53:44.0000] <TabAtkins>
Normal people don't think about it that way. ^_^

[14:53:48.0000] <heycam>
ha

[14:54:26.0000] <heycam>
to me, it feels like you want to state that URLQuery implements a Map interface, and that the JS Map object is actually a concrete class

[14:54:42.0000] <heycam>
but that's not really how JS works

[14:54:50.0000] <TabAtkins>
That's an acceptable definition of "subclass" in JS terms.

[14:55:12.0000] <TabAtkins>
If you pretend that objects can only have a single interface. ^_^

[14:55:26.0000] <TabAtkins>
(A proper interface system would be very welcome, but doesn't exist as of yet.)

[14:55:51.0000] <heycam>
the end result of this is that you need to be careful about defining what happens when you do call the super methods on your subclassed object

[14:55:55.0000] <heycam>
but if that's the way things are, ok

[14:58:00.0000] <heycam>
TabAtkins, it does seem a bit funny to subclass Map only to not use its Mapness, but to have a hidden Map instance that it forwards calls to though

[14:58:30.0000] <TabAtkins>
If JS had a better way to type-check (or rather, interface-check), I'd advocate that, instead of overloading subclassing to achieve it. :/

[14:58:41.0000] <TabAtkins>
/me is partial to branding with Symbols.

[14:59:37.0000] <heycam>
yeah it's kind of a hack to inherit from Map just to make your own object look like a Map

[15:01:02.0000] <TabAtkins>
We should probably ping es-discuss explicitly about this, actually.

[15:01:11.0000] <TabAtkins>
So we're not just making decisions based on what I think is best.

[15:01:19.0000] <heycam>
:)

[15:01:20.0000] <TabAtkins>
/me goes to do it.

[15:01:27.0000] <heycam>
cool

[15:08:33.0000] <zewt>
duck typing tends to make more sense than actual inheritance, unless the interface is actually meant as a base class

[15:09:29.0000] <zewt>
i guess that depends on whether you care about having messing around with the prototype of Map work here too

[15:09:48.0000] <Hixie>
heycam: so Location has a bunch of members that need to be [Unforgeable], but Anne is planning on providing me an interface that I am to import using "Location implements ..." that also need to be unforgeable.

[15:10:04.0000] <Hixie>
heycam: do you wish to support this natively in webidl or should we just put the annotation on each attribute?

[15:10:26.0000] <TabAtkins>
zewt: Yeah, that's what I'm typing up in this question to es-discuss.

[15:10:37.0000] <heycam>
Hixie, so all the members on this imported interface are unforgeable? or just some?

[15:10:52.0000] <heycam>
Hixie, and are they meant to be unforgeable on one object but not another?

[15:12:43.0000] <Hixie>
yeah, they'll be forgeable on HTMLAnchorElement

[15:12:45.0000] <Hixie>
annevk: ^

[15:12:54.0000] <Hixie>
annevk: are they all unforgeable?

[15:13:24.0000] <heycam>
Hixie, so maybe you need a way on the implements statement to indicate which (or that all) of them are unforgeable

[15:13:44.0000] <heycam>
[Unforgeable] Location implements Blah;   or   [Unforgeable=foo1,foo2] Location implements Blah;

[15:13:55.0000] <Hixie>
could do that, yeah

[15:14:35.0000] <annevk>
Hixie: I thought there was some requirement for them to all be unforgeable?

[15:14:42.0000] <annevk>
Hixie: but I don't know the specifics

[15:15:15.0000] <Hixie>
ok let's assume it's all of them

[15:15:18.0000] <Hixie>
and all on Location, too

[15:15:21.0000] <Hixie>
as well as valueOf

[15:15:59.0000] <annevk>
TabAtkins: URLQuery has get/getAll(), might want add(), and set() does something special with the value

[15:16:08.0000] <heycam>
if that's the case then we could just stick [Unforgeable] on interface Location and make that mean all its members are, even if they're from an "implements"

[15:16:09.0000] <TabAtkins>
heycam: Sent the email.

[15:16:10.0000] <Hixie>
heycam: i think it'd be better to just have it on the Location interface and have it mean that everything is unforgeable, including any "implements"-imported members

[15:16:12.0000] <heycam>
TabAtkins, great!

[15:16:15.0000] <Hixie>
heycam: right

[15:16:17.0000] <heycam>
:)

[15:16:40.0000] <Hixie>
heycam: ok

[15:16:48.0000] <Hixie>
heycam: i'll assume that then. thanks. :-)

[15:16:51.0000] <heycam>
Hixie, there are still other attribute-specific [Unforgeable] things yes?

[15:16:53.0000] <annevk>
TabAtkins: get/getAll() probably need to do something special with the argument too

[15:16:56.0000] <heycam>
so we can't get rid of that?

[15:17:04.0000] <Hixie>
heycam: yeah, e.g. in particular Document.location :-)

[15:17:11.0000] <heycam>
ha yes ok :)

[15:17:13.0000] <annevk>
TabAtkins: to deal with percent-encoding and such

[15:17:41.0000] <TabAtkins>
annevk: Yeah, whatever we do for set() should have similar implications for the other methods.

[15:18:06.0000] <annevk>
TabAtkins: I just wonder what the benefit is of it being a subclass at that point

[15:18:42.0000] <TabAtkins>
The fact that it massages its inputs doesn't change the fact that it acts just like a Map, and most generic Map-manipulating functions would be able to use it without trouble.

[15:18:58.0000] <TabAtkins>
And if that's the case, you want it to be reasonably robust against type-checking.

[15:19:12.0000] <annevk>
doesn't the get/getAll thing make it not like a map?

[15:19:33.0000] <TabAtkins>
Nope, if you interact solely through the Map methods, it's just like a normal Map.

[15:19:39.0000] <annevk>
and that the underlying string is an ordered list of key/value pairs which can have duplicate keys?

[15:20:02.0000] <annevk>
the duplicate keys are significant

[15:20:10.0000] <heycam>
Hixie, do we have anything currently that requires toString and/or valueOf to be unforgeable on Location?

[15:21:09.0000] <TabAtkins>
annevk: Yeah, that's fine.  Generic Map-manipulating functions will probably not see the duplicate entries, but that's okay.

[15:21:33.0000] <annevk>
then they can't handle typical <form> scenarios...

[15:22:23.0000] <TabAtkins>
annevk: That's fine.  No duplicate keys is also common, after all.  It's fine to have some cases fail when passed to generic code.

[15:22:43.0000] <annevk>
I see

[15:22:50.0000] <annevk>
well, heycam, still want that email?

[15:22:54.0000] <annevk>
I guess you do

[15:23:00.0000] <annevk>
/me will write it later

[15:23:05.0000] <heycam>
yeah. thanks.

[15:23:08.0000] <TabAtkins>
Hopefully ES will sprout a core MultiMap soonish (after impls get Map implemented), so URLQuery can change to being that instead.

[15:23:19.0000] <TabAtkins>
(with MultiMap being a subclass of Map)

[15:25:51.0000] <heycam>
Hixie, https://www.w3.org/Bugs/Public/show_bug.cgi?id=20008 for the [Unforgeable] thing

[15:35:50.0000] <annevk>
heycam: fwiw, you already reached that conclusion before: http://lists.w3.org/Archives/Public/public-script-coord/2012JulSep/0153.html

[15:36:08.0000] <heycam>
man what a short memory I have

[15:36:15.0000] <heycam>
but a consistent one at least? :)

[15:36:18.0000] <annevk>
I think that's why I never replied to that thread to say we need it for URLUtils

[15:37:02.0000] <annevk>
heycam: hopefully this time it ends up in the spec :p

[15:37:43.0000] <heycam>
yeah. unfortunately I don't have a page like Hixie's showing which mails to the list I've dealt with yet. (although I would reply on the thread when I have...)

[15:42:44.0000] <Hixie>
heycam: you mean does the spec say that yes? if so, not to my knowledge.

[15:42:52.0000] <Hixie>
s/yes/yet/

[15:43:12.0000] <heycam>
Hixie, ok. seems in that mail annevk linked to I already said that should be implied by [Unforgeable] on the interface.

[15:43:22.0000] <Hixie>
annevk: that time, heycam thought he'd be able to remove the one on members as well

[15:43:36.0000] <Hixie>
annevk: this time, we're talking about just adding a new feature, leaving the old one


2012-11-20
[16:58:40.0000] <Hixie>
wow there is really no freaking interop between browsers on Location

[17:02:28.0000] <Hixie>
wow, IE actually lets you detect which properties are on another origin's Location object

[17:03:10.0000] <heycam>
that sounds bad

[17:04:25.0000] <Hixie>
parent.location instanceof Location => false in IE, true in Gecko, false in Opera, and there's no Location object in WebKit.

[17:04:54.0000] <heycam>
should be false in Gecko once Location is implemented with new Web IDL bindings

[17:05:47.0000] <Hixie>
Location.test = 1; w(parent.location instanceof Location); w(Location.test); w(parent.location.test) => true, 1, undefined in Gecko

[17:05:50.0000] <Hixie>
wtf Gecko

[17:06:15.0000] <Hixie>
wait, i'm on crack

[17:06:40.0000] <Hixie>
i should have been doing Location.prototype.test = 1

[17:06:47.0000] <Hixie>
and gecko throws if i do that...

[17:07:10.0000] <heycam>
hmm

[17:50:59.0000] <Hixie>
abarth: https://bugs.webkit.org/show_bug.cgi?id=83493#c20

[17:51:34.0000] <abarth>
Hixie: hi

[17:52:21.0000] <Hixie>
abarth: haven't yet paged in the details here but that bug has a question for you

[17:52:22.0000] <abarth>
Hixie: answered

[17:52:26.0000] <Hixie>
cool

[17:52:26.0000] <Hixie>
thanks

[17:53:12.0000] <Hixie>
anything to report on ancestorOrigins btw? did it work out as expected?

[17:53:55.0000] <abarth>
yes, the people for whom it solves a problem are very happy with it

[17:54:04.0000] <abarth>
it certainly doesn't solve every problem though

[17:54:20.0000] <abarth>
the main people who like it are people who write widgets

[17:54:27.0000] <abarth>
and want to know something about their embedded context

[17:54:44.0000] <Hixie>
cool

[17:54:51.0000] <Hixie>
do you know of any implementation in other UAs?

[17:54:56.0000] <Hixie>
annevk: you around?

[17:55:01.0000] <abarth>
I don't know of any

[17:55:20.0000] <abarth>
in other user agents, you can try to access things and catch security exceptions

[17:55:23.0000] <abarth>
so there's less of a need

[17:55:38.0000] <abarth>
but that doesn't help with the clickjacking use cases

[17:55:38.0000] <Hixie>
oh, why doesn't that work in webkit?

[17:56:07.0000] <abarth>
WebKit doesn't throw exceptions for security errors

[17:56:18.0000] <abarth>
in some cases

[17:56:31.0000] <abarth>
and it logs to the console when there is a security error

[17:56:37.0000] <abarth>
the widget authors don't like the console spam

[17:56:46.0000] <abarth>
because people who embed the widgets complain about it

[17:58:34.0000] <Hixie>
oh

[17:58:38.0000] <Hixie>
why not fire an exception?

[17:58:49.0000] <abarth>
two reasons:

[17:59:00.0000] <abarth>
1) we're worried about breaking content that doesn't expect the exception

[17:59:43.0000] <abarth>
2) othermaciej is concerned about making it too easy to probe whether security checks will pass or fail

[17:59:57.0000] <abarth>
(i'm not really sold on (2), so I might not be explaining it the most clearly)

[18:00:25.0000] <abarth>
i've got to run

[18:00:28.0000] <Hixie>
laer

[18:00:31.0000] <abarth>
l8r

[18:01:46.0000] <TabAtkins>
Damn punk kids and your txt spk

[18:36:43.0000] <othermaciej>
abarth: I am not all that concerned about it, certainly not enough to outweigh any actual pragmatic benefit in a given case if there is one

[18:49:04.0000] <Hixie>
abarth: ok so looks like ancestorOrigins in webkit uses a DOMStringList, and isn't blocked by sandboxing, is that right?

[18:51:20.0000] <abarth>
othermaciej: oh, maybe I misunderstood the earlier discussion.  sounds like (1) is the main issue then

[18:51:26.0000] <abarth>
Hixie: yes

[18:51:38.0000] <othermaciej>
abarth: I don't know what you mean by "the earlier discussion"

[18:52:19.0000] <othermaciej>
abarth: I personally do think it is a bad idea to return informative exceptions to the caller when a security violation occurs, but not enough to fight the weight of other implementations, or what have you

[18:52:58.0000] <abarth>
its from a message you wrote on Aug 13, 2010

[18:53:02.0000] <abarth>
let me find the link

[18:54:14.0000] <abarth>
http://lists.webkit.org/pipermail/webkit-dev/2010-August/013883.html

[18:54:54.0000] <abarth>
sounds like you weren't overly concerned then either

[18:55:00.0000] <abarth>
but just raising it as a possible issue

[21:42:26.0000] <Hixie>
in webkit, does securityOrigin()->toString() return a unicode origin or an ascii origin?

[21:44:22.0000] <Hixie>
(abarth?)

[22:58:34.0000] <MikeSmith>
Hixie: I looked at the sources myself to try to figure out but can't tell from that either

[22:59:00.0000] <MikeSmith>
http://trac.webkit.org/browser/trunk/WebCore/platform/SecurityOrigin.h?rev=30184

[22:59:11.0000] <MikeSmith>
I can't tell from that at least

[23:13:23.0000] <MikeSmith>
Hixie: question about the outline algorithm behavior for the case of <hgroup>foo <h1>bar</h1> <h2>baz</h2></hgroup>

[23:14:14.0000] <MikeSmith>
it's not clear to me what the spec says should be the heading that goes into the outline for that

[23:15:17.0000] <MikeSmith>
all the implementations of the outline algorithm I've tried use just "bar"

[23:16:18.0000] <MikeSmith>
but I don't see where the spec requires that instead of using "foo"

[23:18:58.0000] <Hixie>
MikeSmith: the heading is "foo" with subheading "bar"

[23:19:14.0000] <MikeSmith>
aha

[23:19:14.0000] <Hixie>
oh wait

[23:19:18.0000] <Hixie>
i misread your example

[23:19:23.0000] <Hixie>
it's bar with subheading baz

[23:19:35.0000] <Hixie>
the foo is bogus

[23:19:35.0000] <MikeSmith>
ok

[23:19:47.0000] <Hixie>
hopefully the spec actually agrees

[23:19:59.0000] <MikeSmith>
I can't tell that it does actually

[23:20:08.0000] <MikeSmith>
will file a bug

[23:21:20.0000] <Hixie>
outline algorithm says the hgroup is the heading, right?

[23:21:52.0000] <MikeSmith>
yeah

[23:22:04.0000] <MikeSmith>
that part's clear

[23:23:10.0000] <JonathanNeal>
hgroup can't contain anything that isn't a <h1-6>.

[23:23:19.0000] <JonathanNeal>
That's why us <subline>rs were rabble rousing.

[23:24:05.0000] <MikeSmith>
JonathanNeal: it can contain them in the DOM

[23:24:12.0000] <MikeSmith>
I realize it's not valid

[23:24:38.0000] <Hixie>
MikeSmith: ok so if hgroup is the heading, then the question is just what does the hgroup represent

[23:25:22.0000] <Hixie>
...which i guess is indeed rather vague

[23:25:37.0000] <MikeSmith>
ah damn

[23:25:43.0000] <MikeSmith>
I think it might be clear

[23:25:52.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#headings-and-sections

[23:26:00.0000] <MikeSmith>
"The first element of heading content in an element of sectioning content represents the heading for that section."

[23:26:10.0000] <MikeSmith>
oh no sorry

[23:26:11.0000] <MikeSmith>
not that

[23:26:18.0000] <Hixie>
right that's just saying the hgroup is the heading

[23:26:40.0000] <MikeSmith>
yup

[23:27:02.0000] <JonathanNeal>
rah rah <hgroup> poorly thought out rah rah <subline> solves all problems rah rah rahn paul rah

[23:31:23.0000] <JonathanNeal>
rah rah clear up :heading(n) confusion, reduce ambiguity of headings, spend more time solving issue of multiple subheadings of different weights.

[23:32:32.0000] <Hixie>
(in other news, i hate document.domain)

[23:36:03.0000] <MikeSmith>
Hixie: recent changes and subsequent bz bugs?

[23:36:16.0000] <Hixie>
everything around the effective script origin crap

[23:36:25.0000] <Hixie>
worst security design ever

[23:51:26.0000] <Hixie>
someone really should review the HTML spec's security stuff, I'm sure I have all kinds of bugs where I talk about the origin (should it be effective origin) of scripts (first script? calling script?)

[00:00:47.0000] <pottersson>
Does anyone know where I can download a copy of the WHATWG spec for HTML5?

[00:02:31.0000] <Hixie>
wow, he didn't stick around long

[00:06:01.0000] <zcorpan>
annevk: do you know what ie does with % in host?

[00:07:33.0000] <Hixie>
zcorpan: any idea where sigbjoern got the idea of commas in CORE-35269?

[00:08:36.0000] <Hixie>
zcorpan: it seems to contradict the data in https://www.w3.org/Bugs/Public/show_bug.cgi?id=18228

[00:11:58.0000] <zcorpan>
Hixie: i guess he looked at the URL in the bug, saw that it worked in firefox and webkit but not in opera, didn't test IE and didn't research other content

[00:12:11.0000] <Hixie>
the url doesn't use a comma

[00:12:23.0000] <Hixie>
and never did, per the comments

[00:12:58.0000] <zcorpan>
CORE-40846 does though

[00:14:03.0000] <Hixie>
i can't get to that url

[00:14:41.0000] <Hixie>
so can't check

[00:15:24.0000] <zcorpan>
url for that is https://bespin.mozillalabs.com/

[00:15:35.0000] <zcorpan>
http://code.google.com/codesearch#search/&q=%3Cmeta%5Cs%2Bhttp%5C-equiv%5C=%5C%22refresh%5C%22%5Cs%2Bcontent%5C=%5C%22%5Cd%2B%5C,&type=cs

[00:17:05.0000] <Hixie>
zcorpan: right, that url doesn't work for me

[00:17:26.0000] <zcorpan>
ah.

[00:18:32.0000] <zcorpan>
i don't have a login either

[00:19:10.0000] <Hixie>
that second link is good though, i've reopened the bug for it

[00:21:31.0000] <Hixie>
ok, bed time. nn.

[00:23:59.0000] <zcorpan>
nn

[00:43:24.0000] <zcorpan>
i guess the html spec is full of things that can be changed to webidl enums

[00:45:31.0000] <Ms2ger>
There are a number in canvas, at least

[01:08:49.0000] <MikeSmith>
so http://qa-dev.w3.org:8888/ no has an experimental "Show outline" feature

[01:09:17.0000] <MikeSmith>
implemented in JavaScript, using h5o

[01:10:15.0000] <MikeSmith>
so you can do, e.g., http://qa-dev.w3.org:8888/?doc=http://quirks.spec.whatwg.org/&showoutline=yes

[01:10:51.0000] <MikeSmith>
or http://qa-dev.w3.org:8888/?doc=http://quirks.spec.whatwg.org/&showoutline=yes#outline to go straight to the outline

[01:19:45.0000] <MikeSmith>
and a separate feature at http://qa-dev.w3.org:8888/outline/?doc=http://quirks.spec.whatwg.org/ that generates the outline on the server side

[01:21:10.0000] <zcorpan>
MikeSmith: why isn't the server-side thing used for the validator?

[01:22:09.0000] <zcorpan>
MikeSmith: can you flip the order of the outline and source checkboxes so they match the output?

[01:23:31.0000] <MikeSmith>
yeah can flip that

[01:24:14.0000] <MikeSmith>
and the I'm not using the server-side one directly yet is that it's harder to integrate on the server side

[01:24:37.0000] <zcorpan>
ok

[01:24:43.0000] <zcorpan>
looks nice!

[01:25:05.0000] <MikeSmith>
thanks

[01:25:22.0000] <MikeSmith>
also I'm more suspicious of the server-side code

[01:25:26.0000] <MikeSmith>
I didn't write it

[01:25:30.0000] <MikeSmith>
well, not most of it

[01:25:55.0000] <MikeSmith>
but I may have already spent more time rewriting it than it would have taken me to write it myself from scratch

[01:30:38.0000] <jgraham>
"01:36 < MikeSmith> Hixie: recent changes and subsequent bz bugs?" - I literally have no idea if that's bz as-in "Bugzilla" or "Boris"

[01:31:34.0000] <abarth>
Hixie: I think ascii, but you should check

[01:35:26.0000] <zcorpan>
jgraham: i haven't seen bugzilla abbreviated to bz

[01:46:52.0000] <jgraham>
zcorpan: They talk about the bzapi

[01:47:06.0000] <jgraham>
Which I don't think is for controlling Boris

[01:47:09.0000] <zcorpan>
oh

[01:47:39.0000] <zcorpan>
well you never know. I'm not convinced Boris is human.

[01:47:58.0000] <jgraham>
Indeed

[01:50:47.0000] <Ms2ger>
/me denies everything

[01:55:21.0000] <jgraham>
In unrelated news, tobie added something to testharness.js that required the use of ancestorOrigins in WebKit to avoid meaningless console spam. I don't think "happy with it" is quite accurate; it was horrible to have to make this workaround and the API wasn't a great fit. (See https://github.com/w3c/testharness.js/commit/e1918cae6e743247ad58842aae58196b229101c6#L0R2029 )

[01:57:23.0000] <annevk>
zcorpan: no

[02:01:58.0000] <zcorpan>
if ancestorOrigins exists because webkit doesn't throw on cross-origin access, i see little reason for other browsers to implement it

[02:04:04.0000] <odinho>
jgraham: All that strange code was added to testharness, -- is there some timeout where we can remove it again if it's not being used for these hypotetichal web services that'll gather results?

[02:19:03.0000] <jgraham>
I thought there was some use case that wasn't tied to the deficiencies of WebKit

[02:21:25.0000] <zcorpan>
there are use cases for getting your origin, but that's addressed by http://url.spec.whatwg.org/#dom-url-origin AFAICT

[02:22:25.0000] <zcorpan>
if there's a use case for knowing that you're in a cross-origin sandbox, i've probably missed it

[02:39:24.0000] <MikeSmith>
me sees lots of heycam|away code arriving for style@scoped

[02:40:00.0000] <MikeSmith>
https://bugzilla.mozilla.org/show_bug.cgi?id=508725#attachment_table

[02:47:46.0000] <jgraham>
zcorpan: I think the use case was something like widgets wanting to behave differently in same-origin vs different origin cases?

[02:48:10.0000] <jgraham>
In unrelated news, it seems that the postMessage change to testharness.js broke stuff

[02:49:56.0000] <zcorpan>
heycam|away: ideas for tests: style scoped as root element, style scoped with svg parent, in head, as child of the root, in quirks mode, changing scopedness and textContent in a timeout (not sure if onload happens after layout)

[02:50:27.0000] <zcorpan>
heycam|away: check CSSOM stuff together with scoped

[02:51:47.0000] <zcorpan>
heycam|away: interaction with !important

[02:52:06.0000] <zcorpan>
oh there were a couple of tests with !important

[02:54:00.0000] <darobin>
jgraham: you mean tobie's patch?

[02:54:00.0000] <zcorpan>
heycam|away: moving a style scoped element to another document

[02:54:09.0000] <jgraham>
darobin: Yes

[02:55:05.0000] <jgraham>
In particular tests that postMessage results from one frame/window to another will now get confused by extra messages coming from the harness

[02:55:56.0000] <jgraham>
As I said on #testing, I think the right solution is probably just not to postMessage on the document with testharness included but only on ancestors

[02:58:22.0000] <annevk>
I guess today I should tackle percent-encoded bytes :/

[03:00:34.0000] <darobin>
jgraham: mmmm, I reckon that actually makes sense yes

[03:07:43.0000] <zcorpan>
annevk: option 1 without the weirdness seems like the least insane option, though i'd be happy with 2

[03:08:30.0000] <annevk>
zcorpan: I think we need 2, and that means either deferring to Unicode for valid utf-8 sequence or defining it in Encoding (either way is pretty simple though)

[03:08:51.0000] <zcorpan>
annevk: ok

[03:09:15.0000] <zcorpan>
annevk: why do we need 2?

[03:09:22.0000] <annevk>
zcorpan: in particular 2 is likely needed for UI anyway, and if we need it there we might as well use it for a slightly better result

[03:09:48.0000] <zcorpan>
ok

[03:11:05.0000] <zcorpan>
annevk: isn't valid utf-8 sequence implicitly defined in Encoding as part of the decode algorithm?

[03:11:07.0000] <annevk>
although I guess the result is not that much better... if you really tried to put bytes higher than 0x7F over DNS you could not use this system anyway

[03:11:32.0000] <annevk>
zcorpan: yeah it is

[03:11:56.0000] <annevk>
zcorpan: seems nicer to give something to pattern match against though, but maybe you'd use the decoder for that anyway

[03:12:31.0000] <annevk>
maybe I should go with what Chrome has first and see if people complain...

[04:01:40.0000] <SimonSapin>
was colspan="0" removed in html?

[04:03:25.0000] <annevk>
"For the purposes of the CSS table model, the colspan and rowspan attributes on td and th elements are expected to provide the special knowledge regarding cells spanning rows and columns."

[04:04:28.0000] <annevk>
SimonSapin: and within the HTML table model it seems 0 and 1 are equivalent

[04:05:09.0000] <zcorpan>
i thought 0 was supported in one of rowspan or colspan

[04:06:32.0000] <annevk>
SimonSapin: oh, and it must be non-zero as conformance requirement

[04:06:38.0000] <annevk>
zcorpan: prolly rowspan then

[04:09:04.0000] <odinho>
I remember hearing implementations differ on it :-)

[04:10:04.0000] <zcorpan>
yeah. and gecko does (or did?) different things in quirks and non-quirks, iirc

[04:21:12.0000] <SimonSapin>
MDN documents colspan=0 as "extends until the end of the <colgroup>"

[04:22:09.0000] <SimonSapin>
which is the definition in html4

[04:22:38.0000] <SimonSapin>
(and is also what I want to do)

[04:22:54.0000] <annevk>
SimonSapin: what do implementations do?

[04:23:05.0000] <SimonSapin>
don’t know

[04:23:15.0000] <SimonSapin>
let me try

[04:24:12.0000] <SimonSapin>
0 is the same as 1 in Opera and Chromium; as in HTML4 in Firefox

[04:25:47.0000] <annevk>
and IE?

[04:26:00.0000] <SimonSapin>
I don’t have it available right now

[04:26:41.0000] <annevk>
be sure to test soon, HTML WG might declare consensus based on Opera/Chromium

[04:26:48.0000] <annevk>
and then... well nothing really

[04:27:14.0000] <annevk>
it's not like previous W3C RECs withstood the test of time

[04:28:59.0000] <annevk>
I kinda wish IDL had a participate box

[04:30:32.0000] <SimonSapin>
Here is a test case, if someone wants to test in IE : http://dabblet.com/gist/4117646

[04:50:42.0000] <annevk>
SimonSapin: IE9 I get the same as in Opera

[04:50:53.0000] <annevk>
SimonSapin: using http://netrenderer.com/ anyway

[04:54:47.0000] <SimonSapin>
annevk: treating colspan="0" like 1 is what is specified in HTML now, so no problem here

[04:55:06.0000] <SimonSapin>
But I’d still like to achieve the functionality

[04:55:40.0000] <SimonSapin>
huge values like colspan="999999" are to be ignored sometimes, colspan="99" seems to be ok

[04:56:10.0000] <Ms2ger>
I believe anything over a thousand or so is set to 1

[04:56:23.0000] <SimonSapin>
apparently

[04:57:04.0000] <annevk>
SimonSapin: do you want this for hand authoring tables?

[04:57:18.0000] <SimonSapin>
yes

[04:57:49.0000] <annevk>
http://encoding.spec.whatwg.org/#concept-encoding-get uses rowspan, but it's just computed in Python

[04:57:59.0000] <annevk>
I guess it would be kinda nice if I didn't have to do that

[04:58:11.0000] <SimonSapin>
I know the table currently has 5 columns so I can use colspan="5", but it’s been 4 and then 6 in the past hour before I changed my mind

[04:59:42.0000] <SimonSapin>
rowspan="0" is still supported

[04:59:45.0000] <SimonSapin>
at least in the spec

[05:00:04.0000] <annevk>
does that do what I need?

[05:00:10.0000] <SimonSapin>
yes

[05:00:12.0000] <annevk>
oh

[05:00:15.0000] <annevk>
:)

[05:00:47.0000] <annevk>
well maybe I'll replace that len(...) with 0 at some point

[05:01:16.0000] <SimonSapin>
and add some <tbody>s

[05:01:27.0000] <annevk>
oh you need <tbody>?

[05:01:34.0000] <annevk>
it uses <tbody> already for something

[05:02:29.0000] <SimonSapin>
"if its value is set to 0, it extends until the end of the table section (<thead>, <tbody>, <tfoot>, even if implicitly defined), that the cell belongs to."

[05:02:51.0000] <annevk>
ah so it wouldn't work

[05:09:47.0000] <marcosc_>
does anyone know if there is any practical difference between HTML's algorithm for parsing floats and ECMAScript's parseFloat()?

[05:13:11.0000] <jgraham>
Don't they disagree about scientific notation?

[05:13:19.0000] <jgraham>
1.2e7 and so on?

[05:13:23.0000] <jgraham>
/me didn't check

[05:18:08.0000] <marcosc_>
jgraham: yeah, that's what I'm wondering... but for most common cases I guess they are functionally the same (i.e., for parsing the value some attribute)

[05:26:53.0000] <Ms2ger>
marcosc_, yep, agree in the common case and disagree if you try

[05:29:55.0000] <marcosc_>
/me lazy, just wants to use parseFloat() for prototyping in a small parser 

[05:30:46.0000] <darobin>
marcosc_: don't be a baby and go write a JS version of the HTML5 algo

[05:31:01.0000] <darobin>
then we can run coverage tools on that to see if we're testing it properly ;)

[05:31:16.0000] <marcosc_>
tools. will. save.

[05:31:30.0000] <annevk>
wasn't it the case that implementations used the JS algo?

[05:31:37.0000] <annevk>
/me forgot the details

[05:32:06.0000] <Ms2ger>
No

[05:38:36.0000] <annevk>
Ms2ger: what was the thing AryehGregor pointed out then?

[05:38:51.0000] <annevk>
Ms2ger: had something to do with number parsing too I believe

[05:39:13.0000] <Ms2ger>
Hmm? I think Aryeh suggested changing spec and implementations to use the JS algorithm instead

[05:39:44.0000] <annevk>
there were at least some implementations on his side

[05:39:48.0000] <annevk>
iirc

[05:39:55.0000] <Ms2ger>
Hmm

[05:40:03.0000] <marcosc_>
would be nice to have a single algo instead of two

[05:40:05.0000] <Ms2ger>
Was that about negative zero, maybe?

[05:40:22.0000] <annevk>
maybe it was floating point precision?

[05:40:45.0000] <annevk>
ooh, and maybe JS whitespace versus HTML whitespace

[05:40:49.0000] <annevk>
stuff like that

[05:41:28.0000] <marcosc_>
/me checks if he implemented the JS one

[05:42:07.0000] <marcosc_>
hmm... nope

[05:54:49.0000] <annevk>
heh

[05:55:03.0000] <annevk>
open DragonFly, > document.location.host="x"

[05:55:09.0000] <annevk>
hit cmd+back

[05:55:12.0000] <annevk>
crash

[05:56:07.0000] <annevk>
in Chrome if you do that a few times you end up at data:text/html,chromewebdata

[05:56:10.0000] <annevk>
Gecko just throws

[05:56:16.0000] <annevk>
Film at 11?

[05:56:48.0000] <annevk>
maybe there's something to be said for making Location members both Unforgeable and readonly

[06:11:37.0000] <marcosc_>
Hixie: I think there might be a mistake in the img@srcset parsing algorithm. In the "Descriptor parser:", where it says "If width is *not* absent, then let error be yes". But if a value is not absent and is valid, then it's not in error. When I follow the algorithm, I can't build the entry list with valid candidate entries. Note this also applies to height, and density. Or am I missing something?

[06:14:56.0000] <annevk>
width can only be not absent at that point if it's double

[06:15:01.0000] <annevk>
duplicated*

[06:15:44.0000] <annevk>
marcosc_: so you're missing something I think

[06:21:48.0000] <marcosc_>
annevk: to me that reads "if the width exists, then error = yes "

[06:22:06.0000] <annevk>
marcosc_: you're not reading it correctly then

[06:22:42.0000] <annevk>
marcosc_: it explicitly says to split the list on spaces, then to set various variables, including width to absent

[06:22:49.0000] <annevk>
marcosc_: then it says to process what you just split

[06:23:05.0000] <annevk>
marcosc_: if you start with the first token in what you just split, width is obviously still absent

[06:23:11.0000] <annevk>
marcosc_: simple English...

[06:24:04.0000] <marcosc_>
if it was simple English, we would not be having this discussion (i.e., please refrain from passably insulting me :) )

[06:24:31.0000] <annevk>
I'm saying it simple English because people have a tendency to read stuff into specifications that are not there

[06:24:47.0000] <marcosc_>
annevk: let me show you a 1 to 1 with code

[06:26:27.0000] <marcosc_>
annevk: https://github.com/ResponsiveImagesCG/picture-refimp/blob/master/srcsetfill.js#L369

[06:27:38.0000] <annevk>
yeah you're code is not doing what the English says

[06:27:51.0000] <annevk>
you need if(!width) error = 'yes';

[06:28:03.0000] <annevk>
or if (width == undefined) if you want to be more careful

[06:28:20.0000] <annevk>
your code, oh god

[06:28:27.0000] <marcosc_>
what's wrong with it?

[06:28:42.0000] <annevk>
I just told you?

[06:28:54.0000] <marcosc_>
right, but then you said "oh god"

[06:29:06.0000] <annevk>
because I made a typo

[06:29:23.0000] <annevk>
in spelling "your"

[06:32:34.0000] <annevk>
marcosc_: code looks well documented :)

[06:33:58.0000] <marcosc_>
annevk: I tried to keep the code 1.1 with the spec

[06:35:55.0000] <marcosc_>
annevk: but yes, I f'ed up it seems by using undefined instead of "absent"

[06:36:16.0000] <annevk>
euh no

[06:36:30.0000] <annevk>
using undefined is fine, you just didn't check for it

[06:50:10.0000] <zcorpan>
marcosc_: typo? ulr: rawCandidates[i].url,

[06:50:33.0000] <marcosc_>
zcorpan: thanks

[06:50:55.0000] <marcosc_>
/me debugging at the moment, first time I've managed to run the code 

[06:52:31.0000] <zcorpan>
marcosc_: i hear from people who know js better than me that delete should be avoided

[06:53:05.0000] <marcosc_>
zcorpan: what's a good alternative?

[06:53:15.0000] <marcosc_>
just copy into new array?

[06:53:54.0000] <zewt>
github's javascript syntax coloring is the worst

[06:54:02.0000] <zewt>
grey on white is not okay

[06:54:44.0000] <marcosc_>
zewt: yeah, agree

[06:54:50.0000] <zewt>
zcorpan: well, presumably only if it's a hot code path; if not, that seems like premature optimization

[06:56:35.0000] <jgraham>
Right, I think I might make candidates a map and have a bool indicating whether it should be considered or not, but that might not be better

[06:56:45.0000] <zewt>
(not necessarily in the "making code more complicated by optimizing it" sense, but in the "thinking about performance in places where it doesn't matter" sense)

[06:57:22.0000] <jgraham>
Oh, so it is sort of a map already

[06:57:37.0000] <jgraham>
But yeah, this seems like it could be premature optimisation

[06:59:18.0000] <annevk>
marcosc_: so I would make error a boolean and use undefined or some such for the others...

[06:59:56.0000] <marcosc_>
annevk: ok, I'll add that

[06:59:58.0000] <annevk>
marcosc_: though I suppose that only matters if you want to make this a little faster

[07:00:11.0000] <zewt>
later, work

[07:00:53.0000] <marcosc_>
annevk: right now, I just want to make sure it's running as spec'ed... then I can optimize it. There is _a lot_ of redundancy in the spec (which is good for legibility and all that)

[07:00:59.0000] <annevk>
marcosc_: also, you check height after you set it...

[07:01:04.0000] <annevk>
marcosc_: which doesn't match the spec

[07:01:56.0000] <marcosc_>
annevk: you are looking at the latest version?

[07:02:15.0000] <marcosc_>
/me just checked in an update 

[07:02:40.0000] <zcorpan>
this isn't about optimization. this is about not having to worry that farre will find your code, haunt you down and kill you slower than delete is slow.

[07:03:21.0000] <marcosc_>
:)

[07:03:22.0000] <Ms2ger>
Pseudonymity is useful in such cases :)

[07:03:47.0000] <annevk>
marcosc_: yes?

[07:03:57.0000] <jgraham>
Ms2ger: He might just kill everyone that can't prove they aren't you

[07:04:08.0000] <marcosc_>
that makes sense, I don't want to die.

[07:04:16.0000] <marcosc_>
annevk, ok, fixing

[07:04:18.0000] <annevk>
marcosc_: unless your latest commit is not "fixed typo and bug" and you fixed that

[07:04:27.0000] <Ms2ger>
jgraham, I'd just ask him if he can prove he isn't me :)

[07:06:38.0000] <marcosc_>
annevk: thanks, well spotted.

[07:07:15.0000] <jgraham>
Ms2ger: Well now he has a good way to tell if it is you or not

[07:07:42.0000] <Ms2ger>
So if he wouldn't ask himself... I give up

[07:19:33.0000] <Ms2ger>
Is http://dev.w3.org/html5/webvtt/ the canonical?

[07:21:42.0000] <annevk>
think so

[07:58:23.0000] <annevk>
http://annevankesteren.nl/2012/11/github-whatwg

[07:58:27.0000] <annevk>
wasn't quite sure what else to write down

[07:59:09.0000] <annevk>
in the process of writing that I found http://annevankesteren.nl/2004/11/whatwg-is-alive again which is kinda amusing

[07:59:36.0000] <annevk>
"There could be a place for what you call HTML 5.0 but it needs to be submitted to a standards body and approved by them once it is finished before we can start using it."

[07:59:45.0000] <marcosc_>
annevk: are you allowing people to file bugs on GH?

[07:59:55.0000] <marcosc_>
(i see that is currently enabled)

[08:00:13.0000] <annevk>
marcosc_: it's only enabled for whatwg/javascript I think

[08:00:38.0000] <marcosc_>
annevk: https://github.com/whatwg/xref/issues

[08:01:04.0000] <darobin>
"you can't rely on HTML alone these days"

[08:01:54.0000] <darobin>
shorter annevk: "in the Netherlands, we don't need your stinky document conformance criteria"

[08:02:23.0000] <marcosc_>
"Pardon me for not seeing the point of HTML5.0. I see XHTML as the rightful heir of HTML."

[08:02:28.0000] <marcosc_>
heh

[08:03:37.0000] <annevk>
marcosc_: I guess I haven't disabled it for that one, but that should prolly stay there as there's no alternative

[08:03:43.0000] <annevk>
marcosc_: though I'll close the wiki, thanks

[08:03:47.0000] <jgraham>
In related news, I see myself as the rightful heir of Arthur, legendary king of England

[08:05:16.0000] <darobin>
annevk: reckon HTML might move to GH at some point?

[08:05:35.0000] <annevk>
darobin: my magic eight ball says no

[08:05:44.0000] <jgraham>
darobin: Good luck convincing Hixie of that

[08:05:59.0000] <darobin>
oh, I wasn't planning on trying to convince anyone — just curious

[08:06:15.0000] <annevk>
darobin: only thing I considered was setting up a mirror, but wasn't sure what the use would be

[08:06:18.0000] <darobin>
the W3C repo has a git-happy copy anyway

[08:06:41.0000] <darobin>
annevk: a copy would only make sense if you plan on taking pull requests there

[08:06:49.0000] <darobin>
and I'm guessing that's not really the spirit

[08:07:46.0000] <annevk>
darobin: it is the spirit for many of the stuff WHATWG writes these days, but Hixie has a different preference

[08:08:12.0000] <darobin>
I know, I know, as I said I was just curious

[08:09:17.0000] <annevk>
fair enough, I thought of actually mentioning it in the blog post, but explaining that took too much text, but now I wrote all these lines maybe I should have done it :)

[08:11:04.0000] <darobin>
hahaha

[08:16:35.0000] <annevk>
darobin: so https://github.com/w3c/html/commits/feature/whatwg is your WHATWG copy right?

[08:17:24.0000] <annevk>
seems to match the commits in any case

[08:21:25.0000] <darobin>
annevk: yeah, that should be it

[08:21:40.0000] <darobin>
there are further branches that are subsets of that

[08:22:03.0000] <darobin>
I don't know how often it's updated, I think hourly or so

[08:22:09.0000] <darobin>
at any rate it's never far behind

[09:10:30.0000] <TabAtkins>
heycam|away: Re <style scoped>, the effects on the cascade are now well-defined in the Cascade spec.  Please either match it or file bugs on us with arguments to change. ^_^

[09:23:47.0000] <GPHemsley>
Argh, Apache. Why you gotta be so frustrating?

[09:29:53.0000] <GPHemsley>
There is apparently no way to turn off Apache's type-detection-by-file-extension behavior.

[09:30:18.0000] <GPHemsley>
oh! maybe I spoke right too soon!

[09:32:44.0000] <GPHemsley>
ahh... :)

[09:32:49.0000] <GPHemsley>
so simple: RemoveType

[09:32:59.0000] <GPHemsley>
(but off in another part of the docs)

[09:34:46.0000] <annevk>
don't use a file extension?

[09:35:58.0000] <GPHemsley>
annevk: I'm testing whether browsers assume anything from it.

[09:38:33.0000] <matjas>
annevk: can haz link to the javascript spec on http://www.whatwg.org/specs/?

[09:39:01.0000] <annevk>
matjas: Hixie can arrange that

[09:42:30.0000] <GPHemsley>
oh, hmm...

[09:42:38.0000] <GPHemsley>
I'm realizing now that I'm not testing any mismatches

[09:43:51.0000] <_divya>
matjas: are you an editor these days?!

[09:44:38.0000] <annevk>
_divya: uhuh, when do you start?

[09:44:48.0000] <matjas>
_divya: i’ve been working on that spec occasionally since August or so

[09:45:05.0000] <matjas>
_divya: anyone can become an editor! http://annevankesteren.nl/2012/11/github-whatwg :)

[09:45:18.0000] <_divya>
annevk: i only gossip about specs.

[09:45:28.0000] <_divya>
who wants to do the hard work

[09:45:50.0000] <matjas>
haha

[09:45:50.0000] <_divya>
matjas: very nice!! I want to say congratulations but unsure of what the official stance of whatwg/w3c is

[09:45:52.0000] <annevk>
heh, I wish we had weekly gossip magazines about specs, that'd be great

[09:46:01.0000] <_divya>
isnt that w3cmemes annevk?

[09:46:05.0000] <annevk>
only @mattur is left I think

[09:46:08.0000] <_divya>
ahahaha

[09:46:09.0000] <_divya>
yes

[09:46:10.0000] <annevk>
ah yeah @w3cmemes is there

[09:46:13.0000] <_divya>
and steve faulkner

[09:46:29.0000] <annevk>
no more mr last week

[09:46:37.0000] <_divya>
that was a bit weird

[09:47:20.0000] <annevk>
and there's the occasional culture clash

[10:42:36.0000] <annevk>
TabAtkins: I think TC39 reads public-script-coord, but we'll see

[10:42:38.0000] <[tm]>
speaking of culture clashes, i normally disagree with pretty much everything Great Leader Roy says, but in pretty much every discussion about DNT, dude is speaking the gospel truth

[10:42:46.0000] <annevk>
TabAtkins: that was sort of my idea behind posting it there

[10:43:04.0000] <[tm]>
e.g., http://lists.w3.org/Archives/Public/public-tracking/2012Nov/0290.html

[10:44:39.0000] <Ms2ger>
[tm], damn gray, black&white is much easier

[10:45:14.0000] <[tm]>
Heh

[10:45:28.0000] <[tm]>
yeah

[10:47:07.0000] <TabAtkins>
annevk: kk

[10:48:07.0000] <TabAtkins>
annevk: Alex Russell makes the point that we might not need to really do the stringifying eagerly in this case - we can wait and do it upon requesting things instead.  Thoughts?

[10:48:31.0000] <TabAtkins>
(This isn't a general argument - there are definitely cases where you need the values to be eagerly checked/converted.)

[10:48:43.0000] <annevk>
that doesn't work, you directly manipulate the URL

[10:48:56.0000] <TabAtkins>
Ah, yeah.

[10:49:03.0000] <annevk>
and even if you did set a string, it needs to be further converted

[10:49:15.0000] <TabAtkins>
Okay, that's what I thought.

[10:49:19.0000] <annevk>
e.g. lone surrogates need to be replaced with U+FFFD, "&" needs to be escaped, etc.

[10:49:37.0000] <TabAtkins>
Cool, thanks, I'll argue appropriately.

[11:00:19.0000] <annevk>
TabAtkins: seems you might also have to argue with TC39

[11:00:58.0000] <annevk>
TabAtkins: also, I'm not sure I want to wait for ES7 before getting this in browsers; I was actually hoping to have this specced within one or two months

[11:04:00.0000] <TabAtkins>
annevk: Yes, I'm willing to do that arguing.  And also to get this resolved in a short period of time.  ^_^

[11:04:12.0000] <annevk>
cool

[11:04:40.0000] <annevk>
I guess my writing won't be impacted by much of it, I'll just keep in mind it needs to tie into something at some point

[11:04:50.0000] <Velmont>
Upgrading my Piwik. Find it funny that a new fix disables DNT header and still tracks, if the user agent shows that it's IE10. Because they set DNT on to standard, Piwik won't respect it :-)

[11:05:36.0000] <annevk>
Apache did that too, I think that's one of the bad things Roy did <- [tm]

[11:06:07.0000] <Velmont>
Nah, I think Microsoft was totally in the wrong.

[11:06:21.0000] <Velmont>
How would it even be useful when it's on by default?

[11:06:51.0000] <Velmont>
Then you don't actually get only the crazies that care about it, -- but even your father and everyone else who doesn't really care.

[11:22:22.0000] <annevk>
huh? nobody wants to be tracked

[11:28:54.0000] <Velmont>
annevk: you crazy :D

[11:34:30.0000] <annevk>
I think I might be

[11:34:49.0000] <annevk>
I somehow ended up on http://www.koalastothemax.com/ and moved the mouse around until I saw a dog, then reloaded and did it again, only to see an owl

[11:35:17.0000] <TabAtkins>
That's the best site.

[11:51:34.0000] <annevk>
Hixie: btw, these longer diff lines suck on the iPhone

[11:51:50.0000] <annevk>
Hixie: but maybe not on the iPhone 5... hmm

[11:57:53.0000] <Hixie>
annevk: dude, who reads diffs on a phone -_-

[11:58:43.0000] <annevk>
Hixie: who edits the HTML spec with the ultimate goal of controlling his model train set?

[12:04:42.0000] <Hixie>
annevk: details

[12:10:27.0000] <annevk>
btw, I finally found where that " " makes the host invalid comes from: http://tools.ietf.org/html/rfc3454#appendix-C

[12:10:47.0000] <annevk>
of course, per IDNA2008 that's no longer used

[12:20:28.0000] <gsnedders>
Hixie: Has your train set got out of a box yet?

[12:21:01.0000] <gsnedders>
Or are you still working on the HTML side of things in the first instance? :)

[12:32:22.0000] <Hixie>
"train set"

[14:10:54.0000] <heycam>
TabAtkins, thanks for the pointer to css3-cascade. I think my patches do match what you've got in there.

[14:11:24.0000] <TabAtkins>
heycam: Cool.


2012-11-21
[18:09:00.0000] <TabAtkins>
Hixie: You tried to send the email to anne's old address.

[19:11:15.0000] <Hixie>
TabAtkins: d'oh

[00:11:01.0000] <odinho>
MikeSmith: Yo! :D Sorry to jump on you, but it'd be ace to have everything (PHP) in  http://w3c-test.org/webappsec/tests/cors/submitted/opera/staging/resources/  reviewed.

[00:11:25.0000] <MikeSmith>
odinho: looking now

[00:11:51.0000] <odinho>
I'm also going to move stuff some more later sadly. To the approved folder hopefully soon, but people in webappsec are worried about all the failures :P (but they don't know the reason)

[00:12:02.0000] <MikeSmith>
heh

[00:13:31.0000] <odinho>
MikeSmith: Preemtive thanks :D  (afk 1h now)

[00:13:45.0000] <MikeSmith>
hai

[00:56:51.0000] <asmodai>
Why do so many website designers suck at making their login forms support auto-fill in?

[00:58:42.0000] <odinho>
...? I haven't had that problem. Maybe the implementation of your browser isn't as magical as it could be? :P

[01:04:14.0000] <asmodai>
odinho: Haha, well, Chrome is generally pretty decent in that regard. :)

[01:05:31.0000] <asmodai>
But I do encounter quite a few sites that fail, station.sony.com is a good one

[01:10:54.0000] <odinho>
asmodai: Oh my... Stupid Sony-site says INCOMPATIBLE BROWSER when I go to the log in-page with Opera.

[01:11:12.0000] <odinho>
They definately suck.

[01:11:33.0000] <asmodai>
odinho: haha, see?!

[01:11:35.0000] <asmodai>
:D

[01:12:15.0000] <odinho>
asmodai: But Opera does save the password for it at least (when I got away the warning).

[01:12:24.0000] <jgraham>
odinho: File a bug? Well I expect there already is one, but at least check

[01:13:07.0000] <asmodai>
odinho: I go through planetside2.com to https://auth.station.sony.com/login?theme=ps2&locale=en_US&service=http%3A%2F%2Fwww.planetside2.com%2Fj_acegi_cas_security_check

[01:13:27.0000] <asmodai>
and that login section on the right hand side never saves the login info for Chrome

[01:13:41.0000] <asmodai>
Opera did work for that, you say?

[01:13:41.0000] <odinho>
Funny thing is that they have  background: url(some-file.gif) transparent;   on that box. And some-file is 404. ... So, result? Gray text against a gray faded background, damn hard to read.

[01:14:26.0000] <odinho>
asmodai: Yep, it saves it.

[01:14:34.0000] <odinho>
asmodai: Even from planetside.

[01:14:50.0000] <asmodai>
Then I wonder just wtf Chrome isn't picking up on it

[01:15:10.0000] <odinho>
Anywayz, I have a question MikeSmith, I can't for the life of me understand how the PHP-files behave on w3c-test.org. Is there some sort of CORS-apache config thing going on?

[01:15:28.0000] <odinho>
MikeSmith: curl -i -X OPTIONS -H "Origin: http://test.com" -H "Access-Control-RequesMethod: GET" "http://w3c-test.org/webappsec/tests/cors/submitted/opera/staging/resources/preflight.php?ident=test"

[01:16:54.0000] <odinho>
MikeSmith: It doesn't like getting the OPTIONS header. It just instantly replies with "Allow: OPTIONS,GET,HEAD,POST" -- which is not valid (it should be Access-Control-Allow-Methods), and not something I remember writing :-)

[01:17:13.0000] <MikeSmith>
no idea man

[01:17:25.0000] <MikeSmith>
I am PHP-averse

[01:18:06.0000] <odinho>
Hmm. Looks to be something apache does :-) At least it doesn't happen on Opera Apache (our test server), nor my local nginx. And I'm sure I didn't ever write that line.

[01:18:12.0000] <MikeSmith>
I had my fill of PHP this year when plh made me work on adding features to the CSS test-framework UI code

[01:18:19.0000] <odinho>
MikeSmith: Is there shell accounts I can use to muck around?

[01:18:35.0000] <MikeSmith>
ok if it's an Apache thing I can work on fixing it

[01:18:43.0000] <MikeSmith>
odinho: no there are not shell accounts

[01:18:48.0000] <odinho>
MikeSmith: I suspect the server setup though... But you never know with PHP. :P

[01:19:03.0000] <MikeSmith>
that machine is behind a W3C-internal firewall

[01:19:36.0000] <MikeSmith>
if it's an Apache-only problem I'm much more enthusiastic about trying to fix it

[01:20:24.0000] <MikeSmith>
i can check stuff on the server if you point me to what to check

[01:20:44.0000] <MikeSmith>
other thing is, you can write server-side code in python

[01:20:48.0000] <odinho>
Will have to do some research first. Looking at it now.

[01:20:56.0000] <odinho>
That would be nice.

[01:21:13.0000] <odinho>
But how?

[01:22:13.0000] <odinho>
MikeSmith: Ah, I'd start with  grep -R "OPTIONS" /etc/apache2/   btw. Just to see if it is defining anything.

[01:22:23.0000] <MikeSmith>
hai

[01:22:28.0000] <MikeSmith>
will try that right now

[01:23:40.0000] <MikeSmith>
$ sudo grep -R "OPTIONS" /etc/apache2/

[01:23:57.0000] <MikeSmith>
 /etc/apache2/mods-available/userdir.conf:                <Limit GET POST OPTIONS>

[01:23:58.0000] <MikeSmith>
 /etc/apache2/mods-available/userdir.conf:                <LimitExcept GET POST OPTIONS>

[01:24:04.0000] <MikeSmith>
that's all

[01:24:25.0000] <odinho>
Hmm. Okay. :-/ So not that then.

[01:27:00.0000] <odinho>
MikeSmith: Is it mod-php or fcgi or something else?

[01:27:38.0000] <MikeSmith>
umm

[01:27:39.0000] <MikeSmith>
not sure

[01:27:42.0000] <MikeSmith>
lemme check

[01:28:11.0000] <odinho>
https://issues.apache.org/bugzilla/show_bug.cgi?id=15242 << was a similar issue earlier. But that one should at least be fixed.

[01:28:38.0000] <odinho>
This patch will add "ScriptTrapOptions (on|off)" directive, which

[01:28:39.0000] <odinho>
allows user to control whether CGI script will handle OPTIONS request

[01:28:39.0000] <odinho>
or not.

[01:29:27.0000] <odinho>
Oh, that's old. They just removed the entire check, so no configuring necessary.

[01:29:46.0000] <MikeSmith>
I see a mods-enabled/php5_cgi.conf

[01:30:00.0000] <MikeSmith>
and a mods-enabled/php5filter.conf too

[01:30:19.0000] <odinho>
oh, filter, that sounds bad :P *googling*

[01:31:50.0000] <odinho>
Nah, doesnt' seem that related on first look :]

[01:32:57.0000] <odinho>
Might be some PHP problems anyway then. Because it doesn't reply about any allowance when I use it for other files.

[01:33:23.0000] <odinho>
But those files won't go through the apache php configuration machinery either, so...

[01:35:15.0000] <darobin>
mmmmm

[01:35:22.0000] <darobin>
can you turn on NPH for PHP?

[01:35:46.0000] <darobin>
I'm having dim memories resurfacing from the Good Old Days of CGI

[01:38:29.0000] <MikeSmith>
2012-11-21 02:10:10.745:WARN::/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/%uff0e%uff0e/etc/passwd: java.lang.NumberFormatException: uf

[01:38:55.0000] <annevk>
TabAtkins: Hixie: didn't get an email other than public stuff...

[01:42:57.0000] <odinho>
darobin: Never knew of this estoric NPH stuff. But seems some people last talked about it in 2004. And I think W3C would have to use a real, old CGI for PHP with Apache. And I guess noone does that (?)

[01:43:58.0000] <darobin>
odinho: NPH was all the rage back when it was the only way of implementing some neat tricks ;) but yeah, I can't dig up anything useful that's recent

[01:44:22.0000] <darobin>
modern web dev stuff should normally be able to handle anything without that

[01:45:05.0000] <odinho>
Yeah, -- but you see that something before my PHP script is handling this request:  curl -i -X OPTIONS -H "Origin: http://test.com" -H "Access-Control-RequesMethod: GET" "http://w3c-test.org/webappsec/tests/cors/submitted/opera/staging/resources/preflight.php?ident=test"

[01:45:27.0000] <odinho>
darobin: Testing with Opera's apache and my nginx, it does the expected thing.

[01:46:06.0000] <darobin>
maybe this could help? http://httpd.apache.org/docs/2.2/mod/mod_actions.html#script

[01:46:06.0000] <odinho>
Hmm. Since it's CORS, I could just temporarily put the PHP on my own server and update the paths were it asks for stuff. To show webappsec that the tests are working. :P

[01:46:45.0000] <odinho>
darobin: MikeSmith grepped for OPTIONS, there was nothing suspicious.

[01:48:14.0000] <darobin>
odinho: indeed, your script is never even called

[01:49:17.0000] <annevk>
isn't that because the PHP isn't vetted yet?

[01:49:31.0000] <odinho>
annevk: It is, -- if it wasn't it wouldn't show up on the server at all. :-)

[01:50:01.0000] <annevk>
odinho: oh :/

[01:51:34.0000] <darobin>
nah, the PHP replies correctly to GET, HEAD, POST

[01:52:08.0000] <darobin>
odinho: if you use a crappy method name like FOO do you get a 501 in your setups that work?

[01:52:21.0000] <darobin>
because here I get HTTP/1.1 501 Method Not Implemented

[01:52:24.0000] <darobin>
which may be a lead

[01:54:59.0000] <MikeSmith>
I have to drop off for a while

[01:55:29.0000] <MikeSmith>
but if you get it figured out I'll be back on later and can fix it on the server then

[01:58:48.0000] <odinho>
darobin: That gives me HTTP/1.1 200 OK

[01:58:53.0000] <odinho>
darobin: the "FOO"

[01:59:10.0000] <odinho>
darobin: So you're very right. We probably have some extra setup that says "send whatever through"

[01:59:11.0000] <darobin>
really? weirder and weirder!

[01:59:28.0000] <darobin>
it would be good to figure out what

[01:59:50.0000] <darobin>
alternatively, it might be that the W3C setup has a <Limit> directive of some sort

[02:01:12.0000] <odinho>
Yeah, whatever sending that 501 might very well be it. Some security/restricted setup.

[02:01:27.0000] <odinho>
Is there a proxy in front of the apache? The firewall tm mentioned?

[02:02:41.0000] <darobin>
mmmm, no, the firewall is for ssh access

[02:02:53.0000] <darobin>
I reckon there must be a LimitExcept in there

[02:02:57.0000] <darobin>
or might be

[02:03:06.0000] <darobin>
since that will return a 501 for disallowed methods

[02:03:43.0000] <odinho>
LimitExcept would've shown OPTIONS in the grep probably though. :/

[02:03:50.0000] <odinho>
Can PHP have such a stop?

[02:04:24.0000] <odinho>
( http://test.s0.no/w3c-tests/webappsec/tests/cors/submitted/opera/staging/preflight-cache.htm ) <- how it should work, green. :]

[02:05:40.0000] <odinho>
curl -i -X FOO -H "Origin: http://test.com" -H "Access-Control-Request-Method: GET" "http://test.s0.no/w3c-tests/webappsec/tests/cors/submitted/opera/staging/resources/preflight.php?ident=test"

[02:06:33.0000] <darobin>
damn, I can't seem to recall the login I'm supposed to use to access that machine :(

[02:06:44.0000] <darobin>
we'll have to wait for Mike to return I'm afraid

[02:07:12.0000] <darobin>
odinho: no, you grepped for OPTIONS. But <LimitExcept GET POST PUT> would exclude OPTIONS

[02:07:16.0000] <darobin>
and not match in grep

[02:07:42.0000] <odinho>
darobin: Ah. Yeah, that does make some sense. :-)

[02:08:15.0000] <odinho>
Hopefully it's that :D *waiting*

[02:08:43.0000] <darobin>
interesting: PUT returns 405 Method Not Allowed while FOO gives 501 Method Not Implemented

[02:19:27.0000] <[tm]>
I'll be back on in 15 minutes

[02:19:33.0000] <[tm]>
or so

[02:20:52.0000] <[tm]>
darobin: but we should try too get your ssh acceds to that server working also

[02:40:23.0000] <odinho>
annevk, abarth: Reading http://fetch.spec.whatwg.org/#resource-sharing-check -- it says Note: The above algo also functions when ascii origin == "null".  That does in fact mean a browser should allow  ACA-Origin: null  when it sent Origin: null, right?

[02:40:45.0000] <abarth>
yes

[02:40:47.0000] <odinho>
I've been double checking it too much now, and wonder why WebKit doesn't follow that. So either test is wrong, or webkit is.

[02:41:08.0000] <abarth>
its entirely possible that webkit and the spec disagree

[02:41:21.0000] <odinho>
Okay, nice.

[02:41:45.0000] <odinho>
abarth: Origin spec didn't say anything specific about that, but anne's note was at least helpful (though I didn't see it at first :P)

[02:42:01.0000] <abarth>
its a CORS issue, not an origin issue

[02:42:31.0000] <odinho>
abarth: Yea, but step 3 defers the origin spec :P  -->  If the value of Access-Control-Allow-Origin is not a case-sensitive match for the value of the Origin header as defined by its specification, return fail and terminate this algorithm.

[02:43:03.0000] <abarth>
I'd have to look into the details to give you a definitive answer

[02:44:28.0000] <odinho>
But okay, that part of the test should be correct then.  The failing vendors can (and will) probably do an extra thorough spec check, and report any test errors.

[02:44:54.0000] <odinho>
Because it LGTM :D

[02:48:09.0000] <zcorpan>
saying Access-Control-Allow-Origin: null is almost like saying Access-Control-Allow-Origin: *

[02:48:27.0000] <odinho>
zcorpan: It'll fail much more often ;-)

[02:48:30.0000] <zcorpan>
but * only works if omit credentials is set

[02:49:17.0000] <zcorpan>
odinho: but i think any origin can set up something that gets null as origin

[02:49:19.0000] <odinho>
Hmm. Doing a redirect, and getting "null" would be a possible way to walk around that credentials not allowed for *.

[02:50:17.0000] <zcorpan>
maybe null should be banned?

[02:50:55.0000] <odinho>
zcorpan: Why?

[02:52:02.0000] <zcorpan>
because it seems like a security hole

[02:52:33.0000] <odinho>
Maybe the credentials stuff. -- But how would it be a security hole if else?

[02:53:24.0000] <zcorpan>
the person who sets null might not realize that it gives access to anyone

[02:54:08.0000] <odinho>
I think noone will do that. "Only allow people who have been redirected, or people who are in a privacy sensitive area"

[02:54:50.0000] <zcorpan>
i don't follow

[02:55:09.0000] <zcorpan>
noone will use null?

[02:55:26.0000] <odinho>
It's nice because     header("aca-origin: $_SERVER[Origin]")   will actually work with redirects too then.

[02:56:25.0000] <odinho>
zcorpan: Noone will hardcode null. :-)

[02:57:17.0000] <odinho>
Either they care about who they allow (so they'll have a list), or they don't and use * or just returns whatever the client sent in Origin.

[02:57:43.0000] <zcorpan>
maybe

[02:58:00.0000] <annevk>
zcorpan: null is for credentialed search from an untrusted widget

[02:59:22.0000] <darobin>
[tm]: as far as I can tell it's looking like my public key is no longer on the test machine

[02:59:30.0000] <darobin>
at least, I can't make any other sense of the trace

[02:59:37.0000] <MikeSmith>
darobin: OK will check on that

[02:59:47.0000] <MikeSmith>
btw /etc/apache2/mods-available/userdir.conf:                <LimitExcept GET POST OPTIONS>

[03:00:19.0000] <darobin>
MikeSmith: is that the only match for LimitExcept?

[03:00:31.0000] <MikeSmith>
yeah that's the only instance of "LimitExcept" in /etc/apache2/

[03:00:41.0000] <darobin>
well, that's not it then

[03:00:51.0000] <darobin>
(unless someone had fun with a .htaccess)

[03:00:54.0000] <annevk>
but you want to nuke that too

[03:01:03.0000] <annevk>
because e.g. XHR needs far more than that

[03:01:25.0000] <annevk>
XHR needs wildcard basically

[03:01:32.0000] <darobin>
annevk: you mean the LimitExcept? it's in the userdir config, I doubt it affects anything

[03:01:43.0000] <annevk>
oh

[03:01:53.0000] <darobin>
in fact, I really hope it only affects ~user stuff — I reckon we could just disable the whole module as we're not using it

[03:04:29.0000] <annevk>
this is why I dislike Apache for testing (actually for my own site as well)

[03:04:37.0000] <annevk>
there's too much magic and taking control

[03:05:25.0000] <darobin>
yeah, I stopped using Apache, it's just too clunky

[03:06:12.0000] <darobin>
for testing stuff I really like using Node because it practically does nothing for you

[03:08:41.0000] <annevk>
yeah, in the end you just want raw byte access with maybe a few methods for convenience that output the boilerplate stuff (and even that you want to be able to mess around with, e.g. sending HTTP/2.0 or some such)

[03:31:06.0000] <jgraham>
FWIW I think we are going to need to write a server specifically for testing so that Mozilla and Google can run tests on their infrastructure

[03:31:35.0000] <jgraham>
I imagine this would have some way to allow tests to specify handlers that override specific bits of the test

[03:31:57.0000] <jgraham>
er, the response, on a per-test basis

[03:32:03.0000] <jgraham>
Or the handling in general

[03:39:35.0000] <odinho>
Yes yes yes! jgraham for president!!!111 :D

[03:42:26.0000] <darobin>
jgraham: yeah, that matches other mumbles I've heard

[04:04:57.0000] <annevk>
I thought jgraham was going to be the new King Arthur?

[04:05:07.0000] <annevk>
hmm... maybe that is the President

[04:05:35.0000] <darobin>
it's President For Life Arthur these days

[04:05:40.0000] <darobin>
/me sighs

[04:06:10.0000] <darobin>
I don't know if paving the cowpaths is the right thing to do for accessibility, but the advice for alt attributes that's in HTML5 is really not paving the cowpaths at all

[04:06:42.0000] <darobin>
as far as I can tell, using it that way is not even a minority practice

[04:07:17.0000] <annevk>
can you do time zone conversion in JavaScript easily?

[04:07:32.0000] <annevk>
volkmar: ^^

[04:08:03.0000] <annevk>
volkmar: I think selecting in local time and having it converted to UTC is useful, but if that's trivial both server and client-side...

[04:08:59.0000] <darobin>
you need a library to do that

[04:09:14.0000] <darobin>
the core Date is TZ ignorant

[04:09:17.0000] <annevk>
ew

[04:09:24.0000] <darobin>
though IIRC TC39 has been adding stuff for that

[04:09:27.0000] <annevk>
sounds like datetime-utc or datetime-global is kinda useful then

[04:09:34.0000] <darobin>
not sure what the status of that is though

[04:10:10.0000] <darobin>
anything that does the right thing with TZs is probably good, people get it wrong all the fucking time

[04:11:25.0000] <annevk>
so earlier today I wrote an IPv6 serialization algorithm in English

[04:11:31.0000] <darobin>
if we're changing the datetime names we might as well look at taking the I18N folks' feedback on them as well

[04:11:46.0000] <annevk>
this was not exactly what I had in mind when starting to work on URLs

[04:12:04.0000] <darobin>
are you surprised that it's taken you to all sorts of wrong places?

[04:13:37.0000] <annevk>
I guess I'm most annoyed with IDNA, because it seems I can't actually solve that by myself

[04:15:20.0000] <annevk>
btw, is it me or is there some productivity dip again?

[04:15:48.0000] <annevk>
like a few times a year everything gets way quieter

[04:16:05.0000] <odinho>
annevk: You should make some graphs, man.

[04:17:00.0000] <darobin>
the most avid users of alt seem to be porn sites

[04:17:19.0000] <darobin>
but remarkably they use it wrong both according to HTML5 and WCAG

[04:17:31.0000] <zcorpan>
alt="You don't want to know"

[04:18:13.0000] <darobin>
in fact given the length of their alts I get the impression that porn site really would rather use longdesc

[04:18:19.0000] <darobin>
I guess size matters to them

[04:18:30.0000] <darobin>
annevk: this is Thanksgiving week...

[04:18:51.0000] <darobin>
no one in the US is doing fuck all

[04:18:52.0000] <volkmar>
annevk: you can do .toString() and .toUTCString()

[04:19:27.0000] <volkmar>
annevk: IOW, you can know the user's time in his/her tz and the time in UTC

[04:19:34.0000] <volkmar>
no real need for any conversion I would say

[04:20:02.0000] <annevk>
volkmar: math on strings seems annoying

[04:20:54.0000] <annevk>
darobin: ah yeah, I guess they're doing something over there then after all :-)

[04:24:01.0000] <annevk>
so if you refine by date on w3.markmail.org for the last year and half or so TabAtkins turns out to be the Big Spammer

[04:24:35.0000] <annevk>
since inception though it's still Hixie followed by jreschke

[04:25:07.0000] <volkmar>
annevk: you need to parse the string on the server anyway

[04:25:28.0000] <annevk>
volkmar: why would there be a server?

[04:25:55.0000] <annevk>
volkmar: e.g. a timezone app could be pretty much client-side

[04:26:06.0000] <volkmar>
annevk: if there is no server, the Date object has everything you need

[04:26:12.0000] <volkmar>
annevk: you can get the date in UTC

[04:28:59.0000] <annevk>
hmm yeah looks like darobin was wrong

[04:29:24.0000] <annevk>
well, maybe darobin meant conversion to some other timezone

[04:29:25.0000] <darobin>
annevk: ?

[04:29:34.0000] <volkmar>
annevk: never trust French people ;)

[04:29:50.0000] <annevk>
volkmar: except when they live elsewhere?

[04:29:56.0000] <darobin>
ah, you asked about TZ conversions — not about dumping out to UTC

[04:30:02.0000] <darobin>
you can always get the UTC date :)

[04:30:14.0000] <darobin>
except when they're also Australian!

[04:30:16.0000] <volkmar>
darobin: as soon as you have the UTC date, it's quite easy to do TZ conversions

[04:30:25.0000] <darobin>
HAHAHAHAHAHAHA

[04:30:37.0000] <darobin>
look ma, the funny man over there said date handling is easy!

[04:30:45.0000] <annevk>
/me get some popcorn

[04:30:49.0000] <annevk>
gets damnit

[04:31:15.0000] <darobin>
but it's true that if all you care about is getting a UTC datetime, then you're fine

[04:31:24.0000] <annevk>
volkmar: guess I'm fine with dropping -local then

[04:31:48.0000] <volkmar>
annevk: you mean, dropping -local and have datetime returning a Date with TZ info?

[04:31:53.0000] <annevk>
yeah

[04:31:56.0000] <volkmar>
\o/

[04:32:50.0000] <annevk>
/me goes back to IPv6 serialization

[05:45:11.0000] <darobin>
Marcos for TAG!

[06:37:33.0000] <Stevef>
darobin:having look at the alt text data, is the red/italic the alt text?

[06:38:30.0000] <darobin>
Stevef: yes, sorry, should've spent a little more time polishing the explanation

[06:38:44.0000] <Stevef>
np i assumed so

[06:41:51.0000] <Stevef>
darobin: what is immedaitely obvious form smaller data set is that many many alts are duplicates of text that is contiguous with the <img>

[06:42:06.0000] <darobin>
Stevef: yes, that happens a lot

[06:42:18.0000] <darobin>
in fact it's probably relatively easy to autodetect

[06:42:29.0000] <darobin>
in all of those cases it violates both WCAG and HTML5

[06:43:09.0000] <Stevef>
yes

[06:43:15.0000] <darobin>
I guess that there could be heuristics to usefully manipulate the accessibility tree in such cases

[06:44:54.0000] <Stevef>
that would be something done on the AT side I think, for example, some AT do not announce duplicate text (via user setting)

[06:45:56.0000] <darobin>
yup yup

[06:46:27.0000] <darobin>
but the part that I'm interested in here is that I could only spot very few cases that follow the HTML5 advice, whereas a bunch more do follow WCAG

[06:48:06.0000] <Stevef>
right

[06:50:05.0000] <Stevef>
well that could be due to the fact that advice on writing alt text generally and historically comes from accessibility resources and guidelines such as WCAG, so if they do do it 'right' they are going to do it 'right' as per WCAG

[06:51:08.0000] <darobin>
Stevef: actually I think that's more deeply ingrained than that

[06:51:35.0000] <darobin>
most web devs haven't read the WCAG details, they're only going on "you should provide some description in alt"

[06:51:58.0000] <darobin>
and the reflex there seems to be "put a description of the image" not "put something that flows with the surrounding text"

[06:52:06.0000] <darobin>
it certainly matches my personal experience

[06:53:33.0000] <Stevef>
darobin: sure, but note the WCAG advice is both "put a description of the image" or "put something that flows with the surrounding text" depending on the context

[06:53:56.0000] <darobin>
yes, I know, but far less so than in HTML5

[06:54:13.0000] <darobin>
I get the impression people only use flowing when it's in a link

[06:54:19.0000] <darobin>
which seems right

[06:58:56.0000] <Stevef>
yeah

[07:25:08.0000] <Lachy>
annevk, I started migrating selectors api 2 into the DOM spec. See branch here for early draft. https://github.com/lachlanhunt/dom/tree/selectorsapi

[07:26:31.0000] <Lachy>
also, I did what jgraham said re the W3C fork and rebasing. I now have it working, so you shouldn't ever need to accept those changes I submitted yesterday. I just didn't know how to do that before.

[07:53:04.0000] <annevk>
Lachy: okay

[07:57:43.0000] <odinho>
darobin, d'ya know the ports the w3c-test.org is listening for HTTPS? (except :443)

[07:57:55.0000] <darobin>
lemme check

[07:58:33.0000] <odinho>
(I couldn't find any on http://www.w3.org/wiki/Testing/Requirements ) -- so maybe it doesn't exist.

[07:58:44.0000] <darobin>
odinho: it takes a little while for ssh to echo my chars back at me, so this could be a little slow...

[07:58:50.0000] <odinho>
Then I should really remove that test, not like I expect it to break :P

[07:58:54.0000] <odinho>
darobin: mosh, just sayin'

[07:59:43.0000] <darobin>
yeah, I been meaning to try that for a while

[07:59:52.0000] <darobin>
odinho: it looks like we only have 443

[08:00:03.0000] <odinho>
I did, when in France ;-)

[08:00:19.0000] <odinho>
darobin: Okay. Think I'll just remove those tests then. Red isn't a nice colour in tests.

[08:00:31.0000] <darobin>
odinho: I can open another port

[08:00:43.0000] <darobin>
which would you like?

[08:00:45.0000] <darobin>
442?

[08:00:51.0000] <darobin>
4430?

[08:01:49.0000] <darobin>
odinho: ^^

[08:02:52.0000] <odinho>
darobin: At Opera we've done  8443  (and 8080), so basically +8000 for anything. -- Since you have  80 81 82 83,  maybe 443 444 would be the correct way? :P

[08:03:05.0000] <darobin>
444 it is then

[08:03:11.0000] <darobin>
I hope I don't cock this up

[08:03:15.0000] <odinho>
^_^

[08:04:17.0000] <darobin>
I've noticed people make fun of you when you crash the server on the same day you get root access

[08:11:56.0000] <annevk>
aah Lachy left

[08:12:43.0000] <darobin>
aaaaaand crash the server I did

[08:12:49.0000] <darobin>
thankfully not long enough for it to matter

[08:15:36.0000] <darobin>
odinho: ok, I can't use 8443 because that's taken by Jetty

[08:15:47.0000] <darobin>
and for other ports I need to poke a hole in iptables

[08:16:11.0000] <darobin>
I don't want to do that without taking to Mike because I'm unsure of what the security policy is on that box

[08:16:37.0000] <darobin>
the server currently listens on 444 but the firewall is blocking it

[08:51:48.0000] <odinho>
darobin: thank you although you're gone.

[08:59:02.0000] <annevk>
armchairing with bz

[08:59:04.0000] <annevk>
good times

[09:08:37.0000] <annevk>
can't wait to get back to http://html5.org/temp/unicorn.svg

[09:10:11.0000] <miketaylr>
amazing

[09:13:45.0000] <annevk>
odinho: the different protocol stuff, is that http/https?

[09:14:03.0000] <annevk>
odinho: and which direction? from http to https or vice versa?

[09:16:18.0000] <marcosc>
hmmmm... so, for img@srcset, if I have '<img src="foo" srcset="bar x1">' it's not clear (to me) how to pick between them from the algorithm.

[09:16:33.0000] <marcosc>
argh, make that 1x

[09:16:39.0000] <odinho>
annevk: Different protocol what? Different protocol and different port, was some tests I removed.

[09:17:04.0000] <odinho>
(both at the same time)

[09:17:05.0000] <marcosc>
argh. that effin x1 vs x1 keeps getting me.

[09:17:07.0000] <annevk>
whoa

[09:17:12.0000] <annevk>
why do so many browsers fail Disallow origin: http://www1.test.s0.no# ?

[09:17:22.0000] <annevk>
odinho: oh

[09:18:43.0000] <odinho>
annevk: The # is probably stripped somewhere in the engines.

[09:18:54.0000] <annevk>
that's some weird shit

[09:19:03.0000] <odinho>
It's working for not-remote though. Which I thought a bit weird.

[09:19:06.0000] <annevk>
afaik HTTP doesn't treat # magically

[09:19:25.0000] <odinho>
So maybe it's postmessage that's munging it. ... Or it shouldn't do that.

[09:19:26.0000] <annevk>
that does not-remote mean?

[09:19:42.0000] <odinho>
There's two tests,   origin.htm, and remote-origin.htm

[09:19:55.0000] <annevk>
miketaylr: my plan is to put that behind about:unicorn

[09:20:32.0000] <odinho>
they do the same, only remote-origin opens up an iframe on a different origin where it postMessage some stuff for that iframe to XHR.

[09:20:49.0000] <odinho>
I made it kinda fast, maybe I did something wacky.

[09:25:31.0000] <annevk>
how are you passing the origin around?

[09:26:27.0000] <annevk>
odinho: oh, maybe the # doesn't arrive on the server in some browsers because they strip it from the request?

[09:27:11.0000] <odinho>
annevk: source -> http://test.s0.no/w3c-tests/webappsec/tests/cors/submitted/opera/staging/remote-origin.htm

[09:28:56.0000] <odinho>
annevk: With less junk -> http://test.s0.no/w3c-tests/webappsec/tests/cors/submitted/opera/staging/anne-panne.htm

[09:29:44.0000] <odinho>
Hm, it is not sent with in Opera, no. That's strange because it is when I don't do the remote thingy.

[09:30:35.0000] <annevk>
I suspect encodeURIComponent(real_origin)

[09:30:53.0000] <marcosc>
Hixie (or hober), when you are around: if I have '<img src="foo" srcset="bar x1">' it's not clear (to me) how to pick between them from the algorithm (I probably missed something). Any guidance would be appreciated.

[09:31:19.0000] <annevk>
hmm no

[09:31:24.0000] <annevk>
that's not different from the original

[09:32:32.0000] <odinho>
decodeURIComponent(e.data.url) then? Lets see

[09:32:39.0000] <annevk>
yeah

[09:32:45.0000] <annevk>
I was just there :)

[09:32:50.0000] <annevk>
the iframe looks like the culprit

[09:33:08.0000] <annevk>
http://xhr.spec.whatwg.org/#the-open()-method requires the fragment to be dropped

[09:33:20.0000] <annevk>
maybe Chrome does not do that? would be a bug in Chrome

[09:34:21.0000] <odinho>
Wat? But ... howcome it works f ... f... Hmmmm.... AHA

[09:35:51.0000] <annevk>
I doubt howcome knows about this

[09:37:02.0000] <odinho>
^_^  I think I can add an extra encodeURIComponent to it, and it'll work better. Or I can remove the decode on the other side. Probably best to remove the decode, it shouldn't be there as far as I can see.

[09:38:48.0000] <marcosc>
Hixie, hober, never mind. Found it :)

[09:39:10.0000] <odinho>
annevk: Like totally fixed lots of errors. No more red in Opera for remote-origin.

[09:40:17.0000] <annevk>
odinho: awesome

[09:40:38.0000] <odinho>
( http://test.s0.no/w3c-tests/webappsec/tests/cors/submitted/opera/staging/remote-origin.htm )

[11:27:03.0000] <annevk>
hmm, there's also http://wiki.whatwg.org/wiki/FormData

[11:27:24.0000] <annevk>
kinda sad we use append there instead of add()

[11:28:14.0000] <annevk>
TabAtkins_: how do you feel about calling it append() instead of add()?

[11:29:03.0000] <annevk>
hmm, and for URLQuery, how do you get the names?

[11:29:52.0000] <annevk>
(the difference between FormData and URLQuery is that FormData is like multipart/form-data and URLQuery is like application/x-www-form-urlencoded

[11:30:03.0000] <annevk>
; i.e. one supports Blob and the other doesn't)

[12:12:16.0000] <zewt>
my favorite gmail thing: pasting a URL, editing the URL, and having it be sent with an automagically-generated link to the original link

[12:17:13.0000] <annevk>
arv: nice work on the exception stuff

[12:17:44.0000] <jwalden>
exceptionally good work, is what I think annevk meant to say :-)

[12:18:08.0000] <Ms2ger>
jwalden, you're the worst

[12:18:33.0000] <annevk>
jwalden: I am reserving that for when WebKit is DOM-compliant :)

[12:19:02.0000] <jwalden>
Ms2ger: only if you say I'm a brat

[12:19:02.0000] <arv>
annevk: thanks

[12:23:41.0000] <annevk>
matjas: seems your spec is up now btw on /specs/

[12:26:06.0000] <annevk>
arv: I've talked to sicking btw about adding something like promises to the platform

[12:26:35.0000] <annevk>
arv: not sure if that's up your alley, but if you have input/suggestions that would be appreciated

[12:28:30.0000] <arv>
annevk: Talk to Alex Russel, he is also trying to do this

[12:28:57.0000] <Hixie>
where should a cue that is left-aligned, given an x-position of 50%, and a width of 100%, end up?

[12:29:01.0000] <arv>
annevk: I want promises but at this point there are too many cooks for me to add anything but +1 to that discussion

[12:29:07.0000] <Hixie>
at x=50%, widht width=50%?

[12:29:17.0000] <Hixie>
or at x=0%, with width=100%?

[12:29:37.0000] <annevk>
arv: fair enough, if people are working on this maybe I should just sit back and relax

[12:29:45.0000] <annevk>
(and bitch about IDNA)

[12:30:28.0000] <annevk>
Hixie: is this like background-position or position:absolute?

[12:30:37.0000] <annevk>
Hixie: or is that what you're asking? :)

[12:30:52.0000] <arv>
annevk: I think slightlyoff is planning to get it in through some crypto API

[12:31:04.0000] <annevk>
arv: wut?

[12:31:17.0000] <arv>
annevk: Promises

[12:31:27.0000] <annevk>
yeah I understand, not sure I understand the strategy

[12:31:46.0000] <arv>
annevk: it is a new api that is async

[12:31:50.0000] <annevk>
my idea was to figure out what we want from the API and then add it to every asynchronous object we have

[12:33:10.0000] <annevk>
 xhr.promise.fail()/succeed()/then() or some such

[12:33:24.0000] <annevk>
new async stuff could return promise directly

[12:39:34.0000] <annevk>
"Tell CSS about WG consensus on case folding"

[12:39:35.0000] <annevk>
hmm

[12:40:03.0000] <annevk>
-- http://lists.w3.org/Archives/Public/www-international/2012OctDec/0076.html

[12:41:02.0000] <Hixie>
annevk: it's like neither, but i'm asking

[12:42:48.0000] <annevk>
Hixie: what do existing formats do?

[12:43:03.0000] <SimonSapin>
annevk: is that "tell csswg about i18n wg’s consensus"? What is the said consensus?

[12:43:32.0000] <annevk>
SimonSapin: it sounds like the consensus is not ASCII case-insensitive, which I think is what it should be

[12:44:40.0000] <Hixie>
annevk: not clear

[12:45:17.0000] <SimonSapin>
oh I see, "case folding" is i18n’s anwser to the question of "what kind case insensitivity"

[12:45:50.0000] <Hixie>
align:left position:50% width:100% => seems to me it should be treated the same as align:left position:50% width:50%

[12:45:54.0000] <Hixie>
but

[12:46:05.0000] <Hixie>
align:left position:100% width:50% => seems to me it should be treated the same as align:left position:50% width:50% also

[12:46:24.0000] <Hixie>
and i can't work out how to make both of those happen, so one has to lose

[12:46:36.0000] <Hixie>
probably the second

[12:46:47.0000] <Hixie>
but shrinking to width:0% doesn't make sense either...

[12:46:51.0000] <annevk>
Hixie: why not if pos+width > 100% ignore pos?

[12:47:02.0000] <zewt>
SimonSapin: case folding is how you do unicode case-insensitivity (as opposed to "convert to lowercase", which is subtly different)

[12:47:54.0000] <annevk>
case folding is also a way complex operation for where something simple is sufficient

[12:48:00.0000] <Hixie>
annevk: because default width is 100% so that would mean position doesn't work unless you change the width also, every time

[12:48:24.0000] <zewt>
annevk: sure, it's nonsense when you're only comparing ascii

[12:48:39.0000] <zewt>
heh, come to think of it I don't even know what String.toLowerCase actually does

[12:49:06.0000] <annevk>
Hixie: so ignore width instead then I suppose...

[12:49:07.0000] <zewt>
there's toLowerCase and toLocaleLowerCase, but "lowercase" basically by definition has to be based on some locale

[12:49:13.0000] <annevk>
Hixie: which you already concluded

[12:49:30.0000] <zewt>
maybe just "toLowerCase = lowercase based on en_US, toLocaleLowerCase = based on the user's locale"? dunno

[12:49:51.0000] <annevk>
zewt: there's a locale-independent algo I think

[12:49:58.0000] <zewt>
annevk: that's what case folding is

[12:49:59.0000] <Hixie>
annevk: yeah but then align:left position:100% never does what the author wants. maybe that's ok.

[12:50:22.0000] <zewt>
is there anywhere it actually matters, aside from stupid turkish dotless I?

[12:50:25.0000] <annevk>
Hixie: what do you want there?

[12:50:36.0000] <Hixie>
annevk: hell if i know

[12:51:02.0000] <annevk>
Hixie: but even though we don't know what X wants, it doesn't do what X wants?

[12:51:11.0000] <zewt>
or is that just the only one that affects the ASCII set

[12:51:36.0000] <annevk>
zewt: there's a lot of cases

[12:51:43.0000] <zewt>
that's probably what it is

[12:58:40.0000] <Hixie>
annevk: i can argue multiple interpretations as reasonable

[12:58:50.0000] <Hixie>
another case is  align:middle size:25%

[12:59:01.0000] <Hixie>
should that be in the middle, or on the left?

[12:59:16.0000] <Hixie>
maybe the default position should depend on the alignment...

[13:01:31.0000] <Hixie>
please comment on https://www.w3.org/Bugs/Public/show_bug.cgi?id=20037 if you have opinions regarding webvtt positioning

[13:01:34.0000] <Hixie>
lunch, bbl

[13:34:56.0000] <annevk>
TabAtkins_: why is it Map.size rather than Map.length?

[13:39:51.0000] <jwalden>
maps aren't vectors; they don't have a length

[13:40:10.0000] <jwalden>
does HashMap.length make any sense?

[13:40:41.0000] <zewt>
"length" in apis usually means "the number of things in the container", it's not restricted to linear things like strings and arrays

[13:41:42.0000] <jwalden>
I don't think that's universally true, and to the extent it's true in those cases, it's a bad name

[13:41:46.0000] <zewt>
eg. python uses len() for all kinds of containers, it doesn't make you remember different names (which also makes duck typing work much better)

[13:42:05.0000] <zewt>
everyone understands it, so i think the name is fine

[13:42:18.0000] <zewt>
it could be "elephants" as long as it was understood :)

[13:42:36.0000] <annevk>
yeah, that's certainly how I've come to view length, thus far I haven't seen a different name for it

[13:42:50.0000] <zewt>
size would be fine too but we've already got "length"

[13:43:46.0000] <SimonSapin>
btw, what is .length for a sparse JS array? The number of defined items or the greatest index + 1?

[13:44:46.0000] <heycam>
the latter

[13:45:29.0000] <zewt>
does javascript even have actual sparse arrays, other than setting up an object-with-array-semantics by hand?

[13:45:59.0000] <SimonSapin>
zewt: isn’t that an implementation detail?

[13:47:03.0000] <zewt>
i'm not talking about implementation, i'm asking if there are any interfaces or APIs or syntaxes that actually let you create a sparse array, other than assigning to an object directly

[13:47:17.0000] <jwalden>
arrays *are* objects

[13:47:25.0000] <heycam>
you can do [10,20,,,,,,40]

[13:47:27.0000] <zewt>
yes, we're not JS 101 here :)

[13:47:31.0000] <jwalden>
there's no such thing as a sparse array at all

[13:47:33.0000] <jwalden>
just arrays

[13:47:41.0000] <jwalden>
sometimes which might be missing properties below their length

[13:47:57.0000] <SimonSapin>
that’s what I meant by sparse

[13:48:06.0000] <jwalden>
also people don't use "sparse" in the same sense in all cases

[13:48:20.0000] <jwalden>
it's just not a very precise term

[13:48:32.0000] <zewt>
jwalden: heycam's syntax definitely gives a sparse array

[13:48:58.0000] <zewt>
not a terribly useful one (if you want a sparse array, usually you want millions of missing items, not a few), but just the same

[13:49:04.0000] <jwalden>
zewt: in the engines I'm aware of, I believe that gets optimized to use vector-like storage, which engine implementers don't consider to be a sparse case

[13:49:17.0000] <heycam>
zewt, you can also start off with [] and then just assign to the index properties you want

[13:49:20.0000] <jwalden>
zewt: which illustrates the problems of using the term "sparse"

[13:49:54.0000] <zewt>
jwalden: that much *is* an implementation detail

[13:50:25.0000] <jwalden>
zewt: there is no definition for the term "sparse", so it's meaningless to ask whether JS exposes them

[13:50:28.0000] <heycam>
jwalden, do you know if you do `var a = []; a[2**30] = 1` will it not allocate a chunk of memory?

[13:50:34.0000] <annevk>
and wherein heycam returns and I ask him to add https://www.w3.org/Bugs/Public/show_bug.cgi?id=18547 to his list (unless Ms2ger gets to it first)

[13:50:41.0000] <zewt>
in JS terms, i'd consider a sparse array to simply be one with array semantics, but where one of the indexes below .length doesn't exist in the object

[13:50:51.0000] <heycam>
annevk, so added.

[13:50:56.0000] <jwalden>
well, if that's your definition, new Array(17)

[13:51:17.0000] <zewt>
whether or how it's actually optimized based on that being the implementation detail part, of course

[13:51:20.0000] <Ms2ger>
heycam gets to do that :)

[13:52:02.0000] <jwalden>
heycam: it depends on the engine; most will probably use something similar to non-array, non-typedarray property storage for it, which allocates memory sometimes (but not necessarily always)

[13:52:10.0000] <zewt>
i guess the other way to view sparse arrays is as the actual physical in-memory data structure (but that isn't very interesting at a level like JS)

[13:52:30.0000] <jwalden>
questions about what memory gets allocated are inherently un-answerable without qualifying to a specific engine, mostly

[13:52:31.0000] <zewt>
well, not that exactly (it doesn't define something specific like a binary tree)

[15:49:06.0000] <Hixie>
so... cross-origin seamless

[15:49:52.0000] <Hixie>
do we always want the following on any seamless case?:

[15:50:03.0000] <Hixie>
- links opening in the parent browsing context, not the nested one

[15:50:25.0000] <Hixie>
- shrink wrapping

[15:50:47.0000] <Hixie>
- media queries acting as if the bc was the parent, not the iframe

[15:51:25.0000] <Hixie>
- borders disable by default

[15:51:41.0000] <Hixie>
- speech media should not announce the iframe as separate

[15:52:36.0000] <Hixie>
if so, are the only things we _don't_ want to propagate the styles, and the events (not yet specced anyway)?


2012-11-22
[16:28:14.0000] <abarth>
i think the main thing we want is the autosizing

[16:28:28.0000] <abarth>
which I guess is what you mean by "shrink wrapping"

[16:28:31.0000] <Hixie>
right

[16:28:38.0000] <abarth>
disabling borders by default makes sense too

[16:28:48.0000] <Hixie>
do you know of anyone outside chrome who wants to implement this?

[16:29:02.0000] <abarth>
(one sec)

[16:31:46.0000] <abarth>
ok, back

[16:32:24.0000] <abarth>
there are definitely other folks at Google who would like us to ship seamless

[16:32:33.0000] <abarth>
and to have crossorigin support

[16:32:50.0000] <abarth>
I don't know where it is on the priority list for other browser vendors

[16:34:32.0000] <abarth>
the list you have above looks reasonable if you assume that you already have a fully implementation of seamless

[16:35:02.0000] <abarth>
if you're looking to lower the activiation energy for implementors, you might want to focus on just the core behaviors

[16:36:12.0000] <Hixie>
is there an activation energy problem on this front?

[16:43:28.0000] <Hixie>
implementors - if you see anything on this that you want implemented, please do fill in the table or let me know: http://wiki.whatwg.org/wiki/New_Features_Awaiting_Implementation_Interest

[16:54:42.0000] <othermaciej>
Hixie: I'm surprised to learn that Dean Jackson works for Google

[16:54:57.0000] <othermaciej>
how did he manage that and get <dino⊙ac> as his email?!?

[16:56:16.0000] <othermaciej>
(fixed btw)

[17:00:47.0000] <Hixie>
othermaciej: oops, i should proof-read the table :-P

[17:26:10.0000] <nessy>
Hixie: I'm really happy about that new proposal for cue positioning!

[17:41:48.0000] <GPHemsley>
It doesn't make sense to set up a selector for credit card companies.

[17:41:58.0000] <GPHemsley>
There are too many and the names could change.

[17:48:17.0000] <GPHemsley>
I'm not sure that deleting wiki pages is the best course of action for things that are no longer applicable.

[17:50:24.0000] <smaug____>
What is FormData in http://wiki.whatwg.org/wiki/New_Features_Awaiting_Implementation_Interest ?

[17:50:29.0000] <smaug____>
Something else than http://xhr.spec.whatwg.org/#interface-formdata ?

[17:51:27.0000] <smaug____>
I guess just additional features

[22:11:30.0000] <zcorpan>
Hixie: my recollection from the FOMS conference was that it's more OK to change the width than to change the position

[22:11:43.0000] <Hixie>
k

[22:11:45.0000] <zcorpan>
Hixie: so at x=50%, widht width=50%?

[22:11:48.0000] <Hixie>
does the proposal in the bug seem ok?

[22:11:54.0000] <zcorpan>
s/?//

[22:11:57.0000] <zcorpan>
i'll have a look

[22:12:41.0000] <heycam>
zcorpan, thanks for your scoped style test suggestions yesterday

[22:12:59.0000] <zcorpan>
heycam: np

[22:23:09.0000] <zcorpan>
Hixie: hmm. my recollection might have been backwards. a different case - align:middle position:0% size:50% - was expected to respect the width and change the position (or possibly have position 0% mean the anchor point is at 0% of the box)

[22:23:42.0000] <Hixie>
align:middle position:0% size:50% would presumably have text centered in a box covering 0% to 50% from the left, no?

[22:24:11.0000] <zcorpan>
yes, that's the expected result, but not the result of the current spec, iirc

[22:24:18.0000] <Hixie>
forget the current spec :-)

[22:24:23.0000] <Hixie>
look at the proposal in the bug from today

[22:24:29.0000] <zcorpan>
yeah, haven't got that far yet

[22:24:32.0000] <Hixie>
:-)

[22:24:46.0000] <zcorpan>
long bug is long

[22:25:02.0000] <Hixie>
20037?

[22:25:23.0000] <Hixie>
oh yikes, it has lots of comments

[22:27:19.0000] <zcorpan>
i read a dup first to refresh my memory

[22:27:40.0000] <zcorpan>
(18501)

[22:29:17.0000] <Hixie>
/me hates the "reply" link in bugzilla

[22:29:51.0000] <Hixie>
in other news, why are facebook sending me updates about their policy when I DON'T EVEN HAVE AN ACCOUNT

[22:29:53.0000] <zcorpan>
align:right position:10%

[22:29:54.0000] <zcorpan>
   should be right-aligned with the right edge 90% across from the left

[22:30:02.0000] <zcorpan>
Hixie: what's the reasoning for that one?

[22:30:31.0000] <Hixie>
what would you expect?

[22:31:15.0000] <zcorpan>
i think i'd expect the left edge be 10% from the left

[22:31:28.0000] <Hixie>
why?

[22:32:20.0000] <Hixie>
(i don't disagree, just curious if you have a reason)

[22:32:25.0000] <zcorpan>
because position should do the same thing regardless of alignment

[22:32:35.0000] <Hixie>
hm, not sure i agree that that should be an invariant

[22:33:16.0000] <Hixie>
one reason to design it the way that 0% starts at the alignment edge (though not a reason to expect align:right position:10% on the right) is that it means that align:right size:10% will be on the right, which people seem to expect

[22:33:24.0000] <Hixie>
(if we default position:0%)

[22:36:43.0000] <zcorpan>
position could have an 'auto' default that makes right-aligned cues by default have the right edge at 100%, or some such

[22:38:08.0000] <Hixie>
auto values are just a pain

[22:42:35.0000] <zcorpan>
Hixie: i thought what was considered confusing was that the different settings depend on each other. the new proposal still does that

[22:43:20.0000] <Hixie>
different people have different ideas of what is confusing

[22:43:34.0000] <Hixie>
but i don't really see how the values can't depend on each other

[22:43:54.0000] <Hixie>
at least, not if we want it to have a reasonable number of settings and not have to specify them all all the time

[22:47:23.0000] <zcorpan>
maybe we should have 'left' and 'right' settings instead of 'position'

[22:47:27.0000] <zcorpan>
both default to 0

[22:47:35.0000] <zcorpan>
and work like absolute positioning in css

[22:48:28.0000] <zcorpan>
(or 'start' and 'end' if it should be flipped for rtl)

[23:00:11.0000] <Hixie>
zcorpan: i dunno, i think most people are more likely to think in terms of width than position

[23:05:18.0000] <zcorpan>
i've commented on the bug

[23:06:41.0000] <zcorpan>
Hixie: also see comment 0 in 18501 ("It seems to me that what authors needs the ability to specify is:")

[23:09:46.0000] <Hixie>
yeah i looked at all the dupes pretty carefully

[01:02:54.0000] <hsivonen>
can someone remind me how an HTTP client determines if a response entity body exists?

[01:05:11.0000] <hsivonen>
in particular, how can a client differentiate between zero-length response entity body and the absence of a response entity body?

[01:15:50.0000] <hsivonen>
https://svn.tools.ietf.org/svn/wg/httpbis/draft-ietf-httpbis/latest/p1-messaging.html#message.body suggests there's no other way than looking at the request method and response code

[01:16:19.0000] <hsivonen>
yay for not speccing what the client should do if a message body is present when it MUST NOT be present

[01:29:20.0000] <annevk>
Hixie: I think I need some more concrete details on the event retargeting stuff

[01:44:04.0000] <annevk>
Hixie: I added a proposal to the bug

[01:48:09.0000] <annevk>
hsivonen: dude, cannot expect anything else from a spec written by jreschke really

[01:48:34.0000] <annevk>
hsivonen: in rare cases you can convince mnot and then they have to play ball, but other than that it's riddles all the way down

[01:49:40.0000] <jgraham>
A riddle inside a mystery inside an engigma inside a RFC?

[01:49:46.0000] <jgraham>
*enigma

[01:50:38.0000] <annevk>
http://wiki.whatwg.org/wiki/New_Features_Awaiting_Implementation_Interest is a great idea

[01:50:55.0000] <annevk>
jgraham: yeah, waiting for gsnedders to solve it

[01:59:14.0000] <annevk>
marcosc: feel free to update the wiki

[02:00:07.0000] <annevk>
marcosc: also, @WHATWG is not really an entity, it just shares info, I'm kinda hesitant to reply from it

[02:08:03.0000] <zcorpan>
the best part about @supports is that you get to repeat all your vendor-prefixed declarations once more.

[02:09:11.0000] <zcorpan>
now cue a vendor-prefixed impl of @supports and we're home

[02:10:57.0000] <Ms2ger>
fantasai++

[02:12:57.0000] <kennyluck>
What happned?

[02:14:58.0000] <Ms2ger>
XKCD happened

[02:15:06.0000] <darobin>
odinho: https://w3c-test.org:444/ is now open for you to have all sorts of fun with

[02:15:27.0000] <MikeSmith>
darobin: so what did the problem turn out to be?

[02:15:33.0000] <MikeSmith>
or rather, the cause of the problem?

[02:15:43.0000] <darobin>
MikeSmith: it was just that port 444 was not open

[02:15:59.0000] <darobin>
it's what I thought, I just wanted to check that it was okay to open it before doing so

[02:16:29.0000] <MikeSmith>
I mean the OPTIONS problem

[02:16:38.0000] <darobin>
oh, that we haven't solved :(

[02:16:46.0000] <MikeSmith>
ah

[02:16:48.0000] <darobin>
I can't for the life of me figure out what's going on

[02:17:01.0000] <odinho>
darobin: Okay, can add those two tests back then, and maybe plan some moar fun later ;-)

[02:17:07.0000] <darobin>
mmmm, actually I have an idea

[02:18:10.0000] <annevk>
FWIW, I'm likely to remove 'If the "user:password" format in the userinfo production is not supported for the relevant <scheme> and url contains this format, throw a "SyntaxError" and terminate these steps.' from XHR soonish

[02:18:31.0000] <annevk>
oh, and I guess I'll make XHR depend on URL

[02:21:08.0000] <MikeSmith>
darobin: so what's different about the port 444 server?

[02:23:16.0000] <zcorpan>
i hope the only difference is the different port number :-)

[02:23:31.0000] <zcorpan>
(useful for origin tests)

[02:23:45.0000] <MikeSmith>
ah OK

[02:24:04.0000] <MikeSmith>
/me reads the logs from yesterday

[02:24:14.0000] <darobin>
MikeSmith: the 444 is just for CORS testing for SSL, odinho wanted it

[02:24:29.0000] <MikeSmith>
了解

[02:24:35.0000] <darobin>
it's a separate problem from OPTION

[02:24:39.0000] <MikeSmith>
ok

[02:25:03.0000] <darobin>
/me cries a little

[02:25:05.0000] <darobin>
I hate Apache

[02:32:57.0000] <zcorpan>
given a worker like this: postMessage(1); close(); postMessage(2);

[02:33:08.0000] <zcorpan>
how many messages should be received on the other end?

[02:33:39.0000] <darobin>
sigh, our version of Apache is too old to support trace-level logging...

[02:44:48.0000] <zcorpan>
i think the answer is 2

[02:46:56.0000] <annevk>
zcorpan: depends on the queuing :)

[02:47:24.0000] <zcorpan>
annevk: can you elaborate?

[02:47:51.0000] <annevk>
zcorpan: I don't know how this part of workers work, but I assume these put all something on a queue of some kind

[02:48:00.0000] <annevk>
works*

[02:48:43.0000] <zcorpan>
if you don't know, you're not helping :-P

[02:51:37.0000] <annevk>
zcorpan: actually seems the answer is 0

[02:52:42.0000] <zcorpan>
annevk: why?

[02:53:28.0000] <annevk>
I'm having a hard time finding the actual definition of postMessage, but if that queues tasks, and close() nukes all existing tasks and prevents further tasks to be queued, seems like 0 is the answer

[02:54:01.0000] <zcorpan>
the confusing part is that there are several event loops here

[02:54:26.0000] <zcorpan>
and neither close() nor postMessage() are clear on which they refer to

[02:54:42.0000] <annevk>
oh, postMessage() puts tasks on the other end

[02:54:45.0000] <zcorpan>
yes

[02:54:56.0000] <annevk>
then you're correct

[02:55:22.0000] <annevk>
but the spec could be a bit more explicit about task queues indeed

[02:55:35.0000] <annevk>
and also provide a forward reference to the actual postMessage method that is invoked

[02:55:37.0000] <zcorpan>
thanks. i'll file bugs

[02:56:59.0000] <annevk>
I was right though, depends on the queuing :p

[04:09:46.0000] <AryehGregor>
annevk, marcosc, https://www.w3.org/Bugs/Public/show_bug.cgi?id=12296 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=12220

[04:12:11.0000] <annevk>
knew it

[04:15:51.0000] <hsivonen>
annevk: http://lists.w3.org/Archives/Public/www-archive/2011Dec/att-0021/encoding-labels.html contains at least one multibyte encoding

[04:16:09.0000] <hsivonen>
annevk: and it claims no one supports it

[04:16:37.0000] <hsivonen>
annevk: would the testing methodology have resulted in an indication of non-support when an encoding is, in fact, multibyte?

[04:16:55.0000] <annevk>
which one?

[04:17:06.0000] <hsivonen>
t.61-8bit

[04:17:47.0000] <hsivonen>
annevk: multibyte according to http://std.dkuug.dk/i18n/charmaps/T.61-8BIT

[04:19:31.0000] <annevk>
hsivonen: I suppose that could have happened, yes

[04:20:09.0000] <annevk>
hsivonen: though note that per http://wiki.whatwg.org/wiki/Web_Encodings Gecko is the only one to support that encoding

[04:20:44.0000] <annevk>
oh, IE might have support too under a different label

[04:42:36.0000] <annevk>
funny how this stuff works: http://lists.webkit.org/pipermail/webkit-dev/2012-January/019182.html

[04:42:51.0000] <annevk>
I'm pretty sure that group at Adobe is basically Vincent Hardy, who has been asking for this for a long time

[04:44:37.0000] <annevk>
he might even have done the original progress event spec in SVG, dunno

[04:44:53.0000] <annevk>
(which was intended for image downloads and such)

[05:45:57.0000] <annevk>
So I wanted to fix that URL bug in XHR, but I wonder if maybe the design in the URL spec should be tweaked a bit more

[05:46:26.0000] <annevk>
Instead of having a "fatal error flag" parsing would just return failure and URLUtils would not have an associated URL object

[05:51:18.0000] <annevk>
yup :)

[05:55:55.0000] <gsnedders>
jgraham: Waiting for me to solve what?

[06:04:50.0000] <darobin_>
jgraham: you probably want to chat with this guy https://twitter.com/graouts/status/271615076023287809

[06:05:07.0000] <darobin>
(he's a friend and generally a good guy)

[06:30:42.0000] <darobin>
good catch odinho

[06:31:23.0000] <odinho>
darobin: Only generally? :P

[06:31:54.0000] <darobin>
is anyone ever more than generally ;-)

[07:14:29.0000] <jgraham>
darobin: You are right, I do

[07:15:33.0000] <darobin>
jgraham: if he doesn't show up on IRC and you'd like a way to ping him outside Twitter just ask

[07:15:39.0000] <darobin>
(if you have a Twitter account, I don't know it)

[07:16:14.0000] <jgraham>
(I have an unused twitter account)

[07:16:56.0000] <jgraham>
Also, I commented on github

[07:17:02.0000] <annevk>
fwiw, new URL can now sometimes fail

[07:17:36.0000] <zewt>
are there any ctors on the platform that do that?

[07:19:08.0000] <zewt>
(failing instead of being in an error state does seem to make more sense as an interface)

[07:27:31.0000] <annevk>
zewt: you mean like XMLHttpRequest?

[07:28:10.0000] <annevk>
zewt: or maybe like new Image() if the argument cannot be coerced to an integer?

[07:29:03.0000] <zewt>
when can xhr's ctor fail? (webidl dispatch doesn't count, that's before it runs)

[07:29:10.0000] <zewt>
(note i'm not objecting, just wondering if this is a new thing or not)

[07:29:43.0000] <zewt>
gah i accidentally loaded the w3's copy of xhr2 and hooooooly shit they fucked it up

[07:29:53.0000] <zewt>
 NO TEST COVERAGE

[07:30:01.0000] <zewt>
my eyes are bleeding

[07:30:15.0000] <annevk>
oh wait, XHR doesn't fail, doh

[07:30:17.0000] <annevk>
open() fails

[07:31:15.0000] <zewt>
i find it fascinating that they removed all links to the real spec (used to be the ED link went to yours), yet "participate" still points here

[07:32:07.0000] <annevk>
I found it rather odd to be "former editor" despite having written all the text

[07:32:30.0000] <annevk>
I commented on that here http://lists.w3.org/Archives/Public/public-webapps/2012OctDec/0538.html but thus far nobody seems to care

[07:33:51.0000] <zewt>
it's also fascinating that it apparently takes three people to copy one person's stuff

[07:34:36.0000] <annevk>
finally found an example, Worker throws, for exactly the same reason (URL cannot be parsed)

[07:35:40.0000] <annevk>
Worker can also throw for undisclosed security reasons

[07:36:31.0000] <annevk>
EventSource too

[07:36:48.0000] <annevk>
WebSocket too

[07:40:00.0000] <zewt>
hmm

[07:41:49.0000] <zewt>
if new URL(url.href).href always round-trips, then in principle the ctor base argument could just be URLString, but I guess it doesn't matter

[07:42:17.0000] <annevk>
what is a URLString?

[07:43:27.0000] <zewt>
a will it blend

[07:43:38.0000] <zewt>
DOMString

[07:44:59.0000] <annevk>
I'm not sure I follow. I think the main remaining annoyance is changing protocol

[07:45:21.0000] <annevk>
I'm sort of wondering if setting protocol should only work as long as you don't change relativeness.

[07:45:49.0000] <annevk>
So if the current scheme is a relative scheme it can only be another relative scheme, and if the current scheme isn't, it can only be a non-relative scheme

[07:46:10.0000] <annevk>
that way you keep the invariants and don't need something weird like the "relative flag"

[08:05:29.0000] <annevk>
In other news, I'm hitting more cases that at some point need to be defined in "Fetch"

[08:20:00.0000] <odinho>
zewt: I think linking up tests to the spec page is a very nice idea. I hope it's the styling you're mostly worried about :-)

[08:20:03.0000] <annevk>
oh hey hallvors!

[08:20:12.0000] <annevk>
hallvors: so I'm planning on making another change to XHR

[08:20:25.0000] <annevk>
hallvors: currently it's either same-origin or cross-origin

[08:21:01.0000] <annevk>
hallvors: I think we should put some checks on cross-origin too, for either http/https scheme in the request URL

[08:21:24.0000] <annevk>
hallvors: and then have "otherwise" be a case where it's just a network error

[08:21:45.0000] <annevk>
hallvors: thinking about it more, I guess that's another thing that "Fetch" should handle

[08:42:16.0000] <annevk>
Hixie: should http://xhr.spec.whatwg.org/#dom-xmlhttprequest instead read "set document to the active document of the global object on which xhr's interface object is located"?

[08:42:23.0000] <annevk>
hallvors: ^^

[08:54:39.0000] <annevk>
odinho: Velmont: you around?

[08:55:40.0000] <annevk>
odinho: Velmont: is the "userinfo" bit from http://fetch.spec.whatwg.org/#redirect-steps tested? I'm thinking it's bogus

[09:08:38.0000] <odinho>
annevk: There was some, but xhr tests are kinda broken.

[09:09:27.0000] <odinho>
Ah, fetch - not xhr :P Hm. They should be.

[09:10:56.0000] <annevk>
odinho: so you have Location: http://test:test⊙tc/ somewhere in there which is valid except for the test:test part?

[09:11:02.0000] <annevk>
hmm

[09:12:53.0000] <odinho>
No. They are not I have some started things lying on T server at Opera, but I never actually moved them anywhere because I hit some snags I think. Long time ago now. Never thought more about it :P

[09:13:14.0000] <odinho>
Just that small thing might be easy to add though.

[09:23:29.0000] <annevk>
well, I might want to kill it

[09:23:35.0000] <annevk>
so I'd prefer it if you don't :)

[09:25:34.0000] <odinho>
annevk: http://test.s0.no/w3c-tests/webappsec/tests/cors/submitted/opera/staging/redirect-userinfo.htm

[09:25:41.0000] <odinho>
^_^ Opera implements it.

[09:25:58.0000] <odinho>
WebKit also passes. (if the test is correct though)

[09:26:11.0000] <odinho>
Firefox times out.

[09:26:50.0000] <odinho>
IE10 passes.

[09:27:18.0000] <annevk>
k

[09:27:20.0000] <odinho>
So pretty god coverage. 3/4 engines do it.

[09:27:28.0000] <odinho>
(with the above caveat)

[09:28:05.0000] <annevk>
ah yeah, redirects only work for simple requests, so yeah, that seems good then

[09:28:21.0000] <annevk>
Fetch is gonna be one complicated algorithm :/

[09:28:31.0000] <annevk>
(though I guess that's also kinda fun)

[09:31:42.0000] <odinho>
(it doesn't really have to though ... but ohwell :P)

[09:32:11.0000] <annevk>
odinho: what doesn't have to?

[09:33:25.0000] <odinho>
Added some more tests to it. They're more to do with actual "what is userinfo" so I guess some of them are bad. Opera kills requests with   //user:pass@  and   //user:@   but not for  //:pass@   //:@   or //@.  Guess you can tell me how that stuff works from head? :]

[09:34:15.0000] <odinho>
annevk: preflighted requests _could_ also do redirects, I haven't seen any problems with it, as long as the preflight got a 200 OK back on the preflight request itself. -- So, possible, as in, it'd be possible to make the spec more complicated if you wanted :D I think.

[09:37:13.0000] <odinho>
"Userinfo is a username, optionally followed by a ":" and a password." -- so sounds sane.

[09:41:05.0000] <odinho>
Checked the referenced document in the fetch spec, rfc2616 -- but that was super unhelpful. You should just link to the real URL spec :-)

[09:44:18.0000] <annevk>
odinho: just @ doesn't mean anything

[09:44:25.0000] <annevk>
the others should fail

[09:44:52.0000] <annevk>
odinho: I will update it shortly

[09:46:13.0000] <annevk>
well, shortly, next time I touch fetch, dunno when that'll be

[09:51:50.0000] <odinho>
IE10 is green on all, opera green on all but :pass@ :@ @, chromium green on all but :@ @, firefox only green on :@ :pass@

[09:53:22.0000] <odinho>
So noone does what it "should" be, then:   green on all but @

[11:22:38.0000] <zcorpan>
annevk: firefox fails to resolve data:test

[11:46:16.0000] <SimonSapin>
zcorpan: data:,test works, though

[11:46:31.0000] <SimonSapin>
or data:test,

[11:46:40.0000] <zcorpan>
SimonSapin: yes, they are legal

[11:53:29.0000] <annevk5>
Yeah I know, but they might change that. We could put data in the main URL parser, but that is not going to scale...

[11:56:32.0000] <SimonSapin>
it’s a completely different syntax, isn’t it?

[11:57:09.0000] <annevk5>
Well all URLs have their own syntax bits...

[11:57:46.0000] <annevk5>
mailto is not handled in any special way either

[11:58:05.0000] <SimonSapin>
in any case I would like to have the syntax well defined. Using email libs to parse the charset in data: is, well, not pretty https://github.com/Kozea/WeasyPrint/blob/master/weasyprint/urls.py#L188

[11:59:20.0000] <annevk5>
data's syntax is defined, no? There might be some issues with the MIME type parsjng

[12:00:38.0000] <annevk5>
My plan is to define URL processing at some point, with per-scheme rules for schemes that need it and do not have it

[12:02:27.0000] <SimonSapin>
annevk5: it’s defined in http://tools.ietf.org/html/rfc2397#section-3 , but I’m a bit fuzzy on quoted strings etc.

[12:03:35.0000] <annevk5>
Everyone is

[12:05:01.0000] <annevk5>
I might look into a clearer definition at some point, but maybe I can convince you to write it? :)

[12:05:44.0000] <SimonSapin>
maybe :)

[12:08:17.0000] <SimonSapin>
annevk5: do you think it is possible to define to find a web-compatible subset of the syntax for data: headers that does not depend on all of MIME?

[12:09:35.0000] <annevk5>
You need MIME, but what exactly that is...

[12:11:46.0000] <SimonSapin>
I could very well be convince to help with this, but I’d need some guidance :)

[12:14:10.0000] <annevk5>
Tomorrow :(

[12:14:25.0000] <annevk5>
Euh, :) silly phone

[12:15:00.0000] <Ms2ger>
That's pretty phoney

[14:53:58.0000] <GPHemsley>
AFAICT, no browser detects OTF or TTC fonts

[14:55:54.0000] <GPHemsley>
Also, is there a way for me to turn off automatically downloading files in Safari?

[15:05:28.0000] <GPHemsley>
They don't seem to detect WOFF, either

[15:05:54.0000] <GPHemsley>
And Chrome has strange behavior when a file is sent with the WOFF mime type

[15:06:05.0000] <GPHemsley>
if the file has no file extension, it doesn't add one

[15:06:17.0000] <GPHemsley>
but if the file has a '.woff' file extension, it adds another one

[15:06:31.0000] <GPHemsley>
so it tries to get me to download and save the file as signature.woff.woff

[15:06:47.0000] <GPHemsley>
(versus just signature without it)

[15:08:25.0000] <Hixie>
i would expect browsers to only try to sniff for fonts in @font-face

[15:10:11.0000] <GPHemsley>
hmm

[15:10:26.0000] <GPHemsley>
TTF seems to be sniffed outside of @font-face, though

[15:10:43.0000] <Hixie>
funky

[15:10:47.0000] <Hixie>
how does that manifest?

[15:12:37.0000] <GPHemsley>
just as a binary download

[15:12:50.0000] <GPHemsley>
the others are treated as plaintext

[15:12:52.0000] <Hixie>
isn't that just detecting non-text?

[15:13:04.0000] <GPHemsley>
oh, good point

[15:13:05.0000] <Hixie>
what mime type are you sending it as?

[15:13:11.0000] <GPHemsley>
I forgot the TTF signature was binary

[15:13:28.0000] <Hixie>
(the other types aren't? funky!)

[15:13:42.0000] <GPHemsley>
nope, they're 'ttcf', 'OTTO', and 'wOFF'

[15:13:50.0000] <Hixie>
with no binary bytes in the first 512?

[15:13:55.0000] <GPHemsley>
TTF, on the other hand, is the binary representation of '1.0'

[15:14:09.0000] <GPHemsley>
the test files consist only of the signatures and nothing else

[15:14:34.0000] <GPHemsley>
(which is surprisingly successful in other areas)

[15:14:44.0000] <GPHemsley>
the signature for bitmaps, for example, is only 'BM"

[15:14:44.0000] <Hixie>
aah

[15:14:45.0000] <SimonSapin>
GPHemsley: what binary representation?

[15:14:57.0000] <GPHemsley>
SimonSapin: 00 01 00 00

[15:15:16.0000] <GPHemsley>
(2 bytes for major, 2 bytes for minor)

[15:15:22.0000] <SimonSapin>
oh, ok

[15:15:31.0000] <GPHemsley>
anyway, back to the Thanksgiving festivities...

[15:17:53.0000] <zewt>
that doesn't sound like a very useful magic, heh

[15:18:09.0000] <zewt>
not unless you know in advance that you're looking for a font type, at least


2012-11-23
[16:01:16.0000] <Hixie>
zewt: so long as nobody else did it :-)

[16:26:22.0000] <zewt>
Hixie: but a raw binary file containing an array of floats that happens to begin with 1.0 would match, heh

[16:26:35.0000] <zewt>
(eg. a list of vertices or whatever)

[16:29:06.0000] <benschwarz>
Hixie, did you get my note about renaming the dev spec?

[16:31:48.0000] <annevk>
Hixie: if you have a better idea for https://www.w3.org/Bugs/Public/show_bug.cgi?id=18780 it is welcome

[16:32:16.0000] <annevk>
Hixie: but given your comment, you would be okay with me drafting that and seeing where it will take you?

[16:48:03.0000] <Hixie>
benschwarz: i'm not aware of anything from you that i haven't replied to

[16:48:08.0000] <Hixie>
benschwarz: so either yes and i replied, or no :-)

[16:48:59.0000] <benschwarz>
lemme see…

[16:49:06.0000] <benschwarz>
https://github.com/benschwarz/developers.whatwg.org/issues/69

[16:50:03.0000] <benschwarz>
@ Hixie

[16:50:44.0000] <Hixie>
didn't i do that already?

[16:50:55.0000] <Hixie>
i thought i did that a while back

[16:52:22.0000] <benschwarz>
maybbee you did

[16:52:41.0000] <benschwarz>
oh.

[16:52:44.0000] <benschwarz>
http://www.whatwg.org/specs/web-apps/current-work/dev-index look at that

[16:52:56.0000] <Hixie>
heh

[16:53:12.0000] <Hixie>
i think you asked me on irc and i did it then

[16:53:19.0000] <benschwarz>
right

[16:53:19.0000] <Hixie>
i don't think i'd seen the github issue

[16:53:22.0000] <benschwarz>
well. that was good

[16:53:42.0000] <benschwarz>
I'll rebuild / deploy then :)

[17:00:53.0000] <benschwarz>
Hixie: deployed :)

[18:00:52.0000] <erlehmann>
how would i put a link in a webvtt file?

[18:06:11.0000] <erlehmann>
hey rillian

[18:06:24.0000] <erlehmann>
how can i make annotated links in WebVTT?

[18:07:33.0000] <erlehmann>
i have this http://warumnicht.dieweltistgarnichtso.net/wn-15.html

[18:07:38.0000] <erlehmann>
and want to make it more accessible

[18:09:47.0000] <erlehmann>
maybe the whatwg is the wrong channel :/

[18:23:24.0000] <erlehmann>
today i thought about targeting media elements with links

[18:24:13.0000] <erlehmann>
<a href="testfile.oga#t=20" target=audio>test</a><audio id=audio>this will be changed</audio>

[18:25:37.0000] <erlehmann>
<audio nam=audio> would it have to be

[18:25:39.0000] <erlehmann>
name

[20:23:55.0000] <erlehmann>
html5 table parsing annoys me

[22:07:49.0000] <MikeSmith>
Hixie: you got a typo in the "Unstyled XML documents" change

[22:07:56.0000] <MikeSmith>
http://html5.org/r/7525

[22:08:07.0000] <MikeSmith>
"and thes a user agent following these requirements"

[22:08:12.0000] <Hixie>
thanks

[00:33:59.0000] <zcorpan>
erlehmann: if you read logs, webvtt doesn't support links, but you can use metadata kind and have custom captions. also <audio> doesn't have a name attribute, nor is it a browsing context so target="" doesn't work like that

[00:35:21.0000] <zcorpan>
you can have a script that changes src="" though. i guess you could use target that targets an iframe as no-script fallback, if you care

[01:55:37.0000] <annevk>
GPHemsley: font sniffing only happens in font context

[02:09:01.0000] <hsivonen>
/me wonders how sfnt support is actually implemented.

[02:09:27.0000] <hsivonen>
that is, how early does the dispatch to different code paths depending on the type of glyph data occur

[02:10:02.0000] <hsivonen>
i.e., does the sniffer even need to decide beyond 1) WOFF, 2) raw sfnt, 3) neither (reject)

[02:16:47.0000] <annevk>
the data I supplied came from Opera's font guy

[03:30:42.0000] <zcorpan>
i wonder if CfC to publish counts as "process discussions" in html wg

[04:04:56.0000] <Stevef>
zcorpan: yes and they should soon be posted to an admin mailing list see: http://lists.w3.org/Archives/Public/public-html/2012Nov/0079.html

[04:06:15.0000] <zcorpan>
Stevef: ah, so it's not in effect yet

[04:06:41.0000] <Stevef>
the CFC for the mailing list thing gas passed, so should happen soon

[04:07:01.0000] <Stevef>
has passed not gas passed :-)

[04:42:25.0000] <hsivonen>
what mechanism causes Chrome to decode the frame on this page as UTF-8? http://ht.hypertech.com.br/doutorja/

[04:42:34.0000] <hsivonen>
the meta is beyond 1024 bytes

[04:42:53.0000] <hsivonen>
and WebKit isn't supposed to be doing reloading upon seeing a late meta

[04:43:01.0000] <hsivonen>
or do they reload these days?

[04:43:19.0000] <hsivonen>
or have they increased the lookahead from 1024 bytes?

[04:56:47.0000] <annevk>
they might have increased it, I saw there was discussion about that

[04:56:55.0000] <annevk>
no pointer, sorry

[05:24:35.0000] <annevk>
fyi http://annevankesteren.nl/2012/11/copyright-response

[05:24:53.0000] <annevk>
it's nothing new, just trying to be fair

[06:06:40.0000] <annevk>
Anyone opposed to me introducing the term "redispatching"?

[06:06:57.0000] <annevk>
You'll be able to use it to find dom.spec.whatwg.org if you forgot how to type that ;)

[06:09:15.0000] <smaug____>
AryehGregor: ping

[06:10:14.0000] <smaug____>
/me tries to recall if we handle PI in ranges like comment/text on purpose

[06:10:36.0000] <smaug____>
(in Gecko)

[06:14:02.0000] <annevk>
I think the idea was to make PI just another CharacterData thingie

[06:14:11.0000] <smaug____>
yeah

[06:14:19.0000] <smaug____>
I can't find the right bug now

[06:14:23.0000] <annevk>
with some minor exceptions that is already largely the case

[06:14:31.0000] <annevk>
in most implementations

[06:14:34.0000] <smaug____>
Didn't help that I was trying to search for Mozilla bug using W3C bugzilla :)

[06:17:40.0000] <annevk>
I kinda wish I could just search through W3C/Mozilla/WebKit/radar:/Opera/IE/Chromium all at once

[06:17:50.0000] <annevk>
Unfortunately I can only search through some of those, and have to find the correct URL

[06:28:48.0000] <darobin>
annevk: I don't know if it's exposed systematically, but bugzilla has an API

[06:29:03.0000] <darobin>
it should be possible to address at least those collectively

[06:32:25.0000] <annevk>
http://dom.spec.whatwg.org/#dispatching-events is another reason why I favor imperative specifications. So easy to make surgical incisions.

[06:34:02.0000] <darobin>
bah, subjunctive specifications FTW!

[06:34:35.0000] <odinho>
annevk: What is radar:?

[06:35:16.0000] <smaug____>
odinho: Apple's internal bug tracker

[06:35:17.0000] <annevk>
odinho: URL scheme used for referring to issues in Apple's internal bug tracker, presumably used for Safari, but potentially much more

[06:35:38.0000] <annevk>
darobin: learned a new word, yay

[06:36:45.0000] <darobin>
it would be fun to write a spec in the subjunctive

[06:36:51.0000] <darobin>
if this attribute be in error

[06:37:04.0000] <darobin>
were the document invalid, the user agent would...

[06:38:53.0000] <annevk>
if I be as high as kite?

[06:42:07.0000] <JibberJim>
It may well be more readable than your normal specs darobin

[06:42:30.0000] <darobin>
annevk: you're tall, but not that tall

[06:42:39.0000] <darobin>
OMG there are ghosts here

[06:42:53.0000] <annevk>
the real JibberJim?

[06:42:57.0000] <darobin>
JibberJim: it's worth a shot

[06:43:01.0000] <annevk>
been a while

[06:43:12.0000] <darobin>
I wonder if someone has made an automatic subjunctiviser

[06:43:35.0000] <JibberJim>
I am the real me yes... I've found my way out of baby hood and re-entering my previous worlds.

[06:44:03.0000] <darobin>
so you've stopped being a big baby?

[06:44:57.0000] <JibberJim>
Something like that yes :)

[06:46:25.0000] <darobin>
how's Otter?

[06:46:47.0000] <annevk>
time to update http://www.jibbering.com/2002/4/httprequest.html ? :-)

[06:46:48.0000] <darobin>
and how old? like 2 or something by now?

[06:47:06.0000] <JibberJim>
18months is all

[06:47:25.0000] <JibberJim>
What you mean that's not completely up to date and accurate?

[06:47:45.0000] <JibberJim>
anyone would think it was 10 years old

[06:47:53.0000] <darobin>
or http://jibbering.com/nauts/htmlnaut/ :)

[06:48:30.0000] <darobin>
that's some serious DHTML there

[06:48:39.0000] <darobin>
we so should reintroduce the usage of the word DHTML

[06:49:00.0000] <odinho>
darobin: It's been sorely missed (?)

[06:49:27.0000] <darobin>
odinho: I stumbled upon my old copy of the flamingo book last night; the feeling of nostalgia hasn't quite left me

[06:49:45.0000] <JibberJim>
I'll a book "The stupid persons guide to DHTML5" - that should do it

[06:50:29.0000] <odinho>
Oh, DTML5. Marketing will jump on it straight away ;D

[06:51:32.0000] <darobin>
the domain's free

[06:54:07.0000] <annevk>
smaug____: seems unlikely we'll get rid of initCustomEvent right?

[06:55:00.0000] <JibberJim>
/me wonders why he can't find darobin in htmlnaut

[06:55:21.0000] <darobin>
my foaf file probably went offline at some point in ~2006

[06:56:17.0000] <darobin>
I'm waiting for the JSON-LD/microdata/RDFa return of FOAF!

[06:56:18.0000] <JibberJim>
I'm pretty sure I never scuttered since 2003

[06:56:37.0000] <JibberJim>
For ages I didn't even think I had a cache of the data

[06:56:39.0000] <darobin>
in that I ought to be there, I used to be

[06:56:48.0000] <darobin>
*case

[06:56:50.0000] <zcorpan>
darobin: then how do people/non-people know who you are?

[06:57:17.0000] <darobin>
zcorpan: they have fond memories from seeing me dance topless?

[06:57:45.0000] <JibberJim>
You still do that? I may have to leave these circles again

[06:58:34.0000] <annevk>
darobin: if I'm elected to the TAG, I'll make DHTML top priority

[06:58:48.0000] <darobin>
YAY annevk FOR TAG!

[06:59:03.0000] <darobin>
JibberJim: I hadn't done it in a while, but I reinstated it at the last TPAC

[06:59:13.0000] <darobin>
in fact I think I hadn't done it since Enschede

[06:59:27.0000] <odinho>
annevk: You have to make buttons like erikjmoller have done for his employee rep campaign in Opera.

[06:59:55.0000] <zcorpan>
"TAG SUCKS"?

[07:01:17.0000] <annevk>
a whole lot of http://html5.org/temp/unicorn.svg

[07:05:18.0000] <darobin>
can you get D66 endorsement or something?

[07:05:32.0000] <darobin>
maybe we can start a W3C Pirate Party

[07:06:13.0000] <smaug____>
annevk: I think so

[07:07:07.0000] <smaug____>
(at least I'm not going to try it)

[07:07:23.0000] <darobin>
annevk: your TAG nomination has cleared, go fill out https://www.w3.org/2002/09/wbs/1/tagnom-201211/

[07:11:04.0000] <annevk>
darobin: so the IE agreement is scoped to the group right?

[07:11:29.0000] <annevk>
darobin: e.g. I might end up being an IE in the TAG, but would not be automatically in say WebApps

[07:12:19.0000] <darobin>
annevk: yes, I thought of that, you're safe

[07:12:29.0000] <annevk>
k

[07:12:53.0000] <darobin>
W3C pwns all your copyrights for your contributions to the TAG

[07:12:56.0000] <darobin>
MUAHAHAHAHAHAHAHAHAHAHAHAHA

[07:13:05.0000] <darobin>
I'm *so* evil

[07:14:27.0000] <annevk>
I realise that, it's unfortunate but acceptable... http://www.w3.org/2004/10/27-tag-charter.html is kinda whacky though.

[07:14:45.0000] <annevk>
"W3C has adopted an architectural principle that XML should be used for the syntax of Web formats unless there is a truly compelling reason not to"

[07:15:56.0000] <darobin>
oh yeah the charter is a whole barrel laughs

[07:16:00.0000] <zewt>
is that quote from the mid-90s

[07:16:14.0000] <zewt>
heh

[07:16:29.0000] <darobin>
zewt: it feels that way, but actually we didn't have XML in the mid90s

[07:16:57.0000] <darobin>
annevk: it's all a matter of finding "compelling reasons not to"

[07:17:08.0000] <zewt>
simple, "xml is terrible"

[07:17:13.0000] <zewt>
i find that pretty compelling

[07:17:37.0000] <zewt>
i'm not sure i've hit a single legitimate use case for xml since json came around

[07:19:25.0000] <hsivonen>
I feel I have been baited into 386 on a list I don't normally follow: www-international

[07:19:41.0000] <annevk>
darobin: submitted

[07:19:47.0000] <zewt>
math coprocessor y/n

[07:19:50.0000] <darobin>
annevk: wicked cool

[07:19:55.0000] <darobin>
now go campaign!

[07:20:02.0000] <annevk>
hsivonen: my fault I think

[07:20:17.0000] <annevk>
darobin: when is the final day?

[07:20:21.0000] <darobin>
www-international — is that for Web Communism?

[07:20:29.0000] <darobin>
annevk: for nominations? the 30th

[07:20:48.0000] <darobin>
as things currently stand there are five candidates for four seats, so there'll be an election no matter what

[07:20:53.0000] <annevk>
darobin: and then elections until end of December?

[07:20:56.0000] <darobin>
yup

[07:21:01.0000] <darobin>
I forget when they close

[07:21:06.0000] <darobin>
maybe early January

[07:21:15.0000] <darobin>
you should blog about it like slightlyoff did

[07:21:32.0000] <darobin>
also, send some statement of your platform to www-tag

[07:21:56.0000] <darobin>
once you guys do that I can start sending some "Questions to the Candidates" there :)

[07:22:03.0000] <annevk>
will do in December then

[07:22:08.0000] <darobin>
good

[07:22:29.0000] <zcorpan>
hsivonen: which thread?

[07:23:39.0000] <zcorpan>
http://lists.w3.org/Archives/Public/www-international/2012OctDec/0078.html ?

[07:26:13.0000] <zcorpan>
is "In Internet Explorer 5.5 a BOM at the start of a file will cause the page to be rendered in quirks mode" true? http://www.w3.org/International/questions/new/qa-byte-order-mark-new

[07:26:29.0000] <zcorpan>
doesn't IE5.5 only have one mode anyway?

[07:27:35.0000] <zewt>
why is a document intended for this "intended audience" talking about IE5.5? heh

[07:30:15.0000] <JibberJim>
IE 5.5 was very fussy about exactly what it saw to avoid quirks mode - so I suspect the answer is yes

[07:30:33.0000] <JibberJim>
IE 5.5 is my era!  I can still be useful!

[07:30:59.0000] <SimonSapin>
when is the vote?

[07:31:13.0000] <darobin>
SimonSapin: soon

[07:31:24.0000] <darobin>
after the nominations end, it should open pretty quickly

[07:31:27.0000] <darobin>
so early Dec

[07:32:20.0000] <annevk>
smaug____: thanks, guess I'll add a definition for initCustomEvent() then along with some guidelines for specifications defining their own events

[07:35:24.0000] <annevk>
SimonSapin: so for data:, what you want to do is to define a parser (see URL/HTML specs for examples of parsers)

[07:36:17.0000] <annevk>
SimonSapin: the input is "scheme data" + "?" + "query" (currently just "scheme data", but soon "query" will be separate)

[07:36:34.0000] <SimonSapin>
annevk: how does that parser hook into URL ?

[07:37:23.0000] <zcorpan>
JibberJim: i thought quirks/standards was introduced in ie *6*

[07:37:44.0000] <SimonSapin>
apparently the "?" and the query are both part of the "body" of data:,test?test

[07:37:55.0000] <annevk>
SimonSapin: I haven't entirely thought that through yet. What I think we want is that you have a parsed URL object. And then when you fetch it you do URL processing

[07:38:24.0000] <annevk>
SimonSapin: URL processing is scheme-specific and would run this parser, to obtain the resource

[07:39:08.0000] <MikeSmith>
zcorpan: http://www.w3.org/html/wg/wiki/DoctypeSwitching

[07:39:15.0000] <SimonSapin>
so this parser would first append "?" and the query to the string being parsed

[07:40:00.0000] <JibberJim>
zcorpan: I thought it had a seperate rendering mode that matched 4 and itself?   but predates "quirks" and "standards" for sure?

[07:40:47.0000] <zcorpan>
JibberJim: [citation needed] :-P

[07:41:12.0000] <annevk>
SimonSapin: the URL processor takes a URL; if it sees the scheme is data it invokes the data URL processor with schemedata+"?"+query

[07:41:39.0000] <annevk>
SimonSapin: hmm, maybe not exactly like that, but to obtain the message body you need scheme data and query, yes

[07:42:13.0000] <annevk>
SimonSapin: the other thing that is somewhat different from http://tools.ietf.org/html/rfc2397 is that the default encoding is windows-1252

[07:42:46.0000] <SimonSapin>
versus ascii

[07:42:49.0000] <annevk>
yeah

[07:42:55.0000] <annevk>
and things like data:text/html;,%E2%84%A2 do not fail

[07:42:59.0000] <hsivonen>
IE 5.5 had only the mode now known as quirks

[07:43:21.0000] <annevk>
(the specification requires a parameter after ";" which is not how implementations work apparently)

[07:44:06.0000] <annevk>
SimonSapin: you may want to coordinate MIME type parsing with GPHemsley though

[07:44:17.0000] <annevk>
SimonSapin: ideally that's going to be the same parser throughout the whole platform

[07:44:30.0000] <annevk>
SimonSapin: used for HTTP, data URLs, type attribute values, etc.

[07:44:48.0000] <JibberJim>
/me 's memory has let him down :(

[07:44:57.0000] <SimonSapin>
is WHATWG doing HTTP too? :)

[07:47:53.0000] <SimonSapin>
annevk: where should this parser live?

[07:48:42.0000] <annevk>
I rather not do HTTP, but I guess as long as we keep walking into stuff that's undefined or wrongly defined we might as well pick up things...

[07:49:05.0000] <annevk>
SimonSapin: MIME and a data URL spec?

[07:49:09.0000] <SimonSapin>
yes

[07:49:57.0000] <SimonSapin>
where should I send pull requests

[07:50:18.0000] <annevk>
I guess MIME type parsing in MIME (sniffing) and data URLs in their own spec or maybe in URL at some point. For now I'd just sketch it out somewhere, maybe the wiki or your own site

[07:51:04.0000] <SimonSapin>
is there a preprocessor for doing eg. cross-references?

[07:52:12.0000] <annevk>
http://wiki.whatwg.org/wiki/GitHub http://wiki.whatwg.org/wiki/Anolis

[07:54:40.0000] <SimonSapin>
oh, anolis too is using cssselect

[08:10:15.0000] <annevk>
heh, Chrome starts downloading if you enter data:x,

[08:10:24.0000] <annevk>
oh Opera too

[08:11:12.0000] <SimonSapin>
annevk: do they do that for any unknown mime type?

[08:11:32.0000] <annevk>
yeah, though Firefox fails to parse that as a MIME type...

[08:12:10.0000] <SimonSapin>
… and assumes text/plain

[08:12:25.0000] <annevk>
oh yeah, didn't notice that

[08:12:36.0000] <annevk>
browsers suck

[08:13:08.0000] <annevk>
I doubt much of that matters though

[08:17:26.0000] <SimonSapin>
annevk: MIME Sniffing is not about parsing MIME, is it?

[08:17:34.0000] <annevk>
just realised data URLs have a pretty high overhead, they're processed 2 times, and when found in HTML 3 times

[08:18:15.0000] <annevk>
SimonSapin: I think it should be in the end, then we'd just call it MIME

[08:18:20.0000] <SimonSapin>
annevk: I weasyprint I special-case value.startswith('data:') to skip some of the processing

[08:18:20.0000] <annevk>
SimonSapin: not sure how others feel about that

[08:18:36.0000] <annevk>
SimonSapin: case-insensitive match I hope?

[08:18:45.0000] <SimonSapin>
hum… :)

[08:19:15.0000] <SimonSapin>
nope

[08:19:23.0000] <SimonSapin>
should fix that

[08:20:47.0000] <SimonSapin>
annevk: what kind of case-insensitivity? :p

[08:20:49.0000] <annevk>
yeah, I guess you want optimised paths for data: in implementations

[08:21:04.0000] <annevk>
SimonSapin: heh, URL schemes can only be ASCII

[08:21:23.0000] <SimonSapin>
(kidding)

[08:21:43.0000] <annevk>
[dD][aA][tT][dD][:]

[08:22:26.0000] <darobin>
do we know who made Opera's submitted tests for <track>? http://w3c-test.org/html/tests/submission/Opera/media/interfaces/TextTrack/activeCues.html

[08:22:42.0000] <darobin>
I ask 'cause there's a bug being filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=20064

[08:23:20.0000] <annevk>
prolly zcorpan

[08:24:41.0000] <darobin>
canPlayType() isn't exactly great for boolean tests :)

[08:25:49.0000] <SimonSapin>
I subscribed to whatwg⊙wo ~30min ago but did not get the confirmation email

[08:26:53.0000] <JibberJim>
Can I moan about the name of an API that uses CAN but doesn't return a Boolean

[08:27:35.0000] <JibberJim>
/me waits for someone to say "Probably" or "Maybe" in response to that request...

[08:27:36.0000] <darobin>
JibberJim.canIMoan("API") // "probably, maybe"

[08:29:24.0000] <darobin>
I still think that this should have been "possibly", "maybe"; it has a song to it http://www.youtube.com/watch?v=tE11_5Spq1I

[08:29:43.0000] <annevk>
SimonSapin: hmm, check spam maybe? otherwise you need to ask Hixie for help

[08:30:32.0000] <annevk>
JibberJim: you might have to get in line

[08:30:58.0000] <SimonSapin>
annevk: nothing in my mta’s logs

[08:31:53.0000] <annevk>
SimonSapin: meh, maybe try again? I don't really know how long it's supposed to take. I believe instant. Otherwise email Hixie

[08:32:12.0000] <SimonSapin>
"Depending on the configuration of this mailing list, your subscription request may have to be first confirmed by you via email, or approved by the list moderator."

[08:32:20.0000] <SimonSapin>
does it need confirmation?

[08:33:09.0000] <annevk>
maybe not, but http://lists.whatwg.org/listinfo.cgi/whatwg-whatwg.org states "Subscribe to whatwg by filling out the following form. You will be sent email requesting confirmation, to prevent others from gratuitously subscribing you."

[08:34:49.0000] <annevk>
at some point we should organise this a bit less centrally so people besides Hixie can help out

[08:38:15.0000] <GPHemsley>
annevk, SimonSapin: Is parsing a mime type really all that complex? (I mean, I understand reality doesn't match the HTTP spec.) It's just the notion of ignoring spaces and trailing semicolons, right?

[08:39:26.0000] <annevk>
GPHemsley: it's pretty basic

[08:40:12.0000] <annevk>
GPHemsley: you might also want to change it from a byte parser to a code point parser as especially when used in markup languages the input is going to be code points

[08:40:22.0000] <annevk>
(or code units)

[08:40:49.0000] <GPHemsley>
annevk: Are we still talking about the mime type parser?

[08:41:00.0000] <annevk>
uhuh

[08:41:20.0000] <GPHemsley>
I was actually just going to suggest a regex

[08:41:38.0000] <GPHemsley>
Is that not a good idea?

[08:41:38.0000] <zewt>
ew

[08:41:44.0000] <GPHemsley>
oh

[08:41:47.0000] <GPHemsley>
:)

[08:41:57.0000] <zewt>
then you have to normatively depend on the definition of regexes, which is orders of magnitude more complicated :)

[08:42:06.0000] <GPHemsley>
ah, fair point

[08:42:09.0000] <annevk>
regexp and BNF are equivalent in problems

[08:42:18.0000] <darobin>
zewt: bah, just do what XML Schema did and reference "Perl"

[08:42:36.0000] <GPHemsley>
annevk: BNF isn't simpler than regexp?

[08:42:38.0000] <annevk>
oh yeah, lets use XML Schema :)

[08:43:05.0000] <annevk>
GPHemsley: it's different, mostly

[08:44:04.0000] <GPHemsley>
So I should just spell out the parsing step by step?

[08:44:10.0000] <darobin>
<xs:simpleType name='mediaType'><xs:restriction base='xs:string'><xs:pattern value='\w+\/\w+'/></xs:restriction></xs:simpleType>

[08:44:14.0000] <darobin>
there! spec done

[08:44:29.0000] <darobin>
that wasn't so hard was it?

[08:44:36.0000] <annevk>
GPHemsley: yeah

[08:44:37.0000] <darobin>
you bunch of whiny losers

[08:44:52.0000] <annevk>
darobin: you can put that in your W3C copy :p

[08:45:09.0000] <GPHemsley>
darobin: But that doesn't handle parameters ;)

[08:45:19.0000] <darobin>
annevk: ooooh, and we'll *finally* get XML Schema in browsers!

[08:45:33.0000] <annevk>
darobin: i know right

[08:45:43.0000] <darobin>
we've been waiting so long

[08:45:45.0000] <darobin>
GPHemsley: bah

[08:45:57.0000] <darobin>
<xs:simpleType name='mediaType'><xs:restriction base='xs:string'><xs:pattern value='\w+\/\w+(;.*)?'/></xs:restriction></xs:simpleType>

[08:46:27.0000] <GPHemsley>
Well, OK... but you'll want to actually parse the parameter name and value...

[08:47:07.0000] <darobin>
you want to parse stuff with XML Schema? Srsly?

[08:47:24.0000] <darobin>
annevk: I wonder if we should use http://www.w3.org/TR/xmlschema-1/#key-null as an example for <dfn>

[08:47:31.0000] <GPHemsley>
(\w+)\/(\w+)(?:;\s*(?:(\w+)\s*(?:=\s*(\w*))?)?)*

[08:47:41.0000] <GPHemsley>
oh, actually, that's no good

[08:47:46.0000] <zewt>
:|

[08:47:46.0000] <GPHemsley>
(\w+)\/(\w+)(?:;\s*(?:(\w+)\s*(?:=\s*(.*))?)?)*

[08:47:59.0000] <zewt>
<zewt> ew

[08:48:03.0000] <GPHemsley>
yeah

[08:48:29.0000] <GPHemsley>
but that's roughly how I plan to do it

[08:48:31.0000] <zewt>
also handling errors with anything but "fail completely" is hard

[08:48:31.0000] <darobin>
GPHemsley: note that \w doesn't cut it

[08:48:50.0000] <GPHemsley>
darobin: I blame you

[08:49:02.0000] <darobin>
I don't know if they can start with anything other than [a-z], but they can certainly contain . and +

[08:49:25.0000] <GPHemsley>
this was a first approximation :)

[08:49:35.0000] <darobin>
GPHemsley: dude, if you take my XML Schema jokes and put them in your code, really, *really* don't come complaining when things don't work later

[08:50:04.0000] <GPHemsley>
in my original draft of the regex, I had . everywhere

[08:50:42.0000] <GPHemsley>
but just for that, I'm going to include it

[08:50:48.0000] <GPHemsley>
but only for you

[08:51:31.0000] <GPHemsley>
"If user agent is darobin, parse the Content-Type header according to the following XML Schema:"

[08:54:27.0000] <darobin>
haha

[08:54:41.0000] <darobin>
I reckon that's still a bit too simple

[08:54:52.0000] <darobin>
for one, it involves none of SOAP, WSDL, or ASN.1

[08:55:26.0000] <annevk>
needs more WS-*

[09:28:24.0000] <annevk>
well look at that

[09:28:26.0000] <annevk>
back in the day

[09:28:32.0000] <annevk>
http://www.w3.org/Protocols/HTTP/AsImplemented.html timbl published in the public domain

[09:29:37.0000] <annevk>
ooh http://www.w3.org/Policy.html

[09:29:44.0000] <annevk>
"The definition of protocols such as HTTP and data formats such as HTML are in the public domain and may be freely used by anyone."

[09:30:14.0000] <annevk>
sad that got fucked along the way

[09:36:27.0000] <Ms2ger>
Robert Cailliau claims that he could take credit for that, fwiw

[09:42:22.0000] <annevk>
HTTP 0.9 is quite nice btw

[09:42:33.0000] <annevk>
you don't even tell the server it's about HTTP

[09:42:49.0000] <annevk>
just "GET /gimme"

[09:42:58.0000] <annevk>
don't even need a CRLF there

[09:43:03.0000] <Ms2ger>
<annevk> [dD][aA][tT][dD][:]

[09:43:13.0000] <Ms2ger>
/me hadn't heard of the datd: url scheme

[09:43:14.0000] <annevk>
oops

[09:44:43.0000] <SimonSapin>
and now decades of implementations reverse-engineering each other and adding support for datd:

[09:46:43.0000] <annevk>
nah, maybe for about:unicorn

[10:57:14.0000] <GPHemsley>
It's a real shame that nested comments aren't supported in HTML (or any commonly used programming language)

[10:59:42.0000] <zewt>
tricky with typical tokenization methods, iirc

[10:59:55.0000] <GPHemsley>
yeah... but it's still a shame

[10:59:58.0000] <GPHemsley>
Ocaml has it, though

[11:00:35.0000] <GPHemsley>
(which actually turned out to be somewhat problematic when I attempted to create a syntax highlighter for it, given the aforementioned issue)

[11:00:57.0000] <zewt>
vim gets upset with languages that have poor random access

[11:01:15.0000] <zewt>
(though you can increase the search distance, which isn't as big a deal today as it was 15 years ago)

[11:02:39.0000] <GPHemsley>
I was writing it for TextWrangler which, IIRC, used regex

[11:04:25.0000] <GPHemsley>
Of course, on top of the lack of support for nested comments in HTML is the prohibition on '--' within the comment

[11:08:19.0000] <annevk>
yeah, silly SGML legacy

[11:10:58.0000] <zewt>
don't know what the basis for the "--" thing is, since it parses fine and i'm sure is everywhere

[11:11:30.0000] <zewt>
i use dashes not infrequently in english text, so i've probably done it plenty of times myself, heh

[11:14:41.0000] <GPHemsley>
so... there are two types of TTF fonts

[11:14:54.0000] <GPHemsley>
one is an OpenType package, and the other isn't

[11:15:24.0000] <GPHemsley>
I think

[11:23:07.0000] <GPHemsley>
So, if fonts are not sniffed by the browser in the regular browsing context, then likely the only usecase for font sniffing is CSS Fonts, and that would be done specifically.

[11:23:19.0000] <GPHemsley>
Thus, the needs of CSS Fonts are what governs the list of fonts.

[11:23:33.0000] <GPHemsley>
(Just thinking out loud.)

[11:25:06.0000] <GPHemsley>
It's really sad that the first result for something like "css3-fonts" is w3schools instead of the spec itself

[11:30:19.0000] <GPHemsley>
...and according to css3-fonts, in addition to EOT, I should also somehow accommodate SVG fonts

[11:30:20.0000] <GPHemsley>
hmm

[11:31:19.0000] <zewt>
w3schools was one of the first sites i blocked when google's site blocking turned up, heh

[11:31:36.0000] <GPHemsley>
zewt: Oh, where can I find this setting?

[11:31:42.0000] <zewt>
dunno, it's magic

[11:31:53.0000] <zewt>
sometimes it shows up if you view a site then return to the search results, often it just won't show up at all

[11:32:20.0000] <GPHemsley>
ah, found it

[11:32:33.0000] <GPHemsley>
just perform a search and click on the gear

[11:32:36.0000] <zewt>
which is annoying when you hit one of those results where you click the link and it shows a popover "pay us money to see all of the answers!" and you go back and google won't let you block them

[11:32:37.0000] <GPHemsley>
and navigate your way through

[11:33:48.0000] <GPHemsley>
Gear > Search settings > Blocking unwanted results > Block unwanted sites

[11:34:05.0000] <GPHemsley>
/me wonders who else he wants to block

[11:35:19.0000] <GPHemsley>
scumbag css3-fonts says "see Appendix A" but doesn't provide a link to it

[11:35:44.0000] <GPHemsley>
I mean, come on! You want me to scroll to it *manually*?!

[11:36:21.0000] <zewt>
first-world problem go

[11:36:49.0000] <zewt>
start a new youtube series, angry web spec nerd

[11:38:11.0000] <GPHemsley>
heh

[11:39:37.0000] <GPHemsley>
Why hasn't the CSS/Style working group set up an interface to filter mailing list messages by their spec tags?

[11:42:52.0000] <hober>
GPHemsley: that's what your mail client does

[11:43:29.0000] <hober>
GPHemsley: we also have a gmail account that has the entire history of www-style for easier searching

[11:43:35.0000] <hober>
GPHemsley: details are on w3c-css-wg

[11:49:36.0000] <GPHemsley>
hober: I'm not subscribed to the list; I'm just talking about a web interface for searching the archive.

[11:50:28.0000] <GPHemsley>
because otherwise, if I use the regular search, it will attempt to weight results based on relevance

[11:51:00.0000] <GPHemsley>
when all I want is the existing archive format, but with a filter to only show the messages related to a particular spec

[11:51:22.0000] <hober>
yeah, that's a general problem with the w3c mailing list archive ui

[11:51:22.0000] <GPHemsley>
(where existing = sort by thread, subject, author, date, etc.)

[11:51:30.0000] <hober>
same problem with, say, public-webapps

[11:51:47.0000] <Ms2ger>
/me decides against replying to weird Glenn

[11:52:45.0000] <GPHemsley>
hober: It's probably a problem with mailman itself, no?

[11:53:03.0000] <GPHemsley>
for some definitions of "problem"

[11:57:21.0000] <GPHemsley>
/me files a feature request against Mailman

[12:11:57.0000] <GPHemsley>
https://bugs.launchpad.net/mailman/+bug/1082495

[12:18:11.0000] <GPHemsley>
gee, I sure hope the W3C actually uses Mailman

[12:21:44.0000] <Ms2ger>
Hypermail?

[12:21:55.0000] <GPHemsley>
I have no idea

[12:22:13.0000] <GPHemsley>
but I just used the www-style mailing list in my examples in that Mailman bug

[12:22:37.0000] <GPHemsley>
shoot, you're right

[12:22:40.0000] <GPHemsley>
argh

[12:23:39.0000] <GPHemsley>
oh, hmm

[12:23:39.0000] <GPHemsley>
" Hypermail is a free (GPL) program to convert email from Unix mbox format to html. "

[12:23:39.0000] <GPHemsley>
/me is suddenly realizing he knows very little about how mailing lists and mailing list archives work

[12:35:01.0000] <GPHemsley>
"NOTE: The Apple specification for TrueType fonts allows for 'true' and 'typ1' for sfnt version. These version tags should not be used for fonts which contain OpenType tables."

[12:35:01.0000] <GPHemsley>
Mozilla does have code that mentions those, but it's not clear to me how far they go to support them.

[12:35:01.0000] <GPHemsley>
I feel like they should probably be included, though.

[12:35:15.0000] <GPHemsley>
(They are what differentiate a TrueType font from an OpenType font with TrueType outlines, IIUC.)

[14:02:08.0000] <Hixie>
anyone know off-hand who implements script crossorigin?

[14:02:55.0000] <Hixie>
aha, webkit and gecko, according to bz

[14:33:17.0000] <Hixie>
there's really no way to do the "inner shadow" effect here using canvas, huh http://i.imgur.com/Sy4xM.png

[14:35:48.0000] <zewt>
not that i've ever thought of

[14:36:04.0000] <zewt>
not sure what photoshop's algorithm is

[14:36:23.0000] <SimonSapin>
re subscribing to whatwg⊙wo: the confirmation message took a few hours, but eventually arrived

[14:36:35.0000] <Hixie>
SimonSapin: excellent

[14:36:53.0000] <Hixie>
zewt: presumably, draw shadow on top and clip to shape

[14:40:35.0000] <zewt>
well that's how real inner shadow is, i think, but isn't that inner glow rather than inner shadow

[14:42:29.0000] <zewt>
yeah it is

[14:42:32.0000] <zewt>
not a shadow at all

[14:46:04.0000] <Hixie>
what's the difference?

[14:46:12.0000] <zewt>
https://zewt.org/~glenn/shadow.png FWIW these are the photoshop effects by name, which is probably the most common way people know them

[14:46:49.0000] <zewt>
outer shadow just takes the image, blurs it by some amount, then offsets it by some amount; trivial to do

[14:47:14.0000] <Hixie>
what's the difference between shadow and glow other than the offset and blur radius?

[14:48:40.0000] <zewt>
hmm, i'm not quite sure, to be honest

[14:48:53.0000] <zewt>
most of the time i'm using them i'm just fiddling with knobs in photoshop and i haven't tried reverse engineering their effects

[14:49:49.0000] <zewt>
outer shadow does look similar to outer glow if i set distance (the offset) to 0 and increase the spread (blur amount) by a lot

[14:50:13.0000] <gsnedders>
The difference is to do with light bleeding.

[14:50:47.0000] <Hixie>
i don't know how to interpret those words in this context

[14:51:55.0000] <gsnedders>
The light blurs over the darker part, not the other way around.

[14:52:05.0000] <gsnedders>
Typically approximated using a Gaussian blur

[14:52:39.0000] <Hixie>
what light

[14:52:52.0000] <Hixie>
i'm very confused

[14:53:09.0000] <gsnedders>
http://en.wikipedia.org/wiki/Glow_(shader_effect)

[14:55:23.0000] <zewt>
pretty sure ps glow and shadow are only based on the opacity, not brightness

[14:55:48.0000] <gsnedders>
Dunno, I tend not to use such things myself. :)

[14:55:56.0000] <zewt>
(what gets blurred over what being the blend mode, which is orthogonal)

[14:58:41.0000] <SimonSapin>
I don’t know about canvas, but CSS has inner box-shadow

[14:59:36.0000] <SimonSapin>
it’s described as a gaussian blur

[15:00:36.0000] <zewt>
i guess the basic math is to invert the opacity, so you get a layer that's opaque where the original image is transparent; blur that layer by some amount; then blit the result onto the image, clipped by the original image's opacity

[15:01:19.0000] <zewt>
dunno why that wasn't intuitive to me before

[15:03:30.0000] <zewt>
maybe the only actual difference between shadow and blur in PS is exposing different knobs

[15:17:47.0000] <zewt>
https://zewt.org/~glenn/shadow2.png yeah, it's a shadow of the inversion of the layer, not just putting the shadow on top

[15:36:28.0000] <zewt>
i guess that's equivalent to just inverting the shadow after blurring (why is this unintuitive to me? it's not like i haven't implemented shadows and blurs a zillion times)

[15:55:00.0000] <Hixie>
oh!

[15:55:04.0000] <Hixie>
well then you _can_ do it on canvas


2012-11-24
[16:01:38.0000] <annevk>
GPHemsley: I still don't think you should accommodate EOT

[16:02:40.0000] <annevk>
SimonSapin: ah, good to know about subscribing, guess we should mention that somewhere

[16:04:54.0000] <Hixie>
http://software.hixie.ch/utilities/js/canvas/ (and hit download) -- pretty inner shadow

[16:05:02.0000] <SimonSapin>
annevk: might be a temporary issue, I don’t know

[16:05:14.0000] <annevk>
GPHemsley: fwiw, I think if you use <li><p> more often you might get better visual results

[16:10:09.0000] <annevk>
thanks abarth and Hixie

[16:10:31.0000] <annevk>
I guess I will reply to the public-webapps thing again, but later, prolly a "work day"

[17:32:42.0000] <GPHemsley>
annevk: What's wrong with the visual results I'm currently getting?

[01:03:36.0000] <annevk>
MikeSmith: the problem with the URL tests looks like the opposite problem to me

[01:03:38.0000] <annevk>
MikeSmith: "assert_equals: expected "http://192.168.0.257" but got "http://192.168.0.257/""

[01:03:48.0000] <annevk>
MikeSmith: so they expect without slash, but get one

[01:04:16.0000] <MikeSmith>
yeah I realize that

[01:04:41.0000] <MikeSmith>
so I changed them so that the original does have a slash

[01:05:06.0000] <MikeSmith>
and then the result still has the slash too

[01:05:14.0000] <annevk>
okay

[01:05:44.0000] <annevk>
these tests do indeed seem quite WebKit specific

[01:05:58.0000] <annevk>
"http://go\@ogle.com" expects the slash to disappear apparently...

[01:06:04.0000] <annevk>
euh, backslash

[01:07:16.0000] <MikeSmith>
btw do you have any clue why most of those tests don't get run at all in Opera?

[01:11:55.0000] <MikeSmith>
the changes I made are at https://github.com/sideshowbarker/url-testing/commit/fde8c0b7690a4f04d93d83c959864487b2ef6ade

[01:12:41.0000] <annevk>
not sure

[01:15:31.0000] <annevk>
omg CPU heating up like mad

[01:35:23.0000] <MikeSmith>
annevk: anyway maybe the spec should actually say that for pathless URLs a slash gets appended

[01:35:38.0000] <MikeSmith>
since that seems to be what browsers actually do

[01:36:35.0000] <annevk>
MikeSmith: the spec does

[01:36:43.0000] <MikeSmith>
oh

[01:36:54.0000] <MikeSmith>
so the test cases were wrong anyway, then

[01:37:22.0000] <annevk>
see http://url.spec.whatwg.org#concept-url-serializer

[01:37:32.0000] <MikeSmith>
/me reads

[01:37:38.0000] <annevk>
'Append "/" concatenated with the strings in url's path (including empty strings), separated from each other by "/" to output.'

[01:38:17.0000] <MikeSmith>
ah OK

[01:48:00.0000] <annevk>
GPHemsley: mostly better margins, especially with that table it looks rather ugly currently

[01:50:04.0000] <annevk>
I guess eventually progress events should move to Fetch

[01:50:40.0000] <annevk>
I should start make a set of notes on Fetch

[02:19:15.0000] <alFReD-NSH>
Hi, I have an idea for protection against XSS in HTML. It would be nice if we could set an attribute on an Element, and that would stop any children from executing any `script` element. Is there any proposal similar to this?

[02:28:23.0000] <MikeSmith>
alFReD-NSH: you know about Content Security Policy?

[02:29:17.0000] <MikeSmith>
instead of using markup in the document, you add an HTTP header

[02:30:28.0000] <MikeSmith>
see http://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-1.0-specification.html#sample-policy-definitions

[02:31:10.0000] <MikeSmith>
simplest case is you just send the "Content-Security-Policy: default-src 'self'" header

[03:38:26.0000] <MikeSmith>
it turns out that in the outline algorithm the steps that say to create an implied heading are actually pointless

[03:39:51.0000] <MikeSmith>
because the only part of the algorithm that checks to see if any implied heading has been created is a part that says, "if the heading of the last section of the outline of the current outlinee is an implied heading"

[03:40:18.0000] <MikeSmith>
and that could just as well be handled by not creating implied headings to begin with

[03:40:57.0000] <MikeSmith>
in which case a section that has no heading in the source will just have no heading in the outline

[03:41:39.0000] <MikeSmith>
and so that step could just be changed to read, "if the heading of the last section of the outline of the current outlinee has no heading"

[03:42:27.0000] <MikeSmith>
I know because that's the way I have it implemented

[03:42:29.0000] <MikeSmith>
and it works

[03:42:58.0000] <MikeSmith>
the whole "create an implied heading" adds nothing except additional confusion

[03:56:40.0000] <annevk>
is "implied heading" not something you want to show in the outline?

[04:01:31.0000] <MikeSmith>
sure it is

[04:02:14.0000] <MikeSmith>
but for the step of showing the outline, if a section has no heading, then you just show "implied heading"

[04:02:41.0000] <MikeSmith>
or whatever text -- e.g., "[untitled article element]"

[04:03:36.0000] <MikeSmith>
the action of building the outline does not need to do that in order for the action of showing it to be able to display something there

[04:04:55.0000] <MikeSmith>
and there's never any case where the algorithm doesn't say to add an implied heading for a heading-less section

[04:05:15.0000] <MikeSmith>
so having no heading and having an implied heading are exactly the same in practice

[04:08:10.0000] <annevk>
ah k

[04:17:24.0000] <annevk>
out of curiosity given relative reference "" (the empty string) and base URI "http://x", how does http://tools.ietf.org/html/rfc3986#section-5.2.2 lead to a target URI "http://x/"?

[04:18:00.0000] <annevk>
R.path is "" and therefore T.path becomes Base.path (which is empty) and that's that

[04:20:52.0000] <annevk>
oh well, it's obsolete now

[04:41:05.0000] <MikeSmith>
annevk: I notice that some of the expected results in Chris's URL tests are different than the expected results in the WebKit URL tests

[04:42:41.0000] <annevk>
MikeSmith: well the spec does not match WebKit either so I guess that makes sense

[04:43:08.0000] <MikeSmith>
yeah but I think some of them neither match the spec nor match WebKit

[04:43:44.0000] <annevk>
oh okay, I guess you could patch those?

[04:44:03.0000] <annevk>
if you want me to take a look at specific cases you could leave them here, I gotta go for a bit but I can check later

[04:44:19.0000] <annevk>
I was hoping to get to testing in a few weeks, but maybe I should move that around if there's interest now

[04:44:27.0000] <annevk>
ttyl

[04:44:35.0000] <MikeSmith>
hai

[04:44:43.0000] <MikeSmith>
go/@ogle.com is one case I noticed

[07:21:45.0000] <Ms2ger>
jgraham, ping

[07:26:51.0000] <annevk>
MikeSmith: http://go/@ogle.com -> http://go/@ogle.com/

[07:27:08.0000] <MikeSmith>
ok

[07:27:36.0000] <MikeSmith>
annevk: Chris's expected result for that is http://go⊙oc

[07:27:43.0000] <MikeSmith>
for some reason that I don't understand

[07:27:54.0000] <Ms2ger>
/me assumes "a mistake"

[07:28:01.0000] <MikeSmith>
prolly so

[07:28:12.0000] <annevk>
maybe the regular expression in STD 66 gives something else?

[07:30:47.0000] <annevk>
hmm, looks like just a mistake

[07:47:44.0000] <MikeSmith>
I'll file a bug for it later

[07:47:51.0000] <MikeSmith>
right now, shochu time

[07:48:29.0000] <MikeSmith>
btw, I believe I now have a conforming implementation of the outline algorithm in the server-side code for the validator

[07:48:45.0000] <MikeSmith>
available for testing at http://qa-dev.w3.org:8888/

[07:49:13.0000] <MikeSmith>
I had earlier implemented something that generated it on the client side

[07:49:24.0000] <MikeSmith>
and the results look the same as what I had there before

[07:50:06.0000] <MikeSmith>
bot now the client-side code is gone and what you see there is generated on the server

[07:50:42.0000] <MikeSmith>
next thing I plan to add when I have time is a way for users to filter out certain error messages

[07:51:06.0000] <MikeSmith>
a la http://validator.keegan.st/

[07:55:55.0000] <annevk>
MikeSmith: I just noticed we have a URL component under the WebAppsWG as well

[07:56:16.0000] <annevk>
MikeSmith: should I move all those bugs and will you then nuke that component or do you have a different preference?

[07:56:50.0000] <zewt>
firefox's "different by design" slogan is pretty embarrassing, heh

[07:59:33.0000] <zewt>
really the entire download page is painful

[08:01:58.0000] <annevk>
Is there a bug on updating HTML to use the URL spec?

[08:05:59.0000] <[tm]>
annevk:  can't recall if there is a bug for that yet

[08:06:17.0000] <[tm]>
maybe an old one, for the old draft

[08:06:52.0000] <[tm]>
about the WebApps bugs, yeah lets move them

[08:07:52.0000] <[tm]>
either you can our I still later when I get back to my work cave

[08:09:17.0000] <annevk>
[tm]: https://www.w3.org/Bugs/Public/buglist.cgi?product=WebAppsWG&component=URL&resolution=--- is now empty

[08:09:46.0000] <annevk>
[tm]: https://www.w3.org/Bugs/Public/buglist.cgi?product=WHATWG&component=JavaScript can be removed too, matjas uses GitHub instead

[08:12:41.0000] <[tm]>
ok

[08:23:47.0000] <jgraham>
Ms2ger: Pong

[08:24:49.0000] <jgraham>
Ms2ger: I saw your patch and it's kind of OK, but I don't really understand why it's needed. Seems like timeout() should only do something if explicit_timeout is set, which means that timeout_length should be null. In theory.

[08:32:45.0000] <Hixie>
anyone up to date on srcset implementations?

[08:36:03.0000] <annevk>
hmm, no open bugs on HTML's public suffix list comparisons being wrong

[08:36:46.0000] <annevk>
apparently public suffix list uses Unicode rather than the ASCII representation of domains

[08:45:50.0000] <annevk>
Hixie: do you want a bug for the URL stuff

[08:50:24.0000] <GPHemsley>
Apparently Mozilla just got the memo this week that WHATWG standards are on GitHub and the Specs todo wiki page exists

[08:51:35.0000] <Hixie>
annevk: sure

[08:51:38.0000] <Hixie>
GPHemsley: oh?

[08:51:58.0000] <GPHemsley>
Hixie: https://wiki.mozilla.org/Firefox/Planning/2012-11-21#Standards

[08:52:21.0000] <annevk>
looks like they read my blog then :)

[08:52:52.0000] <GPHemsley>
ah

[09:10:51.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=20072

[09:36:11.0000] <Ms2ger>
jgraham, well, I kinda need timeout() to end up calling my completion callback

[09:39:11.0000] <annevk>
odinho: btw, re the userinfo thing

[09:39:17.0000] <annevk>
odinho: we want to preserve :

[09:39:41.0000] <annevk>
odinho: so http://user:@x/ should serialize as such

[09:40:27.0000] <annevk>
odinho: so http://:@x/ too, only in http://@x/ gets @ removed because there's no corresponding component

[09:42:24.0000] <Velmont>
So //:@x/ would indeed trigger the "has userinfo" part? And thus fail in redirect?

[09:50:19.0000] <annevk>
yes

[09:51:09.0000] <annevk>
curious edge case: //\t@/ \t is ignored by the parser

[09:51:25.0000] <annevk>
parser also ignores newlines, but you cannot use those in HTTP :)

[09:51:37.0000] <annevk>
I'm guessing \t is okay

[09:54:19.0000] <tantek>
Don't know about \t but @t is okay.

[09:55:21.0000] <annevk>
heh, I was using \t as a shorthand for 0x09

[09:55:34.0000] <annevk>
btw http://wiki.whatwg.org/wiki/URL#Schemes

[09:58:21.0000] <annevk>
http://lists.w3.org/Archives/Public/public-script-coord/2012OctDec/0173.html

[09:58:40.0000] <annevk>
"We've interested in any and all feedback. In particular, if there are any Web API object features that can not be expressed in terms of the new MOP." I'm guessing document.all!

[09:59:03.0000] <Hixie>
or Window, probably

[10:00:21.0000] <annevk>
I feel this is somewhat backwards though, shouldn't they have gone through some effort to identify areas?

[10:03:30.0000] <Hixie>
annevk: what makes you say they didn't?

[10:04:57.0000] <annevk>
I would have expected them to have stated they looked if they had and conclude with "if there's anything we've overlooked, please let us know!"

[10:05:12.0000] <annevk>
but yeah, maybe they have

[10:09:18.0000] <tantek>
"Meta-Object Protocol" ?!? oh dear.

[10:17:36.0000] <Hixie>
annevk: eh, i often don't mention that since it's obvious :-)

[10:18:08.0000] <tantek>
annevk - re: http://wiki.whatwg.org/wiki/URL#Schemes, since you've explicitly included the "mailto" scheme, are various IM schemes in scope, e.g. "aim", "xmpp", "ymsgr", "msnim", "skype" (examples documented here: http://microformats.org/wiki/hcard-examples#AOL_Instant_Messenger_.28AIM.29 ) ? and telephony, e.g. tel:, fax:, callto: ? and the latest fun one is geo: RFC5870.

[10:19:41.0000] <annevk>
Hixie: guess I'm still somewhat skeptical about TC39, although it seems it's getting better

[10:21:40.0000] <annevk>
tantek: so yeah, I guess so

[10:23:34.0000] <annevk>
tantek: kinda depends on how we end up specifying all this. E.g. if you XHR() a skype URL, results in no resource, and then results in a network error

[10:47:11.0000] <jgraham>
Ms2ger: But do you set explicit_timeout in your testharnessreport.js?

[10:47:58.0000] <Ms2ger>
Doesn't look like it, is that new?

[10:48:45.0000] <annevk>
tantek: updated http://wiki.whatwg.org/wiki/URL#Schemes

[10:54:31.0000] <jgraham>
Ms2ger: I thought it was added because you asked for it

[10:54:40.0000] <Ms2ger>
Oh, heh

[10:55:07.0000] <jgraham>
I thought the idea was that you would disable the timeout in testharness.js and mochikit would call timeout() or something

[10:55:18.0000] <jgraham>
*mochitest

[10:56:55.0000] <Ms2ger>
We've got "timeout": 1000000

[10:59:28.0000] <jgraham>
Oh

[10:59:38.0000] <jgraham>
Well yeah, that won't work

[11:02:07.0000] <jgraham>
Ms2ger: I have no idea how to set r+ on bugzilla, but if I did I would

[11:02:36.0000] <Ms2ger>
Change the select on https://bugzilla.mozilla.org/attachment.cgi?id=684870&action=edit :)

[11:03:17.0000] <jgraham>
Maybe I don't have enough permissions?

[11:03:39.0000] <jgraham>
(I don't see a select)

[11:03:44.0000] <Ms2ger>
Mm, possibly

[11:04:53.0000] <jgraham>
/me comments

[11:47:29.0000] <tantek>
annevk, ok, cool. and "geo" ? http://tools.ietf.org/html/rfc5870

[11:48:12.0000] <annevk>
tantek: I guess that would end up like mailto

[11:48:51.0000] <tantek>
sort of. "geo" is descriptive, like a noun. whereas in practice, "mailto:" is more like an an action, like "open a new message to"

[11:49:31.0000] <tantek>
all the IM/telephony/email URLs are implemented as actions

[11:49:31.0000] <annevk>
tantek: in the end though, the first list is what matters, if it's not part of the first list, it's going to be handled externally

[11:49:47.0000] <tantek>
ok cool. didn't know if the distinction mattered for this spec.

[11:51:45.0000] <annevk>
I think what mostly matters is whether the URL maps to a resource (a bag of bits as Hixie calls it)

[11:53:08.0000] <tantek>
geo: is like data: in that respect then

[11:53:17.0000] <tantek>
it maps to a bag of coordinates bits

[11:54:32.0000] <annevk>
no it isn't

[11:54:59.0000] <annevk>
geo does not represent something that has a MIME type

[11:55:21.0000] <tantek>
hmm - though the RFC does liken it to mailto: "Accessing information about a particular location or triggering further services shouldn't be any harder than clicking on a 'mailto:' link and writing an email straight away."

[11:59:04.0000] <tantek>
a geo URL "identifies a physical location rather than a network resource"

[11:59:36.0000] <tantek>
from: http://tools.ietf.org/html/rfc5870#section-9

[12:05:06.0000] <SimonSapin>
I’m writing an algorithm in English for css3-page that has lots of nested "if"s. How should I mark it up?

[12:06:07.0000] <SimonSapin>
I’m not satisfied with the presentation of http://dev.w3.org/csswg/css3-page/#margin-dimension and I’m rewriting the content anyway

[12:07:04.0000] <annevk>
SimonSapin: using <ol> might help a lot

[12:09:46.0000] <SimonSapin>
annevk: ok for <ol> instead of <ul>. Great for a sequence of steps. Would you use the same for a set of exclusive conditions? Eg. "if foo, <nested block> Otherwise, if bar, <nested block>"

[12:10:46.0000] <annevk>
depends on if there's more steps I suppose

[12:11:02.0000] <annevk>
if it's just two steps I might if it helps for clarity, otherwise just two paragraphs

[12:11:25.0000] <SimonSapin>
two paragraphs inside a <li> ?

[12:11:39.0000] <Yuhong>
annevk: Killing EOT support from IE from what modes?

[12:14:29.0000] <annevk>
Yuhong: all

[12:14:47.0000] <annevk>
SimonSapin: uhuh, <p> is your friend

[12:15:08.0000] <Yuhong>
annevk: Sometime MS does do this, but they don't take it lightly:

[12:15:16.0000] <Yuhong>
http://blogs.msdn.com/b/ie/archive/2012/06/04/legacy-dx-filters-removed-from-ie10-release-preview.aspx

[12:15:43.0000] <annevk>
Yuhong: aligning browsers is a long term goal, I don't expect immediate compliance

[12:16:17.0000] <Yuhong>
annevk: But why features in one browsers that don't exist at all in other browsers matter?

[12:17:26.0000] <annevk>
Yuhong: if that browser gets a dominant market position the other browsers will be forced to reverse engineer the proprietary features as they will get more wide deployment (see NN4, IE6, "mobile" WebKit)

[12:19:56.0000] <Yuhong>
annevk: Anyway, if you get appointed to the TAG, I suggest working on this: http://www.w3.org/wiki/Evolution

[12:20:31.0000] <Yuhong>
annevk: As I said before, it will help to prove that the W3C process and spec versioning is flawed.

[12:22:35.0000] <Ms2ger>
SimonSapin, depending on what kind of if, maybe a dl?

[12:23:07.0000] <SimonSapin>
Ms2ger: it’s the big nested list in http://dev.w3.org/csswg/css3-page/#margin-dimension

[12:23:51.0000] <SimonSapin>
<ol> is interesting, to be able to talk about "case 3.1.2 of the algorithm"

[12:24:46.0000] <Yuhong>
annevk: And on the Encoding Standard and IE, I think IE is pretty close already.

[12:25:05.0000] <Yuhong>
annevk: Do anyone really care that IE don't support JIS X 212 at this point?

[12:26:13.0000] <Yuhong>
annevk: In fact many of the encodings itself comes from IE.

[12:28:27.0000] <Yuhong>
"(see NN4, IE6, "mobile" WebKit)" Actually, it is NN1-3, IE 4-5, and yea mobile WebKit.

[12:29:12.0000] <Ms2ger>
SimonSapin, IMO, the 40-something em max-width is too small if you actually write things out

[12:29:38.0000] <annevk>
SimonSapin: any kind of list of steps really has to be <ol> imo

[12:30:44.0000] <Yuhong>
NN4 and IE6 was when the browsers began to stagnate.

[12:30:50.0000] <Yuhong>
And became a boat anchor.

[12:31:07.0000] <SimonSapin>
Ms2ger: Do you mean the max-width on body? That’s in all CSS EDs…

[12:31:24.0000] <Ms2ger>
SimonSapin, yeah, but most CSS EDs don't specify much

[12:31:31.0000] <Yuhong>
And even now, IE9 is not available for XP, causing IE8 to be another boat anchor.

[12:31:44.0000] <Yuhong>
Causing problems for things like XHTML (remember polyglot?).

[12:31:50.0000] <Ms2ger>
It works fine with short paragraphs that just hand-wave a bit

[12:33:13.0000] <Yuhong>
And DOM level 2, which is probably why jQuery 2.0 is not supporting IE8.

[12:33:50.0000] <SimonSapin>
Ms2ger: It’s currently at 50em and I think that more would be harder to read, but that’s not what I’m interested in right now

[12:34:18.0000] <Yuhong>
To be honest, XP was in extended support by the time IE9 was released.

[12:34:29.0000] <Ms2ger>
SimonSapin, and 70px+2em padding ;)

[12:34:41.0000] <Yuhong>
And IE9 required a platform update to work on Vista and IE10 requires a platform update to work on Win7.

[12:35:28.0000] <SimonSapin>
annevk: I see your point about <ol> and sequential steps, but I already use it for "branching"

[12:35:55.0000] <SimonSapin>
Ms2ger: Ok. But still not interested :p

[12:36:22.0000] <Yuhong>
And this reminds me that people often use the term "standard compliance" when "boat anchor" is meant.

[12:36:54.0000] <Ms2ger>
SimonSapin, sure, but that was the first thing that got my way when I looked at it ;)

[12:37:51.0000] <SimonSapin>
Ms2ger: you could ping fantasai about restyling specs

[12:38:14.0000] <GPHemsley>
/me is not a fan of numbered "otherwise" steps.

[12:38:18.0000] <Ms2ger>
Maybe I should use the geocities one instead :)

[12:38:49.0000] <GPHemsley>
Numbered steps should be self-contained, IMO.

[12:39:23.0000] <SimonSapin>
geocities.css has max-width on body too

[12:39:48.0000] <Ms2ger>
Foiled again

[12:42:19.0000] <SimonSapin>
GPHemsley: My algo has a "tree" of conditions, and only leaves have steps

[12:43:21.0000] <SimonSapin>
Numbering the steps is not that interesting. There are not many in one given leaf and they are close together

[12:56:22.0000] <GPHemsley>
SimonSapin: By "tree", you mean if/otherwise?

[12:56:32.0000] <GPHemsley>
if/elseif/otherwise

[12:56:36.0000] <GPHemsley>
or whatever

[13:08:40.0000] <SimonSapin>
GPHemsley: yes

[13:09:03.0000] <GPHemsley>
SimonSapin: And by "leaves", you mean...?

[13:10:09.0000] <SimonSapin>
each elsif contains either a nested series of if/elseif/else (a subtree) or a sequence of steps (a "leaf")

[13:15:48.0000] <GPHemsley>
SimonSapin: So... <li><p>if x, do: <ol></ol></p><p>elseif y, do: <ol></ol></p><p>otherwise, do: <ol></ol></p></li> ?

[13:15:52.0000] <GPHemsley>
(or thereabouts)

[13:20:19.0000] <SimonSapin>
GPHemsley: so your advice is to use <p> for if/else and <ol> for nesting? Even if one <ol> only has one <li> made of if/else?

[13:21:28.0000] <GPHemsley>
SimonSapin: I'm actually just trying to clarify the advice that others have given plus whatever you've done, as I've been trying to avoid "otherwise" clauses for want of how to mark them up. :)

[13:22:14.0000] <SimonSapin>
I can make conditions that happen to be exclusive and not write "otherwise" explicitly

[13:22:25.0000] <SimonSapin>
but that doesn’t solve how to nest them

[13:23:43.0000] <GPHemsley>
SimonSapin: Oh, yeah, that's what I've been doing: Making exclusive ifs

[13:24:43.0000] <GPHemsley>
<li>if x and y, do: <ol></ol></li><li>if x and z, do: <ol></ol></li>

[13:25:23.0000] <GPHemsley>
But perhaps <ul> does work here

[13:25:45.0000] <SimonSapin>
so you do not nest and repeat x as needed?

[13:25:57.0000] <SimonSapin>
What if x is lengthy to describe?

[13:26:00.0000] <GPHemsley>
hmm

[13:26:20.0000] <GPHemsley>
SimonSapin: I've been able to avoid such a situation thus far :)

[13:26:49.0000] <GPHemsley>
hmm

[13:27:00.0000] <SimonSapin>
well, I did not pick the easiest first edit :]

[13:27:24.0000] <GPHemsley>
<li>If x, do: <ol><li>If y, do: <ol></ol></li><li>If z, do: <ol></ol></li></ol></li>

[13:29:04.0000] <GPHemsley>
I have managed to have only a single instance of the word "otherwise" in mimesniff

[13:29:09.0000] <GPHemsley>
and 0 instances of "else"

[13:29:23.0000] <GPHemsley>
" A no-sniff flag, which defaults to set if the user agent does not wish to perform sniffing on the resource and unset otherwise. "

[13:29:43.0000] <SimonSapin>
Looks good.

[13:29:43.0000] <SimonSapin>
And for sequential steps at the inner most level, switch to <p> or keep <ol>?

[13:30:13.0000] <GPHemsley>
But I do recall having gone through extra effort to ensure that the default step come after a bunch of steps that end in "abort these steps" or "return x"

[13:30:41.0000] <GPHemsley>
SimonSapin: Keep <ol> for sequential steps

[13:31:05.0000] <GPHemsley>
sequential steps should always be <ol>

[13:31:14.0000] <GPHemsley>
it's the if/elseif/else markup that's murky

[13:31:39.0000] <GPHemsley>
but if it's just "do x. do y. do z.", that part's clear

[13:32:29.0000] <GPHemsley>
Avoid having more than one instruction per <li>

[13:32:38.0000] <GPHemsley>
(unless it's an abort or similar)

[13:32:47.0000] <GPHemsley>
and FTR, this is all IMO

[13:33:22.0000] <SimonSapin>
your opinion is better than me trying stuff at random :)

[13:33:31.0000] <GPHemsley>
:)

[13:34:22.0000] <SimonSapin>
Markup is settled, back to figuring out the actual algorithm. (Layout is hard.)

[13:34:38.0000] <GPHemsley>
:)

[13:35:36.0000] <GPHemsley>
I have a lot of steps that go "1. x = y; 2. if x is not undefined, abort. 3. x = z; if x is not undefined, abort. ..."

[13:36:20.0000] <GPHemsley>
but I definitely use abort/return in place of if/elseif/else

[13:36:42.0000] <GPHemsley>
don't know if that's good, but it avoids the markup issue

[13:49:40.0000] <annevk>
SimonSapin: not sure what branching is, but any spec algorithm I know uses <ol>

[13:49:59.0000] <SimonSapin>
branching is if/elseif/else

[13:52:04.0000] <annevk>
so I guess what we want is that about/blob/data URLs are treated on equal footing; e.g. if your API allows one of those it should allow the others too

[13:52:17.0000] <annevk>
javascript is a special case, only allowed when okay

[13:52:29.0000] <annevk>
then ws/wss are only allowed in WebSocket

[13:52:52.0000] <GPHemsley>
annevk: Are you splitting URLs up into types? hierarchical, actions, scripting?

[13:52:52.0000] <annevk>
http/https work almost anywhere

[13:53:49.0000] <annevk>
GPHemsley: more like "can be fetched" / "cannot be fetched"

[13:54:17.0000] <GPHemsley>
and you're leaving room for new schemes, right?

[13:54:54.0000] <annevk>
not sure what that means

[14:00:03.0000] <annevk>
What I'm trying to figure out what the best model is for XHR / <img> / <script> / <object> / <iframe> / <svg:image> and anything else that takes a URL, going forward

[14:01:24.0000] <SimonSapin>
annevk: for these anything that can not fetch a resource is an error, isn’t it?

[14:02:26.0000] <SimonSapin>
where "can fetch a resource" means return a sequence of bytes with a content-type

[14:02:42.0000] <annevk>
SimonSapin: yeah, although <iframe> and <object> might be special come to think of it

[14:02:53.0000] <SimonSapin>
how so?

[14:03:00.0000] <annevk>
some stuff goes directly to "fetch", some stuff does "navigate" first

[14:03:05.0000] <annevk>
<iframe> does "navigate"

[14:03:19.0000] <annevk>
<object> might too, not entirely sure

[14:03:19.0000] <SimonSapin>
does "navigate to mailto:" make sense?

[14:03:28.0000] <annevk>
yes, that is what <a> does

[14:03:54.0000] <SimonSapin>
in <iframe> I mean

[14:05:16.0000] <annevk>
seems that depends on the UA

[14:07:57.0000] <SimonSapin>
oh, I remember a story about Android loading tel: URLs in <iframe> which was enough to trigger IMEI magic numbers

[14:08:45.0000] <annevk>
this area has been filled with exploits, which is in part why we should define it more carefully I think

[14:09:10.0000] <SimonSapin>
I don’t see a use case for tel: or mailto: on anything but <a>

[14:09:10.0000] <annevk>
I guess I have to talk with Hixie at some point how to best organise it, for now just defining the processing steps for various schemes is prolly enough work

[14:09:38.0000] <annevk>
SimonSapin: sure, but what if the <a> has a target that points to the <iframe>?

[14:09:59.0000] <annevk>
SimonSapin: in the end all <a> does is manipulate the top-level <iframe> that is not exposed

[14:10:55.0000] <annevk>
SimonSapin: there's something to be said for magic top-level <iframe> and normal <iframe>s to have a different model of course

[14:26:45.0000] <GPHemsley>
annevk: What are the problems with EOT?

[14:27:41.0000] <annevk>
it's a proprietary format

[14:28:02.0000] <GPHemsley>
even given http://www.w3.org/Submission/EOT/ ?

[14:28:14.0000] <annevk>
yeah, because nobody plans to implement it

[14:28:34.0000] <annevk>
you can have all the documentation you want, but if there's just one implementation it's proprietary

[14:28:43.0000] <GPHemsley>
o_0

[14:29:18.0000] <GPHemsley>
Yet another use of "proprietary" that does not coincide with how I understand the word

[14:32:41.0000] <zewt>
"proprietary" just means "owned", it has nothing to do with how many implementations there are

[14:37:05.0000] <annevk>
you can call it something else if you like, substance is the same

[14:37:52.0000] <GPHemsley>
well, not really... because I was looking for reasons as to why nobody plans to implement it

[14:38:15.0000] <annevk>
because we have too much font formats already

[14:38:42.0000] <annevk>
well, woff is getting a new version of sorts I believe, but nobody has plans for EOT

[14:39:29.0000] <GPHemsley>
having "too many already" is far from a substantial reason

[14:40:20.0000] <annevk>
o_O

[14:40:23.0000] <annevk>
nn

[14:40:41.0000] <GPHemsley>
to also have too many image formats, video formats, encodings, ...

[14:40:51.0000] <GPHemsley>
s/to /we /


2012-11-25
[20:17:08.0000] <Hixie>
You are receiving this mail because:

[20:17:09.0000] <Hixie>
You are the assignee for the bug.

[20:17:09.0000] <Hixie>
You are watching the QA Contact of the bug.

[20:17:09.0000] <Hixie>
You are watching someone on the CC list of the bug.

[20:17:09.0000] <Hixie>
You are watching the reporter of the bug.

[20:17:20.0000] <Hixie>
/me . o O ( looks like I have all the bases covered )

[20:45:19.0000] <Hixie>
jgraham: feedback on https://www.w3.org/Bugs/Public/show_bug.cgi?id=16801 would be helpful

[23:32:13.0000] <kennyluck>
hi

[01:35:04.0000] <annevk>
GPHemsley: we do and that's not a reason to add more :-)

[01:35:23.0000] <annevk>
GPHemsley: in fact, for encodings we actively try to remove those from implementations to reduce complexity

[01:35:33.0000] <annevk>
GPHemsley: remove those that can be removed*

[02:12:39.0000] <asmodai>
So coming back to that Chrome / Sony website password saving, seems the HTML has autocomplete="off" which Chrome is honouring.

[02:13:18.0000] <asmodai>
And the other person used Opera which did save it, does that mean Opera's ignoring that part?

[02:45:43.0000] <Stevef>
FYI submitted patch to add <main> to webkit https://bugs.webkit.org/show_bug.cgi?id=103172

[03:57:41.0000] <Ms2ger>
Oh wow

[03:58:02.0000] <Ms2ger>
select.options == select in IE?!

[09:30:21.0000] <GPHemsley>
annevk: My point is, the fact that we have "too many" is not a convincing enough argument. I want to know what the actual flaws in EOT are.

[09:34:08.0000] <Ms2ger>
GPHemsley, you need a stronger case to add a format to the web platform forever than just not seeing obvious flaws

[09:35:46.0000] <GPHemsley>
Ms2ger: EOT is supported by at least one browser and there is a number of content on the Web that uses it. I'm not seeing the distinction between this and many other things that were implemented.

[09:36:24.0000] <Ms2ger>
It's implemented by just one browser, and I haven't heard of pressure on other browsers to implement it

[09:37:50.0000] <Philip`>
/me thought EOT had dodgy patent issues (plus a pretty rubbish specification which consists largely of fragments of C code)

[09:37:59.0000] <GPHemsley>
Ms2ger: But is there not a substantial number of workarounds to serve EOT only to IE?

[09:38:14.0000] <Ms2ger>
Sorry?

[09:38:38.0000] <GPHemsley>
Philip`: Patent issues is one thing; specifications with mostly fragments of C code seem to be pretty common, unfortunately.

[09:38:42.0000] <Ms2ger>
If people serve EOT only to IE, there certainly is no case for other browsers to implement it

[09:39:06.0000] <GPHemsley>
Ms2ger: I know there's a font-face workaround for something about IE; I just don't remember what it is.

[09:39:32.0000] <Ms2ger>
I vaguely seem to remember old IEs didn't understand the format() thingy

[09:39:51.0000] <GPHemsley>
ah

[09:40:10.0000] <GPHemsley>
There's also the fact that EOT is mentioned in css3-fonts

[09:40:39.0000] <Ms2ger>
I hope you don't mind me saying that css3-fonts is quite the dodgy spec :)

[09:41:09.0000] <GPHemsley>
You are free to say whatever you want; I'm just gathering information. :)

[09:41:43.0000] <GPHemsley>
Ms2ger: But could you elaborate?

[09:43:30.0000] <Ms2ger>
Let's say I hope that http://lists.w3.org/Archives/Public/www-style/2012Nov/0305.html isn't representative for the entire spec

[09:44:18.0000] <Ms2ger>
/me sees "Layout engines often convert base character plus combining character sequences into precomposed characters if they exist."

[09:48:40.0000] <GPHemsley>
so your main objection to the spec is that it doesn't actually say what UAs are *supposed to* do, it just says what they *sometimes* do?

[09:49:26.0000] <zewt>
(sounds like a description of some of the worst specs i've had to read)

[09:51:55.0000] <GPHemsley>
hmm... found this: http://novemberborn.net/2008/07/sifr3web-fonts-eot-140

[09:52:58.0000] <GPHemsley>
http://novemberborn.net/2008/07/sifr3web-fonts-eot-140#comment-1097 makes an argument against

[09:54:04.0000] <zewt>
neon green background hurts my eyes

[09:59:43.0000] <GPHemsley>
hmm... there seems to be very little input/discussion about CSS fonts in general

[10:00:12.0000] <GPHemsley>
there is a whole www-font mailing list that basically just gets John Daggett's CCs from www-style

[10:04:51.0000] <GPHemsley>
background on the patent issue: http://lists.w3.org/Archives/Public/www-font/2012JanMar/0013.html

[10:07:01.0000] <GPHemsley>
If anyone is considering registering a new media type, this may help: http://www.w3.org/2002/06/registering-mediatype

[10:09:52.0000] <GPHemsley>
wow, even the IETF mailing list archives are stuck in the past...

[10:32:20.0000] <AryehGregor>
/me seems to have misplaced his editing repo somehow, how did that happen?

[10:32:35.0000] <AryehGregor>
Oh, good, I have a github mirror.

[10:33:22.0000] <AryehGregor>
Yay for DVCS!

[10:33:31.0000] <AryehGregor>
/me doesn't know how the repo on his server vanished, though, WTF

[10:36:01.0000] <AryehGregor>
/me finds it

[10:36:09.0000] <AryehGregor>
/me has not touched this setup in six months and is very confused

[10:37:12.0000] <AryehGregor>
Oh, wow, I forgot how complicated it is to add a lousy test.  Sigh!

[10:37:25.0000] <AryehGregor>
/me leaves it for tomorrow

[10:38:49.0000] <AryehGregor>
Ooh, and the spec is totally broken for this case.  Yay!

[14:00:35.0000] <annevk>
AryehGregor: if you want github.com/whatwg/editing and editing.spec.whatwg.org, let me know

[14:01:28.0000] <annevk>
GPHemsley: basically, we want to support as few features as possible as every feature has quite a big cost

[14:02:37.0000] <annevk>
GPHemsley: since only Microsoft does EOT, just as with their old filters or VML, it's not really gonna happen and will save everyone a bunch of trouble figuring out how it works


2012-11-26
[01:04:05.0000] <jgraham>
Hixie: I have temporarily paged everything to do with the navigation out of my head. And it always takes a distressingly long time to reload. But the generic answer to your question is that if "cancel" means "don't run any further steps in the algorithm", that should be defined. But I don't recall if that was really a safe/correct thing to do, because half-finished steps could leave you with state that needs to be cleaned up

[05:10:48.0000] <zcorpan>
https://bugzilla.mozilla.org/show_bug.cgi?id=815014 - was this supported in spidermonkey before?

[05:14:57.0000] <matjas>
those quotes in comment 1 hurt

[05:18:50.0000] <zcorpan>
seems to me opera, safari, chrome, ie8 all support a.arguments

[05:19:11.0000] <zcorpan>
what does ie9, ie10 do?

[05:20:13.0000] <matjas>
(I don’t have a VM handy to test, and I don’t remember)

[05:21:23.0000] <matjas>
IIRC Firefox supports fn.arguments too but doesn’t make the object === the standard `arguments` object

[05:24:01.0000] <matjas>
/me tests

[05:25:10.0000] <matjas>
confirmed

[05:25:55.0000] <zcorpan>
yeah. then they're just being silly

[05:28:18.0000] <zcorpan>
ie8 seems to throw when doing == or === comparison with arguments or a.arguments

[05:35:23.0000] <matjas>
interesting

[05:37:31.0000] <MikeSmith>
can somebody please enlighten me as to why in Firefox window.hasOwnProperty('localStorage') is false while "'localStorage' in window" is true?

[05:37:31.0000] <zcorpan>
hmm, maybe it only does that for w() in live dom viewer. i get a different result with document.write.

[05:37:59.0000] <zcorpan>
MikeSmith: maybe it's on the prototype?

[05:38:27.0000] <MikeSmith>
ah

[05:38:41.0000] <MikeSmith>
if so that'd explain it I guess

[05:38:46.0000] <zcorpan>
'localStorage' in Window.prototype // true

[05:38:54.0000] <MikeSmith>
aha

[05:39:06.0000] <MikeSmith>
thanks

[05:39:46.0000] <zcorpan>
Window.prototype.hasOwnProperty('localStorage') // i guess it a better test. also true

[05:40:38.0000] <MikeSmith>
yeah that seems better than just doing "'localStorage' in window" I guess

[05:41:10.0000] <MikeSmith>
hmm

[05:41:12.0000] <MikeSmith>
or maybe not

[05:42:21.0000] <MikeSmith>
false in Opera

[05:42:32.0000] <MikeSmith>
and Chrome

[05:42:41.0000] <MikeSmith>
I guess I'll just stick with "'localStorage' in window"

[05:43:25.0000] <MikeSmith>
zcorpan: btw, wondering if you or jgraham might know why most of the tests in http://www.lookout.net/test/url/ don't get run in Operea

[05:43:27.0000] <Ms2ger>
We might end up having to put those properties all on the window object, fwiw

[05:43:30.0000] <MikeSmith>
*Opera

[05:43:39.0000] <MikeSmith>
Ms2ger: ok

[05:43:47.0000] <zcorpan>
Ms2ger: oh? why?

[05:44:06.0000] <Ms2ger>
Did you follow the "var indexedDB" mess?

[05:44:45.0000] <zcorpan>
i recall something about it. i thought the conclusion was that spidermonkey had a bug

[05:45:03.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=770844#c79

[05:45:41.0000] <zcorpan>
so i guess that includes methods, but it's only for window? is that right?

[05:46:04.0000] <zcorpan>
where methods i mean properties that are functions

[05:46:32.0000] <Ms2ger>
I'm not sure

[05:46:46.0000] <Ms2ger>
/me got terribly confused in that discussion

[05:55:15.0000] <zcorpan>
 http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1927 - opera and chrome have open() on the object, safari has it on both the object and the prototype

[05:57:21.0000] <zcorpan>
i guess webidl should special-case the global object, then. wonder if the result is the same in workers...

[06:02:45.0000] <annevk>
I liked that idea of inline workers

[06:02:51.0000] <annevk>
<script type=worker>

[06:06:19.0000] <zcorpan>
postMessage([self.hasOwnProperty('postMessage'), self.__proto__.hasOwnProperty('postMessage')]); // safari: false,true. chrome: false,false. opera: true,false. firefox: false,true

[06:07:05.0000] <zcorpan>
i guess workers' idl are kinda special, or have been, at least

[06:12:45.0000] <annevk>
I wonder if you can attribute this mess to not directly specifying things in terms of JavaScript

[06:13:54.0000] <Ms2ger>
You can attribute it to not really specifying things :)

[06:14:39.0000] <Ms2ger>
I doubt the situation would be better even if the Old People had gone for JS-only specs

[06:20:42.0000] <annevk>
maybe if TC39 defined all the things?

[06:24:40.0000] <Ms2ger>
Like __definePropery__, eh?

[06:27:43.0000] <zcorpan>
turns out the prototype chain is deeper in workers in various browsers

[06:29:02.0000] <Ms2ger>
Didn't the spec used to do something weird there too?

[06:29:07.0000] <zcorpan>
yes

[06:30:31.0000] <zcorpan>
firefox seems like closest to the spec, but it has two DedicatedWorkerGlobalScope. i don't think the spec has that

[06:31:03.0000] <zcorpan>
or wait, i'm confused

[06:31:22.0000] <zcorpan>
the object and the prototype both get stringified to [object DedicatedWorkerGlobalScope] in firefox

[06:31:39.0000] <Ms2ger>
That doesn't surprise me

[06:34:18.0000] <hallvors>
MikeSmith: turns out http://www.lookout.net/test/url/ is quite an IFRAME and IFRAME.onload stress test

[06:34:30.0000] <MikeSmith>
yeah

[06:34:35.0000] <MikeSmith>
torture test

[06:34:51.0000] <hallvors>
It first creates an IFRAME per test (they will be removed on onload)

[06:34:52.0000] <MikeSmith>
hallvors: there's got to be a better way to od it

[06:34:57.0000] <MikeSmith>
yeah

[06:35:33.0000] <hallvors>
There are some hardcoded limits in Opera regarding the number of allowed frames in a document

[06:36:30.0000] <hallvors>
I don't remember them exactly (and I thought they were aligned with or more generous than corresponding limits in other browsers) but that's likely the reason not all tests run here.

[06:39:54.0000] <annevk>
maybe in other browsers the limit is on the number of <iframe>s in a document rather than the number that was created?

[06:40:00.0000] <annevk>
MikeSmith: could use <a> instead?

[06:41:13.0000] <hallvors>
annevk: seems the nearly 500 IFRAMEs are created and appended from a single JS thread

[06:41:28.0000] <annevk>
not removed too? oh

[06:41:45.0000] <hallvors>
..so there's no pause where we could get some of those onloads fired and get rid of some of them again :-[

[06:41:54.0000] <hallvors>
:-/

[06:42:31.0000] <hallvors>
I don't really see why waiting for onload would be necessary

[06:42:51.0000] <hallvors>
document.write() into IFRAME should have the contents parsed immediately AFAIK

[06:43:14.0000] <hallvors>
so it should be possible to do the asserts just after document.write()

[06:43:32.0000] <MikeSmith>
oh

[06:43:37.0000] <MikeSmith>
that'd make it easier

[06:43:40.0000] <hallvors>
(but perhaps whoever wrote that harness already tried that and had problems?)

[06:43:47.0000] <MikeSmith>
dunno

[06:44:08.0000] <hallvors>
it would certainly be way easier from Opera's point of view :-p

[06:44:08.0000] <MikeSmith>
he doesn't frequent IRC much I don't think

[06:44:12.0000] <MikeSmith>
ok

[06:44:23.0000] <MikeSmith>
I'll take a look at it later myself

[06:47:24.0000] <annevk>
MikeSmith: test_simple can be

[06:47:54.0000] <MikeSmith>
can be <a> instead, you mean?

[06:48:11.0000] <annevk>
var a = document.createElement("a"); a.href = url; assert_equals(a, expect_url);

[06:49:02.0000] <annevk>
see also https://github.com/annevk/url/blob/master/test-components.html#L129

[06:49:10.0000] <annevk>
though I'm not sure how well that works in Internet Explorer

[06:49:32.0000] <annevk>
maybe it's using <iframe> in part of browser compat problems

[06:49:42.0000] <annevk>
Firefox e.g. does not handle dynamic <base>

[06:52:46.0000] <hallvors>
I wonder if setting a.href might parse some of the weird input differently than the document.write() does

[06:53:21.0000] <hallvors>
I have no idea if the tests would be equivalent if one just sets a.href ..

[06:53:36.0000] <annevk>
I do though :)

[06:53:43.0000] <hallvors>
OK :)

[06:54:20.0000] <annevk>
actually, unless you put stuff like &test; in tests, but I did not spot that

[06:54:36.0000] <hallvors>
BTW annevk: would you like to add test coverage script to the WHATWG version of XHR?

[06:54:37.0000] <annevk>
and that shows why DOM manipulation would be better anyway

[06:55:46.0000] <annevk>
hallvors: the tests coverage does not seem linked?

[06:56:03.0000] <annevk>
hallvors: and it's a bit too much in your face for my taste

[06:56:27.0000] <hallvors>
test coverage data is a little bit incomplete but we're working on it

[06:56:49.0000] <hallvors>
right now it will improve a lot once somebody runs some script to re-generate JSON data..

[06:57:15.0000] <hallvors>
I'm sure the styling can be amended :)

[06:57:21.0000] <annevk>
hallvors: I guess once a) you can actually get to the test and b) it doesn't take up a whole horizontal thingie anymore it might be good

[06:57:42.0000] <hallvors>
anytime you like ;)

[06:57:44.0000] <annevk>
hallvors: I can add a post-commit hook to GitHub that will run that script

[06:58:31.0000] <hallvors>
cool. I don' really know where the script is myself, Julian has been talking to Robin B so he knows that stuff

[06:59:57.0000] <darobin>
yeah ask Julian :)

[07:00:14.0000] <annevk>
currently for each commit to xhr.spec.whatwg.org there's a script run that can also run other scripts and fetch JSON data if needed

[07:00:30.0000] <annevk>
should not really be a problem to integrate if someone lays out the bits for me

[07:00:33.0000] <hallvors>
or even better, lean back and let Julian just do the work :D

[07:00:48.0000] <annevk>
sure :)

[07:01:10.0000] <zewt>
as long as the styling isn't so  intrusive  :)

[07:05:08.0000] <annevk>
MikeSmith: I don't see the subsequent commit in https://github.com/sideshowbarker/url-testing/commits/master where you added that /

[07:05:15.0000] <MikeSmith>
oh

[07:05:23.0000] <MikeSmith>
maybe I forgot to push

[07:05:54.0000] <annevk>
MikeSmith: but if you also add it to "url", where are you testing that it does get added?

[07:05:55.0000] <MikeSmith>
ah I pushed it to my fork

[07:06:06.0000] <MikeSmith>
annevk: I'm not

[07:06:15.0000] <MikeSmith>
we can another another test case for that

[07:06:23.0000] <annevk>
MikeSmith: I'm looking at your fork...

[07:06:41.0000] <annevk>
MikeSmith: and I thought this was supposed to be that test

[07:07:04.0000] <MikeSmith>
fuck I didn't even commit it

[07:07:17.0000] <MikeSmith>
will just commit it and push it now

[07:07:30.0000] <MikeSmith>
without the trailing slash in the "url" field

[07:07:50.0000] <MikeSmith>
because otherwise as you note it's pretty pointless

[07:08:07.0000] <MikeSmith>
I put "A pathless URL. Expected URL should have a slash appended." for the "name" field

[07:09:12.0000] <MikeSmith>
OK pushed it now

[07:09:22.0000] <MikeSmith>
will send a pull request to Chris later too

[07:09:25.0000] <annevk>
cool

[07:09:53.0000] <MikeSmith>
will try to mess around later with the iframe thing too

[07:10:30.0000] <MikeSmith>
today

[07:11:48.0000] <MikeSmith>
after doing some day-job stuff that needs getting done by the end of the day

[07:13:43.0000] <zcorpan>
annevk: indeed we tried to use <a xml:base href> first but chrome doesn't support that

[07:14:00.0000] <zcorpan>
annevk: i didn't dare go into dynamic <base> territory

[07:14:21.0000] <zcorpan>
annevk: iframe seemed like a working cross-browser approach

[07:14:45.0000] <annevk>
guess we could split the tests or so

[07:14:52.0000] <annevk>
to not hit Opera's limit

[07:15:24.0000] <zcorpan>
the iframes are removed after the test has run, so the limit shouldn't be hit

[07:16:53.0000] <zcorpan>
MikeSmith: Found 497 tests is what i get in both opera and firefox

[07:19:14.0000] <zcorpan>
i guess tests that don't use a base don't need an iframe

[07:19:24.0000] <zcorpan>
so it can be optimized a little

[07:20:26.0000] <annevk>
yeah that's what I said

[07:23:43.0000] <zcorpan>
i wrote the initial test case, which masinter fiddled with a bit and then chris made took over

[07:23:51.0000] <zcorpan>
s/made//

[07:25:56.0000] <zcorpan>
http://simon.html5.org/test/url/relative-resolution.html is before chris

[07:26:13.0000] <hallvors>
zcorpan: all 497 tests are currently added in separate IFRAMEs from one JS thread, before onloads start firing and the framework starts removing IFRAMEs again, hence you run into the limit

[07:27:02.0000] <zcorpan>
hallvors: ah. but the other iframes get processed when some are removed, i guess?

[07:28:04.0000] <hallvors>
I think the limitation that was implemented is that after a certain number of frames we stop creating documents inside the new ones

[07:28:45.0000] <hallvors>
so actually only the first n IFRAMEs will have documents that fire onload events and complete their tests

[07:30:06.0000] <zcorpan>
the test runs to completion for me, which means they do get load event and a DOM that the parent can poke at

[07:55:07.0000] <annevk>
a bunch of tests in urls.json are simply not run yet it seems

[07:55:37.0000] <annevk>
e.g. 498 I cannot find back when they're run

[07:56:00.0000] <annevk>
MikeSmith: while you're patching, replacing "expect_port": "0", with "expect_port": "", would also fix a bunch of failures

[07:57:43.0000] <annevk>
MikeSmith: maybe I'll submit a patch for that

[08:00:56.0000] <annevk>
sweet, tests found a bug in the spec

[08:30:30.0000] <annevk>
hmm

[08:30:31.0000] <annevk>
data:text/html,<style>:target{background:lime}</style><a id=x href=%23x>test</a>

[08:30:36.0000] <annevk>
should we support that?

[08:32:20.0000] <Ms2ger>
How about  data:text/html,<style>:target{background:lime}</style><a id=x href=#x>test</a> ?

[08:35:00.0000] <annevk>
that wouldn't display anything I think

[08:35:14.0000] <annevk>
fragment identifiers are supported on all URLs

[08:35:32.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2012Nov/0188.html he's aware of my work, but not its purpose with respect to HTML?

[08:35:34.0000] <annevk>
weird

[08:38:28.0000] <GPHemsley>
are data: pages allowed to have relative URLs?

[08:39:07.0000] <annevk>
not per the URL spec at this moment

[08:40:01.0000] <GPHemsley>
I think that makes sense

[08:40:05.0000] <annevk>
I can see a case for supporting just #, but that seems kinda hairy and you might as well handle that in HTML rather than in URL

[08:40:25.0000] <GPHemsley>
oh, yeah, hmm

[08:40:39.0000] <GPHemsley>
how would you even write that URL?

[08:40:59.0000] <GPHemsley>
I don't know that you can

[08:41:04.0000] <annevk>
I just did

[08:41:11.0000] <GPHemsley>
where?

[08:41:25.0000] <darobin>
in his head

[08:41:33.0000] <annevk>
http://krijnhoetmer.nl/irc-logs/whatwg/20121126#l-523

[08:41:48.0000] <GPHemsley>
that's not a URL, that's a link

[08:42:08.0000] <annevk>
you asked where

[08:42:08.0000] <GPHemsley>
I meant an absolute data: URL with a fragment

[08:42:29.0000] <annevk>
o_O

[08:42:47.0000] <GPHemsley>
i.e., linking to #x from outside the page

[08:43:14.0000] <GPHemsley>
data:text/html,<style>:target{background:lime}</style><a id=x href=%23x>test</a>#x

[08:43:20.0000] <GPHemsley>
(which obviously doesn't work)

[08:43:29.0000] <annevk>
that would work

[08:43:35.0000] <GPHemsley>
oh

[08:43:36.0000] <annevk>
well, depending on what you mean

[08:43:45.0000] <GPHemsley>
right, because it all has to be percent-encoded?

[08:43:48.0000] <GPHemsley>
very nice

[08:44:35.0000] <GPHemsley>
so yeah, that makes sense

[08:45:38.0000] <GPHemsley>
BTW, if this is actually in a spec: "An absolute URL is an authority-based URL if, when resolved

[08:45:39.0000] <GPHemsley>
  and then parsed, there are two characters immediately after

[08:45:39.0000] <GPHemsley>
  the <scheme> component and they are both "//" (U+002F)

[08:45:39.0000] <GPHemsley>
  characters."

[08:46:01.0000] <GPHemsley>
that wording suggests that "//" is a single character and that there should be two of them ("////")

[08:47:15.0000] <annevk>
all that is going away soon

[08:47:22.0000] <annevk>
once Hixie updates HTML to use URL

[08:47:37.0000] <annevk>
dunno about W3C HTML5 against which Roy objects, but that's darobin's problem

[08:47:55.0000] <GPHemsley>
heh

[08:48:41.0000] <annevk>
I kinda like how he suggests to retrofit charset though to mean character encoding

[08:48:54.0000] <darobin>
I reckon anything involving using URL would just sail through as a change

[08:49:13.0000] <darobin>
taking Ian's changes is more like Silvia's problem actually :)

[08:49:37.0000] <annevk>
the resource / representation thing only matters if you believe in content negotiation...

[08:52:43.0000] <annevk>
darobin: that's not exactly why she volunteered

[08:52:47.0000] <annevk>
at least per http://blog.gingertech.net/2012/08/15/why-i-became-a-html5-editor/

[08:53:31.0000] <darobin>
annevk: she volunteered to handle WHAT WG integration — if she didn't want to do it I'm sure she'd let us know :)

[08:53:44.0000] <annevk>
zcorpan: you didn't update the obsolete header in http://wiki.whatwg.org/wiki/Web_ECMAScript

[08:53:58.0000] <darobin>
I really don't care about the resource / representation thing, and I hate conneg with a passion

[08:54:04.0000] <darobin>
I guess those two facts may be related

[08:54:17.0000] <darobin>
anyway, *shrug*

[08:54:51.0000] <zcorpan>
annevk: fixed

[08:58:53.0000] <annevk>
oh Roy is at Adobe too

[08:59:17.0000] <annevk>
I wonder if they all get together sometime over there, must be interesting

[09:00:19.0000] <annevk>
darobin: I thought the idea was to improve the signal/noise ratio on public-html?

[09:00:57.0000] <Ms2ger>
/me sniggers

[09:01:06.0000] <annevk>
oh soon

[09:06:15.0000] <darobin>
annevk: tee hee

[09:19:13.0000] <TabAtkins_>
Darn, someone mentioned me over the thanksgiving weekend, but it's lost in the scrollback. :/

[09:20:03.0000] <darobin>
TabAtkins_: man, that's just evil. People shouldn't do that to you

[09:20:03.0000] <smaug____>
TabAtkins_: you know, we do have logs ;)

[09:20:13.0000] <TabAtkins_>
darobin: I know!  Those jerks.

[09:20:16.0000] <TabAtkins_>
smaug____: Bah.

[09:20:55.0000] <darobin>
smaug____: you and your "helpful" suggestions...

[09:21:06.0000] <annevk>
TabAtkins_: http://krijnhoetmer.nl/irc-logs/whatwg/20121121

[09:22:03.0000] <darobin>
/me wonders if he can file a bug against Unicode for not having air quotes

[09:23:38.0000] <TabAtkins_>
annevk: Hah, it was you calling me the Big Spammer.

[09:24:27.0000] <TabAtkins_>
annevk: I'm fine with append.  Probably better, actually, since add() is part of the Set API, so it's probably better to stay away from it if we're forging toward a MultiMap API.

[09:25:21.0000] <TabAtkins_>
annevk: I have no idea why tc39 decided on .size rather than .length.  I assume it has something to do with not wanting to collide with the de facto "is an array" tests that just check the existence of .length on the object.

[09:27:39.0000] <TabAtkins_>
Unfortunately, I don't think #webkit has any similar logging.

[09:27:48.0000] <TabAtkins_>
If it does, it's not in the Topic.

[10:20:02.0000] <MikeSmith>
TabAtkins_: do you use ninja for building on mac?

[10:31:14.0000] <TabAtkins_>
MikeSmith: I don't build on mac.

[10:31:18.0000] <TabAtkins_>
I only work on Linux.

[10:31:23.0000] <annevk>
Hixie: what would you use as terminology for "obtaining a resource from a URL"; e.g. the bit where a http URL is turned into a HTTP request for instance, or where an about URL is token matched

[10:31:24.0000] <MikeSmith>
ah ok

[10:31:54.0000] <Ms2ger`>
TabAtkins_, do you build on Linux?

[10:32:33.0000] <Ms2ger`>
If so, did you need to sacrifice goats to have it work?

[10:36:19.0000] <annevk>
URL syntax / URL resource retrieval

[10:36:44.0000] <annevk>
with most URLs not having URL resource retrieval I suppose

[10:47:13.0000] <annevk>
in 2000 you defined URLs like this http://tools.ietf.org/html/rfc2818#section-2.4

[10:57:55.0000] <TabAtkins_>
Huh, Ms2ger is gone.  That's strange.

[10:58:39.0000] <TabAtkins_>
Anyway, Ms2ger, yes I build on Linux.  It all worked out great as soon as I started following the "New Git Workflow" wiki page.

[11:06:41.0000] <marcosc_>
Hixie: if I have srcset=", , ," the first candidate's url is "," right? (i.e., it does not matter that it's a comma) ... just want to confirm I didn't screw something up

[11:10:43.0000] <annevk>
marcosc_: afaict, yup

[11:11:21.0000] <marcosc_>
thanks annevk

[11:30:40.0000] <jgraham>
Did someone sort out the URL tests?

[11:30:50.0000] <jgraham>
Creating 500 iframes is just obnoxious

[11:31:17.0000] <jgraham>
Better to create a small pool and reuse them

[11:42:34.0000] <zcorpan>
jgraham: good idea

[11:43:15.0000] <zcorpan>
actually, someone said that the tests can be sync

[11:43:19.0000] <zcorpan>
so the pool could be 1 iframe

[12:03:38.0000] <annevk>
ah you can just clear an <iframe>?

[12:18:02.0000] <Hixie>
jgraham: yeah... i don't really know what else it could be, though

[12:18:19.0000] <Hixie>
annevk: "fetch"? :-)

[12:18:23.0000] <Hixie>
marcosc_: sounds right

[12:19:13.0000] <annevk>
Hixie: so yeah, but we need some kind of URL scheme whitelist then in navigate

[12:19:28.0000] <annevk>
Hixie: if it's in the whitelist, it can be fetched, otherwise, ask an "external" application

[12:19:48.0000] <Hixie>
yeah right now the browser is supposed to just know

[12:19:55.0000] <Hixie>
don't forget about registerProtocolHAndler() though

[12:19:58.0000] <Hixie>
it can turn one into another

[12:20:02.0000] <Hixie>
(changes the URL too)

[12:20:06.0000] <annevk>
Hixie: I was hoping that was part of navigate

[12:20:33.0000] <annevk>
Hixie: e.g. XHR uses fetch directly and I don't think it should hook into registerProtocolHandler

[12:20:54.0000] <Hixie>
sounds right

[12:22:27.0000] <annevk>
okay so fetch is going to be the main algorithm, with obtain a resource from a URL (or some such) as subalgorithm with obtain a resource from a data URL (and others) as subsubalgorithms

[12:23:20.0000] <annevk>
fetch will have the same whitelist as navigate, except instead of launching an app fetch will act as if there was a network error

[12:25:40.0000] <annevk>
then we need some spec to define "resource" + "resource headers", with shortcuts for MIME type, encoding, HTTP status, and HTTP status text, so everything works in a HTTP context (for XMLHttpRequest)

[12:26:32.0000] <annevk>
then we're getting pretty close to defining <a> and friends :-)

[12:41:31.0000] <annevk>
Hixie: fwiw, here's the whitelist I made http://wiki.whatwg.org/wiki/URL#Schemes

[12:42:03.0000] <Hixie>
roger

[13:07:18.0000] <marcosc_>
Hixie: thanks

[13:31:05.0000] <marcosc_>
Hixie, is the use case for testing img@srcset sufficient to warrant the addition of an IDL attribute to check which is the selected source? (otherwise, it's kinda impossible to check what's currently on screen with JS)

[13:32:47.0000] <marcosc_>
being able to query: img.currentSrc would be nice, as one does with media elements

[13:53:13.0000] <annevk>
foolip: I read http://lists.w3.org/Archives/Public/public-whatwg-archive/2010Nov/thread.html#msg112 any updates on javascript: from your side? what you think should work and should not?

[13:58:56.0000] <SimonSapin>
annevk: about data: parsing. When implementations disagree, should we specify strict or more lenient? Examples: data:;Base64,cGFzcw  data:; base64,cGFzcw

[13:59:54.0000] <annevk>
SimonSapin: usually we let it depend on the implementations

[14:00:25.0000] <SimonSapin>
isn’t one of the goal to specify what to do on invalid input too?

[14:01:18.0000] <annevk>
http://lists.w3.org/Archives/Public/public-whatwg-archive/2011May/0229.html seems to argue for moving javascript to the navigate layer

[14:02:00.0000] <annevk>
SimonSapin: yes, but if say only Opera does the strict behavior, we go with lenient, but if only Opera is lenient, we might go with strict

[14:02:58.0000] <SimonSapin>
oh, so try to find a majority? how do you judge which implementations are relevant or how much?

[14:03:27.0000] <TabAtkins_>
More or less, market share.

[14:03:33.0000] <jgraham>
Not just a majority

[14:03:47.0000] <TabAtkins_>
But it's not strictly that (or else Opera would almost never count).

[14:04:11.0000] <jgraham>
If there are 3 implementations and 2 do the same, but are willing to chanhe but one is not, you pick the one that you can converge on

[14:04:27.0000] <SimonSapin>
admittedly I’m searching for corner cases, many of which nobody use or care about

[14:06:10.0000] <SimonSapin>
I mean, who is gonna write src="data: B%61se64,foo" and mix both base64 alphabets?

[14:08:04.0000] <SimonSapin>
(There is "normal" base64 and "URL safe" base64, rfc2397 doesn’t say which should be used)

[14:08:59.0000] <jgraham>
You know you are doing something properly interesting when there are N+1 behaviours (N implementations plus the spec), N-2 implementors have stated that they won't change their implentation, and 1 implementor doesn't give feedback

[14:09:28.0000] <jgraham>
And by "interesting" I think I mean "related to document loading"

[14:10:41.0000] <annevk>
SimonSapin: so I guess it depends on whether you convert scheme data + "? + query to bytes first before you start the MIME parser or not

[14:10:52.0000] <annevk>
SimonSapin: browsers seem to differ

[14:10:57.0000] <annevk>
SimonSapin: data:text/ht%4DL,<b>test

[14:11:12.0000] <jwalden>
it's easier to allow lenient behavior later, when strict was the initial setting, than it is to go the other way

[14:11:22.0000] <jwalden>
which to me usually argues for strict behavior

[14:11:50.0000] <jwalden>
if you find people are really screwing with you and writing crazy data URLs, you can change at that point

[14:14:04.0000] <SimonSapin>
The RFC has a literal ";base64" string, no variation (casing, spaces, …) seems to be allowed. Some implementation today are more lenient, but I have no idea if someone relies on that.

[14:15:36.0000] <annevk>
SimonSapin: note that the URI RFC does call for removing escapes such as %4D but that browsers do not do that when parsing and that therefore you get them as literals when parsing scheme data

[14:16:18.0000] <annevk>
SimonSapin: it seems that both Gecko and Chrome do not treat data:text/ht%4DL as data:text/htML so maybe it's okay to not unescape at that point

[14:18:17.0000] <SimonSapin>
The data: RFC has some unprecise points, but nothing majorly broken so far

[14:18:58.0000] <annevk>
yeah, it's just a few minor things

[14:19:48.0000] <SimonSapin>
is it worth taking the whole thing over?

[14:21:48.0000] <annevk>
I think it's worth fixing, not really sure what the best way is

[14:23:25.0000] <Hixie>
marcosc_: historically testing hasn't been a strong enough reason to add a feature, but if you can get the vendors on board...

[14:27:25.0000] <SimonSapin>
wow, IETF has impressive documents in STD, like the Echo Protocol and the Discard Protocol

[14:31:31.0000] <annevk>
it seems in the early days the IETF did not have very high requirements for a STD

[14:31:36.0000] <annevk>
e.g. http://tools.ietf.org/html/std23 :-)

[14:31:48.0000] <SimonSapin>
annevk: was something wrong with the UTF-8 RFC? (I did not read it)

[14:32:30.0000] <SimonSapin>
yeah, I’m glad we reserved low TCP ports for these :)

[14:33:06.0000] <annevk>
SimonSapin: Unicode did not tie down error handling and I felt like making the set of encodings complete

[14:33:37.0000] <annevk>
SimonSapin: some of that could be done via reference maybe, but I'm not sure it would become clearer in the end

[14:34:13.0000] <Hixie>
annevk: yeah (re js: in the navigate layer), that's an interesting idea

[14:34:35.0000] <SimonSapin>
oh yeah, utf* is in Unicode … but also RFCs?

[14:35:34.0000] <annevk>
SimonSapin: I have the feeling there's some tension between Unicode and IETF

[14:35:41.0000] <SimonSapin>
"The current representation formats for Unicode (UTF-7, UTF-8, UTF-16)    are not storage and computation efficient on platforms that utilize    the 9 bit nonet as a natural storage unit instead of the 8 bit octet. " (UTF-9)

[14:35:51.0000] <TabAtkins_>
lolwut

[14:36:24.0000] <SimonSapin>
did we actually have nonet-based hardware at some point?

[14:36:40.0000] <TabAtkins_>
Apparently the PDP-10 had a 36-bit word.

[14:36:52.0000] <TabAtkins_>
So a nonet was a useful size for the byte.

[14:37:17.0000] <hober>
and 18-bit addressing. great machine for representing cons cells on. :)

[14:37:41.0000] <TabAtkins_>
hober: Just because you have a couple extra bits for type tagging?

[14:38:45.0000] <annevk>
because April 1 TabAtkins_!

[14:39:05.0000] <TabAtkins_>
Oh jeez, of course.

[14:39:25.0000] <SimonSapin>
oh, I fell right for it

[14:41:31.0000] <annevk>
SimonSapin: in my experience it's easier to define the better version than to argue to the status quo and then define the better version

[14:41:36.0000] <TabAtkins>
At least UTF-9 is probably the sanest possible implementation of such a thing.

[14:41:47.0000] <TabAtkins>
Dunno what's going on with UTF-18.

[14:42:04.0000] <annevk>
SimonSapin: I suspect either way we'll end up fixing the data URL spec

[14:43:24.0000] <SimonSapin>
annevk: what bothers me is in some cases I have no idea how to decide what’s better. "base64" case-sensitive or not? Both sound fine…

[14:43:44.0000] <TabAtkins>
case-sensitive is best if you can get away with it.

[14:43:50.0000] <TabAtkins>
Just because it's simpler.

[14:44:34.0000] <annevk>
UTF-5! http://www.unicode.org/mail-arch/unicode-ml/Archives-Old/UML021/0846.html

[14:44:44.0000] <annevk>
there was also UTF-7.5 at some point, lost the reference

[14:44:48.0000] <SimonSapin>
TabAtkins: … do you mean insensitive?

[14:45:43.0000] <TabAtkins>
SimonSapin: No, sensitive.  That way you can just do a straight string or byte comparison, no need to lowercase beforehand or whatever.

[14:46:11.0000] <SimonSapin>
TabAtkins: of course. I confused the two in my head

[14:46:17.0000] <TabAtkins>
Heh, np.

[14:46:24.0000] <annevk>
SimonSapin: since you need to lowercase the MIME string anyway (as you parse, since lowercasing parameter values is probably not okay), lowercasing might be better here...

[14:46:41.0000] <annevk>
SimonSapin: but again, what do implementations do?

[14:47:09.0000] <annevk>
SimonSapin: otherwise, do as jwalden said above and just note in the source of the text where you might want to change things based on feedback

[14:48:25.0000] <SimonSapin>
oh well … test case: data:;Base64,cGFzcw  Firefox: pass, Chromium: cGFzcw, Opera: pas (missing an s)

[14:48:32.0000] <SimonSapin>
the test case is missing == padding

[14:48:39.0000] <GPHemsley>
So... container formats are annoying. Do you suppose it's my job to include instructions on how to differentiate among all the different Ogg-based audio and video formats?

[14:48:48.0000] <TabAtkins>
Yes.

[14:50:20.0000] <GPHemsley>
That would require implementing an at-least-rudimentary Ogg parsing algorithm

[14:50:20.0000] <annevk>
GPHemsley: again, only those we want to see implemented

[14:50:32.0000] <GPHemsley>
annevk: Well, there are a bunch of those.

[14:50:48.0000] <SimonSapin>
actual padding is ==, but = is enough to make Opera happy

[14:51:16.0000] <annevk>
GPHemsley: I'd ask implementors; maybe the course of action is just to determine it's "Ogg" and then find out in the Ogg library

[14:51:42.0000] <SimonSapin>
Ogg library sounds less insane

[14:53:14.0000] <annevk>
SimonSapin: in any event, it seems like you're hitting all the right edge cases :-)

[14:53:32.0000] <SimonSapin>
annevk: I’m gonna start with a test suite

[14:54:25.0000] <annevk>
SimonSapin: btw, I recommend testing one thing at a time; e.g. data:;base64,cGFzcw (lowercase B) gives "pass" in Chrome too, so that might be the right answer for the base64 algo

[14:54:51.0000] <SimonSapin>
I’m not sure why base64 even *has* padding, you can get by without it by counting the input length

[14:56:00.0000] <Hixie>
anyoen know offhand what default font IE uses on canvas?

[14:56:01.0000] <annevk>
maybe look at http://www.whatwg.org/html#atob too

[14:56:06.0000] <annevk>
SimonSapin: ^^

[14:56:10.0000] <TabAtkins>
SimonSapin: When dealing with concatenated base64, you need padding.

[14:56:44.0000] <SimonSapin>
TabAtkins: concatenating encoded messages without re-encoding?

[14:57:23.0000] <TabAtkins>
Yes, concatting multiple base64-encoded things into a single text file.

[14:58:23.0000] <SimonSapin>
hum, I see nothing in rfc4648 about decoding the handling character anywhere but at the end

[14:58:59.0000] <SimonSapin>
s/decoding the handling character/handling the padding character/

[14:59:09.0000] <TabAtkins>
Shrug, it's what wikipedia says.

[14:59:12.0000] <GPHemsley>
annevk, SimonSapin: Sent an e-mail to the list.

[15:00:09.0000] <Hixie>
GPHemsley: fwiw, i think combining video and audio together makes sense

[15:00:20.0000] <Hixie>
(the html spec doesn't distinguish them)

[15:00:25.0000] <GPHemsley>
ah, good

[15:00:37.0000] <GPHemsley>
but they are distinct from images, correct?

[15:01:19.0000] <Hixie>
yes

[15:02:24.0000] <SimonSapin>
GPHemsley: I don’t know anything about sniffing, but re-inventing a Ogg parser for this sounds "like a jackhammer to squach a fly"

[15:02:42.0000] <GPHemsley>
/me thinks he needs to reword the anonymous wiki registration message to make clear that accounts are only need to edit the wiki.

[15:02:57.0000] <GPHemsley>
SimonSapin: Oh, I am opposed to it, too. :)

[15:03:32.0000] <GPHemsley>
Of the five or so accounts I've created, only one of them has actually been used.

[15:03:38.0000] <GPHemsley>
(maybe it's more than five)

[15:03:49.0000] <GPHemsley>
on person wanted two accounts: one for them, and one for their company.

[15:03:54.0000] <annevk>
haha nice find MikeSmith

[15:04:00.0000] <GPHemsley>
I created one, asked about the other, haven't heard back

[15:04:04.0000] <SimonSapin>
(that expressions sounds even better in english than french)

[15:04:21.0000] <annevk>
first splits Microdata from HTML5 http://lists.w3.org/Archives/Public/public-html/2009Dec/0299.html then argues for making it useless https://www.w3.org/Bugs/Public/show_bug.cgi?id=20082

[15:05:18.0000] <SimonSapin>
"(not as a chair or editor of RDFa)"

[15:05:49.0000] <MikeSmith>
annevk: that find goes to Maciej actually

[15:06:00.0000] <MikeSmith>
or at least the credit for pointing it out first

[15:06:22.0000] <MikeSmith>
annevk: http://lists.w3.org/Archives/Public/public-html/2012Nov/0186.html

[15:08:25.0000] <annevk>
it's sad that we can't free othermaciej to work on other things than lawyering

[15:09:08.0000] <othermaciej>
I would enjoy working on real things

[15:09:28.0000] <TabAtkins>
GPHemsley: Regarding your questions a few days ago about EOT, EOT1 is trivial - just a simply documented header on top of the TTF format.  EOT2 is much more complex, and has weirder patent issues due to the in-built MTX compression.  EOT2 never made significant progress in the W3C because of that.  EOT1 was rejected in favor of WOFF1 largely for policitical reasons.

[15:27:57.0000] <SimonSapin>
annevk: does synchronous XHR sounds like good way to test data: ?

[15:28:46.0000] <annevk>
maybe synchronous <iframe> that does a postMessage() to its parent?

[15:29:04.0000] <annevk>
XHR'ing data URLs is not widely supported yet

[15:29:08.0000] <SimonSapin>
hum, how would that work?

[15:29:27.0000] <SimonSapin>
have the whole script with postMessage be part of the data: URL?

[15:29:52.0000] <annevk>
never mind

[15:30:15.0000] <annevk>
so I guess the problem is that some browsers don't do XHR'ing data URLs and some browsers don't allow same-origin access to <iframe> with a data URL

[15:30:59.0000] <annevk>
otherwise you could do <iframe>.contentDocument.... after the data URL loaded

[15:31:21.0000] <GPHemsley>
TabAtkins: I didn't know there were two. I imagine IE implements both?

[15:34:39.0000] <SimonSapin>
annevk: is there an intersection between these sets of browsers?

[15:35:01.0000] <annevk>
SimonSapin: sorry, dunno

[15:35:32.0000] <annevk>
matjas: http://wiki.ecmascript.org/doku.php?id=strawman:name_property_of_functions

[15:38:50.0000] <SimonSapin>
annevk: so XHR, <iframe>.contentDocument … other potential ways to test data: from JS?

[15:39:55.0000] <annevk>
SimonSapin: if you include script in them you can run a Worker based on a data URL

[15:40:38.0000] <annevk>
SimonSapin: I suspect if it failed to parse/compile you'd get an error of some kind and otherwise the script could post a message back, might be a simple way

[15:40:51.0000] <annevk>
SimonSapin: cannot really think of anything else right now, maybe tomorrow :)

[15:41:01.0000] <SimonSapin>
thanks :)

[15:57:26.0000] <TabAtkins>
GPHemsley: Yes, they do.  Actually a few variants, too.


2012-11-27
[16:28:47.0000] <marcosc_>
Hixie: regarding currentSrc, would it be enough to get a few +1 from vendors even if they are noncommittal? What would you like to see in particular?

[16:29:48.0000] <Hixie>
well for anything, what we need is "we're implementing this"

[16:30:05.0000] <Hixie>
since there's not much point speccing something they don't implement :-)

[16:53:09.0000] <marcosc_>
Hixie: understood. Who has made commitments on img@srset so far?

[16:53:29.0000] <TabAtkins>
I think we're implementing (webkit).

[16:54:19.0000] <marcosc_>
TabAtkins, ok cool. I'll see if I can find a bug number.

[16:54:50.0000] <marcosc_>
TabAtkins, if you know who I can ask about supporting img.currentSrc, that would be great.

[16:55:02.0000] <TabAtkins>
marcosc_: Dunno, sorry. :/

[16:55:12.0000] <TabAtkins>
But poke around in #webkit?

[16:55:23.0000] <marcosc_>
ok, will do :)

[17:10:46.0000] <Hixie>
GPHemsley: if you're still around, one thing to check is a PNG that is sent with Content-Type: that is blank followed by a Content-Type that says text/html

[17:10:56.0000] <Hixie>
GPHemsley: seems some browsers don't handle that well

[17:11:10.0000] <GPHemsley>
Hixie: You mean, two Content-Type headers?

[17:11:44.0000] <Hixie>
yeah

[17:11:46.0000] <Hixie>
first one blank

[17:11:50.0000] <Hixie>
second one text/html

[17:11:56.0000] <Hixie>
data is a PNG

[17:12:13.0000] <Hixie>
someone here just pointed me to some internal file where chrome is doing bad things when that's loaded in an iframe

[17:12:23.0000] <GPHemsley>
oy

[17:12:34.0000] <GPHemsley>
what a convoluted situation

[17:12:51.0000] <GPHemsley>
according to the spec as it stands now, it's supposed to be treated as text/html, I believe

[17:12:57.0000] <GPHemsley>
/me checks

[17:13:56.0000] <GPHemsley>
Hixie: Yeah, according to the current draft of the spec, that will never be detected as a PNG.

[17:14:51.0000] <GPHemsley>
The spec treats the last Content-Type header as the supplied one

[17:15:03.0000] <GPHemsley>
and text/html is only checked to see whether it's a feed

[17:15:08.0000] <GPHemsley>
otherwise, it's treated as HTML

[17:24:14.0000] <GPHemsley>
I can't seem to get Apache to send an empty header

[17:25:06.0000] <GPHemsley>
but I can confirm that a PNG file sent as text/html is treated as HTML by Gecko

[17:26:51.0000] <kmbarnhart>
Hi, I'm working on the webvtt parser. Right now I'm writting test.

[17:28:18.0000] <GPHemsley>
(not even with PHP??)

[17:29:12.0000] <kmbarnhart>
I'm working on the cue settings. The syntax rules state that there can be no duplicates of a setting in a cue. However, the parser has to check and will process duplicate settings. Should I write tests to make sure duplicate settings are parsed, or leave duplicate settings as unknown behaviour.

[17:29:59.0000] <kmbarnhart>
Is there some sort of precedence, so I'm I best of writing to the mailing list.

[17:30:05.0000] <kmbarnhart>
*or not so

[17:30:15.0000] <kmbarnhart>
*am I no I'm

[17:30:26.0000] <Hixie>
GPHemsley: you'll probably have to test with a .asis or something

[17:30:35.0000] <Hixie>
GPHemsley: but yeah, i think different browsers get it different

[17:30:52.0000] <kmbarnhart>
Is there some sort of precedence, or am I best off writing to the mailing list.

[17:30:58.0000] <GPHemsley>
Hixie: Even PHP won't let me send multiple Content-Type headers... or at least, not an empty one

[17:31:30.0000] <GPHemsley>
/me sighs and wanders off to watch TV...

[17:33:36.0000] <doublec>
kmbarnhart: probably best to ask on the mailing list

[17:33:47.0000] <kmbarnhart>
Thank you

[17:34:13.0000] <zewt>
(the syntax rules say what authors should do, but that doesn't conflict with the parser rules telling implementations what to do)

[18:04:36.0000] <marcosc_>
Hixie, sorry. One last question: in the img@srcset spec it says that density is "a valid floating-point number giving a number greater than zero". However, in the parsing algorithm, there is no check positive floats so parsing srcset="foo -1.0x" still gives me a density of -1.0 for the candidate. Is that correct or am I missing something?

[19:30:27.0000] <Hixie>
marcosc: i think you're probably right.

[19:30:39.0000] <Hixie>
marcosc: probably works identically to 0x in practice (which is likely identical to 1x)

[22:28:53.0000] <zcorpan>
GPHemsley: didn't you get the memo? if you're trying to test weird http headers with apache, you're gonna have a bad time.

[22:29:58.0000] <zcorpan>
(asis might work)

[22:32:32.0000] <zcorpan>
kmbarnhart: dup settings is tested in http://w3c-test.org/html/tests/submission/Opera/media/track/webvtt/parsing/001.html

[22:33:10.0000] <zcorpan>
kmbarnhart: it's specified in the parser which one wins (iirc, the last one that has a valid value)

[22:36:32.0000] <zcorpan>
Hixie: isn't it better to drop items with negative and zero densities?

[23:04:24.0000] <hsivonen>
oh. there’s XForms 2.0 being developed: https://twitter.com/johnboyerphd/status/233252670285168641

[00:00:38.0000] <Ms2ger>
XForms 2, eh?

[00:00:54.0000] <Ms2ger>
From @johnboyerphd

[00:01:13.0000] <Ms2ger>
/me remembers something about people who put "PhD" after their name

[00:06:41.0000] <Ms2ger>
/me curses Chrome

[00:23:08.0000] <hsivonen>
i18n Y U reopen bugs?

[01:37:12.0000] <annevk>
Ms2ger: the other John Boyer has some funny tweets https://twitter.com/johnboyer

[01:38:50.0000] <annevk>
"This message was not sent to Spam because of a filter you created." <- How do I tell Gmail my filters saved the day?

[01:41:30.0000] <annevk>
hsivonen: I was hoping you wouldn't be interested :-)

[02:20:19.0000] <annevk>
hmm, IDL now has RegExp?

[02:20:40.0000] <darobin>
annevk: yup \o/

[02:24:54.0000] <jgraham>
Hmm, I fail at changing mail subject lines

[02:27:52.0000] <annevk>
meh, I keep replying from the @WHATWG twitter account accidentally

[02:32:18.0000] <darobin>
"WHATWG caught up in sex scandal after Twitter leak"

[02:37:34.0000] <annevk>
heh

[02:37:37.0000] <annevk>
http://roy.gbiv.com/talks/201008_Open_Development.pdf is pretty interesting

[02:42:17.0000] <JibberJim>
It better be worth it the length of time it's taking to download!

[02:43:51.0000] <Ms2ger`>
Wait

[02:44:07.0000] <Ms2ger`>
DId he just put "Credibility with world-class people." next to a picture of himself?

[02:56:21.0000] <annevk>
oh, meta-object protocol is not used in the specification, I thought just the abbreviation wasn't

[02:56:33.0000] <annevk>
so how do I find out about it if it's not actually there?

[02:57:33.0000] <annevk>
I guess the idea is that the platform should mostly use "Ordinary Object Internal Methods and Internal Data Properties" and not "Built-in Exotic Object Internal Methods and Data Fields" or "Proxy Object Internal Methods and Internal Data Properties"?

[02:58:28.0000] <Ms2ger`>
Sorry, too many capitals

[02:59:41.0000] <annevk>
I do like the precision of the ES drafts

[02:59:54.0000] <annevk>
we could learn something from the style

[03:00:26.0000] <jgraham>
Pretty sure you disagreed with me last time I said that

[03:00:34.0000] <jgraham>
Although I might be imagining things

[03:01:44.0000] <annevk>
jgraham: maybe my opinion changes over time?

[03:03:06.0000] <annevk>
Pretty sure I changed my mind on <tr href="">, but I believe there is more :-)

[03:04:16.0000] <JibberJim>
"Issue tracker instead of ?just ask Bob to fix this?" - yes, never trust Bob, he's lousy.

[03:04:18.0000] <jgraham>
Dunno, I suppose it's possible. All I know is than when I dreamt I was in a classroom and someone was trying to teach character encodings, you were there and kept correcting them.

[03:04:34.0000] <jgraham>
But I'm not sure you can tell anything from that

[03:08:18.0000] <annevk>
haha

[03:12:09.0000] <annevk>
JibberJim: yeah, I don't think it's anything new, but it was interesting to understand that not everyone works this way

[03:27:38.0000] <JibberJim>
Oh indeed annevk - you're too young, you've not seen the horrors that go on some places :

[04:09:17.0000] <Lachy>
annevk, I finished the initial import of Selectors API into DOM4. Do you want to take a look and give any feedback before I do a pull request?

[04:10:07.0000] <Lachy>
https://github.com/lachlanhunt/dom/tree/selectorsapi

[04:13:48.0000] <annevk5>
Lachy, later today; fwiw, last I looked I thought an additional section was overkill

[04:14:30.0000] <annevk5>
Maybe Ms2ger can have a look

[04:14:54.0000] <Lachy>
annevk5, considering that the methods are mostly shared by 3 interfaces, and there's quite a few algorithms that go with it, I though it made more sense to do a separate section than to duplicate it all under Document, DocumentFragment and Element.

[04:15:12.0000] <Lachy>
also, there's been a lot more added since you last looked.

[04:16:27.0000] <annevk5>
Okay, getting a haircut at the moment and need to do a few other things, give me a few hours

[04:18:52.0000] <annevk5>
We need to find a more generic solution as more methods/attributes are shared

[04:19:12.0000] <annevk5>
Getting somewhat messy

[04:21:38.0000] <zcorpan>
implements?

[04:22:51.0000] <annevk5>
Maybe as simple as that

[04:44:00.0000] <Lachy>
an old draft of selectors API used to define something like a NodeSelector interface, and then said that was implemented by the other 3 interfaces. But that was changed to use partial interfaces for some technical reasons that I can't remember

[04:55:26.0000] <annevk>
Lachy: those reasons should be gone, provided you use NoInterfaceObject

[04:56:00.0000] <Lachy>
I was using NoInterfaceObject at the time. I will look into it though and find out what the reasons were exactly.

[04:56:05.0000] <annevk>
What I think we need to is what zcorpan suggested. Introduce ElementContainer and probably ElementContainerOrSibling

[04:56:22.0000] <annevk>
then move the mutation stuff under those

[04:56:46.0000] <annevk>
and put Selectors along with getElementsByTagName() and such there too

[04:57:02.0000] <Lachy>
ok, we can do that.

[04:57:23.0000] <annevk>
oh also, you can contribute under CC0? that's fine?

[04:57:34.0000] <Lachy>
I hope so.

[04:58:25.0000] <Lachy>
I'll check with Lars Erik, just to be sure

[04:59:10.0000] <annevk>
concepts I have now

[04:59:14.0000] <annevk>
RootNode

[04:59:25.0000] <annevk>
that's for Document/DocumentFragment/Element

[04:59:37.0000] <annevk>
and ChildNode

[04:59:47.0000] <annevk>
for DocumentType/Element/CharacterData

[05:02:14.0000] <annevk>
I guess we can turn those into actual interfaces

[05:02:22.0000] <annevk>
Ms2ger / Ms3ger: ^^

[05:08:08.0000] <annevk>
zcorpan: fwiw, I'll implement your other suggestion too at that point, the one about nextElementSibling and such

[05:11:37.0000] <zcorpan>
annevk: was that to make them available on all nodes that can have element siblings?

[05:11:56.0000] <annevk>
yup, ChildNode above

[05:12:19.0000] <Lachy>
annevk, http://lists.w3.org/Archives/Public/public-webapps/2011AprJun/0039.html

[05:14:21.0000] <annevk>
Lachy: I'm pretty sure on the interface itself and implements + NoInterfaceObject are the same these days

[05:16:33.0000] <annevk>
Lachy: as for review, where should I put review comments?

[05:18:09.0000] <Lachy>
I guess I'll just do a pull request for both dom and xrefs with the new selectors references and you can put them there.

[05:19:04.0000] <annevk>
the only problem with the pull request thing is that it results in many commits :/

[05:19:47.0000] <annevk>
here are a few to start

[05:19:50.0000] <annevk>
* needs domintro

[05:20:10.0000] <annevk>
* if you define something called a flag, have it be set or unset, don't give it values

[05:20:29.0000] <annevk>
* Element node -> concept-element

[05:24:27.0000] <annevk>
(no domintro boxes needed for querySelector btw if the goal is that people use find)

[05:46:09.0000] <Ms2ger`>
Lachy, do you have the selectorsapi branch somewhere I can look at it?

[05:47:56.0000] <Lachy>
Ms2ger`, http://lachy.id.au/temp/dom-core.html

[05:48:16.0000] <Ms2ger`>
Ta

[05:50:19.0000] <Ms2ger`>
There's a [[!SELECTORS4]] left

[05:50:33.0000] <Lachy>
oh, oops . where?

[05:50:51.0000] <Lachy>
ah, in namespaces.

[05:50:54.0000] <Ms2ger`>
Yep

[05:52:07.0000] <Lachy>
annevk, re the many commits problem, I'll sort that out once I resolve all the issues. I can rebase it and squash all the commits down to just one later and do another pull request.

[05:53:16.0000] <Lachy>
annevk, though it would be more useful if we had Critic set up for review comments

[05:59:23.0000] <foolip>
annevk, still there?

[05:59:35.0000] <annevk>
foolip: yeah

[05:59:54.0000] <foolip>
my conclusion from that time is that any kind of inline load of javascript: is pretty useless

[06:00:34.0000] <foolip>
but are you asking with regard to parsing and such for the URL standard?

[06:01:01.0000] <annevk>
foolip: where to handle it, my idea was to put it in the "navigate" layer and have it just be an error if it reaches "fetch"

[06:01:31.0000] <annevk>
Lachy: sounds good

[06:01:45.0000] <foolip>
right now it's somewhere around top-level browsing contexts in the HTML spec, isn't it?

[06:03:43.0000] <foolip>
annevk, maybe that's the navigate layer you mean, since url.spec.whatwg.org doesn't talk about navigation?

[06:03:45.0000] <annevk>
foolip: it's in "fetch" currently, which is mostly about turning a URL into a resource, but it includes inline loads

[06:04:23.0000] <annevk>
foolip: yeah not sure what url.spec.whatwg.org should say about this, there's so many layers :-)

[06:04:49.0000] <annevk>
Lachy: might also be interesting to talk to the CSS folks and have them define all Selector parsing

[06:05:11.0000] <annevk>
Lachy: ah, there's an issue to that effect doh

[06:05:13.0000] <foolip>
annevk, as far as I know, it would make sense to handle it the navigation of browsing contexts, and trying to fetch certainly could be an error

[06:05:40.0000] <annevk>
k, thanks

[06:05:50.0000] <foolip>
I'm not sure if there's any compat issues with not treating the return value of javascript: as a new document, might want to look into that

[06:05:51.0000] <SimonSapin>
annevk: what about selector parsing?

[06:05:58.0000] <foolip>
seemed fine to drop it for inline loads at least

[06:06:04.0000] <foolip>
gotta go

[06:07:53.0000] <Ms2ger`>
"These groups of selectors should not use namespace prefixes that need to be resolved."

[06:08:00.0000] <Ms2ger`>
That "should" looks weird there

[06:08:48.0000] <SimonSapin>
that’s easy: just say that no ns declarations are in scope

[06:08:54.0000] <SimonSapin>
prefix declarations

[06:09:10.0000] <SimonSapin>
Selectors already says that using an undeclared prefix is invalid

[06:12:53.0000] <Ms2ger`>
And it would be nice to introduce RootNode or whatever before introducing the selectors stuff

[06:15:34.0000] <SimonSapin>
In fact selectors-api doesn’t need to say anything: "The mechanism by    which namespace prefixes are declared should be    specified by the language that uses Selectors. If the language does not    specify a namespace prefix declaration mechanism, then no prefixes are    declared." http://www.w3.org/TR/selectors/#nsdecl

[06:16:17.0000] <SimonSapin>
Although it can, to make this more explicit

[06:20:07.0000] <annevk>
if that's the case a note should suffice

[06:23:24.0000] <zcorpan_>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1928 seems like safari and chrome throw a SecurityError

[06:33:08.0000] <annevk>
zcorpan_: URL parser already does encodeURIComponent although I guess if you use newlines and tab it might be useful

[06:43:56.0000] <zcorpan_>
annevk: i was thinking more of #

[06:45:42.0000] <Lachy>
annevk, I already emailed www-style and spoke to fantasai and TabAtkins about doing that during TPAC.

[06:46:14.0000] <annevk>
Lachy: k

[06:46:20.0000] <Lachy>
http://lists.w3.org/Archives/Public/www-style/2012Oct/0832.html

[06:46:34.0000] <annevk>
Lachy: do you want me to copy the comments I made earlier into the pull request thingie or is it okay like this?

[06:46:45.0000] <annevk>
/me is trying to write his IDNA piece and is getting lost in it

[06:47:03.0000] <Lachy>
it's ok here. I'll make a note of them.

[06:57:42.0000] <annevk>
Lachy: the idiom "return the result of running x" is okay, but I'd try to factor out algorithm itself as much as possible, that doesn't match the style we use afaik

[06:57:52.0000] <annevk>
Lachy: the word algorithm, that is

[06:59:02.0000] <annevk>
Lachy: also, I guess the best approach here is I first make the changes with respect to RootNode / ChildNode and that you then integrate based on that

[06:59:21.0000] <annevk>
Ms2ger`: you okay with RootNode / ChildNode?

[07:00:06.0000] <annevk>
Ms2ger`: Lachy: my thinking is subsection of "Node tree"

[07:00:10.0000] <annevk>
(subsections)

[07:01:04.0000] <Lachy>
annevk, ok

[07:01:58.0000] <Ms2ger`>
annevk, yeah, sounds good

[08:10:32.0000] <annevk>
Ms2ger, we should also make the switch away from Hixie-style algorithms towards JavaScript-style algorithms

[08:10:57.0000] <annevk>
Ms2ger, no more "terminate these steps" but just return / throw / ... and say when the steps are not terminated

[08:11:20.0000] <annevk>
Ms2ger, not entirely sure how we should start with that, do we even explain the current rules somewhere?

[08:12:11.0000] <gsnedders>
othermaciej: What would I do if not pedant your comments? ;P

[08:12:25.0000] <odinho_>
annevk: You do that already though, don't you?

[08:12:54.0000] <annevk>
odinho_: some specs do, some specs don't, some do both I guess

[08:13:13.0000] <gsnedders>
/me wants to know how to avoid introducing ambiguity without making it so hard to parallelize the spec's algorithms

[08:13:19.0000] <annevk>
odinho_: maybe I should just change as I come across stuff

[08:13:51.0000] <annevk>
gsnedders: is that in reference to this conversation because I'm not sure what you're saying

[08:13:54.0000] <annevk>
gsnedders: ?

[08:14:31.0000] <gsnedders>
annevk: Pretty much. See what dbaron was saying wrt Servo a while back and various forms of specs.

[08:15:13.0000] <annevk>
gsnedders: 1) I need a pointer for dbaron's thing 2) This is only about changing style, not substance

[08:15:37.0000] <jgraham>
I think that servo has the constraint that it has to be indistinguishable from a non-parallel implementation except in areas where there is no compat constraint

[08:16:39.0000] <gsnedders>
jgraham: I think the aim was for it to be indistringuishable in general, just given large amounts of prose it's not entirely clear how you transform that algorithm to something with concurrent steps.

[08:16:53.0000] <jgraham>
Yes, that is a hard problem of course

[08:17:07.0000] <jgraham>
But easier if you have an implementation than if you are just trying to write specs

[08:17:29.0000] <gsnedders>
annevk: http://dbaron.org/log/20120827-specification-style

[08:19:25.0000] <annevk>
Ah yeah, I did read that. Unfortunately I couldn't think of anything to do different

[08:20:06.0000] <gsnedders>
I wonder whether it's possible to give everything as a list of constraints.

[08:20:13.0000] <gsnedders>
Well, obviously it's possible.

[08:20:31.0000] <gsnedders>
But feasible?

[08:21:17.0000] <gsnedders>
I'm not saying we should throw everything out, but still.

[08:21:21.0000] <annevk>
It seems unlikely I'm going to rewrite the URL Standard in terms of constraints, or anything really.

[08:21:55.0000] <jgraham>
I don't even know what it would mean to rewrite the parsing algorithm, for example, in terms of constraints

[08:22:07.0000] <annevk>
jgraham: right

[08:22:10.0000] <jgraham>
Or that it would translate nicely to rust if you did

[08:22:12.0000] <gsnedders>
Parsing I think makes sense as a state machine.

[08:22:46.0000] <jgraham>
In that case the obvious parallelisation points are well known i.e. you can run the tokenizer in one task and the treebuilder in another

[08:22:58.0000] <jgraham>
I don't think you can do better than that

[08:23:11.0000] <gsnedders>
Is that feasible? I thought there was some conclusion that that wasn't doable without duplicating several stacks.

[08:23:22.0000] <jgraham>
Well gecko does that already

[08:23:56.0000] <gsnedders>
I thought I remembered something from foreign content that made it difficult

[08:26:16.0000] <gsnedders>
Though maybe that was just the change that meant you had to keep at least some information about the current stack to do so.

[08:41:35.0000] <GPHemsley>
zcorpan: Oh, I got the memo. I just ignored it, because of the apparent hassle to use something else. (And I've been able to work around every other problem I've encountered so far.)

[08:43:32.0000] <GPHemsley>
Ms2ger: Chrome Ph.D.?

[08:44:39.0000] <GPHemsley>
Wasn't XForms support just removed from Gecko?

[08:46:27.0000] <jwalden>
think so, yes

[08:46:32.0000] <GPHemsley>
/me wonders how/why annevk was on IRC while getting a haircut.

[08:47:50.0000] <GPHemsley>
Has anybody drawn a map of the interaction of all the different Web specs?

[08:51:49.0000] <darobin>
GPHemsley: yup, http://kwz.me/S5

[08:52:09.0000] <GPHemsley>
darobin: You're such a character.

[08:52:31.0000] <darobin>
GPHemsley: I prefer "code point"

[08:52:40.0000] <GPHemsley>
:)

[08:55:42.0000] <jwalden>
/me approves of this punning

[09:13:12.0000] <dglazkov>
good morning, Whatwg!

[09:13:28.0000] <SimonSapin>
good evening dglazkov

[09:20:06.0000] <odinho_>
dglazkov: When you say good morning, it's always a good time to think about going home from work. ... But then staying another 2-3 hours anyway. :D

[09:20:50.0000] <dglazkov>
odinho_: happy to be your alarm clock! :)

[09:26:57.0000] <odinho_>
dglazkov: http://dpaste.com/hold/837784/ You're around 17.30 or 17.40, but if not those, then 18.10 is a popular time for you. (for me) :]

[09:34:21.0000] <jgraham>
odinho_: Graph plz :p

[09:34:39.0000] <dglazkov>
jgraham++

[10:07:13.0000] <GPHemsley>
/me is glad we don't have to standardize the response to CTCP TIME

[10:07:41.0000] <GPHemsley>
s/standardize/spec/

[10:16:23.0000] <annevk>
So I made that change to the DOM

[10:16:46.0000] <annevk>
If partial is indeed different from implements / [NoInterfaceObject], I might have introduced a problem, but then I want something better from IDL

[10:17:43.0000] <annevk>
Oh, timbl just retweeted https://twitter.com/manusporny/status/273124335953268736 lol

[10:18:20.0000] <annevk>
Maybe I should unfollow timbl, he doesn't reply to my queries and tweets almost exclusively about Linked Data / RDF

[11:01:18.0000] <TabAtkins>
Can someone with a better DOM understanding of why sync events are usually bad respond in the "Scheduling multiple types of end-of-(micro)task work" thread?

[11:05:29.0000] <Hixie>
all events are sync in one sense or another :-)

[11:05:37.0000] <Hixie>
sync relative to what?

[11:05:38.0000] <Hixie>
dom changes?

[11:06:46.0000] <Hixie>
ah, crap, i lost my big e-mail about menu i was working

[11:06:53.0000] <Hixie>
ah well

[11:06:57.0000] <Hixie>
will have to write it again

[11:06:59.0000] <TabAtkins>
Syncrhonrous with response to layout changes.

[11:07:05.0000] <Hixie>
yikes!

[11:07:06.0000] <TabAtkins>
Hixie: I recommend using a real email client. ^_^

[11:07:24.0000] <Hixie>
you can't do stuff sync with layout changes!

[11:07:29.0000] <TabAtkins>
Exactly.

[11:07:58.0000] <astearns>
why is the resize event sync?

[11:08:08.0000] <TabAtkins>
Legacy error.

[11:08:30.0000] <TabAtkins>
And a bad, annoying one, given how easy it is to accidentally get into a cyclic situation.

[11:08:39.0000] <Hixie>
do we even have a spec fore resize?

[11:08:48.0000] <Hixie>
anyway, resize isn't sync with layout

[11:08:59.0000] <Hixie>
it's sync with the user interaction event

[11:09:09.0000] <Hixie>
layout just happens to be sync with every task

[11:11:24.0000] <astearns>
I think Andrei is thinking that most triggers for regionlayoutupdate will happen with a resize, so it makes sense to have one regionlayoutupdate per resize event, and make them sync with each other

[11:19:37.0000] <smaug____>
annevk: ah "And here I was hoping nobody would notice." is the way to write specs :)

[11:19:54.0000] <annevk>
bz uncovered my secret!

[11:19:58.0000] <gsnedders>
:o

[11:20:17.0000] <Hixie>
astearns: making an event sync with resize is fine by me

[11:20:30.0000] <Hixie>
astearns: just don't tie it to layout

[11:20:44.0000] <smaug____>
resize event is quite odd one

[11:20:51.0000] <astearns>
unfortunately, it's tied to the results of layout

[11:21:38.0000] <Hixie>
astearns: :-(

[11:22:01.0000] <Hixie>
i strongly recommend making sure people like roc are in the loop on this

[11:22:12.0000] <Hixie>
and ms2ger

[11:22:31.0000] <smaug____>
https://bug457862.bugzilla.mozilla.org/attachment.cgi?id=355244 is a testcase for resize event

[11:23:43.0000] <smaug____>
looks like FF can handle it, chrome and opera can't

[11:23:59.0000] <astearns>
Hixie: I would definitely like to get their input

[11:24:14.0000] <smaug____>
(I thought chrome or some version of webkit did handle that case ok)

[11:25:30.0000] <gsnedders>
smaug____: I believe they can when it is resize events on plugins

[11:27:56.0000] <smaug____>
astearns: FYI, Gecko used to fire resize async, well of a timer, but it was considered as a bug. https://bugzilla.mozilla.org/show_bug.cgi?id=457862

[11:31:15.0000] <smaug____>
ah, that testcase is too tricky for Gecko too :(

[11:44:07.0000] <annevk>
What bz mentions is actually a problem with many HTML APIs too I think. At least I have not done a thorough review of HTML (and SVG) to see if they make sense in context of mutation observers.

[11:44:21.0000] <annevk>
the context*

[11:45:30.0000] <annevk>
Of course, if the DOM itself doesn't handle it there's even less hope for others to get it right...

[12:29:12.0000] <GPHemsley>
/me notes it is a sad day for User-Agent strings

[12:32:41.0000] <Hixie>
new ones getting invented?

[12:36:18.0000] <miketaylr>
every day is a sad day for UA strings

[13:12:23.0000] <smaug____>
/me wonders what <a href="javascript:  new Date()" download="foo.txt">foo</a> should do

[13:14:01.0000] <smaug____>
no darin

[13:14:09.0000] <smaug____>
he might remember what chrome does

[13:14:14.0000] <smaug____>
and why

[13:23:15.0000] <jgraham>
Wait, what?

[13:23:21.0000] <jgraham>
download=""?

[13:23:39.0000] <jgraham>
Did I slip into a time warp and arrive in the future?

[13:23:54.0000] <jgraham>
Or why have I not heard of this?

[13:27:52.0000] <Hixie>
it's been in the spec for months now

[13:28:23.0000] <Hixie>
r6318 2011-07-22

[13:28:27.0000] <Hixie>
years even!

[13:29:13.0000] <MikeSmith>
where "years" means one year and a few months

[13:30:20.0000] <annevk>
is that what "months" means or are you referring to something else?

[13:30:31.0000] <annevk>
in other news, writing domintro boxes is boring

[13:30:39.0000] <MikeSmith>
hah

[13:31:12.0000] <annevk>
Hixie: we should apply WHATWG to Google Summer of Code so we get some interns that can write domintro boxes

[13:31:34.0000] <MikeSmith>
oh I bet by "years" Hixie must mean the multiple possible representations of the single resource "year"

[13:31:44.0000] <annevk>
Hixie: in case it turns out they're smarter than us we can reverse the roles

[13:34:02.0000] <jgraham>
Hixie: The ping attribute has been in the spec since the dawn of time (or thereabouts) but that doesn't mean anyone knows it exists

[13:37:26.0000] <annevk>
smaug____: you don't mind if where the spec currently talks about "Text, ProcessingInstruction, or Comment node" I replace that with "CharacterData node" right?

[13:37:31.0000] <annevk>
same question for anyone else

[13:37:54.0000] <smaug____>
annevk: right

[13:38:11.0000] <smaug____>
annevk: well, the spec talks in some cases only about Text and Comment

[13:38:30.0000] <smaug____>
in cases where I think it should say CharacterData

[13:38:33.0000] <annevk>
smaug____: well if it's different it can't be replaced, but we should probably fix those cases per the Gecko bug

[13:38:47.0000] <annevk>
smaug____: is it really as simple as just replacing Text/Comment with CharacterData there?

[13:39:41.0000] <smaug____>
when talking about Range, Comment and PI should be - perhaps - handled the same way

[13:40:05.0000] <annevk>
yeah that makes sense to me

[13:40:05.0000] <smaug____>
not sure what the spec says about them in other contexts

[13:40:52.0000] <annevk>
they're typically grouped, unless ProcessingInstruction.target is important

[13:43:32.0000] <annevk>
smaug____: I'll add ProcessingInstruction to the cases in Range now, and won't make the change to rename those instances to CharacterData (at least for now)

[13:46:23.0000] <smaug____>
k

[13:54:58.0000] <annevk>
It seems there's potential for further cleanup in ranges looking at the comments AryehGregor wrote

[13:55:42.0000] <annevk>
It seems he didn't dare putting a stake in the ground where he might have been able to a few times, but I'm not sure if it's worth cleaning up either...

[13:58:31.0000] <annevk>
smaug____: https://github.com/whatwg/dom/commit/677350850145097fc83d8dfe54e5f644f0adcc21

[13:59:03.0000] <smaug____>
looking in a minute

[14:02:36.0000] <smaug____>
annevk: is it possible to see more context in github commits?

[14:02:55.0000] <smaug____>
/me prefers to see at least 8 lines before and after the change

[14:03:04.0000] <annevk>
I don't know, I've been wondering the same

[14:03:53.0000] <annevk>
https://help.github.com/articles/search?q=diff+context euh fail

[14:05:56.0000] <smaug____>
looks good. (a bit hard to review)

[14:06:17.0000] <smaug____>
would be nice to have some tool for spec change reviewing

[14:09:04.0000] <annevk>
there's also https://github.com/whatwg/dom/commit/677350850145097fc83d8dfe54e5f644f0adcc21.patch apparently

[14:11:12.0000] <annevk>
smaug____: yeah, if someone wants to setup critic that's fine with me, I guess for now we rely on GitHub's infrastructure

[15:42:33.0000] <TabAtkins>
Hixie: Yo, I need to talk about <ruby>.

[15:42:43.0000] <Hixie>
shoot

[15:43:46.0000] <TabAtkins>
The current Ruby model doesn't work well for a few cases - namely, inlining ruby, jukugo ruby groups withing a larger ruby span, and multiple ruby.

[15:44:09.0000] <TabAtkins>
There's some simple changes that can be made that solve all of these, that fantasai has been working on and asked me to sell to you. ^_^

[15:44:38.0000] <TabAtkins>
I can write up an email with details, or bring them up here, but I want to see first if you're willing to mess with the current spec on it.

[15:46:43.0000] <Hixie>
i believe all use cases that have been presented actually have been resolved by now

[15:46:48.0000] <Hixie>
at least, all those the i18n groups presented

[15:47:01.0000] <TabAtkins>
I have evidence to the contrary. ^_^

[15:47:02.0000] <Hixie>
including inlining ruby, jukugo ruby groups within a larger ruby span, and multiple ruby

[15:47:12.0000] <Hixie>
cool. please file a bug :-)

[15:47:18.0000] <TabAtkins>
Okay, can do.


2012-11-28
[16:12:16.0000] <Hixie>
ok, i mailed about toolbars and menus

[16:40:28.0000] <Hixie>
MikeSmith: yt?

[16:41:47.0000] <Hixie>
nevermind

[16:42:25.0000] <MikeSmith>
Hixie: yeah here now

[16:43:21.0000] <Hixie>
was just going to ask if it's still tim who decides the FOs on a transition call or if he's handed that potato to someone else

[16:44:39.0000] <MikeSmith>
it depends on which transition call it is I think

[16:45:10.0000] <MikeSmith>
some get delegated

[16:45:27.0000] <Hixie>
ah. whom to?

[16:46:42.0000] <MikeSmith>
"Those assigned by the Director to manage transitions"

[16:47:37.0000] <MikeSmith>
"The Director should be invited to attend the meeting if the transition involves contentious issues such as IPR, technical or other concerns"

[16:48:27.0000] <Hixie>
so, like, plh?

[16:48:37.0000] <Hixie>
i'm just curious if it is someone i've heard of or not, in practice :-)

[16:48:51.0000] <Hixie>
(trying to count the number of decision makers in the htmlwg, for an e-mail with jeff)

[16:48:55.0000] <MikeSmith>
http://w3.org/brief/MzAx

[16:49:30.0000] <MikeSmith>
Hixie: yeah in every case it's someone you've heard of for sure

[16:49:35.0000] <Hixie>
k

[16:49:42.0000] <MikeSmith>
plh would probably be a pretty good guess

[17:00:03.0000] <Hixie>
GPHemsley: yt?

[17:00:17.0000] <Hixie>
GPHemsley: i think the message on the wiki is encouraging people who don't need an account to try to get one.

[17:00:43.0000] <Hixie>
GPHemsley: can we either limit it to pages they might want to edit, or to the login page, or rewrite it to be clearer about only being relevant to people who need to edit the page?

[18:42:03.0000] <TabAtkins>
Hixie: Sent an email instead (about <ruby>).

[18:48:37.0000] <Hixie>
TabAtkins: k

[19:44:59.0000] <MikeSmith>
TabAtkins: about http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Nov/0370.html and "either mark up the ruby correctly ... or incorrectly group the entire thing as one ruby text over one ruby base"

[19:45:28.0000] <MikeSmith>
I'm not at all sure it's "incorrect" to group the entire thing as one ruby text over one ruby base

[19:46:40.0000] <MikeSmith>
I don't know who makes the rules that would say that's incorrect, or what conventions there might be outside of the Web

[19:47:33.0000] <MikeSmith>
but the thing is, those characters have those particular readings when they are used in combination with one another

[19:47:52.0000] <MikeSmith>
and they can have other readings in other combinations or alone

[19:48:51.0000] <MikeSmith>
in the example you have 東: in other contexts, the character 東 can be read as ひがし

[19:49:30.0000] <MikeSmith>
and the character 京 can be read as けい

[19:50:15.0000] <MikeSmith>
for example, there's a train line between Tokyo and Yokohama and it's called the 京急 line

[19:50:47.0000] <MikeSmith>
which is read as けいきゅう

[19:51:16.0000] <Hixie>
side note, japanese seems to be as wacked as english

[19:51:19.0000] <MikeSmith>
instead of as きょうきゅう

[19:51:24.0000] <MikeSmith>
heh

[19:52:32.0000] <MikeSmith>
anyway, given that, somebody might assert that it's actually more "correct" to group the entire thing as one ruby text over one ruby base

[19:52:40.0000] <MikeSmith>
purely from a markup perspective

[19:53:58.0000] <MikeSmith>
from a pure markup perspective, it's at least as correct as marking them up separately

[19:54:18.0000] <MikeSmith>
but of course nobody marks up a document with ruby just for the sake of marking it up with ruby

[19:54:39.0000] <MikeSmith>
but instead for the effect that it has

[19:55:21.0000] <MikeSmith>
and the effect for most cases of those two different ways of marking it up is exactly the same

[19:56:29.0000] <MikeSmith>
anyway, I realize the information is coming from fantasai, the as currently written, the "Inlining ruby" part of your message does not describe any use case

[19:57:17.0000] <MikeSmith>
it just asserts that one of those ways is more correct than the other, without saying what criteria are use to evaluate how correct either is

[19:57:38.0000] <MikeSmith>
but the point anyway is not how correct either of them is

[19:58:08.0000] <MikeSmith>
the point should be whether there's ever any difference in effect between the two

[19:58:28.0000] <MikeSmith>
and if either of them produces some undesirable effect in some cases

[20:15:53.0000] <MikeSmith>
the only case I can remember being put forward where the markup difference would produce an undesirable effect is the one described at http://www.w3.org/TR/2009/NOTE-jlreq-20090604/#fig2_30-en

[20:18:58.0000] <MikeSmith>
the "if the kanji break across multiple lines, the a ruby group can end up getting broken"

[20:19:52.0000] <MikeSmith>
but I think that case actually argues for grouping the entire thing as one ruby text over one ruby base

[20:21:37.0000] <MikeSmith>
at least I don't see how having an <rb> element would help in any way for that case

[20:36:39.0000] <MikeSmith>
ok I guess that "Inlining ruby" TabAtkins message is really just that same as what's already described in http://www.w3.org/TR/ruby-use-cases/#usecaseb

[20:37:14.0000] <MikeSmith>
"Fallback for multiple bases in one set of parentheses"

[20:37:31.0000] <MikeSmith>
but that again does not really provide a use case

[20:39:06.0000] <MikeSmith>
what it says instead essentially is that *if* you choose to not group the entire thing as one ruby text over one ruby base, then in browsers that don't support ruby, you end up with 東(とう)京(きょう) instead of 東京(とうきょう)

[20:39:57.0000] <MikeSmith>
but the solution to that is just, don't mark them up separately but instead as one ruby text over one ruby base, and you won't have that problem

[20:40:24.0000] <heycam>
fg

[20:40:25.0000] <heycam>
fg

[20:40:25.0000] <MikeSmith>
http://www.w3.org/TR/ruby-use-cases/#usecaseb asserts "Each base character should be annotated individually" but it never explains why

[20:40:36.0000] <heycam>
/me (oops)

[20:40:55.0000] <MikeSmith>
heh

[20:43:55.0000] <MikeSmith>
anyway IMHO, continuing discussion about "Inlining ruby" aka "Fallback for multiple bases in one set of parentheses" case is a distraction

[20:45:11.0000] <MikeSmith>
the real use case and rationale behind that has never been well explained by anybody, even after all the time spent discussing it

[20:45:45.0000] <MikeSmith>
the only case that really matters is the case where lack for rb has undesirable effects for double-sided ruby

[20:46:33.0000] <MikeSmith>
and last that I remember most everybody agreed that's an actual problem

[20:47:06.0000] <MikeSmith>
but just that it's not at all clear how common the problem occurs

[20:47:47.0000] <MikeSmith>
and so whether the benefits of trying to solve that problem outweigh the costs of adding more complexity to the spec really just to address that one use case

[20:52:19.0000] <MikeSmith>
actually I think we have agreement that the general double-sided use case is already covered

[20:52:30.0000] <MikeSmith>
http://www.w3.org/TR/ruby-use-cases/#approachd2

[20:52:35.0000] <MikeSmith>
using nested ruby

[20:53:57.0000] <MikeSmith>
or actually not really the general use case but pretty much every case of double-sided ruby

[20:55:16.0000] <MikeSmith>
the main argument that's been put forward against authors needing to use nested ruby to solve that problem is, "Having to learn and use two different markup patterns for two nearly identical use-cases is sub-optimal for authors.  It would be best if they could just learn one model that works for both."

[20:55:25.0000] <MikeSmith>
which is not a super-compelling argument

[20:56:08.0000] <MikeSmith>
and I'm not even sure I agree with that claim at all

[20:57:19.0000] <MikeSmith>
I don't think that nested ruby is conceptually a different model from non-nested ruby

[20:58:34.0000] <MikeSmith>
"As you can see, the only difference is that the <rtc> contains a single (implicit) <rt>, rather than two <rt>s.  It seems plainly obviously that this is simpler for authors."

[20:58:53.0000] <MikeSmith>
it's actually not plain to me that it's simpler for authors

[23:54:45.0000] <hsivonen>
/me makes a mental note for future use that WebKit devs can cite Brendan as webkit-dev consensus

[01:09:51.0000] <zcorpan_>
hmm. pushing to dvcs.w3.org/hg/html now fails for me. auth failed.

[01:10:03.0000] <zcorpan_>
MikeSmith: ^ any idea?

[01:10:17.0000] <MikeSmith>
zcorpan_: which repo?

[01:10:19.0000] <MikeSmith>
oh

[01:10:20.0000] <MikeSmith>
html

[01:10:26.0000] <MikeSmith>
lemme check

[01:11:48.0000] <jgraham>
nessy: What I actually expect to happen with <main> is that W3C HTML will adopt it, probably for the .next version; UAs will implement it (indeed, aiui already are), and the WHATWG will lose epsilon of credibility with authors for not including it.

[01:15:31.0000] <annevk>
whoa, Hixie logged into twitter

[01:19:27.0000] <MikeSmith>
zcorpan_: OK auth failing for me to

[01:19:31.0000] <MikeSmith>
so that's good

[01:19:35.0000] <MikeSmith>
we're interoperable

[01:19:42.0000] <jgraham>
scare quotes implied?

[01:19:48.0000] <MikeSmith>
hah

[01:19:50.0000] <MikeSmith>
yeah

[01:21:17.0000] <MikeSmith>
ah I think the reason might be that they're doing DB maintenance

[01:21:43.0000] <MikeSmith>
oh no

[01:21:49.0000] <MikeSmith>
that's supposed to be done

[01:21:56.0000] <MikeSmith>
https://twitter.com/w3c_systeam/status/273392564474900480

[01:22:11.0000] <MikeSmith>
"Our database procedure seems to have gone surprisingly smoothly; everything should be all clear now,"

[01:22:21.0000] <MikeSmith>
maybe not so clear

[01:22:56.0000] <MikeSmith>
darobin: we can't push to the dvcs.w3.org html testsuite repo

[01:23:14.0000] <MikeSmith>
I suspect it's probably the same for all other repos

[01:23:17.0000] <jgraham>
Ah, nice delegation there

[01:23:22.0000] <MikeSmith>
hah

[01:23:55.0000] <MikeSmith>
I don't delegate to darobin. He allows me to bring things to his attention.

[01:26:33.0000] <jgraham>
That sounds like a nice scheme you have going there. "I'm not delegating to you, but wouldn't it be sad if all these things were broken?"

[01:26:43.0000] <MikeSmith>
exactly!

[01:26:47.0000] <MikeSmith>
ok same for all repos

[01:26:51.0000] <MikeSmith>
can't push

[01:27:14.0000] <MikeSmith>
I suspect it's just that it can't reach the ldap directory

[01:29:22.0000] <MikeSmith>
yeah

[01:29:30.0000] <MikeSmith>
problem with ldap server

[01:34:46.0000] <annevk>
http://dom.spec.whatwg.org/#interface-domtokenlist so many subtle differences from Set :/

[01:45:15.0000] <darobin>
lol

[01:45:39.0000] <darobin>
MikeSmith: I also can't connect to the W3C IRC server

[01:45:47.0000] <darobin>
so I suspect there's a broader system failure

[01:45:51.0000] <MikeSmith>
blame ldap

[01:45:59.0000] <darobin>
"Access denied: Bad password?" yup

[01:46:07.0000] <darobin>
well, who needs dvcs anyway?

[01:46:40.0000] <darobin>
as soon as we get the CR out, I'll be moving the TS to GitHub (and moving the tests to the scheme that jgraham described)

[01:46:41.0000] <jgraham>
Well if you just used github you wouldn't have these problems</tobie>

[01:46:53.0000] <jgraham>
Heh

[01:47:11.0000] <darobin>
you channel tobie remarkably well

[01:47:53.0000] <MikeSmith>
I would love to see dvcs.w3.org retire

[01:48:04.0000] <darobin>
eventually it probably will

[01:48:07.0000] <MikeSmith>
or at least would love to retire from it

[01:48:16.0000] <darobin>
thankfully there's nowhere near as much depending on it as CVS

[01:48:28.0000] <darobin>
we will probably never manage to leave CVS

[01:48:50.0000] <darobin>
that is, unless the WHAT WG acquires W3C and then we'll be stuck with SVN :)

[01:49:15.0000] <MikeSmith>
Hixie still depends on CVS for the WebVTT spec

[01:49:16.0000] <karlcow>
:D

[01:49:54.0000] <darobin>
man, when you look at all those old SDOs using obsolete software... we should just start a new one

[01:50:10.0000] <darobin>
ah, LDAP seems fixed

[01:50:45.0000] <karlcow>
darobin: no software! Dance and poetry under the moon around the fire. That's the way to do it.

[01:50:59.0000] <MikeSmith>
darobin: yeah, working for me

[01:50:59.0000] <darobin>
yay!

[01:51:18.0000] <darobin>
karlcow: and we make all decision in best-of-three air hockey games

[01:51:29.0000] <karlcow>
:D

[01:51:50.0000] <darobin>
frankly, I'm not sure that anyone would notice the difference

[01:52:21.0000] <jgraham>
I thought that *was* the HTMLWG officiasl decision making process?

[01:53:25.0000] <darobin>
nah

[01:53:26.0000] <jgraham>
rubys vs othermaciej vs paulc in bar sports

[01:53:39.0000] <othermaciej>
what what what?

[01:54:01.0000] <darobin>
the official decision policy is we just keep moving bugs to a never-attained-but-perfect .next and do whatever we want in the meantime :)

[01:54:38.0000] <othermaciej>
I would support decision by air hockey

[01:54:49.0000] <othermaciej>
I think that is better than what the majority of standards orgs use

[01:54:59.0000] <othermaciej>
though I would prefer a game I am good at

[01:56:33.0000] <darobin>
/me didn't pick that one at random :)

[01:57:35.0000] <darobin>
we could also do snooker

[02:01:14.0000] <MikeSmith>
I think the game should be that people just keep repeating the same arguments, over many years, and getting defensive when people disagree with them, and also impugning other people's motives a lot

[02:01:22.0000] <MikeSmith>
that'd be a fun game

[02:01:35.0000] <MikeSmith>
if we played it, say, for like 5 1/2 years or whatever

[02:01:35.0000] <karlcow>
… ^_o

[02:02:06.0000] <MikeSmith>
hey, and then we could also have a lot of jackasses trolling about it twitter a lot

[02:02:13.0000] <MikeSmith>
that'd be a cool feature

[02:02:38.0000] <karlcow>
what is twitter? :p

[02:03:31.0000] <karlcow>
if at least I could get drunk without being sick. Maybe I could cope with that game MikeSmith

[02:04:52.0000] <MikeSmith>
hey I wish I could feel normal without being drunk

[02:04:59.0000] <MikeSmith>
speaking in character that is

[02:05:13.0000] <MikeSmith>
as the character I play

[02:06:13.0000] <MikeSmith>
anyway, I think the winners of this hypothetical game would be the people who say fuck it and go off to become the owner of a nightclub instead, or a bicycle shop

[02:07:24.0000] <karlcow>
I take the "planting rice" option

[02:09:59.0000] <karlcow>
or maybe cheese shop in Hayama… thinking more about it.

[02:13:50.0000] <jgraham>
/me thinks planting rice probably isn't much fun

[02:14:03.0000] <jgraham>
I could certainly give selling cheese a go though

[02:14:20.0000] <jgraham>
If I got to have a really *nice* cheese shop

[02:19:51.0000] <MikeSmith>
I've always dreamed of living alone in tiny apartment in, say, Tokyo or somewhere, and could go to late-night Denny's to eat and work if they had 90MBps wifi and I'd reached the 7GB-per-month download limit on the Android smartphone I'd normally be using for tethering

[02:19:57.0000] <MikeSmith>
that'd be the life

[02:20:59.0000] <MikeSmith>
also if I wanted to build Webkit and Chromium for sources to test stuff

[02:21:02.0000] <annevk>
jgraham: is http://darobin.github.com/test-harness-tutorial/docs/using-testharness.html the best documentation?

[02:21:30.0000] <jgraham>
annevk: On which axis of quality?

[02:21:44.0000] <annevk>
someone asking how to write tests

[02:21:48.0000] <jgraham>
Yes

[02:22:04.0000] <annevk>
i will cc you for remaining questions :)

[02:22:13.0000] <MikeSmith>
is that the side-by-side one?

[02:22:17.0000] <MikeSmith>
/me looks

[02:26:25.0000] <annevk>
MikeSmith: message is on member-i18n-core

[02:26:40.0000] <annevk>
MikeSmith: and I was cc'd because otherwise I would not have known :-)

[02:30:11.0000] <nessy>
jgraham - just saw your earlier message - the <main> discussion has just become so ridiculous - it's not worth explaining things any more

[02:30:24.0000] <nessy>
jgraham: there are more important things to discuss :-)

[02:31:04.0000] <annevk>
yeah, like longdesc

[02:31:24.0000] <jgraham>
nessy: Indeed. I think the course is now set and I can't see much changing by further argument

[02:31:32.0000] <nessy>
annevk: lol

[02:32:05.0000] <nessy>
annevk: but seriously - @longdesc is borked because different browsers do different things with it - it's not borked by design

[02:32:17.0000] <nessy>
annevk: but going down that path is just a rathole

[02:32:49.0000] <nessy>
it's actually quite funny - any discussion about a11y features can not be turned into the ridiculous by just mentioning @longdesc

[02:33:06.0000] <jgraham>
I think I disagree about longdesc. But I have seen this ratehole before and I am going to slowly back away from the entrance

[02:33:11.0000] <jgraham>
*rathole

[02:33:14.0000] <nessy>
lol

[02:35:53.0000] <annevk>
nessy: I'm happy to mostly be working on non-HTML specs and when I touch HTML it's usually API or architecture land and not semantics

[02:36:13.0000] <MikeSmith>
höllenloch

[02:37:38.0000] <nessy>
annevk: I'm impressed with the URI stuff you're doing

[02:38:01.0000] <zcorpan_>
MikeSmith: darobin: thanks

[02:39:05.0000] <darobin>
zcorpan_: not sure what I'm being thanked for, but you're welcome at any rate :)

[02:39:10.0000] <nessy>
(eh I think you prefer s/URI/URL/ - sorry - old habits don't die easily)

[02:39:27.0000] <darobin>
shouldn't it be renamed to IRI?

[02:39:36.0000] <darobin>
/me vanishes in case anyone bites

[02:39:49.0000] <annevk>
nessy: heh, thanks, it's getting there, but the IDN stuff is annoying

[02:40:00.0000] <zcorpan_>
darobin: in case you did something that helped fixing the ldap issue. if you didn't, then please disregard the thanks! :-P

[02:40:25.0000] <darobin>
zcorpan_: oh man, I'm sorry to say that neither MikeSmith nor I had anything to do with that

[02:40:31.0000] <darobin>
W3C has a kick arse systems team

[02:40:32.0000] <nessy>
annevk: have you thought about specifying query params?

[02:40:44.0000] <MikeSmith>
zcorpan_: what darobin said

[02:40:56.0000] <zcorpan_>
bringing it to their attention counts as helping

[02:41:03.0000] <zcorpan_>
but maybe they knew about it already

[02:41:04.0000] <annevk>
nessy: only in API form

[02:41:16.0000] <annevk>
nessy: probably matching the application/x-www-form-urlencoded syntax

[02:41:27.0000] <darobin>
zcorpan_: given the level of monitoring they have, I wouldn't be surprised if they knew before anyone noticed there was a problem

[02:41:36.0000] <MikeSmith>
yeah

[02:41:53.0000] <MikeSmith>
the watchdogs are watching

[02:42:02.0000] <darobin>
most of the time when I go to report a problem they're already talking about the fixes

[02:42:57.0000] <nessy>
annevk: that's what I was hoping for

[02:44:17.0000] <annevk>
nessy: I don't think I'll ever include it directly in the URL parser because it isn't used in that way by many URL schemes, but for the API it makes sense as that's mostly used for http/https/file

[02:44:53.0000] <annevk>
biab

[02:52:24.0000] <MikeSmith>
JS question: what's the best-practice alternative for doing the equivalent of jquery $.data() ?

[02:53:32.0000] <MikeSmith>
I have some code I want to use that relies on JQuery methods but having JQuery for this code in this case is just overkill

[02:54:28.0000] <MikeSmith>
it is bad practice to just add a custom properties to the element and store the data there?

[02:55:00.0000] <MikeSmith>
or are there any gotchas or doing that?

[02:55:13.0000] <MikeSmith>
is that the way people normally do it without using some library?

[02:55:39.0000] <jgraham>
Well if you use a data-* attribute name that is fine

[02:56:26.0000] <jgraham>
(one could argue that there are problems with putting your data directly in the DOM in general, but if your application is too small for jQuery it is certainly too small for that)

[02:56:30.0000] <annevk>
MikeSmith: use element.dataset? y u no HTML5?!!1!

[02:56:39.0000] <MikeSmith>
heh

[02:56:47.0000] <MikeSmith>
but I can only use strings for that right?

[02:57:12.0000] <jgraham>
You can only store strings in attributes in general?

[02:57:39.0000] <jgraham>
Unless jQuery is setting IDL attributes I guess

[02:58:17.0000] <annevk>
MikeSmith: yeah, setting expandos is somewhat dangerous as you might clash with future extensions to the DOM and such

[02:58:43.0000] <annevk>
MikeSmith: maybe we should have a dataany thingie that holds anything and recommend people to use that, dunno

[02:59:28.0000] <MikeSmith>
jgraham: yeah I meant directly setting IDL attributes

[02:59:46.0000] <annevk>
hmm

[02:59:56.0000] <annevk>
I'm starting to get to the point where I need to update fetch

[03:00:15.0000] <annevk>
maybe I should use a wiki for now to define the about and javascript schemes?

[03:00:31.0000] <MikeSmith>
annevk: I don't care much about clashing with future extensions to the DOM. I can just rewrite the code if I get to a case like that

[03:00:46.0000] <annevk>
MikeSmith: then just do element.whatever = whatever I guess

[03:00:54.0000] <MikeSmith>
ok

[03:01:10.0000] <annevk>
MikeSmith: maybe with a prefix so if people copy your code there's less of a chance

[03:01:37.0000] <MikeSmith>
annevk: rather than wiki, maybe a github repo that people can make pull requests for, and then you set up a GH pages branch to auto-publish from it

[03:01:44.0000] <MikeSmith>
annevk: yeah, OK

[03:02:08.0000] <MikeSmith>
I think I'll choose the prefix "vnu-" for this case

[03:02:13.0000] <annevk>
MikeSmith: well yeah, I can do the whole GitHub thing, but the point is that these need to be in whatwg/fetch

[03:02:23.0000] <annevk>
but I don't want to take all of fetch on right now

[03:02:27.0000] <MikeSmith>
ah

[03:03:15.0000] <annevk>
actually, javascript might need to be in HTML in the end, as subsection of navigate

[03:03:29.0000] <MikeSmith>
why?

[03:03:52.0000] <annevk>
because it will only function within that context

[03:04:03.0000] <annevk>
<img src=javascript> would just be a network error

[03:04:21.0000] <annevk>
(javascript URLs would never reach fetch is the plan)

[03:04:58.0000] <annevk>
http://wiki.whatwg.org/wiki/URL#Schemes has a rough outline of my thinking at this point for the distribution

[03:14:29.0000] <MikeSmith>
/me reads 

[03:16:10.0000] <MikeSmith>
a mailto scheme is not necessarily external

[03:16:27.0000] <MikeSmith>
doesn't necessarily need to launch an external application

[03:16:54.0000] <MikeSmith>
if the app the link is in is itself a handler for mailto

[03:16:59.0000] <MikeSmith>
same goes for skype

[03:18:46.0000] <MikeSmith>
othermaciej: can I get editbugs for WebKit bugzilla or is that only for committers and reviewers?

[03:18:58.0000] <othermaciej>
MikeSmith: yes, you can

[03:19:07.0000] <MikeSmith>
ok

[03:19:13.0000] <MikeSmith>
who should I ping?

[03:19:18.0000] <othermaciej>
MikeSmith: can you see if anyone on #webkit can hook you up?

[03:19:23.0000] <MikeSmith>
yup

[03:19:24.0000] <MikeSmith>
thanks

[03:19:26.0000] <othermaciej>
I have the power to do it but I really need to sleep

[03:19:31.0000] <MikeSmith>
ok

[03:19:33.0000] <MikeSmith>
np

[03:22:08.0000] <darobin>
MikeSmith: I think that in the rPH case you should still consider it "external"

[03:22:14.0000] <darobin>
even if external is yourself reloaded

[03:23:10.0000] <MikeSmith>
ok

[03:25:36.0000] <annevk>
MikeSmith: it's a broad kind of "external"; maybe I should rename it to "execute" or some such

[03:26:58.0000] <annevk>
ah yeah, and the registerProtocolHandler() case is handled before that, by navigating to some http/https thingie instead

[04:05:12.0000] <MikeSmith>
"Shopping a patch to implementors, to get something into a standard spec by asserting de-facto status based on the patch(es) landing, is bad form."

[04:06:44.0000] <MikeSmith>
but it's good form to say that on the dev list of a browser project other than your own, and impugn somebody else's motives who's making a code contribution and providing tests for it

[04:06:46.0000] <MikeSmith>
classy

[04:08:23.0000] <annevk>
He has a point though, I also think it's bad if the spec, the implementation, and the tests are all written by the same person

[04:08:53.0000] <MikeSmith>
even if nobody else stepped forward to write them?

[04:09:22.0000] <MikeSmith>
the guy cares enough about this to take the time to do all that

[04:09:41.0000] <MikeSmith>
and he's not a guy who's sitting around with a lot of time on his hands

[04:10:37.0000] <MikeSmith>
de-moralizing people who are trying in good faith to contribute something is not helpful

[04:11:55.0000] <MikeSmith>
normally I don't give a shit

[04:12:10.0000] <MikeSmith>
but I don't like to see people get bullied

[04:12:11.0000] <MikeSmith>
r

[04:13:17.0000] <annevk>
You must see that <main> is not exactly set in stone and that there's clearly some people not liking it and some people liking it?

[04:13:38.0000] <tobie>
that's orthogonal to MikeSmith's point, though.

[04:13:46.0000] <annevk>
Maybe a bad analogy, but the people behind XForms also wrote patches for Gecko and did a bunch of work, only to see it rejected down the line.

[04:14:11.0000] <tobie>
I think MikeSmith smith was commenting on the form of the rejection, rather than the rejection itself.

[04:14:56.0000] <annevk>
Well if you take Brendan's email as rejection for the WebKit project I think you're being silly. He obviously has no power whatsoever there.

[04:16:16.0000] <MikeSmith>
annevk: of course I know it's not set in stone

[04:16:58.0000] <tobie>
s/rejection/comment/

[04:17:05.0000] <tobie>
:)

[04:17:07.0000] <MikeSmith>
and obviously there's some disagreement about it and I frankly don't personally care much how it works out either way

[04:17:36.0000] <MikeSmith>
I would be happy if none of the HTML5 structural elements ever existed

[04:18:16.0000] <MikeSmith>
but there was not intent here to "get something into a standard spec by asserting de-facto status based on the patch(es) landing" as far as I can tell

[04:18:37.0000] <annevk>
Oh, that was certainly my impression

[04:21:07.0000] <tobie>
I'm increasingly convinced `main` is just a honey pot. Not yet sure who the master mind behind it is.

[04:22:29.0000] <tobie>
;)

[04:24:39.0000] <smaug____>
annevk: why does getElementsByTagName in DOM(4) work differently from the same method in DOM 3 ?

[04:27:56.0000] <MikeSmith>
it's not my impression

[04:27:59.0000] <MikeSmith>
maybe I'm wrong

[04:28:41.0000] <MikeSmith>
but he's not in a position to unilaterally get something implemented

[04:29:24.0000] <MikeSmith>
if there's fault there, it's a fault of naiveté about how it would be perceived and received

[04:30:27.0000] <MikeSmith>
also, regarding "the high bar required to add a new element to HTML", yeah I remember that high bar from the time when the <menuitem> landed

[04:31:12.0000] <MikeSmith>
I remember the extensive public discussion we all had about that before the code went in

[04:42:13.0000] <annevk>
smaug____: what is different?

[04:44:10.0000] <annevk>
MikeSmith: that it landed does not make it a done deal; Microsoft landed VML years ago, now it's like it never happened

[04:45:01.0000] <annevk>
MikeSmith: but sure, there's a lot of hypocrisy :-)

[04:45:06.0000] <smaug____>
annevk: DOM3 works on tagNames, like the method name says, DOM uses localName

[04:45:34.0000] <annevk>
smaug____: I think that's because hsivonen asked for that

[04:46:32.0000] <smaug____>
/me kicks hsivonen :)

[04:47:26.0000] <annevk>
smaug____: I don't remember the fine details right now, but I suspect it was because of HTML and XHTML integration

[04:47:56.0000] <smaug____>
yeah

[04:47:59.0000] <smaug____>
https://bugzilla.mozilla.org/show_bug.cgi?id=816012

[04:48:12.0000] <smaug____>
it just feel very risky to change the behavior

[04:49:00.0000] <annevk>
I also think different browsers did different things already

[04:49:17.0000] <smaug____>
very likely

[04:55:51.0000] <MikeSmith>
I guess in contrast the hypocrisy around the spec republishing is an unsurprising hypocrisy

[04:55:59.0000] <MikeSmith>
it's part of a hypocrisy bundle

[04:56:41.0000] <MikeSmith>
hypocrisy coming from somebody you actually respect is a different kind of thing

[04:57:20.0000] <MikeSmith>
anyway I guess I should just stay out of it

[05:06:22.0000] <annevk>
MikeSmith: I often wish I had :-)

[05:06:44.0000] <annevk>
btw http://wiki.whatwg.org/wiki/URL_schemes

[05:07:23.0000] <annevk>
/me fixes the mistakes

[05:07:36.0000] <smaug____>
about:invalid ?

[05:08:21.0000] <MikeSmith>
wow i didn't even know about http://www.iana.org/assignments/about-uri-tokens/about-uri-tokens.xml .. when you obsolete something that's totally obscure is it still called "obsoleting"?...

[05:09:12.0000] <annevk>
smaug____: some CSS thing apparently

[05:09:36.0000] <annevk>
I guess I should add links

[05:09:49.0000] <smaug____>
I wonder why CSS needs about:invalid

[05:10:58.0000] <annevk>
it was explained to me at some point and then I promptly forgot, but I remember the reasoning was sound

[05:11:17.0000] <MikeSmith>
http://www.ietf.org/mail-archive/web/uri-review/current/msg01606.html

[05:11:20.0000] <MikeSmith>
it seems

[05:12:31.0000] <MikeSmith>
"when a URI is necessary, but the default value shouldn't be resolveable as any type of document."

[05:12:35.0000] <MikeSmith>
http://www.w3.org/TR/css3-values/#about-invalid

[05:24:57.0000] <Ms2ger>
smaug____, forgot you already reviewed my patch for getElementsByTagName? :)

[05:25:56.0000] <smaug____>
Ms2ger: but we didn't change the behavior

[05:26:03.0000] <smaug____>
Ms2ger: you didn't land the patch ?

[05:26:10.0000] <Ms2ger>
No, because you r-'d

[05:26:14.0000] <smaug____>
ahaa

[05:26:17.0000] <smaug____>
good! :)

[05:26:24.0000] <smaug____>
I can't remember what all I remember

[05:26:55.0000] <smaug____>
er

[05:26:59.0000] <smaug____>
oops

[05:27:07.0000] <smaug____>
I can't remember what all I review

[05:27:26.0000] <smaug____>
silly me

[05:28:26.0000] <Ms2ger>
Well dammit

[05:28:34.0000] <Ms2ger>
jgraham, timeout() still doesn't work :/

[05:28:58.0000] <jgraham>
Ms2ger: Oh. Well that seems like a bug then

[05:29:18.0000] <jgraham>
wilhelm_: Interesting, thanks

[05:30:12.0000] <Ms2ger>
jgraham, (I guess that's the server we use for mobile testing)

[05:30:58.0000] <annevk>
SimonSapin: yo, you could add data URLs here for now if you want: http://wiki.whatwg.org/wiki/URL_schemes

[05:39:31.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-html-comments/2012Nov/0008.html "I've not heard compelling arguments for why Microdata doesn't deserve to be a CR, rather I've only heard protectionism."

[05:39:33.0000] <MikeSmith>
bravo

[05:39:56.0000] <MikeSmith>
good application of the word "protectionism"

[05:39:57.0000] <MikeSmith>
apt

[05:42:45.0000] <marcosc>
STRAWMAN!!!!

[05:42:47.0000] <marcosc>
:)

[05:43:48.0000] <Ms2ger>
Who cares?

[05:44:23.0000] <SimonSapin>
annevk: you mean adding what? Start collecting spec ambiguities?

[05:44:47.0000] <annevk>
SimonSapin: and defining the new spec :)

[05:44:57.0000] <marcosc>
Ms2ger: agreed

[05:45:25.0000] <annevk>
If the W3C blocks Microdata, it's 2004 all over again.

[05:45:29.0000] <SimonSapin>
annevk: I wanted to start with tests, so that would need some JS to run

[05:45:40.0000] <marcosc>
annevk: that's what I told them too

[05:45:52.0000] <annevk>
I'm on the fence whether I would find that enjoyable or simply bad

[05:46:11.0000] <annevk>
SimonSapin: fair enough

[05:47:56.0000] <MikeSmith>
Microdata is not going to be blocked

[05:48:19.0000] <MikeSmith>
the story on this was already written a long time ago

[05:48:37.0000] <Ms2ger>
Let's block ALL THE THINGS

[05:48:40.0000] <MikeSmith>
on the assumption that everybody was acting in good faith

[05:49:25.0000] <Ms2ger>
/me tries really hard to avoid a cynical response

[05:49:26.0000] <MikeSmith>
there's no support anywhere for coming around after to attempt to re-write the story

[05:49:47.0000] <kennyluck>
annevk, how is that the same? In 2004, you care about HTML. Do you care about Microdata now?

[05:50:12.0000] <annevk>
kennyluck: it's not really about me, it's just about the situation

[05:50:52.0000] <kennyluck>
Isn't it true that Microdata doesn't have a driving force like HTML used to have?

[05:51:04.0000] <jgraham>
This is the kind of "anywhere" that exlcudes the people who are trying to rewrite the story, right?

[05:51:11.0000] <marcosc>
kennyluck: agree with annevk. It's an attempt by one group to abuse the w3c process to block something else.

[05:51:20.0000] <annevk>
kennyluck: sounds false to me, unless you diccount schema.org somehow...

[05:51:22.0000] <darobin>
a small group, too

[05:51:34.0000] <darobin>
since that's not even the position of the RDFa group

[05:51:55.0000] <marcosc>
darobin: it's also the position of the chair of RDF, it seems

[05:52:12.0000] <marcosc>
at least that's what I understood from a public-html-comment email

[05:52:26.0000] <darobin>
marcosc: which one?

[05:52:35.0000] <annevk>
and of timbl, via a Twitter RT

[05:53:04.0000] <marcosc>
darobin: http://lists.w3.org/Archives/Public/public-html-comments/2012Nov/0003.html

[05:53:04.0000] <kennyluck>
annevk, I don't see many people sending feedback about the spec on the WHATWG list.

[05:53:05.0000] <darobin>
I think that timbl will recuse himself from that decision

[05:53:39.0000] <darobin>
marcosc: *shrug*, it's just his position as an individual, he's not speaking for the RDF WG

[05:53:50.0000] <Ms2ger>
/me yawns

[05:53:51.0000] <annevk>
kennyluck: it's not as big as saying no to the entire platform we're building, is that the point you're making?

[05:53:56.0000] <darobin>
/me joins Ms2ger

[05:54:06.0000] <annevk>
naptime?

[05:54:13.0000] <marcosc>
darobin: I knows :) I'm also going to go hang out with Ms2ger now.

[05:54:20.0000] <Ms2ger>
annevk, useful work time ;)

[05:54:30.0000] <darobin>
we've now reached the point at which this microdata non-event has been discussed here more than on public-html

[05:54:37.0000] <annevk>
Ms2ger: I'm weeks ahead of schedule

[05:54:37.0000] <darobin>
talk about signal-to-noise ratio problems!

[05:54:47.0000] <annevk>
for once

[05:55:03.0000] <annevk>
maybe because I'm not employed

[05:55:51.0000] <annevk>
darobin: yeah, I'm out of things to do so I figured I could waste some time discussing non-issues :-)

[05:55:58.0000] <marcosc>
annevk: Barbara tells me I work more now that I'm also unemployed. Isn't that strange :)

[05:56:37.0000] <darobin>
annevk: go fix HTTP or something

[05:56:42.0000] <annevk>
marcosc: clearly someone should pay us for not being employed

[05:57:08.0000] <marcosc>
annevk: agreed!

[05:57:13.0000] <jgraham>
annevk: Organise some meetings. That should kill your productivity.

[05:57:42.0000] <annevk>
wanna get together to discuss Microdata?

[05:58:02.0000] <jgraham>
I ahve a job and therefore meetings already

[05:58:09.0000] <jgraham>
Go discuss it with marcosc

[05:58:11.0000] <annevk>
next thing on my list is URLQuery

[06:00:31.0000] <kennyluck>
annevk, the point I am making is that the person who designed the spec doesn't actually work with the use cases. If the schema.org people (or other people who care about the use cases) were the ones who wrote the spec and still either actively maintain it or send feedback, I probably have different opinion.

[06:01:07.0000] <annevk>
kennyluck: not sure what that means

[06:02:18.0000] <annevk>
kennyluck: and Hixie does actively maintain Microdata and makes adjustments to it based on feedback, it's not dead

[06:03:54.0000] <kennyluck>
annevk, that I don't agree (the "actively" part), and I never have an idea why schema.org people don't show up on the mailing list.

[06:04:05.0000] <marcosc>
kennyluck: that's quite irrelevant to the discussion, IMO.

[06:05:05.0000] <annevk>
kennyluck: what's actively then? last change was a couple of days ago

[06:06:33.0000] <annevk>
kennyluck: and it seems kind of irrelevant, we're hardly discussing <head> these days, if somebody came along and said <head> should not proceed because, well <head2> is cooler, what then?

[06:07:24.0000] <annevk>
Ms2ger: btw, I'm gonna add initCustomEvent back

[06:07:44.0000] <Ms2ger>
wfm

[06:08:00.0000] <kennyluck>
annevk, http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Jun/0096 takes three months for a feedback. Would you really consider that "actively maintained"?

[06:08:33.0000] <kennyluck>
annevk, no body would send a <head2> proposal anyway. But Microdata is different.

[06:09:16.0000] <Ms2ger>
3 months? That's pretty good

[06:10:14.0000] <annevk>
kennyluck: dunno, the DOM has outstanding feedback from well over a year

[06:10:21.0000] <annevk>
kennyluck: I consider it actively maintained

[06:10:28.0000] <darobin>
actually a <head2> proposal could be a great way of adding new header stuff without Henri coming to your door with a silencer gun

[06:12:30.0000] <marcosc>
kennyluck: I have to agree. 3 months is generally considered ok. We don't want to give the impression that standards can move quickly.

[06:13:08.0000] <kennyluck>
*shrug*

[06:15:11.0000] <kennyluck>
I don't care about that notion of standards. ;)

[06:15:12.0000] <marcosc>
kennyluck: the point is, don't sit around and wait for stuff. Just work around the problem and get it (whatever that may be) done... except by abusing the W3C process with stupid formal objections.

[06:17:21.0000] <marcosc>
kennyluck: if the goal of the semantic web folks is to get structured data into HTML5 - and HTML5 gives you a mechanism that, as RDFa folks claim, is identical to RFDa, then you've already won.

[06:18:07.0000] <Ms2ger>
marcosc, it's identical, but it sucks

[06:20:16.0000] <annevk>
marcosc: except when it's called srcset right?

[06:20:43.0000] <marcosc>
annevk: exactly!

[06:21:14.0000] <kennyluck>
marcosc, as Hixie often says. The process is irrelevant. Play with it when you have time.

[06:21:16.0000] <marcosc>
rdf:srcset

[06:22:09.0000] <marcosc>
speaking of srcset ... about to file bugs on that https://gist.github.com/4161268

[06:37:33.0000] <annevk>
Ms2ger: so I'm looking at http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Node-replaceChild.html

[06:37:40.0000] <annevk>
Ms2ger: and https://www.w3.org/Bugs/Public/show_bug.cgi?id=17318

[06:38:27.0000] <annevk>
Ms2ger: and the results for the test seem different from what you say they are

[06:38:40.0000] <Ms2ger>
Seems possible

[06:38:53.0000] <Ms2ger>
Maybe stuff changed

[06:39:33.0000] <Ms2ger>
brb phone

[06:40:05.0000] <annevk>
Ms2ger: Chrome never seems to throw NotFoundError (or you missed a case)

[06:40:17.0000] <annevk>
Ms2ger: Opera and Firefox have when they throw NotFoundError reversed

[06:41:25.0000] <karlcow>
/me is trying to replace the "benefits of the doubt" by the "benefits of the FUD" in my vocabulary

[06:43:29.0000] <annevk>
Ms2ger: I think doing HierarchyRequestError all the time might be simplest

[06:45:23.0000] <Ms2ger>
I dunno, I guess

[06:45:39.0000] <annevk>
Ms2ger: the other option is adding an extra step

[06:46:00.0000] <annevk>
Ms2ger: or have an implementation per node type (which I think some implementations have)

[06:46:22.0000] <Ms2ger>
Yeah, WebKit does that

[06:46:44.0000] <annevk>
Ms2ger: funnily enough they also do the thing with HierarchyRequestError all the time

[06:48:56.0000] <annevk>
Ms2ger: ooh fuck

[06:49:12.0000] <annevk>
Ms2ger: so maybe it should just align with pre-insert?

[06:49:29.0000] <Ms2ger>
Sounds good

[06:49:40.0000] <annevk>
Ms2ger: because pre-insert does what the old DOM spec said

[06:49:54.0000] <annevk>
it has more checks, but I guess that's acceptable

[06:50:19.0000] <annevk>
did I mention I don't like these algorithms?

[06:50:55.0000] <Ms2ger>
Maybe once or twice :)

[06:53:38.0000] <annevk>
Ms2ger: should I leave the bug open for you to fix the tests?

[06:53:59.0000] <Ms2ger>
Wait, weren't you going to match the test? :)

[06:54:14.0000] <annevk>
the test matches the spec

[06:54:40.0000] <annevk>
the new spec matches Gecko

[06:54:50.0000] <annevk>
and if the test is fixed, Gecko would have no failures

[06:55:01.0000] <annevk>
(also matches DOM3 per some reading of DOM3)

[06:55:04.0000] <Ms2ger>
Er, you're right

[06:55:31.0000] <Ms2ger>
Lemme fix the test now

[07:02:22.0000] <annevk>
Looking at https://www.w3.org/Bugs/Public/show_bug.cgi?id=18581 now

[07:02:32.0000] <annevk>
I guess we can move some of those checks up

[07:05:49.0000] <annevk>
smaug____: should we put getElementsByTagName() and friends on DocumentFragment too?

[07:05:54.0000] <annevk>
smaug____: i.e. put it on rootnode

[07:06:58.0000] <smaug____>
yes, makes sense

[07:07:11.0000] <manu1>
marcosc: The reason I keep calling staw man on your arguments is that you continue to mis-represent the point I'm attempting to make as if there is some conspiracy going on. The Microdata objection isn't the position of the RDFa WG, it's not my position as chair of the RDFa WG, it's my opinion as a member of the HTML WG. You can call it protectionism if you want to, but I don't see it that...

[07:07:13.0000] <manu1>
...way at all. I'm expressing an opinion and trying to see what others in the group think.

[07:07:32.0000] <Ms2ger>
Dammit

[07:07:40.0000] <Ms2ger>
Not again

[07:08:33.0000] <manu1>
I'm sure it's easy to paint it in the light that you have done as it removes all of the nuance in the argument and makes it seem as if I am taking a far more extreme position as I am taking. I specifically avoided raising a formal objection at this point to try and ease into the discussion, but there really is no easy way of saying: "I don't agree with what we're doing and I think it needs...

[07:08:35.0000] <manu1>
...to change."

[07:10:22.0000] <manu1>
Don't worry, Ms2ger, just clearing up the broad-brush statements that marcosc keeps asserting as my position (which is clearly not my position).

[07:10:36.0000] <manu1>
I'm done.

[07:11:09.0000] <annevk>
manu1: marcosc is trying the "Mad Max" approach

[07:12:33.0000] <manu1>
decisions always seem easier when you make it about "all or nothing" or "good vs. evil" or "Group A vs. Group B"

[07:13:27.0000] <manu1>
just pointing out that I'm specifically trying to suggest that we DO NOT do it that way.

[07:15:49.0000] <annevk>
manu1: you mean http://manu.sporny.org/2012/microdata-cr/ was not written by you?

[07:16:18.0000] <manu1>
annevk: Be direct, don't beat around the point you're trying to make. What's your point?

[07:16:47.0000] <annevk>
manu1: my point is that you are advocating a vs b; and you've chosen a

[07:17:20.0000] <annevk>
manu1: threatening with the near-meaningless "W3C Formal Objection" and such

[07:17:37.0000] <annevk>
manu1: calling people to arms

[07:17:49.0000] <annevk>
manu1: anyway, I got some DOM bugs to fix

[07:17:52.0000] <manu1>
That's a bit melodramatic, don't you think?

[07:18:02.0000] <annevk>
I think you are, yes :-)

[07:19:47.0000] <manu1>
All I'm saying is this: RDFa is already a REC, that's done. RDFa Lite basically does what Microdata does, so why do we have Microdata? Microdata goes to a W3C Note. W3C gets clarity on publishing specs that heavily overlap. People can still choose.

[07:20:44.0000] <annevk>
You make it sound like a REC means anything. HTML4/DOM2/CSS1/etc. are all evidence to the contrary.

[07:21:02.0000] <manu1>
if REC doesn't mean anything to you, then why is this such a big deal, then?

[07:22:11.0000] <annevk>
Because I'd like the W3C to work, but if it keeps repeating its mistakes of the past it obviously won't.

[07:22:48.0000] <manu1>
I'd like the W3C to work as well, and I think publishing two specs that accomplish basically the same thing in basically the same way shows breakage.

[07:34:18.0000] <annevk>
Bit late for that. XDM vs DOM, XPath vs Selectors, XSL-FO vs CSS, XSLT vs XQuery, XQuery vs XQueryX, RDF/XML vs Turtle, XForms vs Web Forms 2.0, XHTML 1.0 vs HTML 4.01, XML 1.0 4th Edition vs XML 1.0 5th Edition, XML 1.0 vs XML 1.1, etc.

[07:36:46.0000] <darobin>
heh

[07:36:48.0000] <darobin>
not all of those are fair

[07:36:53.0000] <darobin>
but I guess that's not the point :)

[07:37:44.0000] <jgraham>
FWIW I think blocking specs for political reasons shows breakage

[07:40:26.0000] <GPHemsley>
Hixie: Hopefully addressed the wiki issue, independent of your message.

[07:41:22.0000] <GPHemsley>
Hixie: All writing systems are gonna be wacky in some cases.

[07:41:31.0000] <GPHemsley>
wacked, too

[07:41:58.0000] <manu1>
jgraham: You're assuming to know what I'm thinking - that I'm doing this for political reasons. I have stated why I'm doing this - It's not for political reasons. I'm doing this because I think publishing both of these specs as RECs is a bad idea (and I've outlined why I think it's a bad idea).

[07:42:11.0000] <manu1>
I want the community to have a discussion about this.

[07:44:07.0000] <manu1>
If you take what I'm saying and choose to brush it aside and replace it with your own opinion of what I'm trying to do, then that's your prerogative. Just know that your opinion of what I'm doing is not aligned with what I'm actually trying to do.

[07:47:26.0000] <manu1>
annevk: Again - my point isn't about preventing competing technologies from both going to REC at W3C... it's about preventing competing technologies where you can search/replace keywords and translate between the two going to REC at W3C. There is a sliding scale here, it's not an all-or-nothing situation. To put it another way: When you can use a regex to switch from RDFa Lite to Microdata...

[07:47:28.0000] <manu1>
...and back, that seems like a good signal that syntaxes have effectively converged.

[07:48:22.0000] <jgraham>
I am happier letting the entire community evaluate with their actions rather than a small subset with their words

[07:48:51.0000] <manu1>
and the question I'm raising is: If two solutions are almost technically indistinguishable - should both of those technologies go to REC. I'm asserting that they shouldn't - others disagree.

[07:49:13.0000] <manu1>
jgraham: There is nothing to prevent that from happening if Microdata is published as a W3C Note.

[07:51:03.0000] <jgraham>
manu1: It is very hard to take you seriously when you are on one hand pushing very hard for something to be taken off the Rec. track and on the other saying that whether it is on the Rec. track doesn't matter

[07:52:18.0000] <manu1>
jgraham: Why do you feel that those two things are contradictory?

[07:52:51.0000] <manu1>
Looking at it from a W3C perspective, I think W3C should standardize on one thing when the technical solutions are so similar.

[07:53:24.0000] <gavinc>
Serious question, does anyone NOT think that Microdata and RDFa 1.1 Lite are technically equivalent?

[07:53:32.0000] <gavinc>
not NOT

[07:53:35.0000] <gavinc>
argh

[07:54:00.0000] <gavinc>
/me tries again too damn early in the morning

[07:54:01.0000] <manu1>
Looking at it from a WHATWG perspective, I think that if people choose Microdata in the market as the winner, it won't be because it was a W3C REC, it will be for other reasons.

[07:54:25.0000] <manu1>
I think both positions are perfectly reasonable ones to take simultaneously.

[07:54:26.0000] <gavinc>
Does anyone think that Microdata and RDFa 1.1 Lite have large technical differences?

[07:54:58.0000] <darobin>
/me wishes we rescinded more RECs, the stylesheet is pretty

[07:57:54.0000] <GPHemsley>
/me wishes he didn't spend all this time reading the backlog of this discussion.

[07:58:34.0000] <GPHemsley>
annevk: What is this obsession with about:unicorn? And why isn't about:mozilla in the list, then?

[08:00:06.0000] <darobin>
can we have about:dahut as well?

[08:01:12.0000] <marcosc>
/me sorry, back

[08:02:01.0000] <annevk>
GPHemsley: obsession?

[08:02:15.0000] <GPHemsley>
annevk: Well, you do talk about unicorn.svg a lot

[08:02:21.0000] <annevk>
GPHemsley: about:mozilla isn't cross-browser

[08:02:29.0000] <GPHemsley>
and about:unicorn is?

[08:02:33.0000] <annevk>
one day

[08:03:02.0000] <GPHemsley>
I mean, if we're gonna talk about about: easter eggs, about:mozilla is the granddaddy of them all

[08:03:57.0000] <GPHemsley>
http://en.wikipedia.org/wiki/The_Book_of_Mozilla

[08:06:38.0000] <marcosc>
manu1: what browsers implement RDFa?

[08:07:00.0000] <marcosc>
(what is the recommendation of RDFa based on? I don't know, just wondering)

[08:07:01.0000] <gavinc>
What is the need for browsers to implement RDFa?

[08:07:24.0000] <marcosc>
gavinc: I'm just wondering how it met its criteria to go to Rec?

[08:07:41.0000] <marcosc>
I don't know much (ok, anything) about RDFa

[08:07:50.0000] <marcosc>
so I'm wondering how it got to Rec

[08:08:38.0000] <annevk>
there's many ways to get to REC marcosc, the XHTML/RDF camp usually does so in a way that does not involve browsers

[08:08:59.0000] <marcosc>
annevk: I know, but I'm wondering what those ways are

[08:08:59.0000] <gavinc>
Hang on.

[08:09:18.0000] <manu1>
marcosc: RDFa got to REC how most other W3C specs get to REC - there was a spec, there was a test suite, and there were 7+ fully conforming and interoperable implementations of an RDFa processor.

[08:09:38.0000] <marcosc>
manu1: sure, do you have a pointer to those?

[08:09:40.0000] <annevk>
marcosc: saying it's a framework for other specs, providing a couple of script libraries, etc.

[08:10:31.0000] <annevk>
marcosc: that their usage of xmlns + : violates DOM consistency was apparently not a concern

[08:10:31.0000] <manu1>
marcosc: Here's the test suite for RDFa 1.0 and 1.1 in HTML4, HTML5, XHTML1, XHTML5, XML and SVG: http://rdfa.info/test-suite/

[08:10:46.0000] <gavinc>
http://www.w3.org/2010/02/rdfa/drafts/2012/CR-implementation-report-20120503/

[08:11:00.0000] <marcosc>
thanks gavinc, that's what I was looking for

[08:11:01.0000] <manu1>
annevk: xmlns: - deprecated in RDFa 1.1 (and is allowed to be reported as an error)

[08:11:26.0000] <gavinc>
marcosc: not sure if there is a more recent one

[08:11:41.0000] <marcosc>
that's ok, it gives me an idea of the class of products

[08:12:24.0000] <gavinc>
annevk: RDF 1.1 doesn't require or recomended using xmlns

[08:13:13.0000] <gavinc>
marcosc: The Google crawler also consumes RDFa

[08:13:32.0000] <marcosc>
gavinc: sure, but they are not part of the CR report

[08:13:38.0000] <marcosc>
so we don't know if they conform or not

[08:13:45.0000] <gavinc>
True.

[08:15:20.0000] <marcosc>
so, if RDFa is supposed to be used by Web browsers also, it would be nice to at least have one web browser supporting it, no?

[08:15:28.0000] <gavinc>
Still, this is still very political. I haven't seen anyone explain why Microdata today and RDFa 1.1 Lite are technically different.

[08:15:37.0000] <gavinc>
"supposed to be used"

[08:15:46.0000] <marcosc>
gavinc: did you read my email?

[08:15:53.0000] <gavinc>
... clearly missed one?

[08:16:19.0000] <marcosc>
gavinc: the point I was making that having technically similar tech don't actually matter. As annevk pointed out above

[08:16:24.0000] <annevk>
time to make Range.detach() a no-op, seems AryehGregor's experiment succeeded

[08:17:17.0000] <marcosc>
gavinc: I'm confused about RDFa, when I add it to my page, how to I then use it in the browser? Is there some kind of API?

[08:18:33.0000] <JibberJim>
I guess the point is marcosc - are browsers the only audience of your page?  If you believe they are, then there's no value in RDFa, because the human using the browser will have the information anyway.

[08:18:54.0000] <gavinc>
heck there isn't any clear value for microdata

[08:18:59.0000] <linclark>
there are still some technical differences between microdata and rdfa 1.1 lite.

[08:19:18.0000] <marcosc>
JibberJim: they are the main target of my apps

[08:19:23.0000] <gavinc>
the major use case that we see today is from search engines and aggregation

[08:19:25.0000] <manu1>
marcosc: RDFa API implementation if you want to consume your own content in the browser: http://code.google.com/p/green-turtle/

[08:19:35.0000] <marcosc>
JibberJim: sometimes I add metadata for things like Facebook, etc

[08:19:47.0000] <gavinc>
marcosc: Ah! You used RDFa ;) Well done.

[08:21:01.0000] <marcosc>
gavinc: well, there ya go :) You learn something new everyday

[08:21:25.0000] <marcosc>
manu1: I don't want to be importing external libs

[08:22:07.0000] <marcosc>
manu1: seems like something that should be in the browser by default

[08:22:34.0000] <gavinc>
the obvious reason for a lack of an RDFa API in the browser and the lack of USE of the microdata API in the browser is that as far as I know no one has come up with a compelling reason to care about RDFa or microdata in the browser

[08:22:36.0000] <JibberJim>
So a standard for adding metadata for non-human visitors using a browser is probably a good thing.   But I don't see the benefit of it being in the browser - the information is already there on the page for the user?

[08:22:49.0000] <gavinc>
those that have (metadata in side a book) have used a library

[08:23:13.0000] <linclark>
gavinc: a microdata is also a lot easier to code

[08:23:22.0000] <linclark>
a microdata parser, rather

[08:23:29.0000] <gavinc>
err

[08:23:47.0000] <gavinc>
How did you come up with that?

[08:24:13.0000] <linclark>
I've written a microdata parser and have hacked on RDFa parsers such as ARC2's

[08:24:18.0000] <JibberJim>
Having metadata against a picture of a "Man with a giant cock"  - is useful to a non human visitor to establish that it's http://1.bp.blogspot.com/-c-cvrFDnBvY/TavlbrwNzmI/AAAAAAAAAik/CERjuQ6TTwg/s1600/big_cock.jpg and not something else - but the human using the browser will know.

[08:25:23.0000] <gavinc>
ARC2's (from memory) is mostly insane as it has to deal with an insane XML/HTML parser

[08:25:52.0000] <gavinc>
If your starting from a modern HTML parser I can't see a huge difference between them

[08:26:03.0000] <linclark>
gavinc: that's true, but look at rdfQuery vs MicrodataJS

[08:26:04.0000] <linclark>
http://code.google.com/p/rdfquery/source/browse/trunk/jquery.rdfa.js

[08:26:06.0000] <manu1>
gavinc: No, Microdata parsers are much easier to write than RDFa...

[08:26:07.0000] <linclark>
https://gitorious.org/microdatajs/microdatajs/blobs/master/jquery.microdata.js

[08:26:38.0000] <manu1>
some of that is because of the legacy RDFa 1.0 -> RDFa 1.1 upgrade, most of it is because of more advanced features of RDFa.

[08:27:24.0000] <manu1>
but, the pain of the few (implementers) is sacrificed for the gain of the many (authors)... aaaaand, que RDFa is more difficult to author than Microdata perma-thread.

[08:27:42.0000] <linclark>
ha

[08:31:12.0000] <gavinc>
/me and this is still more useful then talking about blank nodes again... sigh

[08:35:56.0000] <dglazkov>
good morning, Whatwg!

[08:50:30.0000] <annevk>
SimonSapin: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19494 (data URLs)

[08:51:53.0000] <SimonSapin>
annevk: looking

[08:58:36.0000] <hsivonen>
huh. neither a w3cmeme nor a webkitmeme about <main>

[09:00:39.0000] <annevk>
jreschke: why not just hang out here if you read the logs anyway? :)

[09:01:05.0000] <annevk>
hsivonen: kinda disappointing

[09:04:47.0000] <GPHemsley>
ugh, Safari downloads

[09:05:05.0000] <GPHemsley>
/me doesn't understand why anyone would ever use Safari

[09:09:44.0000] <dglazkov>
hsivonen: the battles are so fierce because the stakes are so low.

[09:10:50.0000] <annevk>
https://github.com/joyent/node/pull/1580 is a good example of that dglazkov

[09:10:59.0000] <annevk>
(if you like memes, read it to the end)

[09:15:44.0000] <dglazkov>
annevk: fire all of these people

[09:18:08.0000] <marcosc>
I'm deeply shocked that no one W3C-meme'ed the microdata vs RDFa thing.

[09:19:33.0000] <GPHemsley>
annevk: Darn it, Anne, you almost made me read that whole thing again.

[09:21:05.0000] <marcosc>
hehe

[09:21:25.0000] <marcosc>
my fab is the scumbag :

[09:34:45.0000] <tantek>
/me scrolls up to read all the microdata vs rdfa kerfluffle.

[09:36:04.0000] <tantek>
I don't really understand efforts to block specs from progressing. a) it's hard enough to progress specs as it is, b) whether something is a "REC" has not mattered to web authors/publishers/developers for a while as far as whether they use it.

[09:37:19.0000] <tantek>
And if the argument is to avoid W3C specifying duplicate mechanisms, then might as well drop both microdata and RDFa, since you satisfy all the use cases with HTML 'class' attribute (e.f. microformats2), and frankly that's what developers tend to use a lot more than md or rdfa.

[09:37:49.0000] <tantek>
md has had some uptake recently, only because of a few folks at google advocating via schema.

[09:38:12.0000] <tantek>
(insert SEO folks obediently doing whatever anyone at google publicly suggests)

[09:38:25.0000] <scor>
tantek: have you seen any mf2 adoption? do you have examples?

[09:39:21.0000] <gavinc>
http://schema.org/docs/datamodel.html That page is staggeringly unhelpful if your trying to provide advice on "What should I use to encode meta data on my page?"

[09:39:28.0000] <tantek>
scor - have seen *some* mf2 adoption. the parsing spec and parsing implementations have been stable for only a couple of months or so.

[09:39:56.0000] <gavinc>
Why we have microdata and RDFa at the same time is still totally beyond me

[09:40:08.0000] <tantek>
so yes, it may be too new to tell with mf2, however the rate at how quickly people have been able to developer parsers (PHP, Node, clientside JS) is encouraging.

[09:40:32.0000] <tantek>
gavinc, we have microdata because it's less ugly and less typing than RDFa.

[09:40:45.0000] <gavinc>
"Our use of Microdata maps easily into RDFa Lite. In fact, all of Schema.org can be used with the RDFa Lite syntax as is. The RDFa Lite version of the markup looks almost isomorphic to the Microdata version"

[09:40:48.0000] <gavinc>
really? ;)

[09:40:50.0000] <tantek>
though both are horrendous (from a web author / hand coding perspective) compared to #microformats.

[09:41:24.0000] <tantek>
gavinc, yeah, the RDFa Lite 1.1 or RDFa 1.1 Lite was essentially squeezed into becoming md compat.

[09:41:47.0000] <gavinc>
Exactly! The spec took feedback

[09:41:52.0000] <gavinc>
isn't that what's supposed to happen?

[09:42:18.0000] <tantek>
md was (is?) easier to read/write than rdfa 1.0, that presented the market pressure that resulted in rda 1.1 lite

[09:42:31.0000] <tantek>
if it wasn't for md, rdfa 1.1 lite wouldn't exist.

[09:43:09.0000] <Hixie>
jgraham: if the vendors implement it, the spec will include it pretty much instantly. but i'm not convinced it'll be implemented. it doesn't serve its stated purpose.

[09:43:28.0000] <tantek>
and from a microformats perspective, the market feedback of *both* of those coming into existence provided substantial real world experience/pressure for the development of microformats2.

[09:43:30.0000] <Hixie>
as far as microdata goes, personally I think all RECs are pointless, so I'd be quite happy to see both HTML and Microdata not make it to REC :-)

[09:43:37.0000] <tantek>
lol

[09:44:43.0000] <marcosc>
gavinc: question: in the RDFa code I'm using, how does anything know what "og:" means? (i.e., in <meta property="og:site_name" content="my site">?)

[09:44:46.0000] <tantek>
I tend to agree re: md. I don't see much point in putting energy behind pushing it to a REC, but nor do I see any point in putting energy in *blocking* it going to REC.

[09:45:10.0000] <tantek>
marcosc, "og:" is a prefix squatted by FB/OGP.

[09:45:20.0000] <scor>
tantek: is the adoption / progress on mf2 documented anywhere? I'd like to follow it

[09:45:37.0000] <gavinc>
http://www.w3.org/2011/rdfa-context/rdfa-1.1.html

[09:45:54.0000] <tantek>
scor: for now, right on the wiki page for it: http://microformats.org/wiki/microformats2

[09:46:02.0000] <tantek>
adoption in particular:

[09:46:05.0000] <Hixie>
tantek: i do think there's something to learn from the way that you and i have never tried to stop the rdf nonsense (only sent feedback when asked to), but they keep trying to block microdata (and sometimes even mf?)

[09:46:21.0000] <tantek>
publishing examples (hopelessly undercomplete, just a sample) http://microformats.org/wiki/microformats2#Examples_in_the_wild

[09:46:39.0000] <tantek>
parsing / consuming code: http://microformats.org/wiki/microformats2#Implementations

[09:46:59.0000] <scor>
tantek: thanks, that's helpful

[09:47:11.0000] <tantek>
Hixie, no need to put energy into stopping something which has been an uphill battle all on its own.

[09:47:16.0000] <gavinc>
/me doesn'

[09:47:45.0000] <Hixie>
tantek: stopping anything just doesn't work, it'll just go elsewhere if it's good, and will die anyway if it's bad

[09:47:49.0000] <tantek>
there's attempts to block md and mf only because they've actually seen a more rapid adoption per unit time than any flavor of rdf

[09:48:11.0000] <tantek>
hixie, I tend to agree with that

[09:48:21.0000] <tantek>
there were pre-whatwg examples of that too

[09:48:31.0000] <gavinc>
err

[09:48:33.0000] <tantek>
e.g. all the W3C -> OASIS "going elsewhere"

[09:48:45.0000] <gavinc>
I'm unaware of anyone trying block microformats?

[09:49:03.0000] <gavinc>
did I miss a memo? Was I supposed to as an "RDF Person" go and do that?

[09:49:05.0000] <tantek>
gavinc - it's hard to block something which is public domain on a public wiki

[09:49:10.0000] <gavinc>
yes

[09:49:18.0000] <gavinc>
and why would any of the "RDF People"

[09:49:21.0000] <manu-db>
tantek, Hixie - actually, no - the reasons don't have to do w/ rapid adoption - the reasons have to do with three ways to do the same thing that are not really all that different from each other (at the core) and leading to confusion among web developers.

[09:49:22.0000] <tantek>
there's been blog posts saying it shouldn't exist etc. because rdf already exists

[09:49:31.0000] <tantek>
but they're a minority

[09:49:33.0000] <manu-db>
and there is no such thing as "RDF people".

[09:49:55.0000] <marcosc>
oh, I've seen them! RDF people are real!

[09:50:12.0000] <marcosc>
they are an angry lot, too

[09:50:12.0000] <gavinc>
foaf:Person? ;)

[09:50:14.0000] <tantek>
manu-db - if they're all the same to you, why not support the syntax easiest for authors?

[09:50:26.0000] <manu-db>
please take a picture next time you see one of them, marcosc - I'd love to see what one actually looks like in the wild.

[09:50:36.0000] <tantek>
gavinc: LOL

[09:51:49.0000] <manu-db>
tantek - I don't think it's useful to take a minority that says crazy things and project it onto what's happening right now.

[09:51:50.0000] <marcosc>
manu-db: http://philarcher.org/diary/2012/fearofrdf/

[09:52:03.0000] <marcosc>
That's what I got once for asking a question

[09:52:06.0000] <marcosc>
about RDF

[09:52:13.0000] <gavinc>
tantek: ... what is the easiest syntax? At the time that microdata came into being the drafts of RDFa were better and easier to use then it was, and microdata was totally fragmented.

[09:52:51.0000] <tantek>
gavinc - initial md was *much* easier than rdfa at the time due to the property vs. rel problem

[09:52:59.0000] <tantek>
and prefixes

[09:53:02.0000] <gavinc>
rel/rev sucked.

[09:53:04.0000] <gavinc>
Yes.

[09:53:06.0000] <tantek>
right

[09:53:25.0000] <tantek>
so rdfa 1.1 lite learned from md (and via market/political (read: Google/Schema) pressure)

[09:53:27.0000] <gavinc>
I admit to still not buying the prefix thing

[09:53:31.0000] <tantek>
and dropped dependency on rel/rev

[09:53:40.0000] <gavinc>
Yeah, rel/rev was BAD.

[09:53:42.0000] <tantek>
gavinc, prefixes are well documented failures

[09:54:03.0000] <GPHemsley>
/me continues to wonder why this discussion is happening here.

[09:54:06.0000] <tantek>
here, in case you haven't seen this: http://microformats.org/wiki/namespaces-considered-harmful

[09:54:11.0000] <gavinc>
No, XML namespaces are a well documented failure :D

[09:54:20.0000] <tantek>
GPHemsley - because someone brought it? ;)

[09:54:27.0000] <manu-db>
+1 to gavinc

[09:55:39.0000] <manu-db>
tantek: We haven't seen widespread misuse of prefixes in RDFa... in fact, most people use them correctly... and for those that don't, there is the RDFa initial context.

[09:55:42.0000] <gavinc>
tantek: my opinion from 3 years ago hasn't really been changed, http://gavin.carothers.name/2009/09/22/prefixes-not-that-complicated/

[09:55:51.0000] <tantek>
gavinc, in particular: prefixes fail due to: "in practice people write scrapers that look for namespace prefixes as if they are part of the element name, or perform literal string matches on common namespace prefix uses (e.g. 1), not as mere shorthands for namespace URIs. "

[09:56:13.0000] <manu-db>
tantek: Data to back up that practice w/ RDFa ?

[09:56:39.0000] <Hixie>
RDFa has existed for years, if it was going to go anywhere it'd be there already

[09:56:42.0000] <Hixie>
same with RDF

[09:56:52.0000] <Hixie>
it's just tiresome to have these discussions over and over and over

[09:56:54.0000] <gavinc>
/me notes that it did go some where

[09:57:09.0000] <tantek>
manu-db: the way "og:" means Facebook OGP and nothing else.

[09:57:14.0000] <manu-db>
Hixie - RDFa going somewhere (along w/ Microdata + schema.org): http://webdatacommons.org/vocabulary-usage-analysis/index.html

[09:57:17.0000] <gavinc>
/me isn't from the 2004 crowd and neither is manu

[09:57:44.0000] <manu-db>
tantek: no, who is scraping data in the way that you're asserting that they scrape data.

[09:57:47.0000] <tantek>
as such, either RDFa prefixes/namespaces are a giant failure (per adoption of hardcoded "og:"), or Facebook OGP isn't really RDFa (please update all your adoption graphs/charts accordingly)

[09:58:03.0000] <tantek>
both Facebook at Twitter scrape "og:"

[09:58:24.0000] <manu-db>
tantek: There is a difference between everyone using 'og' to mean Open Graph (just because that's common practice) and parser writers just scraping data assuming certain prefixes.

[09:58:25.0000] <tantek>
and vast majority of "og:" markup lacks any namespace URI declaration

[09:58:48.0000] <gavinc>
Facebook works fine if you define another prefix to match the URI

[09:58:49.0000] <manu-db>
tantek: So what - the RDFa initial context pre-defines it.

[09:58:53.0000] <gavinc>
or if you just use the full URI

[09:59:02.0000] <manu-db>
also, what Gavin said - Facebook has implemented correctly.

[09:59:05.0000] <gavinc>
can't say that I've tested twitter

[09:59:29.0000] <manu-db>
/me has no idea what Twitter does, but I'd expect the data they're getting back to work just fine in most cases.

[09:59:35.0000] <tantek>
gavinc - test case to back up your claim? all evidence I've seen shows fb treating "og:" as OGP always.

[09:59:44.0000] <gavinc>
Ah, that's not what I said.

[09:59:49.0000] <gavinc>
That may be true

[09:59:57.0000] <tantek>
right, they just scrape it

[10:00:03.0000] <gavinc>
but if you define something else to be the same URI

[10:00:06.0000] <gavinc>
it works

[10:00:14.0000] <gavinc>
eg, they don't require you to use og:

[10:00:18.0000] <gavinc>
you can use facebook:

[10:00:20.0000] <manu-db>
test case to prove your assertion, tantek?

[10:00:23.0000] <gavinc>
or the full URI

[10:00:28.0000] <tantek>
gavinc - doesn't affect my argument

[10:00:37.0000] <gavinc>
mmm

[10:00:44.0000] <tantek>
manu-db, search for any publishing of "og:" on the web :)

[10:00:45.0000] <gavinc>
I don't KNOW if what your saying is true.

[10:00:48.0000] <tantek>
they're everywhere

[10:00:49.0000] <manu-db>
of course it does - you're saying that they blindly scrape 'og' and just 'og' - and they don't.

[10:01:12.0000] <tantek>
any use of namespaces that gains adoption deteriorates into scraping prefixes

[10:01:25.0000] <gavinc>
I can't think of a case where someone is using og: to mean something else...

[10:01:27.0000] <gavinc>
mmm

[10:01:28.0000] <tantek>
s/namespaces/namespace prefixes

[10:01:33.0000] <manu-db>
again, data to back up your assertion, tantek?

[10:01:35.0000] <gavinc>
but the reverse is true

[10:01:48.0000] <tantek>
manu-db, you're a fan of google searches, look it up ;)

[10:02:23.0000] <tantek>
essentially, "og:" might as well have been "og_"

[10:02:33.0000] <Hixie>
manu-db: i can't find baseline numbers on that page, but looking at http://events.linkeddata.org/ldow2012/papers/ldow2012-inv-paper-1.pdf which they link to, the highest amount they find is 5.5% penetration per eTLD, for microformats in general. That's pretty low.

[10:02:36.0000] <gavinc>
so the question would be concretely does defining another URI to the og: prefix correctly NOT get parsed by facebook?

[10:02:41.0000] <tantek>
and using meta name="og_foobar" rather than meta property="og:foobar"

[10:02:54.0000] <manu-db>
tantek: http://yourlogicalfallacyis.com/burden-of-proof :)

[10:02:56.0000] <tantek>
in practice og is just metatags using "property" instead of "name"

[10:04:52.0000] <Hixie>
manu-db: and as far as i can tell, it's for a _very_ small number of vocabularies, which calls into doubt the whole point of having this hugely extensible system.

[10:05:12.0000] <tantek>
Hixie, but microdata is a hugely extensible-system ;)

[10:05:22.0000] <manu-db>
Hixie: Yes, but compared to what? HTML? Anything compared to HTML is going to be pretty dismal. I all depends on where your bar for a "successful Web technology" lies.

[10:05:22.0000] <Hixie>
yeah, i'm not a fan of microdata either

[10:05:34.0000] <gavinc>
THEN WHY DID YOU CREATE IT?!

[10:05:38.0000] <tantek>
(as is microformats2, due to apparently sufficient market demand to create two such other systems)

[10:05:43.0000] <Hixie>
gavinc: to solve use cases, same as everything else in HTML

[10:05:49.0000] <tantek>
gavinc - see less ugly point above

[10:06:09.0000] <manu-db>
Hixie: Over 700 vocabularies currently being worked on - http://prefix.cc/popular/all

[10:06:23.0000] <manu-db>
(granted, I don't think vocabulary explosion is a good thing either)

[10:06:37.0000] <tantek>
manu-db - how many of them are divergent forks of various people/foaf/vcard vocabs because the people working on vocabs have no idea what they're doing?

[10:06:47.0000] <tantek>
exactly

[10:06:50.0000] <Hixie>
manu-db: "worked on" is irrelevant, what matters is what is used. If you just have a private vocab that is used on five pages, you don't need rdfa or microdata or mf, you can just use proprietary markup.

[10:06:53.0000] <manu-db>
tantek: Some yes, some no.

[10:06:58.0000] <gavinc>
Hixie: but those use cases were and are being served by RDFa, why not just make it better like it has gotten better... it is better, it did get better!

[10:07:18.0000] <tantek>
gavinc, see above, it only got better due to microdata/schema/google pressure

[10:07:27.0000] <Hixie>
gavinc: the use cases were not handled well or at all by rdfa, and still aren't.

[10:07:33.0000] <tantek>
rdfa would have stubbornly stuck/sucked with rel/rev confusion otherwise

[10:07:38.0000] <Hixie>
gavinc: e.g. a way to drag a blob of metadata across to another page using the drag and drop API

[10:07:39.0000] <manu-db>
tantek: So, it did get better (in your eyes), right?

[10:07:50.0000] <Hixie>
gavinc: plus, RDFa is just a terrible language in general

[10:07:54.0000] <MacTed>
the question is why that pressure wasn't brought into the RDFa work, rather than by creating an entirely different markup

[10:07:55.0000] <tantek>
manu-db, yes of course, I thought we had discussed that before.

[10:07:58.0000] <Hixie>
gavinc: poorly designed, hard to use, etc

[10:07:59.0000] <TabAtkins>
MikeSmith: What do you mean "the 'Inlining Ruby' part of [my] message does not describe any use case"?  I explained right there in the bug that there is a correct normal rendering (per-character) and a correct inline rendering (per-word), but it's currently impossible to do both in HTML ruby.\

[10:08:12.0000] <MacTed>
NIH.  gotta love it.  or something.

[10:08:14.0000] <Hixie>
but none of this is new, we've had this conversation before

[10:08:22.0000] <manu-db>
yep

[10:08:50.0000] <tantek>
MacTed, because sometimes you have to use the market to prove a point that a majority in a W3C WG won't accept.

[10:09:07.0000] <Hixie>
TabAtkins: hey sorry for moving that e-mail to bugs, btw, but my mail client really can't handle non-ASCII in a useful way and I figured you probably wouldn't mind

[10:09:44.0000] <gavinc>
The RDFa WG DID accept it!

[10:09:44.0000] <Hixie>
gavinc: it still uses RDF, so, no :-)

[10:09:44.0000] <tantek>
gavinc - only after MD adoption

[10:09:44.0000] <manu-db>
ha

[10:09:44.0000] <gavinc>
No.

[10:09:44.0000] <gavinc>
Not even close.

[10:09:46.0000] <MacTed>
so the point was "don't use RDF"?

[10:09:54.0000] <tantek>
rel/rev didn't get dropped til after schema/microdata

[10:09:59.0000] <linclark>
truth

[10:10:14.0000] <MikeSmith>
TabAtkins: that's only because they are marked up differently to begin with. It doesn't make it clear why anybody would want to mark them up separately that way to begin with instead of grouping them

[10:10:38.0000] <MikeSmith>
TabAtkins: it just asserts that marking them up individually is more "correct"

[10:10:39.0000] <manu-db>
/me grins at http://www.w3.org/TR/2012/WD-microdata-rdf-20120112/

[10:10:39.0000] <TabAtkins>
...I said why.  When you're *not* inlining the ruby, you may want mono-ruby display, which is per-character.

[10:11:03.0000] <TabAtkins>
And whether to inline or not is a valid stylistic choice, not just a fallback behavior.

[10:11:07.0000] <MikeSmith>
TabAtkins: it's not for that example

[10:11:20.0000] <Hixie>
MacTed: if you want to read the history, these are the original e-mails that led to microdata: http://lists.w3.org/Archives/Public/public-html/2009May/0207.html

[10:11:22.0000] <MikeSmith>
you would never want to do it that way for 東京

[10:11:28.0000] <gavinc>
schema.org: "The data model used is very generic and derived from RDF Schema"

[10:11:35.0000] <tantek>
hey manu-db, we got one of those too: http://microformats.org/wiki/microformats2-parsing-rdf

[10:11:38.0000] <tantek>
;)

[10:11:55.0000] <manu-db>
tantek - I hate RDF

[10:12:01.0000] <TabAtkins>
MikeSmith: (note that I know nothing about Japanese. I understand the technical side of this argument, and trust the "right way" side to be what I was told.)

[10:12:01.0000] <manu-db>
:P

[10:12:14.0000] <tantek>
manu-db, you have a strange way of expressing it ;)

[10:12:34.0000] <TabAtkins>
MikeSmith: I assume that there are indeed some mono-ruby cases where you *would* want to inline multiple bases together.

[10:12:43.0000] <MikeSmith>
TabAtkins: well, like I said anyway I think that case is distraction, and continuing to include it in discussions along with the double-sided ruby case doesn't help the double-sided ruby case

[10:12:55.0000] <gavinc>
I don't know, not that strange. I've heard Norm claim to hate XML reasonably often

[10:13:10.0000] <MikeSmith>
TabAtkins: yeah I've yet to see anybody actually describe any such concrete cases well

[10:13:25.0000] <TabAtkins>
MikeSmith: I don't care about crossing the streams.  I think the arguments are separable.

[10:13:27.0000] <MikeSmith>
so I think it's a mistake to assume it

[10:13:31.0000] <gavinc>
Heck, I'm pretty sure I've heard Hixie hate HTML :P

[10:13:47.0000] <Hixie>
HTML is wacked, but it's the best we have

[10:13:49.0000] <MikeSmith>
TabAtkins: ok

[10:13:52.0000] <manu-db>
I'm like an onion - complex, stinky, many layers... hate RDF, but haven't found anything better yet. gavinc can tell you about my constant attempts to down-play RDF in JSON-LD because of the knee-jerk effect it has on people.

[10:13:53.0000] <Hixie>
can't say the same about RDFa. :-P

[10:14:10.0000] <manu-db>
Hixie - booo! :P

[10:15:02.0000] <manu-db>
In the very worst case, people will decide what they like the most - we've given them options... that helps me sleep at night. Just trying to reduce the amount of pain (and economic waste) Web developers are going to have to go through to get there.

[10:15:18.0000] <tantek>
in that case, it does seem illogical to continue pushing an inferior syntax, but hey, it's your time ;)

[10:15:20.0000] <TabAtkins>
MikeSmith: I described what I was told.  I'm told that there are reasonable instances where, displayed normally, you want mono-ruby display, but displayed inline, you want them grouped.  If I take that as given, then switching to a mixed row/column markup model makes sense.

[10:15:21.0000] <manu-db>
I don't doubt that all of us have the best intentions... we're just each wrong for different reasons.

[10:15:56.0000] <MikeSmith>
TabAtkins: fair enough

[10:15:57.0000] <manu-db>
tantek - exactly, you don't get to tell me how to waste my time and the time of others. :P

[10:16:34.0000] <tantek>
we've all got our hobbies ;)

[10:16:39.0000] <gavinc>
/me goes back to figuring out escaping Turtle in HTML to screw with you all ;)

[10:17:14.0000] <manu-db>
/me goes back to the thing that puts food on the table.

[10:17:21.0000] <tantek>
gavinc - since you're into extensible data markup and all, would appreciate any feedback on microformats2 (feel free to do so in #microformats to reduce the noise here ;) )

[10:17:30.0000] <TabAtkins>
MikeSmith: The double-ruby case is easier, actually - having two different markup models for nearly the exact same thing makes sense only in the "column only" ruby model that the spec currently uses, as it has no way of associating a run across multiple bases.  If you do switch to a row-based model, then it gets really simple, and you can just collapse the two markup patterns into one, which is better.

[10:17:44.0000] <Hixie>
manu-db: stopping microdata from getting to REC isn't going to change anything, fwiw. It's already a standard.

[10:18:11.0000] <tantek>
/me isn't sure how stopping microdata from getting to REC puts food on the table.

[10:18:11.0000] <manu-db>
Hixie: Then nobody should have a problem with making it a W3C Note. :)

[10:18:45.0000] <manu-db>
/me tantek - it doesn't, but I'm concerned for the Web and felt like I needed to say something about it.

[10:19:13.0000] <MikeSmith>
TabAtkins: I'm not convinced it's actually easier for authors or that authors will actually take time to use it instead of you made it available

[10:19:18.0000] <Hixie>
manu-db: i don't have a problem with just dropping it and HTML entirely :-)

[10:19:32.0000] <manu-db>
I'd have a problem w/ dropping HTML5 - I like it.

[10:19:38.0000] <manu-db>
(warts and all)

[10:19:44.0000] <Hixie>
HTML is already a standard, the same standard, as microdata

[10:19:49.0000] <Hixie>
http://whatwg.org/html

[10:19:53.0000] <TabAtkins>
MikeSmith: I find it kinda self-evident that two models is worse than a single model of equivalent complexity to one of the other models.

[10:20:06.0000] <MikeSmith>
TabAtkins: I'm not convinced there are even enough cases of need to do double-sided ruby on the web that justify spending much time trying to address it all

[10:20:43.0000] <manu-db>
Hixie - this again? I don't disagree with you on that as much as you might think I do.

[10:21:30.0000] <TabAtkins>
MikeSmith: Shrug.  Apparently Japanese publishers want to use it, and they're willing to suck it up and use the current model if they have to (even though it's worse for authors and for CSS).

[10:21:33.0000] <manu-db>
/me isn't a dyed-in-the-wool RDFer, nor W3Cer... just wants to help the Web suck less.

[10:21:55.0000] <MikeSmith>
Japanese publishers claim the want to do all kinds of crazy things

[10:22:00.0000] <TabAtkins>
Granted.

[10:22:23.0000] <manu-db>
I don't really care where HTML work is done, as long as things keep improving, and people have a say in what goes in the spec... but W3C is important to some and I don't think that's bad either.

[10:22:24.0000] <MikeSmith>
and have a very hard time giving feedback about which things are more important than others

[10:22:53.0000] <tantek>
HIxie, if you dislike microdata, why not drop it from whatwg.org/html ?

[10:23:22.0000] <Hixie>
manu-db: "this again"? you're in #whatwg, it kinda comes with the territory

[10:23:32.0000] <tantek>
or does it fall into the category of experimental stuff to try for a while and see how it goes?

[10:23:33.0000] <Hixie>
tantek: my like or dislike for things has no bearing on what goes in the spec

[10:23:37.0000] <tantek>
(which seems reasonable)

[10:23:44.0000] <manu-db>
Hixie - No, I mean... I get it, you don't have to keep saying it... I get it.

[10:23:47.0000] <Hixie>
tantek: if it did, the spec would be radically different (and not even slightly backwards-compatible, for example)

[10:24:37.0000] <MikeSmith>
TabAtkins: anway, the fact is really that most Japanese text in the vast majority of cases even off the Web has no ruby at all, and no use for it in the context of the meeting the needs of the people intended to read it

[10:24:58.0000] <TabAtkins>
Sure.

[10:25:02.0000] <Hixie>
tantek: it's in there because it solves use cases some people care about, and does so better than other solutions, and, at this point, has some adoption (though not much, see citations above).

[10:25:13.0000] <MikeSmith>
so even simple ruby is need only for a relatively small amount of cases to begin with

[10:25:49.0000] <TabAtkins>
Yup, no argument here.  If we had *nothing* but mono ruby, it wouldn't be a terrible problem.

[10:26:12.0000] <MikeSmith>
also fwiw I'm not trying to kneejerk dis the effort you're making here

[10:26:32.0000] <MikeSmith>
just trying to give feedback that I hope helps to clarify the arguments

[10:27:25.0000] <TabAtkins>
No problem, even though a decent bit of your feedback feels like "let's ignore your arguments, and then claim you're not making any arguments". ^_^

[10:27:35.0000] <tantek>
Hixie, seems reasonable. I wonder what else would fit given that criteria/bar.

[10:27:47.0000] <MikeSmith>
and as somebody who does actually need ruby in cases where native readers don't, I would love to see it made as easy as possible for authors to mark up text with and use it

[10:28:06.0000] <Hixie>
tantek: hopefully, the exact set of features in the spec plus those i will add minus those i will remove :-D

[10:28:20.0000] <tantek>
:)

[10:28:47.0000] <MikeSmith>
TabAtkins: I think you have articulated the technical points well, but there are assumptions behind those that you have not questioned

[10:29:25.0000] <MikeSmith>
and if we don't have evidence to support those assumptions the technical points become moot

[10:31:12.0000] <TabAtkins>
Sure.  I think the double-ruby one is pretty much purely technical, as I've argued.  For the inlining, can you think of better examples?  I'm just using the one that fantasai had in her blog post.

[10:34:39.0000] <MikeSmith>
TabAtkins: I will look back at some of the examples in earlier discussions

[10:34:45.0000] <TabAtkins>
cool, thanks.

[10:34:57.0000] <MikeSmith>
I think some of those might be a bit more compelling

[10:35:00.0000] <MikeSmith>
and real-world

[11:02:51.0000] <Hixie>
manu-db: http://www.w3.org/mid/CACho_Au7FCdduJN1gwZOS3stEpe4dJ+qH8vkuFVALHepURBhZg⊙mgc seems to repeat exactly the kind of stuff i've been saying about RDFa since forever.

[11:02:57.0000] <Hixie>
including why Lite doesn't solve the problem

[11:04:18.0000] <Hixie>
in other news the other day i mailed a bunch of browser vendors (apple, opera, microsoft, mozilla, google) asking them (a) to comment on something, and (b) to tell me how to ask them to comment on things like it

[11:04:30.0000] <Hixie>
everyone has since replied, some in some detail, except microsoft.

[11:04:33.0000] <Hixie>
not a peep from them.

[11:05:08.0000] <TabAtkins>
Apparently that's not the right way to ask them to comment on things like that.

[11:07:15.0000] <Hixie>
i guess so

[11:07:53.0000] <SimonSapin>
what would be the right way?

[11:08:13.0000] <TabAtkins>
Fly to Redmond and pop out of a cake delivered to the IE team.

[11:09:08.0000] <Hixie>
actually i lied, the three microsoft people didn't reply, but there were also three other people who didn't reply

[11:09:18.0000] <Hixie>
/me glares at jgraham, for one :-P

[11:09:52.0000] <Hixie>
and eric_carlson :-P

[11:09:57.0000] <SimonSapin>
what? Three who didn’t, and three who didn’t?

[11:10:09.0000] <Hixie>
three other people from other organisations

[11:10:47.0000] <eric_carlson>
Hixie: oops, I have been a bit overwhelmed with email lately - what did I not respond to?

[11:11:22.0000] <Hixie>
e-mail subject was "Quick question re feedback on HTML spec bugs"

[11:11:40.0000] <eric_carlson>
Hixie: I will dig it out

[11:11:40.0000] <Hixie>
but basically, i was asking for feedback on https://www.w3.org/Bugs/Public/show_bug.cgi?id=17687 and for instructions on how to contact you for feedback on bugs

[11:12:14.0000] <Hixie>
the third person was michealn, but he doesn't seem to be online so he's probably on vacation or something

[11:12:38.0000] <annevk>
Hixie: are you okay with the about URI RFC not defining things like text/html and utf-8 or did you miss it omitted that?

[11:13:10.0000] <Hixie>
annevk: for about:blank?

[11:13:14.0000] <annevk>
Hixie: yeah

[11:13:24.0000] <Hixie>
annevk: i define all the processing for about:blank natively in the HTML spec

[11:13:35.0000] <Hixie>
annevk: so doesn't matter what the RFC says :-)

[11:14:36.0000] <eric_carlson>
Hixie: hmm, I don’t see anything with that title, or even anything from you directly to me for a while

[11:14:42.0000] <eric_carlson>
Hixie: can you please send it again?

[11:14:57.0000] <Hixie>
eric_carlson: maybe you're a different eric. Are you eric⊙wo?

[11:15:34.0000] <annevk>
Hixie: fair enough

[11:16:16.0000] <eric_carlson>
Hixie: that explains it - that is Eric Seidel

[11:16:31.0000] <eric_carlson>
Hixie: unless maybe you were trying to reach him?

[11:17:19.0000] <eric_carlson>
Hixie: which might make sense because I haven’t done much with app cache

[11:17:30.0000] <Hixie>
aha!

[11:17:35.0000] <Hixie>
yeah that makes sense

[11:17:52.0000] <Hixie>
who at apple should i contact about that, do you know?

[11:18:01.0000] <Hixie>
oh i e-mailed ap, he responded

[11:18:04.0000] <Hixie>
he's apple, right

[11:18:11.0000] <eric_carlson>
yes

[11:18:13.0000] <Hixie>
cool

[11:18:21.0000] <Hixie>
my deepest apologies for slandering you :-)

[11:18:29.0000] <eric_carlson>
/me was maligned!

[11:18:33.0000] <eric_carlson>
:-)

[11:20:27.0000] <Hixie>
in that case, what i learn is that google and microsoft don't reply to my e-mails

[11:20:46.0000] <Hixie>
that seems like pretty solid evidence that i'm not biased towards google and against microsoft

[11:21:34.0000] <Hixie>
it's also sad. :-P

[11:26:05.0000] <annevk>
Hixie: so the only problem with the current definition of about:blank, including the HTML spec, is that it's not very clear on whether percent encoding, case-sensitivity and URL's query and fragment components matter

[11:26:16.0000] <annevk>
Hixie: http://wiki.whatwg.org/wiki/URL_schemes is an attempt to define those things; also for javascript:

[11:26:46.0000] <annevk>
Hixie: my plan is to eventually define about: and javascript: in Fetch, but I think I still need to wait 4 years before starting on that, so it's wiki pages for now

[11:27:15.0000] <Hixie>
i think, though i'm not sure, that as specced i only care about about:blank, not about:blank with other features

[11:27:26.0000] <Hixie>
so i guess for the other urls the rfc does matter

[11:27:35.0000] <Hixie>
and should define everything

[11:35:59.0000] <annevk>
hmm

[11:51:12.0000] <jgraham>
Hixie: zcorpan replied

[11:51:26.0000] <jgraham>
I didn't think I had anything extra to say

[11:51:47.0000] <jgraham>
But if you want me to reply with the message "Filler text" I guess I could do that

[11:54:22.0000] <jgraham>
Hixie: But if it wasn't clear, I am often on IRC and respond there :p

[11:57:11.0000] <annevk>
http://cdn.memegenerator.net/instances/400x/30956693.jpg

[11:59:57.0000] <manu-db>
Hixie: Thanks for the heads-up, hadn't seen linclark's comment yet, I'll notify the implementers and add that test to the RDFa test suite. (and yes, the RDFa processing algorithm is far more complex than the Microdata one - due to all the reasons that I've outlined previously - more features, more public input, legacy support, some features I don't like at all, etc.)

[12:10:45.0000] <Hixie>
jgraham: oh didn't realise he'd cc'ed you, nevermind then :-)

[12:22:50.0000] <annevk>
smaug____: it would help if you were a bit more elaborate in your reply

[12:23:52.0000] <smaug____>
annevk: what is unclear

[12:24:01.0000] <annevk>
smaug____: the "why" is unclear

[12:24:05.0000] <smaug____>
MutationObserver don't share any mutation records

[12:24:30.0000] <annevk>
yes you mentioned that

[12:24:50.0000] <smaug____>
because they are different objects observing mutations the way the API on them has been used

[12:25:18.0000] <smaug____>
s/different/separate/

[12:25:34.0000] <smaug____>
or how to say

[12:26:34.0000] <annevk>
I don't really see the problem I think

[12:27:30.0000] <annevk>
I mean sure, the MutationObserver objects are unique, but why do the MutationRecord objects delivered to them have to be?

[12:27:57.0000] <smaug____>
annevk: script library A observers something, and B something else

[12:28:10.0000] <smaug____>
they sure should be able to get their own records

[12:28:23.0000] <smaug____>
they could add expandos and what not

[12:28:37.0000] <annevk>
on the MutationRecord?

[12:28:38.0000] <smaug____>
annevk: also, why not create record per observer

[12:28:48.0000] <smaug____>
annevk: yes

[12:28:59.0000] <annevk>
it would be extra work to create a new record

[12:29:19.0000] <smaug____>
it would be extra work to figure out when to share record and when not

[12:29:49.0000] <annevk>
that would suggest the spec is still bogus somehow

[12:30:40.0000] <smaug____>
I thought it was clear that each mutation observer is truly unique thing and gets its own records. apparently no

[12:31:17.0000] <annevk>
indeed no

[12:32:34.0000] <annevk>
smaug____: http://dom.spec.whatwg.org/#queue-a-mutation-record creates one record and shares that with whoever listens to it

[12:32:47.0000] <annevk>
smaug____: if as you suggest it's extra work to figure things out, that algorithm is wrong...

[12:32:55.0000] <annevk>
smaug____: but Chrome seems to share as well

[12:33:08.0000] <smaug____>
Chrome doesn't seem to share it  always

[12:33:21.0000] <smaug____>
per the bug report

[12:34:32.0000] <smaug____>
annevk: so all that pseudo-algorithm should be inside something like "for each interested observer"

[12:34:59.0000] <smaug____>
hmm

[12:35:10.0000] <smaug____>
so, first figure out the interested observers

[12:35:18.0000] <smaug____>
then for each of them create record

[12:36:31.0000] <annevk>
that's equivalent to doing what travis suggested

[12:36:40.0000] <annevk>
just cloning the record in 7.0

[12:36:48.0000] <annevk>
which comes down to more work

[12:36:56.0000] <smaug____>
yup, but without cloning

[12:36:59.0000] <annevk>
and more copies

[12:37:13.0000] <annevk>
smaug____: why no cloning?

[12:37:23.0000] <smaug____>
the idea is to first figure out if something is interested in the mutation

[12:37:33.0000] <smaug____>
and then for each interested observer create record

[12:37:37.0000] <smaug____>
no extra work

[12:37:48.0000] <annevk>
sure there is

[12:37:56.0000] <annevk>
you create a record for each observer, rather than once

[12:38:10.0000] <smaug____>
well, that is a bug to fix

[12:38:20.0000] <smaug____>
IMHO

[12:38:50.0000] <annevk>
I wonder if people using that abbreviation really know what it stands for

[12:38:55.0000] <annevk>
it never feels very humble to me

[12:39:26.0000] <TabAtkins>
I expand it as "honest".

[12:39:31.0000] <TabAtkins>
Which is very different from "humble", often.

[12:39:41.0000] <annevk>
in any event, doing what you want is possible; seems a bit like a waste, but I don't care strongly

[12:39:55.0000] <smaug____>
I do care pretty strongly about this

[12:40:07.0000] <smaug____>
it would be odd API to share records

[12:41:22.0000] <annevk>
TabAtkins: normally the opinion people give is dishonest? that makes stuff even weirder, imo

[12:41:44.0000] <TabAtkins>
Nah, it means just, like, not sugar-coated. Real Talk.

[12:42:42.0000] <hober>
Hixie: bradee-oh is another good apple contact re: appcache

[12:45:06.0000] <annevk>
smaug____: I guess I'll let you sort it out with Adam for now; his point about Events seems valid

[12:47:43.0000] <smaug____>
annevk: totally invalid

[12:47:54.0000] <smaug____>
mutationobserver has nothing to do with events :)

[12:48:16.0000] <annevk>
sure it does, both are part of the platform

[12:48:33.0000] <smaug____>
different APIs

[12:50:28.0000] <annevk>
yeah sure, but it's the same thing, lots of observers getting the same object

[12:54:00.0000] <annevk>
smaug____: you're right btw it could be as simple as we have it now

[12:54:23.0000] <annevk>
smaug____: moving step 1-3 to 7.0

[12:54:40.0000] <annevk>
smaug____: that would do what you want

[12:54:43.0000] <Hixie>
hober: thanks

[12:56:52.0000] <TabAtkins>
Who's in charge of the WHATWG forums?  "Alexiswen" is a spammer account.

[12:58:18.0000] <annevk>
zcorpan

[12:58:28.0000] <annevk>
and some other people I think

[13:00:03.0000] <tantek>
anyone here play with famo.us? http://gigaom.com/2012/11/25/famous/

[13:29:37.0000] <GPHemsley>
w00t w00t... all wiki admins are invited to: "The All Star Showcase

[13:29:37.0000] <GPHemsley>
Madhouse Comedy Club

[13:29:37.0000] <GPHemsley>
Tuesday, December 4"

[13:29:53.0000] <GPHemsley>
how exciting!

[13:30:36.0000] <annevk>
it's a boring job, but it has its perks

[13:30:58.0000] <GPHemsley>
annevk: How many free tickets do we want?

[13:31:05.0000] <GPHemsley>
/me counts 210 people here.

[13:31:12.0000] <annevk>
/me was gonna say the same

[13:31:23.0000] <GPHemsley>
Consensus! Yay!

[13:31:29.0000] <Ms2ger>
FO!

[13:39:32.0000] <gsnedders>
Ms2ger: You're violating the SHOULD requirement to give technical justification!

[13:39:48.0000] <Ms2ger>
gsnedders, FO to that requirement!

[13:40:00.0000] <gsnedders>
:)

[13:40:03.0000] <dglazkov>
Hixie, annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20050. It's tricky, because even though neither selectstart nor document.all are spec'd, I want implementers to do the right thing and leave no room for interpretation

[13:40:27.0000] <dglazkov>
Hixie, annevk: what do you usually do in such cases?

[13:40:58.0000] <Ms2ger>
doc.all is specced

[13:41:04.0000] <dglazkov>
Ms2ger: oh?

[13:41:22.0000] <Ms2ger>
In the Obsolete things / Requirements for implementers section

[13:41:24.0000] <dglazkov>
great, then selectstart

[13:41:37.0000] <dglazkov>
Ms2ger: ooh, that's a cool idea

[13:41:53.0000] <annevk>
dglazkov: if selectstart is expected to be implemented by everyone, it should be covered

[13:42:10.0000] <dglazkov>
annevk: IE + WebKit only

[13:42:15.0000] <annevk>
dglazkov: if it's expected to be removed from the platform, bugs should be filed on vendors

[13:42:19.0000] <Ms2ger>
dglazkov, does that list apply to synthetic events? :)

[13:42:34.0000] <annevk>
we don't really do middle ground, either it's in or out :)

[13:42:50.0000] <dglazkov>
Ms2ger: it does, but I need to make it more explicit

[13:43:10.0000] <dglazkov>
Ms2ger: related bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=20017

[13:43:17.0000] <Ms2ger>
Well, then it doesn't matter if the browser ever fires the event ;)

[13:43:37.0000] <Ms2ger>
Ugh, document.createEvent

[13:44:03.0000] <dglazkov>
Ms2ger: good point

[13:45:00.0000] <annevk>
dglazkov: fwiw, if you're going to change what happens to event dispatch in any way, I strongly suggest you make sure DOM gets updated appropriately

[13:45:15.0000] <annevk>
dglazkov: so it's clear from the core dispatch algorithm and not some monkey patching

[13:45:49.0000] <annevk>
dglazkov: that probably goes for a lot of the shadow DOM, at some point I should take a look I suppose and see what the DOM should handle

[13:46:45.0000] <Ms2ger>
dglazkov, and let annevk do it, I don't care for the shadow DOM :)

[13:47:56.0000] <annevk>
Ms2ger: not like there's been much activity from you on the standards front other than a couple of objections :p

[13:48:43.0000] <Ms2ger>
annevk, make that any front ;)

[13:48:56.0000] <annevk>
Ms2ger: aaaah, uni right?

[13:49:03.0000] <Ms2ger>
Still

[13:49:26.0000] <Ms2ger>
/me will be glad to be done, so he can spend all his time on this mess

[13:50:52.0000] <annevk>
Ms2ger: it is indeed a great mess

[13:51:24.0000] <jgraham>
I think to think of the "shadow" DOM as the "sinister" DOM

[13:51:47.0000] <Ms2ger>
The left-handed DOM?

[13:51:54.0000] <hober>
damn, Ms2ger beat me to it

[13:52:19.0000] <Ms2ger>
/me gives hober a sinister high five

[13:57:25.0000] <dglazkov>
Ms2ger: you don't care for shadow DOM?!

[13:57:45.0000] <Ms2ger>
dglazkov, I think that's what I said :)

[13:57:53.0000] <dglazkov>
whyyy

[14:00:58.0000] <smaug____>
someone should review what dglazkov is doing :p

[14:01:11.0000] <smaug____>
/me has been way too busy with other stuff

[14:02:10.0000] <dglazkov>
annevk: that's a great idea. There's even a bug file for that: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16904

[14:02:32.0000] <smaug____>
I feel like Shadow DOM is going a bit wrong direction (by making things public by default etc), but I could be wrong, since I haven't checked the latest spec

[14:02:47.0000] <annevk>
dglazkov: teehee consistent me

[14:04:44.0000] <dglazkov>
annevk: it will be interesting to see how the shadow DOM machinery is split up/folded into relevant spec

[14:04:49.0000] <annevk>
dglazkov: is a shadow boundary between different shadow trees or between the document tree and the shadow tree?

[14:05:09.0000] <dglazkov>
all of the above

[14:05:42.0000] <annevk>
dglazkov: might want to clarify "The encapsulation boundaries between shadow trees are called shadow boundaries." then

[14:06:30.0000] <dglazkov>
annevk: yeah, makes sense

[14:07:02.0000] <annevk>
dglazkov: conformance criteria wise that start is also somewhat messy; e.g. in http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#shadow-trees it's established as fact that only elements can be shadow host, and then later on that's suddenly required

[14:07:10.0000] <annevk>
dglazkov: that MUST requirement does not make much sense

[14:10:06.0000] <annevk>
dglazkov: the same goes with http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#upper-boundary-encapsulation everything stated there should be non-normative; if that doesn't follow from the definitions of the various features mentioned, there's a big problem

[14:10:11.0000] <dglazkov>
annevk: http://dvcs.w3.org/hg/webcomponents/rev/314ccb4ffefd

[14:12:51.0000] <dglazkov>
annevk: on that last bit, what would be a better way to specify this?

[14:13:47.0000] <annevk>
dglazkov: hmm so an element can have one or more associated shadow trees

[14:14:14.0000] <annevk>
dglazkov: since these are standalone trees, obviously methods that operate on element's tree are not getting into it

[14:14:20.0000] <annevk>
dglazkov: so there's nothing to specify

[14:14:37.0000] <annevk>
dglazkov: likewise, since shadow root is the root of this tree, it will have a null parentElement/parentNode

[14:15:21.0000] <dglazkov>
annevk: so basically, the scoping constraint list is just a list of effects (which could be non-normative)

[14:15:49.0000] <annevk>
dglazkov: it should be non-normative

[14:15:55.0000] <dglazkov>
okay

[14:16:01.0000] <dglazkov>
that's great!

[14:16:09.0000] <annevk>
dglazkov: it's fine to explain implications, it's not fine to require them, because then you require things twice which generally leads to confusion

[14:16:47.0000] <annevk>
dglazkov: (e.g. here it was not clear to me whether I needed to change the DOM or not; apparently not for this case)

[14:16:57.0000] <dglazkov>
nope

[14:17:00.0000] <dglazkov>
I mean yep

[14:17:02.0000] <dglazkov>
:)

[14:18:15.0000] <annevk>
dglazkov: same goes for "If an insertion point is not in a shadow tree, it must have the same rendering behavior as the HTMLUnknownElement."

[14:18:28.0000] <annevk>
dglazkov: is "insertion point" some kind of element node btw?

[14:18:48.0000] <Ms2ger>
/me once argued that xmp should be an HTMLPreElement by such a comment

[14:19:06.0000] <dglazkov>
annevk: yes

[14:19:24.0000] <annevk>
dglazkov: also, are we actually talking about the layout tree here?

[14:19:37.0000] <annevk>
dglazkov: because afaict the document and shadow tree remain intact

[14:19:57.0000] <dglazkov>
annevk: yes

[14:19:57.0000] <annevk>
dglazkov: so it's really more how document+shadow affect layout than anything else?

[14:20:08.0000] <dglazkov>
annevk: yes!

[14:20:10.0000] <annevk>
dglazkov: I think it would be good to call that out explicitly

[14:20:31.0000] <dglazkov>
annevk: I thought it was?

[14:20:49.0000] <dglazkov>
oh you mean in introduction/background?

[14:21:40.0000] <dglazkov>
annevk: http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#rendering-shadow-trees

[14:21:48.0000] <annevk>
dglazkov: section 4.2 does not mention layout once

[14:23:42.0000] <dglazkov>
annevk: it's in 4

[14:24:21.0000] <annevk>
I think it would be clearer if you had a section explaining the shadow tree (API, changes to the event model) and then a section explaining changes to the layout tree

[14:25:00.0000] <annevk>
maybe the problem is that shadow tree is used for a lot of things

[14:26:02.0000] <annevk>
"shadow tree" is the template, but it's still called "shadow tree" when rendered and intertwined with the document tree

[14:26:26.0000] <dglazkov>
"shadow tree" is not template? where do you get that?

[14:27:24.0000] <annevk>
sorry, it's a thing with insertion points, that kind of makes it look like a template to me

[14:28:09.0000] <annevk>
the confusion I have is that 4.1 talks about the DOM and then 4.2 suddenly talks about layout

[14:28:21.0000] <dglazkov>
the way I think of this is that insertion points and the fact that they have some nodes distributed into them is one thing, and the layout tree is just an effect of that

[14:28:43.0000] <dglazkov>
annevk: I don't think it does?

[14:29:03.0000] <annevk>
distribution is only observable from layout

[14:29:25.0000] <dglazkov>
annevk: no, you can totally see it from DOM

[14:29:39.0000] <dglazkov>
annevk: see HTMLContentElement.getDistributedNodes()

[14:30:14.0000] <dglazkov>
annevk: layout is a nice observable effect of the distribution though, that's definitely true

[14:30:41.0000] <annevk>
okay

[14:31:09.0000] <annevk>
so when do all these algorithms happen?

[14:31:16.0000] <annevk>
is it all instant?

[14:33:15.0000] <TabAtkins>
Hixie: Ugh, I forgot to trim the cc list on my reply to the menu thread.  Mind unwedging it?

[14:34:20.0000] <dglazkov>
annevk: they happen as required. For example, when we need to render the shadow tree, it invokes distribution algorithm: http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#dfn-rendering

[14:34:48.0000] <Hixie>
TabAtkins: hah :-P

[14:34:50.0000] <Hixie>
TabAtkins: on it

[14:34:50.0000] <dglazkov>
annevk: via the composition algorithm

[14:35:29.0000] <annevk>
dglazkov: what if the shadow tree is under a display:none node and inside the shadow tree you call getDistrubutedNodes()?

[14:35:43.0000] <dglazkov>
annevk: one thing I really need to do is make sure I invoke this right for each API getter

[14:35:44.0000] <dglazkov>
right

[14:36:01.0000] <dglazkov>
getDistributedNodes should ask for distribution

[14:36:05.0000] <annevk>
dglazkov: I see

[14:36:11.0000] <TabAtkins>
annevk: distribution happens before box construction.  display:none shouldn't have any effect.

[14:36:14.0000] <dglazkov>
there's probably more places where I need to put that in place

[14:36:19.0000] <dglazkov>
filing bug

[14:36:23.0000] <TabAtkins>
distribution affects the "document tree" that CSS sees, in other words.

[14:36:40.0000] <annevk>
dglazkov: could you maybe also align the style sheet of the spec with other specs? e.g. use bold for <dfn> and such

[14:36:57.0000] <dglazkov>
annevk: no!

[14:37:04.0000] <dglazkov>
annevk: okay

[14:37:11.0000] <annevk>
dglazkov: what would also be great to have is if you could click on the <dfn> like you can in dom.spec.whatwg.org

[14:37:21.0000] <dglazkov>
I really like my dfn style though

[14:37:26.0000] <dglazkov>
annevk: yes, I need to do that

[14:37:56.0000] <annevk>
dglazkov: I'm sorry for your dfn style, maybe keep it as a local style sheet for yourself? :)

[14:38:10.0000] <dglazkov>
annevk: no!

[14:38:13.0000] <dglazkov>
annevk: okay

[14:40:23.0000] <dglazkov>
Ms2ger: you can't just poop on my plate and disappear. Come read the spec and file bugs! :P

[14:40:46.0000] <Ms2ger>
Oh, I can't? :)

[14:40:59.0000] <dglazkov>
Ms2ger: no!

[14:41:55.0000] <dglazkov>
annevk: thanks for doing a quick review. Can I just hire you to do this more thoroughly or something? :)

[14:49:19.0000] <TabAtkins>
Do all elements have a directionality, or only those with an explicit dir attribute?  I think the former, right?  They inherit directionality from their parent, and the root is set based on user preference?

[14:50:34.0000] <Hixie>
all

[14:50:51.0000] <Hixie>
it's in the html spec at http://www.whatwg.org/specs/web-apps/current-work/#the-directionality

[14:50:56.0000] <rniwa>
Hixie, annevk: maybe you guys bring back DOM UI events stuff back to life and spec selectstart...

[14:51:11.0000] <rniwa>
alternatively, AryehGregor_ can spec it in the editing API spec.

[14:51:14.0000] <Hixie>
rniwa: i'm still hoping one day someone will spec "click"

[14:51:20.0000] <Hixie>
or "mousedown"

[14:51:25.0000] <Ms2ger>
/me thinks rniwa just volunteered

[14:51:28.0000] <rniwa>
we've been getting a lot of superflous bug reports because it's not spec'ed anywhere.

[14:51:56.0000] <annevk>
rniwa: speccing that involves the layout tree and I stepped away from the layout tree

[14:52:00.0000] <annevk>
rniwa: Hixie did too

[14:52:02.0000] <rniwa>
Hixie: well... those are at least somewhat specified in DOM3

[14:52:04.0000] <annevk>
rniwa: so maybe ask www-style?

[14:52:22.0000] <rniwa>
annevk: oh, you think it's in the realm of CSS WG?

[14:52:41.0000] <TabAtkins>
It *might* be reasonable in terms of CSSOM.  But probably better in DOM.

[14:52:41.0000] <annevk>
rniwa: yeah, mouse events involve hit testing -> CSS, selection does too -> CSS

[14:52:51.0000] <annevk>
no, not at all DOM

[14:52:56.0000] <rniwa>
annevk: I see, :(

[14:52:58.0000] <Hixie>
rniwa: not to the level of detail i'm talking about

[14:53:05.0000] <rniwa>
Hixie: sure.

[14:53:06.0000] <annevk>
layout tree -> DOM is a CSS affair

[14:54:06.0000] <rniwa>
annevk, Hixie: i don't mind it to be vaguely spec'ed for starters.

[14:54:20.0000] <rniwa>
annevk, Hixie: since a lot of things about selection is platform specific anyway.

[14:55:33.0000] <Hixie>
i'd love it to be specced

[14:55:35.0000] <annevk>
rniwa: vaguely speccing only works if I don't know what I'm doing, too late for UI events

[14:55:51.0000] <Hixie>
but i have too many fish on my plate already

[14:56:20.0000] <rniwa>
Hixie, annevk: okay.

[14:56:31.0000] <TabAtkins>
Hah, abusing operator overloading in C++ to allow "named operators", so you can write things like "v1 %dot% v2": http://forums.xkcd.com/viewtopic.php?f=11&t=14661&view=unread#p3210272

[14:56:49.0000] <Hixie>
hah

[14:57:27.0000] <annevk>
rniwa: add it to http://wiki.whatwg.org/wiki/Specs_todo under APIs

[15:03:25.0000] <rniwa>
annevk: noted.

[15:04:29.0000] <Hixie>
jesus, i'm having trouble even treading water today

[15:04:38.0000] <Hixie>
why did everyone suddenly becme so prolific

[15:08:18.0000] <nessy1>
Hixie: you almost sound like you want me to convince you!

[15:10:10.0000] <Hixie>
i always want people to convince me

[15:10:21.0000] <Hixie>
that's the whole point of debate

[15:10:42.0000] <Hixie>
if i didn't want you to convince me, why would i bother debating? i don't care if you're convinced or not, it doesn't affect what i put in the spec :-)

[15:11:45.0000] <annevk>
heh, that's exactly right

[15:12:30.0000] <annevk>
I usually go out of my way to get convinced, e.g. listening to all of the IRI meeting the other week, while most of them didn't appear to have read my input

[15:17:24.0000] <Hixie>
/me tries to add crossorigin="" to <script> and gets tangled up in the already stupidly-complicated script loading alorithm

[15:17:44.0000] <annevk>
rniwa: added

[15:18:17.0000] <rniwa>
annevk: oh, thanks.

[15:18:21.0000] <annevk>
rniwa: other suggestions for that page welcome btw, it's good to have an overview of what needs to be done

[15:18:41.0000] <Hixie>
wow, i didn't realise the script fetch is started synchronously

[15:18:43.0000] <Hixie>
that makes life easier

[15:18:48.0000] <annevk>
Hixie: script loading + fetch + CORS, fun!

[15:18:57.0000] <Hixie>
srsly

[15:19:19.0000] <annevk>
so looking forward to untangling all that in couple of years

[15:19:50.0000] <Hixie>
i'm so not :-P

[15:20:13.0000] <rniwa>
Hixie: script loading indeed is insanely complicated :(

[15:26:30.0000] <Hixie>
hm, interesting

[15:26:39.0000] <Hixie>
per spec today, <script> sends Origin headers already

[15:26:49.0000] <Hixie>
any browsers do that?

[15:26:50.0000] <Hixie>
abarth?

[15:26:57.0000] <Hixie>
do you know, perchance?

[15:30:32.0000] <abarth>
Hixie: hi

[15:30:38.0000] <abarth>
Hixie: nope

[15:30:52.0000] <abarth>
Hixie: or at least not without the crossorigin attribute

[15:31:20.0000] <abarth>
I think WebKit and Firefox implement the crossorigin attribute for script

[15:31:56.0000] <pablof>
the origin is added when the crossorigin attribute is set in webkit, yeah

[15:32:03.0000] <Hixie>
ok good

[15:32:05.0000] <Hixie>
that's what i'm speccing

[15:32:07.0000] <Hixie>
that's muchly

[15:43:59.0000] <Hixie>
do any other specs invoke "report an error" or can i change its interface?

[15:51:25.0000] <nessy1>
Hixie: at this stage I'm happy to agree to disagree ;-)

[15:53:26.0000] <nessy1>
Hixie: I want to get back to captions ;-)


2012-11-29
[16:59:04.0000] <Hixie>
TabAtkins: you still want cssElementMap, right?

[17:03:18.0000] <TabAtkins>
Hixie: Yes.  I know I want it on the HTML side, though I'm still not 100% sure how I'll use it on the CSS side.

[17:03:24.0000] <TabAtkins>
Damn conflict between type selectors and idents.

[17:03:25.0000] <Hixie>
roger.

[17:04:15.0000] <Hixie>
TabAtkins: just checking for references while running my garbage collector over here, don't mind me :-)

[17:04:18.0000] <TabAtkins>
/me thinks that he'll probably just fall back to Moz's behavior of having it be a shadowing ID.

[17:04:52.0000] <Hixie>
i need to work out what to do about http://wiki.whatwg.org/wiki/New_Features_Awaiting_Implementation_Interest

[17:05:08.0000] <TabAtkins>
/me unless we decide we never want to do arbitrary selectors in element(), in which case idents are still free from ambiguity.

[17:06:19.0000] <TabAtkins>
Hixie: Make a periodic status ping on the list to remind people about them, and see if new interest has appeared?

[17:07:38.0000] <Hixie>
TabAtkins: i was thinking more that i should ping the (relevant) people _not_ on the list, to see if they have interest they haven't expressed

[17:07:48.0000] <Hixie>
whence my starting http://wiki.whatwg.org/wiki/Who_to_ask_about_stuff

[17:09:48.0000] <TabAtkins>
Welp, time to continue my record of being the spammiest person in the W3C.

[17:10:25.0000] <TabAtkins>
Also, +1 on .currentScript, woo!  I've got a use-case that would kill for it.

[17:24:54.0000] <jsbell>
Oh, yay on .currentScript as well

[17:28:11.0000] <smaug____>
.currentScript?

[17:28:26.0000] <smaug____>
/me wonders how that maps to the events sicking implemented for <script>

[17:28:55.0000] <TabAtkins>
smaug____: It's just the <script> element for the currently executing script.

[17:29:21.0000] <smaug____>
sicking added before/afterscriptexecute

[17:29:39.0000] <smaug____>
it was discussed in whatwg mailing list

[17:29:58.0000] <smaug____>
so, sounds like similar feature

[17:30:58.0000] <smaug____>
oh, we have also .currentScript :)

[17:31:49.0000] <Hixie>
smaug____: both of those features are now in the spec and in firefox

[17:32:22.0000] <smaug____>
good good

[17:32:34.0000] <smaug____>
/me is checking whether he reviewed the patch

[17:33:04.0000] <smaug____>
no, I didn't

[17:33:56.0000] <smaug____>
and sorry, I missed the latest email to whatwg

[17:44:21.0000] <TabAtkins>
Sigh, and I'm

[17:44:42.0000] <TabAtkins>
Sigh, and I'm a good 17% of all email to www-style this month.

[17:45:29.0000] <Yuhong>
Hixie: on http://html5.org/tools/web-apps-tracker?from=7529&to=7530

[17:46:16.0000] <Yuhong>
Hixie: I'd say that WHATWG realized that versioning HTML don't make sense.

[17:47:27.0000] <Yuhong>
Hixie: And they realize that pace of evolution of the web is not controlled by a central body.

[18:01:06.0000] <GPHemsley>
/me wonders if Hixie's use of "amongst" in the History section is non-en-US

[18:40:09.0000] <TabAtkins>
Hixie: Would you mind sending a short email to www-style explaining what needs to be done on the CSSOM side for the <link rel=stylesheet crossorigin> additions?

[19:14:19.0000] <Hixie>
TabAtkins: yeah, i have a bunch of stuff to request, not sure what yet. there's a bug about CSSOM integration.

[00:14:10.0000] <annevk>
/me likes implementas

[00:25:07.0000] <MikeSmith>
is element.dispatchEvent(event) supported across browsers?

[00:25:42.0000] <MikeSmith>
and how far back?

[00:26:32.0000] <MikeSmith>
not in IE8 I guess

[00:28:16.0000] <MikeSmith>
hmm or maybe the click() method is more widely supported

[00:28:39.0000] <annevk>
what's this for?

[00:31:42.0000] <annevk>
Ms2ger++

[00:32:03.0000] <annevk>
Abstracting out the getElementsBy* methods makes it very easy to put them all on RootNode

[00:48:48.0000] <MikeSmith>
annevk: for dispatching an event to elements other than its target

[00:52:50.0000] <rniwa>
annevk: put getElementsBy* on where?

[00:53:07.0000] <rniwa>
annevk: i think we want to discourage the use of those functions since they return HTMLCollection with named getters

[00:53:46.0000] <annevk>
rniwa: http://dom.spec.whatwg.org/#rootnode but yeah, I'm having second thoughts

[01:02:01.0000] <Ms2ger>
Btw, we're getting new Document() pretty soon

[01:06:31.0000] <annevk>
cool, next is new Range() I guess

[01:11:13.0000] <annevk>
MikeSmith: any chance we get rid of https://www.w3.org/Bugs/Public/buglist.cgi?product=WebAppsWG&component=URL ?

[01:12:13.0000] <annevk>
MikeSmith: apparently people keep filing bugs there

[01:12:14.0000] <annevk>
:/

[01:12:21.0000] <MikeSmith>
ok

[01:12:34.0000] <MikeSmith>
I will need to make sure Art is OK with that

[01:12:43.0000] <MikeSmith>
with removing it

[01:16:59.0000] <annevk>
well I'm gonna keep moving bugs so they stay on my radar for fixing

[01:17:15.0000] <annevk>
seems less hassle to just have one place

[01:18:01.0000] <annevk>
if he feels like fixing the bugs though, I guess we can arrange something

[02:29:54.0000] <hsivonen>
Opera’s usage share would look better on StatCounter if Opera rebranded its releases as “rapic” and got version combined like Chrome and Firefox

[02:30:06.0000] <hsivonen>
*rapid

[02:34:44.0000] <odinho_>
Hmmmm...

[02:34:51.0000] <darobin>
hmmmmmmmmm

[02:34:58.0000] <odinho_>
darobin: Hey, that's my thing.

[02:35:03.0000] <darobin>
hmm mm

[02:35:13.0000] <reggna_>
Mmmhm!

[02:35:17.0000] <darobin>
oh yeah

[02:36:14.0000] <annevk>
http://www.youtube.com/watch?v=0wwHl3OKyFU looks like fun darobin

[02:36:19.0000] <annevk>
now I'm kinda sad I missed it

[02:36:44.0000] <darobin>
annevk: it was a *lot* of fun

[02:36:48.0000] <darobin>
there'll be others

[02:36:49.0000] <odinho_>
annevk: It was fun :D I'm looking stupid in many of the clips ;D

[02:36:58.0000] <darobin>
and not just odinho_ :)

[04:15:31.0000] <jgraham>
http://clokep.blogspot.se/2012/11/javascript-typed-arrays-pain.html

[04:18:41.0000] <annevk>
Film at 11?

[04:19:45.0000] <jgraham>
Well yes

[04:20:02.0000] <jgraham>
"I told you so" would be the uncharitable response

[04:21:29.0000] <annevk>
http://calculist.org/blog/2012/04/24/the-little-endian-web/

[04:22:11.0000] <jgraham>
Well yes, but this is a real developer trying to solve a real problem and being bitten by crazy defaults

[04:31:38.0000] <annevk>
Sorry, wasn't trying to be dismissive, just saying that I had not expected anything else

[04:52:18.0000] <zcorpan>
what happened to origin cookies? no interest?

[04:53:58.0000] <annevk>
you mean cake?

[04:54:19.0000] <annevk>
not entirely sure what happened

[04:54:34.0000] <annevk>
little interest I suppose

[04:54:50.0000] <annevk>
and prolly a lot of bikeshedding on what else ought to be taken into consideration

[05:21:15.0000] <annevk>
heycam: yo

[05:22:42.0000] <annevk>
heycam: for Christmas, or maybe a bit earlier, I'd like dictionary where all the members match "DOMString : (DOMString or sequence<DOMString>)", are ideally ordered (dunno how that works these days in JavaScript land), and unconstrained otherwise

[05:23:04.0000] <annevk>
heycam: well, I want to add the "convert to code points" attribute to it, once you add that to DOMString

[05:36:31.0000] <annevk>
so URLQuery...

[05:36:38.0000] <annevk>
-> has underlying string

[05:37:12.0000] <annevk>
-> underlying string can be URL's query of an associated URLUtils object (if any)

[05:37:57.0000] <annevk>
-> if associated with URLUtils needs to invoke URLUtils' update steps

[05:38:50.0000] <annevk>
I suppose technically you only need the underlying string if there's a URLUtils thingie involved

[05:39:59.0000] <annevk>
should it take query encoding into account? or should it screw over query encoding?

[05:55:07.0000] <annevk>
hmm more questions

[05:55:12.0000] <annevk>
?test vs ?test=

[05:55:15.0000] <annevk>
what does get() return?

[05:55:24.0000] <annevk>
get("test")

[05:56:08.0000] <annevk>
null / "" would make it indistinguishable from when "test" was not specified at all

[06:01:29.0000] <zcorpan>
""

[06:01:35.0000] <zcorpan>
and null when absent

[06:02:08.0000] <zcorpan>
not being able to distinguish ?test and ?test= seems OK

[06:02:33.0000] <smaug____>
yeah

[06:02:47.0000] <smaug____>
unless someone has really good use case

[06:02:51.0000] <smaug____>
which I doubt

[06:04:07.0000] <zcorpan>
we don't distinguish between different syntaxes in HTML that result in the same DOM, either

[06:04:53.0000] <smaug____>
well, this is not HTML.

[06:06:39.0000] <annevk>
and this does not result in the same serialization

[06:06:48.0000] <annevk>
but I reached the same conclusion

[06:07:36.0000] <annevk>
smaug____: if you have opinions on DOMTokenList: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20104

[06:47:08.0000] <annevk>
I updated http://url.spec.whatwg.org/#urlquery a bit. Also made .query settable. Logic was a bit complicated to figure out, but should be straightforward now.

[07:38:35.0000] <djdingo14>
Seems like WebSockets have JUST now become usable?

[09:11:18.0000] <smaug____>
/me needs to remember to reply to that <menu> thread

[09:12:55.0000] <GPHemsley>
/me wonders why the wiki is MIT License if a lot of it is intended to go into CC0 specs

[09:17:23.0000] <JonathanNeal>
smaug____: what's the haps with menu?

[09:23:01.0000] <smaug____>
JonathanNeal: ?

[09:23:13.0000] <smaug____>
Hixie tries to figure out what to do with <menu>

[09:23:23.0000] <smaug____>
I think we should keep at least contextmenu

[09:23:49.0000] <smaug____>
I don't see too good reasons for other menu types

[09:24:35.0000] <JonathanNeal>
I thought they were basically <ul> for apps.

[09:25:36.0000] <TabAtkins>
annevk: Re ?test vs ?test=, this is why you need a .has() method like every other Map in the world. The former should return null (or undefined), the latter should return "", and you can distinguish both from not specifying test at all by calling .has('test').

[09:25:56.0000] <TabAtkins>
JonathanNeal: <ul> is <ul> for apps.  ^_^

[09:26:15.0000] <TabAtkins>
I agree with Smaug that context menu has to stay.  I kinda like the button-driven popup menu case.

[09:28:09.0000] <JonathanNeal>
TabAtkins: what about for toolbars?

[09:28:35.0000] <smaug____>
unless toolbars are something which integrates with browser ui, I don't see reason for them

[09:29:12.0000] <JonathanNeal>
do context menus integrate with browser ui?

[09:29:56.0000] <smaug____>
they do

[09:30:05.0000] <smaug____>
at least in the only implementation

[09:30:27.0000] <JonathanNeal>
<menu type="context"> example?

[09:32:07.0000] <smaug____>
JonathanNeal: http://thewebrocks.com/demos/context-menu/

[09:32:58.0000] <JonathanNeal>
It's all the same in Chrome. Do I need to use Firefox, Opera?

[09:33:06.0000] <smaug____>
Firefox

[09:33:16.0000] <smaug____>
I think contextmenu is implemented only in Gecko

[09:33:26.0000] <TabAtkins>
So far, yeah.

[09:34:08.0000] <JonathanNeal>
Right. Okay, now I see it. If you drop all the other use cases for <menu> why even include type?

[09:34:11.0000] <smaug____>
TabAtkins: if we had menu buttons too, do you think page should be able style the opened menu?

[09:34:56.0000] <GPHemsley>
TabAtkins: ?test and ?test= should be treated as equal IMO

[09:35:01.0000] <TabAtkins>
smaug____: That's a good question.  I'm not sure.  I think I'd prefer that it be a native menu?

[09:35:03.0000] <smaug____>
in which case it would be quite close to <select>

[09:35:18.0000] <smaug____>
styling of <select> isn't defined anywhere, I think

[09:35:24.0000] <TabAtkins>
Correct, it's not.

[09:35:26.0000] <smaug____>
and implementations support different things

[09:35:35.0000] <TabAtkins>
As they should.

[09:35:56.0000] <TabAtkins>
GPHemsley: I could be convinced of that.

[09:36:12.0000] <GPHemsley>
TabAtkins: Because ? and ?test are not the same.

[09:36:28.0000] <TabAtkins>
Of course not, but I already said as much.

[09:36:44.0000] <TabAtkins>
The important thing is that I think ?test and ?test= are indistinguishable on the server side.

[09:37:01.0000] <TabAtkins>
So probably ?test should have u.get('text') === ''

[09:37:48.0000] <GPHemsley>
TabAtkins: Oh, so are you saying taht .has('test') returns false for ?, but true for ?test and ?test= ?

[09:37:55.0000] <GPHemsley>
(ack, so many question marks)

[09:38:08.0000] <TabAtkins>
Yes, of course.

[09:38:29.0000] <JonathanNeal>
Or you could create a new element, like <context>

[09:38:50.0000] <TabAtkins>
JonathanNeal: We could, but what's the value in that over reusing the existing <menu>?

[09:38:59.0000] <GPHemsley>
TabAtkins: OK, then I take back my objection.

[09:39:18.0000] <JonathanNeal>
TabAtkins: backwards compatibility

[09:39:33.0000] <TabAtkins>
JonathanNeal: Elaborate?

[09:39:52.0000] <TabAtkins>
(Note that <menu> does literally nothing in old UAs.  It was just another type of list.)

[09:41:29.0000] <JonathanNeal>
Well, a lot of folks have used <menu> to differentiate menus from content lists. Disqus, for example, does this. My own company, Liferay, does this as well. It's deployed this way on a lot of sites.

[09:42:06.0000] <TabAtkins>
JonathanNeal: And as long as you didn't put type=context on those elements, you'll be fine.

[09:42:22.0000] <TabAtkins>
<menu> by itself still acts in the legacy fashion.

[09:43:17.0000] <JonathanNeal>
That's a confusing spec for an element. To declare that an element is deprecated, except when a certain attribute is applied.

[09:43:29.0000] <TabAtkins>
I assume it's undeprecating.

[09:44:38.0000] <smaug____>
how is <menu> deprecated ?

[09:45:09.0000] <smaug____>
I see 'compact' attribute in <menu> is obsolete

[09:45:24.0000] <JonathanNeal>
Would <menu>, by itself, be valid?

[09:45:34.0000] <smaug____>
why not?

[09:45:39.0000] <TabAtkins>
Yes, as it defaults to type='list', which is a newly added and valid type.

[09:46:32.0000] <GPHemsley>
For those wondering about my mailman feature request: http://mail.python.org/pipermail/mailman-developers/2012-November/022500.html

[09:46:42.0000] <GPHemsley>
and http://mail.python.org/pipermail/mailman-developers/2012-November/022501.html

[09:47:04.0000] <JonathanNeal>
I must have read too much into "I don't see too good reasons for other menu types"

[09:47:49.0000] <TabAtkins>
There isn't a very good reason for plain menus, except for back-compat.

[09:49:13.0000] <JonathanNeal>
By plain menus do you mean type list?

[09:51:51.0000] <TabAtkins>
Yeah.

[09:55:36.0000] <JonathanNeal>
Do you see any good reason for a menu that isn't context?

[09:56:13.0000] <TabAtkins>
Possibly - like I said, a pop-up button menu might be useful.

[10:28:55.0000] <Hixie>
smaug____: most of hte proposals in my mail on this recently suggested dropping the toolbar feature of <menu>, i agree we should just let CSS handle that

[10:29:13.0000] <Hixie>
smaug____: (basically rename type=list to type=toolbar, but leave the legacy processing intact)

[10:29:57.0000] <annevk5>
I would be interested in transitioning the wiki content to CC0

[10:30:44.0000] <annevk5>
Is there a way we can enforce it for new pages and moves pages towards it once all contributors agree?

[10:30:56.0000] <GPHemsley>
I'm not sure...

[10:31:22.0000] <GPHemsley>
I recall Wikipedia having a heck of a time trying to transition away from GFDL.

[10:31:32.0000] <GPHemsley>
I think pages are still dual-licensed.

[10:31:40.0000] <TabAtkins>
The transition part is hard.  The enforcing part is easy.

[10:33:24.0000] <annevk5>
We don't have to transition everything. Just new stuff would be a win.

[10:37:35.0000] <Ms2ger>
GPHemsley, that was easy, actually... They just got the GFDL include an escape clause for them :)

[10:37:54.0000] <GPHemsley>
/me wonders why no one has responded to his message about sniffing archive types

[10:38:25.0000] <annevk5>
Read up on Warnock ;)

[10:39:20.0000] <GPHemsley>
Ah, interesting.

[10:39:30.0000] <GPHemsley>
I'm gonna assume (1).

[11:27:50.0000] <smaug____>
Hixie: ping

[11:29:07.0000] <smaug____>
Hixie: what do you mean with menu buttons exactly? Would that be effectively left-click opening a menu (on top of the viewport, not part of the viewport) ?

[11:30:33.0000] <TabAtkins>
smaug____: I think so, yeah.  I assume the intention is to allow standard app alt-menus as multiple <menu type=button>.

[11:33:05.0000] <GPHemsley>
/me wonders why people reply to posts without having read the rest of the thread.

[11:37:41.0000] <jwalden>
GPHemsley: I didn't read the conversation leading up to this, but surely it's obvious that people want to say their thing without doing the homework

[11:49:21.0000] <GPHemsley>
jwalden: Yeah, I suppose it was a bit of a rhetorical question.

[11:50:27.0000] <jwalden>
hmm, was I really too subtle with my irony there?  :-\

[11:50:29.0000] <jwalden>
;-)

[11:53:33.0000] <GPHemsley>
jwalden: Oh, sneaky. Went right over my head.

[12:01:11.0000] <Hixie>
smaug____: Like, in GMail, the "Mail v" button under the Google logo

[12:01:50.0000] <Hixie>
smaug____: or the "More..." button above the messages, or even the checkbox button over on the left above the messages, though that one wouldn't be supported by what I'm proposing

[12:02:12.0000] <smaug____>
uh, you're forcing me to log in to google

[12:02:14.0000] <smaug____>
:)

[12:02:26.0000] <smaug____>
maybe I won't die if I do that

[12:02:31.0000] <Hixie>
-_- :-P

[12:02:38.0000] <Hixie>
most sites have something like this

[12:02:42.0000] <Hixie>
what site would you prefer :-)

[12:03:00.0000] <Hixie>
Twitter:

[12:03:04.0000] <Hixie>
the cog in the toolbar

[12:03:09.0000] <smaug____>
Hixie: ah, but that is in the page

[12:03:12.0000] <smaug____>
that menu

[12:03:19.0000] <smaug____>
not something like <select>

[12:03:36.0000] <Hixie>
ok?

[12:04:17.0000] <smaug____>
I was just thinking the type="button" proposal was about having something similar to <select>

[12:05:06.0000] <Hixie>
"similar" in what sense? i mean, those buttons are "similar" in some sense, and unrelated in another...

[12:05:17.0000] <Hixie>
<select> is about selecting an option, it's the equivalent of a series of radio buttons

[12:05:20.0000] <smaug____>
well, Gmail shows some stuff in the page

[12:05:26.0000] <Hixie>
<menu> is about selecting a command

[12:05:28.0000] <smaug____>
nothing pops up from the viewport

[12:05:40.0000] <smaug____>
I'm talking about the UI part

[12:05:53.0000] <Hixie>
oh well the exact UI is a separate issue. I think if GMail could get the popup to be a real popup then they would

[12:06:12.0000] <Hixie>
i mean, if you push the button when it's at the bottom of the window, you'd expect it to go over the bottom of the window

[12:06:15.0000] <Hixie>
just like a native menu button

[12:06:22.0000] <Hixie>
you on mac, linux, windows?

[12:06:34.0000] <smaug____>
linux

[12:06:45.0000] <Hixie>
gtk?

[12:06:49.0000] <Hixie>
as in, gnome?

[12:06:50.0000] <smaug____>
yup

[12:06:52.0000] <smaug____>
yup

[12:07:22.0000] <smaug____>
so type="button" would be something close to back button in FF

[12:07:42.0000] <smaug____>
except that back button requires one to press the button for some time

[12:08:06.0000] <Hixie>
yeah, similar to that

[12:08:22.0000] <Hixie>
basically it's like a context menu but it's anchored to a particular position and appears when you activate another control, rather than right clicking

[12:08:45.0000] <smaug____>
do we need to button part

[12:08:52.0000] <smaug____>
or could it be like contextmenu

[12:09:31.0000] <Hixie>
we could maybe have an attribute on <button> that turns <button> into a menu button, or some such

[12:09:34.0000] <Hixie>
hadn't really thought about that

[12:09:41.0000] <Hixie>
(and points to a <menu>)

[12:09:58.0000] <smaug____>
where say in <div menu="foobar">click me</div> <menu type="dropdown" id="foobar">...

[12:10:12.0000] <Hixie>
aha, here we go. the "Display your bookmarks" button in Firefox's toolbar. That's what I mean.

[12:10:28.0000] <Hixie>
smaug____: yeah, though hopefully not <div>

[12:10:44.0000] <smaug____>
why not in all the elements?

[12:10:49.0000] <smaug____>
why limit to certain elements?

[12:11:29.0000] <Hixie>
why all elements?

[12:11:38.0000] <Hixie>
that'd be... weird

[12:11:50.0000] <Hixie>
what would it mean for a radio button to have one of these?

[12:11:52.0000] <Hixie>
or a <select>?

[12:11:54.0000] <smaug____>
how is that different to contextmenu ?

[12:15:14.0000] <smaug____>
radio button could have one. It might just not make much sense. But it would be up to the web application

[12:18:54.0000] <smaug____>
so in XUL there is popup and context attributes

[12:25:06.0000] <Hixie>
smaug____: context menu is triggered by a different UI than the UI that interacts with the control

[12:25:27.0000] <Hixie>
smaug____: in general i'm not a fan of making things that don't make sense be possible, because web authors will always do it

[12:27:01.0000] <smaug____>
don't understand "context menu is triggered by a different UI than the UI that interacts with the control"

[12:27:37.0000] <Hixie>
context menu is triggered by right click, typically

[12:27:43.0000] <Hixie>
radio button is selected by left click

[12:27:55.0000] <smaug____>
(but in general I agree with not-making-silly-things-possible)

[12:28:04.0000] <Hixie>
menu buttons are triggered by left click -- it's their action, just like checking the radio button is the action of a radio button

[12:29:04.0000] <smaug____>
sure

[12:29:42.0000] <Hixie>
why did twitter shrink my url by two characters? the tweet fit in 140 characters already. wtf twitter.

[12:29:53.0000] <Hixie>
their url is unreadable.

[12:30:13.0000] <Velmont>
I hate that. identi.ca always did that correctly.

[12:32:54.0000] <smaug____>
Hixie: I'm just a bit worried that if menu is for buttons only, pages will have hard time to use it

[12:33:09.0000] <Hixie>
can you elaborate?

[12:33:11.0000] <smaug____>
I can imagine some <canvas> app which wants to show menu when clicking the <canvas>

[12:33:37.0000] <smaug____>
not very differently contextmenu would be supported

[12:33:55.0000] <Hixie>
well you can already bind a part of a canvas to a control

[12:34:06.0000] <Hixie>
we would just extend that to support binding canvas hit regions to menu buttons

[12:34:15.0000] <Hixie>
s/would/could/

[12:35:00.0000] <smaug____>
well, same thing with even div

[12:35:16.0000] <smaug____>
there could be a menu for translation for example

[12:35:29.0000] <smaug____>
click the text and you get list of languages

[12:35:46.0000] <jochen__>
does somebody know why MediaQueryList defines this MediaQueryListListener interface, instead of just defining an onchanged event?

[12:36:14.0000] <Hixie>
smaug____: google translate does something like that. I would expect each of those to just be a styled menu button, not a div or span.

[12:36:41.0000] <smaug____>
but you limit the UI then

[12:36:48.0000] <smaug____>
one would need to click the button

[12:36:51.0000] <smaug____>
not just the text

[12:37:32.0000] <Hixie>
what's the difference?

[12:38:08.0000] <smaug____>
you need to have some hidden button above the text

[12:38:18.0000] <Hixie>
no just put the text in the button

[12:38:21.0000] <smaug____>
or have the text inside the button

[12:38:25.0000] <smaug____>
which prevents selecting

[12:38:49.0000] <Hixie>
http://translate.google.com/#auto/fr/seems%20to%20me%20the%20yellow%20boxes%20are%20in%20fact%20buttons

[12:39:29.0000] <TabAtkins>
???

[12:39:31.0000] <Hixie>
looks like actually in that case it's not a menu button

[12:39:52.0000] <smaug____>
Hixie: yes. I don't think all those yellow things should be buttons

[12:39:54.0000] <Hixie>
it's more that you can click to turn the spans into text edit boxes with a list="" autocomplete menu

[12:40:23.0000] <TabAtkins>
Oh, yellow boxes.  I see.

[12:40:25.0000] <Hixie>
do you have an example of what you mean then? i can't think of any other site that does something like that

[12:40:53.0000] <Hixie>
in other news, my mail server is being a bitch today.

[12:41:07.0000] <smaug____>
that google translate is a good example

[12:41:13.0000] <smaug____>
those yellow things are spans

[12:41:41.0000] <Hixie>
yeah but there's no menu there it turns out

[12:41:46.0000] <Hixie>
so it's not a good example

[12:42:02.0000] <Hixie>
when you click, they turn into the equivalent of <input type=text list="suggestions">

[12:42:51.0000] <Hixie>
(though in practice they actually use contenteditable currently)

[12:44:37.0000] <smaug____>
Hixie: another question. How the contents of <menu type="button"> would be handled?

[12:44:52.0000] <Hixie>
that's the question, indeed

[12:45:13.0000] <Hixie>
my e-mail had some strawman proposals

[12:45:17.0000] <Hixie>
i'm not married to any of them

[12:46:15.0000] <smaug____>
hmm, which email

[12:46:24.0000] <smaug____>
I must be reading some wrong one :)

[12:46:27.0000] <Hixie>
the one you replied to saying you liked #3 :-)

[12:48:55.0000] <smaug____>
"The <menu> element in "context" and "button" modes would only have three  elements as descendants"

[12:49:04.0000] <smaug____>
Is that the proposal?

[12:49:14.0000] <smaug____>
how would the button menu look like?

[12:49:48.0000] <smaug____>
well, the button which triggers the menu

[12:50:21.0000] <smaug____>
<button popup="id_if_some_menu">foobar</button> would ofc solve this problem

[12:50:34.0000] <smaug____>
but doesn't feel right

[12:51:17.0000] <Hixie>
in the e-mail, the suggestion is that the <menu> itself would be the element that's the button, but using <button> seems fine to me too

[12:51:23.0000] <Hixie>
i don't have a preference one way or the other

[12:51:32.0000] <Hixie>
and haven't studied the latter idea in depth yet

[12:51:51.0000] <Hixie>
there are various things we could do, e.g. <button type=menu> Label <menu> ... </menu> </button>

[12:52:35.0000] <Hixie>
or <button type=button menu=mid> Label </button> <menu id=mid hidden> ... </menu> (and drop the <menu type=""> attribute altogether)

[12:53:39.0000] <Hixie>
or <menubutton popup=mid> instead of using <button>

[12:53:44.0000] <Hixie>
or <input type=menu>

[12:54:03.0000] <TabAtkins>
I'm actually not sure how <menu> being the button would work.  Would you use the text not in <menuitem> as the button text?

[12:54:13.0000] <Hixie>
text would come from label=""

[12:54:26.0000] <TabAtkins>
Oh, okay.

[12:54:28.0000] <Hixie>
contents would be unrendered

[12:54:31.0000] <Hixie>
(not sure i like this)

[12:54:35.0000] <Hixie>
(in fact, pretty sure i don't)

[12:54:59.0000] <Hixie>
(i just hadn't really thought about it one way or the other -- my e-mail was really more intended to get feedback from implementors about what they'd be willing to do)

[12:55:03.0000] <smaug____>
for now <button type="menu"> might be enough

[12:55:23.0000] <smaug____>
er

[12:55:26.0000] <smaug____>
no

[12:55:43.0000] <smaug____>
<button type="button" menu="mid">

[12:55:47.0000] <smaug____>
that one

[12:56:13.0000] <smaug____>
if generic menu handling is needed, that could be added later

[12:56:32.0000] <smaug____>
to other elements

[12:56:59.0000] <Hixie>
the gmail checkbox thing could actually work like this: <button type=menu menu=mid> <input type=checkbox> Open Menu </button> <menu id=mid> <menuitem ...> <menuitem ...> <menuitem ...> </menu>

[12:57:03.0000] <Hixie>
yeah

[12:57:06.0000] <Hixie>
that seems pretty solid

[12:57:13.0000] <Hixie>
(what smaug____ said, not what i said)

[12:57:45.0000] <Hixie>
actually if we only allow <menu> and <menuitem> in <menu>, you wouldn't even need <menu hidden> or <menu type> to hide the menu contents

[12:57:48.0000] <Hixie>
since they'd be invisible

[12:57:59.0000] <Hixie>
they'd have to only be at flow level, since they'd introduce a line break

[12:58:03.0000] <TabAtkins>
I... did not know you could put checkboxes inside of buttons.

[12:58:04.0000] <Hixie>
in the default rendering

[12:58:16.0000] <Hixie>
TabAtkins: per spec you can't, but browsers are surprisingly flexible with contents of <button>

[12:58:29.0000] <Hixie>
and parser doesn't care

[12:58:32.0000] <Hixie>
gotta go, meeting, bbiab

[12:58:40.0000] <a-ja>
/me arrived mid-conversation.....what's menu=mid proposal?

[12:58:57.0000] <smaug____>
TabAtkins: but the checkboxes won't actually work in button

[12:59:06.0000] <TabAtkins>
smaug____: They sure do in Chrome.

[12:59:13.0000] <smaug____>
at least not in most implementations

[12:59:53.0000] <smaug____>
TabAtkins: I believe that is a bug in webkit

[13:00:24.0000] <TabAtkins>
a-ja: Read the WHATWG thread about <menu> - menu=foo is one possible way to do Hixie's "menu opened from a button" idea.

[13:01:07.0000] <a-ja>
n/m....hixie's 14:57:25 comment answered my question

[13:01:44.0000] <TabAtkins>
smaug____: Ooh, and you can even, as normal, stop the click from propagating up to the button.

[13:02:33.0000] <TabAtkins>
I find this functionality interesting.

[13:02:41.0000] <smaug____>
Gecko explicitly prevents that

[13:02:55.0000] <smaug____>
the contents of <button> are there just for presentation

[13:03:01.0000] <smaug____>
events go to <button>

[13:03:15.0000] <smaug____>
because that is how at least some old spec said it should work

[13:57:09.0000] <dglazkov>
w3.org is down. Finally, someone put kibosh on this whole world wide web thing.

[13:57:21.0000] <Hixie>
smaug____: we can probably change that, though

[13:57:47.0000] <smaug____>
Hixie: change what?

[13:58:01.0000] <smaug____>
handling the contents of <button> ?

[13:58:19.0000] <Hixie>
yeah

[13:58:23.0000] <Hixie>
TabAtkins: any idea what this guy means? https://twitter.com/briankardell/status/274252456655978497

[13:58:44.0000] <smaug____>
not sure which behavior I prefer

[13:58:50.0000] <smaug____>
probably Gecko's

[13:58:58.0000] <smaug____>
Gecko + Opera

[13:59:06.0000] <smaug____>
IE seems to have odd behavior

[13:59:17.0000] <TabAtkins>
Hixie: Since I can't see anything on w3.org right now, no.

[13:59:43.0000] <TabAtkins>
I think he's just agreeing with you.

[14:01:21.0000] <Hixie>
TabAtkins: not sure what he meant by the star and microformats

[14:01:45.0000] <TabAtkins>
I think he's confusing microformats/microdata.  No clue what the gold star thing is about.

[14:02:02.0000] <Hixie>
k

[14:03:19.0000] <scor>
dglazkov: there seems to be a power outage here in cambridge, possibly related

[14:03:47.0000] <TabAtkins>
scor: Yes, w3.org is down because of MIT losing power.

[14:03:57.0000] <TabAtkins>
scor: Twitter confirms from multiple people.

[14:04:25.0000] <scor>
/me wonders how he'll get home

[14:04:59.0000] <TabAtkins>
scor: You need electrical power to get home?

[14:05:14.0000] <scor>
TabAtkins: I could walk, but usally take the subway

[14:05:17.0000] <scor>
which is down too

[14:05:21.0000] <tantek>
wait, what about all those TR pages we depend on to get our work done?

[14:05:21.0000] <TabAtkins>
Ah, kk.

[14:05:33.0000] <TabAtkins>
tantek: GUESS YOU'LL HAVE TO GO WITHOUT.

[14:05:39.0000] <tantek>
is there a mirror on github?

[14:06:05.0000] <Velmont>
Of some stuff :-)

[14:27:53.0000] <annevk>
tantek: http://spec.whatwg.org/ is the new /TR/ but without the lack of updated content

[14:30:02.0000] <annevk>
Hixie: that guy has some interesting ramblings on his site http://briankardell.wordpress.com/2012/06/14/the-blind-architect/

[14:30:12.0000] <annevk>
Hixie: also "Tim Berners-Lee Needs Revision"

[14:31:04.0000] <annevk>
miketaylr: "Whitespace strategist at Opera Software." so you're responsible for it being different in every standard! :-)

[14:32:11.0000] <miketaylr>
 TODO: fix whitespace

[14:53:23.0000] <annevk>
TabAtkins: btw, I updated http://url.spec.whatwg.org/#interface-urlquery

[14:53:56.0000] <annevk>
TabAtkins: basically whenever you do a modifying operation, such as delete/append/set, "update steps" are invoked is the plan

[14:54:28.0000] <annevk>
TabAtkins: I guess I'll add has too, although I think for ?test / ?test= we want to return the empty string in both cases

[14:54:52.0000] <annevk>
TabAtkins: makes more sense to align with getAttribute for missing altogether (and return null there)

[14:58:16.0000] <Hixie>
abarth: in http://wiki.whatwg.org/wiki/AllowSeamless you mention "using Frame-Options or ancestor-origins" as ways to do origin-whitelisting

[14:58:41.0000] <Hixie>
abarth: are these at pre-parse (HTTP header) time? Can you elaborate on these?

[14:59:53.0000] <Hixie>
(my guess is by Frame-Options you mean X-Frame-Options, but that seems to not have a whitelist, and that by ancestor-origins you mean ancestorOrigins but that is post-parse)

[15:00:49.0000] <TabAtkins>
annevk: Yes, there was discussion while you were out of the room.  ?test and ?test= should both have the empty string, since they're indistinguishable on the server-side.

[15:01:11.0000] <Hixie>
how are they indistinguishable?

[15:01:42.0000] <Hixie>
<input name=isindex value="test"> and <input name=isindex value="test="> should result in different pages being served

[15:01:44.0000] <TabAtkins>
Hixie: In PHP, for example, you'll just get $_GET['test'] == ''

[15:01:58.0000] <Hixie>
oh well if you're using a library that sucks, sure

[15:01:59.0000] <TabAtkins>
I have no clue what isindex does.

[15:02:14.0000] <TabAtkins>
That's most query param handling.  ^_^

[15:02:27.0000] <annevk>
Hixie: if you include the = in the value it will be percent-encoded so that's different

[15:02:34.0000] <SamB>
Lots of things can see the whole query string

[15:02:40.0000] <Hixie>
TabAtkins: you said "indistinguishable", not "ignored"

[15:02:56.0000] <Hixie>
or "Treated as the same by some libraries"

[15:02:56.0000] <TabAtkins>
Hixie, I have no idea what you're saying, but think you've confused param names for param values.

[15:03:10.0000] <annevk>
Hixie: I guess the question here is whether application/x-www-form-urlencoded allows values that are either null or the empty string; I guess it does

[15:03:11.0000] <Hixie>
isindex doesn't have names of values

[15:03:43.0000] <Hixie>
annevk: all i'm saying is ?foo and ?foo= are distinguishible on the server, i've no idea what this means for your spec :-)

[15:03:55.0000] <TabAtkins>
Then what annevk said is right - in your example, the = is part of the param name and will be percent-encoded.

[15:04:12.0000] <gavinc>
... isindex is a name?  I thought it was an element...

[15:04:14.0000] <annevk>
Hixie: ah, no disagreement there

[15:04:28.0000] <annevk>
gavinc: it's a macro in the parser

[15:04:35.0000] <TabAtkins>
gavinc: You're getting confused, but don't worry, because noone cares about isindex. ^_^

[15:05:15.0000] <Hixie>
TabAtkins: yeah using isindex was poor choice on my part

[15:05:30.0000] <Hixie>
my point still holds though

[15:05:46.0000] <Hixie>
http://software.hixie.ch/utilities/cgi/test-tools/echo?test= and http://software.hixie.ch/utilities/cgi/test-tools/echo?test aren't the same

[15:06:08.0000] <annevk>
Hixie: yeah, but per application/x-www-form-urlencoded they are (at least per your spec for it)

[15:06:26.0000] <annevk>
Hixie: and application/x-www-form-urlencoded is the API we're gonna provide for .query

[15:06:52.0000] <annevk>
Hixie: if you want something more complicated, you can build your own API on top of .search (which is the raw data); that's the gist of the plan

[15:07:04.0000] <Hixie>
ah yeah, that's fine

[15:07:21.0000] <Hixie>
semantically i agree that ?test and ?test= should be treated the same

[15:08:22.0000] <annevk>
good good, then we were just miscommunicating

[15:10:17.0000] <annevk>
Hixie: Frame-Options is an HTTP header which provides embedding prevention

[15:10:43.0000] <gavinc>
ahh! isindex was an element as is now a name and was a name too, learning every day

[15:10:53.0000] <gavinc>
/me fears isindex

[15:11:00.0000] <annevk>
Hixie: I'm guessing ancestor-origins is a CSP thing that does something similar, but not sure about that

[15:11:17.0000] <Hixie>
aah, could be CSP...

[15:12:10.0000] <annevk>
maybe the new name for frame-ancestors

[15:12:49.0000] <annevk>
if there's something I fear, it's CSP

[15:12:52.0000] <annevk>
sooo complex

[15:13:38.0000] <annevk>
gavinc: use http://software.hixie.ch/utilities/js/live-dom-viewer/ and understand <isindex>; better than fearing it

[15:14:09.0000] <annevk>
gavinc: while you're there you might want to try <image> and </br>, and maybe for extra fun a lone </p>

[15:14:09.0000] <Hixie>
isindex is reasonably straightforward and trivial to search for in the html spec

[15:14:38.0000] <gavinc>
annevk: those others I've come to terms with ;) <isindex>...

[15:16:04.0000] <Hixie>
anyone got a copy of hte csp spec i can use?

[15:17:22.0000] <annevk>
csp.spec... oh wait

[15:17:24.0000] <Hixie>
google has a cache of an old version

[15:17:27.0000] <TabAtkins>
annevk: Seems inconsistent that set() can take an array, but append() can't.

[15:17:27.0000] <Hixie>
i'll use that for now

[15:18:15.0000] <annevk>
Hixie: http://webcache.googleusercontent.com/search?q=cache:UUvG4IpmatkJ:www.w3.org/TR/2012/CR-CSP-20121115/+&cd=4&hl=en&ct=clnk

[15:18:20.0000] <annevk>
ah

[15:18:21.0000] <TabAtkins>
And unfortunately, set() taking an array violates the Map API.

[15:19:14.0000] <Hixie>
ok the old version of CSP isn't good enough for what i want

[15:19:14.0000] <annevk>
my idea was that append is just for adding a new pair, and set was for overwriting a bunch of stuff

[15:20:01.0000] <TabAtkins>
Actually, hm.  I'd probably assume that a MultiMap would allow an array to be passed.

[15:20:14.0000] <TabAtkins>
(Meaning that if you wanted to store an array itself as a value, you'd have to wrap it in an array.)

[15:20:25.0000] <annevk>
the shitty thing is that we don't know what MultiMap will look like

[15:20:34.0000] <TabAtkins>
Yeah, I'm guessing at what a good API woudl be.

[15:20:48.0000] <annevk>
and also, this is a multimap, but we want to optimize for map usage

[15:20:55.0000] <TabAtkins>
While trying not to make it too inconvenient for a pure string->string map API.

[15:22:11.0000] <TabAtkins>
(Or string->[string], I guess.)

[15:23:18.0000] <annevk>
it's really [(string,string)]

[15:23:26.0000] <Hixie>
ok based on what i can read about 1.1, it doesn't do what i want either

[15:23:29.0000] <Hixie>
hmmmm

[15:23:51.0000] <TabAtkins>
annevk: Other multimap apis seem to have both a .set and .setAll.

[15:24:01.0000] <annevk>
Hixie: just postpone until Adam is around

[15:24:07.0000] <annevk>
TabAtkins: that sounds interesting

[15:24:11.0000] <annevk>
TabAtkins: we already have getAll

[15:24:13.0000] <TabAtkins>
Basically just *All variants of every method.

[15:24:39.0000] <annevk>
TabAtkins: is there documentation on how they operate?

[15:24:44.0000] <TabAtkins>
So I guess delete can change from being {1,2} arg to being two-arg, with a 1-arg deleteAll.

[15:24:48.0000] <TabAtkins>
http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/Multimap.html

[15:25:52.0000] <annevk>
I think remove we should just do with an optional arg

[15:25:54.0000] <annevk>
like it's now

[15:26:01.0000] <TabAtkins>
That's likely fine.

[15:26:18.0000] <TabAtkins>
Hm, I can't parse what the hell this Scala documentation is trying to tell me about its multimap class.

[15:26:53.0000] <annevk>
yeah me neither

[15:27:01.0000] <annevk>
the putAll method there seems like append()

[15:27:04.0000] <TabAtkins>
Oh, looks like Scala just doesn't treat it like a normal map at all.

[15:27:15.0000] <TabAtkins>
It does everything in terms of the value being a Set.

[15:28:14.0000] <annevk>
the underlying model is Collection<Map.Entry<K,V>>

[15:28:56.0000] <annevk>
aaah

[15:29:15.0000] <annevk>
what I call set, they call replaceValues

[15:29:17.0000] <TabAtkins>
But yeah, the Java class from Apache does the same thing, with both put() and putAll().

[15:29:30.0000] <annevk>
but they don't have documentation for replaceValues

[15:29:37.0000] <annevk>
or at least not documentation in detail

[15:29:48.0000] <annevk>
who write this stuff?

[15:29:52.0000] <annevk>
writes*

[15:29:55.0000] <TabAtkins>
A machine, most likely.

[15:30:16.0000] <annevk>
oh, it says "Jared Levy"

[15:30:20.0000] <TabAtkins>
Wait,w hat page are you looking at?

[15:30:25.0000] <annevk>
the one you linked?

[15:30:38.0000] <TabAtkins>
Oh, the google one.

[15:31:17.0000] <annevk>
oh this is fun, but I should get some sleep

[15:31:30.0000] <TabAtkins>
annevk: Should I file a bug?

[15:31:42.0000] <annevk>
if you figure out an API, let me know, otherwise I'll struggle on with the algorithms that are required either way

[15:31:42.0000] <TabAtkins>
Assuming w3.org is up before I leave?

[15:31:59.0000] <annevk>
TabAtkins: bug/email/rants on IRC all work

[15:36:35.0000] <TabAtkins>
annevk: Okay, got it worked out with one question.  I think this is reasonable for a generic MultiMap, *and* is compatible with treating it as a Map.

[15:37:04.0000] <TabAtkins>
get(k), getAll(k), set(k,v), append(k,v), appendAll(k,[v]), delete(k, v?), has(k)

[15:37:50.0000] <TabAtkins>
Only question is whether you want a setAll(k,[v]) or not.  You can just do .delete(k); .appendAll(k,[v]) instead.

[15:38:45.0000] <annevk>
set overwrites the first key/value pair; if no key is found, appends?

[15:39:07.0000] <TabAtkins>
Yes.

[15:39:13.0000] <annevk>
append/appendAll can be merged by doing append(k, (v or [v]))

[15:39:22.0000] <TabAtkins>
In other words, set is *always* equivalent to just doing a full delete, followed by an append.

[15:39:39.0000] <TabAtkins>
annevk: That only works in your string-limited case.  It doesn't work for a general MultiMap.

[15:39:42.0000] <annevk>
equivalent, but not identical because of the underlying data model

[15:40:02.0000] <TabAtkins>
Oh, you're right, I forgot about the data model.  In that case, yes, your formulation is great.

[15:40:10.0000] <TabAtkins>
In that case, you probably want a setAll().

[15:40:28.0000] <annevk>
I was thinking of maybe not having setAll/appendAll for now

[15:40:39.0000] <TabAtkins>
That's fine too.

[15:40:44.0000] <annevk>
as they can be implemented and we expect the common case to be get/set

[15:40:55.0000] <annevk>
so just keep it very basic for now, and expand later

[15:41:11.0000] <annevk>
thanks, will update stuff tomorrow

[15:41:12.0000] <TabAtkins>
getAll() and delete() with an optional arg seem like *clearly* the right answer for a generic multimap, so shouldn't be controversial.

[15:41:20.0000] <TabAtkins>
Also .append() as a single k/v addition.

[15:41:25.0000] <annevk>
yeah

[15:41:32.0000] <annevk>
those we should keep

[15:42:00.0000] <annevk>
/me likes design time in #whatwg

[15:42:12.0000] <annevk>
really nn now :)

[15:42:14.0000] <Hixie>
nn

[15:55:00.0000] <Hixie>
how does caniuse not have <style scoped>


2012-11-30
[16:00:16.0000] <TabAtkins>
annevk: Yo, one more detail.  JS Maps now have the set() method return the map, for chaining.  They don't currently return the map for delete(), but we're planning to fix that, so URLQuery should match and return the object for both.

[16:00:37.0000] <Hixie>
i thought chrome implemented <style scoped>. did support get removed or something?

[16:00:53.0000] <TabAtkins>
I forget, and Dimitri just left.

[16:02:04.0000] <TabAtkins>
annevk: And append() too, obviously.

[16:02:34.0000] <TabAtkins>
annevk: That one's easy, so you can just do u.append(k,v).append(k,v2).append(k.v3);

[16:02:57.0000] <TabAtkins>
But also having the ability to do u.delete(k).append(k,v) is useful.

[16:18:19.0000] <GPHemsley>
/me can't believe W3C doesn't have a mirror system set up to protect against MIT power outages.

[16:20:41.0000] <gavinc>
/me points a very large number of sites that didn't have anything other then their bellow ground datacenter in NYC

[16:21:28.0000] <TabAtkins>
GPHemsley: On that note, they're back up.

[16:22:30.0000] <gavinc>
11/29/12 04:12 PM by IRC at least ;)

[16:22:31.0000] <GPHemsley>
gavinc: Sites that are crucial to the workings of the Web? (I didn't notice any sites go down.)

[16:23:08.0000] <gavinc>
GPHemsley: not really "the web" but CBS

[16:23:30.0000] <GPHemsley>
oh, I don't expect news companies to have that level of redundancy

[16:23:42.0000] <GPHemsley>
I mean, they should

[16:23:45.0000] <GPHemsley>
but I don't expect it

[16:23:54.0000] <GPHemsley>
IT companies, though...

[16:24:33.0000] <gavinc>
yeah I don't think so

[16:25:29.0000] <GPHemsley>
for maximum point effectiveness, I'll even limit that to just the W3C

[16:26:04.0000] <GPHemsley>
I won't presume anything about any other entity

[16:26:56.0000] <gavinc>
Eh, I remember (was somewhat involved with) turning off a rack at PAIX that ended badly for the West Coast for a few hours, and the overpass fire a few years later that cut most of the fiber in the bay area

[16:27:11.0000] <gavinc>
disasters are surprising ;)

[16:43:53.0000] <TabAtkins>
Argh, goddammit, I *really* need to write my own CSS spec preprocessor.  >_<  Bert's has weird ideas of how to fix up markup it considers invalid.

[16:57:47.0000] <dbaron>
TabAtkins, can you use one of the other available ones instead?

[17:06:24.0000] <TabAtkins>
dbaron: I dunno.  I use some of Bert's features heavily (namely, the magic around 'foo' and ''foo'', and the text-based linkage of <dfn> and <i>).

[17:06:39.0000] <TabAtkins>
If something else can reproduce those, or is easy enough to hack them into, I could do so.

[17:06:52.0000] <TabAtkins>
Oh, and the biblio syntax [[foo]] and [[!foo]].

[17:10:59.0000] <tantek>
TabAtkins, that's the one where [[!foo]] means normative (important) foo, right?

[17:11:52.0000] <tantek>
/me wonders if it would have been too hard to just do [[foo!]] instead (or perhaps patch the preprocessor to accept that too)

[17:29:50.0000] <TabAtkins>
tantek: Yes, it is.

[17:30:01.0000] <TabAtkins>
tantek: What's the point of moving the !?

[17:31:08.0000] <Hixie>
ojan_away: yeah the only difference with cross-origin workers vs normal workers is that they're in a different origin

[17:44:55.0000] <tantek>
TabAtkins, because a trailing ! looks like a shout (of importance), whereas a leading ! looks like an inverter (not).

[17:51:55.0000] <dbaron>
not in CSS :-P

[20:38:02.0000] <Hixie>
is there anyone with a bunch of patience who would happens to have some version of IE around who could describe to me the sequence of alerts that IE gets while loading http://damowmow.com/playground/demos/onload/001.html ?

[20:57:50.0000] <Hixie>
wtf

[20:57:59.0000] <Hixie>
my mac no longer responds to "f3"

[20:58:05.0000] <Hixie>
like, the keyboard driven isn't letting that through

[20:58:18.0000] <Hixie>
the key is physically fine, i can rebind it to "=" and then hitting f3 prints an "="

[20:58:27.0000] <Hixie>
and i can rebind "=" to f3, and then "=" does nothing.

[20:58:44.0000] <Hixie>
(yay programmable keyboards0

[20:58:45.0000] <Hixie>
)

[20:58:50.0000] <Hixie>
i've tried rebooting my keyboard

[20:58:55.0000] <Hixie>
guess rebooting the mac is next

[00:35:34.0000] <annevk>
TabAtkins: ah, so the chaining won? interesting

[00:35:47.0000] <annevk>
TabAtkins: I guess I'll add that once I receive word from TC39

[01:07:25.0000] <annevk>
So URLQuery... When a URLUtils implementing object is created it creates a URLQuery and seeds it with it's url's query. Then whenever url's query is updated (either .href or .search) URLQuery is updated. URLQuery in turn updates the URLUtils implementing object's url's query.

[01:08:45.0000] <annevk>
DOMTokenList is going to work pretty much the same way, for those interested, and all other objects we're going to introduce (and have introduced, thinking of .style) that need to keep sync with some other object.

[01:10:28.0000] <annevk>
Can someone one-up Google Translate for me? https://twitter.com/kazuhito/status/274437377290817536

[01:12:29.0000] <darobin>
annevk: maybe MikeSmith?

[01:13:55.0000] <MikeSmith>
the last part just basically means, "I'm part of the WHATWG."

[01:14:03.0000] <MikeSmith>
well I assume that's the intended meaning

[01:14:19.0000] <MikeSmith>
literally it means "I am the WHATWG."

[01:14:28.0000] <MikeSmith>
the first part I have no idea

[01:14:42.0000] <MikeSmith>
it's some kind of idiom

[01:14:49.0000] <MikeSmith>
of which there are a lot in Japanese

[01:15:16.0000] <MikeSmith>
or at least it's not an expression I'm familiar with

[01:15:20.0000] <annevk>
yeah, Google says 'Tan ー "I is the WHATWG!!" Hikushi' which is not that great

[01:16:16.0000] <annevk>
was wondering whether it was something funny that could be retweeted from @WHATWG

[01:16:59.0000] <MikeSmith>
yeah

[01:17:03.0000] <MikeSmith>
that would be funny

[01:17:19.0000] <MikeSmith>
I have no idea what the context is for him having tweeted that

[01:17:28.0000] <MikeSmith>
but I know him

[01:17:36.0000] <MikeSmith>
his office is right down that street from my place

[01:17:48.0000] <MikeSmith>
he's Yakura-san's boss

[01:18:32.0000] <MikeSmith>
ah

[01:18:34.0000] <MikeSmith>
Hixie

[01:18:42.0000] <annevk>
ah yeah, I met him; we went out to ate those beans :-)

[01:18:50.0000] <MikeSmith>
ひくし is Hixies

[01:18:53.0000] <MikeSmith>
*Hixie

[01:19:03.0000] <MikeSmith>
ひくしーたん is Hixie-san

[01:19:09.0000] <MikeSmith>
maybe he's quoting Hixie?

[01:19:19.0000] <MikeSmith>
Hixie saying, I am the WHATWG?

[01:20:01.0000] <darobin>
as in "L'État, c'est moi

[01:20:04.0000] <annevk>
that would make sense I guess, https://twitter.com/stevefaulkner/status/274427815242391553

[01:20:05.0000] <darobin>
?

[01:20:36.0000] <annevk>
darobin: yeah

[01:21:15.0000] <darobin>
it would indeed be fun for you to RT it from @WHATWG :)

[01:21:34.0000] <MikeSmith>
annevk: ah, OK, yeah

[01:21:45.0000] <MikeSmith>
well, it's still funny to retweet it

[01:21:51.0000] <annevk>
darobin: but but but

[01:22:06.0000] <darobin>
do it do it do it!

[01:23:41.0000] <annevk>
okay why not, acknowledging dissent is good

[01:25:42.0000] <darobin>
I don't know if criticising the institution counts as dissent

[01:30:32.0000] <MikeSmith>
does criticizing Hixie amount to criticizing the institution?

[01:30:56.0000] <MikeSmith>
does criticizing the institution amount to criticizing Hixie?

[01:38:45.0000] <MikeSmith>
would be funny to follow it up by re-tweeting https://twitter.com/BrendanEich/status/273715922399805441

[01:38:52.0000] <darobin>
MikeSmith: I think that's the question that our Japanese friend is putting to the test

[01:39:08.0000] <MikeSmith>
yeah

[01:43:09.0000] <volkmar>
darobin: is there a way to declare an interface with respec without having the attributes + methods definition showing up?

[01:43:35.0000] <darobin>
volkmar: mmmm, maybe

[01:43:39.0000] <darobin>
display: none?

[01:43:40.0000] <darobin>
:)

[01:44:09.0000] <darobin>
give me a spare afternoon and I'll finish the new IDL support that's a lot nicer...

[01:48:48.0000] <volkmar>
darobin: I guess I could have a look at the generated HTML

[01:49:09.0000] <darobin>
if you feel so inclined, be my guest

[01:49:28.0000] <darobin>
I will be doing some maintenance to integrate patches and stuff on Monday

[01:49:56.0000] <volkmar>
darobin: oh, I will just have a look at what is generated to hide the part I don't want (if I can)

[01:55:40.0000] <marcosc>
in anolis... ;)

[01:55:50.0000] <marcosc>
just sayin'

[01:55:51.0000] <marcosc>
:)

[01:59:08.0000] <darobin>
or like marcosc says you could just write the spec by hand, no features -> no problems!

[01:59:47.0000] <marcosc>
/me stops trollin darobin :) 

[01:59:57.0000] <darobin>
just sayin'

[02:00:26.0000] <darobin>
reminds me of when Lachy was bitching about how it's a pain to generate the W3C boilerplate

[02:00:35.0000] <marcosc>
/me just bitter about <dl> IDL still ... should write a patch for that. 

[02:05:06.0000] <annevk>
might have used the wrong word, indeed

[02:18:01.0000] <annevk>
if we need to introduce a new XHR constructor for e.g. promises, we could call it Fetch maybe

[02:18:16.0000] <annevk>
and make Fetch define all the things

[02:28:09.0000] <annevk>
my GitHub client just fixed a bug where they didn't handle a space in the repository path, I guess it counts as a browser then

[03:29:46.0000] <annevk>
too late for s/ate/eat/?

[04:29:54.0000] <annevk>
I think I finally hit that point I've been working towards for the last year and a half or so. That where URLs, Encoding, and <form> submission collide.

[05:12:16.0000] <odinho>
annevk: That'd be a place for sugar api, doing these fetch things in a nicer way :]

[05:12:54.0000] <annevk>
yeah that too

[05:14:24.0000] <annevk>
(new Fetch({url:"lalaland"})).then(teehee, damnit)

[05:14:50.0000] <annevk>
(default for method would be GET)

[05:15:31.0000] <Ms2ger>
Oh dear, another API

[05:18:48.0000] <annevk>
dunno, just sketching

[05:40:12.0000] <volkmar>
annevk: Fetch could inherits from DOMRequest ^^

[05:40:26.0000] <annevk>
what is DOMRequest?

[05:40:37.0000] <volkmar>
hmmm

[05:41:11.0000] <volkmar>
annevk: https://mxr.mozilla.org/mozilla-central/source/dom/base/nsIDOMDOMRequest.idl?force=1

[05:41:15.0000] <volkmar>
just look at the first interface

[05:41:23.0000] <volkmar>
we use that a lot in our new Web APIs

[05:41:38.0000] <volkmar>
and with sicking, we are thinking of extending the API to make it promise-like

[05:41:44.0000] <volkmar>
it would have some advantages

[05:42:39.0000] <annevk>
volkmar: ah yeah, Fetch would work with whatever we end up doing for Promises

[05:43:15.0000] <annevk>
it seems everyone is designing a promise system

[05:43:27.0000] <annevk>
but not on any mailing lists

[05:44:57.0000] <odinho>
cue tantek?

[05:45:22.0000] <Ms2ger>
Email is a support forum

[05:46:10.0000] <volkmar>
annevk: we are not really designing anything

[05:46:14.0000] <volkmar>
annevk: I mean, except DOMRequest

[05:46:27.0000] <annevk>
looks like a design of sorts to me :)

[05:46:35.0000] <volkmar>
but it's hard to find a place for this little thing to live in

[05:46:55.0000] <volkmar>
annevk: I asked you some time ago if it could be added to DOMCore (or Ms2ger, maybe)

[05:46:58.0000] <volkmar>
and I got a no

[05:47:06.0000] <volkmar>
a full spec for it would be weird I believe

[05:47:09.0000] <Ms2ger>
Oh?

[05:47:20.0000] <volkmar>
Bas?

[05:47:22.0000] <annevk>
I don't recall that question either

[05:47:43.0000] <volkmar>
I've been told that because it's using EventHandler it is depending on HTML5, thus can't live in DOMCore

[05:47:58.0000] <annevk>
that makes sense

[05:48:06.0000] <annevk>
event queueing makes for a HTML dependency too

[05:48:13.0000] <annevk>
so HTML might be a logical place

[05:48:21.0000] <annevk>
since any spec with async stuff will need to depend on HTML anyway

[05:48:26.0000] <volkmar>
why?

[05:48:34.0000] <annevk>
event loop

[05:48:50.0000] <volkmar>
doesn't make much sense

[05:48:59.0000] <volkmar>
to have event loop defined there

[05:52:34.0000] <annevk>
sure, but we haven't found anyone to do that work elsewhere

[06:33:03.0000] <annevk>
so URL now defines application/x-www-form-urlencoded

[06:34:40.0000] <SimonSapin>
annevk: \o/

[06:37:11.0000] <annevk>
maybe I'm able to complete URLQuery today

[06:37:13.0000] <SimonSapin>
And another mega-email to show how Håkon and Bert are wrong about multicol.

[06:37:13.0000] <SimonSapin>
Sorry, I mean show how I disagree :)

[06:37:24.0000] <annevk>
SimonSapin: heh

[06:40:00.0000] <annevk>
btw, I think we should support constructing URLQuery from a string

[06:40:10.0000] <annevk>
if you're opposed, let me know

[06:40:44.0000] <annevk>
(you can seed it from a string already via .search so it only makes sense)

[06:47:43.0000] <zewt>
yeah, the "make a dummy URL just to make a URLQuery" thing is a pretty silly hack

[06:49:12.0000] <annevk>
well that was already gone

[06:49:50.0000] <annevk>
but shit is pretty complicated

[06:51:24.0000] <annevk>
the amount of encoding overrides going around in URL is also insane :/

[06:59:02.0000] <SimonSapin>
annevk: how do I get a account to edit wiki.whatwg.org?

[07:00:25.0000] <annevk>
SimonSapin: pm me your email and desired username

[07:09:35.0000] <SimonSapin>
annevk: URLs in non-relative schemes are only made of [scheme, scheme data, query, fragment] right?

[07:11:09.0000] <annevk>
yes

[07:11:48.0000] <SimonSapin>
annevk: 5.1 Writing seems to confuse relative/absolute URLs (that need a base URL or not) with URLs in a relative/non-relative scheme

[07:12:05.0000] <SimonSapin>
"An absolute URL is a scheme, followed by ":", followed by scheme data, optionally followed by "?" and a query.  "

[07:13:14.0000] <annevk>
scheme data is elaborated upon for relative schemes

[07:13:28.0000] <SimonSapin>
oh I missed that, sorry

[07:15:56.0000] <SimonSapin>
#url-units has a long list of code point ranges. What is excluded? control chars, %, lone surrogate pairs, private use, …?

[07:16:21.0000] <annevk>
non-characters

[07:16:28.0000] <annevk>
private use is in I think

[07:16:39.0000] <SimonSapin>
wouldn’t a "any code point NOT in the ranges …" definition be better?

[07:17:01.0000] <annevk>
you get about the same I believe

[07:17:04.0000] <annevk>
HTML has that

[07:17:37.0000] <annevk>
note that you don't have to deal with all those code units when parsing

[07:17:47.0000] <annevk>
because they'll be percent encoded

[07:18:29.0000] <SimonSapin>
my point is I’d like to know what is excluded and why

[07:19:30.0000] <SimonSapin>
I have no idea from memory why U+FDD0 is special

[07:29:00.0000] <annevk>
me neither

[07:29:27.0000] <annevk>
well actually, I believe Martin told me that's an application internal code point

[07:37:26.0000] <SimonSapin>
annevk: is an empty query different from no query once a URL is parsed?

[07:38:56.0000] <annevk>
yes

[07:39:12.0000] <annevk>
query == null -> "?"

[07:39:16.0000] <annevk>
euh oops

[07:39:29.0000] <annevk>
query == null -> ""; query == "" -> "?"

[07:39:36.0000] <SimonSapin>
ok

[07:39:56.0000] <annevk>
same for fragment

[07:47:55.0000] <SimonSapin>
hum, can I do nested lists in the wiki?

[07:48:41.0000] <SimonSapin>
ah, double stars

[07:55:41.0000] <hsivonen>
Whoa: http://stackoverflow.com/questions/13521554/xpath-in-internet-explorer-10-gone

[07:55:43.0000] <annevk>
the status field on http://wiki.whatwg.org/wiki/MetaExtensions should maybe be nuked, Hixie? it's kinda useless the way the tables are used; first is proposal, second is rejected proposals, third is crap

[07:58:50.0000] <hsivonen>
interesting solution: xhr.responseType = "msxml-document";

[08:02:04.0000] <zcorpan>
doesn't ie10 support xpath in one of the quirkier modes?

[08:05:37.0000] <SimonSapin>
annevk: does URL or something else have a "percent decode to bytes" algorithm? I think it would be the same as "percent decode", but without the first and last step

[08:05:46.0000] <SimonSapin>
it would be used for data:

[08:07:14.0000] <annevk>
SimonSapin: no, but I can add that to URL

[08:07:28.0000] <annevk>
SimonSapin: but please file a bug, I'm in the middle of the URLQuery mess

[08:07:33.0000] <SimonSapin>
ok

[08:42:52.0000] <SimonSapin>
annevk: wrote up http://wiki.whatwg.org/wiki/URL_schemes#data:_URLs with inline issues

[08:44:38.0000] <annevk>
cool

[08:53:19.0000] <dglazkov>
good morning, Whatwg!

[08:53:24.0000] <dglazkov>
odinho: time to go home

[08:54:04.0000] <dglazkov>
and feed wife/kids/dog/turtle/evil robot

[08:55:18.0000] <annevk>
http://url.spec.whatwg.org/#interface-urlquery booyah

[08:56:18.0000] <annevk>
writing the API bit was surprisingly simple once all the string munging became external to it

[08:56:33.0000] <odinho>
dglazkov: Okay! :D Actually, friday beer, but I did say I'd be down there before all the chocolate was eaten, so I'll go do that now then. Cheers!

[08:56:49.0000] <annevk>
hmm chocolate

[09:07:36.0000] <marcosc>
annevk: it's that crappy Freia (Kraft Foods) chocolate, so don't worry ... you are not missing out :)

[09:08:13.0000] <annevk>
marcosc: dunno man, I like that stuff

[09:08:49.0000] <marcosc>
annevk: ok ... I like Heineken

[09:08:53.0000] <marcosc>
:)

[09:09:07.0000] <annevk>
your loss really

[09:09:16.0000] <annevk>
mb

[09:09:17.0000] <annevk>
bjt

[09:09:22.0000] <annevk>
wut, but I see your point

[10:00:57.0000] <GPHemsley>
annevk: I've got a present for you: http://wiki.akosma.com/IPhone_URL_Schemes

[10:10:43.0000] <GPHemsley>
gavinc_: 2 of the 3 Ws stand for "World Wide". If the world doesn't blow up, there should be a server somewhere that is capable of picking up the slack if something goes wrong somewhere.

[10:16:33.0000] <gavinc_>
GPHemsley: Fair point.

[10:18:23.0000] <GPHemsley>
gavinc_: And, frankly, the 3rd W comes into play here, too. What is the Web but a series of interconnected points?

[10:19:04.0000] <GPHemsley>
Put them all together, and what do you get? A worldwide series of interconnected points... that completely disappears if MIT loses power.

[10:21:05.0000] <annevk>
GPHemsley: yeah, those don't matter much fortunately

[10:21:53.0000] <GPHemsley>
are you not dealing with tel:?

[10:22:05.0000] <GPHemsley>
sms:?

[10:22:06.0000] <annevk>
don't need to

[10:22:12.0000] <GPHemsley>
why not?

[10:22:28.0000] <annevk>
because they're just launching some kind of action

[10:23:07.0000] <GPHemsley>
So... any scheme that doesn't deal directly with the Web can do what it wants?

[10:25:15.0000] <annevk>
within the constraints of the URL syntax that is kinda how it works, yes

[10:26:02.0000] <GPHemsley>
I see

[10:26:26.0000] <GPHemsley>
so you were only dealing with the issues with URLs only insofar as they affect the Web?

[10:26:47.0000] <annevk>
hmm, not really

[10:26:52.0000] <annevk>
URL parsing affects everyone

[10:27:08.0000] <annevk>
URL schemes I was only interested in those that would affect the upcoming Fetch rewrite

[10:27:47.0000] <GPHemsley>
what about a URL like this? twinkle://message=text&url=http://foo&image=http://path.to/image.jpg

[10:27:50.0000] <annevk>
there's a big difference between URL parsing and URL scheme-specific processing

[10:28:19.0000] <annevk>
gotta go

[10:28:25.0000] <GPHemsley>
how convenient :P

[10:37:17.0000] <TabAtkins>
annevk: Promises are being worked on in tc39.  Ideally, DOM will wait on them finishing that work, or at least finishing enough of the API decisions that we can engrave them into the web.

[10:44:56.0000] <TabAtkins>
Based on what I can see at http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#embedding-custom-non-visible-data-with-the-data-*-attributes , it looks like el.dataset doesnt' have any setting behavior.

[10:45:20.0000] <TabAtkins>
Specifically, if you pull el.dataset off the element, then try to assign it to another element, behavior isn't defined?

[10:45:26.0000] <TabAtkins>
Am I right, or missing something?

[10:45:48.0000] <Hixie>
it's readonly, if that's what you mean

[10:45:55.0000] <TabAtkins>
That is what I mean, yes.

[10:46:00.0000] <TabAtkins>
Any reason for that?

[10:46:10.0000] <Hixie>
behaviour is defined, it does whatever you do when you assign a readonly attribute a value

[10:46:35.0000] <Hixie>
generally we don't support assigning objects like that from one to another element, but no reason beyond that that i know of

[10:46:42.0000] <Hixie>
generally if you wanted to do this you'd just clone the node

[10:46:55.0000] <TabAtkins>
My friend estelle apparently has a use-case for doing what I described.

[10:47:06.0000] <Hixie>
tell them to mail the list describing it :-)

[10:50:30.0000] <Hixie>
sweet, http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1944 reliably crashes chrome when you click the link

[10:51:20.0000] <Hixie>
safari, too

[11:17:26.0000] <Hixie>
hm, no darobin and no nessy

[11:17:55.0000] <Hixie>
anyone here follow the htmlwg commits closely enough to help me understand what patches have been committed and which haven't?

[11:19:21.0000] <Hixie>
r7534 seems to be in, but r7533 doesn't. I can't work out if that's intentional, if it's documented, or what.

[11:19:49.0000] <Hixie>
but there's like 15 branches and i've no idea what they are for

[11:19:51.0000] <Hixie>
so confused

[11:21:34.0000] <annevk>
TabAtkins: I don't really see how TC39 can work on them without having an event loop

[11:22:06.0000] <TabAtkins>
annevk: ???

[11:22:15.0000] <TabAtkins>
annevk: (I know the context is promises, I just want more elaboration.)

[11:22:58.0000] <annevk>
Promises are for asynchronous handling. Nothing in ECMAScript has that. That's all defined by HTML.

[11:39:28.0000] <Hixie>
ah, excellent, darobin

[11:40:09.0000] <Hixie>
darobin: can you help me understand what patches have been committed to the htmlwg branch(es) and which haven't? specifically, i'm trying to work out if r7533 is in. r7534 seems to be.

[11:40:37.0000] <Hixie>
darobin: and if it's not, i'm trying to work out if this is documented anywhere.

[11:53:18.0000] <annevk>
so what's a good name for an IDL attribute that turns a DOMString into a code point sequence and does not make it attractive for API designers to plaster all over?

[11:53:34.0000] <Hixie>
what interface is it on?

[11:53:42.0000] <annevk>
I initially thought [Unicode] DOMString but that might be copied quite enthusiastically

[11:53:54.0000] <Hixie>
oh you mean a webidl annotation thingy?

[11:53:56.0000] <annevk>
Hixie: all over URL, Encoding, and some of XHR

[11:54:05.0000] <Hixie>
not an actual idl attribute

[11:54:06.0000] <Hixie>
ok

[11:54:07.0000] <Hixie>
um

[11:54:09.0000] <Hixie>
hmm

[11:54:28.0000] <annevk>
the other one I had was [UTF] DOMString

[11:54:47.0000] <Hixie>
wait, what exactly does this do?

[11:54:53.0000] <Hixie>
aren't all DOMStrings code point sequences?

[11:55:38.0000] <annevk>
Hixie: it does http://dev.w3.org/2006/webapi/WebIDL/#dfn-obtain-unicode but without invoking that algorithm all over

[11:56:04.0000] <Hixie>
this is on getting? on setting?

[11:56:15.0000] <annevk>
setting

[11:56:39.0000] <Hixie>
so on setting, it cleans up the DOMString so that it's valid Unicode, not just potentially-invalid UTF-16?

[11:56:42.0000] <Hixie>
hmm

[11:57:05.0000] <annevk>
yeah, because once you start doing utf-8 operations on it, you kinda want that

[11:57:16.0000] <Hixie>
[SanitizeUnicodeForTransmissionOnSetting]

[11:57:52.0000] <annevk>
and then I'll typedef it as UTFString

[11:57:59.0000] <annevk>
because that makes the IDL unreadable

[11:58:08.0000] <Hixie>
making the idl unreadable was the point, i thought

[11:58:14.0000] <Hixie>
you wanted people not to use it

[11:58:41.0000] <annevk>
yeah, but I also want developers to be able to look at the IDL normally, hmm

[11:58:51.0000] <annevk>
I guess one of those is not going to work

[11:59:37.0000] <Hixie>
the cost of the three developers whe make it to the spec having to squint a bit is probably lower than the cost of the 5 spec writers who see it and use it

[12:00:04.0000] <Hixie>
assuming you mean web devs, not UA devs

[12:00:35.0000] <MikeSmith>
Hixie: about the commits, I don't follow them closely, but as far as I can tell neither r7534 nor r7533 are in. https://github.com/w3c/html/commits/master The latest change pulled into that branch seems to be r7529

[12:01:36.0000] <Hixie>
oh i got confused between ..34 and ..29

[12:01:44.0000] <Hixie>
that explains it

[12:01:47.0000] <MikeSmith>
yeah

[12:01:56.0000] <MikeSmith>
"Clarify" vs "Clarity"

[12:02:02.0000] <Hixie>
and nearly the same patch

[12:02:28.0000] <Hixie>
ok so where's r7528?

[12:02:56.0000] <MikeSmith>
dunno but maybe Silvia did not pull it

[12:03:15.0000] <Hixie>
is that documented anywhere?

[12:03:27.0000] <Hixie>
it's not a controversial one, i mean, it's one she wanted...

[12:03:34.0000] <Hixie>
i'm so confused

[12:04:04.0000] <MikeSmith>
need to ask Silvia I guess :)

[12:04:31.0000] <MikeSmith>
there's basically no discussion ahead of time about what changes to pull

[12:04:51.0000] <MikeSmith>
Silvia sends a summary message every week listing what she's pulled

[12:05:18.0000] <MikeSmith>
afterwards

[12:05:24.0000] <Hixie>
yeah it's kinda ridiculous that the supposedly most public group has two lists so secret not even members can see them, and that's where all their decisions happen

[12:57:26.0000] <annevk>
Hixie: you use both "file name" and "filename"

[12:58:03.0000] <annevk>
(my problem is searching for instances)

[12:58:28.0000] <Hixie>
that's plausible

[12:58:33.0000] <Hixie>
file a bug if you can't find a pattern :-)

[12:58:43.0000] <Hixie>
/me figures out why his f3 key is acting weird

[12:58:57.0000] <Hixie>
i seem to have somehow bound it to the "rewind" key

[12:59:33.0000] <Hixie>
i wonder how and how to fix it

[13:00:53.0000] <annevk>
I first thought the pattern was plural, but it appears to be mood of the day instead

[13:01:42.0000] <Hixie>
nessy! maybe you can answer the question. i've been trying to work out if r7528 is in the htmlwg spec, and if not, if that's documented anywhere (r7529 seems to be in)

[13:05:47.0000] <annevk>
Hixie: btw http://url.spec.whatwg.org/#application/x-www-form-urlencoded

[13:18:08.0000] <Hixie>
annevk: does the encoding only take effect for values after the _charset_ is seen? and you can set multiple _charset_s?

[13:18:19.0000] <Hixie>
annevk: i would have thought the first _charset_ would affect all values

[13:19:17.0000] <annevk>
Hixie: thanks, will fix

[13:21:27.0000] <Hixie>
annevk: my algorithm had that right already dude :-P

[13:22:08.0000] <annevk>
Hixie: your algorithm didn't skip empty strings (e.g. ?test&&test) dude :-P

[13:22:45.0000] <annevk>
but yes, I should have copy-and-pasted-and-fixed better :)

[13:23:13.0000] <Hixie>
you also seem to have lost isindex support

[13:24:22.0000] <annevk>
yeah, I thought the idea was HTML would handle that?

[13:24:22.0000] <Hixie>
my algorithm seems to handle && fine

[13:24:34.0000] <Hixie>
in parsing?

[13:25:24.0000] <annevk>
hmm yeah, maybe for parsing it should be handled here

[13:25:50.0000] <Hixie>
also you don't define "splitting"

[13:26:56.0000] <Hixie>
interesting, your definition of "percent decode" does a lot more than just decoding %s

[13:27:11.0000] <TabAtkins>
Where is the handling of isindex actually explained?

[13:27:31.0000] <TabAtkins>
/me looked in the parser and in the obsolete features section.

[13:27:34.0000] <Hixie>
TabAtkins: in about five places in HTML, currently, just search for "isindex", you'll find them all

[13:27:48.0000] <TabAtkins>
Ugh, I've gotta load single-page then. ;_;

[13:27:53.0000] <Hixie>
yes

[13:28:17.0000] <Hixie>
google-provided hardware and software handle the single-page fine. :-P

[13:28:37.0000] <TabAtkins>
Yeah yeah, it still takes about 5s to load the page.

[13:28:44.0000] <Hixie>
i just leave it open

[13:29:10.0000] <Hixie>
annevk: for serialisation, we said i'd just keep the html spec's, right?

[13:29:11.0000] <annevk>
Hixie: so your preference is that && results in a pair whose name and value are both empty?

[13:29:14.0000] <SimonSapin>
loading single-page is one of the reasons I might start up chromium

[13:29:24.0000] <Hixie>
annevk: i don't really have a preference, but that's what the html spec does

[13:29:41.0000] <Hixie>
annevk: depends what problem we're trying to solve, really

[13:29:45.0000] <annevk>
Hixie: I think the idea was for serialization to reuse the generic part and fill in some specific bits

[13:30:08.0000] <annevk>
Hixie: so HTML would do some pre-processing on the name-value pairs it supplies

[13:33:16.0000] <Hixie>
annevk: your algorithm does encoding on a per-character basis

[13:33:22.0000] <Hixie>
annevk: that doesn't work for stateful encodings.

[13:34:21.0000] <annevk>
it does work, but it's not what impls do

[13:34:42.0000] <Hixie>
well it returns strings that are way longer than ideal

[13:35:20.0000] <Hixie>
also your algorithm sometimes results in strings that contain %20 instead of +

[13:35:36.0000] <Hixie>
(if the encoding encodes a character to a stateful string that contains 0x20)

[13:36:16.0000] <Hixie>
i'm starting to have the same concerns abarth mentioned the other day :-P

[13:36:48.0000] <annevk>
no kidding

[13:36:55.0000] <annevk>
but thanks for the feedback

[13:36:59.0000] <Hixie>
:-:)

[13:37:00.0000] <Hixie>
er

[13:37:01.0000] <Hixie>
:-) even

[13:37:13.0000] <Hixie>
right, back to working out poster frames

[14:03:20.0000] <SimonSapin>
"If you look at Microformats just right, it really is RDF." 2008, http://standardssuck.org/grddl-bridging-the-interwebs

[14:04:09.0000] <Hixie>
everything is rdf if you "look at it right", that's what the RDF people think makes RDF so powerful, and is what I think makes RDF so pointless :-)

[14:04:45.0000] <SimonSapin>
"GRDDL is the red pill for the web"

[14:06:40.0000] <TabAtkins>
MikeSmith: Could you add the Display module to the CSS component in bugzilla?

[14:07:01.0000] <MikeSmith>
sure

[14:07:58.0000] <MikeSmith>
TabAtkins: put you at the default assignee? Or somebody else?

[14:10:40.0000] <stevefaulkner>
MikeSmith: pinged u about some advice

[14:10:49.0000] <MikeSmith>
yup

[14:11:36.0000] <stevefaulkner>
did you get my mail?

[14:12:04.0000] <TabAtkins>
MikeSmith: Me, please.

[14:17:45.0000] <Hixie>
jgraham: yt?

[14:18:15.0000] <TabAtkins>
Hixie: Note that you don't need to report the intrinsic width/height as 300/150.  The sizing algorithm in CSS fills that in automatically.

[14:18:57.0000] <Hixie>
ah, cool. you got a link to that text? i'll file a bug on me to remove any mentions of those dimensions where possible

[14:19:47.0000] <TabAtkins>
http://dev.w3.org/csswg/css3-images/#default-sizing

[14:19:55.0000] <Hixie>
ta

[14:26:10.0000] <Hixie>
gecko spins the event loop during the onbeforeunload prompt? what?

[14:26:37.0000] <Hixie>
meanwhile opera just ignores my onbeforeunload entirely

[14:26:50.0000] <Hixie>
ok. zero interop.

[14:26:56.0000] <Hixie>
guess i can do what i want then!

[14:27:03.0000] <Hixie>
-_-

[14:43:35.0000] <Hixie>
ok i need a test where the page takes a long time to load, has an onload handler, and a link.

[14:43:39.0000] <Hixie>
should be easy enough...

[14:56:01.0000] <TabAtkins>
annevk: What do you think about a two-arg has(), same as delete()?

[14:57:31.0000] <Hixie>
ok seriously

[14:57:39.0000] <Hixie>
how do i dispable compression on apache via .htaccess files

[14:57:53.0000] <Hixie>
disable, even

[14:58:08.0000] <Hixie>
oh wait, maybe this isn't compression that's screwing me

[14:58:11.0000] <TabAtkins>
RewriteRule . - [E=no-gzip:1]

[14:58:16.0000] <TabAtkins>
First result in google for me?

[14:58:17.0000] <Hixie>
yeah i have that already

[14:58:53.0000] <TabAtkins>
http://stackoverflow.com/questions/3414243/how-to-disable-compression-in-apache-on-some-response-header-from-mod-jk-proxied

[14:59:03.0000] <TabAtkins>
First answer, that line didn't work for him either.

[14:59:03.0000] <Hixie>
also tried that

[14:59:19.0000] <TabAtkins>
unsetting Accept-Encoding?

[14:59:22.0000] <Hixie>
also tried:

[14:59:23.0000] <Hixie>
<IfModule mod_gzip.c>

[14:59:23.0000] <Hixie>
mod_gzip_on No

[14:59:23.0000] <Hixie>
</IfModule>

[14:59:37.0000] <TabAtkins>
Read the rest of the first answer.

[14:59:39.0000] <Hixie>
i don't think i can unset that from .htaccess

[15:00:09.0000] <TabAtkins>
Dude, *read the answer*. There's an htaccess line for doing so right in it.

[15:01:20.0000] <Hixie>
http://damowmow.com/playground/demos/navigation/dot-htaccess is what i've tried, which as far as i can tell is everything from that page

[15:01:32.0000] <Hixie>
(and every other page from a number of other google queries i did)

[15:01:40.0000] <TabAtkins>
Okay, that's everything I've seen.

[15:01:46.0000] <TabAtkins>
Are you outputting from PHP?

[15:01:49.0000] <Hixie>
perl

[15:01:53.0000] <Hixie>
and i have $| = 1

[15:01:53.0000] <TabAtkins>
Then no clue.

[15:02:02.0000] <TabAtkins>
(PHP has some output encoding you can turn off too.)

[15:02:28.0000] <jsbell>
sicking: ping?

[15:02:48.0000] <jsbell>
sicking: just curious re: Arthur's mail about moving the IDB spec along

[15:03:15.0000] <Hixie>
TabAtkins: k

[15:03:37.0000] <Hixie>
TabAtkins: btw "*read the answer*" isn't helpful when i found and read the answer long before i asked here

[15:04:34.0000] <TabAtkins>
Hixie: You were telling me you'd already done the things in the answer, but only describing precisely the things that the answer said didn't work, and not mentioning the line the answer said *did* work, which was why I pointed you to it in the first place. ^_^

[15:05:13.0000] <Hixie>
i only said "also tried that"

[15:05:19.0000] <Hixie>
meaning that page

[15:06:03.0000] <TabAtkins>
Okay, that was unclear.  It was muddled further when you said "i don't think i can unset that from .htaccess", when the answer specifically provides an htaccess line for unsetting that. ^_^

[15:06:22.0000] <TabAtkins>
It sounded a lot like you had just skimmed the page and missed that last part.

[15:06:33.0000] <Hixie>
no it doesn't, it provides an httpd.conf line for setting that

[15:06:39.0000] <Hixie>
VirtualHost only appears in httpd.conf

[15:06:59.0000] <Hixie>
i'm fine with you not being able to help, just a bit offended that you just assume i don't know how to read :-P

[15:07:14.0000] <TabAtkins>
Oh, I forgot that VirtualHost is only settable in httpd.conf

[15:07:38.0000] <Hixie>
seriously though, wtf apach

[15:07:40.0000] <Hixie>
e

[15:07:47.0000] <TabAtkins>
Hixie: I was as surprised at your apparent lack of ability as you are offended. ^_^

[15:07:53.0000] <Hixie>
:-P

[15:08:43.0000] <annevk>
TabAtkins: yeah, can do, I was actually wondering if we might be able to get away with not having the two-arg delete()

[15:08:43.0000] <Hixie>
ok so it looks like the problem isn't compression, apache is just buffering stuff up for reasons i cannot phathom

[15:09:44.0000] <annevk>
TabAtkins: we can always add, not so much remove

[15:10:23.0000] <TabAtkins>
annevk: Sure.  Feel free to simplify for now, and only add the absolute minimum of MultiMap features.

[15:10:42.0000] <TabAtkins>
annevk: I'm writing an email to es-discuss right now laying out our conclusions and seeing if they're okay.

[15:10:50.0000] <annevk>
TabAtkins: is MultiMap ordered btw?

[15:10:58.0000] <TabAtkins>
Map is ordered, so yes.

[15:11:15.0000] <annevk>
oh, Map is ordereD?

[15:11:16.0000] <TabAtkins>
(It was that, or require randomization, and people wouldn't bite that bullet.)

[15:11:24.0000] <annevk>
interesting

[15:11:28.0000] <TabAtkins>
(Go requires its map iterators to randomize.)

[15:11:55.0000] <annevk>
because otherwise developers start depending on implementation order?

[15:12:05.0000] <TabAtkins>
If you don't randomize, you're just speccing it as de factor (and non-interoperably) ordered, anyway.

[15:12:13.0000] <TabAtkins>
s/factor/facto/

[15:13:18.0000] <TabAtkins>
(Or rather, Go's map iterators start from a random *position*. I don't think it specs the actual order, but impl-order should be less dangerous if you can't depend on the starting position.)

[15:13:40.0000] <annevk>
i'm removing two-arg delete right now

[15:13:44.0000] <TabAtkins>
kk

[15:13:47.0000] <annevk>
so TC39 can look at the simplified thing

[15:14:07.0000] <Hixie>
ok wtf apache.

[15:14:29.0000] <Hixie>
surely it can't be buffering _megabytes_ of data

[15:14:44.0000] <TabAtkins>
I fail to see why you find that surprising.

[15:14:56.0000] <TabAtkins>
Buffers and huge and everywhere.

[15:15:07.0000] <TabAtkins>
s/Buffers and/Buffers are/

[15:15:34.0000] <Hixie>
well mainly i find it surprising because the buffering extension is optional and defaults to 128KB and doesn't seem to be installed

[15:15:44.0000] <TabAtkins>
Hahaha

[15:17:42.0000] <Hixie>
also because none of the apache processes are as big as the amount of data i've output

[15:17:56.0000] <tantek>
/me scrolls up to see SimonSapin's quoting something from http://standardssuck.org

[15:18:17.0000] <SimonSapin>
yeah, just found out about it

[15:18:23.0000] <tantek>
n.m. that post was from 4+ years ago!

[15:18:27.0000] <tantek>
"August 4, 2008"

[15:18:29.0000] <SimonSapin>
indeed

[15:18:56.0000] <Hixie>
oooh, it _is_ caching

[15:18:58.0000] <tantek>
GRDDL was horribly impractical, needed XSLT to work etc.

[15:19:07.0000] <Hixie>
just one of my apache processes just reached like 100mb

[15:19:13.0000] <Hixie>
and rising

[15:19:25.0000] <Hixie>
that definitely seems suboptimal

[15:19:32.0000] <tantek>
SimonSapin, now it's even simpler for the RDF folks get an RDF-like-view of microformats: http://microformats.org/wiki/microformats2-parsing-rdf

[15:19:42.0000] <tantek>
(if that kind of thing floats your boat)

[15:20:48.0000] <SimonSapin>
tantek: thanks for the link. I’m not really using/implementing any of these, it was more anecdotal. Seemed appropriate given recent discussions

[15:21:24.0000] <SimonSapin>
I mean, funny that the same things were being said 4 years (aka. forever) ago.

[15:22:28.0000] <TabAtkins>
annevk: What happens if you do "u.set('foo', 'bar'); u.append('foo', 'bar');"?  Set twice?

[15:22:52.0000] <tantek>
SimonSapin, yes, such conversations will continue until sufficient conversion tools exist to make the conversations pointless

[15:22:54.0000] <TabAtkins>
I guess you have to allow that, since you can create a query with "?foo=bar&foo=bar", I think.

[15:23:03.0000] <annevk>
yeah that works

[15:23:10.0000] <annevk>
append is just append, nothing special

[15:23:10.0000] <tantek>
And to that extent, we are making progress.

[15:23:29.0000] <TabAtkins>
Kk, I was just wondering if "u.delete('foo', 'bar');" would then remove both of them, or the first one, or what.

[15:23:57.0000] <annevk>
the definition I had would kill both

[15:24:13.0000] <SimonSapin>
annevk: any idea around of doing standardssuck.org again? :)

[15:24:22.0000] <TabAtkins>
That's fine with me.  Just wondering if there was an obvious answer, for my email.

[15:24:26.0000] <tantek>
microformats2 parses to pretty much the same JSON that microdata does, but is less markup for authors (and fewer attributes to learn which does what etc.). once there's implementations of such conversion tools for the RDF folks, they can just use that, rather than asking authors to bend over backwards with ugly markup.

[15:25:06.0000] <annevk>
TabAtkins: yeah dunno, depends on what you expect I guess, maybe some of these system guarantee name-value pair uniqueness? not sure what the benefit of that would be though

[15:25:09.0000] <tantek>
annevk - you should interview yourself for standardssuck.org on the subject of licenses and (not) being an invited expert for W3C. just splice together video of you asking and answering the questions

[15:25:15.0000] <tantek>
e.g. sitting in opposing chairs

[15:25:25.0000] <annevk>
heh

[15:25:43.0000] <TabAtkins>
That would be funny. ^^_

[15:26:16.0000] <SimonSapin>
definitely

[15:26:24.0000] <tantek>
there aren't enough funny/snarky posts (and video at that) about licensing issues at W3C

[15:45:27.0000] <sicking>
jsbell: ugh, yeah, i don't think that i realistically will be doing any IDB editing this year :(

[15:45:53.0000] <jsbell>
sicking: this year = 2012 or this year = next 12 months? Wondering how we can help.

[15:46:05.0000] <sicking>
2012 :)

[15:46:15.0000] <sicking>
jsbell: if you want to help editing that would rock

[15:46:28.0000] <sicking>
jsbell: the big task is to integrate the latest respec

[15:46:41.0000] <sicking>
jsbell: that way we can fix up a lot of the webidl, which will tighten things up a lot

[15:48:38.0000] <jsbell>
sicking: not sure if I'll have cycles over the next few weeks either, but if you can send me pointers maybe I can take a look (I haven't touched one of these specs before)

[15:59:30.0000] <sicking>
jsbell: cool, will do

