2022-08-01
[05:02:25.0570] <naugtur>
When I need to create a mental model of something, it helps to recreate it in a medium I can look at all at once. So I did:
https://gist.github.com/naugtur/daf2aaf415e03e6c3ae5030e06f7b20e
This is an attempt to visualize the change in Layer 0 refactoring. 


[05:03:55.0644] <naugtur>
Having done that, I compared with something I tried to model earlier.

I compared the Layer0 refactor with the old refactor writeup from Mark Miller (https://github.com/erights/tc39pr-refactor-ModuleRecord) and the most significant difference is:
```
We separate into a distinct ModuleInitialization object the bookkeeping needed to guide module instantiation, linking, initialization, etc. Thus, once the initialization process completes, this bookkeeping state is no longer present. This helps us reason about post-initialization state separately.
```
Which was introduced to make CyclicModuleRecord cleaner. I think it could also remove the need for bidirectional reference between Module and SourceTextModuleRecord if introduced to Layer 0 refactor. 

[11:35:54.0341] <Kris Kowal>
yulia littledan Do we have a convener for Module Harmony tomorrow?

[11:37:15.0426] <littledan>
I'm happy to run the meeting and take notes. Is anything more needed as part of "convening" it?

[11:40:38.0413] <Kris Kowal>
Not to my knowledge. I‚Äôve started proposing topics on the agenda https://docs.google.com/document/d/1CD5lIBZLl24XBWbQhokqBdt4Zl7wPAcFJKJrgePr9HU/edit#

[11:57:52.0179] <Kris Kowal>
Also, I did a recorded reprise of my talk at plenary for anyone who missed that. https://youtu.be/NluxPr6eFVk

[13:16:34.0945] <Kris Kowal>
* Also, recorded a reprise of my talk at plenary for anyone who missed that. https://youtu.be/NluxPr6eFVk

[16:57:31.0163] <Kris Kowal>
Aside: I want to write the phrase ‚Äúlink and load‚Äù even though the words are clearly in the wrong order.


2022-08-02
[05:02:26.0943] <Jack Works>
üòÜ

[09:00:17.0145] <Kris Kowal>
I‚Äôll be on the call shortly

[09:02:40.0240] <Luca Casonato>
is anyone in the call that could let me in?

[10:42:14.0625] <yulia>
sorry for coming across so strong. My opinion is not so intense. It was largely due to the time constraint

[10:42:42.0819] <littledan>
it's fine, I was also probably talking too much that meeting and apologize for that

[10:43:09.0150] <Kris Kowal>
We‚Äôre in agreement that the syntax should be thoroughly discussed.

[10:55:59.0282] <Kris Kowal>
> <@jackworks:matrix.org> sent an image.

What‚Äôs this? Looks like the future.

[11:03:52.0283] <mkubilayk>
I do sympathize with yulia's point of `import module` potentially being confusing to a regular developer, who would naturally think that they have always been importing "modules" but now there is this thing called `import module` that does something different. 

[11:05:16.0243] <mkubilayk>
Separately, I really like the idea of building a topology of the ongoing proposals and similarly a capability graph. I think they would be massively helpful to anyone like me who's getting into this space.

[11:08:38.0222] <Kris Kowal>
Module is one of _those words_. Mark Miller insists that nothing should be called _module_ because so many things could be called modules when you strip off the qualifiers.

[11:08:53.0850] <Kris Kowal>
I mean one of ‚Äúthose words‚Äù which is the category including words like _test_.

