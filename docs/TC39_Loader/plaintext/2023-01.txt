2023-01-03
[00:05:22.0699] <nicolo-ribaudo>
I will unfortunately skip the call today, I'll be traveling at that time. See you in two weeks!

[00:54:12.0578] <Mathieu Hofman>
@annevk wrote in General:
> yulia | sick:  littledan:  I could make the Module Loading call tonight if that's helpful, please lmk
https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$oeD0yH7tagpCoRrR4gbgusb0fzM1ydOzWLIasu1T2ng?via=matrix.org&via=mozilla.org&via=igalia.com

[04:52:37.0102] <Luca Casonato>
> <@nicolo-ribaudo:matrix.org> I will unfortunately skip the call today, I'll be traveling at that time. See you in two weeks!

Me too!

[06:47:49.0288] <littledan>
Let's declare this time cancelled, if Yulia is also sick

[06:47:58.0400] <littledan>
also let's invite Anne tot his room

[08:19:27.0746] <Jack Works>
Do we have an agenda today 

[09:01:11.0009] <Kris Kowal>
We do not. I concur with the overall sentiment. We’ll convene in two weeks. I’ll invite Anne to this room.

[09:02:42.0966] <Jack Works>
Ok (btw I'm also on a sick leave until Jan 16)

[09:03:03.0946] <Jack Works>
* Ok (btw I'm also on a sick leave until Jan 16)

[09:05:13.0895] <Kris Kowal>
For agenda building for N*2 weeks from now, I’d like for us to plan to meet with bakkot to improve our understanding of the feedback from the previous plenary. That may be an opportunity to prepare and dry-run a module harmony presentation-of-presentations.

[09:06:02.0440] <Kris Kowal>
I still am on the hook to refactor the compartments proposal into epic-module-harmony and proposal-module-constructor etc.

[09:19:23.0229] <Kris Kowal>
Until then, @bakkot, your feedback from plenary, if memory serves is, “no new path to eval”, and when we convene again, we are going to want to break that down and examine whether `import(new Module(new ModuleSource(text)))` qualifies as a new path to eval in the sense that you mean, and whether it’s fatal given the mitigations we have in mind. Not looking to dig in now, since we’ve got a lot of folks away, but I’d like to prime the pump for the next meeting (or a meeting thereafter).

[09:20:15.0414] <littledan>
I also nominate following up on the import assertions design discussion, as an agenda item next fortnight. And I nominate peetk and nicolo-ribaudo to lead that discussion :)

[09:20:23.0893] <Kris Kowal>
We also have a standing invitation to give @annevk the floor to discuss the next steps for import assertions.

[09:21:32.0044] <littledan>
> <@kriskowal:matrix.org> We also have a standing invitation to give @annevk the floor to discuss the next steps for import assertions.

I'd propose that we organize that like, annevk recaps his understanding of the problem we need to solve, then nicolo-ribaudo / peetk outline the possible solution we've been discussing, then annevk shares thoughts

[09:22:09.0440] <Kris Kowal>
@annevk are you available +1 fortnight?

[09:23:27.0076] <Kris Kowal>
Also, thank you littledan, I’m ecstatic to find company in which biweekly isn’t a word.

[10:26:30.0385] <bakkot>
> <@kriskowal:matrix.org> Until then, @bakkot, your feedback from plenary, if memory serves is, “no new path to eval”, and when we convene again, we are going to want to break that down and examine whether `import(new Module(new ModuleSource(text)))` qualifies as a new path to eval in the sense that you mean, and whether it’s fatal given the mitigations we have in mind. Not looking to dig in now, since we’ve got a lot of folks away, but I’d like to prime the pump for the next meeting (or a meeting thereafter).

To be precise, I'm not dead set against having a new path to `eval` - I would just want there to be a very strong reason for it, which I haven't heard yet.

[10:39:01.0634] <annevk>
Kris Kowal: yeah that should work

[10:39:33.0196] <littledan>
> <@bakkot:matrix.org> To be precise, I'm not dead set against having a new path to `eval` - I would just want there to be a very strong reason for it, which I haven't heard yet.

I think the decision about whether we expose a ModuleSource constructor which takes a string argument is extremely separable from everything else. We've heard bakkot say he doesn't want it, ljharb say he wants it, and others seem OK multiple ways. I don't think the decision here will affect any other part of the APIs we've been discussing, and I think we have a very clear shared understanding of what it would do if it does exist.

[10:42:35.0222] <littledan>
(so, I think it should be treated as a post-Stage 2, pre-Stage 3 decision, having been fully scoped out)

[10:44:41.0399] <littledan>
(still fine to hear out bakkot more, but I think he was plenty clear in plenary?)

