2022-10-11
[08:39:12.0172] <nicolo-ribaudo>
Modules call in 20 minutes!

[09:02:23.0534] <Kris Kowal>
I‚Äôm in the lobby ü•§üçø

[09:05:19.0205] <nicolo-ribaudo>
Same

[11:17:16.0555] <shu>
i've copied the transcript into the agenda doc

[11:17:26.0174] <shu>
it seems more nonsense-y than last time


2022-10-12
[21:47:52.0806] <Kris Kowal>
I‚Äôve posted an update of the First-class Module/ModuleSource layer explainer to reflect Caridy‚Äôs spec text https://github.com/tc39/proposal-compartments/pull/82

[21:48:01.0763] <Kris Kowal>
 * I‚Äôve posted an update of the First-class Module/ModuleSource layer explainer to reflect Caridy‚Äôs spec text https://github.com/tc39/proposal-compartments/pull/82

[07:04:21.0742] <mkubilayk>
is there a shared calendar event for the modules call or everyone managing their own? if there is a shared one, can i get an invite please? 

[07:05:01.0761] <nicolo-ribaudo>
It's on the tc39 events calendar, let me find the link

[16:42:28.0885] <Kris Kowal>
I wanted to say ‚Äúhas it gone from comic to tragic?‚Äù but on closer inspection, this has some strong Yeats energy.

[16:42:41.0234] <Kris Kowal>
> <@shuyuguo:matrix.org> it seems more nonsense-y than last time

 * I wanted to say ‚Äúhas it gone from comic to tragic?‚Äù but on closer inspection, this has some strong Yeats energy.


2022-10-17
[16:01:32.0800] <Kris Kowal>
Updated explainer for Module and ModuleSource constructors, Layer 0 https://github.com/tc39/proposal-compartments/blob/efddb65a626f99aa15ee8f15cee64bcb6f735679/0-module-and-module-source.md#first-class-module-and-modulesource


2022-10-21
[05:14:51.0107] <nicolo-ribaudo>
I opened https://github.com/tc39/proposal-compartments/pull/83 to adapt layer 0 on top of the host hooks refactor 


2022-10-24
[23:46:11.0950] <Jack Works>
https://www.npmjs.com/package/@masknet/compartment

Implements `Module` and `Evaluator` that follows the latest related spec

[23:46:21.0644] <Jack Works>
welcome to use!


2022-10-25
[07:30:08.0858] <Kris Kowal>
I plan to attend the Module Harmony call today, but will not be able to speak due to a very temporary but inconvenient illness.

[07:33:37.0184] <Kris Kowal>
I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don‚Äôt have strong feelings about coupling with Module Blocks (I think Nicol√≤ has done good work keeping the proposals loosely coupled) but I do share @ljharb‚Äôs opinion that it would be _exceedingly weird_ if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws `Module` constructor indefinitely.

