2021-11-10
[11:09:33.0001] <Jack Works>
About document.all.

Is it possible to remove that special behavior?
I know it has a high usage rate but high usage rate doesn't mean the website is likely to be broken if we correct it's behavior.

It have benefits to remove them for both implementation and the spec editor.

[11:10:24.0523] <Jack Works>
Another question, Promise has a similar "species" behavior. Does that creates implementation bugs too? 

[11:11:02.0127] <shu>
could someone link me the notes doc

[11:11:04.0219] <shu>
in a PM

[11:36:49.0485] <Jack Works>
Ah and also. Since Array species creates bugs, is it possible to fully throw code using this feature to the slow path with no optimization? I think it's ok because the usage of species is low

[11:57:23.0134] <Granville Schmidt>
> <@shuyuguo:matrix.org> could someone link me the notes doc

https://docs.google.com/document/d/1l7mnjbRCAAM2qrTRxgiHNL7pI2Zko3mIXpcwrTF_txs/edit?usp=sharing

[12:50:39.0227] <shu>
thank you

[13:42:01.0952] <ljharb>
no, as i recall it was explicitly added to the JS spec _because_ it was impossible to remove and HTML didn't want to continue the willful violation forever

[13:42:09.0193] <ljharb>
 * no, as i recall it was explicitly added to the JS spec _because_ it was impossible to remove and HTML didn't want to continue the willful violation forever


2021-11-11
[18:49:03.0284] <Mathieu Hofman>
> <@gramidt:matrix.org> https://docs.google.com/document/d/1l7mnjbRCAAM2qrTRxgiHNL7pI2Zko3mIXpcwrTF_txs/edit?usp=sharing

FYI, the notes haven't be reviewed yet, and link to the full transcript, and this channel is public

[19:16:50.0531] <Jack Works>
> <@ljharb:matrix.org> no, as i recall it was explicitly added to the JS spec _because_ it was impossible to remove and HTML didn't want to continue the willful violation forever

I'm wondering how many websites will be broken exactly if we remove that special behavior

[19:45:36.0012] <ljharb>
Good question, but itâ€™s moot if browsers are unwilling to either measure or take the risk - and itâ€™s not within tc39â€™s power to mandate either.

[20:18:32.0571] <Jack Works>
ðŸ¤•

[08:08:18.0916] <Granville Schmidt>
> <@shuyuguo:matrix.org> could someone link me the notes doc

 * REDACTED

[08:08:59.0547] <Granville Schmidt>
> <@mhofman:matrix.org> FYI, the notes haven't be reviewed yet, and link to the full transcript, and this channel is public

I removed it until the notes are updated based on the transcript and they have been reviewed.

[09:30:25.0009] <Granville Schmidt>
Team - I have verified that the 8x8 supports transcription and seems to work well from my limited test. I'm able to create my own meeting under /tc39/g.schmidt, but I'm researching to see if it's possible to have /tc39/tg3 as a permanent meeting space. 

[09:33:19.0326] <Jack Works>
https://github.com/tc39/proposal-limited-arraybuffer/pull/13/
Hi please review this please thanks! This new design has been simplified to reduce the branch diverging on hot path

[09:34:13.0745] <Jack Works>
And I think it's worth to add, but I need some feedback so I can iterate on the design. Thanks! 

[13:30:18.0251] <Granville Schmidt>
I'm unclear from our meeting yesterday. How are we moving forward with security reviews during the proposal cycle?

[14:44:42.0861] <Granville Schmidt>
 * I'm unclear from our meeting yesterday. How are we moving forward with security reviews during the proposal cycle?

I know we discussed a possible review at Stage 3. Is this our preferred option? Should we add a review sooner? What are we thinking this review will look like? 

Once we have a general idea, we can turn it into a more formal proposal to TG1. 

[14:49:23.0784] <Mathieu Hofman>
I doubt a review before stage 3 would have all the information needed. My understanding from the conversation yesterday was that some of the security concerns can come from non obvious implementation challenges, and implementations only happen at stage 3. Of course there can be security concerns with the design of the API itself, which should be addressed at earlier stages, but I suppose that can be tackled the same way it is currently: members of this group paying attention during proposal presentations?

[14:50:07.0854] <shu>
there are rules of thumb we can develop to surface some implementation complexity concerns before stage 3

[14:50:23.0211] <shu>
questions like "does this add more user code hooks than is needed"

[14:50:28.0002] <shu>
"do we need these user hooks"

[14:50:33.0673] <shu>
"what's up with these user observable hooks"

[14:51:05.0024] <Mathieu Hofman>
That sounds more like design guidelines for new APIs, right ?

[14:51:42.0105] <shu>
yes, but applicable in early stage reviews, no?

[14:51:49.0719] <Mathieu Hofman>
Sure

[14:53:29.0276] <Mathieu Hofman>
I'm wondering how much we can learn from WHATWG / W3C, e.g. regarding their process for privacy exposure. From what I recall it's a combination of a document helping inform the design of APIs, and a formal review by a technical committee.

[14:54:21.0221] <shu>
is privacy in scope of TG3? i recall some contention around that

[14:54:52.0227] <shu>
the privacy web APIs care about, like how many bits of fingerprinting does this add, aren't usually applicable to JS APIs

[14:56:29.0868] <Mathieu Hofman>
I didn't mean to put privacy in scope, I meant to get inspiration from those processes from the Web world.

[14:57:22.0238] <shu>
i thought it _was_ already decided out of scope, but i might be misremembering

[14:58:05.0041] <shu>
in any case i expect it's easier to eyeball if something has privacy implications than if something has implementation complexity implications

[15:00:41.0120] <Mathieu Hofman>
Sorry I guess I wasn't clear. I'm not saying privacy should be in scope for this group. It was an example where another standards group have a defined process, which we could use as a reference when deciding what process to implement

[15:01:33.0969] <shu>
ah


2021-11-12
[16:35:02.0401] <Jack Works>
> <@shuyuguo:matrix.org> is privacy in scope of TG3? i recall some contention around that

Yes, observation of confidential information that shouldn't be know is a violation

[16:37:11.0094] <Jack Works>
e.g. in SES it cannot observe the user language via toLocaleString, otherwise a program can fake it to have a deterministic behavior in CI because CI has locale "en-US" but actually a bad program when the user locale is "ja-JP" 

