2022-05-17
[03:03:47.0261] <frank-dspeed>
hi i am new to the tc39 but i have a realtiv clear goal could some one assist me to get my first proposal started or maybe some one likes to champion it for me directly

[03:05:19.0229] <frank-dspeed>
i need the following: proposal importScripts (a sync import of scripts that get executed in order as they would be inlined) taking infinity urls and strings as args 

[03:06:36.0343] <frank-dspeed>
the current existing implementation from w3c inside workers should get part of general ECMAScript Next to solve interop problems in diffrent engines at present the most engines do implement nativ require mixed with this functionality

[03:07:02.0620] <frank-dspeed>
i am part of the wintercg but i am not familar with the tc39 process and it is a hugh one to get familar with

[03:07:28.0039] <frank-dspeed>
https://www.w3.org/community/wintercg/

[03:10:05.0020] <frank-dspeed>
maybe a bit more background while ESM is great it is async by default so it can not get used in ECMAScript Engines that relay on native code sideEffects

[03:10:21.0905] <frank-dspeed>
as it will get loaded and executed after the process first tick

[03:11:02.0081] <frank-dspeed>
we need a import for Scripts ESM only covers Modules

[09:15:56.0474] <ptomato>
frank-dspeed: cool! I'd suggest starting by reading some of the "Proposals" pages on https://github.com/tc39/how-we-work


2022-05-18
[02:19:55.0963] <frank-dspeed>
i need help again which category is that https://github.com/frank-dspeed/tc39-proposal-importScripts
Normative: changes impacting JavaScript behavior in some way. These changes are called "observable" because it is possible to write code to "observe" the change in behavior.
Editorial: any non-normative changes to spec text including typo fixes, changes to the document style, etc.
Layering: refactoring of specification text, algorithms, and/or embedder hooks to enable clean integration of the JavaScript specification with other specifications that use JavaScript.
Markup: non-visible changes to markup in the spec
Meta: changes to documents about this repository (e.g. readme.md or contributing.md) and other supporting documents or scripts (e.g. package.json, design documents, etc.)

