2022-09-21
[01:43:01.0399] <тars>
Let me ask a question about the syntax-directed operation `StringNumericValue`. There doesn't seem to be a production definition of following case.

```
StrDecimalLiteral ::: + StrUnsignedDecimalLiteral
```

Is this not necessary? Or am I misunderstanding something?

https://tc39.es/ecma262/#sec-runtime-semantics-stringnumericvalue

[04:22:48.0948] <jmdyck>
That case is handled by the chain rule, see https://tc39.es/ecma262/#sec-algorithm-conventions-syntax-directed-operations

[06:28:56.0253] <тars>
Ah, I get it. Thanks! So, by the chain production rule, it implicitly includes the following:

```
StrDecimalLiteral ::: + StrUnsignedDecimalLiteral
  Return 1. StringNumericValue of StrUnsignedDecimalLiteral
```

Am I correct?

[06:29:44.0467] <тars>
 * Ah, I get it. Thanks! So, by the chain production rule, it implicitly includes the following:

```
StrDecimalLiteral ::: + StrUnsignedDecimalLiteral
  Return 1. StringNumericValue of StrUnsignedDecimalLiteral
```

Am I correct?

[06:39:44.0454] <jschoi>
It would be “Return Evaluation of StrUnsignedDecimalLiteral”.

[07:03:48.0398] <тars>
What? How? Isn't the same syntax-directed operation reapplied to the sole right-hand side nonterminal? Where did the `Evaluation` come from?

[07:07:24.0916] <тars>
 * Ah, I get it. Thanks! So, by the chain production rule, it implicitly includes the following:

```
StrDecimalLiteral ::: + StrUnsignedDecimalLiteral
  1. Return StringNumericValue of StrUnsignedDecimalLiteral
```

Am I correct?

[12:47:21.0647] <jschoi>
My apologies; I misunderstood the question; I hadn’t realized you were talking about a specific syntax-directed operation. Yes, your interpretation is correct.


2022-09-22
[19:49:19.0742] <тars>
Oh, I’m relieved to hear that. I was just beginning to wonder if I had completely misunderstood something. You don't need to apologise! Thanks for the clarification. :)

[21:10:02.0751] <ssamkough>
hi yall! does tc39 have any general newsletters or rss feeds that one can subscribe to to get notified on the latest proposals?

[21:10:16.0054] <ssamkough>
sorry if this is not where i should be posting, completely new to this

[21:11:01.0837] <jmdyck>
I think this is an appropriate place to post that question.

[21:11:41.0471] <jmdyck>
I believe the answer is no, but I'm not positive.

[21:14:48.0903] <jmdyck>
But if you 'watch' https://github.com/tc39/proposals, I think you'll get a notification whenever that repo changes, which might suffice?

