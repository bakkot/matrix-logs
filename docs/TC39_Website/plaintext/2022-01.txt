2022-01-05
[06:38:09.0361] <Sora Morimoto>
> <@nicolo-ribaudo:matrix.org> I'm trying to build https://github.com/tc39/tc39.github.io/ locally, but when I run `make install` I get this error:
> ```
> Step 3/6 : RUN apk add --update --virtual nodejs openjdk14
>  ---> Running in 30646ebbe0a1
> ERROR: unable to select packages:
>   openjdk14 (no such package):
>     required by: nodejs-20211026.104358[openjdk14]
> The command '/bin/sh -c apk add --update --virtual nodejs openjdk14' returned a non-zero code: 2
> ```
> 
> Does anyone know how to fix it? (I know almost nothing about docker)

Quite weird. Does that still happen? Honestly, the project is not that complex/annoying as to need to use Docker, so I have never used it and have never seen the problem...

[07:08:01.0671] <ryzokuken>
I just checked out the tc39.github.io repo, and it is _so_ cursed

[07:08:07.0190] <ryzokuken>
 * I just checked out the tc39.github.io repo, and it is *so* cursed

[07:08:16.0108] <ryzokuken>
 * I just checked out the tc39.github.io repo, and it is _so_ cursed

[07:08:37.0069] <ryzokuken>
why does it need a Gemfile, a Dockerfile, a Makefile and still some more? It's still a static website, right?

[07:10:37.0728] <ryzokuken>
https://github.com/tc39/tc39.github.io#discussion this needs updating too fwiw

[07:12:23.0595] <Sora Morimoto>
Yes, all the classic GitHub Pages projects are cursed. Honestly, we knew somewhere that we should change this, but no one could get rid of the curse...

[07:14:06.0511] <ryzokuken>
I mean, Jekyll is... Jekyll but why Java?

[07:14:39.0524] <ryzokuken>
You don't need Docker or Java to build a Jekyll site, right?

[07:15:40.0473] <Sora Morimoto>
It's not Java anyway (*But it's the same with Ruby...)

[07:16:36.0681] <Sora Morimoto>
To be more exact, I think it would not have been too much trouble with not changing that, but it's a good opportunity to rethink this, let's do that

[07:27:14.0744] <ryzokuken>
let's port the website

[07:27:20.0835] <ryzokuken>
 * let's port the website

[07:27:30.0458] <ryzokuken>
to a lightweight JS generator

[07:27:32.0376] <ryzokuken>
11ty?

[07:30:23.0816] <Sora Morimoto>
I don't know which one is good as I make such a tool by myself every time. as long as no one objects to using 11ty, go with it

[07:33:05.0764] <Hemanth H.M>
11ty++

[07:47:13.0295] <Sora Morimoto>
🔥

[08:39:08.0745] <jasew>
Feel free to blame me for the Dockerfile, I added that way back when. My reasoning was because there were a lot of dependencies at the time and not everyone had everything. So Docker put us all on the same level. I agree it could be much simpler. I didn’t want to install Ruby on my local machine 

I didn’t choose the web framework, it was already ruby when I came across it.

[09:22:34.0522] <ryzokuken>
jasew: I don't blame you at all, sorry if I came off as that. I just think the dockerfile is a sign of a deeper issue (as you mentioned in this case, hard to setup environment).

[09:23:46.0928] <ryzokuken>
Given how simple the website is, I believe one should be able to run it as simply as `npm i && npm start` without needing to setup _\*checks notes\*_ Ruby and Java

[09:23:55.0104] <ryzokuken>
 * Given how simple the website is, I believe one should be able to run it as simply as `npm i && npm start` without needing to setup _*checks notes*_ Ruby and Java

[09:24:05.0137] <ryzokuken>
 * Given how simple the website is, I believe one should be able to run it as simply as `npm i && npm start` without needing to setup _\*checks notes\*_ Ruby and Java

[09:24:41.0306] <ryzokuken>
of course, take everything I say here with a spoonful of salt since I'd definitely not be able to make this happen, not by myself at the very least...

[09:24:46.0115] <ryzokuken>
 * of course, take everything I say here with a spoonful of salt since I'd definitely not be able to make this happen, not by myself at the very least...

[09:53:20.0706] <jasew>
> <@usharma:igalia.com> Given how simple the website is, I believe one should be able to run it as simply as `npm i && npm start` without needing to setup _\*checks notes\*_ Ruby and Java

I agree, it should be this simple 


2022-01-07
[20:38:09.0107] <Sora Morimoto>
We don't have to blame anyone. They became a problem over time, not because of someone else. So it's ultimately about history and technology.

[20:39:27.0595] <Sora Morimoto>
By the way, I would love to make it better, and I think doing this with the help of the community will be a good opportunity for more people to get involved in our efforts (including the translation stuff). I will be looking for people who want to work on this in some places, do you have any blockers for that?

[20:40:36.0589] <Sora Morimoto>
I think I have enough time this month to supervise people and push this, so I'm happy to work on that!

[01:58:53.0976] <ryzokuken>
That's awesome, thanks Sora Morimoto!

[07:20:52.0040] <Sora Morimoto>
https://github.com/tc39/tc39.github.io/issues/264

[07:28:22.0975] <yulia>
hey folks

[07:28:48.0808] <yulia>
you should feel free to get in touch with me, i would be really happy for help on the website -- ive been handling it alone for over a year with only a little help on translations and reviews

[07:29:07.0703] <yulia>
regarding the choices -- we are using ruby because we could deploy it with minimal effort on github pages

[07:29:42.0970] <yulia>
we also wanted to avoid favouritism of javascript frameworks, as an endorsement could have negative consequences for people

[07:29:51.0147] <yulia>
the website is very easy to work with, you only need jekyll

[07:30:06.0691] <yulia>
I've set up several people to work on it.

[07:36:21.0450] <yulia>
Would have been really great to know that this room existed :/

[07:38:06.0971] <yulia>
Java was introduced by a contributor because they wanted to do linting -- a lot of complexity is from tooling. I very much agree with removing it

[07:38:27.0872] <yulia>
the goal i had for this site was as an on-ramp for contributors to tc39 more generally

[07:38:55.0604] <yulia>
since i have been working on it alone, even improving the contribution pipeline has been difficult. But i have a lot of ideas of what we could do to improve the site.

[07:39:22.0347] <yulia>
I don't believe anyone is actively using the docker set up, i also found it too complex in the end

[07:43:25.0670] <yulia>
 * the goal i had for this site was as an on-ramp for contributors to tc39 more generally. Having a high bar of perfectionism for everything that is added to the site is a barrier to this goal. this is why it is more permissive for contributions than what i would accept elsewhere. 

[07:43:46.0440] <yulia>
 * since i have been working on it alone, even improving the contribution pipeline has been difficult. But i have a lot of ideas of what we could do to improve the site. It would be great to have been pinged before it got announced on twitter. 

[07:43:48.0940] <Hemanth H.M>
I am trying to recall if the repo is open to public, there are few interested folks looking for contributing, also maybe we can redo the design? 

[07:44:07.0456] <yulia>
the repo is public. i have made multiple calls for contributors

[07:44:26.0402] <Hemanth H.M>
proposals.es is well done actually

[07:44:54.0436] <Hemanth H.M>
> <@yulia:mozilla.org> the repo is public. i have made multiple calls for contributors

I'll try to get in more folks

[07:44:54.0848] <yulia>
ok, what does "well done" mean precisely?

[07:45:10.0564] <yulia>
hold on, can we actually talk about the work that was done previously before tearing everything down?

[07:45:32.0355] <yulia>
we ran a survey and did a lot of internal consultation, and had an information architect work with us on the goals for this

[07:45:34.0927] <Hemanth H.M>
In terms of presentation, search functionality and surfacing the data

[07:45:48.0463] <yulia>
what are the usecases being presented today?

[07:45:53.0340] <yulia>
do we have a list?

[07:46:21.0709] <Hemanth H.M>
> <@yulia:mozilla.org> hold on, can we actually talk about the work that was done previously before tearing everything down?

Nods, hence confirmed before taking any action

[07:46:47.0657] <Hemanth H.M>
> <@yulia:mozilla.org> what are the usecases being presented today?

In that site or general?

[07:47:55.0328] <yulia>
when we did the initial analysis, we identified our most significant user base -- people who were unfamiliar or uncomfortable with the github proposals repo or identifying information that they needed. This was our targeet

[07:47:58.0838] <yulia>
has the target changed?

[07:48:41.0063] <yulia>
this is also why we only show stage 3 proposals. A lot of decisions were made very intentionally in the original design. 

[07:48:52.0218] <Hemanth H.M>
That's a good question, I feel the target remains, do we some data backing the target audience?

[07:49:20.0092] <Hemanth H.M>
> <@yulia:mozilla.org> this is also why we only show stage 3 proposals. A lot of decisions were made very intentionally in the original design. 

Ah, I recall that decision

[07:49:39.0856] <yulia>
i would have to dig, it was a few years ago

[07:50:28.0570] <yulia>
another consideration was committee time -- the website is volunteer work. maintaining it is a burden (which i voluntarily took on, but do not expect others to) -- we need to consider the value of the amount of non-automated work 

[07:51:22.0613] <yulia>
looks like the formatting of the blog post is a little broken: https://hacks.mozilla.org/2019/03/a-homepage-for-the-javascript-specification/

[07:51:41.0338] <yulia>
but this was the survey that led to the decision to make the website in the first place, and we did a lot of work shopping afterwords

[07:52:00.0047] <yulia>
so if you want to redesign -- that is absolutely fine and i welcome it. I want to make sure we ask questions about why we do it

[07:52:24.0827] <yulia>
setting it up to use the new data set : fantastic -- please someone do this it would save me an hour a month

[07:53:08.0081] <yulia>
getting rid of jekyll -- sure, we can do that. i don't consider it a barrier to entry and i am worried about moving to a js framework as it may show favouritism. 

[07:53:26.0855] <yulia>
it would be an annoying rewrite and i am not sure that it is strictly necessary

[07:54:23.0731] <yulia>
The original website is an MVP, there is a broader scope we can do here.

[07:54:51.0690] <yulia>
if we are broadening scope, lets identify which user base we want to target next and how we can benefit them. in this case, i think a rewrite is warranted. 

[07:55:32.0654] <Hemanth H.M>
> <@yulia:mozilla.org> getting rid of jekyll -- sure, we can do that. i don't consider it a barrier to entry and i am worried about moving to a js framework as it may show favouritism. 

I don't see it as favouritism, we are just making use of the best tech available, 11ty makes it easy to build and deploy to gh-pages too.

[07:56:12.0832] <Sora Morimoto>
> <@yulia:mozilla.org> you should feel free to get in touch with me, i would be really happy for help on the website -- ive been handling it alone for over a year with only a little help on translations and reviews

First of all, I must apologise for this. I made everything private that could cause confusion. In fact, it might be better to keep even the issue private, but I also think it's worth asking for public feedback.

[07:56:37.0068] <Sora Morimoto>
> <@yulia:mozilla.org> we also wanted to avoid favouritism of javascript frameworks, as an endorsement could have negative consequences for people

I can understand this, but I don't really know if it's something that should be so sensitive

[07:56:46.0432] <Hemanth H.M>
> <@yulia:mozilla.org> so if you want to redesign -- that is absolutely fine and i welcome it. I want to make sure we ask questions about why we do it

If we were to take opinions from a seasoned designer I am sure there would be few many suggestions on redesign, but as you mentioned is it a must...well we can gauge 

[07:56:54.0903] <yulia>
it may be less of an issue than it was when we were building the site

[07:57:14.0612] <yulia>
here is thee issue where the designer we had highlighted some off the changes she made: https://github.com/tc39/tc39.github.io/issues/12

[07:57:27.0496] <yulia>
 * here is thee issue where the designer we had highlighted some off the changes she made: https://github.com/tc39/tc39.github.io/issues/12

[07:59:05.0406] <jasew>
I think JS would be more appropriate as that’s what most new contributors are going to be familiar with and we should be “eating our own dog food“ so to speak.

I don’t see an issue with favouritism, I doubt anyone will even bring this up. If we specify why we chose what we chose we should be fine there. 

[07:59:10.0963] <Hemanth H.M>
I am not saying the current design is totally flawed, but design strategies evolve quickly, this issues was 4y ago...maybe we can take this as a chance to revisit the design?

[07:59:45.0745] <yulia>
design or information architecture?

[08:00:04.0881] <yulia>
design can always be revisited, i wish we had more designers -- i am not one. Do we have someone already?

[08:02:01.0091] <Hemanth H.M>
There are few, I can try reaching out to.

Information wise I feel we are good.

We can maybe have a playground if we are showing only stage-3 it would be useful for wider range of audiences

[08:02:06.0761] <Sora Morimoto>
If you need experienced UI and UX designers, we could assign some in-house designers

[08:04:22.0997] <yulia>
I objected i believe to gatsby in the past -- it was newer then, and we didn't need graphql. i think there were a few reasons why i objected to going with a react based ssg 

[08:05:07.0452] <yulia>
>We can maybe have a playground if we are showing only stage-3 it would be useful for wider range of audiences

the reason we chose this is that when people go to our proposals page, they were panicing about stage 2 and stage 1 proposals. It contributed to users saying that our process goes too fast and we add too much to the language

[08:05:35.0687] <yulia>
i believe i have a presentation somewhere witth all of this historical data

[08:05:51.0376] <yulia>
but, things may have changed -- we can change all of these decisions

[08:06:45.0686] <Sora Morimoto>
> <@yulia:mozilla.org> I objected i believe to gatsby in the past -- it was newer then, and we didn't need graphql. i think there were a few reasons why i objected to going with a react based ssg

Either way, I also believe that react-based SSG is completely unnecessary here

[08:06:52.0909] <Hemanth H.M>
Should try running a survey in the public or on the site looking for what the visitor was seeking or it is it to lame?

[08:07:11.0093] <yulia>
sure, we can do that

[08:07:11.0213] <Sora Morimoto>
(Rather, I'm even a little skeptical about such things)

[08:07:13.0284] <Hemanth H.M>
11ty seems like the best match here 

[08:07:19.0434] <yulia>
> <@smorimoto:matrix.org> (Rather, I'm even a little skeptical about such things)

same

[08:07:37.0956] <yulia>
pulling some other historical stuff

[08:07:41.0171] <yulia>
css has 2 websites

[08:08:40.0381] <Sora Morimoto>
> <@yulia:mozilla.org> same

What we need is just a compiler that transforms from any data source to pure html and/or css

[08:08:51.0359] <yulia>
1 "passerby" focused, and 1 "expert focused (https://www.w3.org/Style/CSS/) -- rust has also a "friendly face" website

[08:08:59.0932] <yulia>
i need to find all this stuff again...

[08:09:16.0499] <yulia>
> <@smorimoto:matrix.org> What we need is just a compiler that transforms from any data source to pure html and/or css

hm... for the dataset?

[08:10:48.0451] <yulia>
https://github.com/tc39/dataset -- if we can expand this to include examples, we will have what we need in json. Then we can have a skeleton in whatever format we want

[08:11:13.0635] <Sora Morimoto>
> <@yulia:mozilla.org> hm... for the dataset?

I didn't mean just the dataset, but that's also true. Translation and images were also meant as data sources

[08:11:34.0419] <yulia>
ah, i see

[08:11:47.0003] <yulia>
yes, translation is not ideal right now. though it is a bit better

[08:12:06.0818] <yulia>
im digging through the old issues trying to find stuff. here are some more questions and decisions: https://github.com/tc39/tc39.github.io/issues/13

[08:13:06.0475] <Sora Morimoto>
> <@yulia:mozilla.org> ah, i see

Anyway, I'm happy to see someone who has a similar point of view to me for the first time in a while 🤷

[08:13:33.0417] <yulia>
i am very happy you folks are talking about this!

[08:14:04.0486] <jasew>
I wish we could fix the discovery of channels here, I didn’t realise you weren’t even in here @yulia 

[08:14:08.0445] <yulia>
and i am very much in the camp of technology of least power

[08:15:02.0476] <yulia>
yeah.. i had no idea this existed. i was seriously thinking i was the only one who cared about the website and i had a difficult time with some contributions last year that i would have reached out for assistance if i knew...

[08:15:26.0639] <yulia>
but! new year. very excited about what you folks will do

[08:15:41.0568] <yulia>
i will give you all the context i can. if you want to run an experiment, we can discuss how

[08:16:02.0753] <yulia>
when we did the survey for the initial version, it was announced on MDN, we can probably do that again

[08:16:38.0634] <Sora Morimoto>
> <@yulia:mozilla.org> yeah.. i had no idea this existed. i was seriously thinking i was the only one who cared about the website and i had a difficult time with some contributions last year that i would have reached out for assistance if i knew...

I'm very sorry to hear this... I should have contacted you earlier!

[08:17:16.0030] <Sora Morimoto>
(Anyway, it's almost time for me to leave my laptop, so my reply will be tomorrow, but I'm glad to see this discussions moving forward!)

[08:17:25.0508] <yulia>
ok, thank you sora for starting it

[08:20:54.0761] <yulia>
hmm... looks like the second css page was taken down

[08:21:18.0545] <yulia>
the rust page also inspired us: https://www.rust-lang.org/

[08:22:02.0061] <yulia>
and webcompat.org (https://webcompat.com/) we had the same designer

[08:22:42.0271] <yulia>
you can see the similarities -- changes for accessibility were made due to lack of contrast in our original design. i don't think it looks as good as it did, but it is more accessible

[08:23:52.0666] <yulia>
at the time we did this, we did a blitz (i am sure jase remembers) and we were done in 3 months. that only allowed for a single page app. but since we aren't starting from zero we can add additional pages

[08:34:16.0560] <yulia>
 * setting it up to use the new data set : fantastic -- please someone do this it would save me an hour a month (that i honestly don't really have, leading to late updates, out of date stuff)

[08:34:53.0045] <yulia>
 * it would be an annoying rewrite and i am not sure that it is strictly necessary if it is only to reproduce what we currently have with a different design. if we are shifting or broadening, that is another story

[10:00:45.0118] <ryzokuken>
oh wow, that was a long discussion I completely missed

[10:02:33.0008] <ryzokuken>
fwiw, I don't have strong opinions on site generator tools, I was just floating suggestions. I don't mind Jekyll per-se, but Docker and Java are definitely making the barrier high. That said, I understand the reservations against setting up Ruby on one's system, especially when you might need a very specific version, so that's one in favor of Docker

[10:03:29.0703] <ryzokuken>
I don't want to sign anyone up for a painful rewrite, so maybe it's something we can think longer about, but the upside of using JS tooling is the simplicity and the fact that most potential contributors would be very familiar with the workflow.

[10:03:34.0965] <ryzokuken>
 * I don't want to sign anyone up for a painful rewrite, so many it's something we can think longer about, but the upside of using JS tooling is the simplicity and the fact that most potential contributors would be very familiar with the workflow.

[10:03:49.0762] <ryzokuken>
 * I don't want to sign anyone up for a painful rewrite, so maybe it's something we can think longer about, but the upside of using JS tooling is the simplicity and the fact that most potential contributors would be very familiar with the workflow.

[10:05:52.0333] <ryzokuken>
perhaps if we decide to stick with jekyll for a bit, it's worth considering switching from Java-based tools to Rubocop and https://github.com/jekyll/rubocop-jekyll?

[11:22:49.0406] <ryzokuken>
* perhaps if we decide to stick with jekyll for a bit, it's worth considering switching from Java-based tools to Rubocop and https://github.com/jekyll/rubocop-jekyll ?


2022-01-08
[02:32:38.0087] <yulia>
hm, js tooling doesn't have a reputation of being painless or simple. you don't need to write any ruby with what we have now so i don't see this as a concern

[02:32:53.0990] <yulia>
pretty much everything a contributor touches is either html, css, or js on the current site

[02:33:17.0993] <yulia>
regarding tooling, i think it was a mistake that i allowed a contributor to add so much tooling -- we don't really need it

[02:33:22.0355] <yulia>
the project is very small

[02:34:27.0222] <yulia>
i am honestly not the biggest fan of jekyll, so it is weird to be the one defending it. If we make a change I want it to be deliberate

[02:35:15.0662] <yulia>
what we can do is a clean up -- this would make it clearer to everyone what I am seeing

[02:35:46.0744] <jasew>
> <@yulia:mozilla.org> hm, js tooling doesn't have a reputation of being painless or simple. you don't need to write any ruby with what we have now so i don't see this as a concern

Is that still true today though? Tooling has changed a lot over the years, small projects like this should have a tiny tooling footprint, even for JS. “npm install + npm run” should be it.

[02:35:52.0312] <yulia>
then i think what we want to do next, and how to do it efficiently and in a maintainable manner would also be clear. 

[02:36:14.0976] <yulia>
> <@jasew:matrix.org> Is that still true today though? Tooling has changed a lot over the years, small projects like this should have a tiny tooling footprint, even for JS. “npm install + npm run” should be it.

I don't do production js, but last i heard (on twitter, 2 days ago or so) is that the tooling system is still very complex

[02:36:50.0270] <jasew>
Bringing things like webpack into the mix yes, but something like this shouldn’t need to touch any of that 

[02:37:57.0914] <yulia>
from my perspective, if you want to replace the build system for generating the static site with something that has an equivalent simplicity to what we have now, i am all for it

[02:38:06.0851] <yulia>
 * from my perspective, if you want to replace the build system for generating the static site with something that has an equivalent simplicity to what we have now, i am all for it

[02:38:47.0402] <yulia>
the static site generator is something that you shouldn't notice, and for the most part -- honestly -- jekyll does that. this isn't a language problem

[02:38:51.0463] <ryzokuken>
> <@yulia:mozilla.org> what we can do is a clean up -- this would make it clearer to everyone what I am seeing

Why not just start from here? 

[02:39:16.0155] <ryzokuken>
Let's clean up the current setup as much as we can, and then see if it's still complex? 

[02:39:36.0764] <yulia>
what i can see as a problem is ecosystem -- js devs are more  familiar with the js ecosystem, and may not be comfortable with tools from other eco systems

[02:39:56.0371] <yulia>
i believe the html validator that runs in java is the one that is maintained by the html folks

[02:40:03.0770] <yulia>
so that was the appeal with using it

[02:40:35.0590] <jasew>
But your other priority was getting contributors to help you too though right?

[02:41:00.0374] <yulia>
it was, until i had a contributor who would not listen to my requests and kept fighting with me

[02:41:03.0174] <yulia>
i got pretty burnt out

[02:41:34.0113] <yulia>
it took 5 hours to review prs that would take me 10 minutes to write

[02:42:15.0184] <yulia>
we had amazing contributor sprints

[02:42:34.0836] <yulia>
the initial write of the website, the localization of the website, addressing accessibility issues etc

[02:42:40.0497] <yulia>
they usually come in bursts

[02:42:50.0165] <yulia>
sometimes i have long term contributors but they come and go

[02:43:11.0029] <yulia>
"hard to get started" hasn't been an issue for onboarding contributors

[02:44:33.0631] <yulia>
things i think need work? design could be prettier, we could have another sprint of work to reduce some of the bloat. we need to hook up the tc39 dataset

[02:44:59.0102] <yulia>
and yes, we can swap out the static site generator. I want to hear a really good reason why though

[02:45:39.0663] <yulia>
 * things i think need work? design could be prettier, we could have another sprint of work to reduce some of the bloat. we need to hook up the tc39 dataset. readme needs to be updated

[02:47:25.0539] <yulia>
other work that can happen: information architecture of the process page -- it is incredibly hard to read. properly structuring it and integrating it into the website would be great

[02:48:36.0805] <yulia>
making translations easier: for example, if a proposal is missing a translation, add a button that allows someone to directly open a PR and write it. also, integrating automated translations from something like deepl would be a stop gap. this is an open project someone can pick up, it would be very useful and help us move the site forward

[02:48:58.0408] <yulia>
there is so much work to do that is static site generator independent

[02:53:30.0965] <yulia>
 * things i think need work? design could be prettier, we could have another sprint of work to reduce some of the bloat. we need to hook up the tc39 dataset. readme needs to be updated. additional automation would be great.

[05:22:18.0616] <yulia>
 * we had amazing contributor sprints, that hasn't been an issue

[05:22:43.0987] <yulia>
 * we had amazing contributor sprints, that hasn't been an issue. the problem is finding people willing to plan and oversee work.

[05:22:54.0816] <yulia>
 * example springs: the initial write of the website, the localization of the website, addressing accessibility issues etc

[05:30:03.0268] <yulia>
 * example sprints: the initial write of the website, the localization of the website, addressing accessibility issues etc

[06:47:58.0250] <Hemanth H.M>
> <@yulia:mozilla.org> things i think need work? design could be prettier, we could have another sprint of work to reduce some of the bloat. we need to hook up the tc39 dataset. readme needs to be updated. additional automation would be great.

This can be a great start, once we have the dataset in the equation things should get better.

Should we create a GH project board and add them to the list? 

We could also asess the effort vs benefit of moving away from the current setup. 

[06:48:16.0724] <Hemanth H.M>
* This can be a great start, once we have the dataset in the equation things should get better.

Should we create a GH project board and add them to the list? 

We could also asess the effort vs benefit of moving away from the current setup. 


2022-01-10
[00:47:58.0074] <yulia>
I think, it may be the case that replacing the ssg is what is energizing you folks the most? if it is, then lets talk about that directly and see what we can do. But it may also be useful to think about that question critically: what _do_ you find most exciting to work on?  maybe it is the design, maybe the ssg, or maybe pushing the site forward. I don't want to push my priorities too strongly because i want to see the lot of you become owners of this project -- that would be a great outcome here. I just don't want to see the work of the many people who donated time, and honestly excellent work, to this project thrown into the bin

[00:48:38.0740] <yulia>
 * I think, it may be the case that replacing the ssg is what is energizing you folks the most? if it is, then lets talk about that directly and see what we can do. But it may also be useful to think about that question critically: what _do_ you find most exciting to work on?  maybe it is the design, maybe the ssg, or maybe pushing the site forward. I don't want to push my priorities too strongly because i want to see the lot of you become owners of this project -- that would be a great outcome here. I just don't want to see the work of the many people who donated time, and honestly excellent work, to this project thrown into the bin

[00:49:57.0329] <ryzokuken>
no, I agree with you yulia 

[00:50:32.0198] <ryzokuken>
the only thing that was off-putting to me was the complexity. If we can reduce setting up the project to a simple `bundle install`, then that's pretty good too

[00:51:14.0325] <yulia>
iirc the reason jase added the docker container was that he had issues with bundle install -- i think there are unsolved issues there but since then no one has complained about it

[00:51:18.0722] <yulia>
thats not necessarily good either

[00:51:19.0037] <ryzokuken>
one suggestion was to switch to a different linter to avoid factoring in Java, which is a mess to manage, especially on Windows and to some extent MacOS. What do you think about that?

[00:51:56.0278] <yulia>
yeah, that sounds good -- i was thinking to reduce the tooling

[00:52:33.0207] <ryzokuken>
yeah, I see his point too. The problem with Ruby is that in most cases, you need a very specific version to make things work. I don't think most people in the JS community really understand this mental model which makes it difficult to get them started

[00:52:45.0189] <yulia>
it was added by a contributor as a sort of first patch to get started and as i mentioned -- i was trying to keep the barrier to entry low and not nitpicking too much

[00:54:47.0369] <yulia>
if we want to move to a js based ssg, i think one important thing to keep is that the authoring language remains html -- does that sound fine to you folks?

[00:55:35.0811] <ryzokuken>
sure, I was even considering to figure out a way to make the current source work with 11ty

[00:55:51.0527] <ryzokuken>
so that we can focus on changing the underlying tooling first without porting the whole thing

[00:56:00.0160] <yulia>
this would be great

[00:56:30.0093] <ryzokuken>
since many ssgs support all kinds of underlying templating engines, we could figure out something that works 

[00:57:35.0416] <yulia>
i haven't looked in recent years so i am happy to leave that in your hands -- we just want something that would allow us to preserve the underlying architecture without rewriting it, and also doesn't lock us into something non-web

[00:58:13.0966] <ryzokuken>
oh no, don't worry we're all aligned here I believe

[00:58:51.0313] <yulia>
the other thing i have fought for quite a lot is that the website is minimal js -- no SPA, but i think we are good with that right?

[00:59:35.0599] <ryzokuken>
the only thing that I'm somewhat hesitant about is avoiding JS-based tools. I don't think the risk of "blessing a single solution" is as big as that of using something that is less intuitive to the average contributor.

[01:00:06.0352] <yulia>
js based tools are fine, i don't think a monoculture should be an explicit goal

[01:00:48.0593] <yulia>
if you look at people who work in javascript, pure js developers do a lot of the exiting work, but a lot of people are working in a different way. many are still maintaining jquery/angular/etc 

[01:00:48.0866] <ryzokuken>
> <@yulia:mozilla.org> the other thing i have fought for quite a lot is that the website is minimal js -- no SPA, but i think we are good with that right?

yep, I agree, I don't think the website needs to be an SPA. A static HTML/CSS website generated by a tool should work fine.

[01:02:10.0027] <ryzokuken>
but if we don't consider JS-based tooling to be important, perhaps https://github.com/gohugoio/hugo/ is a good contender?

[01:02:22.0703] <yulia>
when we talk about accessibility, buying in to the latest stuff happening in js can be less accessible than using older tools, especially if we are trying to bring in people less comfortable with everything. A counter project we can look at (though i respect what was done here) is the tcq tool. It was built with the "latest" tech of the time and had a very modern stack. I have contributed to it but it wasn't a pleasant experience. 

[01:02:34.0096] <ryzokuken>
IIUC, it occupies the space these days which Jekyll occupied years ago

[01:03:01.0692] <yulia>
the main reason we chose jekyll at the time was it was the default for github pages

[01:03:08.0896] <yulia>
we just needed to get off the ground

[01:03:27.0347] <ryzokuken>
again, the only concern being that using this would be less intuitive for new contributors than the familiar `npm install && npm start`, but if that's not such a big deal...

[01:03:55.0576] <yulia>
i would say that if we change to hugo, we would need a clear beneffit

[01:04:10.0580] <yulia>
the benefit of moving to a js ssg, as i understand, is that it would be npm install etc

[01:04:40.0068] <yulia>
the point i was making above was about monoculture

[01:05:09.0259] <yulia>
specifically -- not to get carried away by what might be best practice in the js community today -- as it moves very fast

[01:05:25.0778] <ryzokuken>
that's a fair point

[01:05:45.0227] <yulia>
we may end up with an all js stack, by the way -- we just want it to be stable 

[01:06:05.0287] <ryzokuken>
what do you think about deferring this for later and start by simplifying the contribution flow within the current setup?

[01:06:53.0845] <yulia>
that is a good idea, i liked your suggestion of it -- i also have blind spots here because i have worked on it so long and my usually work flow has been directly mentoring new contributors

[01:07:07.0061] <yulia>
so i don't see all the problems

[01:08:51.0496] <yulia>
i am very excited to see where this goes honestly, and i am so happy you are all taking it on

[01:09:01.0478] <ryzokuken>
the big thing that took me by surprise was the fact that I realized people needed to set up 3-4 sets of tools for what I consider to be a "fairly smooth to work on" website.

[01:09:41.0508] <ryzokuken>
between rubygems, java, docker and node/npm

