2025-09-15
[06:45:21.0467] <Aki>
I don't suppose someone could merge https://github.com/tc39/ecma402/pull/1011 ? I'm antsy to cognitively unload some open PRs 

[06:45:51.0450] <ryzokuken>
thanks for the reminder Aki I'll review it and merge it ASAP

[06:45:59.0044] <ryzokuken>
consider the ball out of your court ðŸ˜„ 

[13:58:09.0507] <justingrant>
I'm sure we discussed this as part of DurationFormat design planning, but is it expected behavior that the following options using `digital` style will display hours too, even if the duration only has minutes and seconds?

```js
{ style: 'digital', minutesDisplay: 'always', secondsDisplay: 'always' }
```

With the default options I would expect to see hours (because otherwise the output would be ambiguous between mins/secs and hours/mins) but if the caller explicitly asks for mins/secs it was surprising that it didn't yield only mins/secs in the output. 

[14:00:17.0157] <sffc>
Yeah there's ambiguity between hh:mm and mm:ss in many locales, but both are valid formats 

[14:03:10.0655] <justingrant>
So is it a bug if an implementation is given the options above but the output is h:mm:ss instead of mm:ss?

I read these [TG2 meeting notes](https://github.com/tc39/ecma402/blob/main/meetings/notes-2022-09-01.md#the-output-of-minutes--seconds-and-hoursminutes-in-digital-format-could-be-the-same-54) which conculded that the default would be h:mm:ss, but I assumed that this default could be overridden. Was this assumption incorrect?

[14:04:26.0651] <sffc>
We spent a lot of time on this when writing the spec; what does the spec say to do?

[14:29:37.0893] <justingrant>
I saw Frank's PR here: https://github.com/tc39/proposal-intl-duration-format/pull/124/files which seems to deal with setting the default display option for H/M/S units. But I assumed that there was a separate path that was followed (like in Intl.DateTimeFormat) if the caller doesn't accept the defaults but instead wants to manually control which units are otuput by providing options for those units in constructor options.

That's the point where I got lost in the spec and wasn't sure where that non-default-options case was proceessed. 

[14:37:27.0151] <justingrant>
I was operating under the assumption (maybe incorrect!) that DF worked like DTF where if you specify any unit options then the only units shown are the ones that have options provided, unless additional units are required to be shown because there's no pattern available that includes only the units in options provided by the caller.

[14:39:37.0702] <sffc>
My reading of https://tc39.es/ecma402/#sec-getdurationunitoptions is that when display is digital, then hour, minute, and second all default to display "always" and style "numeric"

[14:40:31.0475] <sffc>
I think the PR you cited is the one that implemented that change

[14:41:09.0890] <sffc>
So if you want to turn off hours, then you should specify `hoursDisplay: "auto"`

[14:42:42.0753] <sffc>
This isn't the same mental model as Intl.DTF. In DTF, we regularly show only a subset of the data. In DurationFormat, we always try to show all of the data. It would be wrong for us to take a duration PT1H2M3S and render it as "2min 3sec". So we need to think about how to render hours all the time, even if the user set only minute and second options.

[14:46:40.0962] <justingrant>

Cool, that's the solution!  Not exactly intuitive, but it works.

If I have time I'll file a PR for the MDN docs to clarify how to obtain that MM:SS behavior.

> This isn't the same mental model as Intl.DTF

Yeah, that's the part I didn't fully understand until your notes above. Thanks for clarifying. 

[14:47:38.0405] <sffc>
I think to get mm:ss behavior, you _only_ need `hoursDisplay: "auto"`, since minutes and seconds both default to display "always"

[14:48:18.0666] <sffc>
Yeah, I can see how that isn't completely intuitive. ðŸ¤·


2025-09-22
[07:15:50.0353] <Chris de Almeida>
who is giving the 402 update today? 

[08:14:27.0209] <Chris de Almeida>
ryzokuken: ðŸ‘€

