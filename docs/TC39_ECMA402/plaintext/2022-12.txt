2022-12-09
[15:14:42.0691] <justingrant>
TIL that Node 19's version of ICU data replaces the space in `9:59 AM` with `&#x202f;`, a (non-breaking space unicode character)[https://www.fileformat.info/info/unicode/char/202f/index.htm\].  This broke 40 Temporal tests. Sigh.

[15:14:50.0867] <justingrant>
 * TIL that Node 19's version of ICU data replaces the space in `9:59 AM` with `&#x202f;`, a (non-breaking space unicode character)[https://www.fileformat.info/info/unicode/char/202f/index.htm\].  This broke 40 Temporal tests. Sigh.

[15:15:11.0857] <justingrant>
 * TIL that Node 19's version of ICU data replaces the space in `9:59 AM` with `&#x202f;`, a (non-breaking space unicode character)[https://www.fileformat.info/info/unicode/char/202f/index.htm].  This broke 40 Temporal tests. Sigh.

[15:15:36.0179] <justingrant>
 * TIL that Node 19's version of ICU data replaces the space in `9:59 AM` with `&#x202f;`, a [non-breaking space unicode character](https://www.fileformat.info/info/unicode/char/202f/index.htm).  This broke 40 Temporal tests. Sigh.

[15:37:13.0002] <justingrant>
> <@justingrant:matrix.org> TIL that Node 19's version of ICU data replaces the space in `9:59 AM` with `&#x202f;`, a [non-breaking space unicode character](https://www.fileformat.info/info/unicode/char/202f/index.htm).  This broke 40 Temporal tests. Sigh.

Although for some reason I'm only seeing this behavior in CI, not on my local dev machine, even though both are running Node 19.2.0. Weird. 


2022-12-10
[22:42:00.0788] <eemeli>
justingrant: The relevant version within Node.js is `process.versions.icu`.

[22:43:01.0312] <eemeli>
See the messages here around 16 Nov for more context.

[22:46:13.0121] <justingrant>
Thanks eemeli , good to know. 


2022-12-16
[02:06:24.0929] <justingrant>
> <@justingrant:matrix.org> Although for some reason I'm only seeing this behavior in CI, not on my local dev machine, even though both are running Node 19.2.0. Weird.

BTW, after some digging, the problem looks like a regression in CLDR 42. Apparently the Node 19 build used by GitHub Actions picks up ICU 72 (which includes CLDR 42), but my local dev machine's homebrew install includes ICU 71/CLDR 41. This explains why I only saw it in CI. 

I filed a bug in CLDR's JIRA to fix the formats: https://unicode-org.atlassian.net/browse/CLDR-16243

In cases like this where CLDR bugs are found, what's the normal process to follow?  Just wait for the issue to be fixed upstream?  Also file an issue in the 402 repo?  Also file bugs against V8, FF, and WebKit?

[04:40:53.0968] <sffc>
I added the ECMAScript label to the issue. They will triage it soon

[04:41:36.0534] <sffc>
But I think it's safe to assume that all this behavior is intended; it certainly won't be changing until CLDR43, so it's worth changing code to reflect the new data

[04:44:06.0031] <justingrant>
> all this behavior is intended

Do you mean the CLDR 42 formats are intentional changes, not bugs?

> it's worth changing code to reflect the new data

What does this mean specifically? What code? What new data?

[04:46:35.0805] <sffc>
Yeah, CLDR changes are always intentional. It's possible that there are errors, but there's never a right answer in locale data. So whatever CLDR says is the gold standard

[04:48:50.0982] <sffc>
You said you were getting errors in Node 19; you should make whatever fixes are required to make the polyfill work again

[04:49:35.0467] <justingrant>
Yep, PR in progress for that. Hope to finish it up by EOD friday. Or maybe monday. 

[13:40:24.0954] <justingrant>
Anyone know why the official Node.js download for Node 19.3.0 (at least the one [for MacOS](https://nodejs.org/en/download/current/)) includes ICU 71, while GitHub Actions' version of Node 19.3.0 includes ICU 72?  I know that choosing the ICU version can be done when building from source, but I'm surprised that there's no canonical "use this ICU version with this Node version" default that's widely adopted. 

Or is GH Actions simply trying to be helpful by loading the latest version of every Node component, in order to help us catch issues like the ones I'm trying to fix in https://github.com/tc39/test262/pull/3751 ?

