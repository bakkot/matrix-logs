2021-10-01

2021-10-02
[16:44:57.0483] <bakkot>
Aki: as long as you are doing matrix-y things, can I petition you to change the logs links to https://matrixlogs.bakkot.com/ ? the current logs are kinda garbage


2021-10-04
[15:29:35.0346] <Michael Ficarra>
bakkot: can we host that somewhere that's controlled by the committee instead?

[15:39:34.0902] <bakkot>
Michael Ficarra: It's on github pages

[15:39:53.0522] <bakkot>
do you want push access to the repo, or?

[15:40:24.0486] <bakkot>
but also we relied on a logbot hosted by a non-committee member for the last several years, which was fine

[15:40:38.0602] <bakkot>
so it does not seem particularly pressing to me

[15:41:06.0221] <Michael Ficarra>
I meant the domain, shouldn't it be easy to be something like `tc39.es/matrixlogs` by transferring to the tc39 org?

[15:44:53.0165] <bakkot>
I don't intend it to be just for tc39; it also hosts logs for whatwg, and I will probably add more if people ask for them. and I don't really want to run multiple instances of it

[15:45:13.0687] <bakkot>
so if you want to do the work of setting up and running a separate instance and hosting it there, go for it

[15:45:18.0650] <bakkot>
otherwise I would prefer not to change mine


2021-10-05
[18:58:41.0939] <ljharb>
it'd probably be good to have tc39's be on their own instance under tc39.es


2021-10-06
[07:32:03.0017] <jschoi>
Several Stage 0 proposals have been transferred to the tc39 GitHub organization. Is there a particular policy about this? https://github.com/tc39/proposals#onboarding-existing-proposals doesn‚Äôt talk about Stage 0.

[07:41:46.0463] <ryzokuken>
are internal slots case sensitive?

[07:46:06.0926] <ryzokuken>
https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots doesn't specify that

[07:57:51.0448] <shu>
yeah, treat them as case sensitive

[07:58:01.0159] <shu>
i'd be against every introducing slot names that differ only in casing

[07:58:08.0196] <shu>
but even so just treat them as case sensitive

[08:00:30.0551] <ryzokuken>
I mean more about access. Can I access `[[Foo]]` using `[[foo]]`?

[08:11:24.0610] <Ashley Claymore>
semi-related. is the `[[Description]]` that a Symbol "holds" also an 'internal slot'? The spec seems to say that slots are only on objects, so would it be technically incorrect to say that symbols have an internal slot?

[09:02:16.0519] <shu>
ryzokuken: no, use [[Foo]]

[09:42:19.0358] <shu>
Ashley Claymore: not technically, but conceptually yes

[10:01:31.0475] <Ashley Claymore>
thanks shu  üôÇ

[10:58:30.0344] <shu>
PSA: nobody has signed up for the next incubator call yet. the topic is Proxy performance https://github.com/tc39/Reflector/issues/399

[14:15:52.0018] <ljharb>
> <@jschoi:matrix.org> Several Stage 0 proposals have been transferred to the tc39 GitHub organization. Is there a particular policy about this? https://github.com/tc39/proposals#onboarding-existing-proposals doesn‚Äôt talk about Stage 0.

the policy is that stage 1+ proposals *must* be transferred; stage 0 proposals can be, but for scalability, we should probably only transfer the ones that have been discussed in a plenary

[15:24:30.0814] <rbuckton>
Can the `Contains` spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:
```
If _node_ Contains `using const`, ...
```

[15:24:51.0754] <rbuckton>
 * Can the `Contains` spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:
```
If _node_ Contains `using const`, ...
```

[15:31:53.0239] <bakkot>
rbuckton: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.

[15:32:09.0096] <bakkot>
 * rbuckton: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.


2021-10-10
[09:03:57.0802] <TabAtkins>
FYI to CoC people: just sent in a CoC request (in case it gets caught by spam filters like last time)

[10:06:05.0129] <jschoi>
Same: I sent two emails CoC yesterday, in case they‚Äôre caught as spam.


2021-10-11
[08:40:48.0367] <ljharb>
fwiw i got them all.

[09:51:40.0420] <Jory Burson>
Delegates, FYI we have implemented an indefinite block on a "sock-puppet" account. Sock puppet accounts are alternate accounts created by users, typically to get around a block or to create the appearance of more support for a poster's ideas. Creating sock puppet accounts is an example of a negative conflict behaviour that will result in an immediate block. cc TabAtkins ljharb jschoi 

[09:52:40.0323] <Jory Burson>
Thanks for your continued use of the CoC process! Please let me know directly if you have any questions or concerns.


2021-10-13
[10:22:40.0192] <bakkot>
devsnek: for your slides for extending `null`, it would be good to have some some slides with the various edge cases (especially "class which extends a literal `null` and has not had its prototype changed", "class which initially extended some other value but has had its prototype changed to `null`", and "class which initially extended `null` but has had its prototype changed to a non-`null` value")

everyone agrees `extends null` should work, so much of the meat of the discussion is around these edge cases

[10:22:52.0207] <bakkot>
I can write something up if you'd find it helpful

[10:23:40.0460] <bakkot>
also, reminder to the channel that the deadline for advancement eligibility is in two days, and the agenda is currently pretty light

[10:31:27.0966] <jschoi>
If not much else gets added to the agenda, then I will expand my two proposal updates‚Äô timeboxes from ten minutes to thirty minutes each. 

[10:31:49.0409] <jschoi>
* If not much else gets added to the agenda, then I will expand my two proposal updates‚Äô timeboxes from ten minutes to thirty minutes each. 

[11:01:49.0766] <bakkot>
shu: given that the agenda is kind of light, Michael Ficarra and I were thinking it might be a good time for the subclassing discussion

[11:16:40.0444] <bakkot>
jschoi: the spec at https://jschoi.org/21/es-array-async-from/ appears to be ahead of the spec in the proposal

[11:16:46.0921] <bakkot>
I was gonna submit a PR but it's tricky when they're out of sync

[11:36:26.0563] <shu>
bakkot: what's the scope you had in mind?

[11:48:41.0192] <Michael Ficarra>
> <@jschoi:matrix.org> If not much else gets added to the agenda, then I will expand my two proposal updates‚Äô timeboxes from ten minutes to thirty minutes each.

any time box less than 30 minutes is pretty ambitious

[11:50:57.0313] <Michael Ficarra>
> <@shuyuguo:matrix.org> bakkot: what's the scope you had in mind?

tradeoffs of the "minimal core" philosophy where supplementary methods delegate to core methods so that subclasses only need to override the core

[11:51:55.0582] <Michael Ficarra>
recall the question from the Set methods proposal: do helpers like union/intersection/difference touch the set contents themselves or delegate to the add/remove methods

[12:16:12.0156] <jschoi>
> <@bakkot:matrix.org> I was gonna submit a PR but it's tricky when they're out of sync

They should be in sync; I‚Äôm surprised that they were not.
I just updated the spec page to match the repository‚Äôs build. I‚Äôll set up an automatic build on tc39.es sometime.

[12:17:06.0776] <jschoi>
> <@michaelficarra:matrix.org> any time box less than 30 minutes is pretty ambitious

Haha, yeah‚ÄîI was just going to speed through a few update slides then say, ‚ÄúPlease file any questions in a new GitHub issue; thank you!‚Äù

[12:53:28.0965] <bakkot>
> <@jschoi:matrix.org> They should be in sync; I‚Äôm surprised that they were not.
> I just updated the spec page to match the repository‚Äôs build. I‚Äôll set up an automatic build on tc39.es sometime.

unless there's a caching issue or something they appear to still not be in sync - the rendered spec has the TA method, the source in the spec.html file in the repo (which has not been updated in 13 days) does not

[12:55:25.0765] <jschoi>
I‚Äôll look into it, but either way I haven‚Äôt gotten to updating the TypedArray version yet to fulfill #9. 

I‚Äôll work on deploying to GitHub Pages tonight so we can definitely have an up-to-date spec page. 

[12:55:46.0625] <jschoi>
* I‚Äôll look into it, but either way I haven‚Äôt gotten to updating the TypedArray version yet to fulfill #9. 

I‚Äôll work on deploying to GitHub Pages tonight so we can definitely have an up-to-date spec page. 

[13:10:01.0087] <devsnek>
bakkot: updated slides and also rebased the spec text

[13:13:36.0268] <devsnek>
also added a note about how class fields don't currently work

[13:15:01.0268] <devsnek>
 * also added a note about how class fields don't currently work

[16:30:01.0538] <shu>
reminder that nobody has signed up for the next incubator call: https://github.com/tc39/Reflector/issues/399

[16:30:17.0184] <shu>
i will cancel it if nobody else signs up by this friday, Oct 15


2021-10-14
[17:39:46.0654] <jschoi>
> <@jschoi:matrix.org> I‚Äôll look into it, but either way I haven‚Äôt gotten to updating the TypedArray version yet to fulfill #9. 
> 
> I‚Äôll work on deploying to GitHub Pages tonight so we can definitely have an up-to-date spec page.

I added an action to proposal-array-from-async that automatically publishes to its gh-pages branch, but it doesn‚Äôt look like the gh-pages files are showing up at https://tc39.es/proposal-array-from-async/. Is there anything else I need to do?

