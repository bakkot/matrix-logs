2023-01-01
[15:26:40.0665] <ljharb>
i agree that stuff needs to be figured out, but it's not a blocker - it wasn't a blocker for ecmarkup either.


2023-01-03
[11:32:21.0252] <ptomato>
is there any recent news on the "rm subclassing" proposal?

[11:47:26.0557] <littledan>
arguably set methods to Stage 3 is a pretty strong milestone to establishing how these things should work in the future

[11:47:56.0798] <littledan>
beyond that, I haven't heard of any progress in the assessments to how web-compatible it'd be to remove some of the ES6 cruft

[11:51:57.0772] <ptomato>
I seem to remember that someone said last time that Set methods wasn't intended to be a precedent?

[12:24:23.0316] <shu>
firefox said there were incompats and i have vague memory of waiting on the data there for next steps, but it's been a bit

[12:34:34.0195] <bakkot>
Set methods were explicitly intended to be a precedent https://docs.google.com/presentation/d/1HCqPMsWiTtsn92gA3b1luVpnVHWVVR0iKaAE0marxkA/edit#slide=id.g13a69787e9f_0_13

[12:36:05.0708] <bakkot>
I do think we should have gone with Symbols rather than strings, and might fight about that when that particular question comes up, but IIRC that was the only point of contention

[12:36:14.0581] <bakkot>
we were all on board with the subclassing behavior, I believe

[12:36:25.0675] <bakkot>
 * I do think we should have gone with Symbols rather than strings, and might fight about that when that particular question comes up, but IIRC that was the only point of contention

[12:40:34.0884] <bakkot>
https://github.com/tc39/notes/blob/6f7e075341e435f22777b07a3ee5141442d2d8a7/meetings/2022-03/mar-31.md#extending-built-ins is a better link I guess, since that's the presentation where we talked about subclassing in particular rather than Symbol vs string

[12:41:29.0269] <bakkot>
well, though that was less focused on Symbol.species, actually

[12:41:32.0689] <bakkot>
there's a lot of parts of this...


2023-01-04
[15:11:07.0475] <bakkot>
Ashley Claymore: what's the status of change-array-by-copy? if it's shipping in two places do you want to go for stage 4 in January?

[15:11:18.0315] <bakkot>
I ask because we're going to cut the next edition sometime in the next few months

[15:14:27.0483] <bakkot>
littledan: same question as ^ re: symbols as weakmap keys (not sure if you're the right champion but you're listed first)


2023-01-05
[19:53:35.0828] <littledan>
Thanks for the ping, we will discuss both of these proposals within Bloomberg and get back to you (possibly via an agenda PR)

[09:32:00.0344] <TabAtkins>
Where's the proposed schedule of the year's meetings posted again? I kinda expected it on the agendas repo, but I only see the upcoming Jan meeting there.

[09:33:12.0172] <Chris de Almeida>
will message you

[09:45:25.0743] <bakkot>
TabAtkins: bottom of https://github.com/tc39/agendas/blob/main/2023/01.md#dates-and-locations-of-future-meetings


2023-01-06
[16:10:21.0237] <TabAtkins>
danke, y'all, suggesting we copy it to a more obvious place https://github.com/tc39/agendas/pull/1295

[15:13:21.0400] <ljharb>
can anyone help me come up with values that would trigger the returns on steps 6 and 8 in https://tc39.es/ecma262/#sec-makeday ?

[15:24:04.0148] <ptomato>
step 6 would return for `Date.UTC(Number.MAX_VALUE, Number.MAX_VALUE)`

[15:25:28.0404] <ptomato>
step 8 is not clear about what would return and there's an issue open about it: https://github.com/tc39/ecma262/issues/1087

[15:26:13.0370] <ptomato>
but in any case it seems likely that `Date.UTC(-271821, 3, 19)` ought to make step 8 return

[15:26:20.0866] <ljharb>
hm, using MAX_VALUE seems to hit step 8 but not step 6 in my impl

[15:26:37.0556] <ljharb>
(the AO only takes number values, to be clear)

[15:27:10.0291] <ljharb>
and `+Date.UTC(-271821, 3, 19)` returns NaN  for me in Safari and node :-/

[15:31:00.0605] <ljharb>
aha, but using MAX_VALUE for both the year and month seems to hit step 6, thanks!


2023-01-09
[11:21:37.0612] <rbuckton>
Chairs: The January TC39 was moved to January 30th, making the agenda deadline January 20th, correct? The link in the "Agenda topic rules" labeled "CALCULATE TIME HERE" is calculating the time until January 30th, not January 20th. I assume this is in error?

[11:22:18.0366] <Rob Palmer>
Checking...

[11:25:48.0916] <Rob Palmer>
You are correct.  Here's the fix:  https://github.com/tc39/agendas/pull/1296

[11:26:33.0287] <Rob Palmer>
Thank you for noticing.

