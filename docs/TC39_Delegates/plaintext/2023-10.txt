2023-10-01
[17:08:53.0045] <Jack Works>
if a proxy returns configurable: false for property "x", why future calls return true throws an error? (I know it is maintaining invariant) it can also silently change configurable to false IMO

[17:45:12.0405] <Jack Works>
https://github.com/Jack-Works/proposal-module-sync-assert

[21:05:09.0877] <ljharb>
Why would it be better to silently fail to recognize a bug?

[21:05:41.0726] <ljharb>
arguably it could have just not called the trap once the value wouldn’t change, but here we are

[02:58:19.0222] <Ashley Claymore>
My understanding is that Proxies don't have a memory. The invariants that involve time are enforced by comparing the result to the same call made to the target object. So the invariants would be broken if the target object has broken the invariant, but hosts are not supposed to create objects that break the invariants  

[15:35:51.0123] <Mathieu Hofman>
> <@littledan:matrix.org> What if we made a function like Error.raise instead of adding syntax?

rbuckton: I'd like to bring to your attention a TypeScript limitation that seriously impedes the usage of any function call that unconditionally throws like this. I suspect it would also be a problem that needs to be solved for throw expressions in general: https://github.com/microsoft/TypeScript/issues/50739

