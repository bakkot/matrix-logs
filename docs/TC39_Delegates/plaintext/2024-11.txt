2024-11-01
[10:46:28.0332] <Chris de Almeida>
nicolo-ribaudo: is there a repo yet for `Avoid capturing lexical context in indirect eval` ?

[11:58:18.0151] <Justin Ridgewell>
> <@gibson042:matrix.org> here's a rather stark example:
> ```
> const unfrozen = Array.from({ length: 10000 }, (_, i) => i);
> const frozen = Object.freeze([...unfrozen]);
> fn = arr => arr.slice().concat("FIN");
> let result;
> 
> result = fn(unfrozen); // 10.787 ops/ms
> result = fn(frozen); // 1.427 ops/ms
> ```

A slightly more complex example: https://jsbench.github.io/#7802fbd8f3d46d7fef9d6009e65fd4bd


2024-11-04
[02:26:46.0659] <Marja HÃ¶lttÃ¤ (not here, use marja@google.com)>
> <@jridgewell:matrix.org> A slightly more complex example: https://jsbench.github.io/#7802fbd8f3d46d7fef9d6009e65fd4bd

filed https://issues.chromium.org/u/1/issues/376718269 to track that, thanks for the bug report!


2024-11-05
[20:42:39.0602] <Lea Verou>
Pardon my ignorance on this, are there any current proposals on class mixins? This came up in a web components issue

[20:44:44.0940] <Lea Verou>
 * Pardon my ignorance on this, are there any current proposals on class mixins? This came up in a web components issue (around custom attributes)

[23:52:00.0045] <Ashley Claymore>
I thought there were only stage 0 ones, nothing on a later stage afaik
https://github.com/tc39/proposal-mixins

[23:52:51.0762] <Ashley Claymore>
* There's this one: https://github.com/tc39/proposal-mixins

[00:16:10.0643] <Michael Ficarra>
mixins would be harmful IMO

[00:31:56.0034] <Ashley Claymore>
Above slides are from https://github.com/tc39/proposal-first-class-protocols (I assume)

[03:51:06.0927] <ljharb>
+1 https://legacy.reactjs.org/blog/2016/07/13/mixins-considered-harmful.html

[08:07:52.0001] <Michael Ficarra>
mixins: not even once

[08:11:06.0361] <Lea Verou>
Thanks Ashley Claymore ! ljharb haha, I suspected there would be strong opinions, I have some of my own too, might write a blog post at some point

[08:12:04.0034] <Michael Ficarra>
@leaverou:matrix.org share a link if you do

[08:12:48.0336] <Lea Verou>
Will do, though I suspect it will be a while before I get to it. There's a backlog of blog posts I want to write :P 

[08:17:25.0316] <ryzokuken>
The JS devroom in FOSDEM has opened their CFP! https://pretalx.fosdem.org/fosdem-2025/cfp

[08:51:06.0744] <Chris de Almeida>
wen protocols

[09:10:07.0413] <Michael Ficarra>
@softwarechris:matrix.org if you can drum up and/or demonstrate community support, I'll put time into it

[09:10:35.0491] <Michael Ficarra>
right now, I'm focussing on more popular proposals

[09:11:04.0418] <Chris de Almeida>
am I not community enough for you?  ðŸ˜¢

[09:11:17.0288] <Michael Ficarra>
... no

[09:11:20.0179] <Chris de Almeida>
lol

[09:11:48.0030] <littledan>
> <@michaelficarra:matrix.org> right now, I'm focussing on more popular proposals

I'm curious how you judge this

[09:12:06.0244] <Chris de Almeida>
> <@littledan:matrix.org> I'm curious how you judge this

coconut vibes, surely

[09:13:25.0708] <Michael Ficarra>
> <@littledan:matrix.org> I'm curious how you judge this

things that I see people talking about, that get a lot of attention on social media and from blog posts

[09:14:02.0073] <Michael Ficarra>
I've been working a lot on iterator-related proposals because, aside from me personally finding them useful, they are both viable and always get a lot of positive reactions from the community

[09:14:14.0252] <Michael Ficarra>
not too many things in that overlap

[09:33:28.0366] <ljharb>
i think protocols is something lots of people would be excited about, but it's had no movement in like 6 years

[09:33:54.0832] <ljharb>
people are pretty excited about signals and protocols feel even more broadly applicable than signals

[09:40:38.0845] <Anthony Bullard>
Signals have a lot of energy around them because of the positive impact they are having on nearly all front end frameworks (sans React).  I dont know how many individual application-level problems protocols would solve in the eyes of the bulk of developers.

This is why I discussed the importance of interfacing with the community during the proposal process, doing so will probably increase the quality of the proposal and uncover questions that may not have been asked - and earlier.

