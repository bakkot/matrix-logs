2022-02-02
[09:21:16.0351] <ljharb>
bakkot: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (`class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])` throws, eg)

[09:26:45.0276] <Ashley Claymore>
I should of added unit tests to the deck https://docs.google.com/presentation/d/1-Hp4Qd0mmdufYCwI9fTdCxgt4xEHqE1mPfqRxzuzMvc/edit#slide=id.g10d8b1925be_0_0

[09:28:47.0347] <bakkot>
ljharb: possibly; michael and I looked into it and even people who are subclassing Map usually also override the ctor

[09:29:10.0415] <ljharb>
seems like it'd be a win for normal collection usage as well as potential future methods/subclassing

[09:29:43.0786] <bakkot>
and it's not just private fields; even in plain es6 style, if your `add` method depends on fields added by the constructor it's not going to work

[09:29:52.0124] <bakkot>
no idea why we thought this was a good idea

[09:38:58.0057] <Ashley Claymore>
https://twitter.com/basarat/status/557680386042765312

