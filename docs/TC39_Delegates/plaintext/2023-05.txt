2023-05-02
[09:24:08.0967] <Mathieu Hofman>
> <@littledan:matrix.org> We definitely could have done accessors for fields. It would have certain advantages and disadvantages. I am also very confident that, if we did that, people would have said “this has lots of footguns, look this basic code doesn’t work as expected”

enumerability of accessors is likely one of those footguns on the other side.

[09:24:23.0265] <Mathieu Hofman>
> <@littledan:matrix.org> We definitely could have done accessors for fields. It would have certain advantages and disadvantages. I am also very confident that, if we did that, people would have said “this has lots of footguns, look this basic code doesn’t work as expected”

 * non-enumerability of accessors is likely one of those footguns on the other side.


2023-05-03
[05:22:11.0137] <nicolo-ribaudo>
Could I get push access to https://github.com/tc39/proposal-json-modules, to "rebase" it on top of the updated import attributes proposal?

[10:05:16.0190] <bakkot>
PSA: deadline for advancement eligibility is in slightly less than two days

[10:05:33.0890] <bakkot>
for the May meeting

[10:05:34.0789] <bakkot>
(also the link to the countdown timer in the agenda is broken)

[10:15:26.0101] <Michael Ficarra>
fixed the link

[12:39:47.0128] <bakkot>
who owns `tc39.es`? did someone mess with the DNS settings recently? looks like the subdomain we were using for PR previews is gone

[12:42:17.0460] <shu>
Registrant	Ecma International


[12:42:21.0385] <shu>
fascinating

[12:42:40.0523] <bakkot>
/facepalm

[12:43:02.0021] <bakkot>
we could and maybe should switch to just using github pages, I guess

[12:43:44.0620] <shu>
also interesting that `.es` has no whois server

[12:43:46.0706] <bakkot>
(which would solve the problem by not being a subdomain, to be clear)

[12:58:10.0517] <nicolo-ribaudo>
The DNS has been recently transferred to Ecma, there is some discussion in #tc39-website:matrix.org

[13:00:24.0200] <shu>
Ecma does not have a good track record of having working technical infrastructure

[13:00:30.0915] <shu>
why... was that done

[13:05:52.0161] <Rob Palmer>
The DNS was metered.  Aki's bill rose dramatically following a DDoS attack.  We asked Ecma to switch to unmetered DNS.

[13:06:09.0830] <Rob Palmer>
s/bill/cheque for US folk

[13:06:56.0659] <bakkot>
I was not aware that it was possible for DNS to be metered

[13:07:01.0350] <Rob Palmer>
 * s/bill/check for US folk

[13:07:16.0357] <Rob Palmer>
AWS have more ways of making money than you may imagine.

[13:09:23.0366] <shu>
wow

[13:09:36.0990] <shu>
i'm learning a lot, all of it unpleasant

[13:18:06.0387] <Aki>
Lol my bill went from 1¢/month to… I haven’t checked in a minute. It was like $40 last I checked but on its way to $100 if traffic continued.

[13:35:20.0149] <bakkot>
$100 of dns queries is a distressing amount of dns queries

[15:26:06.0080] <Chris de Almeida (OoO until 05-14)>
bakkot: probably my fault. I must've missef a non-AWS A record. just let me know and I can add it

[15:26:16.0647] <Chris de Almeida (OoO until 05-14)>
* bakkot: probably my fault. I must've missed a non-AWS A record. just let me know and I can add it

[15:26:28.0976] <Chris de Almeida (OoO until 05-14)>
* bakkot:  probably my fault. I must've missed a non-AWS A record. just let me know and I can add it

[16:03:48.0054] <ljharb>
> <@softwarechris:matrix.org> bakkot:  probably my fault. I must've missed a non-AWS A record. just let me know and I can add it

it's the `ci.tc39.es` record, if you still can find the original ones

[16:04:50.0868] <ljharb>
> <@nicolo-ribaudo:matrix.org> Could I get push access to https://github.com/tc39/proposal-json-modules, to "rebase" it on top of the updated import attributes proposal?

done

[16:32:14.0111] <Chris de Almeida (OoO until 05-14)>
good to go


2023-05-04
[05:41:50.0218] <dminor>
Rob Palmer: Hi! A colleague from a different team at Mozilla just asked me about attending the upcoming plenary as an observer. Is there any process that needs to be followed for that, or can they just show up?

[05:42:54.0733] <ryzokuken>
I think just notifying on the reflector thread should suffice

[06:47:08.0279] <Rob Palmer>
The July plenary meeting is coming up and it scheduled to be in Bergen, Norway!

- https://github.com/tc39/Reflector/issues/471

Please fill out [the interest survey](https://github.com/tc39/Reflector/issues/471) by Wednesday so that we can predict attendance numbers and make a call on whether it will be hybrid or remote-only.

[07:22:24.0602] <littledan>
Do we have an issue tracking the details of the June plenary? I was having trouble finding one.

[08:01:25.0808] <Rob Palmer>
We have [the May plenary](https://github.com/tc39/Reflector/issues/470) next.

[15:39:48.0012] <shu>
is there some canonical example somewhere of "promise ticks are observable"?

[15:41:07.0232] <bakkot>
shu: 
```
(async () => {
  for (let i = 0; i < 100; ++i) {
    console.log(i);
    await 0;
  }
})();
// other stuff here
```

[15:41:25.0948] <bakkot>
order in which the `console.log`s fire relative to other effects in other stuff is observable

[15:41:36.0588] <bakkot>
that said engines are wildly inconsistent in a lot of cases so like

[15:41:40.0306] <bakkot>
don't worry too much about it

[15:41:45.0708] <bakkot>
users certainly shouldn't

[15:48:10.0489] <shu>
thanks


2023-05-05
[21:11:16.0451] <Mathieu Hofman>
I certainly hope the number of ticks is not something programs are not sensitive to since we have the faster promise adoption proposal that would likely change that.

[23:58:07.0973] <justingrant>
Are there normally automated Chinese-language spambots commenting in the tc39/proposals repo? I just posted an [issue](https://github.com/tc39/proposals/issues/470) there and got two Chinese-language responses within 4 minutes. General question: what's the normal process for dealing with spam comments in TC39 repos?

[23:59:40.0705] <justingrant>
 * Are there normally spambots commenting in the tc39/proposals repo? I just posted an [issue](https://github.com/tc39/proposals/issues/470) there and got two Chinese-language responses within 4 minutes. General question: what's the normal process for dealing with spam comments in TC39 repos?

[00:21:14.0774] <littledan>
What I have assumed in the past is that everyone with the appropriate permissions can simply delete spam comments without needing special permission (unlike bad behavior, best referred to the code of conduct committee). If they are persistent, you can escalate to the CoC committee or any chair to get a ban out in place.

[08:12:56.0041] <ljharb>
let’s not delete things since that leaves no record; certainly hide them as spam tho

[15:19:30.0652] <jschoi>
I’m a delegate of Indiana University but I’ll be leaving in June. I’m co-champion on several proposals, I’m interested in continuing to participate in TC39 afterwards – e.g., as an invited expert. What should I do to start that process?

[15:19:40.0806] <jschoi>
 * I’m a delegate of Indiana University but I’ll be leaving in June. I’m co-champion on several proposals, and I’m interested in continuing to participate in TC39 afterwards – e.g., as an invited expert. What should I do to start that process?

[15:30:09.0987] <ljharb>
jschoi: the https://github.com/tc39/Admin-and-Business/blob/main/.github/ISSUE_TEMPLATE/delegate-to-invited-expert.md issue template points to https://www.ecma-international.org/invited-expert-form/ for you to fill out - so i think if you fill that out and file an issue that'd kickstart the process?

[15:32:14.0963] <Michael Ficarra>
jschoi: I've been trying to reach you regarding `Array.fromAsync`

[15:32:27.0201] <Michael Ficarra>
I've added a topic to the upcoming plenary's agenda about it

[15:32:28.0384] <Michael Ficarra>
see https://docs.google.com/presentation/d/1mww3D5CO1uebUYiK7l8O5GLjUR98NJYgeHGxQEgnrNA/edit#slide=id.g23957a99532_0_0


2023-05-06
[17:22:57.0470] <jschoi>
> <@michaelficarra:matrix.org> jschoi: I've been trying to reach you regarding `Array.fromAsync`

My apologies for being lost to contact; I’ve been swamped with internal work over the past months. I will read this issue tomorrow and reply to you there.

[20:06:10.0023] <jschoi>
> <@michaelficarra:matrix.org> jschoi: I've been trying to reach you regarding `Array.fromAsync`

 * My apologies for being lost to contact; I’ve been swamped with internal work over the past months. I will read this issue tomorrow and reply to you privately.


2023-05-07
[12:28:55.0591] <Rob Palmer>
Hey all, a reminder that the Interest Survey for the July plenary in Norway is now up.

It takes 30 seconds to add yourself. Even if you plan to dial in, that information is useful.

Thank you to the 14 people who have already provided their intentions.

https://github.com/tc39/Reflector/issues/471


2023-05-08
[18:59:43.0488] <snek>
anyone gonna be at gamescom?

[11:20:02.0363] <littledan>
Orama is allowed to attend the TC39 plenary next week, right?

[13:21:11.0130] <Michael Ficarra>
littledan: (RE `Array.prototype.group`) I think the answer to "how do we choose web-compatible `Array.prototype` method names?" is obvious but we just don't want to accept it: stop trying to choose good names

[13:22:11.0055] <littledan>
Michael Ficarra: There's something in common with the `group` name as the previous `global` name: people searched for the name and found too many results, so it was too much to look through, and they sort of assumed it was compatible (but without reporting all of that logic to the committee in advance). In the future, if a search yields that sort of result, I think the next step is to choose something else.

[13:22:14.0358] <littledan>
so, I agree

[13:22:16.0769] <Michael Ficarra>
bad/verbose names are much less risky, but we *want* the name to be good, so we take the risks anyway

[13:23:23.0362] <littledan>
I think for Array methods in particular, we should just use things that we can demonstrate to be pretty unique

[13:23:34.0761] <littledan>
Array methods have been found to be uniquely risky unlike anything else

[13:23:43.0514] <Michael Ficarra>
yes, we need an especially high bar for Array prototype method names

[13:24:08.0180] <Michael Ficarra>
evidence of compatibility, not just lack of evidence of incompatibility

[13:24:50.0777] <littledan>
well, I'd like that if someone could provide it, but I'm not sure what such evidence would look like

[13:25:03.0673] <littledan>
what advice would you give to a new delegate who wants to take on the Array grouping project?

[13:25:47.0391] <Michael Ficarra>
a *new* delegate? "don't"

[13:26:09.0840] <littledan>
OK, then, an experienced delegate--what would you tell them to do?

[13:26:14.0839] <Michael Ficarra>
"hi I'm new here, let me try to solve this override mistake for y'all"

[13:27:01.0787] <Michael Ficarra>
if code search can show a name is effectively nonexistent on the web, that would be good evidence

[13:27:20.0568] <Michael Ficarra>
that would probably necessitate a pretty terrible name choice though

[13:27:51.0263] <littledan>
previously people tried GitHub code search and found results which initially appeared to be stronger support than what was ultimately shown

[13:28:12.0802] <littledan>
Let's try to give actionable advice to champions here (or declare bankruptcy on Array methods and just not do them)

[13:28:36.0645] <Michael Ficarra>
if they wanted to straddle the middle, they would have to do something like collect/analyse usage info in a large-ish browser

[13:29:08.0332] <Michael Ficarra>
yeah, GitHub code search should not be considered sufficient, most code is not OSS

[13:29:26.0279] <littledan>
people always say "analyze usage in a browser" but that doesn't really seem to be available in practice

[13:29:44.0031] <littledan>
I dunno if it ended up playing a role in `global` with some kind of work with Edge, but I haven't heard of it being used since

[13:30:07.0982] <littledan>
this is more awkward than adding other kinds of telemetry/usecounters since it's a property that doesn't exist

[13:32:21.0087] <Michael Ficarra>
may be awkward, but I don't see why it couldn't be done (by someone with the authority to ship in said browsers)

[13:32:53.0314] <littledan>
I just don't know how to do it (and I've contributed code which shipped in browsers after stopping working directly for one)

[13:33:11.0072] <littledan>
maybe you see a way to do it that I don't?

[13:34:43.0425] <littledan>
like, it'd be too slow to replace Array.prototype with a Proxy or something

[13:36:17.0025] <Michael Ficarra>
I was thinking a magic property like `document.all` which appeared not there but reported a use counter when assigned/defined

[13:36:23.0023] <Michael Ficarra>
I'm not talking about an existing facility here

[13:37:03.0141] <Michael Ficarra>
`Array.prototype.length` is already magical

[13:37:33.0435] <littledan>
I think property access on `Array.prototype` has to be faster than property access on `document`. And the magic of `length` is baked into a lot of places and difficult to replicate.

[13:38:17.0936] <littledan>
Anyway, if we want to call a pause on Array methods until someone puts in the work to do this very strong dynamic analysis, that's a conclusion we could come to, we should just expect this to take a long time.

[13:40:28.0718] <Michael Ficarra>
I'm personally okay with either approach: raise the bar so we can confidently ship come stage 3, or move to stage 3 with an unknown name, accepting that we may need to unship and retry with a new name an unbounded number of times before moving to stage 4

[13:40:49.0313] <Michael Ficarra>
browser implementors may have a different opinion though

[13:41:18.0906] <littledan>
yeah it'd be nice if we could find some strategy where the champion can be the one doing the work, rather than just implementers. Maybe some kind of search in HTTPArchive?

[13:49:54.0963] <shu>
> people always say "analyze usage in a browser" but that doesn't really seem to be available in practice

most definitely not scalable

