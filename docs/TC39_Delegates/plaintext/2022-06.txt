2022-06-05
[10:23:15.0358] <Rob Palmer>
As a reminder, tomorrow's plenary meeting is on CDT time, meaning UTC-5.  All meeting details are on the Reflector.

https://github.com/tc39/Reflector/issues/430


2022-06-06
[06:50:36.0470] <Rob Palmer>
Another reminder:  Plenary begins in 70mins!

[07:50:27.0098] <ryzokuken>
10 minutes!

[07:59:06.0430] <Rob Palmer>
1 minute until plenary!

[08:02:05.0490] <Rob Palmer>
We have 20 people attending so far

[08:03:07.0092] <yulia | PTO>
hey folks -- i am double booked this morning for the first hour

[08:03:22.0056] <yulia | PTO>
if there are any questions for mozilla, Dan Minor will be present from mozilla -- and I will join after

[08:03:28.0477] <yulia | PTO>
 * if there are any questions for mozilla, Dan Minor will be present from mozilla -- and I will join after

[08:04:08.0646] <littledan>
I'm going to be absent today and joining tomorrow. The schedule looks fine for me, but I'd like to be present during the second time discussing ShadowRealms. Sorry for this information coming late.

[08:04:21.0731] <littledan>
I'm excited to be back!

[08:58:01.0127] <mpcsh>
do we have a draft schedule hackmd?

[08:59:19.0093] <Rob Palmer>
it's linked in the Reflector post

[08:59:24.0424] <snek>
should i see something right now

[08:59:24.0634] <Rob Palmer>
(don't post here)

[09:09:35.0333] <mpcsh>
aha! had to refresh. thank you

[09:20:47.0532] <bakkot>
shu: can you capture the behavior which got consensus in the notes? not just "the pr" but a short summary, in case we find bugs in the PR or whatever

[09:22:33.0268] <shu>
yes, after this item

[09:23:55.0545] <Michael Ficarra>
I always love Justin's presentations, they are very clear

[09:32:56.0630] <bakkot>
snek: one of the possible solutions is to do the same thing as the `await` fast-path, which actually never gets `.then` at all

[09:33:22.0287] <bakkot>
(it just checks IsPromise and `.constructor`, and then assumes `.then` is the built-in `Promise.p.then`)

[09:34:10.0320] <snek>
did you mean to ping me

[09:35:01.0711] <Jack Works>
> <@bakkot:matrix.org> (it just checks IsPromise and `.constructor`, and then assumes `.then` is the built-in `Promise.p.then`)

can we really do that? I think there definitely someone overwriting `then` on the Promise instance...

