2024-08-01
[20:24:52.0465] <ljharb>
> <@jridgewell:matrix.org> Iâ€™m not sure theyâ€™re different from the userâ€™s point of view.

of course there are; `import type` vs `import`, "what gets stripped" vs "what doesn't", etc

[20:24:55.0420] <ljharb>
> <@jridgewell:matrix.org> Iâ€™m not sure theyâ€™re different from the userâ€™s point of view.

 * of course they are; `import type` vs `import`, "what gets stripped" vs "what doesn't", etc

[20:25:21.0311] <ljharb>
i would be surprised if any user actually didn't understand that typescript wasn't what runs in the actual application

[22:47:23.0604] <sffc>
About Decimal and primitives, littledan's logic makes a lot of sense to me. If we were to have decimals as a primitive, they would need to be normalized (no quantum). However, the champions have presented rationale for why decimals should retain their quantum. Therefore, Decimals should be objects, not primitives.

This logic flows completely independently from any argument about whether or not engines may eventually change their position on decimals being a new primitive.

[00:55:36.0635] <Luca Casonato>
> <@ljharb:matrix.org> i would be surprised if any user actually didn't understand that typescript wasn't what runs in the actual application

Youâ€™d be surprised ðŸ˜ƒ

[01:14:31.0235] <Rob Palmer>
In the old days, folk learned JS before they learned TS, so had a strong mental model of the difference.

Nowadays many people learn TS first (or at least, it's not sequenced).

And we have runtimes with built-in support, further hiding the difference.

[10:42:04.0754] <ljharb>
are most of those newcomers using those alternative runtimes tho?

