2023-04-01
[18:26:35.0385] <Chris de Almeida>
https://github.com/tc39/how-we-work/issues/94

‚òùÔ∏è üö®  important calendar info  üö® ‚òùÔ∏è

[18:26:50.0945] <Chris de Almeida>
 * https://github.com/tc39/how-we-work/issues/94#issuecomment-1492775885

‚òùÔ∏è üö®  important calendar info  üö® ‚òùÔ∏è


2023-04-03
[22:08:13.0803] <ljharb>
ES2023: https://github.com/tc39/Reflector/issues/466

[16:03:42.0565] <shu>
Michael Ficarra: did you intend step 5 of https://tc39.es/proposal-iterator-helpers/#sec-iteratorprototype.reduce to be "not present", as in an arguments length check? it is consistent with Array.prototype.reduce, but is generally weirder than just checking for undefined nowadays

[16:06:41.0132] <Michael Ficarra>
hmm, yeah it seems like the right call, as that's how we distinguish two pretty radically different behaviors

[16:07:27.0736] <Michael Ficarra>
reduce can either be passed the initial memo (which is perfectly reasonable to be `undefined`) or it can assume the structure is non-empty and use the first element as the initial memo

[16:07:52.0971] <Michael Ficarra>
I think a presence check is the only thing we can do short of separating `reduce` and `reduce1`

[16:07:59.0791] <shu>
ah good point, undefined is a good initial value, so the only choice here is an arguments length check

[16:08:03.0593] <shu>
thanks


2023-04-04
[17:13:30.0800] <TabAtkins>
Yeah, reduce() def needs the presence check rather than undefinedness.

[18:33:10.0051] <Michael Ficarra>
shu: FYI there's another 2 iterator helper topics added to the May agenda

[18:33:23.0766] <Michael Ficarra>
they're some minor inconsistencies that I discovered while working on the tests

[18:34:12.0075] <Michael Ficarra>
the slides should be self-explanatory

[18:45:19.0695] <shu>
do they really need 30 minutes each

[18:47:36.0715] <Michael Ficarra>
hopefully not

[18:51:29.0580] <Michael Ficarra>
does anyone remember a discussion about whether `const [] = { [Symbol.iterator]() { return {}; } };` (a malformed iterator that never gets iterated) should throw?

[18:51:39.0298] <Michael Ficarra>
I vaguely remember Justin Ridgewell being involved I think

[18:53:37.0986] <Michael Ficarra>
bakkot found it! https://github.com/tc39/ecma262/pull/1288#issuecomment-424457388

[18:53:38.0759] <Justin Ridgewell>
We discussed whether a malformed iterator would close the underlying

[18:55:46.0820] <Michael Ficarra>
notes: https://github.com/tc39/notes/blob/main/meetings/2018-09/sept-25.md#normative-use-getmethod-instead-of-getv-to-get-iterator-next

[19:25:41.0388] <bakkot>
had not encountered this particular downside of floats

[19:26:05.0540] <bakkot>
though it's of course an instance of a the same problem as all the other things we've been discussing lately

[19:26:18.0017] <bakkot>
 * though it's of course an instance of the same problem as all the other things we've been discussing lately

[19:26:32.0678] <bakkot>
(this example is from https://speleotrove.com/decimal/decifaq.html about why a Decimal type is warranted)

[05:29:12.0624] <littledan>
I'm curious what you're trying to do. I got the feeling that the committee as a whole wasn't totally convinced that decimal was actually a general-purpose, useful thing, as opposed to something very specialized.

[05:29:38.0424] <littledan>
 * I'm curious what you're trying to do that made you run into this--was it just researching decimal, or do you have a specific application? I got the feeling that the committee as a whole wasn't totally convinced that decimal was actually a general-purpose, useful thing, as opposed to something very specialized.

[07:50:12.0199] <bakkot>
finally got around to reading the FAQ linked during the discussion, which has this example

[07:50:47.0986] <bakkot>
I didn't actually run into it in real life

[08:29:51.0068] <littledan>
ah OK. Yeah I really enjoyed the FAQ.


2023-04-05
[10:58:49.0467] <Justin Ridgewell>
Can someone invite me to the TC39/JavaScript tools discussion? I missed the meeting today because Calendar doesn't send notifications for shared meetings, only ones I'm invited to.

[11:01:07.0154] <Michael Ficarra>
littledan manages it

[11:01:36.0247] <littledan>
actually Romulo Cintra does these days

[11:02:21.0416] <littledan>
Use this contact form: https://forms.gle/rSNWHknikVSpGHmD6


2023-04-06
[23:33:06.0461] <bakkot>
updated the base64 proposal and added a playground. would love feedback on the design (and the contents of the playground, the design of which I ripped off wholesale from temporal) https://tc39.github.io/proposal-arraybuffer-base64/

[23:51:49.0914] <bakkot>
 * updated the base64 proposal and added a playground. would love feedback on the proposal API (and the contents of the playground, the design of which I ripped off wholesale from temporal) https://tc39.github.io/proposal-arraybuffer-base64/

