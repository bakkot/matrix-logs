2024-07-01
[09:11:20.0025] <Chris de Almeida>
reviewers need write access if you want the green check mark / meet the requirements for reviewer merge approval if desired

[10:40:21.0294] <Rob Palmer>
The interest survey for TC39 Plenary in Tokyo in October is posted ðŸŽ‰

- [Interest Survey link](https://github.com/tc39/Reflector/issues/534) ðŸ‡¯ðŸ‡µ

Please respond by Tuesday 9th July. It only takes ~45s to complete.

[10:40:44.0653] <Rob Palmer>
* The interest survey for TC39 Plenary in Tokyo in October is posted ðŸŽ‰
Interest Survey link ðŸ‡¯ðŸ‡µ
Please respond by Tuesday 9th July. It only takes ~45s to complete.


[10:41:15.0849] <Rob Palmer>
* The interest survey for TC39 Plenary in Tokyo in October is posted ðŸŽ‰

- [Interest Survey link](https://github.com/tc39/Reflector/issues/534) ðŸ‡¯ðŸ‡µ

Please respond by Tuesday 9th July. It only takes ~45s to complete.


2024-07-05
[20:38:47.0429] <bakkot>
not immediately relevant to JS as a language, but the JS promise integration for wasm is an interesting project worth reading about I think https://v8.dev/blog/jspi 

[00:02:43.0671] <Rob Palmer>
This looks like automatic conditional `await` of exported Wasm functions without user intervention. Meaning the JS caller does not need to be an async function, and calls the Wasm function as if it were sync.

If this is true, does it means that we have solved JS sync functions calling JS async function in a sync manner? Because you just need to insert a thin layer of Wasm between them.

[00:23:03.0718] <nicolo-ribaudo>
You still need to await the Wasm function on the JS side. It's implicit only on Wasm.

See `promise_update` in https://github.com/WebAssembly/js-promise-integration/blob/main/proposals/js-promise-integration/Overview.md

[00:23:17.0059] <nicolo-ribaudo>
* You still need to await the Wasm function on the JS side. It's implicit only in Wasm.
See promise_update in https://github.com/WebAssembly/js-promise-integration/blob/main/proposals/js-promise-integration/Overview.md


[08:45:40.0252] <Rob Palmer>
The interest survey for TC39 Plenary in Tokyo in October is posted  ðŸŽ‰

- [Interest Survey link](https://github.com/tc39/Reflector/issues/534) ðŸ‡¯ðŸ‡µ

Of 25 replies we have 19 people categorized as likely or certain - which is great progress.  Please respond by Tuesday 9th July. It only takes ~45s to complete.


2024-07-08
[08:18:33.0303] <mgaudet>
I was sad to miss Jaakko JÃ¤rvi's talk at the TG5 meeting before Helsinki (https://github.com/tc39/Reflector/issues/528) -- is there any slides/notes from there that I could follow up with? 

[08:21:32.0137] <Michael Ficarra>
@mgaudet:mozilla.org There were slides, and you'd probably be interested in them. You should send an email to his university email (jaakko.jarvi@utu.fi) for them. The notes are... very light: https://github.com/tc39/tg5/pull/10/files

[08:23:29.0456] <mgaudet>
Thank you for the pointers! 

[10:54:57.0299] <Mikhail Barash>
> <@mgaudet:mozilla.org> I was sad to miss Jaakko JÃ¤rvi's talk at the TG5 meeting before Helsinki (https://github.com/tc39/Reflector/issues/528) -- is there any slides/notes from there that I could follow up with? 

Iâ€™ll ask Jaakko to share the slides 

[10:55:10.0315] <mgaudet>
(I sent him an email already too :) ) 

[10:56:48.0345] <Mikhail Barash>
> <@mikbar-uib:matrix.org> Iâ€™ll ask Jaakko to share the slides 

You mean the C++ talk? Or the slides on HotDrink?

[10:56:53.0951] <mgaudet>
the C_

[10:56:58.0528] <mgaudet>
 * the C++ talk 

[11:07:09.0996] <Mikhail Barash>
> <@michaelficarra:matrix.org> @mgaudet:mozilla.org There were slides, and you'd probably be interested in them. You should send an email to his university email (jaakko.jarvi@utu.fi) for them. The notes are... very light: https://github.com/tc39/tg5/pull/10/files

notes were not taken during Jaakko's talk on C++, as that part of the TG5 Workshop wasn't formally under Ecma's IPR policy...


2024-07-11
[03:34:51.0060] <Rob Palmer>
Hello delegates,

The TC39 Plenary meeting in Tokyo in October is [confirmed](https://github.com/tc39/Reflector/issues/534#issuecomment-2222579237) ðŸŽ‰

The invite will be posted shortly.


2024-07-14
[14:23:25.0485] <ljharb>
are there any hotel recs for Tokyo yet? (also a matrix channel for attending delegates?)

[15:36:45.0869] <Rob Palmer>
Not yet. I am working on it. 


2024-07-17
[22:35:38.0874] <Ashley Claymore>
https://workspaceupdates.googleblog.com/2024/07/import-and-export-markdown-in-google-docs.html?m=1
ðŸ‘€ we might be able to stop fighting docs when taking notes and use actual bullet points 


2024-07-19
[09:39:36.0296] <Chris de Almeida>
We have passed the agenda deadline, but please add any late-breaking items you may have.

Please indicate on the agenda if there is any possibility that you will ask for stage advancement.

Also, please add any schedule constraints as soon as possible.


2024-07-26
[09:14:04.0758] <Rob Palmer>
Tokyo invite for October is posted:  https://github.com/tc39/Reflector/issues/537

[14:51:39.0165] <Chris de Almeida>
Draft schedule is up:
https://hackmd.io/6dSbhC_RRBuR0-8vZDh7Mg?view


2024-07-27
[06:50:02.0087] <nicolo-ribaudo>
> <@softwarechris:matrix.org> Draft schedule is up:
> https://hackmd.io/6dSbhC_RRBuR0-8vZDh7Mg?view

Nice we get a whole free day


2024-07-29
[08:59:09.0806] <shu>
it's T-1 hours and still no VC link?

[09:14:10.0653] <Michael Ficarra>
@shuyuguo:matrix.org VC link is up now

[09:19:27.0646] <snek>
we have to sign into webex?

[09:19:44.0150] <Chris de Almeida>
 * Draft schedule is up:
https://github.com/tc39/Reflector/issues/536

[09:19:51.0543] <Chris de Almeida>
no

[09:21:06.0084] <snek>
oh i see. the screen saying sign in with existing account got me ðŸ˜„

[09:22:55.0071] <Chris de Almeida>
and you don't have to use the app either -- you can use browser 

[09:48:45.0327] <Rob Palmer>
The meeting will begin in 11 minutes.  There are seven of us in the call now.

[09:48:58.0636] <Aki>
i'm here! hi!

[09:49:09.0591] <Aki>
i'm in the self-imposed lobby bc i'm on the phone

[09:49:43.0302] <Rob Palmer>
Is the lobby music good?  Do you need any any help progressing?

[09:50:17.0082] <Aki>
lol thank you webex, i noticed: https://snaps.akiro.se/2407_ua0hr.jpg

[09:50:59.0140] <snek>
could just have the meeting in the lobby

[09:57:11.0856] <Rob Palmer>
3 minutes... encounting

[09:57:46.0769] <Aki>
_encounting_ ?

[09:58:53.0979] <Rob Palmer>
(I will find you the relevant movie clip soon)

[10:03:41.0690] <snek>
rob you're roboting a lot

[10:04:34.0825] <snek>
 maybe turn your video off?

[10:10:18.0185] <Rob Palmer>
I am getting a new router delivered tomorrow.

[10:17:09.0413] <shu>
my webex cuts out for like 5s every 2 mins or so

[10:17:22.0991] <shu>
i wonder if it's a web version problem or a corp wifi problem...

[10:17:23.0999] <jkup>
Wow 4 new members ðŸš€

[10:18:33.0982] <snek>
i think its a web version problem

[10:20:05.0012] <shu>
i don't want to install the native client but all right

[10:40:35.0160] <kriskowal>
But we can say, Welcome Back *Editor* Ben.

[10:41:07.0699] <Michael Ficarra>
Chip had me in the first half

[10:41:31.0078] <shu>
i got a new coin you gotta hear about then

[10:52:33.0228] <nicolo-ribaudo>
fomo

[10:54:52.0541] <nicolo-ribaudo>
I wanted to say something funny but my mic is not working

[10:54:57.0383] <nicolo-ribaudo>
Thanks everybody!

[10:55:15.0149] <nicolo-ribaudo>
Somebody say that I say thanks :P

[11:13:11.0455] <peetk>
should there be a `String.prototype.chars` for when you really do want to iterate over a string's characters

[11:13:52.0376] <bakkot>
"characters" is a wildly overloaded term

[11:14:05.0275] <bakkot>
there should be a `String.prototype.codepoints` to iterate over a string's codepoints

[11:14:24.0889] <bakkot>
I'm less convinced of a `.graphemes` because that's a 402 thing but it could perhaps be done

[11:14:51.0478] <bakkot>
I am not sure there's any use cases for a `.codeunits` but if you have a strong use case that could be done as well

[11:15:09.0875] <snek>
my brain assumed it would be `.values`

[11:15:27.0411] <snek>
but i guess [Symbol.iterator]() is a better way to spell that

[11:16:58.0301] <peetk>
yea mb i meant codepoints

[11:24:27.0152] <nicolo-ribaudo>
My mic keeps not working in webex even with different browsers and after rebooting ðŸ˜­

[11:28:04.0906] <nicolo-ribaudo>
Oh it works on my ipad

[11:28:06.0444] <nicolo-ribaudo>
Good

[11:28:44.0858] <keith_miller>
When we decide that we want to change the behavior of spec operations like `toFixed` do we comment or rename them to say that they're legacy?

[11:29:47.0166] <keith_miller>
If we don't, would it be worthwhile to do that so we don't accidentally slip in new uses in the future? Or we could have a spec linter rule, idk if such a tool exists?

[11:30:33.0844] <bakkot>
yeah, probably we should rename the existing ones and add new stricter ones

[11:30:42.0416] <bakkot>
or add a "looseness" parameter, I guess

[11:32:10.0572] <littledan>
Are there other changes that we would make to Temporal if we wanted to apply all the conventions?

[11:32:21.0792] <bakkot>
not doing any coercions at all :)

[11:32:29.0498] <bakkot>
which would save a lot of tests, among other things

[11:32:44.0530] <littledan>
I meant for the conventions that we already adopted

[11:32:56.0039] <bakkot>
we already adopted "don't do any coercions"

[11:33:03.0692] <littledan>
Oh right

[11:33:19.0204] <littledan>
I am in favor of applying this to Temporal

[11:34:08.0148] <littledan>
I think it is much more likely that we can apply this change to 402.

[11:34:22.0023] <littledan>
We arenâ€™t talking about 262 overall, just those three methods

[11:35:27.0453] <ptomato>
FWIW for Temporal.Duration we already rejected non-integral inputs because of people putting in values like `Temporal.Duration.from({ hours: 1.5 })` 

[11:37:28.0463] <ptomato>
I'm open to going back and changing other things like `roundingIncrement`, `fractionalSecondDigits`, and `Temporal.PlainDate.from({ year: 2024.5, month: 7.5, day: 29.5 })` to reject non-integral inputs but I'd like us to explicitly approve that now, rather than me coming back to a following meeting with a PR

[11:38:23.0817] <littledan>
> <@pchimento:igalia.com> I'm open to going back and changing other things like `roundingIncrement`, `fractionalSecondDigits`, and `Temporal.PlainDate.from({ year: 2024.5, month: 7.5, day: 29.5 })` to reject non-integral inputs but I'd like us to explicitly approve that now, rather than me coming back to a following meeting with a PR

What about the other conventions?

[11:38:54.0222] <ptomato>
I don't know off the top of my head how much deviation there is from the other conventions, I'd have to check

[11:39:14.0988] <rbuckton>
IMO, it makes sense that year, month, and day require integral inputs, but not hour/minute/second. Given one of the goals of Temporal is to make date and time math easier, not being able to write `Temporal.Duration.from({ hours: 1.5 })` is unfortunate. 

