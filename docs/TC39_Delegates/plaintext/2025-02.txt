2025-02-03
[10:33:34.0590] <nicolo-ribaudo>
Reading through https://news.ycombinator.com/item?id=42876840, it seems like the most wanted proposals are Records&Tuples and pattern matching

[10:59:20.0837] <littledan>
Let's do both of them!

[15:53:29.0839] <Rob Palmer>
It looks like we will get a **Community Event in Seattle** on the evening of **Thursday 20th February.**  Please can folk who are attending volunteer some talks!

- [**Call For Speakers**](https://github.com/tc39/Reflector/issues/550)

SeattleJS are asking us to provide all the content for the evening, so I hope we can deliver lots of exciting talks.


2025-02-05
[17:17:59.0577] <Mathieu Hofman>
Does anyone know why we decided not to look for private fields on the prototype chain of any object? This somewhat came up in 2 different proposal discussions lately: https://github.com/tc39/proposal-class-access-expressions/issues/26 and https://github.com/ljharb/proposal-error-stack-accessor/issues/3 (the latter is for a internal slot but same idea)

[17:21:16.0610] <Mathieu Hofman>
It would likely break a ton of  "brand checks" use cases, but really there isn't an easy way to even create a helper to search the prototype chain as one cannot get a "ref" for the private field.

[17:22:14.0304] <Mathieu Hofman>
* It would likely break a ton of  "brand checks" use cases, but the problem is that there isn't any way to even create a helper to search the prototype chain as one cannot get a "ref" for the private field.

[00:11:46.0608] <Ashley Claymore>
the helper would need to take a callback: `(o) => #p in o`

[06:26:14.0849] <littledan>
It's hard/impossible to truly preserve privacy while also working with prototype chains, especially if you want to stick strictly to object-like semantics and not invent on a new thing. Also, the SES crowd insisted on WeakMap analogy semantics in particular, which has no prototype chain walk.

[08:47:27.0208] <ljharb>
also if it used the prototype chain then they wouldnâ€™t be private fields, theyâ€™d be public ones, because anything can extend anything else at any time

[08:47:38.0688] <ljharb>
* also if it used the prototype chain then they wouldnâ€™t be _private_ fields, theyâ€™d be public ones, because anything can extend anything else at any time

[08:54:50.0475] <littledan>
well, the space of possibilities is large, but yeah we had trouble finding a mechanism that would preserve privacy, have inheritance *and* have a number of other properties that people were interested in

[12:39:40.0329] <Ashley Claymore>
> <@ljharb:matrix.org> also if it used the prototype chain then they wouldnâ€™t be _private_ fields, theyâ€™d be public ones, because anything can extend anything else at any time

And wouldn't have been able to minify them with so much confidence. Local lexical lookup is great for AOT transforms 


2025-02-06
[19:00:39.0895] <Ashley Claymore>

Realising this wasn't about matching other private fields with the same, so the name of the field would all still be local and still minifiable.
it's more that the lookup would have fewer guarantees. Because proxies, walking the proto chain could have side effects and give different answers.
so couldn't assume AOT things like `#p in v === #p in v`

[02:02:06.0779] <Mathieu Hofman>
Yeah the fact that looking up a private field cannot trigger any user code is a nice property. Combined with the fact you wouldn't know which object the value came from is probably sufficient reason for this to have been the right choice.


2025-02-07
[07:49:25.0188] <nicolo-ribaudo>
This is super early, however â€” a few of us will be taking the train to go to the A CoruÃ±a meeting in May (mostly from NL and UK). If anybody traveling from somewhere in western Europe wants to join us please write me a message by the end of February :)

[09:55:25.0724] <Rob Palmer>
- **Reminder:**  The Feb 2025 Plenary deadline for Stage Advancement is in 24 hours!


2025-02-11
[17:14:45.0064] <shu>
do i read RegExp.escape correctly that it doesn't care about lone surrogates? it'll just escape them?

[17:28:11.0708] <bakkot>
yeah

[17:28:43.0991] <bakkot>
I don't know if that means "doesn't care" since it does explicitly handle them

[17:29:09.0286] <bakkot>
but it handles them by escaping them

[19:27:13.0806] <shu>
fair. by "doesn't care" i mean it doesn't error out if input is malformed

[19:27:24.0205] <shu>
malformed by having lone surrogates

[21:25:13.0507] <ljharb>
to me yesthat sounds right 

[21:25:18.0614] <ljharb>
* that sounds right to me yes


2025-02-12
[10:06:37.0764] <TabAtkins>
Given that lone surrogates are valid values in JS strings, that seems like the right behavior, rather than erroring.

[13:51:30.0616] <Mikhail Barash>
Reminder: The [TG5 Workshop](https://github.com/tc39/tg5/blob/main/workshops/2025/106.md) will be held on Friday 21st of February, the day after the plenary meeting. It'll be hosted by F5 (same venue as the plenary).
Among other items on the agenda, we'll have a visitor from UCSD to talk about [the MessageFormat study](https://github.com/tc39/tg5/issues/3) and identify other proposals that might benefit from user studies.
Registration link: https://forms.gle/jBn3XguosNwJsScy6


_What is TG5?_

TG5 is a task group of TC39 that:
- conducts scientific studies on proposals, either "commissioned" by TC39 (e.g., MessageFormat study - to be presented at the upcoming workshop in Seattle), or out of self-driven interest with a clear potential to applicability to TC39
- develops methods, approaches, tools to aid understanding / designing / specifying the language (e.g., executable spec, spec formalisms, navigation within the spec, Proposal Management Tool, etc.)
- considers TC39 within the larger ecosystem of programming language design, specification and standardization (e.g., cross-standards research, language drift, decision-making)


2025-02-13
[18:12:46.0535] <Rob Palmer>
Reminder: Please register for SeattleJS on Thursday evening 20th Feb if you wish to attend!

https://lu.ma/s97y24jd

[23:20:35.0923] <Jesse>
ah, thanks for the reminder!


2025-02-14
[07:55:40.0456] <Michael Ficarra>
if anyone would like to join an A/V test call for next week's meeting at 10:00A Pacific (about 2 hours from now), send me a DM

[08:03:30.0517] <Rob Palmer>
^^^one volunteer requested! 

[08:06:39.0601] <Anthony Bullard>
DM sent


2025-02-16
[19:38:53.0854] <Rob Palmer>
In case anyone has not received or accepted the invite, we have a Seattle Matrix channel for in-person logistics. Please say if you would like an invite.


2025-02-17
[14:36:00.0502] <Chris de Almeida>
ðŸ“£ the draft schedule is available on the meeting issue in Reflector:  https://github.com/tc39/Reflector/issues/547


2025-02-18
[17:09:34.0583] <Chris de Almeida>
in case we forget to mention it tomorrow, please do not ever use the `I'm done speaking` button in TCQ.  thank you!

[17:50:52.0350] <rkirsling>
TC39 rule: never stop speaking

[17:53:36.0804] <Jesse (TC39 ðŸ‡ºðŸ‡¸)>
can we remove the button?

[18:07:55.0392] <Chris de Almeida>
https://github.com/bterlson/tcq/pull/68

[22:57:15.0252] <bakkot>
whatever happened to the rewrite?

[02:02:03.0156] <eemeli>
Looks like Christian Ulbrich and Tom Kopp were working on it here at least up until last June: https://github.com/zalari/tcq/pull/7

[08:11:12.0311] <Rob Palmer>
Sign in form with video link will be posted around 9am PT. 

[09:09:54.0431] <keith_miller>
Is there an ETA for the video link? I still don't see one in the reflector.

[09:20:26.0115] <Rob Palmer>
Not quite.  Michael is still setting up AV.

[09:20:31.0334] <keith_miller>
Oh I forgot these start at 10 not 9 lol

[09:21:25.0553] <Rob Palmer>
correct - there is 38 minutes until go time

[09:46:51.0824] <Rob Palmer>
The video link will be posted on the Reflector very soon

[09:51:13.0229] <Rob Palmer>
The video link is now posted via [the Sign-in form on the Reflector!](https://github.com/tc39/Reflector/issues/547)

[10:03:48.0475] <ljharb>
maybe we should add an actual persistent temperature check to tcq

[10:05:02.0268] <canadahonk>
fwiw its PST (-8) not PDT

[10:05:23.0244] <canadahonk>
* fwiw its PST (-8) not PDT (-7)

[10:13:55.0630] <Aki>
SUMMARIES ARE GOOD

[10:13:57.0322] <Aki>
YAY SUMMARIES

[10:24:42.0596] <Rob Palmer>
If anyone would like to be the TC39 Liaison to IETF please let the Chairs know or reach out to Samina directly.

[10:25:12.0932] <ljharb>
* maybe we should add an actual persistent temperature check to tcq (like, physical room temperature)

[10:26:49.0908] <ryzokuken>
we already liason with the W3C i18n WG for TG2

[10:27:04.0603] <ryzokuken>
and some WGs from Unicode for that matter

[10:27:25.0697] <ryzokuken>
* we already keep track of the W3C i18n WG for TG2

[10:27:41.0170] <eemeli>
Only technically, mind. I've a recurring conflict with their call, and Ben has not been able to attend many of their meetings.

[10:29:02.0854] <Chris de Almeida>
please share resources for where folks should go to get involved in TC55 (matrix room, meeting info, etc)

[10:29:18.0637] <canadahonk>
https://wintertc.org

[10:29:48.0229] <canadahonk>
* https://wintertc.org + https://github.com/wintercg/admin

[10:31:23.0385] <Andreu Botella>
matrix room: #wintertc:matrix.org 

[10:32:15.0900] <Aki>
rock and roll

[10:32:54.0572] <nicolo-ribaudo>
Thanks a lot Aki again for all the help with making sure that our technical work follows what Ecma needs

[10:33:25.0987] <canadahonk>
thank you all ECMA folks ðŸ™‡

[10:36:45.0996] <kriskowal>
Youâ€™re audible, Aki 

[10:36:58.0039] <Chris de Almeida>
oh reminder, there should not be notes during this period

[10:37:09.0406] <Chris de Almeida>
so please remove them and/or tell the transcriptionist to pause

[10:37:13.0970] <Chris de Almeida>
* so please remove them and tell the transcriptionist to pause

[10:37:15.0134] <Ashley Claymore>
it has been paused

[10:37:40.0921] <nicolo-ribaudo>
Don't worry, we manage also with you out of the call!

[10:37:43.0068] <Chris de Almeida>
and don't discuss here ðŸ™‚

[10:37:53.0777] <nicolo-ribaudo>
* Don't worry, we do things right also with you out of the call!

[10:38:04.0238] <Chris de Almeida>
of this, I have no doubt ðŸ™‚

[10:38:32.0863] <nicolo-ribaudo>
You can come back

[10:41:12.0539] <ljharb>
can we make sure the transcription bot, and transcription human, have resumed?

[10:41:35.0032] <nicolo-ribaudo>
The human is back and apparently the bot was not running in the first place

[10:42:09.0404] <Aki>
Now that Google Docs has "export as markdown", is it time to update the agenda item template?

[10:45:28.0593] <Chris de Almeida>
say more

[10:47:15.0668] <Aki>
Allows us to use the standard document styles and get markdown as a result https://snaps.akiro.se/2502_ji3bx.png

[10:49:43.0277] <ljharb>
the only reason the notes items are they way they are, afaik, is for ease of markdown conversion, so it seems fine to change them?

[10:50:20.0533] <Chris de Almeida>
suggest validating the quality of the export first

[10:52:19.0640] <Ashley Claymore>
Maybe we could try on Thursday, when the agenda is light. To reduce 'risk' if the formatting needs manual fix up

[10:53:17.0422] <Aki>
I've used the export for notes for other committees

[10:53:20.0055] <Aki>
I'm very happy with it

[10:58:02.0640] <bakkot>
nicolo-ribaudo: re: linking other web specs, I bet we could figure out how to automatically generate ecmarkup-compatible biblios from web specs if we really want to

[10:58:08.0664] <bakkot>
the ecmarkup biblios are very simple

[10:58:29.0584] <shu>
gotta snipe tab into supporting it in bikeshed

[10:58:58.0974] <nicolo-ribaudo>
Right now we just need to link to URL and fetch so doing it manually is probably less effort than making it work automatically, but if we'll need to link to more stuff I'll look into it

[10:59:16.0474] <nicolo-ribaudo>
Currently we also rely on Infra, but as part of the rewrite we are just going to rely on ECMA-262 built-ins instead

[11:11:01.0538] <Ashley Claymore>
One thing we sometimes do is wrap parts of the transcription in backticks, e.g. when someone references `Object.is`.
Do you know if these would carry-through, or would we need to do this by changing the font?

[11:12:06.0283] <Aki>
it escapes them, but that's a very easy search & replace

[11:12:27.0986] <Aki>
y'all have no idea how many regex search & replaces I do on every meeting's notes

[11:13:14.0152] <bakkot>
have you considered just asking an LLM to "make it good" :D

[11:13:28.0899] <Aki>
ðŸ¤®

[11:13:37.0454] <ljharb>
can't wait to find out what lovecraftian horrors end up being stage 4 due to that

[11:17:40.0453] <Michael Ficarra>
somehow I feel much more comfortable trusting the speech-to-text than I do a text transform, and I can't explain why

[11:18:28.0549] <nicolo-ribaudo>
Probably speach-to-text worst case writes nonsense, rather than plausible-looking wrong stuff

[11:18:47.0844] <bakkot>
the trick with text transforms is to have it generate a diff, which you can then easily review for correctness

[11:19:15.0634] <bakkot>
also no, modern speech-to-text definitely writes plausible-looking wrong stuff a lot

[11:19:31.0417] <Aki>
Eggma showed up a lot in the last TC55 meeting

[11:20:01.0761] <nicolo-ribaudo>
https://docs.google.com/presentation/d/1LjsJhdTIP3wgo1odtVa-qbfyGU5M1W9YMm0AtKnJJKk/edit#slide=id.p

[11:20:21.0239] <bakkot>
https://github.com/bakkot/transcribe-to-gdocs/blob/fb863c5a314d078f2a0c60d26cf8774f08dd068a/replacements.js#L35-L46

[11:20:57.0092] <Michael Ficarra>
eggma is a new one lol

[11:21:28.0735] <bakkot>
(though this list was when using google's old speech-to-text; whisper is much better and I hear gemini is better still although I have not yet gotten around to hooking it up)

[11:24:43.0741] <Aki>
eggman

[11:25:35.0267] <Michael Ficarra>
if Whisper wasn't already better than a human transcriptionist (it probably is), Gemini certainly is

[11:26:12.0574] <ljharb>
coo coo ca choo

[11:27:39.0811] <rbuckton>
Oh, I missed this in my constraints. I need to be present for the Decorators discussion, so if it can remain after the lunch break I would appreciate it. I will add this to the agenda as a late breaking constraint

[11:29:40.0942] <Michael Ficarra>
except for 100%, right?

[11:37:40.0576] <canadahonk>
ðŸ¤“ as someone who has tried/done "professional" transcriptions a while ago, I think Whisper is good at speech-to-text but has terrible/no formatting last I looked

[11:39:13.0606] <bakkot>
50% of the human transcriptionists we've hired have actively harmful formatting (double spaces between sentences, linebreaks every few words, etc), so "no formatting" is still superior

