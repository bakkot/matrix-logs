2022-03-11
[00:33:18.0710] <Jack Works>
I presented pattern matching to JSCIG and get some feedbacks

[00:40:29.0351] <Jack Works>
Some feedbacks are about the confusions/bugs in the slides, I have commented on the slide.

[00:40:42.0474] <Jack Works>
The rest are about the proposal design, and I think we can do better

[01:01:08.0179] <Jack Works>
https://github.com/tc39/proposal-pattern-matching/issues/248

[01:03:33.0695] <Jack Works>
other feedbacks are not too formal so I will post it here

[01:04:47.0333] <Jack Works>

Feedback:

```js
when ([ 'go', dir and ('n' or 'e' or 's' or 'w')]):
```

> if I need to write `dir and ('n' or 'e' or 's' or 'w')`, there is no way to extract them out. I have to copy and paste.

[01:10:59.0742] <Jack Works>
Feedback 2: 

Syntax has too much noise in it.

Question: Why a `()` after `when` is required? It's enough to separate LHS and RHS with the `:` we have. (I don't remember why we made that decision so ...)

[01:12:53.0922] <Jack Works>
Feedback 3:

`Symbol.match` and `Symbol.matcher` creates confusion

[01:15:55.0109] <Jack Works>
And the final problem, the current Custom Matcher is too verbose on syntax.

I wish it could be the rbuckton 's unapply form and also bring it to the destructing:

```js
match (val) {
    when (Some(val)): val,
    when (None()): undefined
}
```

And if we have this form, the alternative syntax I proposed in issue #248 will become


```js
match (val) {
    when (NaN): NaN
    default(Magic): console.log("default case with", Magic)
}
```

[01:16:44.0260] <Jack Works>
üôè really want this one, it's much simpler to use

[09:10:41.0752] <ljharb>
Jack Works: we talked about the identifier pattern in a previous meeting that i'm pretty sure you were present for; my last comment on that issue sums it up

[09:11:02.0182] <ljharb>
iow:
```
when ([foo])
```
needs to work, therefore
```
when (foo)
```
must also work

[09:11:34.0533] <ljharb>
> <@jackworks:matrix.org> Feedback 2: 
> 
> Syntax has too much noise in it.
> 
> Question: Why a `()` after `when` is required? It's enough to separate LHS and RHS with the `:` we have. (I don't remember why we made that decision so ...)

it's not enough imo; the parens are a necessary boundary. container characters aren't noise, they're explicit easy-to-tune-out boundary markers.

