2021-12-01
[14:34:58.0591] <mpcsh>
alright y'all, here's the doodle: https://doodle.com/poll/z9343u8623pd4vvd

[14:36:37.0609] <mpcsh>
please indicate your availability! ljharb TabAtkins yulia danielrosenwasser Jack Works

[14:37:29.0564] <mpcsh>
there's quite literally no overlap between our timezones - I tried to pick the least-bad slots, but if folks have objections I can change the poll

[14:42:48.0627] <rkirsling>
yeah I think this hasn't really worked out in that regard

[14:43:20.0483] <rkirsling>
for the whole pandemic it's been as if early morning PT were the only times that exist in the world

[14:44:49.0009] <rkirsling>
even though we've had increased ability to meet at later-than-usual hours

[15:35:57.0427] <ljharb>
yeah basically everyone always claims the PT morning slots for every meeting


2021-12-02
[17:07:39.0431] <mpcsh>
 * please indicate your availability! ljharb TabAtkins yulia danielrosenwasser Jack Works rkirsling 

[10:53:16.0681] <TabAtkins>
PT morning is just the best-of-bad-options for covering the three major timezone regions most people are in. it sucks for everyone

[13:00:01.0996] <mpcsh>
alright with four responses we're down to only one time that's a full green check for everyone, so I'm calling it for tuesday dec 14 from 8:00-10:00am PST. will send a calendar invite shortly

[13:02:55.0571] <mpcsh>
hmm I didn't realize there's plenary on dec 14 starting at 10am PST

[13:03:38.0198] <mpcsh>
ljharb how bad is your yellow check for monday the 6th or 13th? 8-10 PST

[13:17:05.0603] <ljharb>
mpcsh: it's fine on both days except i have a hard stop at 9:30

[13:50:24.0299] <mpcsh>
ok I'm going to send an invite for monday the 6th, and we'll front-load the critical stuff


2021-12-03
[00:49:50.0299] <Jack Works>
> <@mpcsh_:matrix.org> alright y'all, here's the doodle: https://doodle.com/poll/z9343u8623pd4vvd

the earliest one is 0am to 2am in my TZ but still too late for me


2021-12-06
[07:59:19.0943] <Jack Works>
are we going to have a pattern matching call in 1 minute?

[08:02:37.0628] <ljharb>
mpcsh: meeting?

[08:05:31.0201] <mpcsh>
omw!

[08:07:49.0816] <mpcsh>
notes: https://docs.google.com/document/d/1EXUowR6xUVveLreOBCH0LdwB1qbGwUb8XISEgY7uXMo/edit?usp=sharing

[14:25:09.0743] <rkirsling>
pleased to hear that the current proposal is getting leaner

[14:34:47.0444] <mpcsh>
did we reach a conclusion on [216](https://github.com/tc39/proposal-pattern-matching/issues/216) that I should communicate?

[14:36:59.0994] <TabAtkins>
yes, we're going to try for the "cache everything on first access" approach - iterators, but also property accesses, etc

[14:54:14.0156] <mpcsh>
hm, looks like I somehow missed a couple issues when preparing this meeting's agenda. let's have some quick discussions?

[14:54:52.0570] <mpcsh>
[#121](https://github.com/tc39/proposal-pattern-matching/issues/121): `SameValue` vs `SameValueZero`

[14:55:02.0319] <mpcsh>
 * hm, looks like I somehow missed a couple issues when preparing this meeting's agenda. let's have some quick discussions?

[14:55:17.0916] <mpcsh>
 * [#121](https://github.com/tc39/proposal-pattern-matching/issues/121): `SameValue` vs `SameValueZero`

ljharb any new comments here?

[14:55:33.0642] <ljharb>
i'd still prefer it use SameValue

[14:55:46.0131] <ljharb>
we should include that in the presentation as an open question, i think

[14:56:03.0583] <mpcsh>
should I leave the issue open?

[14:57:24.0620] <ljharb>
yes

[14:58:37.0628] <TabAtkins>
I don't care very much either way, fwiw. I've never had to discriminate 0 and -0 consciously, tho perhaps the fact that so much of the lang currently uses SameValueZero is why I haven't had to think about it.

[14:59:53.0621] <TabAtkins>
but it is definitely the case that I've never once explicitly wanted to know that something was -0 (but I don't doubt there are reasons)

[15:34:16.0502] <mpcsh>
cool, then we have [#157](https://github.com/tc39/proposal-pattern-matching/issues/157), which is about the inclusion of `Initializer[opt]` in the grammar - can this also be closed for now along with [#202](https://github.com/tc39/proposal-pattern-matching/issues/202) / [#212](https://github.com/tc39/proposal-pattern-matching/issues/212)?

[15:34:33.0513] <mpcsh>
 * cool, then we have [#157](https://github.com/tc39/proposal-pattern-matching/issues/157), which is about the inclusion of `Initializer[opt]` in the grammar - can this also be closed for now along with [#202](https://github.com/tc39/proposal-pattern-matching/issues/202) / [#212](https://github.com/tc39/proposal-pattern-matching/issues/212)?

[15:40:50.0127] <TabAtkins>
yes, this looks like just a variation on those topics

[15:48:34.0330] <mpcsh>
alright! well good work everyone, we're down to just ✨ _five_ ✨ open issues!

[15:51:16.0246] <mpcsh>
 * alright! well good work everyone, we're down to just ✨ _five_ ✨ open issues from 25 before our call!

