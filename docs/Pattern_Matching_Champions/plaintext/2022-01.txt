2022-01-13
[10:04:30.0081] <ljharb>
what do we all think are the remaining blockers to seeking stage 2?

[10:25:18.0033] <TabAtkins>
I suspect nothing? We should try to close the remaining issues, and make sure the spec text is up to date, but that's it.

[10:56:39.0490] <TabAtkins>
The more I write and read examples, the more I think we could get away with dropping the () around the matcher, as long as we have the separator character. `when (${...})` is just a lot of wrappers, and I don't want to special-case top-level `${}` over other things.

[10:57:18.0669] <TabAtkins>
`when ({foo})` or `when([foo])` too, just too many wrapper chars. Gimme `when {foo}: ...` and `when [foo]: ...`

[11:45:02.0702] <ljharb>
so you want `when null` and `when /a/g` and `when 3` etc?

[11:45:30.0744] <ljharb>
i think that it's a _reasonable_ possibility, now that the pin operator has boundaries, in a way where it was unreasonable with `^`

[11:45:49.0669] <ljharb>
but i'm not sure it's better. the parens are a nice static delimiter to indicate the pattern

[11:46:16.0314] <ljharb>
i guess we still haven't figured out if there should be a separator before the RHS, and what it is?

[12:26:11.0130] <TabAtkins>
Yes, I'd want all of those, so long as we have the RHS separator.

[12:26:32.0588] <TabAtkins>
And yeah we haven't figured it out yet, but it looked like several champions were leaning towards `:` the last time we discussed this.

[13:27:34.0137] <mpcsh>
do we want to have one more champions call?

[14:44:15.0286] <TabAtkins>
yeah, would be useful. feels like we're in the home stretch of discussions to have between ourselves; once these are resolved all that's left is bugs or new concerns brought up by others in the committee


2022-01-14
[18:57:58.0697] <ljharb>
How would the : separator, without parens, work with typescript?

[22:06:12.0494] <ljharb>
i guess `when ${x as y}: RHS as z` would be fine, since there's no `:` type declarations there

[09:56:31.0259] <TabAtkins>
Does TS use colons for something near that syntax space?

[09:56:43.0308] <TabAtkins>
I thought it used `->`

[09:57:23.0246] <Jack Works>
Neither : or -> used in ts as I can recall. 

[10:05:31.0054] <TabAtkins>
Ah, `:` is used in the same way it is in Python, to annotate a variable.

[10:05:42.0511] <TabAtkins>
Like `let obj: any = { x: 0 };`

[10:06:34.0500] <TabAtkins>
I recall yulia wanted us to avoid `->` for TS-adjacent reasons, but I don't remember the details of it. Was it to reserve the space for JS to potentially grow annotations?

[10:07:39.0362] <TabAtkins>
But yeah, `:` in pattern space would be just fine, it's wouldn't be capable of receiving an annotation.

[10:08:30.0325] <TabAtkins>
Tho hm, I suppose `when a: int: RHS` might be reasonable?

[10:42:52.0231] <yulia>
not terribly important now, if its an issue they can complain

[10:43:08.0999] <yulia>
> <@tabatkins:matrix.org> I recall yulia wanted us to avoid `->` for TS-adjacent reasons, but I don't remember the details of it. Was it to reserve the space for JS to potentially grow annotations?

 * not terribly important now, if its an issue they can complain

[10:43:32.0318] <TabAtkins>
Oh nice, because `->` is my favorite of all the separators for this case.

[10:44:53.0043] <TabAtkins>
(If we do end up with problems, keeping with "parenthesized matcher, no separator" is fine with me, I just think (and iirc mpcsh also feels this way) that a separator is very good for readability, and if we have that we shouldn't need wrapper characters.)

[12:10:13.0684] <rbuckton>
TS doesn't use `->` for anything

[12:14:55.0148] <rbuckton>
It uses `:` for variable/field/parameter  declarations and return type annotations,  `<T>x` or `x as T` for casts and `f<T>` for generics

[12:17:09.0672] <rbuckton>
Also, `=>` is used for return type annotations in function and constructor types, but only when you're already in type-space

[13:01:52.0373] <TabAtkins>
Yeah `=>` is already a hard-reject from the possibilities, since it has different semantics than arrow function bodies.

[14:24:41.0014] <mpcsh>
> <@tabatkins:matrix.org> (If we do end up with problems, keeping with "parenthesized matcher, no separator" is fine with me, I just think (and iirc mpcsh also feels this way) that a separator is very good for readability, and if we have that we shouldn't need wrapper characters.)

this is correct - I strongly prefer a separator but won't block the proposal if there's no feasible way to have one

[14:25:06.0360] <mpcsh>
do we want to try to meet before the upcoming plenary? I suppose we're past the stage advancement deadline so it doesn't really matter?

[14:29:14.0078] <TabAtkins>
It might be useful to claim a lightning-round slot to present current work, noting that we'll likely ask for Stage 2 at *next* meeting. In that case, yeah, getting a champion meeting in next week would be good.

[14:29:26.0054] <TabAtkins>
mpcsh: Would you like to doodle it, or should i?

[14:54:34.0476] <TabAtkins>
(Given the US holiday on Monday, I suggest we ask about WThF.)

[14:56:14.0773] <mpcsh>
> <@tabatkins:matrix.org> mpcsh: Would you like to doodle it, or should i?

would you mind? I'm _very_ busy this week into next ðŸ™‚

[14:57:05.0956] <TabAtkins>
Will do


2022-01-18
[10:17:09.0034] <TabAtkins>
Okay forgot to do it on Friday since I was already heading home when I sent my last message, but here's a doodle for a quick 1hr meeting sometime this week: https://doodle.com/poll/qeyiu5tfque6atzv?utm_source=poll&utm_medium=link

[11:08:43.0226] <TabAtkins>
I guess the main determiner here is gonna be between the EMEA friendly time (morning PST) or the APAC friendly time (afternoon PST). That's mainly just a tossup between yulia and HE Shi-Jun , right?

[11:09:07.0482] <mpcsh>
I think you mean Jack Works?

[11:09:54.0893] <TabAtkins>
Ah shoot, indeed.

[11:09:59.0869] <TabAtkins>
Sorry, Jack :(

[14:16:41.0172] <mpcsh>
also hey friends just an fyi that I've decided to use they/them pronouns only, going forward ðŸ’œ

[14:18:31.0598] <TabAtkins>
welcome to the club!


2022-01-19
[16:52:03.0793] <TabAtkins>
Looks like we can easily rule out tomorrow for the meeting. I'll give it another 18 hours before I call it for Thursday or Friday 4pm PST.


2022-01-20
[16:17:27.0710] <TabAtkins>
All right, let's call it for Thursday, 4PM PST? That covers everyone who answered except (understandably) Yulia, but she was able to attend the previous meeting.

[07:43:49.0604] <TabAtkins>
Do we have a preferred vc tech? If not, https://meet.google.com/kvb-kzre-jqg

[09:06:04.0796] <ljharb>
zoom's the best one, but google's fine too

[10:01:03.0944] <TabAtkins>
I can't do Zoom on a work computer :D

[10:01:16.0614] <TabAtkins>
(i've previously taken our meetings from home)

[10:10:44.0215] <ljharb>
i can't do the zoom app on my work computer either, but i can do zoom web there. but also i do video calls on my ipad regardless, _except_ for work ones :-p

[10:10:51.0762] <ljharb>
 * i can't do the zoom app on my work computer either, but i can do zoom web there. but also i do video calls on my ipad regardless, _except_ for work ones :-p

[10:46:48.0113] <TabAtkins>
HackMD agenda for the meeting, feel free to review and log your opinions ahead of time: https://hackmd.io/@aZMW07qbQcuCFmPlAAwUNA/HyVREXDTK/edit


2022-01-21
[16:04:07.0199] <TabAtkins>
Meeting happening now!

[16:05:54.0768] <TabAtkins>
@room ^^^

[16:15:58.0948] <TabAtkins>
Yo me and Ron are just going to decide everything ourselves.

[16:20:20.0779] <rkirsling>
oh geez what a convenient time too

[16:20:43.0129] <rkirsling>
and here I am, stuck in a much less interesting meeting

[16:23:06.0184] <ljharb>
oh crap sorry

[16:23:07.0819] <ljharb>
i'll be right there

[17:04:28.0261] <ljharb>
call kicked us out

[17:04:44.0885] <ljharb>
seems like we're good tho; we'll need the other champions to give their thoughts

[17:04:49.0608] <TabAtkins>
Ugh oh yeah, I did the meet form my personal account

[17:04:59.0763] <TabAtkins>
gotta remember to do it from work account so no time limit

[17:05:21.0796] <TabAtkins>
anyway we hit the end of the topic list, seems good, i'll finish writing up notes later tonight, gotta head home and make dinner now

