2023-08-07
[08:10:38.0946] <TabAtkins>
We didn't make useful quorum for the meeting, so offline ping: a couple of people wanted to take the gist back to their team to discuss before we made a final yay/nay on updating the proposal in the repo. Does anyone object to moving forward with this?


2023-08-08
[21:02:02.0099] <ljharb>
i've been traveling and haven't really had a chance to fully review the gist; i'll be back on the 10th. maybe we could plan to move forward early next week?


2023-08-16
[15:03:47.0722] <ljharb>
TabAtkins: gist review:
 - `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?
 - for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?
 - i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous
 - for bindings in an `if` does it also apply to an `else if` and every other else in the chain?

does the gist already incorporate all the discussion at the bottom of it?

 - there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.

[15:04:21.0061] <ljharb>
 * TabAtkins: gist review:

- `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?
- for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?
- i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous
- for bindings in an `if` does it also apply to an `else if` and every other else in the chain?

does the gist already incorporate all the discussion at the bottom of it?

- there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.

I like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-(

[15:04:40.0242] <ljharb>
 * TabAtkins: gist review:

- `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?
- for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?
- i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous
- for bindings in an `if` does it also apply to an `else if` and every other else in the chain?

does the gist already incorporate all the discussion at the bottom of it?

- there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.

I like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-( I very much do *not* want :"unapply" and think that would be a very confusing choice.


2023-08-17
[22:49:04.0623] <Jack Works>
based on my understanding:
- yes, it's the same as what the decorator has
- maybe it throws for things that don't have @@matcher
- no comment
- yes, and in TDZ if the match fails

[09:25:52.0421] <ljharb>
if the match fails why would you want the bindings available in the else, since they can't ever work?

[13:24:19.0334] <rbuckton>
> <@ljharb:matrix.org> TabAtkins: gist review:
> 
> - `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?
> - for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?
> - i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous
> - for bindings in an `if` does it also apply to an `else if` and every other else in the chain?
> 
> does the gist already incorporate all the discussion at the bottom of it?
> 
> - there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.
> 
> I like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-( I very much do *not* want :"unapply" and think that would be a very confusing choice.

Regarding `plain-or-dotted-ident` including brackets and optional things: No, it does not at present. Decorators also do not support optional chaining or brackets. Optional chaining might be feasible with decorators, but brackets are ambiguous with `ComputedPropertyName`, thus you must use parens to use them, i.e., `@(foo[bar])`.

I didn't include element-access-like brackets in Extractors since there were some potential *AssignmentPattern* conflicts I was considering at the time.

[13:47:01.0119] <ljharb>
ok, as long as it matches decorators I’m sure it’s fine


2023-08-18
[08:44:40.0467] <Jack Works>
syntax is a hard thing huh


2023-08-21
[01:50:20.0670] <mpcsh>
hey friends, I am recovering from an anaphylactic reaction and will unfortunately have to miss tomorrow

[08:03:38.0808] <ljharb>
ron and i are waiting in the zoom; is anyone else coming?

[08:04:50.0694] <rbuckton>
I'm not sure what the agenda is for today, but I may need to drop early as I'm driving my daughter up to college this afternoon and have to leave around noon.

[08:07:12.0453] <TabAtkins>
Whoops I forgot about meeting, coming in now.

[08:07:53.0305] <TabAtkins>
Agenda is talking over Jordan's thoughts, I believe, and anyone else who has final comments before we pull the trigger

[08:10:10.0659] <TabAtkins>
Christ on a cracker the auth for Mozilla's instance is annoying

