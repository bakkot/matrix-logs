2024-08-07
[01:37:50.0502] <Simon ZÃ¼nd>
Hey all, I'm looking into starting a draft for the scopes spec text. The data structures involved are somewhat complex, should we embrace the TypeScript syntax to describe types and maybe even extend it to also describe the root SourceMap object that way? There is some prior art for this e.g. for Microsoft's language server protocol: https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/. They also use TS notation to describe JSON structures. There is also JSON-schema, but it's not that human-readable. Any thoughts?

[02:28:29.0009] <jkup>
This is a great question. I'm not 100% sure on it. Wondering if Dan/Nic will have a better idea!

[08:41:35.0176] <littledan>
for the specification itself? seems good for drafts but we might iterate editorially later

[08:44:14.0510] <Nic>
Hey, yes. I assume most of these data structures are spec-internal, right? Since the exposed "API" is just that there is an array of strings.

Web specs usually use a record/struct type for that: [this is an example of what ECMA-262 uses](https://tc39.es/ecma262/#realm-record) and [this is an example of what everything else uses](https://html.spec.whatwg.org/#concept-script). I would go with the latter, since our spec is written in bikeshed, so it's more like the non-ecma262 specs.

I think using the TS notation can be useful for other spec readers though, especially for the "public API" (i.e. for describing the shape of the source map JSON object). Maybe that could go somewhere in a note, in https://tc39.es/source-map/#source-map-format

[08:45:00.0455] <Nic>
I'd like to organize the "mapping" info as a proper struct, I could draft something up and you can take it as an example. Also, feel free to ping me for any editorial question :)

[08:45:03.0585] <littledan>
definitely this is good to go ahead with your initial drafts IMO


2024-08-08
[22:43:12.0147] <Simon ZÃ¼nd>
Thanks for the pointers!

[06:36:27.0256] <Nic>
> <@nribaudo:igalia.com> I'd like to organize the "mapping" info as a proper struct, I could draft something up and you can take it as an example. Also, feel free to ping me for any editorial question :)

Simon ZÃ¼nd Example: https://github.com/tc39/source-map/pull/119 :)

[06:44:31.0433] <Nic>
Q: Is it valid to have the same URL twice in the `sources` list? Or do they get coalesced?

[06:44:42.0542] <Nic>
 * Q: Is it valid to have the same URL twice in the `sources` list with different `sourcesContent`? Or do they get coalesced?

[10:19:36.0363] <asumu>
Nic: I opened an issue on this a bit ago that documents the current browser behavior btw https://github.com/tc39/source-map/issues/85 

[10:20:16.0234] <Nic>
Oh, thanks!


2024-08-13
[18:55:45.0256] <Devin Rousso>
hey yall!

[18:55:46.0089] <Devin Rousso>
got some good news

[18:56:00.0067] <Devin Rousso>
i have a working implementation of `ignoreList` in WebKit ðŸŽ‰

[18:56:21.0038] <Devin Rousso>
but there's a few PRs that need to be merged beforehand

[18:56:49.0458] <Devin Rousso>
if anyone else here is a WebKit reviewer (or knows someone they could ask to help), id appreciate any assistance in getting this approved ðŸ™‚ <https://github.com/WebKit/WebKit/pull/31768> (Web Inspector: allow sourcemaps to be blackboxed)

[18:57:24.0166] <Devin Rousso>
as soon as that's merged, i already have a `.patch` ready to go for the final followup <https://webkit.org/b/275673> (Web Inspector: add support for `ignoreList` in sourcemaps)


2024-08-14
[00:52:25.0894] <Holger Benl>
FYI: I won't be able to attend the meeting today

[01:34:54.0105] <Artem Kobzar>
Does it work for Wasm too?

[01:36:52.0172] <Artem Kobzar>
Hey yall!
I've assembled a draft for the DevTools Custom Formatters spec. Could somebody create a repo for it, or should I create a repo under my personal account, and only after that will we create an official one for the spec?


[01:39:56.0605] <Nic>
Usually for TC39 proposals we start in a personal repo and then move them over. We can follow the same path 

[02:12:17.0126] <Artem Kobzar>
The repo: https://github.com/JSMonk/devtools-formatters-spec/
The rendered draft: https://jsmonk.github.io/devtools-formatters-spec/

There is still some work (like describing goals and the background, but I believe we need to discuss those sections)

[09:00:51.0890] <jkup>
Monthly call is starting now! https://bloomberg.zoom.us/j/97901112561?pwd=TlNyeW8ycGlaMk9BTmUxMHZrcE11dz09


2024-08-18
[00:34:25.0436] <Artem Kobzar>
Hi there.
I'm just thinking. Since we are also working not only on SourceMap standardization but also on CustomFormatters and Wasm Console API (WIP, draft name), does it make sense in the near future to declare that TG4 is working not on the SourceMaps spec but on the "debugging experience" (or at least list all the spec we are working on) 

[00:34:28.0942] <Artem Kobzar>
 * Hi there.
I'm just thinking. Since we are also working not only on SourceMap standardization but also on CustomFormatters and Wasm Console API (WIP, draft name), does it make sense in the near future to declare that TG4 is working not on the SourceMaps spec but on the "debugging experience" (or at least list all the spec we are working on)?


2024-08-20
[15:13:27.0514] <Chris de Almeida>
hi all.  I'm looking for meeting notes for recent TG4 meetings. link?


2024-08-21
[02:16:53.0726] <Artem Kobzar>
https://docs.google.com/document/d/1a6Cg0E_Ba8wZe6wVb8NHY_p3akU3CnabkxuK6LmPR3c/edit#heading=h.wk0z2csrhjt3


2024-08-22
[01:46:41.0767] <Nic>
Simon ZÃ¼nd Did you get any answer from the legal folks at google about the tests license?

[01:50:19.0793] <Simon ZÃ¼nd>
No, I need to ping them one more time


2024-08-26
[04:00:08.0264] <Simon ZÃ¼nd>
Hey folks, I started a draft PR to clarify the `names` section for JS (https://github.com/tc39/source-map/issues/6). You can find the draft PR here (https://github.com/tc39/source-map/pull/122), let me know what you think.


2024-08-27
[21:14:06.0424] <Devin Rousso>
> <@dcrousso:matrix.org> as soon as that's merged, i already have a `.patch` ready to go for the final followup <https://webkit.org/b/275673> (Web Inspector: add support for `ignoreList` in sourcemaps)

ðŸŽ‰ <https://github.com/WebKit/WebKit/pull/32746> (Web Inspector: add support for ignoreList in sourcemaps)

[01:58:36.0876] <jkup>
> <@dcrousso:matrix.org> ðŸŽ‰ <https://github.com/WebKit/WebKit/pull/32746> (Web Inspector: add support for ignoreList in sourcemaps)

You rock!! This is so cool to see

[02:36:33.0049] <Artem Kobzar>
Wow, thats a great news. Does it work for Wasm too? 


2024-08-28
[17:12:38.0164] <Aki>
Hey y'all, do you have any history of working with the W3C Browser Testing and Tools Working Group (or any other WGs)?

[17:13:35.0860] <Aki>
if there's any background, i'd like to know it before i go making a fool of myself with my cluelessness at TPAC ðŸ˜¬

[17:41:35.0729] <littledan>
I've said hi to them before. My coworker Matt Radbourne was going to participate, but he might not have had time yet.

[17:42:13.0301] <littledan>
jkup sits right near Matt so he could ask :)

[17:42:29.0332] <littledan>
 * I've said hi to the browser tools and testing folks before (hung out last TPAC). My coworker Matt Radbourne was going to participate, but he might not have had time yet.

[01:23:26.0777] <Simon ZÃ¼nd>
Question for the overall spec: We plan to include general rules for source maps in the spec e.g. where to put mappings and which mappings should have a name attached. Or for the scopes proposal where the scopes should start/end. These are specific for source maps that target JavaScript, but one can imagine that we might also write such rules when the target is WASM or CSS. How should we structure the spec text to accommodate this?

[07:38:37.0882] <littledan>
just be explicit about which parts are JS-specific, and if possible include the Wasm answer from the beginning, so that it is possible to go back later and add other things. The "layering" doesn't have to be really formal; it's OK if it's just inline conditionals IMO.


2024-08-29
[02:48:31.0497] <Holger Benl>
Hi there, I've started to implement merging scope maps from consecutive transpilation steps (see [this commit](https://github.com/hbenl/tc39-proposal-scope-mapping/commit/2877ab323893846dcd8f1a78b97591656a62e254)). It's not complete yet (most importantly it only handles very simple expressions in the scope maps) but it can already merge the scope maps from a simple example (which is also in the linked commit)

