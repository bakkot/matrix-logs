2023-10-04
[00:28:04.0016] <littledan>
Devin Rousso shared with me,
FYI the majority of tests in WebKit for sourcemap stuff are in https://github.com/WebKit/WebKit/tree/main/LayoutTests/inspector/formatting

[00:28:28.0611] <littledan>
We can incorporate this into shared tests!

[00:29:46.0630] <Devin Rousso>
happy to help explain anything if needed üôÇ


2023-10-05
[01:59:52.0861] <jkup>
Welcome, Simon Z√ºnd!!

[02:00:05.0551] <Simon Z√ºnd>
Thanks!

[02:00:29.0546] <Simon Z√ºnd>
 * Hello and thanks!


2023-10-09
[06:33:05.0673] <jkup>
I don't think I noticed `x_google_lineCount` until today. Is that used? https://github.com/tc39/source-map-spec/blob/main/source-map.bs#L251

[06:33:16.0052] <jkup>
 * I don't think I noticed `x_google_linecount` until today. Is that used? https://github.com/tc39/source-map-spec/blob/main/source-map.bs#L251

[13:10:23.0302] <littledan>
welcome, Luca Forstner !


2023-10-11
[08:08:40.0542] <Artem Kobzar>
Sorry, I have moving today, so, can't participate in the call ‚òπÔ∏è

[09:11:47.0687] <Ryan Day>
\o

[09:14:14.0108] <jkup>
Hi Ryan Day !


2023-10-15
[07:36:29.0028] <Luca Forstner>
I started working on polyfills for debug IDs: https://github.com/lforst/tc39-debug-id-proposal-polyfill

Right now this only entails Rollup and Vite. I'd also like to have some for Webpack and Esbuild. Shouldn't be too hard to do. The implementation is based on our experiments for the [Sentry Bundler Plugins](https://github.com/getsentry/sentry-javascript-bundler-plugins).


2023-10-16
[05:30:44.0820] <littledan>
Is this what I should be reviewing for the proposal itself? https://github.com/tc39/source-map-rfc/blob/main/proposals/debug-id.md

[05:30:55.0813] <littledan>
Or do you have anything further ?

[07:34:49.0843] <Luca Forstner>
Ok, so while wanting to write something up for the V8 folks I gave that proposal you linked here another pass. I opened [a PR](https://github.com/tc39/source-map-rfc/pull/56) with very minor adjustments - just wording, no real content changes.

In general I think this proposal outlines our thinking very very well. I honestly don't know if it wouldn't just be enough to hand it over to them as is. Do you have any sort of judgement/feelings/opinions on this?

In my PR I clarify the proposed API for JS engines to extract the Debug ID from a file:

> A Function property in the global scope `getDebugIdForUrl(url)` that looks up the debug ID for a given script file by URL that has already been loaded by the browser in the current context.

I don't really have anything else to add that would be useful to the V8 people in terms of implementation considerations. ü§î What do you think?


[12:29:32.0340] <littledan>
Maybe put it inside of Error?

[13:38:56.0975] <swatinem>
I haven‚Äôt been following the discussions in detail tbh, but putting it on `Error` and having some programmatic accessors for it would be ideal, instead of resorting to string parsing

[13:58:32.0180] <littledan>
It would be good to document why the import.meta API is needed


2023-10-23
[05:14:43.0056] <littledan>
Artem Kobzar: Holger Benl Hey, do you expect to iterate on https://github.com/tc39/source-map-rfc/pull/53 ?

[10:02:39.0570] <Artem Kobzar>
Yes, it will be done till our next call 

[10:39:44.0077] <littledan>
Great! BTW will it incorporate this? https://gist.github.com/sokra/97a53a869b9a421accadbc9681cb26f3

