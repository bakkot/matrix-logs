2024-03-01
[03:07:15.0119] <abelkius>
> <@holger_benl:matrix.org> The ones in May are for all of Germany

oh wow ü•≤

[05:55:11.0109] <jkup>
I moved our Google Docs notes into a central repository (https://github.com/jkup/tg4). I figure we can give a TC39 GitHub admin rights to it, and they can move it into the TC39 org. I wanted to give folks a bit to check it out before I submit it to be linked in https://github.com/tc39/notes

[12:03:45.0778] <ljharb>
you can put it in github.com/tc39-transfer on your own, and then i can bounce it in

[12:04:51.0658] <ljharb>
 * jkup: you can put it in github.com/tc39-transfer on your own, and then i can bounce it in

[12:05:24.0594] <jkup>
This is a very cool idea!

[12:09:27.0085] <ljharb>
also if you lmk the github names of everyone in tg4, i'll make a team for them (DM is fine)

[12:09:32.0718] <ljharb>
 * also if you lmk the github names of everyone in tg4, i'll make a team for yall (DM is fine)


2024-03-06
[10:16:01.0228] <jkup>
Justin Ridgewell (and all): As the scopes proposal (https://github.com/tc39/source-map-rfc/blob/main/proposals/scopes.md) nears spec completion, and a few consumers (Chrome DevTools, Replay.io) are working on implementations, I think it would be great for a generator to also begin work on an implementation. I asked Nic about how difficult it would be for me (with help) to add scopes support to Babel and they mentioned that you had probably the most context around Babel's source map generation. I'm curious if you have any time / availability to help shepherd a feature implementation!


2024-03-07
[00:56:49.0155] <Justin Ridgewell>
I have a couple of questions/comments on the Scopes proposal:
- Why is Original Scope `column` absolute?
- What‚Äôs the point of splitting Original Scope‚Äôs Start/End? Just encode it together
- Are Generated Range‚Äôs `originalScope` and `callsite` mutually exclusive?
- I have no idea how to parse Generated Range‚Äôs `bindings`.
    - Is `M` a DATA?
    - What is ‚Äúnegative number of sub-ranges‚Äù?
    - ‚ÄúUse -1 to indicate that the current variable is unavailable (e.g. due to shadowing) in this sub-range‚Äù‚Ä¶
        - This causes a large delta encoding to jump backwards, then a large delta to jump forwards. Just encode an empty string value into `names` array
    - [Side note: the note telling you that `line` is relative is in the `column` list item]


[01:27:20.0043] <Simon Z√ºnd>
Thanks for the ideas/feedback! Yeah there are couple of rough edges in the current proposal.

* Original files are formatted normally, so I'd imagine that most of the columns are absolute anyway given that not many scopes will start on the same line.
* Encoding start/end items separately gives us the tree structure of scopes immediately and you don't have to nest the scopes manually based on position alone (which could be ambiguous if 2 scopes have the same start, not sure if that occurs in practice though).
* No, call-site is specifically for inlining. So for a generated range that represents an inlined function the `originalScope` points to the original inlined function scope and call-site points to where that inlined function was actually called in the original code. This is required to get stack traces right.
* Bindings are a bit tricky, maybe we went overboard with trying to encode it efficiently.
  * We basically distinguish between 2 cases:
     1) The variable is available for the full range with the same expression, in that case we only need a single offset into the names array.
     2) The variable requires different expressions for parts of the generated range. In this case the first DATA is again a single offset into the names array. This is the expression from the range start. Then we encode another data `M`, to denote how many more live ranges we have. We encode it negated, so decoders can distinguish between case 1) and 2).
  * Holger filed a bug about how to encode unavailable here. https://github.com/tc39/source-map-rfc/issues/70. I like your suggestion as well and will add it to the list.


