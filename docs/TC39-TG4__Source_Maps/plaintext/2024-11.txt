2024-11-04
[10:34:41.0113] <Aki>
do y'all have plans to move from bikeshed to ecmarkup (or some other tool) in the future? or do you plan on sticking with bikeshed? 

[14:36:48.0181] <littledan>
I haven't heard of any plans; do you see a reason why we should move away from bike shed?

[14:36:52.0490] <littledan>
 * I haven't heard of any plans; do you see a reason why we should move away from bikeshed?


2024-11-05
[16:29:59.0395] <Nic (back on Nov 7th)>
The plan is to stick to bikeshed, because it's much easier to use for those familiar with neitherÂ 

[17:30:14.0315] <Aki>
that's fine

[17:30:22.0655] <Aki>
just trying to plan for putting together PDF

[09:40:08.0468] <Bradford Smith>
I would like to invite someone to give a presentation about the current state of the Source Maps specification efforts to the Web Foundations team (and possibly other interested folks) at Google. The requirements are minimal. Just show up and spend 30-minutes telling us stuff (slides are nice but not required) and allow us to ask you questions for another 30 minutes. Remote participation is expected, but you're also welcome to come in person and get a free lunch out of it, if you like.

[09:40:20.0925] <Bradford Smith>
Who would be interested?


2024-11-11
[10:19:26.0707] <Nic>
I backported the changes with the ExeCom feedback to the 2024 branch. I also disabled merge commits in the repo because cherry-picking a merge is much more annoying than cherry-picking a commit, so please use squash-merge :)

[15:40:52.0537] <Bradford Smith>
Thanks to Justin Ridgewell  for volunteering.


2024-11-12
[01:51:03.0272] <jkup>
Sorry I hadn't gotten back sooner. Thanks for volunteering Justin! I put in an internal request to do this and still have not heard back.

[10:30:54.0233] <Aki>
Okay I know I already asked this but hear me out. When I first asked if you were planning on moving to bikeshed, it was a question with no motive, just genuine curiosity. The more I work on putting together publishing stuff for the sourcemaps standard, the more I find myself wishing the TC39 standards were consistent (and wondering how you're going to publish a digital version of the standard that doesn't look like it's being published by w3c)

[10:31:10.0591] <Aki>
 * Okay I know I already asked this but hear me out. When I first asked if you were planning on moving from bikeshed, it was a question with no motive, just genuine curiosity. The more I work on putting together publishing stuff for the sourcemaps standard, the more I find myself wishing the TC39 standards were consistent (and wondering how you're going to publish a digital version of the standard that doesn't look like it's being published by w3c)

[10:31:35.0577] <Aki>
so the question i asked before was "are you planning to move from bikeshed" and my new question is 

would you consider moving to ecmarkdown/ecmarkup?

[10:36:15.0573] <Nic>
I guess given that there is a concrete reason to do it we can consider doing it

[10:36:41.0026] <Nic>
How urgent would it be? Is it a blocker for you?

[10:36:46.0324] <Aki>
it is not

[10:36:51.0519] <Aki>
i'm going to do the PDF first

[10:37:04.0036] <Nic>
I'll put this on the next TG4 agenda

[10:37:16.0082] <Nic>
Oh, it's tomorrowÂ 

[10:37:29.0469] <Aki>
after i'm done with that, there's a _possibility_ i could put together a first draft of an ecmarkdown version for y'all

[10:37:36.0382] <Aki>
do you want me at that meeting?

[10:38:12.0592] <Nic>
You would be welcome to join, but no worries if you can't (I can try to present from your point of view)

[10:38:28.0814] <Nic>
* You are welcome to join, but no worries if you can't (I can try to present from your point of view)

[10:39:10.0030] <Aki>
oh yeah i have an appointment to donate blood that conflicts

[10:43:47.0604] <Aki>
If y'all decide not to change, I'd also love to hear what your plan is for restyling, if you have one

[11:07:55.0262] <littledan>
WinterCG is currently using bikeshed too, so if Ecma gets good at publishing Bikeshed specs, it'll be useful.

[11:08:26.0128] <littledan>
what restyling requirements exist? My understanding is that some W3C specs are standardized in ISO, so maybe we could work with them to find what is really needed.

[11:26:45.0292] <Aki>
i mean my comment was really saying "it looks like it belongs on w3.org"

[11:27:13.0969] <littledan>
oh does it refer to it?

[11:27:24.0150] <Aki>
no, it _looks like it_

[11:27:33.0441] <Aki>
two different definitions of requirements. there's the web version of the latest, and the web/pdf versions of frozen/published versions

[11:27:42.0457] <Aki>
the latter has formal requirements which i can handle

[11:27:52.0064] <Aki>
the former is likeâ€¦Â can you make it look like it blongs to ecma?

[11:28:03.0314] <littledan>
whatwg has some specs using bikeshed as well (even as others use the crazy pascal tooling)

[11:28:08.0919] <Nic>
I wonder whether changing colors would be enoughÂ 

[11:28:22.0538] <Nic>
Sprinkling some orangeÂ 

[11:29:03.0784] <littledan>
for the sake of comparison, since Ecma is bigger than TC39, I'm wondering whether you think the cyclonedx spec looks like an Ecma spec.

[11:29:50.0978] <littledan>
https://ecma-international.org/wp-content/uploads/ECMA-424_1st_edition_june_2024.pdf

[11:30:00.0997] <Aki>
TC54 is moving to ecmarkup (by their own volition, not me asking them to)

[11:30:14.0612] <littledan>
interesting!


2024-11-13
[09:04:08.0690] <Nic>
Meeting now, for those that participate :) We'll start in 1 min

[09:05:14.0273] <asumu>
Meeting link for anyone who needs it https://bloomberg.zoom.us/j/97901112561?pwd=TlNyeW8ycGlaMk9BTmUxMHZrcE11dz09

[09:39:54.0976] <Nic>
asumu: how much time do you need for your point?

[09:40:10.0384] <Nic>
Is 10 mins enough?

[09:40:14.0384] <Nic>
Or do you prefer more?

[09:40:17.0707] <asumu>
Nic: not too much time, can bump it to mostly async too

[10:06:58.0990] <asumu>
Re: index maps & overlaps, see https://takikawa.github.io/source-map-spec/#decoding-an-index-map (step 8.7) where there's a big green note about the overlap check. I was also planning to re-write this check to compare the {first, last} points of the previous and current sub-maps which I think is clearer and more precise than the current check.

[10:20:05.0486] <Nic>
Given that the error are optional, it seems like the spec text gives already enough freedom to implementations (they could just report the "some" errors that match what you describe in the note). I still find the note useful, but I would word it as "source map consumers may, for example, ..."

[10:20:17.0502] <Nic>
Or we make this case a non-optional error in the algorithm, since the note shouldn't actually prescribe what to do

[10:22:27.0884] <Nic>
Luca Forstner The "error stacks" proposal I mentioned is https://github.com/tc39/proposal-error-stacks, which also defines a structured representation of the stack so that, if then we add debugIDs on top of it, you wouldn't need to parse the string.

If you are interested in it, I recommend reaching out to ljharb as he was the original champion :)


2024-11-14
[01:34:41.0347] <Luca Forstner>
That's cool history! Thanks for sharing - I will definitely take a look. I also need to look into the normal TC39 process a bit. A bit scary admittedly ðŸ˜ƒ


2024-11-15
[18:01:22.0656] <Aki>
is the 2024 branch reliably frozen? also did y'all make the changes requested? (I think maybe updating one informative section to be normative?)

[02:45:00.0026] <Aki>
draft PDF

[03:21:57.0542] <Nic>
Hey Aki, sorry for not answering earlier.

[03:22:04.0879] <Nic>
What is the informative section you are talking about?

[03:39:41.0543] <Nic>
Aki I looked at the draft PDF you sent me and it's looking very good, thanks!

I went through the 2024 branch and I noticed that there is one piece of feedback that still isn't on that branch (a slight rewording of the "issue" in 7.1.2). I'll get it merged today, and then everything is good.

About that "issue", I'm curious about how you decided to render it in the PDF. I _think_ you renamed it to "Note" just because Ecma specs only have Notes/Examples, but I wonder why it's orange like examples and not green like other notes?

[03:46:06.0508] <Nic>
 * Aki I looked at the draft PDF you sent me and it's looking very good, thanks!

I went through the 2024 branch and I noticed that there is one piece of feedback that still isn't on that branch (a slight rewording of the "issue" in 7.1.2). I'll get it merged today, and then everything is good (EDIT: cherry-picked: https://github.com/tc39/source-map/commit/5ab46d5f373a2af5b843be9eb74656d490a98a61).

About that "issue", I'm curious about how you decided to render it in the PDF. I _think_ you renamed it to "Note" just because Ecma specs only have Notes/Examples, but I wonder why it's orange like examples and not green like other notes?

[08:02:25.0790] <Aki>
Ooh yes the issue! Novel term. I could probably create a new class of example box for issues. 

[08:03:11.0952] <Nic>
We picked "Issue" just because Bikeshed has first-class handling for it, but styling it as a Note would also be ok

[11:27:48.0769] <Aki>
is that the terminology you want to stick with? would it be helpful if i opened a PR to add an "issue" note type to ecmarkup? https://tc39.es/ecmarkup/#emu-note

[11:27:57.0973] <Aki>
(for future use that is)

[11:28:17.0681] <Aki>
(i'm using a bunch of ecmarkup for this version manually bc it's already styled for print)


2024-11-16
[04:14:04.0426] <littledan>
Btw have we asked Patrick  Luthi for feedback on whether these drafts are good enough quality for inclusion in ISO and/or the ECMAScript suite standard?

[11:56:18.0828] <Aki>
littledan: I'm not _entirely_ clear on the question. Is it about formatting, language/content, or something else? The formatting is to the Ecma standard (which itself is within the ISO guidelines) Also was this planned to go to JTC1 right away?


2024-11-17
[12:51:44.0550] <littledan>
(sorry this is off-topic for the room but) the TC54 people were always clear that they wanted to be an ISO standard whenever possible. Ecma Secretariat has said that this is something they will take up; I'm not sure if there's some more formal way that TC54 should be requesting that. Patrick said in the last ExeCom meeting that something about ECMA-424 wasn't good for ISO publication, but I don't know what it is.


2024-11-18
[01:18:49.0641] <Nic>
> <@akirose:matrix.org> is that the terminology you want to stick with? would it be helpful if i opened a PR to add an "issue" note type to ecmarkup? https://tc39.es/ecmarkup/#emu-note

I'm fine with also changing it to "note" in the web version

[04:37:41.0142] <Simon ZÃ¼nd>
I hacked the scopes proposal into terser to get some quick'n dirty numbers w.r.t. to encoding size. It looks like mappings (with names) still dominate the source map size: https://docs.google.com/presentation/d/1654feURG2g7XyqKOzxaJvlVDQ24006C1aN81NsVWgWc/edit?usp=sharing. I'll see if i can strip the names from mappings to get a sense how much source maps would grow going from "mappings with no names" to "full scopes information"

[04:38:38.0795] <Simon ZÃ¼nd>
The prototype emits original scopes + generated ranges for functions and block scopes and emits the bindings for renamed variables. I didn't add inlining though.

[04:55:16.0506] <littledan>
Thatâ€™s a great result!

[13:39:43.0062] <Justin Ridgewell>
@sim

[13:39:54.0702] <Justin Ridgewell>
* @szuend:matrix.org Can you post the TSC sourcemap?

[13:40:09.0867] <Justin Ridgewell>
I wanna try running it through the modified encoding, see if it helps


2024-11-19
[21:56:31.0212] <Simon ZÃ¼nd>
https://drive.google.com/file/d/1NWlYOzvmF3v1Z36zfkO_OlktES26ezCH/view?usp=sharing

[22:00:02.0509] <Simon ZÃ¼nd>
I'm planning to experiment with a DWARF-style encoding for scopes, similar to what Nick Fitzgerald proposed with the "env" proposal. If that ends up being smaller than the current "scopes" encoding, that would be even better since it's more future proof than what we have now.

[14:29:03.0549] <Justin Ridgewell>
Playing around with some encoding formats:
https://docs.google.com/spreadsheets/d/1lAPxQkIk1Kmm9E7NSY4Vfu_aAZl72JJgCCEyVWygpYA/edit?usp=sharing

[14:29:15.0547] <Justin Ridgewell>
I think Simon and I arrived at roughly the same encoding format

[14:31:03.0373] <Justin Ridgewell>
TLDR: we can shave 9% off TSCâ€™s `mappings` by switching to 8-bit VLQ, 13% by removing the comma/semicolons in the mappings with a packed format, and 24% if we do both.

[14:31:43.0444] <Justin Ridgewell>
But, GZIP is smarter than me and itâ€™s a pretty meager 1% change after compression.

[14:37:33.0679] <Justin Ridgewell>
https://drive.google.com/file/d/1ch7RseKGe3MHy91N9OtPWUiScjCIJVGR/view?usp=sharing

[15:34:46.0631] <Nic>
Does gzip matter for source maps? I always assumed that the size is relevant mostly because bigger size -> more work for the devtools to mange it

[15:35:01.0047] <Nic>
Because source maps are not loaded by end users, only by devs

[15:35:12.0815] <Nic>
* Because source maps are not loaded by end users, only by devs, so it's not really about loading speed

[15:53:47.0118] <Justin Ridgewell>
Ooo, I just came up with a different packed encoding that reduces 6-bit VLQ by 28% and 8-bit by 48%!

[15:54:58.0870] <Justin Ridgewell>
> <@nribaudo:igalia.com> Does gzip matter for source maps? I always assumed that the size is relevant mostly because bigger size -> more work for the devtools to mange it

Simon would have to answer that.


2024-11-20
[19:37:31.0823] <Justin Ridgewell>
Updated the links above, now with the new flags-style encoding

[21:53:23.0146] <Simon ZÃ¼nd>
Loading speed somewhat matters for huge source maps because the larger the source map, the longer developers have to wait for original source files to show up in DevTools (for setting breakpoints or translating stack traces). Tooling normally uses custom internal data structures anyway for decoded mapping/scopes and throw away the encoded strings anyway, so the ungzipped size doesn't really matter that much (the tooling specific data structures for decoded mappings/scopes take up a magnitude more heap space than the encoded strings)

[00:36:22.0656] <Rob Palmer>
My understanding is that IDEs are forced to pause execution of the first JS file until all the sourcemaps have been loaded from disk, because the debugger has to calculate in advance if any of the breakpoint reference that file.

Meaning there is no way to narrow down the set. So total set size matters. And often IDEs are misconfigured which results in the set being excessive.

The result is slow app startup in debugger. 

[00:44:17.0256] <Simon ZÃ¼nd>
In Chromium this is called an "instrumentation pause" and we disable it by default. The reason is that pausing every script until all known source maps are loaded is simply too slow.

So DevTools indeed has a problem that breakpoints might be missed if they occur early in the JS execution.

[00:45:34.0767] <Simon ZÃ¼nd>
So yes, source map size matters in this regard very much


2024-11-21
[15:18:25.0074] <Justin Ridgewell>
Looks like our next scheduled meeting is on Thanksgiving, and the following week is TC39 plenary.

[15:18:31.0194] <Justin Ridgewell>
 * Looks like our next scheduled meeting (next week) is on Thanksgiving, and the following week is TC39 plenary.


2024-11-26
[12:03:19.0180] <ljharb>
will the scopes meeting still happen on thanksgiving, or is it cancelled?

[12:04:19.0470] <Nic>
I assume it'll happen since we have a significant European presenceÂ 

[12:13:03.0352] <littledan>
So do we need a "table of contents" so that the source map can be incrementally parsed, blocking just when it hits a chunk of JS that it's executing?

[12:31:08.0105] <Rob Palmer>
The order of operations is that you start with a generated file (ready to be executed), and the debugger needs to know if any of the current breakpoints correspond to source files/ranges that contributed to the generated file.

That source file list exists early on in the sourcemap for the generated file. At least by convention the `files` prop normally comes before the `mappings` prop. Assuming incremental JSON parsing is a thing, maybe this ordering constraint should be mandated/recommended in the spec?


2024-11-27
[22:47:12.0066] <Simon ZÃ¼nd>
I'm traveling tomorrow. Depending on punctuality, I might be able to join half-way through. If not, I have been mostly experimenting with different encoding schemes for "Scopes": https://github.com/ChromeDevTools/sourcemap-scopes-encoding. The tl;dr is that for a size increase of ~5-10% we can make the encoding 100% VLQ (binary) based and, more importantly, forwards compatible.


2024-11-28
[08:42:36.0107] <Nic>
Meeting in ~15 minutes :)

