2024-10-01
[14:30:11.0223] <Devin Rousso>
i can work on getting the tests merged into WebKit

[14:30:25.0530] <Devin Rousso>
are there any features WebKit is missing that i should also implement?

[14:32:51.0727] <Nic>
A scopes implementation would be great eventually, for when we'll need the "two implementations" requirement!

[14:33:08.0306] <Nic>
Or â€” check which tests in the test suite are failing ðŸ˜‰


2024-10-02
[00:50:02.0695] <Simon ZÃ¼nd>
Do we have a table somewhere to track which proposals are at which stage? I can't find anything in the repo. The proposal docs themselves also don't contain which stage they are at.

[01:30:13.0936] <jkup>
We donâ€™t. This is something we havenâ€™t been great about. I need to do some work on my slides today, I can add a table to our readme and maybe label the specific proposal docs as well 

[02:55:02.0967] <Simon ZÃ¼nd>
Just stumbled over a major issue with the scopes proposal: https://github.com/tc39/source-map/issues/133. We need to address this sooner rather than later.

[16:04:05.0332] <jkup>
> <@jkup:matrix.org> We donâ€™t. This is something we havenâ€™t been great about. I need to do some work on my slides today, I can add a table to our readme and maybe label the specific proposal docs as well

added: https://github.com/tc39/source-map/pull/134


2024-10-04
[03:03:42.0241] <jkup>
Hi folks! Sorry been traveling a lot and figured it might be best to ask all of my questions in one place! How are we feeling for plenary?

- I have the slides linked above. Might add a bit more context to them 
- Have we made a decision on https://github.com/tc39/source-map/pull/122 - are we still trying to get it in?
- Have we cut the branch well point to as the 2024 spec?
- Are we still working on generating the official pdf of the spec?


2024-10-06
[08:26:40.0928] <Nic>
> Are we still working on generating the official pdf of the spec?

Aki is going to do it, it will be ready in a few months

> Have we cut the branch well point to as the 2024 spec?

Not yet, but there are no changes on `main` that would not be in 2024. We can point to `main` for now

[08:26:58.0756] <Nic>
jkup: I made some changes to slide 6, please take a look!

[08:27:52.0366] <jkup>
Will do thank you! Maybe wait for Simon to weigh in on the "emit names" PR before cutting the branch?

[08:28:01.0232] <jkup>
I'm gonna add some more stuff in the morning Tokyo time too!


2024-10-07
[01:39:46.0371] <Simon ZÃ¼nd>
For the "names" PR: I updated it with the changes that we discussed in the last "Scopes" meeting and now I'm waiting for reviews.

[01:44:53.0166] <jkup>
Perfect, ty!

[03:36:19.0454] <jkup>
https://x.com/naugtur/status/1843235330406945272

[03:36:39.0715] <jkup>
Is this about sourceMappingUrl not being allowed in multiline comments?

[03:37:04.0125] <jkup>
Curious which tool produces them 

[03:45:04.0383] <Simon ZÃ¼nd>
Just to be clear, multi line comments are `/* #sourceMappingUrl= */`? The spec never mentions these so they are implicitly disallowed anyway? I'm not opposed to calling it out explicitly though.

[03:51:25.0394] <jkup>
That was my guess. We don't mention either way right now, for some reason I thought Nic had some thoughts about what we can and can't say about the comment. I know we discussed last line of file which we decided *not* to specify, instead specifying the last occurence via https://github.com/tc39/source-map/blob/main/source-map.bs#L796

[04:19:36.0384] <Nic>
Multiline comments are indeed supported: https://tc39.es/source-map/#extraction-javascript

[04:19:53.0739] <Nic>
But removing them seems very risky, we would need first to make sure no tool actually generates them

[04:20:16.0162] <jkup>
I was thinking about replying to the post asking if they know which tool was generating them? I haven't seen the before

[04:20:36.0504] <Nic>
From that tweet:

> nested sourcemap multiline comments

If it's nested in a bundle, it's not a source map comment so the tool was _correctly_ removing it

[04:21:42.0136] <Nic>
i.e. in
```js
let modules = {
  0: () => {
    console.log("hi from mod a");
    // #sourceMappingURL=./a.js.map
  },
  1: () => {
    console.log("hi from mod b");
    /* #sourceMappingURL=./b.js.map */
  }
}
```

there are no source map comments

[04:22:47.0950] <jkup>
You are saying that bundlers should remove sourceMappingUrl comments from individual files as it bundles them together?

[04:24:37.0866] <Nic>
They don't need to remove them, because "adding some code after the comment" already has the effect of making it not a source map comment

[04:24:49.0435] <Nic>
Bundlers removing them is equivalent to removing `/* hello! */`

[04:24:52.0465] <Nic>
It's not wrong

[04:24:59.0857] <Nic>
It's just useless, other than to save code size

[04:25:59.0630] <Nic>
Do you want me to reply to that tweet?

[04:26:26.0299] <jkup>
Sorry yeah if you don't mind. I'm not following but also distracted in this community event.

