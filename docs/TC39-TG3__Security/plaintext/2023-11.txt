2023-11-01
[12:34:17.0381] <Chris de Almeida>
`@room` please add any agenda topics you have for next week's meeting: https://github.com/tc39/tg3/blob/main/meetings/notes/2023/2023-11-08.md#agenda


2023-11-08
[09:52:51.0796] <Chris de Almeida>
meeting starting shortly

[10:31:46.0009] <dveditz>
Chris de Almeida: The link you pasted in the mtg chat was to the policy. I was wondering where to find that "issue from SYG" that objected to the wording. 

[10:33:32.0522] <dveditz>
(maybe what was up on the screen _was_ the policy -- I wasn't able to read it. but it seemed like there must have been email or an issue or something with the objection)

[12:14:32.0930] <Chris de Almeida>
oh, that was the meeting notes. one sec

[12:14:56.0681] <Chris de Almeida>
https://github.com/tc39/notes/blob/main/meetings/2023-09/september-26.md#tc39-tg3-status-report

[12:15:23.0639] <Chris de Almeida>
dveditz: 

[13:32:40.0996] <dveditz>
thanks! that's what I was looking for.

[13:57:20.0800] <dveditz>
> How do you see this being compared to the existing CVE process that certainly all the browser implementations of JavaScript already are very involved in?

CVE is a -naming- process, not a "vulnerability handling" process. If there is a spec problem that is leading to vulnerabilities in implementations we (TC39) can certainly get  CVE to help coordinate a response if it helps. If it's not affecting any implementations (yet?) then a CVE may not be needed: just fix the spec before anyone has a chance to implement the footgun.

[13:59:47.0848] <dveditz>
Mitre has no problem assigning CVEs to "spec problems". The [TLS "POODLE" flaw](https://en.wikipedia.org/wiki/POODLE) was CVE-2014-3566. The recent [HTTP/2 Rapid Reset](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) protocol flaw was CVE-2023-44487 

[14:02:51.0394] <dveditz>
technically, CVE naming rules say all the independent implementation fixes should have each gotten a separate CVE saying "the fix for CVE-2023-44487 in <myserver>"

[14:03:04.0423] <dveditz>
but that's not helpful and no one did that that I see


2023-11-09
[16:08:07.0002] <dveditz>
one possible alternate term, if we need it, is to talk about a "security flaw" (problem? issue?) in the spec rather than a "vulnerability" if people are too hung up on that word. 

[20:48:24.0283] <dveditz>
It's possible the language won't have "vulnerabilities" in the way those protocols did. If not, great! If the worst we find or get reported are on the level of the "Security Considerations" sections of W3C and IETF specs that's fine. We wouldn't call those "vulnerabilities", and it's still a benefit to give guidance to people about how to use the features defined in a specification safely.

[05:29:35.0993] <Chris de Almeida>
that's helpful information and perspective. thanks Dan!

