2025-05-01
[11:42:56.0374] <Chris de Almeida>
https://github.com/ossf/Memory-Safety/issues/58

[11:43:52.0119] <Chris de Almeida>
openssf memory safety sig is looking for js-specific guidance when integrating with non-memory-safe languages, bindings, etc

[12:29:45.0538] <Mathieu Hofman>
Use wasm to maintain the memory safety of JS?


2025-05-07
[14:34:46.0356] <kriskowal>
Someone sent an AI assistant to transcribe today’s TG-3 meeting, which did not convene but we did discuss plans for next week and beyond for a while off the record. The bot sent Mark a transcript, which surprised and confused. Anyone know where this bot is coming from?

[14:35:21.0022] <kriskowal>
I think it would be consistent with our policy to just kick it out when it arrives, because we very clearly demarcate the portion of the meeting that is intended to be recorded.

[14:35:49.0063] <kriskowal>
And we post those recordings, so if there’s a need for a transcript, we can create one trivially after-the-fact.


2025-05-14
[11:03:28.0700] <Mathieu Hofman>
There is no official format for the heap snapshots that Chrome and VS Code devtools can load. However there are a few resources I had found after a quick search in the past, if anyone knows how to forward to Alex Vincent:
- https://stackoverflow.com/a/76831034, which has pointer to a [Microsoft article on the file format](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/memory-problems/heap-snapshot-schema), and pointers to generating and parsing code.
- A [github issue](https://github.com/JuliaLang/julia/issues/54414) for the Julia language (which seems to be able to generate such heap snapshots), talking about recent changes in the parsing of these files)

