2024-04-02
[19:35:10.0439] <sirisian>
Did anyone ever discuss import attribute preprocessors? Like the ability to register a "type" preprocessor that runs over imports matching  a type or condition? (I can only think of questionable use cases, but I'm still curious).

[19:38:01.0645] <littledan>
> <@sirisian:matrix.org> Did anyone ever discuss import attribute preprocessors? Like the ability to register a "type" preprocessor that runs over imports matching  a type or condition? (I can only think of questionable use cases, but I'm still curious).

We‚Äôve been thinking about this as a potential ‚Äúloader‚Äù hook. Probably the folks in the TC39 module harmony chat would have further thoughts.

[19:41:08.0366] <sirisian>
Oh right "loader". I see a few issues now mentioning that.

[20:34:46.0597] <sirisian>
littledan: Is that a public room?

[20:35:37.0035] <Justin Ridgewell>
#tc39-compartments:matrix.org

[20:35:55.0489] <sirisian>
Thank you.


2024-04-11
[12:08:54.0561] <nullvoxpopuli>
Hello! I'm with the signals group!

[12:09:52.0336] <nullvoxpopuli>
Wanted to share what library code could look like without effects https://github.com/NullVoxPopuli/signal-utils


2024-04-12
[08:59:20.0112] <Alex Rickabaugh>
Is there a specific channel/venue for discussing the pending signals proposal? Or is this the place? :)

[09:04:59.0952] <littledan>
For now we just have the discord and the proposal repo. We discussed signals a bunch in #tc39-delegates:matrix.org during the meeting and a bit afterwards.

[09:05:32.0968] <littledan>
Would folks be interested in having a Matrix-side channel for Signals? Would that make it easier for people here, if you want to keep discussing it? (Please emoji-react if you're interested in joining such a channel)

[09:53:55.0003] <Chris de Almeida>
> <@littledan:matrix.org> Would folks be interested in having a Matrix-side channel for Signals? Would that make it easier for people here, if you want to keep discussing it? (Please emoji-react if you're interested in joining such a channel)

ideally all TC39-related chat channels/rooms would be colocated (in matrix). we also have an obligation to ensure all technical discussion is public and matrix is where we have the archiving capability so that helps with that

[09:56:32.0908] <ryzokuken>
> <@littledan:matrix.org> Would folks be interested in having a Matrix-side channel for Signals? Would that make it easier for people here, if you want to keep discussing it? (Please emoji-react if you're interested in joining such a channel)

I would go further and say that it would be ideal to have the main chatroom on signals be a matrix room, I feel that a discord server is overkill for this and not as inclusive.

[10:09:55.0357] <trueadm>
For context, we did originally try Matrix last year when we were getting an idea on who was interested in the idea of this (this was very early on). There were a number of folks who found Matrix (or maybe Elements) buggy at the time and hard to follow with threads, so engagement went down until we moved to Discord.

I feel that revisiting this might be worthwhile though.

[10:13:59.0250] <littledan>
Yeah we just weren‚Äôt able to engage the stakeholders on Matrix. I tried. We‚Äôll make a Signals chat here, but I won‚Äôt close the other ones.

[10:14:31.0110] <littledan>
I got lots of people to make Matrix accounts but they just didn‚Äôt make themselves as accessible.

[10:15:20.0441] <littledan>
We can call this Matrix one the ‚Äúmain‚Äù one though :)

[10:16:43.0062] <shu>
i yearn for irc

[10:16:53.0563] <ryzokuken>
trueadm littledan thanks for the context, and sorry to hear that y'all ran into some problems with matrix

[10:17:29.0223] <ryzokuken>
some of the newer fixes in element should address the biggest pain points though and we're planning to do a refresh of our matrix guide

[10:19:44.0987] <trueadm>
Yeah there are definitely some nice fixes. Last time I used Elements the notifications was broken, it would say there was always something unread, and nothing I could do would remove it. It's still not perfect, but definitely better.

[10:19:54.0956] <trueadm>
 * Yeah there are definitely some nice fixes. Last time I used Elements the notifications were broken, it would say there was always something unread, and nothing I could do would remove it. It's still not perfect, but definitely better.

[10:20:01.0594] <ryzokuken>
yeah that was an annoying threads bug

[10:20:11.0996] <ryzokuken>
that's been fixed with the threads notification center for instance

[10:22:30.0712] <ryzokuken>
anyhow I think it's appropriate now that the proposal is stage 1 and there would be a lot more involvement from various folks from committee that we consider making the "main" discussion chat regarding technical details into a matrix room

[10:22:44.0512] <Michael Ficarra>
I switched to https://cinny.in/ back when someone recommended it, and it's... fine

[10:23:05.0386] <Michael Ficarra>
yes there is no way I'm going to get on Discord

[10:23:09.0613] <ryzokuken>
> <@michaelficarra:matrix.org> I switched to https://cinny.in/ back when someone recommended it, and it's... fine

I was just trying it out again, it's entirely written in javascript, simpler than element and easier to contribute to üòÑ 

[10:23:36.0697] <ryzokuken>
as I mentioned we're also going to formalize the rules and expectations for proposal chatrooms on matrix

[10:23:39.0602] <Bradford Smith>
How is discord less inclusive than Matrix? I'm honestly curious here, not saying you're wrong, just asking what you mean.

[10:25:27.0726] <Bradford Smith>
I seem to be out of the loop regarding Discord. What's the problem with it?

[10:27:47.0884] <ryzokuken>
> <@michaelficarra:matrix.org> yes there is no way I'm going to get on Discord

I got on it actually but now everyone on the signals server has to put up with finding out what music I'm listening to or what crappy MMO I'm playing lately

[10:28:44.0407] <Bradford Smith>
Wow. I'm on a bunch of different discord servers, and I don't see anything like that.

[10:29:09.0471] <kriskowal>
> <@usharma:igalia.com> I got on it actually but now everyone on the signals server has to put up with finding out what music I'm listening to or what crappy MMO I'm playing lately

That can be disabled, but not per-channel, oddly. Which is fun, because Agoric interfaces with their developer community in Discord of all places.

[10:29:36.0515] <ryzokuken>
> <@kriskowal:aelf.land> That can be disabled, but not per-channel, oddly. Which is fun, because Agoric interfaces with their developer community in Discord of all places.

yeah 99.9% of my discord usage is non-work related though

[10:29:54.0547] <kriskowal>
as is right and just

[10:30:02.0551] <ryzokuken>
(I sent a few messages on the signals room recently)

[10:30:11.0598] <ryzokuken>
 * (I sent a few messages on the signals server recently and that was basically it)

[10:30:39.0336] <ryzokuken>
> <@bradfordcsmith:matrix.org> Wow. I'm on a bunch of different discord servers, and I don't see anything like that.

you don't see what others are listening to/playing?

[10:30:48.0311] <ryzokuken>
maybe they just haven't shared that info on their profile

[10:30:52.0686] <ryzokuken>
which again, is perfectly fine

[10:30:55.0395] <Bradford Smith>
For me Matrix is the oddball. I only use it because of TC39.

[10:31:08.0517] <Bradford Smith>
and don't generally see anything here unless there's a meeting going on

[10:31:22.0045] <Bradford Smith>
(because I'm not looking)

[10:31:26.0146] <trueadm>
Discord has a really good iOS app IMO. That's what I really appreciate about it.

[10:32:01.0049] <ryzokuken>
in general the apps especially the mobile apps are great

[10:32:03.0095] <Bradford Smith>
> <@usharma:igalia.com> you don't see what others are listening to/playing?

No. I don't

[10:32:03.0517] <shu>
why do people want to see what music other people are listening to?

[10:33:32.0896] <ryzokuken>
> <@shuyuguo:matrix.org> why do people want to see what music other people are listening to?

before spotify launched the "jam" feature, discord was probably the best way to do a synced playlist with a bunch of friends

[10:34:45.0953] <shu>
i guess i am just antisocial

[10:35:55.0560] <ryzokuken>
COVID was a weird time I guess

[10:36:15.0138] <ryzokuken>
so a lot of social activity just moved to discord for many groups 

[10:38:11.0555] <littledan>
yeah I did warn everybody that we were going to have to move partly to Matrix  for interaction with TC39

[10:39:20.0162] <littledan>
this is sort of like developing polyfills in proposal repos vs outside: too much friction inhibits development and coordination

[10:39:44.0238] <kriskowal>
> <@usharma:igalia.com> COVID was a weird time I guess

Counter-point: AOL instant messenger had a feature for broadcasting your Winamp status. Now I just set your status to ‚ÄúListening to Gustav Mahler‚Äù for mostly the same effect.

[10:39:45.0265] <littledan>
(I tried to encourage the signals polyfill to be in a separate repo at first, too)

[10:39:53.0604] <kriskowal>
> <@usharma:igalia.com> COVID was a weird time I guess

 * Counter-point: AOL instant messenger had a feature for broadcasting your Winamp status. Now I just set my status to ‚ÄúListening to Gustav Mahler‚Äù for mostly the same effect.

[10:40:54.0406] <littledan>
Could someone with permission create a new TC39 Signals room?

[10:41:40.0108] <ryzokuken>
someone with a matrix.org address should do it rather than me, Chris de Almeida would you?

[10:42:40.0062] <Chris de Almeida>
TC39 Signals 

[10:42:42.0732] <ryzokuken>
> <@kriskowal:aelf.land> Counter-point: AOL instant messenger had a feature for broadcasting your Winamp status. Now I just set my status to ‚ÄúListening to Gustav Mahler‚Äù for mostly the same effect.

the tradition of sharing amazing music with your online friends is age old I see

[10:44:12.0863] <shu>
AIM status messages were the most passive aggressive things, they were great

[10:45:06.0794] <ryzokuken>
> <@littledan:matrix.org> this is sort of like developing polyfills in proposal repos vs outside: too much friction inhibits development and coordination

yeah, sorry if I sounded like too anti-discord, unfortunately there's no silver bullet and either platform would be more preferable to some folks over the others. I just feel that matrix is more appropriate due to colocation, policy and formality.

[10:45:59.0850] <Michael Ficarra>
@littledan:matrix.org you're going to have to get @bakkot:matrix.org to set up the logbot on that channel as well

[10:46:04.0313] <Michael Ficarra>
as is our obligation

[10:46:57.0050] <littledan>
> <@usharma:igalia.com> yeah, sorry if I sounded like too anti-discord, unfortunately there's no silver bullet and either platform would be more preferable to some folks over the others. I just feel that matrix is more appropriate due to colocation, policy and formality.

yeah, I think this is normal--to engage different groups of people, you have to go to different places. This is just like when, last week, I brought up TC39 issues at the Node Collaboration Summit, when they could just come to TC39 meetings or this Matrix channel instead.

[10:47:25.0659] <littledan>
> <@michaelficarra:matrix.org> @littledan:matrix.org you're going to have to get @bakkot:matrix.org to set up the logbot on that channel as well

Great, I encourage you to do so, bakkot-logbot bakkot 

[10:49:02.0429] <Chris de Almeida>
not sure what ryzokuken had in mind but 1. it requires tc39 participants to use a new thing in order to participate, 2. not open source and some functionality is paywalled

[10:53:15.0211] <Chris de Almeida>
it will happen automatically

[11:01:37.0083] <bakkot>
does indeed happen automatically for world-readable channels in the space, though the logbot has a bug where it gets stuck sometimes and I have to manually kill it and I haven't tracked down why

[11:02:25.0992] <littledan>
we just need both in order to reach the relevant people. It's just a fact about the world that some people will join one chat system, some people will join the other, and some will be willing to join both

[11:21:07.0273] <kriskowal>
sounds like it‚Äôs software. have you tried rubbing some AI on it?

[11:22:41.0181] <littledan>
Logs seem to be up and running, probably thanks to AI https://matrixlogs.bakkot.com/TC39_Signals/2024-04-12

[11:23:07.0191] <littledan>
doesn't log shared pictures but I don't think those have IP which is relevant to the final spec


2024-04-14
[23:42:09.0211] <Aapo Alasuutari>
Random question: Is there any instances of Array exotic objects outside of the ECMAScript spec itself? There are lots of array-like objects in HTML spec but is there any object that's defined to use the DefineOwnProperty from 10.4.2.1 and otherwise use normal internal methods from 10.1?

[23:45:15.0444] <Aapo Alasuutari>
* Random question: Are there any instances of Array exotic objects outside of the ECMAScript spec itself? There are lots of array-like objects in HTML spec but is there any object that's defined to use the DefineOwnProperty from 10.4.2.1 and otherwise use normal internal methods from 10.1?

[23:59:10.0501] <nicolo-ribaudo>
Anything in web specs that returns a `sequence<...>` is returning an array, for example `navigation.entries()`: https://html.spec.whatwg.org/#navigation-interface. It's defined at https://webidl.spec.whatwg.org/#js-sequence

[00:28:57.0162] <Aapo Alasuutari>
That seems to be just The Array exotic object, not some other object that would pass the test of "uses DefineOwnProperty from 10.4.2.1 and otherwise normal object internal methods".

I'm looking for cases where an external spec defines a custom exotic object type that behaves exactly like the Array exotic object but with some additions over the top, e.g.. an added internal slot that is used as a marker.

[00:30:19.0701] <bakkot>
> That seems to be just The Array exotic object, not some other object that would pass the test of "uses DefineOwnProperty from 10.4.2.1 and otherwise normal object internal methods".

those are defined to be the same thing

[00:31:02.0545] <bakkot>
if it uses DefineOwnProperty from 10.4.2.1 and otherwise normal object internal methods, then it is, by definition, an array exotic object; that is what it means to be an array exotic object

[00:31:17.0803] <Aapo Alasuutari>
Or in other words, I'm wondering if an engine should provide embedders a way to say "this object returns true from Array.isArray": It's unwieldy to test all internal method function pointers after all.

[00:33:50.0107] <bakkot>
generally speaking engines provide embedders a way to say "create an Array", which is sufficient; engines do not generally literally implement the [[DefineOwnProperty]] (etc) methods as actual functions to be tested

[01:07:22.0147] <Aapo Alasuutari>
I guess another way to phrase the same question is: Does the HTML spec define any Arrays that couldn't be created from within the ECMAScript language itself? And I think the only thing that can answer "yes" to this is added internal slots.

Changing internal methods can't be done from the language itself but it would also make the object no longer an Array exotic object so it's not relevant in this case. Internal slots cannot be added or removed from within the language and do not change the Array exotic object -ness of the object so that would be a possible case.

[06:29:07.0033] <nullvoxpopuli>
Matrix is super niche, fwiw


2024-04-15
[18:17:29.0652] <sachag>
hi all! I hope it's ok to use this community to ask for a little help ‚Äì I run the State of‚Ä¶ (State of JS, CSS, HTML, etc.) surveys and we have a lot of freeform data that needs to be normalized. 

In other words, the process of specifying that different phrasings such as e.g. ":has()", "has selector", and "css has" all refer to the same has_selector item (which is done through a custom dashboard that we've built).

We have a bunch of datasets that could use some input from people with expertise in specific domains, such as forms, DOM manipulation, web components, accessibility, and mobile apps. 

If you think you might be able to help please DM me for more info!

[18:18:09.0380] <sachag>
oh also here's a link to an early preview of the State of HTML 2023 survey results (please don't share it publicly!) https://state-of-html-2023.onrender.com/en-US/


2024-04-16
[13:44:41.0398] <pzuraq>
Is there a link to the Signals room? I can‚Äôt seem to find it via search weirdly

[13:44:55.0174] <littledan>
#tc39-signals:matrix.org 

[13:45:08.0882] <pzuraq>
Ty!

[14:20:54.0425] <Chris de Almeida>
for the future, the #tc39-space:matrix.org space is a great place to check for TC39 rooms as well


2024-04-17
[05:19:38.0091] <pzuraq>
gotcha, cool!


2024-04-26
[12:36:16.0125] <jmdyck>
@ptomato re standard language for consulting tables in the spec: See https://github.com/tc39/ecma262/issues/2944


2024-04-27
[06:50:22.0058] <Jack Works>
ecmarkup language service update:

I added underline to AOs that might trigger user codes. I need a temperature check, do you think this is good, or visually annoying?
I found usually `? ` and `! ` before the AO call indicates if it triggers user code or not.

[07:18:05.0305] <Richard Gibson>
underline to me suggests "link" rather than something so esoteric (e.g., as applied to `#sec-array.from` in the screenshot). Also, `!` before the call is an indication that it does **not** call user code (because user code can always throw)

[07:19:46.0883] <Richard Gibson>
 * underline to me suggests "link" rather than something so esoteric (e.g., as applied to `#sec-array.from` in the screenshot). Also, `!` before the call is generally an indication that it does **not** call user code (because user code can always throw)

[07:36:04.0161] <jmdyck>
I'm doubtful that `?` is that good an indicator either.

[07:41:53.0897] <Jack Works>
> <@gibson042:matrix.org> underline to me suggests "link" rather than something so esoteric (e.g., as applied to `#sec-array.from` in the screenshot). Also, `!` before the call is generally an indication that it does **not** call user code (because user code can always throw)

in rust-analyzer, they use an underline to indicate a variable is "let mut" not "let"

[07:43:06.0275] <Jack Works>
(I'll also do this later, if a variable is mutated in the emu-alg, it will have an underline)

[07:44:26.0557] <bakkot>
Jack Works: "can call user code" is a property of AOs which is tracked in the biblio. `!` before a call of an AO which can normally call user code is taken to indicate that it doesn't in this case. there's also an annotation for explicitly marking snippets as calling or not calling user code. see https://tc39.es/ecmarkup/#effects

[07:44:34.0666] <bakkot>
(this is viewable on the spec by pressing `u`)

[07:44:55.0361] <bakkot>
having this exposed in the language service seems good, but ideally it should use the same rules as ecmarkup

[07:46:00.0422] <bakkot>
personally I find the underline not the ideal way of displaying this - I'd probably do like `<sup>u</sup>` after the AO name or something - but the underline is fine too

[07:54:08.0042] <Jack Works>
> <@bakkot:matrix.org> having this exposed in the language service seems good, but ideally it should use the same rules as ecmarkup

currently I only read it from the biblio. AOs defined in the current file are ignored (because I don't do a full analysis yet)

[07:54:23.0719] <Jack Works>
* currently I only read it from the biblio. AOs defined in the current file (usually proposal AOs) are ignored (because I don't do a full analysis yet)

[07:55:30.0325] <Jack Works>
> <@bakkot:matrix.org> personally I find the underline not the ideal way of displaying this - I'd probably do like `<sup>u</sup>` after the AO name or something - but the underline is fine too

I also tried Inlay Hint to show a "uc " before the AO like webpage do, but it took too much space and visually worse than underline imo

