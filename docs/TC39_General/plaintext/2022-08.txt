2022-08-03
[05:16:34.0727] <Jack Works>
For a Pattern ({ a: b }), is Assignment ( pattern = expr ) and ForIn/ForOf ( for (pattern of) ) the only case that can change "b" instead of declare a new "b"?

[05:37:33.0833] <Ashley Claymore>
they do appear to be the only two places that reference AssignmentPattern in the spec, other references are for early errors


2022-08-04
[21:14:31.0457] <jmdyck>
Did github get rid of the "suggest a change" button (when reviewing  a PR)? Or has it moved somewhere?

[22:09:30.0330] <bakkot>
jmdyck: same place as always for me

[22:09:59.0700] <jmdyck>
I guess github just doesn't like me then.

[05:16:22.0821] <Feng Yu>
Can I make my pr merged if I am not a delegate? https://github.com/tc39/ecma262/pull/2800

[08:04:12.0936] <Jack Works>
you need to sign some law thing about intelligent property (?) as I can recall?

[08:06:03.0654] <littledan>
https://tc39.es/agreements/contributor/

[08:06:19.0443] <littledan>
Did someone say intellectual property? *comes running*

[08:14:56.0619] <ljharb>
Iâ€™ll bring it up in the next editor call

[16:06:07.0788] <Feng Yu>
> <@ljharb:matrix.org> Iâ€™ll bring it up in the next editor call

Thank you. Jordan 

[16:07:07.0300] <Feng Yu>
> <@littledan:matrix.org> https://tc39.es/agreements/contributor/

Done! I filled this form.


2022-08-05
[15:25:22.0013] <torazaburo>
What is the prerequisite for being able to join TC39-delegates? It only shows me "View". Is it trying to match my email with that at my employer and through which I am a delegate? That didn't seem to work.


2022-08-07
[10:32:31.0442] <snek>
does anyone know any tools to catch inconsistent sort functions in codebases? like some sort of linting

[10:33:16.0853] <snek>
my top idea right now is if development, override Array.prototype.sort with a custom function that checks and yells at you


2022-08-09
[05:24:17.0168] <Jack Works>
> <@devsnek:matrix.org> does anyone know any tools to catch inconsistent sort functions in codebases? like some sort of linting

What do you mean by inconsistent sorts? 

[05:59:12.0913] <Ashley Claymore>
`(a, b) => Math.random() > 0.5 ? -1 : 1`

[06:00:51.0049] <Ashley Claymore>
I could swear some browsers do (or used to) throw if they detected an inconsistent sort while running their algo

[06:12:41.0256] <Jack Works>
Enforced PartialOrd ðŸ¤”

[06:30:59.0462] <Ashley Claymore>
In ES5 said "If comparefn [..] is not a consistent comparison function [...] the behaviour of sort is implementation-defined." - which would have allowed an engine to throw if it detected it

[06:31:46.0063] <Ashley Claymore>
now we seem to only say that the "SortOrder" is implementation defined. So I _think_ throwing would no longer be spec compliant

[06:32:07.0425] <Ashley Claymore>
 * now we seem to only say that the "SortOrder" is implementation defined. So I _think_ throwing would no longer be spec compliant

[06:56:43.0823] <jmdyck>
ES6 (draft 27) changed "the behaviour of sort is implementation-defined" to "the sort order is implementation-defined" in that sentence.

[06:57:14.0970] <jmdyck>
 * ES6 (draft 27) changed "the behaviour of sort is implementation-defined" to "the sort order is implementation-defined" in that sentence.

[08:47:00.0096] <snek>
> <@jackworks:matrix.org> What do you mean by inconsistent sorts? 

look up "consistent comparator" in the spec

[10:14:02.0152] <snek>
> <@jmdyck:matrix.org> ES6 (draft 27) changed "the behaviour of sort is implementation-defined" to "the sort order is implementation-defined" in that sentence.

i just fixed a change someone made with a sort function inconsistent to the point that it displayed somewhat normally but still weird on chrome, reversed on firefox, and random order in hermes

[10:14:13.0659] <snek>
nothing threw thankfully :)

[10:15:26.0849] <Ashley Claymore>
and they did that accidentally?

[10:15:32.0170] <snek>
i put this together to detect inconsistent functions https://engine262.js.org/#gist=49dc7f2fb9ff3095d401f22529b4443f

[10:15:43.0262] <snek>
> <@aclaymore:matrix.org> and they did that accidentally?

yes

[10:16:47.0127] <Ashley Claymore>
it sounds more like an esoteric JS quiz question

[10:17:10.0097] <snek>
yeah we need more implementation defined behavior

[10:17:22.0167] <snek>
like those funny c programs 

[10:17:39.0201] <Ashley Claymore>
`evalAsYouLike(...)`

[10:18:13.0001] <snek>
technically `eval('debugger')` returns an implementation defined value

[10:18:27.0932] <snek>
i don't think anyone does anything interesting with it

[10:19:05.0763] <snek>
we should specify that to return undefined lol

[10:19:13.0760] <snek>
or empty i guess

[11:29:43.0689] <bakkot>
ubsan, but for javascript

[12:08:45.0264] <shu>
idbsan

