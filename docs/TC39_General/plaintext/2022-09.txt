2022-09-02
[14:23:35.0122] <iain>
Working on implementing Atomics.waitAsync: the spec text doesn't appear to say anything about what happens to a WaiterRecord if the agent that called waitAsync to create it terminates before it is notified. My initial expectation is that it would be removed from the WaiterList, but testing Chrome's implementation seems to indicate that there's still an entry

[14:24:53.0562] <iain>
(Methodology: create two workers, each of which calls Atomics.waitAsync on the same location, then terminate the first one. Atomics.notify has to be called twice to resolve the promise in the second worker, implying that the first worker's WaiterRecord is still hanging around)

[14:25:11.0720] <iain>
Is this the intended behaviour?

[15:58:39.0931] <shu>
yes, this is unfortunately a known leak

[15:58:45.0478] <shu>
i think there's some kind of lazy sweeping

[15:59:33.0553] <shu>
as for what the specified semantics are, i think it is currently underspecified. ecma262 doesn't really have a concept of "agent terminated"

[15:59:41.0357] <shu>
 * as for what the specified semantics are, i think it is currently underspecified. tc39 doesn't really have a concept of "agent terminated"

[15:59:48.0013] <shu>
 * as for what the specified semantics are, i think it is currently underspecified. ecma262 doesn't really have a concept of "agent terminated"

[16:02:03.0416] <shu>
it's not clear to me right now how easy it is to do this kind of sweeping eagerly

[16:02:13.0132] <shu>
iain: can it be done in Firefox easily?

[16:02:46.0497] <shu>
i agree with your intuition, it'd be nice if terminated agents made those entries disappear

[16:02:55.0793] <shu>
but like, how do you define when it's terminated?

[16:05:06.0289] <iain>
shu: I don't have any of it working yet in Firefox, so it's hard to say for sure how difficult it would be

[16:05:45.0049] <iain>
I thought I had a plan for clearing entries out when the runtime was shut down, but as I type this I realize that my current design only handles entries with an associated timeout

[16:09:14.0657] <iain>
But in any case, we already have code that cleans up when the runtime/context goes away: https://searchfox.org/mozilla-central/source/js/src/vm/JSContext.cpp#221

[16:11:10.0621] <iain>
In my test I just used `worker.terminate()`

[16:22:26.0297] <iain>
Actually, I don't understand why [this code](https://source.chromium.org/chromium/chromium/src/+/main:v8/src/execution/futex-emulation.cc;l=876;drc=2d80b7b69c11da0716326b7fdc15568fc30820c2) in V8 doesn't already clean out the waiter when the isolate for the terminated worker thread goes away

[16:48:19.0969] <shu>
huh, that's a good question

[16:48:28.0861] <shu>
it's been a while, could you please file an issue if you have a testcase handy?


2022-09-03
[17:34:37.0034] <iain>
shu: https://bugs.chromium.org/p/v8/issues/detail?id=13258

[17:39:55.0618] <jmdyck>
github appears to be down

[17:42:17.0113] <jmdyck>
yay, it's back up.

[18:32:27.0116] <shu>
iain: thank you!


2022-09-05
[12:05:06.0137] <nicolo-ribaudo>
Sorry for the refs spam in https://github.com/tc39/ecma262/pull/2819 😅

[12:06:17.0197] <nicolo-ribaudo>
I didn't realize that linking an issue/PR in our release notes means that it gets flooded by dependabot refs

[12:06:29.0669] <nicolo-ribaudo>
 * I didn't realize that linking an issue/PR in our release notes means that it gets flooded by dependabot refs

[12:26:22.0593] <bakkot>
yet another way dependabot is bad

[14:10:04.0004] <snek>
>735 hidden items

[14:11:43.0378] <snek>
its still going

[14:11:54.0636] <snek>
is this just gonna roll over to all 40k repos or whatever


2022-09-06
[20:21:29.0754] <Domenic>
I want to give a shout out to nicolo-ribaudo for some really exemplary work interfacing with a grouchy host maintainer (me) in https://github.com/whatwg/html/pull/8253#issuecomment-1236820949 . He went above and beyond to address my questions in detail, as well as ones I didn't ask, and totally flipped my feelings on the proposal. 🎉🚀

[01:23:19.0313] <nicolo-ribaudo>
> 3858 hidden items

[10:40:14.0224] <James DiGioia (mAAdhaTTah on GH)>
it just keeps going

[11:48:42.0231] <Michael Ficarra>
this is fine

[12:03:35.0635] <James DiGioia (mAAdhaTTah on GH)>
the PR is taking 10s to load now too

[12:05:35.0598] <ljharb>
I did file an issue with dependabot and pinged their PM fwiw

[12:20:56.0054] <nicolo-ribaudo>
They also got pinged on twitter a few hours ago, apparently this "feature" was supposed to be fixed more than one year ago

[12:21:20.0107] <nicolo-ribaudo>
> <@michaelficarra:matrix.org> sent an image.

Party at 10k?

[12:22:08.0145] <nicolo-ribaudo>
Oh let me try to remove the link from the release notes; if dependabot doesn't cache the changelog it will make it stop

[12:22:42.0093] <bakkot>
honestly kinda want to see how high it gets

[12:22:47.0035] <bakkot>
at least it's not sending me an email for every one

[12:23:43.0989] <nicolo-ribaudo>
> <@bakkot:matrix.org> honestly kinda want to see how high it gets

I'm curious too 😂

[12:23:53.0952] <nicolo-ribaudo>
I'll leave it as is then 🤷

[13:26:20.0540] <rkirsling>
s t r e s s  t e s t i n g

[13:26:21.0615] <rkirsling>
lol

[14:03:10.0365] <shu>
can someone explain what is happening to me

[14:10:59.0823] <Justin Ridgewell>
https://github.com/babel/babel/pull/14877 references `tc39/ecma262#2819` in the commit title, which DependaBot is copying into PRs to update Babel, which GH renders as a backlink to the ecma262 PR.

[14:11:26.0492] <Justin Ridgewell>
 * https://github.com/babel/babel/pull/14877 references `tc39/ecma262#2819` in the commit title, which DependaBot is copying into PRs to update Babel, which GH renders as a backlink to the ecma262 PR.

[14:19:20.0456] <shu>
lol

[14:19:57.0536] <shu>
DependaBot is a GH thing?

[14:21:14.0283] <joepie91 🏳️‍🌈>
reply-all chains, github edition

[14:56:31.0510] <ljharb>
yes, sadly it's a github thing

[14:56:56.0599] <ljharb>
they acquired one of the least good tools for this in the ecosystem, and proceeded to give it first-class billing and integration while not actually making it good

[14:58:44.0971] <bakkot>
and now github is down

[14:58:54.0115] <bakkot>
I choose to believe it's this PR hogging all the servers

[14:59:19.0953] <bakkot>
though if that does prove to be the case I'm going to feel slightly bad about suggesting we see how high it can get

[14:59:44.0454] <ljharb>
hahaha

[14:59:50.0024] <ljharb>
nah it'll serve them right if so

[15:00:04.0105] <shu>
teach them to depend on javascript

[15:00:23.0258] <ljharb>
dependabot was also the only dep updater tool that included at-names without backticking them, so i got about a year's worth of useless notifications before they fixed that one

[15:00:58.0401] <shu>
wonder how many notifications we generate for this person https://github.com/species

[15:02:16.0261] <joepie91 🏳️‍🌈>
> <@bakkot:matrix.org> I choose to believe it's this PR hogging all the servers

considering that nixpkgs stuff has *frequently* been unicorning, I would not even be very surprised

[15:02:33.0393] <joepie91 🏳️‍🌈>
above a certain amount of comments/commits/whatever, stuff starts breaking

[15:03:03.0958] <joepie91 🏳️‍🌈>
one of my gists also got so many comments that it started unicorning, and not long after that started happening, gist comments suddenly had a "load more" button 🙃

[15:08:00.0129] <joepie91 🏳️‍🌈>
https://www.githubstatus.com/

[15:08:09.0873] <joepie91 🏳️‍🌈>
it is now a reported issue across everything

[15:08:36.0299] <joepie91 🏳️‍🌈>
probably at least not the fault of dependabot, considering that everything is affected


2022-09-07
[11:34:04.0206] <Michael Ficarra>
great, now the PR just unicorns: https://github.com/tc39/ecma262/pull/2819

[11:34:44.0074] <Michael Ficarra>
this is a bit unfortunate, since we actually need to merge that PR at some point

[11:34:57.0411] <shu>
oh is that what "unicorning" means?

[11:35:03.0409] <shu>
i thought it was referring to having a billion views or something...

[11:35:13.0074] <Michael Ficarra>
no lol it means showing a literal unicorn

[11:36:24.0112] <Michael Ficarra>
bakkot's going to need to open another PR from that branch (can you even do that?) or contact GitHub support

[11:36:50.0400] <Michael Ficarra>
I guess you could push the commits from that branch onto a new branch, too

[11:41:38.0954] <bakkot>
it loads for me sometimes

[11:41:51.0501] <bakkot>
but yeah this is silly

