2025-02-02
[02:56:29.0670] <Aapo Alasuutari>
> <@ljharb:matrix.org> i mean it’s a data property, not sure that’s where I’d draw the silly line personally

I mean, it's an unconfigurable, unenumerable but writable property that mostly assumes you're only writing integers into it, but allows you to write anything whatsoever into it and then observe that write going through. If you were to define RegExp today, I would assume you'd use a setter kind of system that coerces to integer during writing instead of like it works now where coercion happens when the value gets used.

I definitely think it's silly :)

[09:25:43.0250] <bakkot>
if we were to define it today there would not be a mutable `lastIndex` property on regexps because that is an insane thing to exist

[09:26:50.0875] <bakkot>
but given the current design, the coercion (or at least validation) needs to happen on read rather than on write because you can make your own totally bespoke regexps and the machinery has to be tolerant of your bespoke regexp having a non-integral `lastIndex`

[09:30:19.0803] <Andreu Botella>
surely everyone agrees that thenables and matchables are a great idea


2025-02-04
[15:37:26.0629] <Meghan Denny>
what is the "order of property creation" for function objects

[15:37:45.0946] <Meghan Denny>
* what is the property creation order of property creation for functions

[15:37:55.0189] <Meghan Denny>
* what is the property creation order for functions

[15:40:52.0773] <Meghan Denny>
`Object.keys(Object.getOwnPropertyDescriptors(function () {}))` yields something different in chrome than it does firefox and safari 


2025-02-05
[16:20:02.0671] <iain>
Note that SpiderMonkey lazily initializes properties on functions, so you will get a different result if you access a property before enumerating them (eg `function foo() {}; foo.name; Object.keys(...` will give `["name", "prototype", "length"]`)

[18:41:54.0553] <ljharb>
sounds like we have potentially 3 different behaviors then, and we should make some test262 tests

[18:45:14.0780] <ljharb>
in chrome/node i get `[ 'length', 'name', 'arguments', 'caller', 'prototype' ]` and in safari `["length", "name", "prototype"]` and firefox `[ "prototype", "length", "name" ]`, which is 2 orders, and 2 sets of names, in what's probably a fun little venn diagram

[19:22:02.0462] <Meghan Denny>
another fun point: discovered this because i separately ran into that on safari the first time you call it it'll return `["length", "name", "prototype"]` and if you call it again on the same function it'll return `["prototype", "name", "length"]` hehe

[19:22:12.0623] <Meghan Denny>
* another fun point: discovered this because i separately ran into that on safari atm the first time you call it it'll return `["length", "name", "prototype"]` and if you call it again on the same function it'll return `["prototype", "name", "length"]` hehe

