2021-12-04
[17:44:17.0686] <jschoi>
sarahghp: I’m taking a look at your slides for the Decimal update. I’m a little confused by the “Standard Library” slide, as well as the subsequent “Downsides of Object-Based Operator Overloading” slide’s mentioning of Math.max. Could you clarify whether your current plan still to latch onto BigInt Math’s polymorphic Math extensions, or is it to add new methods to the Decimal global object? And what does Math.max have to do with operator overloading?

[17:44:35.0751] <jschoi>
https://drive.google.com/file/d/1qdieei11dZgDY_KnJhSBcFyHTMZOmCJr/view

[17:45:22.0509] <jschoi>
https://github.com/tc39/proposal-bigint-math/issues/14#issuecomment-952024624

[17:45:48.0431] <jschoi>
(I’m not planning to present an update on BigInt Math in the next plenary, until its chartered incubator meeting occurs.)


2021-12-05
[01:22:59.0290] <pokute>
I've been dogfooding my TypeScript support for pipeline operator at https://github.com/Pokute/AoC2021/blob/main/4.ts . It's starting to feel crucial for me. Lacking tacit function application (`|>>`) would be an inconvenience, but the other way around, I would have so many IIAFEs.

