2023-04-01
[19:11:30.0014] <Justin Ridgewell>
https://web.archive.org/web/20160328225427/wiki.ecmascript.org/doku.php?id=strawman:catch_guards

[19:12:25.0549] <Justin Ridgewell>
If non match, it rethrows

[19:12:31.0467] <Justin Ridgewell>
 * If none match, it rethrows

[23:11:52.0670] <ljharb>
i can't imagine it working any other way

[09:52:27.0609] <littledan>
“Rethrows” sometimes could act differently from “doesn’t catch” with respect to things like dev tools (with the latter being more useful). This is actually a potential advantage of a built in catch guard construct, but could also add significant implementation complexity 

[09:53:25.0478] <littledan>
(The complexity comes when you need to evaluate JS to determine whether the guard hits, but then go back and “don’t catch” as if that didn’t happen)

[13:40:36.0449] <ljharb>
oh true, good point. in that case i'd expect it to mean "doesn't catch", but the desugaring would be basically rethrowing

[13:40:57.0827] <ljharb>
to runtime JS i don't think there'd be a difference, only to dev tools/engines?

[13:45:19.0002] <littledan>
Right


2023-04-04
[04:18:53.0999] <nicolo-ribaudo>
What does `MV` stand for in https://tc39.es/ecma262/#sec-string-literals-static-semantics-mv? _M-escape Value_?

[04:18:59.0464] <nicolo-ribaudo>
 * What does `MV` stand for in https://tc39.es/ecma262/#sec-string-literals-static-semantics-mv? _Mescape Value_?

[04:22:19.0059] <Andreu Botella>
I think mathematical value? It's computing the escape code point number

[04:38:46.0701] <nicolo-ribaudo>
Ohh it makes sense, probably

[05:28:52.0731] <jmdyck>
The spec used to have phrasing like "are interpreted as having a mathematical value (MV), as described below" until PR #2451 was merged.

[05:30:41.0448] <littledan>
maybe it'd be helpful to expand this acronym in an editorial PR?

[05:30:47.0170] <littledan>
(^ good first PR?)

[05:34:36.0485] <jmdyck>
Do you mean add a sentence that gives the expansion, or change the SDO name to something longer?

[05:35:19.0489] <littledan>
change the SDO name to something longer

[05:35:46.0367] <littledan>
(more sentences of explanation are good too but I was suggesting the latter)

[05:47:40.0679] <jmdyck>
One wrinkle is that if you simply expand "MV" to "MathematicalValue", then you have 2 terms ("MathematicalValue" and "mathematical value") which denote distinct ideas, but only differ by capitalization+spacing, which is probably not good. (Which was sort of the point of #2451, but from a different angle.)

[05:48:30.0081] <jmdyck>
So if we did rename the SDO, an appropriate name might be something like NumericLiteralValue.

[05:54:10.0956] <jmdyck>
Similarly, SV -> StringLiteralValue, TV -> TemplateLiteralValue, TRV -> TemplateLiteralRawValue ? I don't know, I think I prefer the current names.

