2023-07-01
[01:40:03.0482] <Jack Works>
https://devblogs.microsoft.com/typescript/announcing-typescript-5-2-beta/

[01:40:49.0121] <Jack Works>
```js
Symbol.dispose ??= Symbol("Symbol.dispose");
Symbol.asyncDispose ??= Symbol("Symbol.asyncDispose");
```

rather than this, I'd suggest using Symbol.for for cross-realm, and use Object.defineProperty instead of `??=`

[06:07:26.0848] <Mathieu Hofman>
Well known symbols are unfortunately not registered. Unfortunately a shim /app that cares about spec compliance and cross realm values matching would have to arrange using the same unique symbol value.


2023-07-03
[01:22:33.0467] <Andreu Botella>
are there no unhandled rejection tests, in either test262 or WPT?

[01:30:40.0313] <Domenic>
There are a bunch in WPT, I wrote them

[01:31:00.0552] <Domenic>
https://github.com/web-platform-tests/wpt/tree/master/html/webappapis/scripting/processing-model-2/unhandled-promise-rejections

[01:32:02.0659] <Domenic>
Wow those are pretty old, before modern .any.js and stuff

[01:32:51.0986] <Andreu Botella>
I guess I suck at grep ðŸ˜…


2023-07-04
[07:25:43.0859] <annevk>
Where is the discussion for [Stop Coercing Things](https://docs.google.com/presentation/d/1m5R5J98W6adegghgkAlbSuFgAYJDT52yyFVdAqLjm00/edit)? I'm pretty sure most web platform APIs do coerce undefined.

[07:27:00.0259] <annevk>
Though perhaps this is mainly about required vs optional arguments in which case I could see where the comparison comes in, but that's a lot narrower.

[07:28:58.0054] <annevk>
Also, this should come with some kind of Web IDL story I think.

[09:04:20.0606] <bakkot>
annevk: No discussion for it yet, since it hasn't been presented

[09:05:08.0614] <bakkot>
and yes it's intended to be about required vs optional, though also I thought web platform guidance was that `undefined` should be treated exactly like not passing an argument?

[09:05:16.0460] <bakkot>
 * and yes it's intended to be about required vs optional, though also I thought web platform guidance was that passing `undefined` explicitly should be treated exactly like not passing an argument?

[09:05:24.0411] <bakkot>
 * and yes it's intended to be mostly about required vs optional, though also I thought web platform guidance was that passing `undefined` explicitly should be treated exactly like not passing an argument?

[09:05:53.0123] <bakkot>
certainly that's how almost all ES functions work

[09:08:43.0053] <bakkot>
or to put it a different way: ES already has the principle that passing an explicit `undefined` should be treated like leaving out an argument, in general, and if we additionally adopt the web-platform behavior of throwing when missing a required argument, that gets us all the way to "stop coercing undefined"

[09:25:52.0051] <bakkot>
updated the slides to make the claim about the web platform more correct

