2023-09-01
[03:05:15.0300] <annevk>
Apparently CLDR is not stable enough for the web: https://github.com/web-platform-tests/wpt/pull/41760. This needs some attention from Intl folks I think. littledan can you help me out finding the relevant people?

[03:33:36.0266] <littledan>
> <@annevk:matrix.org> Apparently CLDR is not stable enough for the web: https://github.com/web-platform-tests/wpt/pull/41760. This needs some attention from Intl folks I think. littledan can you help me out finding the relevant people?

Yeah this is sort of a long known, and to some extent it even provides back pressure on cldr to not change too much (which is extremely unfortunate)

[03:38:39.0571] <littledan>
Responded on the issue, thanks for pinging me here


2023-09-04
[09:42:46.0930] <snek>
in the new pattern matching, you have to specify `let` for every binding you want?


2023-09-05
[18:17:22.0268] <jschoi>
I remember there being a W3C document giving style guidelines for DOM API design saying, e.g., “Abbreviations like HTML should be capitalized in functions’ and classes’ names.” Does this sound familiar to anyone?

[18:25:50.0994] <snek>
this? https://www.w3.org/TR/design-principles/#casing-rules

[18:31:45.0814] <jschoi>
snek: Perfect, this is exactly it; thank you.

[19:27:32.0409] <ljharb>
> <@devsnek:matrix.org> in the new pattern matching, you have to specify `let` for every binding you want?

yes, that's the idea. instead of bindings being the default, and identifiers needing a marker, it's the reverse.

[19:28:05.0479] <snek>
that seems backward from practical usage in every language with pattern matching that i've used lol

[19:28:55.0806] <snek>
though it is hard to compare to languages with nominal typing

[02:18:59.0607] <Jack Works>
> <@devsnek:matrix.org> in the new pattern matching, you have to specify `let` for every binding you want?

yes, because we find it's hard to read if we create bindings by default 


2023-09-06
[14:06:27.0278] <TabAtkins>
Ultimately the issue is we have two things that want to use the "plain ident" space - binding patterns, and variable patterns. After a bunch of discussion, we decided that letting variables take that space resulted in a better syntax, more naturally flowing from how literal patterns worked. This also meant we didn't have to predecide what kind of binding you produced (var/let/const).


2023-09-07
[18:47:03.0721] <tewuzij>
What is plain ident?

[21:45:02.0006] <ljharb>
like `foo` - an identifier that could refer to a variable

