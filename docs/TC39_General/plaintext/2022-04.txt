2022-04-01
[17:57:53.0235] <shu>
ljharb: i apologize for my tone earlier

[14:58:47.0336] <ljharb>
> <@shuyuguo:matrix.org> ljharb: i apologize for my tone earlier

thanks, i apologize for getting worked up.


2022-04-02
[09:56:55.0474] <DerekNonGeneric>
> The Closure type system was originally based on the EcmaScript 4 spec.
> — https://github.com/google/closure-compiler/wiki/Types-in-the-Closure-Type-System#javascript-types

By chance, would anyone here happen to know where this is specified in the ES4 spec? The link provided is broken, but [here's the Wayback Machine's backup](https://web.archive.org/web/20161006100721/http://wiki.ecmascript.org/doku.php?id=spec:spec) if anyone knows where to look (it's pretty extensive).

[10:35:24.0676] <DerekNonGeneric>
3rd section of the [Core language](https://web.archive.org/web/20160802002701/http://wiki.ecmascript.org/lib/exe/fetch.php?id=spec%3Aspec&cache=cache&media=spec:core-language-d2.html) document seems like what that was referring to so maybe never mind? (much of that notation looks unfamiliar even having used Closure myself for several years)

[10:38:35.0267] <DerekNonGeneric>
 * 3rd section of the [Core language](https://web.archive.org/web/20160802002701/http://wiki.ecmascript.org/lib/exe/fetch.php?id=spec%3Aspec&cache=cache&media=spec:core-language-d2.html) document seems like what that was referring to so maybe never mind? (much of that notation looks unfamiliar even having used Closure myself for several years)

[12:17:04.0117] <DerekNonGeneric>
> Deprecated syntax: adding a dot before the `<` (e.g. `!Array.<string>`) is also accepted.

Okay, makes sense now; more modern Closure (and TS) annotations don't look like this due to the syntax for parametric type application using the dot now being deprecated (at least by Closure)


2022-04-06
[07:18:15.0402] <sideshowbarker>
for https://github.com/mdn/content/issues/14744, comments in that issue or here would be welcome

[08:12:09.0824] <Ashley Claymore>
Hey sideshowbarker I'll try and add some more info or raise a PR soon. I raised it quickly before I forgot. Context: https://es.discourse.group/t/how-does-super-work-as-an-object/1279/4

[08:13:10.0686] <Ashley Claymore>
 * Hey sideshowbarker I'll try and add some more info or raise a PR soon. I raised it quickly before I forgot. Context: https://es.discourse.group/t/how-does-super-work-as-an-object/1279/4

[10:35:03.0438] <sideshowbarker>
> <@aclaymore:matrix.org> Hey sideshowbarker I'll try and add some more info or raise a PR soon. I raised it quickly before I forgot. Context: https://es.discourse.group/t/how-does-super-work-as-an-object/1279/4

ah thanks — I hadn’t realized it was you who raised it


2022-04-08
[20:18:01.0218] <sideshowbarker>
I’m confused about why we have an article at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction in MDN for a `GeneratorFunction()` constructor and global object when there is no such constructor and object in th spec

[20:18:51.0868] <sideshowbarker>
but then I look in the spec at https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generatorfunction-constructor and I see a whole section on **The GeneratorFunction Constructor**…

[20:19:33.0455] <sideshowbarker>
ah I see the spec defines it as an intrinsic

[20:23:25.0438] <bakkot>
it exists it's just not a property of the global object

[20:27:56.0944] <sideshowbarker>
bakkot: so in looking at the spec, how can I tell that it’s not a property of the global object?

[20:28:31.0320] <sideshowbarker>
and does not being a property of the global object mean it’s not callable at all from user JavaScript code?

[20:28:37.0814] <sideshowbarker>
not even observable?

[20:32:13.0244] <jmdyck>
You can tell it's not a property of the global object because it's not listed as such in section 19.

[20:34:27.0346] <jmdyck>
and also because 27.3.1 "The GeneratorFunction Constructor" doesn't have a bullet saying `is the initial value of the "Foo" property of the global object`

[20:36:43.0312] <jmdyck>
But you can't tell by looking at https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generatorfunction, which is maybe unfortunate.

[20:37:00.0540] <sideshowbarker>
yeah

