2024-02-01
[14:55:10.0151] <snek>
idea that popped into my head a few minutes ago while looking at some debugging tooling that someone made... what if you could attach metadata to stack traces to identify specific function invocations?
for example lets say you have something like an event emitter, you could do something like
```js
class Emitter {
  emit(name, data) {
    System.setStackMetadata(name);
    // ...
  }
}
```
and then in a stack trace, it would be identified as `emit (event name)` instead of just `emit`


[14:58:11.0346] <Chris de Almeida>
/me cries in stalled `error stacks` proposal

[15:04:06.0792] <Ashley Claymore>
> <@devsnek:matrix.org> idea that popped into my head a few minutes ago while looking at some debugging tooling that someone made... what if you could attach metadata to stack traces to identify specific function invocations?
> for example lets say you have something like an event emitter, you could do something like
> ```js
> class Emitter {
>   emit(name, data) {
>     System.setStackMetadata(name);
>     // ...
>   }
> }
> ```
> and then in a stack trace, it would be identified as `emit (event name)` instead of just `emit`
> 

I've wanted that for some stuff too!

[15:04:21.0246] <snek>
error stacks proposal would be nice

[15:04:32.0053] <snek>
ljharb: what was the holdup on that

[15:07:43.0003] <Chris de Almeida>
> <@devsnek:matrix.org> ljharb: what was the holdup on that

I think web platform folks asked for the ocean to be boiled


2024-02-02
[16:29:01.0893] <ljharb>
i wanted to specify just the format, and leave the contents for a follow-on, and i was blocked until i can specify the contents too

[16:50:20.0313] <snek>
> <@ljharb:matrix.org> i wanted to specify just the format, and leave the contents for a follow-on, and i was blocked until i can specify the contents too

the contents as in the stringification?

[16:50:36.0460] <snek>
isn't the point of the proposal to provide structured data so that stringification doesn't need to be relied on ðŸ¤”

[17:08:43.0825] <ljharb>
yes.

[17:09:14.0575] <ljharb>
as in the exact wording of the stack trace. Which i guess would have to be in English despite the spec not specifying prose messaging.

[17:09:56.0215] <ljharb>
it certainly felt unreasonable and demotivating :-) . if folks feel like i could still come back and specify structure only, then Iâ€™d be happy to do that.

[17:15:25.0656] <ljharb>
* it certainly _felt_ unreasonable and demotivating :-) . if folks feel like i could still come back and specify structure only, then Iâ€™d be happy to do that.

[18:04:43.0831] <Jessidhia>
> <@kriskowal:matrix.org> Use of _ Iâ€™ve encountered is not as a black hole (void) but as a readable reference to the last thing bound. 

this reminded me of $_ in Perl

[19:48:58.0692] <Jack Works>
> <@devsnek:matrix.org> idea that popped into my head a few minutes ago while looking at some debugging tooling that someone made... what if you could attach metadata to stack traces to identify specific function invocations?
> for example lets say you have something like an event emitter, you could do something like
> ```js
> class Emitter {
>   emit(name, data) {
>     System.setStackMetadata(name);
>     // ...
>   }
> }
> ```
> and then in a stack trace, it would be identified as `emit (event name)` instead of just `emit`

you may want to know console.createTask

[19:52:33.0045] <snek>
thats cool

[21:11:27.0360] <Kris Kowal>
> <@jessidhia:matrix.org> this reminded me of $_ in Perl

My sincerest apologies.

[22:59:10.0147] <snek>
> <@devsnek:matrix.org> thats cool

seems to be limited to devtools though, doesn't modify the actual stack trace

[04:55:35.0807] <annevk>
> I think web platform folks asked for the ocean to be boiled

Pointer?

[09:58:34.0744] <ljharb>
> <@annevk:matrix.org> > I think web platform folks asked for the ocean to be boiled
> 
> Pointer?

https://github.com/tc39/notes/blob/e338ef708f553b03cf5b74dfb5a585e532991100/meetings/2019-03/mar-28.md?plain=1#L136

[10:09:22.0861] <annevk>
ljharb: that doesn't seem like web platform folks asking for boiling an ocean?

