2024-10-02
[22:36:09.0957] <rkirsling>
wait I don't think I realized that it's legal to return random crap from a constructor

[22:37:22.0625] <rkirsling>
so `class C { foo() { return 3; } constructor() { return [1]; } }` in an uninstantiable class then? (in the sense that you can call `new C()` but you can never get "a `C`")

[22:37:39.0164] <rkirsling>
does that have a non-illegitimate usage?

[22:38:02.0907] <rkirsling>
 * so `class C { foo() { return 3; } constructor() { return [1]; } }` is an uninstantiable class then?
(in the sense that you can call `new C()` but you can never get "a `C`")

[22:39:04.0984] <rkirsling>
 * so `class C { foo() { return 3; } constructor() { return [1]; } }` is an uninstantiable class then?
(in the sense that you can call `new C()` but you can never get "a `C`" and you could only access `foo` via `C.prototype`)

[22:40:02.0974] <rkirsling>
 * so `class C { foo() { return 3; } constructor() { return [1]; } }` is an uninstantiable class then?
(in the sense that you can call `new C()` but you can never get "a `C`", so `foo` could only be accessed via `C.prototype`)

