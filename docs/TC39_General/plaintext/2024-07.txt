2024-07-01
[10:49:38.0640] <Michael Ficarra>
will someone tell me why `structuredClone` is in HTML and not ECMAScript?

[10:49:46.0317] <Michael Ficarra>
this kinda thing is going to keep happening https://github.com/whatwg/html/issues/10425

[10:50:20.0862] <littledan>
ask Mark Miller, he has repeated his stance recently that structured clone is somehow bad and shouldn't be moved to ECMAScript. (I don't actually know the reason.)

[10:53:33.0275] <shu>
we got consensus to move it already

[10:53:43.0019] <littledan>
when was that?

[10:53:47.0252] <shu>
it keeps getting deprioritized for me though, probably need some help to work on it

[10:54:07.0599] <shu>
mark's hang up was about making proxies more transparent which i think was fine

[10:54:25.0448] <shu>
but that was planned to be sequenced after the behavior-preserving thing of moving the existing spec into ES

[10:54:27.0223] <shu>
let me dig up notes

[10:54:31.0960] <littledan>
ah OK perfect

[10:54:42.0257] <littledan>
I'm glad I'm wrong

[10:56:31.0084] <shu>
https://github.com/tc39/notes/blob/main/meetings/2022-01/jan-24.md#conclusionresolution-4

[10:56:46.0933] <shu>
would love to actually get started on this, but yeah, probably won't have cycles in the near future either

[11:03:39.0925] <littledan>
great, I'm glad Michael Ficarra is volunteering for this work!

[11:04:56.0208] <littledan>
speaking of relayering, here's a writeup of some of my thoughts about next steps for AbortSignal/AbortController: https://gist.github.com/littledan/47b4fe9cf9196abdcd53abee940e92df

[11:06:31.0248] <littledan>
I got plenty of feedback at the last TC39 meeting that we shouldn't have a separate parallel API, so this is moving in the direction of just slightly evolving the current one, as well as ensuring that it can be used from 262, without duplicating it

[11:08:26.0433] <littledan>
(if the implicit propagation section doesn't make sense because I didn't include usage examples yet, just ignore it)

[11:09:47.0505] <shu>
> <@littledan:matrix.org> great, I'm glad Michael Ficarra is volunteering for this work!

he is?

[11:09:55.0963] <Michael Ficarra>
> <@shuyuguo:matrix.org> he is?

no

[11:10:06.0570] <littledan>
aww, I thought that might work

[11:10:12.0307] <littledan>
was joking

[11:10:22.0750] <Michael Ficarra>
I know your tricks @littledan:matrix.org

[11:12:53.0537] <Andreu Botella>
I wonder if just calling a host hook if the value is an object, and then check the internal fields if it returns `EMPTY`, would just work well enough

[11:14:30.0099] <Andreu Botella>
IIUC, none of the internal slots the algorithm checks can be in a platform object other than [[ErrorData]] (for `DOMException`, and that is handled before the regular error handling)

[11:15:12.0948] <bakkot>
> <@littledan:matrix.org> speaking of relayering, here's a writeup of some of my thoughts about next steps for AbortSignal/AbortController: https://gist.github.com/littledan/47b4fe9cf9196abdcd53abee940e92df

> It is critical to use `addEventListener` rather than `abortSignal.onabort = abortAction` because the latter code would overwrite any other reaction registered on the same `AbortSignal`.

wait, really? I assumed it was a setter

[11:23:59.0500] <littledan>
definitely is a setter, but I may have misunderstood the semantics

[11:27:03.0463] <littledan>
https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-idl-attributes

[11:37:18.0180] <littledan>
the value (single thing to be overwritten) vs listener list (for addEventListener) seems to be how this is specified. The setter sets the value, so it overwrites. A quick test script confirms that behavior is implemented.

[11:37:54.0241] <littledan>
anyway who knows if anyone makes the error in practice of setting .onabort rather than using addEventListener; presumably everyone knows that the setter strategy is deprecated, right?

[11:39:16.0348] <Ashley Claymore>
https://developer.mozilla.org/en-US/play?id=xlGpIW8PMTYxDhfmP5Bok40Q7Lh2gJ2EUfb8FUD5ABh3dk1JhEs7jssU4Enq2Rlwm0b7cRvhw2YJ4uLH

[11:42:06.0836] <littledan>
> <@abotella:igalia.com> I wonder if just calling a host hook if the value is an object, and then check the internal fields if it returns `EMPTY`, would just work well enough

for what?

[11:42:44.0750] <Andreu Botella>
> <@littledan:matrix.org> for what?

in terms of separating the web platform parts of the structured clone algorithm from the JS parts

[11:43:33.0930] <Andreu Botella>
looking at it some more, that could work, but it would need host hook requirements

[11:43:56.0945] <Andreu Botella>
things like, make sure to add an entry to `memory` before calling back into the 262 AO

[11:44:29.0218] <littledan>
yes, there definitely need to be host hooks for structured clone. Generally, I don't think test262 needs to have its hooks correspond to the spec hook structure, though, right?

[11:46:19.0067] <Andreu Botella>
right, I was kind of thinking out loud of a way to do that that would only require one host hook, since the current algorithm has a couple places where it goes from dealing with JS stuff to web platform stuff and back again


2024-07-03
[21:31:07.0465] <snek>
could WeakRef have something like an `is(obj) -> bool` api? i feel like that's safe since `obj` has to be held strongly and any other mismatch is false.

[21:31:15.0209] <snek>
 * could WeakRef have something like an `is(obj) -> bool` method? i feel like that's safe since `obj` has to be held strongly and any other mismatch is false.

[21:53:58.0403] <bakkot>
would that be different from `.deref() == obj`?

[21:54:22.0387] <bakkot>
if not it doesn't seem necessary, unless I'm missing something

[21:54:35.0718] <bakkot>
 * would that be different from `.deref() === obj`?

[00:07:45.0211] <Ashley Claymore>
Would it still `AddToKeptObjects`?

[00:45:46.0426] <Ashley Claymore>
I presume the idea is that it could skip that? But then I think that means this is possible:

```
ref.is(obj); // true
obj = null;
ref.deref(); // undefined, we observed sync GC
```

[09:48:45.0826] <nicolo-ribaudo>
Does the explicit resource management proposal have any tests? I see that there is a feature flag for it in test262, but I cannot find anywhere where it's used

[09:51:32.0761] <nicolo-ribaudo>
I'm trying to validate the Babel implementation

[09:52:30.0975] <littledan>
huh, I thought rbuckton said last meeting that he had some tests

[09:52:35.0301] <littledan>
but I can't find a PR for them

[09:53:47.0486] <rbuckton>
https://github.com/tc39/test262/pull/3866

[09:54:31.0214] <rbuckton>
Though I need to update the tests with some of the recent needs consensus changes. 


2024-07-04
[18:07:40.0320] <snek>
> <@aclaymore:matrix.org> I presume the idea is that it could skip that? But then I think that means this is possible:
> 
> ```
> ref.is(obj); // true
> obj = null;
> ref.deref(); // undefined, we observed sync GC
> ```

it could add `obj` to kept objects i guess. 

[18:07:55.0479] <snek>
the goal is to avoid adding the other thing it holds

[18:08:11.0434] <snek>
 * the goal is to avoid adding whatever it contains if its not `obj`

