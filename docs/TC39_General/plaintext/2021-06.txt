2021-06-01
[18:19:23.0164] <bakkot>
sideshowbarker: https://bakkot.github.io/matrix-logs/

[19:25:54.0924] <sideshowbarker>
> <@bakkot:matrix.org> sideshowbarker: https://bakkot.github.io/matrix-logs/

Beautiful

[01:29:48.0147] <Rob Palmer>
bakkot: 

[01:30:11.0227] <Rob Palmer>
your logs look good - for some reason Chrome offers to translate from Albanian

[02:39:57.0546] <sideshowbarker>
adding a `lang` attribute to the `html` would probably make Chrome not do that
```html
<html lang=en>
```

[02:40:13.0202] <sideshowbarker>
 * adding a `lang` attribute to the `html` element would probably make Chrome not do that
```html
<html lang=en>
```

[07:08:01.0333] <ryzokuken>
👋

[07:08:14.0006] <Jory Burson>
Hi ryzokuken !!!

[07:08:50.0442] <Jory Burson>
Rob Palmer Aki trying to close out that question about the video I sent ya'll in email/dm

[07:09:12.0696] <Jory Burson>
ping me when you log on?

[07:16:59.0845] <yulia>
hey hey jory

[07:33:40.0983] <Jory Burson>
Hi yulia !!!!

[08:24:45.0904] <bakkot>
> <@sideshowbarker:mozilla.org> adding a `lang` attribute to the `html` element would probably make Chrome not do that
> ```html
> <html lang=en>
> ```

I'm hesitant to do this because the bot does not know what languages the channels it's scraping are in. it happens to be the case that the current set is english, but that's not a guarantee

[08:26:17.0241] <sideshowbarker>
> <@bakkot:matrix.org> I'm hesitant to do this because the bot does not know what languages the channels it's scraping are in. it happens to be the case that the current set is english, but that's not a guarantee

Ah yeah that makes sense

[08:26:30.0090] <ryzokuken>
I suppose Google's auto-detection would work better once there's more content...

[08:30:40.0574] <sideshowbarker>
yeah in general language guessers aren’t reliable when there’s only a small amount of content

[08:32:18.0188] <sideshowbarker>
in the W3C HTML checker I have a language-guessing library integrated in, to try to catch cases where a document has the wrong `lang` value

[08:33:15.0442] <sideshowbarker>
and the error message that guesser emits includes a link to the bug tracker, for people to report cases where it’s misidentified the language of document

[08:33:19.0728] <sideshowbarker>
https://github.com/validator/validator/search?q=language+misidentified+is%3Aissue&type=issues

[08:34:02.0259] <sideshowbarker>
most of the reports are for documents with very little text content — things like online product catalogues

[08:35:40.0536] <sideshowbarker>
anyway, the reason that guesser was added to the HTML checker is that we know there are a significant number of documents with `lang=en` attributes that aren’t in English

[08:37:18.0044] <sideshowbarker>
…because of a cargo-cult copy/pasting that goes on — some developers don’t know what`lang=en` is, but they see it in another document, so so they just copy it as-is into their document, even if it’s not in English

[08:38:06.0492] <ryzokuken>
perhaps also has something to do with poorly made templates and such?

[08:38:19.0655] <sideshowbarker>
the biggest problem that causes in practice is for non-English screen-reader users

[08:38:35.0354] <sideshowbarker>
> <@usharma:igalia.com> perhaps also has something to do with poorly made templates and such?

yeah stuff like that too


[08:38:45.0523] <ryzokuken>
"my wordpress theme comes with `lang=en` set"

[08:38:52.0421] <sideshowbarker>
bingo

[08:38:57.0247] <ryzokuken>
 * "my free wordpress theme comes with `lang=en` set"

[08:39:32.0257] <sideshowbarker>
so anyway, a document having no `lang` at all is better for screen-reader users than a document have the wrong `lang` value

[08:39:43.0293] <sideshowbarker>
 * so anyway, a document having no `lang` at all is better for screen-reader users than a document having the wrong `lang` value


2021-06-02
[21:24:53.0072] <sideshowbarker>
Was the pipeline operator proposal integrated into the ES spec itself already?

[21:25:55.0880] <sideshowbarker>
nevermind, of course not — I see it’s only at stage 1 still

[21:39:16.0144] <sideshowbarker>
OK yeah, FYI we’re dropping all info about the pipeline operator from MDN and from [BCD](https://github.com/mdn/browser-compat-
data)

[21:41:32.0674] <sideshowbarker>
 * OK yeah, FYI we’re dropping all info about the pipeline operator from MDN and from 
[BCD](https://github.com/mdn/browser-compat-data)

[21:42:17.0390] <sideshowbarker>
for details, see https://github.com/mdn/content/pull/5394

[21:42:57.0229] <sideshowbarker>
 * OK yeah, FYI we’re dropping all info about the pipeline operator from MDN and from [BCD](https://github.com/mdn/browser-compat-data)

[21:43:49.0532] <sideshowbarker>
and see also https://github.com/mdn/browser-compat-data/pull/6957#pullrequestreview-509954390

[23:03:14.0923] <Florian Scholz>
Merged, thanks sideshowbarker :)

[23:47:52.0146] <jschoi>
> <@sideshowbarker:mozilla.org> OK yeah, FYI we’re dropping all info about the pipeline operator from MDN and from [BCD](https://github.com/mdn/browser-compat-data)

Removing pipe operator’s documentation until it’s settled seems appropriate, given its high flux, but did something happen regarding the pipe operator at the May TC39 meeting?

[23:51:42.0265] <sideshowbarker>
> <@jschoi:matrix.org> Removing pipe operator’s documentation until it’s settled seems appropriate, given its high flux, but did something happen regarding the pipe operator at the May TC39 meeting?

Nothing I know of. But as far as implementations, Firefox backed out what it had implemented for it

[23:54:43.0623] <jschoi>
Oh yeah; also seems like a good idea. 

[00:04:51.0248] <jschoi>
> ddbeck: The pipeline operator (|>) appears to be going backwards in terms of acceptance. This PR redirects the page to the parent operators page, then removes the content.
Not sure what they mean by this. 🤔

[00:05:03.0131] <jschoi>
* > ddbeck: The pipeline operator (|>) appears to be going backwards in terms of acceptance. This PR redirects the page to the parent operators page, then removes the content.

Not sure what they mean by this. 🤔

[00:07:21.0958] <jschoi>
* https://github.com/mdn/content/pull/5394#issue-655147724
> ddbeck: The pipeline operator (|>) appears to be going backwards in terms of acceptance. This PR redirects the page to the parent operators page, then removes the content.

Not sure what they mean by this. 🤔

[00:09:40.0869] <jschoi>
* https://github.com/mdn/content/pull/5394#issue-655147724
> ddbeck: The pipeline operator (|>) appears to be going backwards in terms of acceptance.

Not sure what they mean by this. 🤔

[00:10:58.0498] <jschoi>
* https://github.com/mdn/content/pull/5394#issue-655147724
> ddbeck: The pipeline operator (`|>`) appears to be going backwards in terms of acceptance.

Not sure what they mean by this. 🤔

[09:10:17.0318] <hober>
How would I go about teaching the TC39 Delegates channel that I'm a delegate?

[09:11:05.0044] <ptomato>
pinging one of the admins to add you

[09:11:40.0965] <Jack Works>
lol

[09:47:29.0639] <leobalter>
hober: do you need/want access to the TC39 Delegates channel or extended access to the Reflector repo in the TC39's GH org?

For the TC39 Delegates channel, I'd ping Aki Rob Palmer yulia, for the extended access you'd need a point of contact from your org to register a new delegate in the TC39's Admin-and-Business repo. I believe that's probably done at this point?

[09:48:16.0758] <leobalter>
I tried but I can't invite hober 

[09:52:49.0159] <Rob Palmer>
hober: you are now privileged

[09:53:07.0165] <hober>
I think I already have access to things on GitHub.

[09:53:10.0186] <hober>
Thanks!

[14:55:13.0374] <bakkot>
jmdyck: I'd like to get back to #545 now that fields have landed; but it needs a rebase, do you think you'll get a chance sometime?

[15:16:20.0947] <ljharb>
DerekNonGeneric: the stacks proposal is perfectly viable and in no way withdrawn

[15:16:49.0405] <ljharb>
DerekNonGeneric: in general, it's not necessarily appropriate for a reference implementation to exist for any pre-stage-3 proposal.

[15:19:42.0294] <ljharb>
DerekNonGeneric: also "SystemJS" has nothing to do with it - that the namespace is called "System" is the reason SystemJS named itself that, but the System namespace predates both SystemJS and the stacks proposal

[15:20:26.0521] <ljharb>
DerekNonGeneric: happy to chat more about it but the matrix interface is weird for me; i'd prefer irc :-)

[15:25:10.0345] <DerekNonGeneric>
crystal clear now, thanks ljharb

[15:50:48.0577] <jmdyck>
bakkot: 545 needs a few things more than a rebase; I should be able to get back to it soon.


2021-06-03
[01:00:24.0710] <ryzokuken>
oooh, looks like someone mentioned this channel somewhere

[01:00:35.0962] <ryzokuken>
the voyager bot is here...

[08:03:58.0178] <shu>
is there a way to auto-accept DM requests?

[08:04:56.0452] <littledan>
in practice, the DM request thing isn't much of a bother for me, since people can send messages before the DM request is accepted, and also because you end up having an open DM with many of the people you want to talk to

[08:05:04.0548] <littledan>
(I don't know how to auto-accept)

[08:05:57.0505] <shu>
well, i'm trying to accept one someone sent me yesterday, and it says "The person who invited you already left the room." so i can't view what the message was

[10:49:27.0252] <ljharb>
i just want to disable that gate entirely; i don't want to have to approve DMs

[11:07:46.0404] <littledan>
oh, I guess people should learn that they shouldn't leave the room like that, I dunno

[11:08:02.0058] <littledan>
maybe someone else knows how to remove the gate, but I think once you know how to use it, it's really OK

[11:12:27.0227] <ptomato>
I expect it's intended as a mitigation for harassment until a mod can step in; if someone is sending you abusive DMs from multiple accounts, then you can block them without having to read the messages

[12:53:43.0502] <shu>
is it possible to consolidate matrix accounts somehow?

[12:53:53.0141] <shu>
i forgot i already had a mozilla.org one

[12:54:31.0945] <joepie91 🏳️‍🌈>
shu: there's currently no official consolidation or migration mechanism, but there's a tool at https://ems.element.io/tools/matrix-migration that kinda emulates it by inviting your new user into all the old user's rooms and such

[12:54:47.0266] <shu>
i see

[12:54:47.0739] <joepie91 🏳️‍🌈>
presumably(tm) it also works for consolidation*

[12:54:52.0743] <joepie91 🏳️‍🌈>
* I am not liable for any problems :D

[12:54:56.0773] <joepie91 🏳️‍🌈>
 * \* I am not liable for any problems :D

[12:55:05.0765] <littledan>
(of course you can just do this manually, by sort of orphaning one of your accounts)

[12:55:19.0772] <littledan>
for permissions porting, we'll just do this manually, whether or not you use that tool

[12:56:00.0382] <joepie91 🏳️‍🌈>
> <@ljharb:matrix.org> i just want to disable that gate entirely; i don't want to have to approve DMs

there's currently a small protocol niggle getting in the way of that; the inability to reliably tell whether a room is a DM or not

[12:56:09.0502] <joepie91 🏳️‍🌈>
presumably that'll get fixed with the "canonical DM" spec changes

[12:56:14.0571] <shu>
i guess i should just use the mozilla.org one, let me invite myself...

[12:58:10.0182] <shu>
oh i can't invite in all rooms

[12:58:20.0884] <shu>
okay, that's enough obstacles for one day, will try this later

[12:59:19.0149] <ryzokuken>
shu: you can join the rooms via links, but the way the rooms are set up currently, you cannot use the invite button to do it...

[12:59:36.0836] <ryzokuken>
maybe someone can change the permissions on all the rooms to make sure everyone can invite new people?

[13:07:03.0342] <bakkot>
ryzokuken: thaaaaaat seems like a bug

[13:07:24.0945] <bakkot>
the protocol, or at least the server, should not allow being in the state "anyone can join, but not anyone can invite"

[13:07:30.0494] <ryzokuken>
no, it's just permissions set badly.

[13:08:07.0522] <bakkot>
if the protocol allows permissions to be in an inconsistent state that's a bug in the protocol, not a problem with the permissions

[13:08:07.0718] <ryzokuken>
in the room settings, we changed it to "anyone with the link can join" but "who can invite" is set the just the admins or sth

[13:08:35.0942] <ryzokuken>
hm, that's a fair criticism actually.

[13:08:53.0678] <ryzokuken>
I could make an issue, but for now we can just fix the permissions

[13:09:53.0089] <DerekNonGeneric>
same boat here: would like to consolidate (unsure whether i was mozilla.org or matrix.org)

[13:10:14.0221] <DerekNonGeneric>
 * same boat here: would like to consolidate (unsure whether i want mozilla.org or matrix.org)

[13:12:10.0573] <DerekNonGeneric_>
for sure want to get rid of the parenthesis after my name tho

[13:12:56.0014] <ryzokuken>
that would be a problem if both accounts have the same nick

[13:13:18.0568] <ryzokuken>
the `_` at the end solution works, but you don't even necessarily have to globally do that

[13:13:44.0809] <ryzokuken>
if there is a subset of rooms where you want both accounts to be present, just change the nicks of the secondary account for those rooms

[13:14:10.0886] <ryzokuken>
`/myroomnick <your fallback nick>` in a room but change your nick in just one room

[13:17:42.0842] <DerekNonGeneric_>
i don't need both accounts to be present, but maybe if i globally update the nick of the secondary, i will not have the parens

[13:17:52.0532] <joepie91 🏳️‍🌈>
> <@bakkot:matrix.org> the protocol, or at least the server, should not allow being in the state "anyone can join, but not anyone can invite"

I believe this is because invites can override things like bans

[13:18:18.0800] <joepie91 🏳️‍🌈>
though I'm not sure whether that is also the case when someone doesn't have unban perms


2021-06-04
[00:42:55.0901] <sideshowbarker>
so I’m working resolving https://github.com/mdn/content/issues/5647

[00:43:25.0459] <sideshowbarker>
…and I am reading https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#strict_mode

[00:44:08.0171] <sideshowbarker>
…and there I read:
> The body of a class is executed in strict mode

[00:44:34.0825] <sideshowbarker>
…but I am trying to find the part of the ES spec which states that requirement

[00:45:05.0692] <sideshowbarker>
at https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-strict-mode-code find this:
>  All parts of a ClassDeclaration or a ClassExpression are strict mode code. 

[00:45:22.0627] <sideshowbarker>
 * at https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-strict-mode-code, I find this:
> All parts of a ClassDeclaration or a ClassExpression are strict mode code.

[00:45:33.0521] <sideshowbarker>
 * at https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-strict-mode-code, I find:
> All parts of a ClassDeclaration or a ClassExpression are strict mode code.

[00:46:41.0438] <sideshowbarker>
…which I realize is a non-normative re-statement of that actual requirements — but anyway, that does not explicitly say anything similar about the body of a class

[00:52:05.0912] <sideshowbarker>
aha nevermind I think I found it myself:
https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#prod-ClassExpression

[00:52:28.0393] <sideshowbarker>
…which of course is all obvious in hindsight

[05:18:42.0268] <jmdyck>
i.e., the fact that "the body of a class" is included in "All parts of a ClassDeclaration or a ClassExpression" ?

[07:22:59.0236] <sideshowbarker>
jmdyck: yes, that


2021-06-05
[18:15:28.0645] <DerekNonGeneric>
settled on mozilla.org account bc impossible to put your account into an unrecoverable state (if you get locked out of matrix.org accounts, there is no recourse)

[19:22:56.0652] <DerekNonGeneric>
it has occurred to me that i can champion my own proposals seeing as how i am in two orgs that are ecma members

[19:36:07.0358] <DerekNonGeneric>
it would be nice if someone can clarify exactly what deliverables are necessary for a proposal

[19:36:41.0963] <DerekNonGeneric>
specifically, do i need a keynote presentation as well as a repo w/ explainer text?

[19:38:11.0147] <bakkot>
DerekNonGeneric: https://tc39.es/process-document/

[19:39:13.0890] <bakkot>
not mentioned here, but stage advancement (past 0) requires consensus, which can only be achieved at plenary, so you will also need to make a presentation at a meeting sufficient

[19:39:34.0836] <bakkot>
strictly speaking no slideshow is required for this, and for very simple proposals going for stage 1 people don't always bother, but it's a good idea

[19:40:04.0153] <bakkot>
 * not mentioned here, but stage advancement (past 0) requires consensus, which can only be achieved at plenary, so you will also need to make a presentation at a meeting sufficient to convince people it's worth pursuing

[19:40:54.0384] <bakkot>
for advancement, you'll also need to add your proposal along with the supporting materials to the agenda for a meeting at least ten days before the start of that meeting

[19:41:17.0027] <bakkot>
(each agenda lists the deadline for that meeting)

[19:48:32.0946] <DerekNonGeneric>
interesting, guess stage 1 is what i would be requesting seeing as how i have not learned any ecmamarkup

[19:49:31.0285] <DerekNonGeneric>
thanks for the tips bakkot

[19:56:19.0571] <bakkot>
you'd be requesting stage 1 anyway, proposals have to go through the stages in order

[20:00:03.0939] <DerekNonGeneric>
that's news to me (the accessible Object.hasOwn proposal skipped stages)

[20:09:57.0867] <bakkot>
it is possible to advance multiple stages in a single meeting, yes

[20:10:30.0072] <bakkot>
only ever happens for very small proposals, though, and it's pretty unusual

[20:12:11.0836] <bakkot>
basically the thing that happens is you go for stage 1, but have satisfied the requirements for stage 2, and after you present if people are sufficiently enthusiastic about advancement, and there's no major questions about semantics remaining, you say "ok, then can we have consensus for stage 2 also"

[20:12:54.0717] <bakkot>
I wouldn't recommend that as the goal, though; usually there will be major questions about the semantics. there are almost always such questions, for early-stage proposals.

[20:15:43.0597] <bakkot>
incidentally if you want to attend you will need to get one of your organizations' current delegates to open a PR to the admin-and-business repo with your details (which is private to delegates)

[20:24:33.0856] <DerekNonGeneric>
ok, i will need to wait for business hours tomorrow (thanks again for the info bakkot)

[20:25:35.0583] <DerekNonGeneric>
ooh it's Friday

[20:26:21.0667] <bakkot>
next meeting isn't until the middle of July anyway, so don't feel too rushed

[20:36:19.0892] <bakkot>
DerekNonGeneric: oh, also, I should have pointed you to the actual docs for how to champion a proposal, i.e. https://github.com/tc39/how-we-work/blob/master/champion.md

[20:45:08.0923] <DerekNonGeneric>
super useful, thanks (had not seen this yet)

[10:22:11.0599] <bakkot>
Justin Ridgewell: any plans to bring `groupBy` to plenary sometime soon? (I ask because I needed it today.)

[10:27:10.0359] <bakkot>
hmm, I just realized there's actually a possible design question with `groupBy`, namely, do you return a Map or an object

[10:27:24.0075] <bakkot>
Map is more useful but more awkward

[13:24:18.0703] <littledan>
Let's generalize objects to permit any JS value as a property key to address this issue

[13:41:49.0379] <bakkot>
😐️

[13:43:44.0101] <littledan>
We can use obj{prop} to avoid the legacy ToPropertyKey algorithm

[13:44:05.0259] <littledan>
Obviously with [no LineTerminator here]

[13:46:02.0775] <bakkot>
We would of course have to add `Object.getOwnPropertyNamesNoForReal`, to avoid breaking existing consumers of `getOwnPropertyNames` and `getOwnPropertySymbols`

[13:46:37.0688] <bakkot>
`Object.getOwnPropertyNamesFinalFinalVersion2`

[13:48:01.0200] <jschoi>
Property “names” probably would no longer be an apt name; more like `getOwnPropertyKeys`. Though how prototypes would work is another issue…

[13:48:47.0956] <jschoi>
* Property “names” probably would no longer be apt terminology; more like `getOwnPropertyKeys`. Though how prototypes would work is another issue…

[16:22:11.0520] <Justin Ridgewell>
bakkot: Thanks for the prompt. https://docs.google.com/presentation/d/1fY_jsD8bVZ8P95Mr7cEr3WdCbhMLdEQ7OS5hhLCbfJ4/edit

[16:33:59.0547] <bakkot>
Justin Ridgewell: re slide 7: it's not just Lodash, it's every language with a `partition` method: of the top of my head, at last haskell, scala, ruby, kotlin, rust

[16:36:23.0355] <bakkot>
(It is of course still confusing even though there's strong precedent for one choice. Just wanted to call out that the precedent isn't just Lodash.)

[16:38:36.0013] <Justin Ridgewell>
I’ll update

[16:39:04.0907] <Justin Ridgewell>
(I’ve never used a functional language, was’t aware of the wider precedent)


2021-06-06
[18:38:48.0517] <jschoi>
* Property “names” probably would no longer be apt terminology; it could be more like `Object.getOwnPropertyKeys`.

[18:44:27.0511] <jschoi>
* Property “names” probably would no longer be apt terminology for non-string values; the method name could be like `Object.getOwnPropertyKeys`.

[18:44:45.0446] <jschoi>
* Property “names” probably would no longer be apt terminology for non-string keys; the method name could be like `Object.getOwnPropertyKeys`.

[21:33:36.0541] <loganfsmyth>
Anyone know what's going on here? Are we all misunderstanding? https://stackoverflow.com/questions/67855714/eval-declaration-instantiation-when-calling-context-is-evaluating-formal-param

[22:42:33.0855] <bakkot>
loganfsmyth: that note became stale as of https://github.com/tc39/ecma262/pull/1046

[22:43:25.0564] <bakkot>
I suppose I'll open a PR

[22:44:57.0707] <loganfsmyth>
excellent, that makes sense

[22:48:11.0618] <bakkot>
https://github.com/tc39/ecma262/pull/2428

[22:48:42.0996] <bakkot>
loganfsmyth: You want to answer the stackoverflow question or shall I try to dig up my old account?

[22:50:01.0509] <loganfsmyth>
I posted an answer, thanks!

[11:39:06.0092] <bakkot>
jmdyck: re https://github.com/tc39/ecma262/issues/2400, you suggest replacing "Set the code evaluation state of contextA such that when evaluation is resumed with a Completion v [...]." with "Resume contextB passing B-VALUE. Let v be the value returned by the resumed computation."

[11:39:17.0501] <bakkot>
 problem: it is not generally the case that contextB is the thing which resumes the thing just suspended.

[11:40:22.0294] <bakkot>
e.g., in Await, it's not contextB which does the resumption, but rather some future Await Fulfilled Function (or Await Rejected Function, of course)

[11:40:46.0978] <bakkot>
I'm trying to think of an alternative phrasing which avoids this, but haven't come up with anything I like yet

[11:43:00.0616] <jmdyck>
"the thing which resumes" present tense? I say that contextB is the execution context that most recently *resumed* the evaluation of contextA.

[11:43:29.0448] <bakkot>
I'm focusing specifically on the step

> Resume contextB passing B-VALUE. Let v be the value returned by the resumed computation.


[11:43:52.0369] <bakkot>
to me, that step implies that contextB is going to be the thing which provides _v_.

[11:44:18.0768] <bakkot>
and, by extension, is going to be the thing which _subsequently_ resumes contextA.

[11:46:44.0315] <jmdyck>
Ah,okay. Well, it doesn't actually *say* that contextB will be returning v and resuming contextA, though that's what I would have thought.

[11:47:55.0984] <jmdyck>
I still don't grok Await machinery

[11:49:54.0350] <bakkot>
It's not just Await; the same issue arises for plain generators. contextB is the _previous_ caller of `Generator.prototype.next`, whereas _v_ is going to be provided by the _next_ caller of `Generator.prototype.next`.

[11:51:29.0174] <bakkot>
Maybe something like

> 1. Resume contextB passing B-VALUE.
> 1. Assert: when control reaches here, contextA is once again the running execution context.
> 1. Let _v_ be the value with which contextA was resumed.

[11:51:32.0447] <jmdyck>
and those can be 'in' different contexts (w plain generators)?

[11:52:05.0563] <bakkot>
they are necessarily going to be in different contexts, since each call to `.next` (as with all function calls) creates and pushes a new context

[11:53:01.0898] <bakkot>
I guess I ought to have said "contextB is the execution context of the previous call of Generator.prototype.next", not "is the caller of"

[11:53:07.0974] <jmdyck>
sorry, i need to page this in

[11:53:22.0639] <jmdyck>
haven't thought about it for a while

[11:58:02.0893] <bakkot>
Not to worry, lots to page in

[11:58:19.0303] <bakkot>
I'll have a PR up in a bit

[12:02:48.0102] <jmdyck>
okay, i think i'm more or less up to speed

[12:03:46.0179] <jmdyck>
And yeah, the wording could be improved, but I'm not sure about your suggestion.

