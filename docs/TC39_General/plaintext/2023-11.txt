2023-11-06
[20:55:18.0446] <snek>
is human display for durations a solved problem anywhere? especially normalizing the units... 

[20:55:50.0847] <snek>
the more i think about this the more complex it gets and the less i am sure that it could be generally solved

[20:56:02.0420] <snek>
 * the more i think about this the more complex it gets and the less sure i am that it could be generally solved

[07:05:02.0756] <ryzokuken>
snek welcome to my world 

[07:05:52.0921] <ryzokuken>
the current version of the DurationFormat proposal can represent durations in mostly all forms that applications need 

[07:38:46.0029] <snek>
> <@usharma:igalia.com> the current version of the DurationFormat proposal can represent durations in mostly all forms that applications need 

does it support normalizing units? like if I just have a large quantity of seconds can it turn that into hours or weeks or whatever 

[07:58:04.0892] <ryzokuken>
> <@devsnek:matrix.org> does it support normalizing units? like if I just have a large quantity of seconds can it turn that into hours or weeks or whatever

weeeeell

[07:58:24.0233] <ryzokuken>
it can do that for subsecond units because those could be expressed as a fraction

[07:58:45.0618] <ryzokuken>
it could in the future do it up to hours

[07:59:41.0285] <ryzokuken>
but since a day may not have a set number of hours, it couldn't do further without a point of reference 

[08:01:37.0129] <snek>
it has a point of reference!! it's intl api!!!

[08:01:54.0802] <snek>
or do you mean a timestamp 

[08:02:00.0152] <ryzokuken>
no I mean a...

[08:02:01.0017] <ryzokuken>
yeah

[08:02:35.0123] <ryzokuken>
a `ZonedDateTime` for setting up the context for the calculations

[08:04:08.0782] <snek>
I guess I'll have to keep using the passable moment duration formatter 

[08:04:24.0401] <snek>
it has some weird behavior though 

[08:05:33.0628] <Andreu Botella>
I assume that wouldn't take leap seconds into account, right?

[08:05:41.0447] <Andreu Botella>
since IIRC UTC ignores them

[08:05:53.0483] <ryzokuken>
https://github.com/formatjs/formatjs/tree/d95d21f1ea10a190f45968e909323e9af6992921/packages/intl-durationformat

[08:05:56.0895] <ryzokuken>
there's this

[08:07:08.0926] <snek>
but if it doesn't normalize units it's not really usable 

[08:07:15.0077] <snek>
I just have a unix timestamp

[08:07:22.0720] <ryzokuken>
ah right

[08:08:01.0443] <pipobscure>
You surely have a timestamp and some second timestamp to get a duration.

[08:08:05.0643] <snek>
I guess that is sort of a distinct operation

[08:08:19.0040] <pipobscure>
The difference is your duration and one of them is your reference

[08:08:28.0580] <snek>
I have a unix timestamp and I want to display the duration between it and the current time

[08:08:54.0296] <pipobscure>
Which means the duration is now-ts and the reference is now

[08:09:04.0853] <snek>
today I use moment but moment is kind of mid

[08:09:07.0054] <pipobscure>
Which is enough to let it normalize units

[08:09:19.0576] <snek>
yeah if something implemented that

[08:09:33.0478] <pipobscure>
It’s just tha if you have ONLY a duration of 2234234seconds you can’t normalise

[08:09:53.0319] <snek>
yeah that's the problem 

