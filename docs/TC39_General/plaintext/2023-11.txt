2023-11-06
[20:55:18.0446] <snek>
is human display for durations a solved problem anywhere? especially normalizing the units... 

[20:55:50.0847] <snek>
the more i think about this the more complex it gets and the less i am sure that it could be generally solved

[20:56:02.0420] <snek>
 * the more i think about this the more complex it gets and the less sure i am that it could be generally solved

[07:05:02.0756] <ryzokuken>
snek welcome to my world 

[07:05:52.0921] <ryzokuken>
the current version of the DurationFormat proposal can represent durations in mostly all forms that applications need 

[07:38:46.0029] <snek>
> <@usharma:igalia.com> the current version of the DurationFormat proposal can represent durations in mostly all forms that applications need 

does it support normalizing units? like if I just have a large quantity of seconds can it turn that into hours or weeks or whatever 

[07:58:04.0892] <ryzokuken>
> <@devsnek:matrix.org> does it support normalizing units? like if I just have a large quantity of seconds can it turn that into hours or weeks or whatever

weeeeell

[07:58:24.0233] <ryzokuken>
it can do that for subsecond units because those could be expressed as a fraction

[07:58:45.0618] <ryzokuken>
it could in the future do it up to hours

[07:59:41.0285] <ryzokuken>
but since a day may not have a set number of hours, it couldn't do further without a point of reference 

[08:01:37.0129] <snek>
it has a point of reference!! it's intl api!!!

[08:01:54.0802] <snek>
or do you mean a timestamp 

[08:02:00.0152] <ryzokuken>
no I mean a...

[08:02:01.0017] <ryzokuken>
yeah

[08:02:35.0123] <ryzokuken>
a `ZonedDateTime` for setting up the context for the calculations

[08:04:08.0782] <snek>
I guess I'll have to keep using the passable moment duration formatter 

[08:04:24.0401] <snek>
it has some weird behavior though 

