2022-02-01
[22:51:09.0734] <sideshowbarker>
jmdyck: FYI, I made further changes based on review comments from other MDN writers. If/when you have time to take a look at the current text, that’d be much welcome.

[05:46:18.0256] <jmdyck>
sideshowbarker: I think the "For example" para has a problem where it says `and you change that to {"list":["oil","flour","sugar"]}`, because it depends on how one imagines accomplishing that change. I read it as (say) `copy[1] = {"list": ...}`, but I'm guessing you meant it as `copy[1].list = ["oil"...]`. The first isn't 'visible' to the original, the second is.

[06:57:18.0971] <sideshowbarker>
> <@jmdyck:matrix.org> sideshowbarker: I think the "For example" para has a problem where it says `and you change that to {"list":["oil","flour","sugar"]}`, because it depends on how one imagines accomplishing that change. I read it as (say) `copy[1] = {"list": ...}`, but I'm guessing you meant it as `copy[1].list = ["oil"...]`. The first isn't 'visible' to the original, the second is.

Ah yes, thanks, I'll fix that

[09:04:02.0766] <sideshowbarker>
jmdyck: thanks again — now updated

[10:52:52.0346] <devsnek>
this is some pretty wild spam https://gc.gy/111446560.png

[10:53:49.0706] <ptomato>
looks like the body text and username are scraped from the tc39 discourse

[10:57:34.0492] <bakkot>
oh hey, node shipped fetch! (experimentally)

[14:33:06.0306] <rickbutton>
> <@devsnek:matrix.org> this is some pretty wild spam https://gc.gy/111446560.png

looks like spammers are starting to use gpt lol

[14:33:46.0644] <rickbutton>
either that or kevin's bot has become sentient and we all need to be very worried


2022-02-04
[17:48:59.0928] <sideshowbarker>
looking at https://github.com/mdn/content/issues/12679

[17:49:58.0563] <sideshowbarker>
comments in that issue or here would be welcome

[17:50:27.0801] <sideshowbarker>
in https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/block#block_scoping_rules_with_let_const_or_function_declaration_in_strict_mode MDN says:
>  In strict mode, starting with ES2015, functions inside blocks are scoped to that block. Prior to ES2015, block-level functions were forbidden in strict mode.

[17:50:55.0970] <sideshowbarker>
I am looking for where in the spec such a requirement is actually stated

[17:51:32.0730] <sideshowbarker>
I don’t seem to find it in the Appendix C summary https://tc39.es/ecma262/multipage/strict-mode-of-ecmascript.html

[17:52:03.0131] <sideshowbarker>
 * I don’t seem to find it in the Appendix C summary https://tc39.es/ecma262/multipage/strict-mode-of-ecmascript.html

[17:54:46.0435] <jmdyck>
See https://tc39.es/ecma262/#sec-block-level-function-declarations-web-legacy-compatibility-semantics

[17:58:55.0225] <jmdyck>
So "Prior to ES2015, block-level functions were forbidden in strict mode." is technically correct, but misleading, because they were also forbidden in non-strict mode. (Forbidden by spec, not by implementation, that is.)

[18:08:12.0933] <Jessidhia>
ah, and this is the part that implements the block scoping <https://tc39.es/ecma262/multipage/ecmascript-language-statements-and-declarations.html#sec-blockdeclarationinstantiation> (3b)

[18:20:50.0595] <jmdyck>
Re not finding it in Annex C: It looks like Annex C doesn't mention differences between strict and non-strict that only arise due to Annex B stuff.

