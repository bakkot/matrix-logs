2021-04-01
[12:12:15.0000] <ljharb>
i think https://github.com/tc39/ecma262/pull/2365 can get the ready to merge label?

[12:12:24.0000] <ljharb>
also perhaps https://github.com/tc39/ecma262/pull/2362


2021-04-05
[17:40:23.0000] <Bakkot>
ljharb: looks like Begin is broken again? https://travis-ci.org/github/tc39/ecma262/jobs/765884351

[17:40:46.0000] <Bakkot>
or, possibly, someone is trying to run a mitm attack on github's infrastructure

[17:40:50.0000] <Bakkot>
(probably not that one though)

[18:17:10.0000] <Bakkot>
(I guess that would be travis's infra, rather)

[18:17:37.0000] <Bakkot>
went away on a retry, anyway, so probably not worth looking into unless it keeps happening

[18:55:36.0000] <ljharb>
yeah seems spurious to me


2021-04-15
[20:27:27.0000] <ljharb>
thought i posted here that i wouldn’t make the meeting today, but i guess i didn’t

[20:58:37.0000] <Bakkot>
we figured you were out celebrating the IPO

[06:49:15.0000] <ljharb>
indeed i was


2021-04-19
[07:26:54.0000] <shu>
wat


2021-04-21
[12:27:13.0000] <Bakkot>
i assume we are not going to do the meeting today

[12:27:26.0000] <ljharb>
that was my assumption

[12:30:31.0000] <ljharb>
i'll take it off the calendar

[13:32:44.0000] <shu>
yes, i assume no meeting as well


2021-04-26
[15:30:41.0000] <shu>
any opinion on whether ArrayBuffer(length) should be stylized as ArrayBuffer([ length ]), like SharedArrayBuffer?

[15:31:03.0000] <shu>
ToIndex handles undefined, so in a sense AB's length argument is obviously optional

[15:31:29.0000] <shu>
but there's no obvious handling of the argument as if it were optional in the constructor itself

[15:32:18.0000] <shu>
in any case both AB and SAB should be stylized the same

[15:33:20.0000] <shu>
okay, thought about it some more, i think there is no compelling argument for styling it as not optional,

[15:34:19.0000] <ljharb>
stylized? it determines the `.length`

[15:35:01.0000] <ljharb>
tbh i think both AB and SAB should have it as required, it's a conceptual category that doesn't require an exception be thrown for `undefined`

[15:35:16.0000] <shu>
interesting

[15:35:21.0000] <shu>
sorry, i meant to say "styled"

[15:35:23.0000] <ljharb>
but it's a lightly held opinion, altho i more strongly feel they should be the same, whichever is chosen

[15:35:52.0000] <ljharb>
right but i meant it's not purely an editorial choice (without a note overriding the normative behavior)

[15:36:08.0000] <shu>
so the presence of [ ] isn't about whether the method/constructor has sensible dealing or doesn't throw with "default", but it's a conceptual thing?

[15:36:14.0000] <shu>
it doesn't override normative behavior

[15:36:21.0000] <ljharb>
it alters the .length of the function

[15:36:24.0000] <ljharb>
and that's how i've always interpreted it, yes

[15:36:36.0000] <shu>
oh, i misread, you are correct

[15:36:38.0000] <ljharb>
a function's length is conceptually the number of required arguments it has, for some value of "required"

[15:36:45.0000] <shu>
i thought you were talking about the .length of the AB (.byteLength)

[15:36:48.0000] <ljharb>
ah no

[15:36:51.0000] <ljharb>
the constructor arity

[15:36:59.0000] <shu>
right, let's see what engines say...

[15:37:16.0000] <ljharb>
AB's is 1 in Safari

[15:37:33.0000] <ljharb>
both are 1 in Chrome

[15:37:33.0000] <shu>
both AB and SAB report 1 for .length on all engines

[15:37:57.0000] <ljharb>
so, required for both

[15:38:04.0000] <shu>
yeah, SAB's should change then. i have no idea why this diverged to begin with

[15:38:23.0000] <ljharb>
(arguably it could be "minimum expected arguments" instead of "required" but the connotation is similar)

[15:39:08.0000] <shu>
1 minute consensus needed PR

[15:39:13.0000] <shu>
30s of which is "can you see my slides?"

[15:39:28.0000] <ljharb>
"wait, let me unpresent and represent"

