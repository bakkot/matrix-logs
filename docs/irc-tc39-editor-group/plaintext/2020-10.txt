2020-10-09
[11:34:03.0000] <shu>
i'm going through 2007 now and i see older comments from waldemar that don't seem to be talking about the line they're attached to

[11:34:06.0000] <shu>
GH rendering bug?

[11:49:02.0000] <Bakkot>
yeah :(

[11:49:48.0000] <Bakkot>
inline comments don't stick to the right thing when lines are added or removed

[11:50:05.0000] <Bakkot>
(in at least some cases)

[12:06:24.0000] <shu>
the GH interface is really very poor for a diff of this size

[12:06:48.0000] <shu>
for the AOs/methods that are very long, like the TA ones, i can't tell what method it is

[12:07:08.0000] <shu>
and since the line numbers differ from master, it's hard to find it via the linenos too

[12:09:22.0000] <ljharb>
agreed, what i did was keep 2 tabs open to both rendered specs, and grep for the example i wanted in the "after" render, and then go to the same section in the "before" render

[12:15:26.0000] <shu>
yeah, the rendering helps a lot


2020-10-13
[10:09:02.0000] <shu>
is there a way to load all hidden items on a GH issue?

[10:12:28.0000] <ljharb>
i find-in-page for "load more" and click them all

[10:12:42.0000] <ljharb>
you could probably write a bookmarklet for it tho

[10:13:13.0000] <shu>
boo

[10:13:26.0000] <shu>
what can i say, GH does not scale to JS scale

[10:37:59.0000] <Bakkot>
that is also my approach

[10:38:01.0000] <Bakkot>
it's bad

[10:47:18.0000] <Bakkot>
shu: jmdyck raises that `_x_ = _y_` where one operand might be NaN is potentially fraught - if this is IEEE equality rather than numeric equality it means different things

[10:48:38.0000] <shu>
Bakkot: over the prose "is"?

[10:48:51.0000] <Bakkot>
"is" or "is the same value as"

[10:48:59.0000] <Bakkot>
or "equals" even, maybe

[10:49:23.0000] <ljharb>
i still prefer the prose to `=`

[10:49:39.0000] <shu>
Bakkot: okay, that's a good point for NaN, i guess for that case i'd prefer "is the same value as"

[10:51:24.0000] <Bakkot>
k, will go with that

[11:45:25.0000] <Bakkot>
ljharb your github check is failing

[11:45:28.0000] <Bakkot>
on 2007

[11:45:36.0000] <Bakkot>
might be a github-wide issue?

[11:45:54.0000] <Bakkot>
but I haven't seen reports of that

[11:46:48.0000] <ljharb>
hm

[11:46:57.0000] <ljharb>
it says cancelled, i'll rerun

[11:51:46.0000] <ljharb>
i'll look into the check failing but we can ignore it for now

[11:52:01.0000] <ljharb>
2007 should probably have michael's stamp too, after which Bakkot can rebase, and i'll land?

[11:55:13.0000] <ljharb>
https://twitter.com/githubstatus/status/1316089690508886018

[12:03:42.0000] <Bakkot>
2007 is already rebased

[12:03:57.0000] <Bakkot>
let me get a final approval from jmdyck

[12:04:00.0000] <Bakkot>
and then we can land it

[12:05:27.0000] <ljharb>
squashed tho?

[12:05:32.0000] <ljharb>
or should i just squash to one

[12:07:15.0000] <Bakkot>
squash to one

[12:07:18.0000] <Bakkot>
squash-and-merge

[12:08:06.0000] <ljharb>
cool, lmk when it's ready for that

[12:08:27.0000] <Bakkot>
ok jmdyck stamps

[12:08:28.0000] <Bakkot>
go for it

[12:08:38.0000] <ljharb>
on it

[12:10:31.0000] <ljharb>
this should fix 1964, yes?

[12:10:46.0000] <ljharb>
and 1960

[12:11:32.0000] <Bakkot>
indeed

[12:24:38.0000] <Bakkot>
ljharb getting real tempted to click that button myself :P

[12:27:34.0000] <ljharb>
lol

[12:28:01.0000] <ljharb>
done

[12:29:18.0000] <Bakkot>
:D

[12:56:40.0000] <ljharb>
nice work

[13:03:44.0000] <shu>
Bakkot: big congrats

[13:07:39.0000] <Bakkot>
thank

[13:07:52.0000] <Bakkot>
looking forward to rebasing ~every open PR

[13:08:11.0000] <Bakkot>
(not actually planning on doing that except as needed when they are getting ready to land)

[13:12:45.0000] <shu>
Bakkot: if you wanna take a break, Microsoft corporate speak is inspiring us to invent a clicking-based corporate metaphor language: https://twitter.com/_shu/status/1316104732843241474

[13:16:03.0000] <Bakkot>
lol

[13:16:08.0000] <Bakkot>
does it have to be mouse-based

[13:16:17.0000] <Bakkot>
I would like to C-w out of some meetings

[13:17:09.0000] <shu>
i wonder what company that would work better at

[13:17:29.0000] <Bakkot>
mine is actually pretty good about that

[13:18:15.0000] <Bakkot>
my partner found it very entertaining the first time she overheard me say on a video call "I don't think it's useful for me to be here, bye"

[13:18:37.0000] <ljharb>
lol i've def heard "double click"

[13:19:39.0000] <ljharb>
i suppose i could start saying "let me command-tab back to the previous topic for a second"

[13:21:13.0000] <Bakkot>
"let's kill -9 this topic"


2020-10-14
[16:04:57.0000] <shu>
i have discovered the opposite of "icky" styling: http://www.cloverbakery.com/

[16:12:48.0000] <ljharb>
look at that retro twitter bird


2020-10-15
[17:07:49.0000] <shu>
Bakkot: ljharb: i've given your feedback on c-v to the rendering team and filed https://bugs.chromium.org/p/chromium/issues/detail?id=1138685

[17:08:08.0000] <shu>
they might close it as a WontFix since it is by design, but it'll nudge folks to think about a better workaround than "guess the right size"

[17:08:13.0000] <Bakkot>
thanks!

[17:08:20.0000] <Bakkot>
fwiw I think I would take the performance win

[17:08:35.0000] <shu>
i think as it stands the feature is squarely mobile first

[17:08:43.0000] <shu>
the desktop interactions seem not fully baked

[17:08:48.0000] <Bakkot>
(though I would probably back it out if FF and Safari had the same scrollbar stuff without corresponding performance win)

[17:10:09.0000] <shu>
one idea someone brought up was the desire to implement a scrolling mode where the bar you hold down and drag would mean "speed forward/backward" instead of "absolute position relative to the length"

[17:10:35.0000] <shu>
that's a shift away from that entire UI metaphor though, and again seems geared towards mobile

[17:30:22.0000] <Bakkot>
that used to be a thing when you middle-clicked

[17:30:27.0000] <Bakkot>
might still be; I can't middle-click any more

[17:33:40.0000] <shu>
reject modernity, embrace tradition

[17:49:42.0000] <shu>
Bakkot: also, for your curiosity, the option to update the intrinsic size to the rendered size once it is rendered was explicitly considered, but rejected

[17:49:57.0000] <shu>
on grounds of interop concerns as it would be timing-dependent

[17:50:12.0000] <shu>
well, i guess more for michael's curiosity

[17:50:14.0000] <shu>
maybe you can pass it along

[17:51:15.0000] <shu>
which i imagine is an interop problem because of APIs like `getClientRects()`

[19:46:12.0000] <ljharb>
shu: thanks for filing

[21:34:49.0000] <Bakkot>
shu ljharb: btw one of you should stamp https://github.com/tc39/ecma262/pull/2132

[21:34:59.0000] <Bakkot>
which now just moves some stuff and adds a note

[11:25:29.0000] <Bakkot>
shu weigh in on https://github.com/tc39/ecma262/pull/2018#discussion_r505112074?

[11:32:26.0000] <shu>
will look at that and 2132 after mtgs

[13:05:57.0000] <shu>
done

[13:45:37.0000] <Bakkot>
shu ljharb https://github.com/tc39/ecma262/pull/2084 needs another stamp

[13:45:41.0000] <Bakkot>
it's trivial

[13:55:54.0000] <shu>
sure, also done

[13:57:18.0000] <ljharb>
looking

[14:56:09.0000] <Bakkot>
shu can you confirm https://github.com/tc39/ecma262/pull/2164#issuecomment-709569671

[14:58:33.0000] <shu>
after mtg, yes


2020-10-20
[19:23:17.0000] <ljharb>
Bakkot: https://github.com/tc39/ecma262/pull/2207 has the editor call label, was that just for reviews? it's otherwise landable

[19:23:35.0000] <ljharb>
(altho it does seem like it's normative but doesn't need consensus)

[19:23:40.0000] <Bakkot>
wanted to ask about whether we considered it editorial, is all

[19:24:37.0000] <ljharb>
is it obviously one or the other to you?

[19:24:50.0000] <ljharb>
(or, non-obviously, i suppose?)

[19:25:41.0000] <Bakkot>
I could go either way

[19:26:03.0000] <Bakkot>
the second commit is more dubious, not just an obvious omission

[19:26:18.0000] <Bakkot>
(though it was an omission)

[19:26:41.0000] <ljharb>
i guess i'll hold off on it so we can chat about it, it seems normative to me but maybe there's something i'm missing

[19:27:40.0000] <Bakkot>
sometimes we call it editorial even if it is theoretically normative when it's an obvious error from the original PR

[19:28:29.0000] <Bakkot>
like with https://github.com/tc39/ecma262/pull/2185, though that was a followup to an editorial PR rather than a normative one, so perhaps not comparable

[19:29:01.0000] <Bakkot>
anyway I think you're probably right that it should be normative, just wanted to confer before we landed it

[19:30:24.0000] <ljharb>
sure, sounds good

[19:30:41.0000] <ljharb>
obv if michael and shu weigh in and there's a trend in one direction, we could also just go with that.

[19:31:14.0000] <ljharb>
i think the main thing is that normative PRs don't necessarily need consensus when they're obvious errors, but i'd lightly prefer we label things normative when implementers would have to adjust their implementation

[14:19:31.0000] <shu>
i'm leaning towards editorial on #2207, and i agree the only commit in question is https://github.com/tc39/ecma262/pull/2207/commits/f7449887b0620566ad16b3721734e2497e27e677

[15:09:56.0000] <shu>
oops, forgot to hit enter. i'm leaning towards editorial because as anba has mentioned in the past, the editorial intent from the Allen days was that [[ArrayLength]] be never dereferenced _before_ a corresponding detach check

[15:11:29.0000] <shu>
so any lone accesses are really spec bugs, and given the implementation reality of [[OwnPropertyKeys]] where detached TAs present as length 0, makes me all lean towards editorial fix suffices without needing to get consensus

[16:01:45.0000] <ljharb>
ok - being normative doesn't necessarily mean we need consensus, if it wasn't possible to implement differently, but if it's editorial then we definitely don't

