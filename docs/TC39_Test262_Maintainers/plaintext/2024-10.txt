2024-10-04
[09:01:54.0981] <ioanna>
ljharb: thank you for adding me to the test262 maintainers! üôè


2024-10-07
[08:30:13.0778] <Ms2ger>
jugglinmike: I was wondering if y'all are still maintaining https://github.com/bocoup/test262-stream , or would perhaps be willing to transfer to tc39 as well?


2024-10-08
[17:18:09.0416] <ljharb>
ptomato: hm, i clicked on a future notes doc link to try to get to the summary, and i didn't have access. i requested it, but could someone dump the status update points in here just in case?

[18:07:15.0978] <ptomato>
ljharb: here it is:
- All of the resizable ArrayBuffer tests have been ported out of staging.
- Working on reviewing the 400+ tests for explicit resource management
- Atomics.pause has test coverage.


[18:07:30.0979] <ptomato>
doc is this one; I sure hope you have access https://docs.google.com/document/d/1JRG6FeYmZIievBPpAdvJjDhfsEjRrdzsFPTYG86KSmM/edit?tab=t.0

[18:08:27.0456] <ljharb>
https://docs.google.com/document/d/1de1xchd6LoHJcD2khovoxbeNlxEygO6VPPFARm8tqPM/edit?usp=meetingnotes&showmeetingnotespromo=true is the one i don't have access to, there's 2 docs linked on the calendar event

[18:08:44.0577] <ptomato>
I don't have access to that either. not sure if I ever did

[18:08:57.0687] <ljharb>
k, i'll clean that up later


2024-10-15
[10:34:23.0826] <ljharb>
i'd love to go for stage 3 next plenary, so the sooner https://github.com/tc39/test262/pull/4266 can be landed, the better :-) consider this a shameless plug for reviews

[10:35:00.0538] <ptomato>
only 12 files, should be doable üòÑ

[10:35:24.0620] <ptomato>
ljharb: did we have a testing plan for this one? OTOH, the proposal is probably small enough that it's not necessary

[10:35:34.0183] <ljharb>
no, and yes i think it is

[10:37:27.0567] <ptomato>
I am looking at the proposal now and I agree


2024-10-16
[08:01:15.0065] <ljharb>
I‚Äôll be there in a few

[15:07:57.0828] <ljharb>
ok, i have eshost on npm now, and it's added to the tc39 npm org


2024-10-22
[14:32:46.0862] <shu>
does anyone know of some kind of adapter runner that can run test262 inside of WPT? and if one doesn't exist, would test262 maintainers be pro on the idea?

[14:34:54.0205] <shu>
the context is that for the Baseline effort at chrome, we would like to get compat numbers across implementations for all web features, JS included. they're ingesting WPT numbers for that currently

we don't have such infra other than the volunteer-run test262.fyi, which is also per-engine focused instead of, say, browser version focused

it also doesn't make sense for test262 to be subsumed into WPT, since JS extends beyond the web. so the best solution i see if that we just run test262 inside the WPT runner

[14:49:31.0702] <ljharb>
i don't know of one but that seems like a great thing to have

[14:53:32.0487] <shu>
cool

[14:53:43.0595] <shu>
let me see what kind of staffing we have internally...


2024-10-23
[01:47:35.0511] <Ms2ger>
I think we discussed it at some point for interop, but then the feature wasn't picked and nobody followed up

[01:48:38.0447] <Ms2ger>
https://github.com/web-platform-tests/interop/issues/117 https://github.com/web-platform-tests/wpt/pull/35621 

[01:48:47.0605] <Ms2ger>
shu: ^

[08:57:55.0189] <shu>
Ms2ger: thanks!


2024-10-25
[10:08:26.0210] <dminor>
I've had a question from the students at the University of Bergen, they're creating tests that are based on existing ones, and are wondering what to do about the copyright notice in this case. Can they just add a new authorship / copyright line below the existing one to cover their modifications?

[10:13:06.0601] <bakkot>
I would personally opt for like "Copyright 2024 [students] and [original author]"

[14:03:46.0450] <littledan>
In general it is not required to add authors after the first one, but seems fine if they want credit


2024-10-26
[19:03:32.0755] <Richard Gibson>
PRs welcome: https://github.com/tc39/test262/blob/main/CONTRIBUTING.md#copyright

