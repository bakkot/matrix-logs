2024-06-03
[07:30:20.0506] <dminor>
Hi :) I'd like to bring up `implementation-contributed` again... After some discussions with Yulia and the other implementers, I've come back around to wanting to upstream our `non262` tests to test262. What I'm proposing is to upstream our non262 tests, in test262 format, but without the intention of reworking them to follow exactly what test262 does (e.g. testing a single part of the spec). Based on this, I don't think `staging` is the correct place.

The benefit to us is that we can simplify our testing, and work towards writing new tests in `staging` as opposed to increasing our corpus of `non262` tests. The benefit we see to the community is that we would increase the set of tests available to other implementations, including tests that test cross-cutting concerns, rather than individual bits of functionality.

[07:42:51.0430] <littledan>
Why wouldn't `staging` be a good place to upstream tests while not having the intention to rework them?

[07:44:35.0932] <littledan>
If the name is too evocative of eventually removing things, then we could make another directory which is set up the same way technically, which just removes that intentionality. I agree that there shouldn't be an expectation that tests which are shared like this are necessarily eventually reworked somehow or other--that's not the best use of people's time, and would limit the number of tests shared if they had to have that expectation.

[07:45:13.0092] <littledan>
(probably we should still remove the current contents of implementation-contributed, though, right?)

[07:45:44.0080] <littledan>
I had thought that folks already agreed on the plan that there is no expectation to rework these shared tests, so I'm having a little bit of trouble understanding dminor 's message.

[07:52:44.0333] <Ms2ger>
Fwiw: https://github.com/tc39/test262/compare/main...impl-sm

