2022-12-08
[11:04:05.0014] <cjtenny>
is there a maintainers meeting this week? I wanted to attend, follow the discussion around the async helpers RFC if there is any, but maybe people are away this week

[11:04:15.0131] <ptomato>
I'm here

[14:40:49.0748] <cjtenny>
I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:

```
~/repos/test262$ grep -HErn 'then\(\$DONE, \$DONE\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l
5276
```

Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?
Also, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³

[14:41:03.0369] <cjtenny>
 * I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:

```
~/repos/test262$ grep -HErn 'then\(\$DONE, \$DONE\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l
5276
```

Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?
Also, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³

[14:44:11.0080] <cjtenny>
Also jugglinmike I couldn't find anything in the linter checking async flags, are there other changes we were talking about? Sorry, I forgot what the conclusion was around what might need to be changed in the linter

[15:27:22.0882] <cjtenny>
There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node.

[15:27:39.0350] <cjtenny>
 * There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node.

