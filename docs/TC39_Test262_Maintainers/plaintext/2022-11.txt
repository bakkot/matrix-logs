2022-11-04
[16:15:59.0305] <ptomato>
I realized Array.fromAsync is the first async built-in function in JS, but there's also iterator helpers coming down the line soon

[16:16:26.0937] <ptomato>
I'm thinking it'd be good to have some boilerplate in helpers/ for testing async functions

[16:18:49.0691] <ptomato>
for example, there's example code in https://github.com/tc39/test262/blob/main/CONTRIBUTING.md#writing-asynchronous-tests for checking the exception type of a rejected promise. but it only works once because it uses "return a string" to mean "fail"

[16:19:08.0640] <ptomato>
so if you want to do the async equivalent of https://github.com/tc39/test262/blob/main/test/built-ins/Array/from/mapfn-is-not-callable-typeerror.js you have to write something more complicated

[16:20:01.0677] <ptomato>
any thoughts?


2022-11-16
[15:00:36.0361] <ptomato>
I opened an RFC on the above: https://github.com/tc39/test262/pull/3724 (here's a link to it [rendered](https://github.com/tc39/test262/pull/3724/files?short_path=d4e487d#diff-d4e487dcd72bb7cd7462c9709f50abd806977f296306b5f4eb77e3fc011ede51))


2022-11-17
[12:01:31.0726] <cjtenny>
Mike, could you repeat - perhaps in the RFC comments - what you were saying the tradeoff between two harmful behaviors was? Sorry I didn't follow there

[12:01:58.0330] <cjtenny>
(couldn't @ for some reason)

[12:03:02.0896] <ptomato>
> <@ctenny:igalia.com> (couldn't @ for some reason)

huh, weird. I can do it; jugglinmike ^

[12:03:41.0241] <cjtenny>
element will only let me @ 4 people in this room, 3 from Igalia, go figure


2022-11-23
[10:25:24.0625] <ptomato>
as promised, here's a draft text for the test262 update in plenary:
- The ESMeta team approached us about integrating their tools with test262's continuous integration. (As a reminder, ESMeta is the ECMAScript interpreter generated directly from the specification.) We had a productive discussion and identified some next steps towards running new tests with the ESMeta interpreter in CI. We also identified some difficulties around integrating the text of Stage 3 proposals into ESMeta.
- There's an RFC (our first, as a trial of the new process) about adding some facilities to test262 for improving the experience of writing asynchronous tests. We'd love to have some feedback from the perspective of implementers maintaining a test262 runner, and from (potential) test writers.
- There are now tests for several more stage 3 proposals: change Array by copy, Symbols as WeakMap keys, RegExp duplicate named capture groups.

[10:26:44.0798] <ptomato>
comments welcome, if I don't hear anything before plenary starts then I'll send this to the chairs and ask them to read it during our item (this is assuming that still none of us are planning to be present)


2022-11-28
[14:07:57.0458] <ptomato>
no comments, so I'll send that ‚òùÔ∏è to the chairs


2022-11-29
[11:27:59.0865] <ptomato>
could I get a codeowner review on https://github.com/tc39/test262/pull/3699 plz?

[11:32:07.0158] <ptomato>
also https://github.com/tc39/test262/pull/3718

[12:05:48.0261] <ptomato>
also https://github.com/tc39/test262/pull/3696, for that matter

[12:08:42.0598] <ptomato>
and a rubber stamp on https://github.com/tc39/test262/pull/3726 since rebasing killed the green checkmark?


2022-11-30
[02:56:05.0172] <Ms2ger üíâüíâüíâ>
Stamped them all

[02:56:24.0396] <Ms2ger üíâüíâüíâ>
I'll let you merge them in concert with the spec PRs

[07:32:43.0795] <Ms2ger üíâüíâüíâ>
Who can change the required workflows for merging for https://github.com/tc39/test262/pull/3727 ?

[07:37:32.0418] <ljharb>
i can

[07:38:44.0007] <ljharb>
done

[07:43:30.0286] <Ms2ger üíâüíâüíâ>
Thanks!

[07:43:41.0507] <Ms2ger üíâüíâüíâ>
I guess everyone will need to rebase now

[07:45:26.0696] <ljharb>
indeed, but they should be doing that frequently anyways

[07:45:36.0834] <ljharb>
* indeed, but they should be doing that frequently anyways

[07:46:55.0978] <ptomato>
that is made somewhat difficult by the fact that rebasing invalidates existing codeowner reviews ... how would people feel about turning off that setting?

[07:47:08.0724] <ljharb>
let‚Äôs turn it off, for precisely that reason

[07:47:50.0451] <ljharb>
altho we can still require approval for the last push if we want

[07:48:05.0147] <ljharb>
iow, it doesn‚Äôt invalidate existing reviews, but it will require someone who isn‚Äôt the last pusher to stamp

[07:48:24.0803] <ljharb>
feels like a much better tradeoff to me. Thoughts?

[07:49:58.0741] <ptomato>
in other repos where I'm a reviewer, I get a lot of value out of being able to say to other people with push access, effectively, "LGTM with minor changes, I trust you to implement them, feel free to merge whenever"

[07:50:07.0472] <ljharb>
alrighty, fair enough

[07:50:31.0648] <ljharb>
done, lmk if changes are needed

[07:50:55.0690] <ptomato>
the situation is still that a maintainer needs to click the merge button right?

[09:50:09.0004] <ljharb>
um, yes? that's always the situation

[09:51:18.0978] <ptomato>
ok great! just a moment of paranoia

