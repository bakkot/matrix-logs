2025-01-30
[06:16:10.0386] <paulftw>
hi everyone! new here, sorry if my question has been discussed. I did try and failed to find where it's been covered.
Basically, if you remember the "real world chalk example":
```js
  // async is omitted for brevity, see below
  const pipeline = (initial, ...lambdas) =>
      lambdas.reduce((acc, fn) => fn(acc), initial)
  
  pipeline(
    Object.keys(envars)
      .map(envar => `${envar}=${envars[envar]}`)
      .join(' '),
    $ => `$ ${$}`,
    $ => chalk.dim($, 'node', args.join(' ')),
    $ => console.log($),  
  )
```

This works in today's chrome.

`$ => console.log($ * $)` if you liked jQuery, `_ => console.log(_ * _)` if it gives you goosebumps.

[06:18:26.0859] <paulftw>
The proposal includes comparison with different existing solutions (method chaining, deep nesting, temp vars), but not this one. I think it should mention it to help committee (and random bystanders like me) understand the rationale

[06:19:30.0560] <paulftw>
what do you think?

[06:20:24.0038] <paulftw>
https://github.com/lodash/lodash/issues/5962

