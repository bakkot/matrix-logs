2022-07-07
[10:32:39.0232] <jschoi>
Yeah, TabAtkins, thanks for continuing to engage with him and others—I’ve been really busy myself, so I haven’t been able to work much on outreach or updates myself. 😔

[13:25:11.0750] <TabAtkins>
And now I'm back to just closing issue threads because the participants refuse to stay on topic and instead keep relitigating the core question. :/

[13:26:02.0737] <TabAtkins>
Should have done that one weeks ago, but I know Kevin personally and wanted to keep things friendly, but good *lord* I do not have time nor interest to engage in dueling essays where every point was brought up and addressed last year.

[13:29:00.0837] <TabAtkins>
(if he has made novel points I missed them in the screenfuls of text that each post of his produces)

[13:29:32.0997] <jschoi>
Insofar that we have already addressed many points of argument that people keep perseverating over, we should add an FAQ section or an FAQ document that summarizes positions, so we could simply point to them every time something gets brought up again. I’ve meant to do this for a year now, but I just haven’t had time. My apologies about this—maybe if I had done so earlier, we would have had you deal with a few less circular threads. 

[13:29:45.0390] <TabAtkins>
I doubt it. ^_^

[13:33:52.0041] <shu>
at least stare decisis have entered people's vocabularies recently

[13:34:21.0454] <TabAtkins>
ah yes, the "stand your ground" rule

[13:34:33.0866] <shu>
though i guess in this case it's more like res judicata than stare decisis

[13:34:40.0159] <shu>
 * though i guess in this case it's more like res judicata than stare decisis

[13:47:37.0559] <jschoi>
“Stare decisis” (n.): The act of staring decisively at each other, without budging.

[14:20:27.0031] <rkirsling>
this has truly been a depressing proposal, sociologically speaking

[14:22:39.0842] <TabAtkins>
huh, for some reason I can't hide Kevin's latest response in https://github.com/tc39/proposal-pipeline-operator/issues/238#issuecomment-1178231937 (but could hide his earlier ones)

[15:09:32.0938] <ljharb>
TabAtkins: sometimes i see no "hide" link present, especially when the anchor link points to that specific comment - i usually click the timestamp of another comment and hard-refresh

[15:11:32.0129] <TabAtkins>
Ah, that was indeed the problem. How confusing. Thanks!

[15:22:39.0271] <rbuckton (PTO: 7/5 - 7/16)>
Have we ever tried to quantify how much of the ecosystem prefers Hack-style vs. F#-style? It's unfortunate that much of the early negative response was so vitrolic, but I still wonder if Hack-style was the right direction. This proposal constantly feels like it's being pushed uphill. 

[15:26:58.0909] <shu>
do you plan to hire Pew?

[15:28:00.0903] <rbuckton (PTO: 7/5 - 7/16)>
No, no budget for that

[15:33:20.0793] <jschoi>
For what it’s worth, I view reconciliation with call-this syntax to be a much greater obstacle to pipe operator compared to its syntax particulars like Hack/F#—or the choice of the topic, for that matter. (That is, Jordan’s prior condition to pipe’s advancement to Stage 2 that a this-binding-or-calling syntax also “eventually” advance, and the fact that we have some strong opposition to any such this-binding/calling syntax.) This is one of the two topics that the pipe incubator was chartered to discuss, and we might have some time this plenary to discuss it. But if pipe fails to ever reach Stage 4, it’s going to be because of that critical issue.

[15:33:42.0026] <jschoi>
> <@rbuckton:matrix.org> Have we ever tried to quantify how much of the ecosystem prefers Hack-style vs. F#-style? It's unfortunate that much of the early negative response was so vitrolic, but I still wonder if Hack-style was the right direction. This proposal constantly feels like it's being pushed uphill. 

 * For what it’s worth, I view reconciliation with call-this syntax to be a much greater obstacle to pipe operator compared to its syntax particulars like Hack/F#—or the choice of the topic, for that matter. (That is, Jordan’s prior condition to pipe’s advancement to Stage 2 that a this-binding-or-calling syntax also “eventually” advance, and the fact that we have some strong opposition to any such this-binding/calling syntax.) This is one of the two topics that the pipe incubator was chartered to discuss, and we might have some time this plenary to discuss it. But if pipe fails to ever reach Stage 4, it’s going to be because of that critical issue.

[15:34:06.0966] <jschoi>
“The default is that neither proposal advances, and I’m fine with that,” so to speak. Well, I can sympathize with gatekeeping [what’s left of] the core language’s simplicity, even if I shed one tear doing so. :’)

[15:34:40.0697] <jschoi>
* “The default is that neither proposal advances, and I’m fine with that,” so to speak. Well, I can sympathize with gatekeeping [what’s left of] the core language’s simplicity, even if I shed one tear doing so. :’)

[15:35:36.0171] <rbuckton (PTO: 7/5 - 7/16)>
I am still, and probably always be, in favor of F#-style + PFA, even with the limitations regarding yield and await. 

[15:37:02.0585] <jschoi>
* That is to say, Jordan will probably always block Stage 4 for pipe unless call-this or something like it reaches Stage 3 or 4, as he essentially warned when it reached Stage 2 way back c. 2017. 

And (someone else’s words) “the default is that neither proposal advances, and I’m fine with that,” so to speak. I suppose I can sympathize with gatekeeping [what’s left of] the core language’s simplicity, even if I shed one tear doing so. :’)

[15:40:25.0270] <jschoi>
I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there’s always Elixir style. Or Clojure’s operator-all-the-pipes-they’re-all-just-macros style (->, ->>, as->, cond->, etc.), heh.

[15:40:35.0341] <jschoi>
* I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there’s always Elixir style. Or Clojure’s operator-all-the-pipes-they’re-all-just-macros style (->, ->>, as->, cond->, etc.), heh.

