2025-08-05
[06:39:31.0495] <Justin Ridgewell>
PHP got a pipeline operator: https://thephp.foundation/blog/2025/07/11/php-85-adds-pipe-operator/

[06:40:05.0513] <rbuckton>
It looks like its using F# style, since the RHS must be callable

[06:49:09.0782] <Justin Ridgewell>
Yah, but PHP doesn’t have first class functions for every fn value, so it’s a bunch of `foo(…)`

[06:49:51.0429] <Justin Ridgewell>
Any arbitrary expressions are wrapped in a closure

[06:50:28.0366] <Justin Ridgewell>
I think our F# supporters would still be unhappy with this syntax.

[06:50:45.0850] <rbuckton>
In lieu of PFA, we would have had to do the same for F# style. And they did get first-class callables

[06:50:52.0817] <rbuckton>
https://wiki.php.net/rfc/first_class_callable_syntax

[06:51:41.0233] <Justin Ridgewell>
Yah, that’s the `(…)` to turn it into a first class callable function.

[06:52:11.0765] <Justin Ridgewell>
Functions aren’t callable by pipe by default

[06:52:40.0524] <rbuckton>
Ah. My PFA proposal did have `...` in addition to `?`

[06:52:55.0740] <Justin Ridgewell>
You could assign the `var f = foo(…)` and pass that to pipe directly

[06:54:09.0499] <Nic>
`x |> filter(isOnSale(...))`
 
It this calling filter passing the closure to it, and then calling the result of filter with x?

[06:56:24.0074] <Justin Ridgewell>
> <@rbuckton:matrix.org> Ah. My PFA proposal did have `...` in addition to `?`

They mirrored your proposal: https://wiki.php.net/rfc/partial_function_application

[06:56:28.0432] <rbuckton>
filter takes a closure and returns a closure

[06:57:10.0997] <rbuckton>
It looks like they didn't move forward with it though, due to engine complexity, per the pipeline article.

[06:57:55.0490] <Justin Ridgewell>
> <@nribaudo:igalia.com> `x |> filter(isOnSale(...))`
>  
> It this calling filter passing the closure to it, and then calling the result of filter with x?

Yes

[06:59:21.0103] <Justin Ridgewell>
> <@rbuckton:matrix.org> It looks like they didn't move forward with it though, due to engine complexity, per the pipeline article.

At the end of the article, they mention trying again for 8.5 or 8.6

[07:00:47.0964] <Justin Ridgewell>
They even call our performance of closure allocations when not using literal syntax directly in the RHS

[07:01:14.0975] <Justin Ridgewell>
https://wiki.php.net/rfc/pipe-operator-v3#:~:text=Performance

