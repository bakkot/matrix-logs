2025-06-02
[06:16:18.0614] <Jesse>
after recovering over the weekend from lots of productive JS numerics conversations, here's my understanding of the current plan:

* for July plenary: spec text and tests for proposal-intl-keep-trailing-zeros, going to stage 2 or even 2.7
* measure proposal renamed to "amount", scope gets reduced, data model changes from decimals to digit strings
* for July plenary: amount proposal for stage 2
* amount removed from decimal proposal (because that functionality moves to proposal-amount), spec text polished and completed
* for July plenary: no decimal update, no stage advancement
* for September plenary: ask for stage 2 for decimal
* smart units remains on the radar and up for discussion, though currently lacks a plan and schedule

[06:16:22.0123] <Jesse>
how does that look?

[06:37:05.0173] <sffc>
Don't remove Decimal.Amount until we have seen if standalone Amount actually gets Stage 2

[06:38:00.0424] <sffc>
In September plenary, we send Decimal for Stage 2, either on its own (if Amount got Stage 2 in July) or paired with Decimal.Amount

[06:38:16.0027] <sffc>
The rest aligns with my expectations üëçÔ∏è


2025-06-03
[17:55:08.0715] <ljharb>
my concerns about advancing decimal remain unchanged. but the rest sgtm

[01:15:10.0155] <sffc>
Should I cancel the Numerics call this Thursday evening?

[01:23:02.0962] <Jesse>
sgtm -- I think we're pretty much up-to-date at the moment

[01:29:38.0259] <sffc>
Only thing is if we wanted to sync with Jordan?

[01:31:40.0548] <Jesse>
ljharb: would you be able to attend the call this week?

[01:33:09.0571] <Jesse>
if not that's ok, but it would be great if you could join the call sometime in the near future

[01:33:33.0401] <Jesse>
it's biweekly

[07:48:03.0392] <ljharb>
i can‚Äôt make it this week, but maybe next time

[07:48:55.0870] <sffc>
OK in that case I will delete this week's meeting

[08:39:47.0134] <Jesse>
I've added some initial spec text for Amount: https://github.com/tc39/proposal-measure/pull/28

[08:40:44.0773] <Jesse>
it implicitly depends on intl-keep-trailing-zeroes because the approach to handling Amounts in Intl would be to first render them as strings, which could have trailing zeroes

[10:40:27.0755] <Rob Palmer>
> <@sffc:mozilla.org> Don't remove Decimal.Amount until we have seen if standalone Amount actually gets Stage 2

Please could you help me understand this logic. If the committee thinks Amount (as a standalone concept) is not ready for Stage 2, why would it then succeed when coupled with Decimal?

[11:51:24.0722] <sffc>
There were concerns raised about it in the breakout session

[11:52:09.0752] <sffc>
Waldemar had some concerns I think about String Amount that didn't apply to Decimal Amount

[11:54:12.0478] <sffc>
Main issue IIRC was that String Amount doesn't have a well defined range of valid values, whereas Decimal Amount just inherits the range from Decimal

[11:55:00.0000] <sffc>
So String Amount is effectively adding yet another numeric type, but Decimal Amount is not since it is just a Decimal with metadata

[11:56:30.0593] <sffc>
I personally don't feel strongly about that point

[12:07:18.0525] <Rob Palmer>
That makes sense. So a more explicit rewording of your refinement would be:

"Amount remains in Decimal if string Amount fails to reach Stage 2 due to the committee prefering Decimals over strings."

