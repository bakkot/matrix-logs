2024-09-01
[15:59:44.0179] <shu>
> <@littledan:matrix.org> Didn't V8 also initially consider banning shared to local edges? Do we know more about what led V8 to change their minds?

there are two things you get out of banning *all* shared->local edges:

1. language-level correctness/safety
2. independent GCs of separate threads

[16:02:30.0693] <shu>
as we experimented more, we realized that 2) wasn't possible. as part of the shared WasmGC proposal, it's very clear from the partner feedback that we can't get away with banning *all* shared->local edges. Flutter, among a bunch of other Google partners, have been clear that they need either thread-bound (i.e. a shared struct can hold a reference to some unshared thing, but it is an error to access that reference from another thread), or thread-local data

[16:03:08.0524] <shu>
implementing support for thread-bound or thread-local data in almost all cases, boil down to the same work required in the GC as implementing support for shared things as keys in WeakMaps

[16:03:53.0571] <shu>
the WeakMap itself isn't shared and is local to a particular thread, so you still have the correctness property (1) above. but it asks extra complexity of the GC because you now have a local things whose liveness depends on a shared thing

[16:04:25.0721] <shu>
the bulk of this discussion has been happening on the Wasm side

