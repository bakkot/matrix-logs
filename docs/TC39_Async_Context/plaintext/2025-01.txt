2025-01-16
[02:58:59.0404] <Andreu Botella>
I made some additional changes to the web integration document to clarify certain things

[02:59:02.0176] <Andreu Botella>
https://github.com/tc39/proposal-async-context/pull/109


2025-01-17
[22:53:42.0133] <Iliasbhal>
ðŸ‘‹ Hello team!

I wrote another polyfill for this feature. 
It works a bit differently that the current one, it works only by intrumenting the Promise object. 

check it out: https://github.com/iliasbhal/simple-async-context.
It satifies the test suite in the repo + some extra tests that I added.

Let me know what you think ;) 

[23:15:26.0075] <Iliasbhal>
Turns out, they work kind of similary. Few differences here and there:

  - On the strategy used to store data in the context. 
    `simple-async-context` let the garbage collectore reclaim memeory, it won't programmaticaly delete stored data.

  - `simple-async-context` will polyfill timers as well.
  - The way it instruments Promise is slightly different.

[23:16:31.0499] <Iliasbhal>
* Turns out, they work kind of similary. Few differences here and there:

- On the strategy used to store data in the context.
`simple-async-context` let the garbage collectore reclaim memory (hopefully ðŸ˜†), it won't programmaticaly delete stored data.
- `simple-async-context` will polyfill timers as well.
- The way it instruments Promise is slightly different.

[23:40:49.0990] <Iliasbhal>
Note: We don't programaticaly delete Variable data because otherwise we won't be able access the context from a running timer.


2025-01-18
[09:13:54.0441] <Phil>
Does this work in Bun, Deno, Node and the Web?

