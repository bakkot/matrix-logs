2024-03-05
[08:58:41.0510] <littledan>
I will miss the AsyncContext meeting, but I want to encourage Googlers to get in touch with Jatin on the CWI Wiz team re: testing AsyncContext. If needed, maybe Igalia could provide them a custom Chrome build including AsyncContext for testing.

[08:58:57.0759] <littledan>
sorry I would like to talk about the FinalizationRegistry context issue but I won't be able to today

[08:59:53.0778] <littledan>
but feel free to discuss without me; I'm fine with reaching the other conclusion, but I'd like us to strongly consider simplifying and reducing overall complexity vs Justin's proposal.

[10:17:21.0918] <Bradford Smith>
Is the AsyncContext meeting open to interested parties who are not delegates?

[10:17:56.0985] <Bradford Smith>
A member of our Google JS/TS Libraries team is very interested in the AsyncContext effort because he needs it for our libraries.

[10:18:04.0303] <Bradford Smith>
Steve Hicks

[10:26:10.0633] <Andreu Botella>
> <@bradfordcsmith:matrix.org> Is the AsyncContext meeting open to interested parties who are not delegates?

I'm not sure if the meeting is open for anyone to join, but I think we've had at least one meeting where we had some non-delegate

[10:31:15.0641] <Bradford Smith>
I would certainly like Steve to be able to attend if he wishes. I think he likely has some interesting ideas to contribute, and he definitely wants to use the upcoming AsyncContext feature to inform development we need.

[11:01:35.0764] <littledan>
Steve can definitely join; he is a Google employee, and Google is an Ecma member

[11:01:52.0729] <littledan>
the important thing is that intellectual property contributed by Steve is licensed for the standard, which is already covered

[11:02:18.0417] <littledan>
I'd like this call to be open to all relevant experts; please propose any more people who you want to join, and we'll figure out how to get them in.

[11:02:30.0448] <littledan>
this might require signing certain legal agreements to license intellectual property

[11:03:28.0019] <littledan>
did you end up discussing the FinalizationRegistry snapshot question?

[11:06:38.0021] <Andreu Botella>
> <@littledan:matrix.org> did you end up discussing the FinalizationRegistry snapshot question?

in the end we decided to use construction-time

[11:09:31.0063] <Justin Ridgewell>
I think we should be open to anyone. I had invited Steve to join in Jan, but he declined. If he's changed his mind I'd be happy to have him.

[11:11:03.0682] <littledan>
Steve has also joined in other TC39 calls, so I'm kinda surprised that Bradford is even asking...

[11:14:22.0648] <Bradford Smith>
Thanks for confirming that Dan. I invited Steve to the meeting this morning (ineptly, as it turned out, so he missed it this time), but then I thought maybe I was making an incorrect assumption about access to this group. The "tools meeting" has always been more of a community thing, and I suddenly thought I might be incorrectly assuming the same rules for this one.

[11:15:26.0111] <littledan>
in general Ecma defers to members to decide who represents them

[11:15:44.0809] <littledan>
but also this isn't a main TC meeting so it's just informal; we can decide on whatever attendance rules we want

[11:16:35.0562] <littledan>
but if there is a substantial contribution that comes from someone who doesn't have a membership agreement set up for intellectual property, they need to sign the non-member contributor form https://tc39.es/agreements/contributor/

[11:16:40.0938] <littledan>
(this isn't the case for Steve)

[11:17:04.0218] <littledan>
in theory, discussion can constitute contribution, so better safe than sorry in requesting signatures, IMO

[11:17:27.0480] <littledan>
 * (this isn't the case for Steve--he is covered as a Googler)


2024-03-06
[06:42:42.0538] <Andreu Botella>
oh, we forgot to discuss the exact semantics of `AsyncContext.Snapshot.wrap` length in yesterday's meeting

[06:42:44.0695] <Andreu Botella>
see https://github.com/tc39/test262/pull/3874#discussion_r1501253279

[06:43:18.0986] <Andreu Botella>
 * oh, we forgot to discuss the exact semantics of the wrapped function's length in yesterday's meeting

[09:49:04.0513] <Justin Ridgewell>
Happy to reuse Shadow Realmsâ€™s AO


2024-03-07
[18:32:24.0142] <Chengzhong Wu>
Are you referring to https://tc39.es/proposal-shadowrealm/#sec-copynameandlength?

[19:05:32.0332] <Justin Ridgewell>
Yah


2024-03-13
[07:37:59.0721] <Chengzhong Wu>
https://github.com/nodejs/node/pull/52065 I am prototyping `using` declaration support with `AsyncLocalStorage`. In order to address unexpected declaration without `using`, a leakage check is performed when a task (AsyncResource) callback is finished. If there is any active disposable async local storage value, an error is emitted to hint such misuse.

[07:44:03.0932] <Chengzhong Wu>
This could help in less refactoring when adding async context support, i.e. no need to create a new function/arrow function for sub-operations and avoid violating TCP when mutating async context values, as rbuckton suggested.

[07:54:29.0882] <Andreu Botella>
what happens if you have `AsyncLocalStorageDisposableStore`s created and disposed of in a non-stacked way?

[07:57:43.0252] <Chengzhong Wu>
At the moment, it restores the bound `AsyncLocalStorage` value to the one when it was created. However, I think it could avoid restoring the value if the bound `AsyncLocalStorage` was changed so that it could produce fewer conflicts.

[12:51:31.0123] <Andreu Botella>
Hey, I have the V8 design doc ready, pending any comments you might have. PTAL

[12:51:32.0008] <Andreu Botella>
https://docs.google.com/document/d/19gkKY6qC3L5X8WtSAmFq33iNnzeer1mL5495oT1owjY/edit?usp=sharing

[12:51:41.0031] <Andreu Botella>
 * Hey, I have a version the V8 design doc ready, pending any comments you might have. PTAL

[15:08:41.0037] <littledan>
LGTM, ship it!

[15:09:24.0408] <littledan>
hey, given that it seems that proposals don't really need their web integration fully worked out until Stage 3 (I previously thought it was needed at 2.7), is AsyncContext good to go to Stage 2.7 at the next TC39 meeting? I think it is!

[15:17:08.0255] <ljharb>
it seems like there's been lots of changes since it got stage 2 - i've not been able to follow the very complex PRs/discussions, fwiw - and it'd be good to have a thorough recap/update before asking for advancement (iow, pls don't underestimate the timebox)

[15:18:13.0634] <littledan>
yep, +1 on a strong recap and allocating an hour to this

[15:23:06.0044] <Andreu Botella>
littledan: I had a document that I shared with Scott Haseley with some ideas for the task attribution integration. Do you think it would be good to link it?

[15:23:16.0497] <Andreu Botella>
it's very rough around the edges and not anything formal

[15:23:29.0665] <Andreu Botella>
 * littledan: I had a document that I shared with Scott Haseley in January with some ideas for the task attribution integration. Do you think it would be good to link it?

[15:26:48.0187] <littledan>
> <@abotella:igalia.com> littledan: I had a document that I shared with Scott Haseley in January with some ideas for the task attribution integration. Do you think it would be good to link it?

yes, that's great! it'd also be good to link this to some kind of acknowledgement that the web platform snapshot propagation semantics are not yet well-defined, and this will be a blocker for shipping, but not for implementation in V8.

[15:31:34.0426] <Andreu Botella>
actually, that document describes a different shape of the embedder API than the design doc

[15:31:41.0500] <Andreu Botella>
let me update that


2024-03-14
[09:23:41.0442] <Chengzhong Wu>
I thought web integration was needed to be worked out at stage 2.7 as well. But https://tc39.es/process-document/ mentions that host integration should be investigated at stage 2

