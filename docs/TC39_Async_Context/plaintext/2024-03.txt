2024-03-05
[08:58:41.0510] <littledan>
I will miss the AsyncContext meeting, but I want to encourage Googlers to get in touch with Jatin on the CWI Wiz team re: testing AsyncContext. If needed, maybe Igalia could provide them a custom Chrome build including AsyncContext for testing.

[08:58:57.0759] <littledan>
sorry I would like to talk about the FinalizationRegistry context issue but I won't be able to today

[08:59:53.0778] <littledan>
but feel free to discuss without me; I'm fine with reaching the other conclusion, but I'd like us to strongly consider simplifying and reducing overall complexity vs Justin's proposal.

[10:17:21.0918] <Bradford Smith>
Is the AsyncContext meeting open to interested parties who are not delegates?

[10:17:56.0985] <Bradford Smith>
A member of our Google JS/TS Libraries team is very interested in the AsyncContext effort because he needs it for our libraries.

[10:18:04.0303] <Bradford Smith>
Steve Hicks

[10:26:10.0633] <Andreu Botella>
> <@bradfordcsmith:matrix.org> Is the AsyncContext meeting open to interested parties who are not delegates?

I'm not sure if the meeting is open for anyone to join, but I think we've had at least one meeting where we had some non-delegate

[10:31:15.0641] <Bradford Smith>
I would certainly like Steve to be able to attend if he wishes. I think he likely has some interesting ideas to contribute, and he definitely wants to use the upcoming AsyncContext feature to inform development we need.

[11:01:35.0764] <littledan>
Steve can definitely join; he is a Google employee, and Google is an Ecma member

[11:01:52.0729] <littledan>
the important thing is that intellectual property contributed by Steve is licensed for the standard, which is already covered

[11:02:18.0417] <littledan>
I'd like this call to be open to all relevant experts; please propose any more people who you want to join, and we'll figure out how to get them in.

[11:02:30.0448] <littledan>
this might require signing certain legal agreements to license intellectual property

[11:03:28.0019] <littledan>
did you end up discussing the FinalizationRegistry snapshot question?

[11:06:38.0021] <Andreu Botella>
> <@littledan:matrix.org> did you end up discussing the FinalizationRegistry snapshot question?

in the end we decided to use construction-time

[11:09:31.0063] <Justin Ridgewell>
I think we should be open to anyone. I had invited Steve to join in Jan, but he declined. If he's changed his mind I'd be happy to have him.

[11:11:03.0682] <littledan>
Steve has also joined in other TC39 calls, so I'm kinda surprised that Bradford is even asking...

[11:14:22.0648] <Bradford Smith>
Thanks for confirming that Dan. I invited Steve to the meeting this morning (ineptly, as it turned out, so he missed it this time), but then I thought maybe I was making an incorrect assumption about access to this group. The "tools meeting" has always been more of a community thing, and I suddenly thought I might be incorrectly assuming the same rules for this one.

[11:15:26.0111] <littledan>
in general Ecma defers to members to decide who represents them

[11:15:44.0809] <littledan>
but also this isn't a main TC meeting so it's just informal; we can decide on whatever attendance rules we want

[11:16:35.0562] <littledan>
but if there is a substantial contribution that comes from someone who doesn't have a membership agreement set up for intellectual property, they need to sign the non-member contributor form https://tc39.es/agreements/contributor/

[11:16:40.0938] <littledan>
(this isn't the case for Steve)

[11:17:04.0218] <littledan>
in theory, discussion can constitute contribution, so better safe than sorry in requesting signatures, IMO

[11:17:27.0480] <littledan>
 * (this isn't the case for Steve--he is covered as a Googler)


2024-03-06
[06:42:42.0538] <Andreu Botella>
oh, we forgot to discuss the exact semantics of `AsyncContext.Snapshot.wrap` length in yesterday's meeting

[06:42:44.0695] <Andreu Botella>
see https://github.com/tc39/test262/pull/3874#discussion_r1501253279

[06:43:18.0986] <Andreu Botella>
 * oh, we forgot to discuss the exact semantics of the wrapped function's length in yesterday's meeting

[09:49:04.0513] <Justin Ridgewell>
Happy to reuse Shadow Realmsâ€™s AO


2024-03-07
[18:32:24.0142] <Chengzhong Wu>
Are you referring to https://tc39.es/proposal-shadowrealm/#sec-copynameandlength?

[19:05:32.0332] <Justin Ridgewell>
Yah


2024-03-13
[07:37:59.0721] <Chengzhong Wu>
https://github.com/nodejs/node/pull/52065 I am prototyping `using` declaration support with `AsyncLocalStorage`. In order to address unexpected declaration without `using`, a leakage check is performed when a task (AsyncResource) callback is finished. If there is any active disposable async local storage value, an error is emitted to hint such misuse.

[07:44:03.0932] <Chengzhong Wu>
This could help in less refactoring when adding async context support, i.e. no need to create a new function/arrow function for sub-operations and avoid violating TCP when mutating async context values, as rbuckton suggested.

[07:54:29.0882] <Andreu Botella>
what happens if you have `AsyncLocalStorageDisposableStore`s created and disposed of in a non-stacked way?

[07:57:43.0252] <Chengzhong Wu>
At the moment, it restores the bound `AsyncLocalStorage` value to the one when it was created. However, I think it could avoid restoring the value if the bound `AsyncLocalStorage` was changed so that it could produce fewer conflicts.

[12:51:31.0123] <Andreu Botella>
Hey, I have the V8 design doc ready, pending any comments you might have. PTAL

[12:51:32.0008] <Andreu Botella>
https://docs.google.com/document/d/19gkKY6qC3L5X8WtSAmFq33iNnzeer1mL5495oT1owjY/edit?usp=sharing

[12:51:41.0031] <Andreu Botella>
 * Hey, I have a version the V8 design doc ready, pending any comments you might have. PTAL

[15:08:41.0037] <littledan>
LGTM, ship it!

[15:09:24.0408] <littledan>
hey, given that it seems that proposals don't really need their web integration fully worked out until Stage 3 (I previously thought it was needed at 2.7), is AsyncContext good to go to Stage 2.7 at the next TC39 meeting? I think it is!

[15:17:08.0255] <ljharb>
it seems like there's been lots of changes since it got stage 2 - i've not been able to follow the very complex PRs/discussions, fwiw - and it'd be good to have a thorough recap/update before asking for advancement (iow, pls don't underestimate the timebox)

[15:18:13.0634] <littledan>
yep, +1 on a strong recap and allocating an hour to this

[15:23:06.0044] <Andreu Botella>
littledan: I had a document that I shared with Scott Haseley with some ideas for the task attribution integration. Do you think it would be good to link it?

[15:23:16.0497] <Andreu Botella>
it's very rough around the edges and not anything formal

[15:23:29.0665] <Andreu Botella>
 * littledan: I had a document that I shared with Scott Haseley in January with some ideas for the task attribution integration. Do you think it would be good to link it?

[15:26:48.0187] <littledan>
> <@abotella:igalia.com> littledan: I had a document that I shared with Scott Haseley in January with some ideas for the task attribution integration. Do you think it would be good to link it?

yes, that's great! it'd also be good to link this to some kind of acknowledgement that the web platform snapshot propagation semantics are not yet well-defined, and this will be a blocker for shipping, but not for implementation in V8.

[15:31:34.0426] <Andreu Botella>
actually, that document describes a different shape of the embedder API than the design doc

[15:31:41.0500] <Andreu Botella>
let me update that


2024-03-14
[09:23:41.0442] <Chengzhong Wu>
I thought web integration was needed to be worked out at stage 2.7 as well. But https://tc39.es/process-document/ mentions that host integration should be investigated at stage 2

[11:40:53.0866] <littledan>
well, I thought so too, but IIRC something went to Stage 2.7 last meeting with the idea that host integration is not needed until Stage 3

[11:41:07.0478] <littledan>
I'll ask in another channel

[11:43:56.0352] <Andreu Botella>
I mean, host integration *is being* investigated

[11:44:47.0054] <Andreu Botella>
the entrance criteria for 2.7 or 3 doesn't mention host integration, so I'd assume this is something that can continue during those stages?

[11:45:20.0830] <littledan>
it has definitely been enforced as a requirement for Stage 3 in the past

[11:45:50.0359] <littledan>
it isn't in the process doc because the relationship between TC39 and the web platform defies consensus

[11:56:15.0976] <Andreu Botella>
I think we might be overdue for an update anyway, so we could have an "update or stage 2.7" slot

[11:57:10.0277] <littledan>
I'm not a fan of those ambiguous titles. Stage 2.7 is a huge deal. If we want to ask for it, let's ask for it, not say "or". The committee can say no, and then it's just an update.

[11:57:43.0944] <littledan>
we are definitely overdue for an update. If we decide not to propose it for 2.7, we should put an update on the agenda

[11:58:14.0420] <littledan>
in reality the proposal has changed very little since last time, but still, the context has changed, and it's good to keep the energy up around it


2024-03-15
[06:25:57.0796] <dminor>
For this particular proposal, I think I'd want to see host integration specified prior to stage 3. Off hand, this feels like ShadowRealms, where the host integration is a potential can of worms and it would be great to see the DOM side of things as soon as possible.

[06:27:37.0050] <dminor>
Since 2.7 signals ready for testing, and I'd want to see tests for DOM APIs as well, I think the host integration part needs to be specified prior to 2.7.

[10:14:11.0715] <littledan>
dminor: OK, are you saying that you'd prefer that we have a proposed answer for which AsyncContext.Snapshot is used when calling callbacks from each DOM API, before Stage 2.7?

[10:14:59.0440] <littledan>
If you'd like to see that ordering, I wonder if we could ask for consensus on the JS side of the design, even if it's without actual stage advancement.

[10:15:46.0093] <littledan>
The idea is we'd have DOM tests by Stage 3, definitely, either way. Having the final DOM specification before or after 2.7 doesn't change that, I think

[10:15:58.0466] <littledan>
 * The idea is we'd have DOM tests as an entry requirement Stage 3, definitely, either way. Having the final DOM specification before or after 2.7 doesn't change that, I think

[10:20:45.0432] <dminor>
I'd like to see the DOM API fully specified as soon as possible, so I can get feedback from DOM engineers.

[10:22:04.0834] <dminor>
In this case, I think it's important to have the DOM side fully specified before entering Stage 2.7, to avoid a situation like with ShadowRealms, where we didn't realize until implementation time the full impact of the proposal on the DOM side.

[10:22:33.0023] <littledan>
OK, thanks for clarifying!

[10:22:42.0065] <dminor>
No problem :)

[10:22:43.0541] <littledan>
I'm happy with this conclusion


2024-03-18
[12:59:21.0925] <Justin Ridgewell>
It seems our meeting time has changed to 1pm EST because of daylight savings change

[12:59:35.0750] <Justin Ridgewell>
Are we sticking with that, or do we want to adjust it back?

[12:59:43.0802] <Justin Ridgewell>
As is, I can't attend 1pm meetings do to conflicts

[15:36:12.0706] <Mathieu Hofman>
In my case I can't do 11am PDT this week, so the new time actually works better for me (and mark)

[15:36:44.0704] <Mathieu Hofman>
That said mark and I are pretty taken by other priorities, so it may be difficult for us to join anyway

[15:40:52.0551] <Justin Ridgewell>
 * It seems our meeting time has changed to 1pm EDT because of daylight savings change

[15:41:10.0878] <Justin Ridgewell>
Wouldn't it be 10am for you (or 9am if we change it back)?


2024-03-19
[19:20:41.0512] <Chengzhong Wu>
One hour earlier works for me. But it would be difficult for me to join if the call is moved one hour later.

[19:27:10.0577] <Mathieu Hofman>
I dunno. Right now I see the invite at 10am PDT which is the original time I suppose

[19:28:32.0311] <Chengzhong Wu>
Yeah, I found there were updates to the invitation but the time was not changed. 

[20:05:53.0705] <Justin Ridgewell>
Right, I'm asking to move it 1hr earlier: https://everytimezone.com/s/677e7747

[20:06:19.0681] <Justin Ridgewell>
We hit daylight savings, and what was a 12pm meeting for me turned into a 1pm meeting.

[20:14:31.0364] <Chengzhong Wu>
Sounds good to me to move it 1 hour earlier

[20:18:27.0621] <Justin Ridgewell>
Done

[20:44:50.0845] <Justin Ridgewell>
PS, added https://github.com/tc39/proposal-async-context/issues/75#issuecomment-1984151672 to the discussion topics

[23:10:42.0107] <Andreu Botella>
> <@legendecas:matrix.org> Sounds good to me to move it 1 hour earlier

Europe is still on winter time, so that would be 5 PM CEST this week, which might make it a bit hard for me to be there on time today

[23:11:02.0254] <Andreu Botella>
since I have a meeting before that which could go longer

[23:13:16.0117] <Andreu Botella>
that meeting is anchored to Europe time, so that won't nbe a recurring problem 

[09:50:40.0974] <Chengzhong Wu>
Notes today: https://docs.google.com/document/d/1WJpNPg9j7h9CKSd3NmlNmivOHDtQ-LGP7mJcwDvNLa8/edit

[10:16:39.0945] <Bradford Smith>
What's the best way to keep up to date with the information needed to attend the AsyncContext meeting for someone who doesn't have access to the TC39 event calendar?

[10:17:42.0687] <Bradford Smith>
I tried to just copy the event entry to my own calendar event and invite others who needed to know, but the information is clearly too dynamic for that to work.

[10:29:25.0931] <Justin Ridgewell>
We can add you to the official event

[10:29:50.0659] <Bradford Smith>
Add sdh@google.com

[10:50:21.0801] <Justin Ridgewell>
Done. Sorry about the confusion. Your own cal invite _would_ have worked except for the original not accounting for daylight savings. :grimmace:

[10:53:28.0555] <Steve Hicks>
Got it, thanks!

[11:05:25.0876] <Bradford Smith>
Thanks, Justin!

[11:55:53.0706] <littledan>
Why donâ€™t you have access to the TC39 calendar?

[11:56:38.0030] <littledan>
Anyway more broadly we are hoping to give an update on AsyncContext next TC39 meeting, so that will give you a chance 

