2025-06-03
[06:48:27.0451] <Chengzhong Wu>
We are going to have a WebEngine Hackfest session on AsyncContext on tomorrow, June 4: https://github.com/Igalia/webengineshackfest/issues/64

[06:49:21.0603] <Chengzhong Wu>
Anyone has agenda items for today's bi-weekly call? Or we can cancel it and have discussions on tomorrow's Hackfest session

[06:52:19.0661] <Andreu Botella>
I'm in favor of canceling today's call


2025-06-04
[07:02:17.0265] <Andreu Botella>
The Web Engines Hackfest session is in ~30 minutes: https://github.com/Igalia/webengineshackfest/issues/64

[07:13:19.0806] <nicolo-ribaudo>
Michal Mocny If we had something like https://github.com/whatwg/dom/issues/1038, with an API that uses promises for one-time events, such as
```js
const img = new Image();
img.src = imgURL;
await img.eventPromise("load");
//
```
do you think it would be still as important to implicitly propagate the context through `load`/`error` events? I'd assume that most web developers would prefer the promise-based API for one-off events where the "after" is a logical consequence of the "trigger"

