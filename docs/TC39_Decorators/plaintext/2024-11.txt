2024-11-25
[22:16:46.0764] <Boshen Chen>
Hi all, I'm currently doing some research on what to implement for decorators in Oxc, according to https://github.com/tc39/proposal-decorators?tab=readme-ov-file#how-does-this-proposal-compare-to-other-versions-of-decorators, are we kind of stuck of having to implement both legacy and stage 3 for the ecosystem?

[22:22:42.0414] <Boshen Chen>
> and the possibilty of moving back to stage 2.7

I'm also feeling lost on which conformance suite to follow from different implementations, would be great if it is converged to test262.

[00:54:36.0268] <nicolo-ribaudo>
There is a wip PR at https://github.com/tc39/test262/pull/4103 for tests

[05:20:33.0448] <pzuraq>
Yes, I have been recovering from a surgery so haven’t had a lot of spare time but hoping to land it during the holidays

[05:20:42.0883] <pzuraq>
It should run locally on that branch

[05:20:48.0663] <pzuraq>
Need to rebase

[06:19:56.0249] <Mathieu Hofman>
> <@boshen:matrix.org> Hi all, I'm currently doing some research on what to implement for decorators in Oxc, according to https://github.com/tc39/proposal-decorators?tab=readme-ov-file#how-does-this-proposal-compare-to-other-versions-of-decorators, are we kind of stuck of having to implement both legacy and stage 3 for the ecosystem?

Why would a new implementation bother with the legacy proposal?

[06:20:55.0244] <Mathieu Hofman>
IMO we shouldn't encourage usage of the legacy decorators by adding support to new tools

[06:22:16.0732] <pzuraq>
Agreed personally

[06:34:07.0516] <Boshen Chen>
People always bring up nest.js for this question. https://github.com/nestjs/nest/issues/11414#issuecomment-1495794076

[06:35:09.0515] <pzuraq>
Existing libraries that have had decorators for some time will have to support both for a period, because transitioning existing codebases is going to take a while

[06:35:37.0058] <pzuraq>
People have written custom decorators, and they may be using several libs that have varying levels of support

[06:36:24.0197] <pzuraq>
But if you’re writing a new lib or framework and you don’t care about interop, I would not add support for legacy

[06:37:01.0383] <pzuraq>
Boshen Chen: does Oxc already have decorators?

[06:37:09.0358] <Boshen Chen>
The project I'm on is Oxc, which is a js / ts tranpiler :-(

[06:37:14.0851] <pzuraq>
Ahh

[06:37:18.0217] <pzuraq>
Hmm

[06:38:21.0348] <pzuraq>
So, I guess, 1) who is your target demographic, do you really want Nest users to be able to use it? And 2) does it look like that demographic will be moving forward soon?

[06:39:32.0267] <pzuraq>
I think I’d start with supporting the new standard and working with major libs to implement support, then if necessary implementing legacy (but only if you can’t get others to update)

[06:39:43.0908] <Boshen Chen>
I can defer implementing legacy.

Would love to conform to test262 instead of ts / esbuild / babel's suite when we start implementing :-)

[06:40:37.0509] <pzuraq>
Nice! Yeah I’m tied up for the next couple weeks but like I said, I want to get the tests merged sooner rather than later

[06:41:02.0395] <pzuraq>
If you wanna help out with my PR, like rebasing it and getting any comments handled, that would definitely help

[06:42:17.0905] <Boshen Chen>
I may not be the implementor, but I'll pass that PR to the implementor when they start.

[06:45:59.0763] <pzuraq>
Cool, they can ping me on here or via email

[06:46:06.0675] <pzuraq>
Me@pzuraq.com

