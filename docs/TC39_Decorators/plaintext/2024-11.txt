2024-11-25
[22:16:46.0764] <Boshen Chen>
Hi all, I'm currently doing some research on what to implement for decorators in Oxc, according to https://github.com/tc39/proposal-decorators?tab=readme-ov-file#how-does-this-proposal-compare-to-other-versions-of-decorators, are we kind of stuck of having to implement both legacy and stage 3 for the ecosystem?

[22:22:42.0414] <Boshen Chen>
> and the possibilty of moving back to stage 2.7

I'm also feeling lost on which conformance suite to follow from different implementations, would be great if it is converged to test262.

[00:54:36.0268] <nicolo-ribaudo>
There is a wip PR at https://github.com/tc39/test262/pull/4103 for tests

[05:20:33.0448] <pzuraq>
Yes, I have been recovering from a surgery so havenâ€™t had a lot of spare time but hoping to land it during the holidays

[05:20:42.0883] <pzuraq>
It should run locally on that branch

[05:20:48.0663] <pzuraq>
Need to rebase

[06:19:56.0249] <Mathieu Hofman>
> <@boshen:matrix.org> Hi all, I'm currently doing some research on what to implement for decorators in Oxc, according to https://github.com/tc39/proposal-decorators?tab=readme-ov-file#how-does-this-proposal-compare-to-other-versions-of-decorators, are we kind of stuck of having to implement both legacy and stage 3 for the ecosystem?

Why would a new implementation bother with the legacy proposal?

[06:20:55.0244] <Mathieu Hofman>
IMO we shouldn't encourage usage of the legacy decorators by adding support to new tools

[06:22:16.0732] <pzuraq>
Agreed personally

[06:34:07.0516] <Boshen Chen>
People always bring up nest.js for this question. https://github.com/nestjs/nest/issues/11414#issuecomment-1495794076

[06:35:09.0515] <pzuraq>
Existing libraries that have had decorators for some time will have to support both for a period, because transitioning existing codebases is going to take a while

