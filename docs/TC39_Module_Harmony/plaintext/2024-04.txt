2024-04-02
[20:50:55.0141] <sirisian>
Jack Works: I am down a rabbit hole. Not sure if you remember: https://github.com/tc39/proposal-compartments/issues/11 Was your intention there to do a babel-like transform on a Javascript file?

[20:55:42.0986] <sirisian>
At a high level do any of these proposals allow one to create an import "preprocessor" that hooks all imports (and their import attributes), modify their source text, and output a module? (And then hook any new imports if applicable in that module recursively). Or is that out of scope for the proposals?

[21:12:18.0225] <kriskowal>
That is certainly within scope for a `Module` instance constructor with an `importHook`.

[21:27:47.0632] <sirisian>
Would this work for the "root" realm (not sure the term). Like in a node.js environment where an importHook could process everything? Or would you just create a ShadowRealm (or compartment?) and run the index file in a wrapper?

[01:50:16.0770] <Jack Works>
> <@sirisian:matrix.org> Jack Works: I am down a rabbit hole. Not sure if you remember: https://github.com/tc39/proposal-compartments/issues/11 Was your intention there to do a babel-like transform on a Javascript file?

Yes. The old API allows us to run a text based hook before evaluation. This allows, for example, run TypeScript file by calling tsc to transform the source.


2024-04-03
[17:03:42.0839] <sirisian>
Jack Works: Is this in new APIs/proposals already?

[17:44:11.0339] <Jack Works>
> <@sirisian:matrix.org> Jack Works: Is this in new APIs/proposals already?

I cannot tell. maybe no

[12:57:20.0291] <guybedford>
Our usual call tomorrow overlaps with the Involvement in Standards discussion at the Node.js Collab Summit... I have a preference towards keeping our meeting especially with the upcoming progress in the Wasm CG and TC39 but wanted to see if many others here plan to go to the collab summit?

[13:27:55.0884] <nicolo-ribaudo>
I plan to prioritise our modules meeting

[14:09:34.0057] <guybedford>
ok, I will be attending the modules session just before but skipping the standards discussion, so will see you in the modules meeting, possibly a couple of minutes late if things run over a bit

