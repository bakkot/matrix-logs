2023-11-01
[08:45:56.0206] <Kris Kowal>
Regarding the intermediate design family for transferrable modules, I am warming up to the intermediate position, where a ModuleSource may share private state with the host module loader, not just for CSP, but to determine import hook behavior. I have been mulling the implications for host virtualization and so far conclude that the behavior is trivial to emulate with a side table or private field. For a module loader that is serving as both a host and guest, the module-in-the-middle is sufficiently empowered that it can implement its own emulation of CSP or deny the host behavior. In short, Iâ€™m running out of reasons to dislike this framing and Iâ€™ll bring this up at the SES meeting today to socialize it.

[08:51:15.0999] <Kris Kowal>
Itâ€™s attractive that neither CSP nor import.meta.url need to be captured on the 262 side and can exist entirely in the HTML integration.

[08:53:27.0556] <nicolo-ribaudo>
Interesting, I wonder how that interacts with multi-instantiation of modules 

[08:53:42.0924] <nicolo-ribaudo>
I don't think I can join the SES meeting (this is the "half of the meetings switched timezone, the other half didn't" week), but I'll watch the recording 

[08:55:45.0068] <Kris Kowal>
Re multi-instantiation, Iâ€™m assuming the host module loader shares a module map keyed on url among all the instances it creates, so the host import hook is in a position to inspect the privately held url on the source and decide to reuse another instance.

[08:56:30.0391] <Kris Kowal>
That implies a return override, gross.

[08:58:46.0883] <Kris Kowal>
Might also imply that we need to thread return override down to the initializer hook, should we choose to pursue the revealing callback.

[09:23:51.0117] <Kris Kowal>
Another possible design would allow for a module source to be directly imported, giving the host the option of creating a host-defined instance behavior or reusing an existing instance based on the privately shared origin data. To virtualize that behavior, I imagine the hook would need to be defined on something in the same position as the Evaluators object.

[12:34:27.0628] <Kris Kowal>
Conclusion from the SES meeting is the Agoric contingent considers Lucaâ€™s design family, where host-defined ModuleSource and host-define ModuleInstance behaviors can collude, is worth investigating and not obviously bad.

[12:34:48.0391] <Kris Kowal>
 * Conclusion from the SES meeting is the Agoric contingent considers Lucaâ€™s design family, where host-defined ModuleSource and host-defined ModuleInstance behaviors can collude, is worth investigating and not obviously bad.

[15:08:12.0070] <Kris Kowal>
Recording from SES meeting last week socializing Module Harmony updates https://youtu.be/XoB3FaAfhTg

[15:11:12.0835] <Kris Kowal>
> <@nicolo-ribaudo:matrix.org> Interesting, I wonder how that interacts with multi-instantiation of modules

I donâ€™t think the intermediate ModuleSource can replicate multiple instances with the same origin. For that, you def need to go all the way to ModuleInstance transferrability. It would not be tractable for `new Module(source) === new Module(source)` iff the source had a private origin.

[15:23:39.0906] <Kris Kowal>
Todayâ€™s SES meeting re design families for module sharing https://youtu.be/qISoSOiUwwk


2023-11-05
[15:07:46.0488] <guybedford>
Hi all, it seems the best cross-over time we have for the new meeting is actually looking like Thursday, an hour before the current meeting time. In your timezone here - https://www.timeanddate.com/worldclock/fixedtime.html?msg=TC39+Module+Harmony+Proposed+New+Meeting+Time&iso=20231109T1600.

[15:08:24.0820] <guybedford>
I'd like to propse we update the meeting time to this slot as of this coming week, and will aim to get the invite updated tomorrow to this effect, unless anyone has any scheduling constraints or queries further.

[15:08:33.0454] <guybedford>
 * I'd like to propose we update the meeting time to this slot as of this coming week, and will aim to get the invite updated tomorrow to this effect, unless anyone has any scheduling constraints or queries further.


2023-11-06
[02:23:55.0663] <nicolo-ribaudo>
ðŸ™ƒ

[02:24:17.0868] <nicolo-ribaudo>
It sounds good to me â€” I'm not sure if I can attend this Thursday (I'll be travelling at that time)

[09:05:51.0202] <guybedford>
weird, it's working on desktop for me!

