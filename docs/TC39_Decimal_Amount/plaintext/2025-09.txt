2025-09-02
[06:11:50.0738] <Jesse>
reminder -- we have a JS numerics call on Thursday!

[06:12:28.0669] <Jesse>
the main topic is to try to settle on how we want to handle infinity in the data model

[06:32:20.0263] <Jesse>
agenda is at https://docs.google.com/document/d/1O2EQC61TIDtkcvDSkhDf4N_R9GioT0foU2tH9HBdMdQ/edit?pli=1&tab=t.0#heading=h.v13inqtu2ric


2025-09-04
[09:02:50.0288] <sffc>
Running a few minutes late


2025-09-18
[08:30:06.0935] <eemeli>
We have a call today, yes?

[08:46:54.0255] <Jesse>
yes!

[08:47:06.0816] <Jesse>
agenda here: https://docs.google.com/document/d/1O2EQC61TIDtkcvDSkhDf4N_R9GioT0foU2tH9HBdMdQ/edit?pli=1&tab=t.0

[09:52:31.0485] <Jesse>
taking a look at https://github.com/tc39/proposal-amount/issues/54 , I think the SDO in keep-trailing-zeros should take care of most/all of these?

[09:53:17.0470] <Jesse>
(the version of the spec that WH is referring to is an older one that predates our pirating of some of keep-trailing-zero's functionality, specifically the SDO that computes significant digits)

[09:54:28.0236] <Jesse>
B-en would you be willing to add an open question to plenary in the amount slides about parsing numbers with units in them? E.g. `new Amount("42[kg]")

[09:54:33.0629] <Jesse>
* B-en would you be willing to add an open question to plenary in the amount slides about parsing numbers with units in them? E.g. \`new Amount("42\[kg\]")`

[09:54:41.0414] <Jesse>
* B-en would you be willing to add an open question to plenary in the amount slides about parsing numbers with units in them? E.g. `new Amount("42\[kg\]")`

[09:55:19.0910] <Jesse>
there was also an open question about what keep-trailing-zeroes does in Intl.NF when given exponential notation strings like "3e-5"

[09:57:06.0240] <Ben Allen>
and our current position is basically just... "we dunno?"

[09:57:12.0082] <Jesse>
yeah

[09:58:24.0385] <Jesse>
this might intersect with discussions about notation for numbers-with-units in ther contexts like CLDR etc. we're sort of rolling with a new (?) bracket notation

[10:01:13.0152] <Jesse>
there's also a todo to make an issue to discuss creatng amounts from an amount. I see a reference to that here: https://github.com/tc39/proposal-amount/issues/49#issuecomment-3286110669

[10:02:50.0591] <Jesse>
I'm not sure what the issue is? It seems to me that we'd like to have the property `new Amount(new Amount(a, b), c)` equivalent to new Amount(a, b).with(c)

[10:02:59.0031] <Jesse>
* I'm not sure what the issue is? It seems to me that we'd like to have the property `new Amount(new Amount(a, b), c)` equivalent to `new Amount(a, b).with(c)`

[10:04:58.0797] <Jesse>
or to put it differently: should we ban `new Amount(new Amount(...))`?

[10:05:45.0291] <Jesse>
thinking ahead to decimal and other number-y things, I suppose we should support them. but they'll be objects so I suppose we'd need to do some brand checks


2025-09-19
[20:29:42.0771] <sffc>
Jesse, can you make the polyfill available someplace like https://tc39.es/proposal-amount/docs/ so that people can use it in the web inspector like they can with the Temporal polyfill?

[23:43:45.0975] <Jesse>
great idea -- I'm on it!

[00:46:28.0500] <sffc>
I made some PRs to the README: https://github.com/tc39/proposal-amount/pull/60, https://github.com/tc39/proposal-amount/pull/61

[05:41:51.0151] <nicolo-ribaudo>
From the accounting software I use :)

