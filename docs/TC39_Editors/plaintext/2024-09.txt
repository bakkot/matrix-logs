2024-09-02
[17:49:37.0578] <bakkot>
Michael Ficarra I finally updated https://github.com/tc39/ecma262/pull/2924 if you want to review my changes

[18:11:23.0343] <shu>
> <@michaelficarra:matrix.org> send me some times that work for you

same time thurs and fri but strongly prefer not fri

[14:48:09.0278] <bakkot>
I am going through and approving and stamping some trivial PRs that michael has approved but shu has not

[14:48:19.0043] <bakkot>
fixing types of parameters of AOs, etc

[14:48:51.0512] <bakkot>
shu I assume you don't want to review things this trivial but if you want to check first I can take the label off

[14:49:21.0204] <bakkot>
it's the following:
- https://github.com/tc39/ecma262/pull/3380
- https://github.com/tc39/ecma262/pull/3378
- https://github.com/tc39/ecma262/pull/3376
- https://github.com/tc39/ecma262/pull/3375


2024-09-03
[07:39:53.0211] <shu>
if they're small i can just look through them right now

[08:05:40.0275] <Michael Ficarra>
> <@shuyuguo:matrix.org> same time thurs and fri but strongly prefer not fri

sure, same time Thu works for me

[08:08:16.0308] <Michael Ficarra>
@ljharb:matrix.org do you mind updating the calendar invite?

[08:31:42.0386] <shu>
moved

[08:32:50.0606] <ljharb>
was just about to, i see shu did it


2024-09-05
[14:31:23.0317] <Michael Ficarra>
I'm running a few minutes late

[15:30:01.0020] <shu>
ljharb: oops, what'd you say?

[15:30:17.0186] <ljharb>
just asking about the merge label on 3409 and 3410, but michael's doing it

[15:33:16.0672] <Michael Ficarra>
@ljharb:matrix.org so next PR is refactoring that lookup table and removing the Type AO?

[15:33:33.0658] <ljharb>
yep. first i have to come up with an idea to refactor the lookup table tho :-)

[15:33:59.0408] <ljharb>
if not in the next week, i've got 2 cross-country flights the following week so i'll have plenty of thinkin time

[16:04:38.0745] <Michael Ficarra>
I think just use 2 tables and do the type discrimination in the algorithm steps before referring to which table to look at

[16:09:40.0323] <ljharb>
i literally was just looking at it now, and i agree

[16:09:52.0741] <ljharb>
(it's already weird that bigint has 4 of its ops outside the table, but other ops in the table)

[16:10:13.0666] <ljharb>
i'll make the PR today or tomorrow, that splits it into a number table and a bigint table.

[16:14:57.0297] <Michael Ficarra>
üëçÔ∏è thanks


2024-09-06
[17:34:59.0401] <jmdyck>
Those 4 BigInt ops are outside the table because they return completions.

[17:38:34.0874] <jmdyck>
Pulled out in https://github.com/tc39/ecma262/pull/2547

[22:53:31.0805] <ljharb>
thanks, gotcha. it's a shame that we can't just do `return ? operation()` because of completion record reform :-)

[03:59:38.0337] <jmdyck>
I think we can. Like, I think step 6's body could have been "Let _operation_ be <table>. Return ? _operation_(_lNum_, _rNum_)." I'm guessing 2547 didn't do it that way because the increase in DRYness wasn't worth the visual cost.

[04:05:58.0383] <jmdyck>
(I.e., completion record reform doesn't prevent `return ? operation()` in step 6, it just prevents combining step 6 + 7. I think.)

[06:58:01.0048] <Michael Ficarra>
oh I forgot that I'm on PTO next week, so I won't be at the Sept 11th editor call @shuyuguo:matrix.org

[07:48:36.0122] <shu>
ljharb: Michael Ficarra i didn't +1 https://github.com/tc39/ecma262/pull/3409's change to boolean

[07:48:57.0761] <shu>
you talked about it but i don't think you were changing it for the PR

[07:49:02.0996] <shu>
i'd prefer the 2-state enum back

[07:49:12.0786] <shu>
 * you talked about it but i didn't think you were changing it for the PR

[07:49:41.0514] <Michael Ficarra>
oh I thought you were okay with it from your comments on the call

[07:49:51.0481] <Michael Ficarra>
yeah it's fine to put it back, I was fairly neutral about it

[07:49:57.0494] <shu>
no, i just didn't say anything while you were talking about it

[07:50:11.0590] <shu>
because i didn't get the sense you actually wanted to change it

[07:50:48.0330] <Michael Ficarra>
it seems that will obsolete https://github.com/tc39/ecma262/pull/3419

[07:51:25.0767] <ljharb>
oh i thought you did in the call. want me to change it back to an enum? 

[07:51:30.0004] <Michael Ficarra>
yeah to me it sounded like Jordan was positive about it and you and I were both neutral, so I just went with it

[07:51:32.0273] <shu>
yes

[07:52:16.0612] <ljharb>
I‚Äôll add it into 3419 (if jmdyck doesn‚Äôt get to it first)

[07:52:27.0846] <shu>
> <@ljharb:matrix.org> oh i thought you did in the call. want me to change it back to an enum?

yes please

[07:59:45.0975] <bakkot>
I would be on board with changing almost all boolean parameters to enums tbh

[08:35:22.0423] <Michael Ficarra>
FYI @bakkot:matrix.org this came out of me remarking that this case is atypical in that a boolean is just as good as an enum

[08:35:28.0618] <Michael Ficarra>
or at least an enum with poorly chosen names

[08:35:56.0300] <Michael Ficarra>
if we did like `no-validation` and `validate-as-property-keys`, then the enum is better

[09:07:48.0887] <ljharb>
yeah generally i'd prefer an enum too, this case a boolean seemed like it'd help imply a third state wouldn't be accepted :-)

