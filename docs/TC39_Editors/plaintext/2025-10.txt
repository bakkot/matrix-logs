2025-10-03
[14:41:59.0678] <bakkot>
does anyone care to review https://github.com/tc39/ecma262/pull/3698 or should I just stamp it

[14:58:38.0495] <Michael Ficarra>
merge it


2025-10-13
[12:56:29.0859] <jmdyck>
dang it, completely forgot again

[14:02:45.0566] <bakkot>
jmdyck: we're gonna move it two hours later, hopefully that will be a better time

[14:18:27.0836] <jmdyck>
probably better for me. starts next week?

[15:22:10.0080] <Michael Ficarra>
yes

[15:22:24.0258] <Michael Ficarra>
the calendar event should already be updated


2025-10-15
[08:50:48.0797] <Michael Ficarra>
is there a good reason why we don't have `?` and `!` appearances link to their definition?

[08:50:56.0808] <Michael Ficarra>
it's really not easy to Ctrl+F for

[08:58:57.0110] <bakkot>
could probably be done

[08:59:09.0699] <bakkot>
not sure if the existing autolinking would handle it, particularly avoiding false positives

[09:42:30.0989] <Michael Ficarra>
we could use an alternative notation in the spec document

[09:42:40.0281] <Michael Ficarra>
it doesn't *have* to look like `?` and `!` in the source

[09:42:50.0410] <Michael Ficarra>
* we could use an alternative markup in the spec document

[09:44:32.0266] <bakkot>
No, absolutely not 

[09:44:53.0659] <bakkot>
That is an unreasonable burden on authors

[09:53:32.0383] <Michael Ficarra>
do you think it would add much weight to the rendered document?

[09:53:36.0618] <Michael Ficarra>
that's a lot of links

[09:56:20.0120] <bakkot>
I assume it compresses though it does still affect parse and layout 

[09:57:02.0507] <bakkot>
Striiiictly speaking we could do it client side 

[09:57:36.0831] <bakkot>
Ecmarkup could be made to be client side entirely 

[10:22:19.0942] <Michael Ficarra>
lol I (selfishly) care more about weight for initial rendering time, not download time, so that would work against my goals


2025-10-16
[14:08:54.0639] <bakkot>
more meta stuff https://github.com/tc39/ecma262/pull/3706

