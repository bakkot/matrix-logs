2021-09-01
[11:43:33.0373] <ljharb>
cancel the editor meeting today, i presume?

[11:46:45.0519] <bakkot>
y


2021-09-02

2021-09-03

2021-09-04

2021-09-05

2021-09-06

2021-09-07

2021-09-08
[13:55:46.0240] <shu>
i shouldn't have taken a break from looking at ecmarkup and ecmarkdown, now i gotta page everything back in


2021-09-09

2021-09-10
[11:51:07.0467] <shu>
bakkot: i'm doing something kind of cursed with the reals. opinions on the following? i'm fixing a bug in the resizable buffers proposal for %TypedArray%.prototype.slice in a way i want to increment a TA index by 1/element size inside a loop that does bytewise copy

[11:51:13.0492] <shu>
that TA index is an MV

[11:51:17.0845] <shu>
so... this is fine, but it seems cursed

[16:12:16.0275] <bakkot>
oof

[16:12:33.0364] <bakkot>
I am fine with it as a mathematician but that's scary as a thing-to-ask-machines-to-implement

[16:13:14.0501] <bakkot>
I guess it's not so bad when element size is a power of 2, which it presumably is here?

[16:13:35.0516] <bakkot>
but still, is there a way to rephrase it to increment by 1 instead, and count when have incremented enough times, or something to that effect?

[16:14:05.0754] <bakkot>
I am much happier with having the loop counter be integral if possible, even if it entails doing a division in the body of the loop

[16:18:35.0787] <shu>
i feel the same way

[16:18:43.0541] <shu>
so in the end i refactored to get around it

[16:18:52.0519] <shu>
it wasn't one of those observable loops

[16:18:54.0198] <shu>
but still

