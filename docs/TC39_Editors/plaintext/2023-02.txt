2023-02-02
[19:33:56.0579] <bakkot>
here is a build of the spec where `[[FieldNames]]` are clickable to highlight like variable names: https://bakkot.github.io/ecma262-previews/highlight-brackets/

[19:34:19.0495] <bakkot>
it's mostly intended for Temporal and 402, which have a lot more algorithms with a lot of different field names

[19:34:27.0674] <bakkot>
but it seems like it is not harmful for 262?

[19:34:37.0682] <bakkot>
anyway requesting feedback before I commit to this in ecmarkup

[20:55:07.0724] <ljharb>
whereâ€™s the diff for 262?

[21:02:41.0473] <bakkot>
I don't understand the question

[21:58:06.0465] <ljharb>
like what's different in 262 from that change

[22:18:02.0017] <bakkot>
if you click `[[FieldNames]]` they highlight like variables do

[08:15:25.0407] <ljharb>
oh interesting, but they highlight across the entire spec, not just one algorithm

[08:15:56.0312] <ljharb>
that seems useful but also sort of implies that field names should be unique for a given purpose?

[08:16:16.0376] <Michael Ficarra>
ljharb: there's no way to tell two fields apart if they have the same name though

[08:16:23.0525] <Michael Ficarra>
since it's a dynamic concept

[08:16:38.0813] <ljharb>
right, hence implying they should be unique :-)

[08:16:55.0557] <Michael Ficarra>
PRs welcome

[08:16:56.0449] <ljharb>
like AB and SAB should share a name but like `[[Value]]` shouldn't be used for more than just completion records, or something

[08:17:29.0819] <Michael Ficarra>
I think it will be hard to make the field names globally unique while also not making them super verbose

[08:17:52.0967] <ljharb>
fair

[08:19:37.0089] <Michael Ficarra>
ljharb: though now that I check it out, I only see it highlighting a field in a single algorithm at any given time

[08:19:55.0342] <Michael Ficarra>
that makes this much less of a problem

[08:20:28.0586] <ljharb>
hm, if that's true then ok, but i grepped for the first `[[` and clicked on it and it went across more than one algo

[08:20:36.0682] <ljharb>
it was a `[[Value]]` in the returnabrupt macro iirc

[08:21:46.0687] <Michael Ficarra>
well highlights inside an AO seem to be bounded to the AO

[08:21:57.0155] <Michael Ficarra>
 * well highlights inside an AO seem to be bounded to the AO

[08:22:45.0837] <Richard Gibson>
ljharb: that behavior is shared with spec-alias variables such as _argument_ in the same section

[08:23:02.0376] <ljharb>
ah ok

[08:23:05.0415] <Michael Ficarra>
here's a good section for testing it out: https://bakkot.github.io/ecma262-previews/highlight-brackets/#sec-property-descriptor-specification-type

[08:24:00.0120] <ljharb>
ah ok makes sense

[08:25:48.0851] <Richard Gibson>
I believe it stems from `findContainer` looking for ancestor emu-{clause,intro,annex} elements via `toggleFindLocalReferences` at https://github.com/tc39/ecmarkup/blob/4e43574fb6f8efab80aa74d79d58f7bfee97b6a5/js/menu.js#L573

[08:26:41.0202] <Richard Gibson>
 * I believe it stems from `findContainer` looking for ancestor emu-{clause,intro,annex} elements via `toggleFindLocalReferences` at https://github.com/tc39/ecmarkup/blob/4e43574fb6f8efab80aa74d79d58f7bfee97b6a5/js/menu.js#L573

[08:27:18.0312] <bakkot>
note that this also applies to the MOP methods, since they look exactly the same as fields

[08:27:20.0545] <bakkot>
but again, not harmful

