2022-11-01
[07:59:20.0780] <Michael Ficarra>
https://github.com/tc39/ecma262/pull/2926 pins the SHA now

[07:59:25.0065] <Michael Ficarra>
shall I mark it as ready to merge?

[10:59:54.0404] <Michael Ficarra>
shu: did you want to review this one or should I mark it as ready to merge? https://github.com/tc39/ecma262/pull/2915

[11:03:43.0485] <shu>
let me take a look now

[13:21:02.0514] <Michael Ficarra>
shu: and the esmeta one?

[13:22:41.0888] <shu>
https://github.com/tc39/ecma262/pull/2926?

[13:22:44.0459] <shu>
i'm happy to defer on that one

[13:35:07.0307] <bakkot>
:shipit:


2022-11-02
[15:17:28.0250] <bakkot>
Michael Ficarra: 

```
git rebase -i commit-before-format
git rebase -X theirs commit-with-format # NB no "-i"
npm i && npm run format
git commit --amend -a --no-edit
git rebase -i commit-after-format
```

[15:31:51.0601] <bakkot>
 * Michael Ficarra:

```
git rebase -i 771ff09cb0dc323b49cc7345ac6a929e95e0a631 # commit before format
git rebase -X theirs 0090daffc4199c561583bd537ac0737aada4760f # commit with format; NB no "-i"
npm i && npm run format
git commit --amend -a --no-edit
git rebase -i f5f5513a19fdf1ecd8e473b584804c0212a50189 # commit-after-format
```

[15:32:51.0110] <bakkot>
 * Michael Ficarra:

```
git rebase -i 771ff09 # commit before format
git rebase -X theirs 0090daf # commit with format; NB no "-i"
npm i && npm run format
git commit --amend -a --no-edit
git rebase -i f5f5513 # commit-after-format
```

[15:49:45.0668] <bakkot>
 * Michael Ficarra:

```
git rebase -i 0090daf^ # 0090daf is the commit where the formatter is applied
git rebase -X theirs 0090daf --exec "npm i && npm run format && git commit --amend -a --no-edit"
git rebase -i main
```

[15:50:05.0889] <bakkot>
updated the above command to handle multiple-commit PRs

[15:50:20.0393] <bakkot>
 * updated the above command to handle multiple-commit branches


2022-11-03
[06:30:34.0183] <jmdyck>
So after 2901, is there a rule about when to use entities and when not? (other than "Do what `npm run format` says")

[08:34:52.0444] <bakkot>
The rule is, don't use entities except for `&amp;` and `&lt;`

[08:35:09.0323] <bakkot>
which is also what `npm run format` does

[09:04:50.0977] <jmdyck>
`< spec.html grep -o '&\w\+;' | sort | uniq -c` says otherwise

[09:10:18.0592] <jmdyck>
most are in `<emu-grammar>` elements, but also some in `<h1>`, `<code>`, `<td>`.

[09:35:02.0579] <bakkot>
oh, sorry, also whitespace like nbsp

[09:35:11.0405] <bakkot>
I will fix up the others at some point

[09:40:04.0333] <bakkot>
(the formatter doesn't apply the same rules to emu-grammar etc, is why those got left behind)

[11:22:29.0988] <shu>
bakkot: Michael Ficarra: you two should prioritize reviewing https://github.com/tc39/ecma262/pull/2905

[11:22:50.0039] <shu>
well, at least one of you


2022-11-04
[14:23:33.0656] <jmdyck>
So if esmeta raises a bogus error, what do I do?

[14:27:53.0915] <bakkot>
add the containing clause to esmeta-ignore.json, and if that doesn't work, complain to Michael Ficarra 

[14:29:48.0579] <jmdyck>
The funny thing is, as far as i can tell, the pr didn't do anything to cause the error.

[14:32:46.0711] <jmdyck>
So does the error message tell me the clause-identifier that would need to be added to esmeta-ignore?

[14:33:13.0218] <jmdyck>
because I don't know esmeta's naming convention

[14:40:38.0857] <jmdyck>
That's https://github.com/tc39/ecma262/actions/runs/3397117278/jobs/5648935776.

[14:42:10.0384] <jmdyck>
 For https://github.com/tc39/ecma262/actions/runs/3397080497/jobs/5648856698, it's raising a Parse Error, which I'm guessing esmeta-ignore doesn't help with. But even if it does, again, I don't know how esmeta wants me to refer to the Function constructor. Just "Function" ?

[14:49:37.0466] <jmdyck>
Re the failure of https://github.com/tc39/ecma262/pull/2246, adding "ECMAScriptFunctionObject.Construct" to esmeta-ignore didn't make the error go away, so complaining to Michael Ficarra .

[14:52:46.0095] <jmdyck>
(It weird that the workflow-run report doesn't link back to the PR.)


2022-11-05
[17:38:17.0452] <jmdyck>
 * (It's weird that the workflow-run report doesn't link back to the PR.)

[17:38:51.0029] <jmdyck>
 * Re the failure of https://github.com/tc39/ecma262/pull/2246, adding "ECMAScriptFunctionObject.Construct" to esmeta-ignore didn't make the error go away, so this is me complaining to Michael Ficarra .


2022-11-07
[07:26:51.0581] <bakkot>
we should turn off the check in the mean time, I suppose

[07:50:55.0477] <Michael Ficarra>
are we in that much of a rush to get the PR in?

[07:51:13.0609] <Michael Ficarra>
if you haven't noticed, things move a little slowly around here

[08:08:39.0909] <bakkot>
I thought that's what we said the plan was?

[08:08:54.0437] <bakkot>
I don't want things to be blocked on waiting for esmeta to update

[08:31:26.0461] <Michael Ficarra>
I'm fine either way, I'm just patient and lazy so would opt to wait until next week

[09:09:12.0340] <Michael Ficarra>
actually my opinion is stronger: I'd prefer to leave it enabled for now so we can have it run on other PRs in the meantime

[09:09:43.0189] <Michael Ficarra>
when we discussed being blocked, I was thinking we were talking about extended periods of time with no feedback from the esmeta devs

[09:45:32.0055] <bakkot>
we should talk about that more, then

[09:46:09.0300] <bakkot>
but if it's just that you still want it to run, I'm fine with just disabling the enforcement of the check

[09:46:41.0014] <bakkot>
I don't want to ever be in a situation of being ready to merge a PR but needing to wait for esmeta devs to do things first; I'd thought we said that whenever that situation arose we'd just turn it off

[09:47:00.0220] <bakkot>
I wouldn't've wanted to land it under any other conditions

[10:44:21.0938] <jmdyck>
I think ljharb said that he could merge a PR despite a failing check, so you wouldn't even have to disable enforcement.

