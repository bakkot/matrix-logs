2022-12-04
[09:16:52.0288] <bakkot>
ljharb: https://github.com/tc39/ecma262/pull/2819 should be ready to go - it's shipping in Chrome and FF, and that's all we were waiting for. that's the "Normative: avoid mostly-redundant await in async `yield*`" PR which doesn't load because dependabot backreferences broke it. branch is `async-generator-yield-await-2`

[09:18:59.0613] <bakkot>
firefox bug is https://github.com/mozilla/gecko-dev/commit/fd2dc3acb62f1e19a306031536a99a08b5234347, v8 bug is https://bugs.chromium.org/p/v8/issues/detail?id=13275

[13:41:34.0053] <ljharb>
should michael or shu review it first?


2022-12-05
[09:30:42.0241] <Michael Ficarra>
I just keep getting unicorns trying to load that PR

[09:31:39.0011] <Michael Ficarra>
oh I see Kevin mentioned the branch name

[09:31:50.0927] <Michael Ficarra>
I will check it out soon


2022-12-06
[16:22:39.0024] <Michael Ficarra>
bakkot: ljharb #2819 LGTM


2022-12-10
[21:56:36.0849] <ljharb>
can editors confirm https://github.com/tc39/ecma262/pull/2969 should be landed, given jmdyck's last comment?


2022-12-13
[10:07:22.0128] <ljharb>
ping on ^


2022-12-14
[09:25:01.0196] <ryzokuken>
Can someone unmute Rob Palmer here?

[09:26:13.0934] <ryzokuken>
Regarding https://github.com/tc39/how-we-work/pull/119

[09:26:25.0337] <ryzokuken>
> I think the Editors should make the call on merging any changes to spec conventions. 

[14:30:39.0347] <Michael Ficarra>
I said many times in that thread, it's not editorial

[14:47:17.0767] <bakkot>
ryzokuken: The editors don't consider documenting normative conventions to be within our purview. Normative decisions have always been up to the committee as a whole. We're happy to review anything strictly editorial, and we will at some point document editorial spec conventions, but that PR as it stands only contains a single item, which is normative rather than editorial.

[14:47:40.0773] <bakkot>
normative "spec conventions" and editorial "spec conventions" are very different beasts

[14:48:04.0694] <bakkot>
cc Rob Palmer ^


2022-12-15
[23:38:50.0646] <ljharb>
when the spec says "is an AsyncGenerator" (which isn't dfn-ed to anywhere), i assume that should link to "An AsyncGenerator is an instance of an async generator function and conforms to both the AsyncIterator and AsyncIterable interfaces." - which means `x instanceof %AsyncGeneratorFunction%` as well as having a specific list of callable properties?

[07:50:53.0825] <bakkot>
ljharb: does the spec say "is an AsyncGenerator"? I don't see a use of that in the spec

[07:51:47.0719] <ljharb>
the assertion in AsyncGeneratorStart on the generator argument

[07:52:01.0454] <bakkot>
ah, ok

[07:52:21.0913] <bakkot>
generally speaking `(an X)` means something like "is produced by the AO which produces Xs"

[07:52:35.0454] <ljharb>
which is?

[07:53:05.0293] <bakkot>
in this case, CreateAsyncIteratorFromClosure or EvaluateAsyncGeneratorBody, I guess?

[07:53:05.0978] <ljharb>
(that’s a pretty vague definition so I’d hope we could strive for something more precise anywsys)

[07:54:47.0955] <ljharb>
ok cool, so basically it’s “has the 4 internal slots that CreateAsyncIteratorFromClosure adds”, i can work with that


2022-12-20
[14:49:55.0515] <jmdyck>
Re https://github.com/tc39/ecma262/pull/2972#issuecomment-1352433446, I'm okay to proceed on the basis of Michael Ficarra's preferences, I'd just want to know that the other editors agree before I start dismantling stuff. 


2022-12-30
[04:55:56.0366] <Rob Palmer>
Hello Editors, in your next get together, please could you discuss your intentions for the next year in terms of whether there will be any people changes and consequentially any need for a Editor election. By default I will assume you intend to continue in the role indefinitely and therefore no action is needed.

