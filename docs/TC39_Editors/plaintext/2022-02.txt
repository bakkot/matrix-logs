2022-02-03
[16:41:30.0101] <shu>
in the RegExp section, is "character" the same as a code point?

[16:49:26.0425] <jmdyck>
No, it's sort of a union of code point and code unit.

[16:49:57.0933] <shu>
not sure i understand

[16:50:29.0903] <shu>
oh i see, depending on `u` mode?

[16:50:37.0828] <jmdyck>
yeah.

[16:50:45.0457] <jmdyck>
defn is in https://tc39.es/ecma262/#sec-pattern-semantics, 2nd para

[16:52:53.0050] <shu>
thanks

[16:53:15.0125] <jmdyck>
no problem

[15:37:21.0330] <shu>
ljharb: what are your thoughts on moving long-time inactive proposals to a separate category in https://github.com/tc39/proposals?

[15:47:27.0254] <ljharb>
what sort of category?

[15:47:43.0121] <ljharb>
it seems weird to categorize things outside of the process doc

[15:50:15.0299] <ljharb>
what i'd really like to see is inactive proposals moving to "inactive", but that requires the champions to do that, or plenary to decree it

[15:51:08.0615] <shu>
i was thinking "inactive" as the category, yes

[15:51:15.0442] <shu>
i wasn't aware that required consensus

[15:51:22.0560] <ljharb>
there's already an entire inactive.md file for inactive proposals

[15:51:29.0870] <ljharb>
it's that it's up to the champions, or consensus

[15:51:37.0332] <ljharb>
what'd you have in mind to be inactive?

[15:52:03.0813] <shu>
function.sent, for one

[15:53:20.0185] <shu>
maybe we should have a triage agenda item annually or something

[15:53:28.0779] <bakkot>
ljharb: if you have better alternative wording than "a Completion Record normally containing an X", let us know? Michael and I do not have something we like better than that

[15:53:37.0381] <shu>
where we dedicate 30 minutes asking champions if they still plan to pursue a particular proposal

[15:53:49.0714] <ljharb>
shu: i already tried to ask plenary to make function.sent inactive, and hax said he'd champion it

[15:53:58.0728] <ljharb>
anything else?

[15:54:06.0986] <shu>
fair enough

[15:54:13.0684] <shu>
someone should take over hashbang and ask stage 4

[15:54:16.0597] <shu>
those were the two

[15:54:18.0779] <ljharb>
bakkot: i mean, i was thinking `Foo (a, b): NormalCompletion(X)` in the header

[15:54:36.0278] <ljharb>
shu: i'm not sure why bradley doesn't do that tbh. it's probably worth asking him directly

[15:54:44.0822] <shu>
bradley is no longer in TC39, is probably why

[15:54:55.0651] <shu>
switched jobs and the new job isn't in Ecma afaik

[15:54:58.0712] <ljharb>
oh, he could easily be via the node project in OpenJS

[15:55:11.0297] <ljharb>
but you're right, he probably won't make the time

[15:56:17.0750] <bakkot>
`NormalCompletion(X)` means it returns a normal completion

[15:56:20.0121] <bakkot>
which is not true

[15:56:29.0713] <bakkot>
it might return an abrupt completion, but if it returns normally, then the type in the completion is X

[15:56:33.0865] <bakkot>
 * it might return an abrupt completion, but if it returns normally, then the type in the completion is X

[15:58:36.0053] <ljharb>
ah, hm

[15:59:55.0010] <bakkot>
> <@shuyuguo:matrix.org> function.sent, for one

I think Hax actually wanted to pick that one up, IIRC?

[15:59:59.0085] <ljharb>
he did


2022-02-04
[16:00:18.0152] <ljharb>
bakkot: `Foo (a, b): ThrowCompletion | NormalCompletion(x)`?

[16:01:27.0123] <bakkot>
it might be return or break also, sometimes

[16:01:45.0485] <bakkot>
Also we don't use the `|` notation currently, we just say "or"

[16:01:53.0766] <ljharb>
sure, "or" then

[16:01:55.0758] <bakkot>
so some form of prose would be ideal

[16:01:58.0949] <ljharb>
hm

[16:02:09.0508] <ljharb>
but like, "normally containing X" doesn't cover all the alternatives either

[16:02:31.0666] <ljharb>
but it sounds like what you want is "a completion of type normal, containing X, or a completion of another type"? (that isn't a real suggestion, too wordy)

[16:02:40.0057] <bakkot>
that is what it means, yeah

[16:02:40.0581] <ljharb>
 * but it sounds like what you want is "a completion of type normal, containing X, or a completion of another type"? (that isn't a real suggestion, too wordy)

[16:02:48.0136] <bakkot>
that's how I read "normally containing X"

[16:03:01.0783] <ljharb>
to me "normally" implies "but sometimes it doesn't"

[16:03:05.0101] <bakkot>
like, in the normal case, it contains an X; in the non-normal case, all we are saying is that it is a completion record

[16:03:12.0315] <bakkot>
right, sometimes it doesn't

[16:03:15.0038] <ljharb>
lol

[16:03:16.0582] <bakkot>
sometimes it's abrupt rather than normal

[16:03:19.0797] <ljharb>
but i mean it doesn't speak to the [[Type]]

[16:03:32.0991] <ljharb>
the enum value "normal" in there is not connected to the english word "normally" for me

[16:03:43.0390] <bakkot>
they're... the same word?

[16:03:51.0941] <ljharb>
lol i know, but conceptually it reads weird to me

[16:03:56.0211] <bakkot>
fair

[16:04:01.0955] <bakkot>
I have no better alternative though

[16:04:16.0651] <ljharb>
let me think about it, obv if i can't come up with a workable alternative then there's no reason to block on that

[16:04:27.0470] <bakkot>
âˆš

[16:08:21.0961] <Michael Ficarra>
"an abrupt completion or a normal completion containing X" works

[16:08:32.0358] <Michael Ficarra>
allows us to refine it in other ways as well

[16:08:50.0135] <Michael Ficarra>
we type some AOs as "a throw completion" or "an abrupt completion" already anyway

[16:09:01.0978] <bakkot>
that's pretty wordy still...

[16:09:09.0888] <Michael Ficarra>
it's a little bit of work to change to that, but nothing unmanageable

[16:09:21.0481] <Michael Ficarra>
it's a little wordy, but it's a union

[16:09:28.0205] <Michael Ficarra>
what do you expect

[16:11:57.0284] <bakkot>
i expect an alias for the union which is shorter :P

[16:12:02.0407] <bakkot>
like "a completion record normally containing"

[16:12:58.0116] <Michael Ficarra>
I'm gonna stick with that for now

[16:14:11.0112] <ljharb>
i still like `Foo (a, b): ThrowCompletion | NormalCompletion(x)`, and we can make those AOs for break/continue/return if we need them

