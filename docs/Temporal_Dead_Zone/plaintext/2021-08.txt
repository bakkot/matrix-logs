2021-08-01
[12:02:55.0380] <jschoi>
It took me a few minutes to figure out that ‚Äúpreso time‚Äù means ‚Äúpresentation time‚Äù.

[12:03:00.0623] <jschoi>
 * It took me a few minutes to figure out that ‚Äúpreso time‚Äù means ‚Äúpresentation time‚Äù.


2021-08-03
[17:43:43.0133] <bakkot>
edge cases for localeCompare: https://twitter.com/dylanbeattie/status/1291442504265605120

[17:44:00.0657] <bakkot>
 * edge cases for localeCompare: https://twitter.com/dylanbeattie/status/1291442504265605120

[17:44:10.0526] <bakkot>
(or Intl.Collator or whatever)

[13:17:33.0819] <tabatkins>
anyway "JS" is prounounced "jiss"

[13:17:44.0382] <tabatkins>
that is definitely an *un*voiced s btw

[13:18:04.0000] <tabatkins>
also CSS is "seh-siss"

[13:24:27.0470] <tabatkins>
HTML is "heh-tumul" (like "tumult" without the final t)

[13:25:18.0754] <tabatkins>
all syllable-leading "g"s are pronounced as a y, so gif is "yiff". "github" is "yi-thoob"

[15:06:13.0724] <rkirsling>
> <@tabatkins:matrix.org> anyway "JS" is prounounced "jiss"

awwww JSsss

[15:06:38.0363] <rkirsling>
feels like a meme waiting to be made :D

[16:21:23.0068] <shu>
that is pretty cursed

[16:21:27.0633] <shu>
are you really going to start saying it jiss


2021-08-04
[01:11:32.0965] <rkirsling>
problematic given that JIS is a thing; on the other hand, it would open the door for Shift AST to call itself "Shift-JS" as a pun

[01:12:22.0373] <littledan>
is Shift JIS still a thing? I was hoping it had somehow faded away

[01:13:31.0566] <rkirsling>
lol admittedly (and thankfully) I've almost never encountered it since Unicode became widespread

[01:14:32.0196] <littledan>
BTW if you need to decode/encode JIS, then you can use my implementation in Factor https://github.com/factor/factor/blob/master/basis/io/encodings/shift-jis/shift-jis.factor

[01:14:45.0707] <littledan>
 * BTW if you need to decode/encode JIS, then you can use my implementation in Factor https://github.com/factor/factor/blob/master/basis/io/encodings/shift-jis/shift-jis.factor

[01:14:46.0749] <rkirsling>
I assumed the organization itself was still relevant, but maybe not so much in the computing space? ü§î

[01:15:02.0187] <rkirsling>
hahah that's awesome

[08:20:00.0457] <shu>
the JIS logo is pretty cool though

[08:20:07.0728] <shu>
better than ours imo

[08:20:34.0958] <shu>
the vertical, RTL one

[08:20:48.0324] <shu>
i see some horizontal one, i don't know what nonsense that is, maybe an updated one

[09:41:13.0831] <bakkot>
shift-jis is still in widespread use in japan, alas

[09:41:25.0923] <bakkot>
not dominant but not gone

[09:57:41.0103] <littledan>
bakkot: Do they tend to use the Microsoft codepage or the standard subset?

[10:10:47.0118] <bakkot>
littledan: that I do not know offhand

[10:11:03.0076] <bakkot>
the extent of my knowledge is pretty much "this comes up enough that I have to deal with it"

[10:11:50.0032] <littledan>
well, you can choose either in Factor

[11:21:59.0044] <TabAtkins>
I think Henri Sivonen is probably the person with the most knowledge about extant Shift-JIS usage (to his sadness)

[11:36:39.0147] <bakkot>
I see that chrome is trying to remove `confirm` from the web, breaking ~everyone

[11:36:41.0512] <bakkot>
good times, good times

[11:37:57.0654] <Jack Works>
Lol

[11:41:13.0684] <bakkot>
apparently chrome's official policy is "breaking changes happen often on the web, and as a developer it's good practice to test against early release channels of major browsers to learn about any compatibility issues upfront", which is news to me

[11:41:20.0400] <bakkot>
I have some breaking changes I would like to make...

[11:45:34.0869] <nicolo-ribaudo>
> <@bakkot:matrix.org> I have some breaking changes I would like to make...

`typeof null === "null"` is coming ü•≥

[11:45:58.0666] <shu>
bakkot: did someone really say that? 

[11:46:16.0086] <bakkot>
shu: https://twitter.com/estark37/status/1422694856544059396

[11:48:18.0795] <shu>
the actual doc she links in the response is the official policy

[11:48:29.0861] <shu>
i wouldn't personally summarize that as "breaking changes happen often on the web"...

[11:48:58.0377] <littledan>
Time to rename globalThis?

[11:49:21.0150] <shu>
fix the override mistake!

[11:50:09.0216] <bakkot>
rm -rf B.3.3

[11:50:58.0793] <Jack Works>
Let's fix Array.sort!

[11:57:20.0063] <shu>
i mean when was the last time we tried to remove B.3.3

[11:57:25.0119] <shu>
maybe it's okay now

[14:31:52.0106] <littledan>
Let's just make function declarations act like const variable declarations, with tdz and all

[14:32:09.0529] <littledan>
That would be the comprehensive fix to B.3.3


2021-08-05
[11:32:30.0548] <shu>
did y'all see https://bugs.chromium.org/p/chromium/issues/detail?id=1199345

[11:32:33.0382] <shu>
lol


2021-08-06
[09:25:22.0426] <Aki>
$15,000 for -0. 

[12:59:26.0286] <ljharb>
clearly we need a ¬± operator

[13:51:08.0577] <rickbutton>
does anyone know if there are any stats on # of lines of JavaScript on the web, over time? I.E. by some metric of "on the web", how many lines of JS existed on "websites" in some year in the past. intentionally vague with the constraints, not looking for hard data

[16:36:10.0425] <Aki>
i don't think human beings can comprehend numbers that big


2021-08-07
[13:18:39.0243] <rkirsling>
"who would win: atoms in the universe vs. JS LoC on the web"

[13:19:02.0764] <rkirsling>
 * "who would win: atoms in the universe vs. JS LoC on the web"


2021-08-08
[13:37:44.0181] <ljharb>
isn't "number of atoms in the universe" actually not that big? there's more chess/go moves than that, etc :-p

[14:08:36.0727] <Ashley Claymore>
I see your ‚Äúnumber of chess moves‚Äù and raise you TREE(3)


2021-08-09
[00:05:46.0437] <Rob Palmer>
Contribution opportunity: Wikipedia talks about the use of # in many programming languages with one notable exception.  https://en.m.wikipedia.org/wiki/Number_sign#Computing

[13:47:14.0905] <TabAtkins>
Well, we don't have a meaning for `#` *yet*

[13:54:35.0838] <nicolo-ribaudo>
`class Are { #you; #sure() {} }`?

[13:55:49.0788] <nicolo-ribaudo>
Oh no, it's ES2022

[13:59:05.0344] <littledan>
/me doesn't have any tattoos but is seriously considering getting a tattoo of #. Maybe if R&T gets to Stage 3...

[13:59:17.0145] <littledan>
the only downside would be that people would think it's a social media thing

[13:59:41.0171] <nicolo-ribaudo>
_Why do you have an hashtag on your arm?_

[14:00:27.0426] <littledan>
I've definitely had conversations with people about private fields where they call it a hashtag and I just roll with that term

[14:00:42.0122] <littledan>
hashtag-you, hashtag-sure

[14:21:35.0110] <Ashley Claymore>
I always called it a pound sign when I was a kid. None of this hash malarkey

[14:25:31.0910] <ptomato>
in my head, I pronounce it as "number". outside of my head, I avoid saying it üòõ

[16:31:01.0700] <rkirsling>
it makes me sad when people refer to the _symbol_ as a hashtag

[16:31:04.0364] <rkirsling>
 * it makes me sad when people refer to the _symbol_ as a hashtag

[16:31:16.0411] <rkirsling>
it's only a hashtag when you use a hash as a tag...

[16:36:17.0676] <rkirsling>
(20 years ago, I probably would've called it "pound" too, but I never understood *why*, since no one uses it for any sort of "pound" meaning and it makes ¬£ hard to refer to...)

[16:44:00.0717] <TabAtkins>
#octothorpeFTW

[16:52:37.0836] <rkirsling>
it is very fun to say/type

[16:52:40.0976] <rkirsling>
 * it is very fun to say/type


2021-08-10
[17:57:02.0947] <Aki>
> <@rkirsling:matrix.org> (20 years ago, I probably would've called it "pound" too, but I never understood *why*, since no one uses it for any sort of "pound" meaning and it makes ¬£ hard to refer to...)

people definitely used it to denote weight. "2# apples" or whatever would show up on grocery shopping lists from my mom

[18:10:56.0132] <rkirsling>
wow

[18:11:21.0391] <rkirsling>
I haven't seen it myself but that's super interesting

[20:09:17.0309] <Richard Gibson>
"taghash" üòà

[20:32:38.0091] <Ashley Claymore>
Or is it an ‚Äòoctothorpe‚Äô‚Ä¶ https://www.todayifoundout.com/index.php/2011/06/the-symbol-on-the-pound-or-number-key-is-also-called-an-octothorpe/


[21:07:20.0828] <bakkot>
petition to make `octothorpe` a keyword

[21:07:31.0273] <bakkot>
semantics tbd

[21:08:05.0732] <ryzokuken>
`class Hello { octothorpe field; }`

[21:08:20.0973] <ryzokuken>
 * `class Hello { octothorpe field; }`

[22:46:14.0791] <bakkot>
in fact, petition to make all names of punctuators used in the language be keywords

[22:46:45.0457] <bakkot>
I want to write code that looks like `let x equals f lparen object dot property rparen semicolon`

[22:47:29.0769] <bakkot>
we can invent names for the multi-character ones

[22:47:41.0884] <bakkot>
`arrow` is easy

[22:48:24.0663] <bakkot>
`&` is `ampersand`, obviously, so I guess `&&` is I guess `ampersand` or possibly `ampamp` for ergonomics

[22:50:06.0386] <nicolo-ribaudo>
`&&` is `andand` in my head

[23:03:55.0297] <rkirsling>
|| can be pipipe

[00:10:19.0326] <Ashley Claymore>
> <@nicolo-ribaudo:matrix.org> `&&` is `andand` in my head

Much cleaner than ‚Äòandanotherampersand‚Äô

[00:49:50.0378] <ryzokuken>
I personally like to call `&&` "and" and `&` "binand" (and similarly for `|`)

[01:23:06.0002] <rkirsling>
> <@usharma:igalia.com> I personally like to call `&&` "and" and `&` "binand" (and similarly for `|`)

that's much too sensible for this channel ;)

[09:48:43.0872] <Aki>
"off topic, take it to #tc39-delegates:matrix.org "

[15:10:55.0201] <shu>
the US infra bill makes me think that perhaps we should advance many more proposals to whatever stage and say they'll be fixed up with reconciliation proposals

[15:15:45.0249] <TabAtkins>
i can get behind this


2021-08-12
[19:41:00.0615] <jschoi>
https://xkcd.com/2501/


2021-08-21
[15:34:54.0505] <devsnek>
good to know at least one engine is exercising the native function matcher test https://gc.gy/97290261.png


2021-08-25
[15:43:58.0925] <shu>
i wish we dropped more polite but sick burns like this in technical discussions: https://twitter.com/Portfoliokey/status/1430658944024911872


2021-08-31
[06:58:20.0430] <bakkot>
today I am grateful for my 32 100W-equivalent LED lightbulbs immediately above my desk

[06:58:32.0929] <bakkot>
they don't exactly cause me to be awake, but they sure do help

[07:06:48.0308] <shu>
ah shit

[07:06:49.0944] <shu>
4 days of EU

[07:07:41.0099] <ryzokuken>
/me feels equally sad about US time meetings üòõ 

[07:09:09.0766] <shu>
indeed

[07:15:51.0736] <TabAtkins>
At least back in the day everyone could be jetlagged in the appropriate time zone at once :(

[07:19:01.0773] <TabAtkins>
once again Shu is fired for these slides

[07:19:30.0511] <ryzokuken>
hard to beat him at this game at this point

[07:19:49.0174] <leobalter>
"this should be quick" usually precedes very long items.

[07:19:55.0738] <ryzokuken>
> <@tabatkins:matrix.org> At least back in the day everyone could be jetlagged in the appropriate time zone at once :(

I tried to recreate the experience by being jetlagged in good measure üòõ 

[07:19:56.0890] <leobalter>
but I believe this one should be quick

[07:21:03.0264] <ryzokuken>
"excuse me but the language designers have code review: your code sucks"

[07:24:04.0056] <Aki>
no, not sucks!

[07:24:19.0038] <Aki>
but rather "your code is in conflict with the development of the language itself"

[07:24:29.0761] <Aki>
"couldja not"

[07:26:21.0964] <ryzokuken>
I wish Jitsi had more fields than just the "name"

[07:26:37.0528] <ryzokuken>
we need the acronym, pronouns, employer, everything!

[07:29:44.0861] <shu>
Michael Ficarra: moving it to TDZ: `Object.at(idx, propertyName)`, where `idx` has to be negative and means "how many hops up the prototype chain"

[07:31:25.0608] <bakkot>
`Object.super` for that, surely

[07:31:35.0523] <bakkot>
though I guess that would return the property, not tell you if it exists

[07:31:40.0691] <TabAtkins>
ryzokuken: Yeah, ugh, I do `Firstname (pronouns) Lastname (Employer)` to give them in order of importance.

[07:32:03.0266] <ryzokuken>
and the acronym at the end?

[07:32:23.0294] <TabAtkins>
oh i forgot about acronym. for me it's my first name so i didn't have to consider it

[07:32:27.0994] <TabAtkins>
but that should be somewhere up front too

[07:33:55.0768] <TabAtkins>
I appreciate Big Oval

[07:34:08.0782] <shu>
this is a great slide

[07:34:12.0289] <TabAtkins>
proposal for BigOval type

[07:34:24.0180] <TabAtkins>
is this a map of the british isles

[07:34:55.0338] <ryzokuken>
tupple or two-ple

[07:35:01.0365] <ryzokuken>
is there any consensus on that?

[07:35:29.0160] <TabAtkins>
there is not, tho @ljharb did a twitter poll on it; i forget the results

[07:35:51.0527] <ljharb>
https://twitter.com/ljharb/status/1268995062479765505

[07:36:06.0178] <ryzokuken>
is it one of those things where Americans and Brits disagree or is it more complicated?

[07:36:10.0093] <ljharb>
two-ple narrowly has the lead there, not enough for me to confidently declare a winner

[07:38:47.0993] <ljharb>
 * i hope the transcription bot does fun things with "has holes" (i heard "assholes", but just realized this comment can be misinterpreted, so i'm going to delete it)

[07:41:47.0739] <rbuckton>
I've been pronouncing it TUH-ple, but may have been influenced by my peers in the TS team. 

[07:41:54.0992] <devsnek>
if you pronounce javascript with a hard j you are *wrong*

[07:42:44.0356] <ryzokuken>
devsnek: you joke, but there's a nontrivial amount of people where I am right now who do call it yavascript

[07:42:50.0294] <rbuckton>
I thought it was pronounced with a Y sound.

[07:43:04.0232] <devsnek>
havascript and yavascript are acceptable 

[07:43:08.0920] <rbuckton>
ryzokuken: beat me to that by a few seconds heh

[07:43:29.0638] <rbuckton>
My posts getting sniped both here and on twitter :)

[07:43:34.0403] <rbuckton>
I need to type faster.

[07:43:51.0440] <ryzokuken>
or just drink a lot of coffee üòõ 

[07:44:06.0089] <devsnek>
the agenda looks very short this meeting

[07:44:11.0054] <ryzokuken>
is someone at an arcade?

[07:44:31.0947] <TabAtkins>
they *were* but suddenly left

[07:44:44.0401] <Robin Ricard>
sounded like mario kart

[07:44:51.0192] <ryzokuken>
I mean, good for them

[07:45:09.0581] <Robin Ricard>
I definitely enjoy the occasional mario kart

[07:45:34.0297] <ryzokuken>
I don't like to play with friends but playing with strangers is fun

[07:45:59.0012] <ryzokuken>
that blue shell can destroy lifelong relationships, it's just not worth the risk

[07:46:04.0522] <devsnek>
what if i told you mario kart was written in js

[07:47:34.0620] <ryzokuken>
it still is? then it should be a part of the committee onboarding programme

[07:47:44.0339] <ryzokuken>
 * it still is? then it should be a part of the committee onboarding programme

[07:48:19.0602] <ljharb>
can be !== was

[07:50:54.0046] <ryzokuken>
there is a worm in my berries üò≠

[07:52:14.0823] <ljharb>
that sweet, sweet organic produce

[07:52:42.0577] <devsnek>
burn it and sue

[07:53:08.0617] <ryzokuken>
this is Russia, I doubt I can sue them for a worm üòì

[07:53:14.0909] <ryzokuken>
 * this is Russia, I doubt I can sue them for a worm üòì

[07:54:09.0428] <ryzokuken>
I'm starting to hate fruits in general

[07:54:11.0221] <devsnek>
burn it and get one of the oligarchs to threaten them

[07:54:34.0126] <ryzokuken>
/me starting contacting the mafia

[07:55:18.0932] <devsnek>
nice

[07:55:40.0871] <bakkot>
i just bought a blender, so my fruit consumption has increased dramatically

[07:56:07.0639] <ryzokuken>
but what about the worms!?

[07:56:14.0432] <devsnek>
sounds like a scam, you can get blender for free online

[07:56:43.0325] <ryzokuken>
w/ the source code, if that means anything üòõ 

[07:57:35.0085] <rbuckton>
I wish Element let me show two channels at once. 

[07:58:18.0157] <ljharb>
does anything on any network let you do that? O.o

[07:58:36.0395] <rbuckton>
mIRC let you do that, heh.

[07:58:43.0562] <ryzokuken>
> <@rbuckton:matrix.org> I wish Element let me show two channels at once.

the spiritual successor of Element already has that feature

[07:58:51.0274] <ljharb>
guess i never used that feature back when i used windows in days of yore

[07:58:54.0135] <rbuckton>
> <@usharma:igalia.com> the spiritual successor of Element already has that feature

Which is?

[07:59:04.0491] <ryzokuken>
hydrogen.element.io

[07:59:23.0696] <ryzokuken>
it lacks some other features, but multiple accounts and many channels at once are both major life savers

[07:59:31.0419] <ljharb>
but hydrogen is the first element

[07:59:37.0459] <ljharb>
shouldn't this be helium

[07:59:42.0555] <ryzokuken>
haha

[07:59:47.0059] <rbuckton>
web based only or is there a desktop client?

[07:59:55.0939] <ryzokuken>
I think for now yes

[07:59:59.0640] <ljharb>
or actually it should be lithium, since traits move down the periodic table columns

[08:00:02.0268] <devsnek>
anything can be a desktop client with electron

[08:00:07.0063] <ljharb>
 * or actually it should be lithium, since traits move down the periodic table columns

[08:00:12.0007] <ryzokuken>
maybe there's an electron wrapped version somewhere but dunno about it

[08:00:24.0039] <ryzokuken>
I mean, that's what electron desktop is anyway

[08:00:32.0673] <rbuckton>
be careful trying to add electrons to hydrogen

[08:00:37.0703] <ryzokuken>
haha

[08:00:41.0230] <Michael Ficarra>
surely you all mean PWAs, right?

[08:00:59.0814] <devsnek>
hydrogen doesn't try to validate my security the way normal element does

[08:01:06.0172] <devsnek>
is this insecure or something

[08:01:15.0999] <TabAtkins>
Aki: You're starting to get robot overtones

[08:01:26.0265] <ryzokuken>
yeah

[08:01:29.0919] <ryzokuken>
was going to say the same

[08:04:47.0597] <Aki>
!@#$%^&( brand new mic

[08:06:04.0931] <rbuckton>
I've been using a new Blue Yeti for a few months and constantly have issues with disconnections (I think the usb cable is faulty in my case).

[08:06:44.0706] <ljharb>
my airpods pro haven't given me trouble

[08:07:31.0912] <Aki>
rbuckton: that's what my first brand new one was doing. then then sent me a warranty replacement (new in retail box, not refurb) and now i have the weird robot problem

[08:11:14.0925] <rbuckton>
> <@akirose:matrix.org> rbuckton: that's what my first brand new one was doing. then then sent me a warranty replacement (new in retail box, not refurb) and now i have the weird robot problem

USB bandwidth issue maybe? The other likely cause of my own mic troubles is I have it plugged into an older USB hub because my PC didn't have enough USB ports (so not using a USB 3/3.1 connection). Sounded fine after the mic reconnected though.

[08:12:08.0296] <Aki>
I have a TB3 dock it's plugged into, I would _expect_ that would be enough but fuck USB is such a mess

[08:12:30.0827] <Aki>
my spouse has dealt extensively with the USB standard(s) and it is Bad‚Ñ¢

[08:13:02.0825] <shu>
ljharb: my airpod pros have started "whistling"

[08:13:19.0165] <shu>
maybe the little port it listens on for noise cancelling is dirty or something, but it's really annoying

[08:13:30.0351] <rbuckton>
The other (unrelated) problem I'm having is the shock mount I bought has an oval shaped connector so I can't rotate the mic to be parallel to my mic stand. 

[08:14:19.0320] <Aki>
oh noooooooo. My spouse got me the fancy kit from Blue that came with arm and shock mount (but not pop filter for some reason?)

[08:16:41.0986] <devsnek>
i have a yeti with a desk stand

[08:16:43.0713] <devsnek>
it works good

[08:17:17.0231] <rbuckton>
I should have. I bought an Auphonix shock mount and pop filter explicitly marketed for the Blue Yeti (and recommended by Blue as well). Now all the weight is to one side so the mic puts strain on the stand.

[08:24:11.0422] <Justin Ridgewell>
Too much suspense‚Ä¶

[08:24:42.0191] <rbuckton>
Trying not to React to that.

[08:25:41.0170] <ryzokuken>
/me banishes a function to the shadow realm

[08:25:44.0808] <bakkot>
ShadowRealm also has the advantage of sounding badass

[08:26:05.0755] <jschoi>
Yes, ShadowRealm would spawn a ton of memes from people who grew up in the 90s/00s.

[08:26:15.0561] <ryzokuken>
Duel Masters üòõ 

[08:26:19.0213] <bakkot>
I still like "Bubble" though

[08:26:23.0856] <ljharb>
what evil lurks in the hearts of realms? the shadow knows

[08:26:46.0797] <jschoi>
Background for others: There‚Äôs a Japanese anime franchise called Yu-Gi-Oh! in which that phrase ‚Äúbanish to the Shadow Realm‚Äù is important. Well, kind of. In one famous translation as a bowdlerization of ‚Äúkill‚Äù for the children.

[08:26:49.0494] <ryzokuken>
Shadow Realm: The Land Forsaken by the Creator

[08:27:13.0799] <ryzokuken>
jschoi: oops, I confused it with Duel Masters... Yes! Yu-Gi-Oh it is!

[08:27:19.0808] <jschoi>
* Background for others: There‚Äôs a Japanese anime franchise called Yu-Gi-Oh! in which that phrase ‚Äúbanish to the Shadow Realm‚Äù is important. Well, kind of. In one famous translation as a bowdlerization of ‚Äúkill‚Äù for the children.

[08:27:32.0991] <ryzokuken>
https://yugioh.fandom.com/wiki/Shadow_Realm

[08:27:51.0893] <ryzokuken>
> The Shadow Realm is alleged to be a place of suffering where people could be sent to

[08:27:55.0706] <ryzokuken>
sounds like it

[08:28:03.0391] <bterlson>
ShadowRealm is an evil realm, are we concerned about demons and other vile beasts?

[08:28:12.0590] <ryzokuken>
this but it's just javascript in general üèÉ

[08:28:29.0153] <ryzokuken>
no I think this is amazing, especially given this context

[08:28:35.0800] <ryzokuken>
you can banish evil code to the shadow realm!

[08:29:14.0565] <ljharb>
(yu-gi-oh is a bit before my time, so thanks for the context)

[08:29:36.0022] <devsnek>
https://metalgear.fandom.com/wiki/Shadow_Moses_Island

[08:30:12.0096] <devsnek>
i think we should call realms `Eval`s

[08:32:40.0498] <SoftwareChris>
_Shadow_ does feel namespace-y but... I was also unwilling to jump into the bikeshedding issue so I can't complain now

[08:32:44.0741] <rbuckton>
Can we have Shadow Realms periodically interrupted by ads for "Raid: Shadow Legends"?

[08:33:13.0021] <leobalter>
Compartments will be eventually  renamed to World of Warcraft

[08:33:14.0133] <devsnek>
Shadow.Realm

[08:33:16.0888] <devsnek>
uppercase R

[08:33:41.0162] <ryzokuken>
> <@rbuckton:matrix.org> Can we have Shadow Realms periodically interrupted by ads for "Raid: Shadow Legends"?

lmao

[08:33:55.0399] <shu>
sick

[08:33:57.0387] <devsnek>
HostShowBranding

[08:34:02.0011] <devsnek>
opens popup in browser

[08:34:03.0370] <Michael Ficarra>
> <@ljharb:matrix.org> (yu-gi-oh is a bit before my time, so thanks for the context)

>  producing an English-language version which aired in North America on Kids' WB! between September 29, 2001 and June 10, 2006
you're not THAT young!

[08:34:06.0961] <devsnek>
outputs ascii in node

[08:34:33.0629] <ryzokuken>
jQuery is WHAT

[08:34:45.0780] <ljharb>
Michael Ficarra: it's a little kid's show that first aired when i was 19

[08:34:47.0842] <Aki>
yeah that had me hyperventilating ljharb 

[08:34:57.0059] <Aki>
_after_ your time

[08:35:00.0370] <ryzokuken>
yeah, ljharb it might be _after_?

[08:35:04.0901] <ryzokuken>
It aired when I was little

[08:35:05.0953] <ljharb>
i only know the show exists because my partner's little brother was 7 years old and watched the show

[08:35:07.0017] <devsnek>
it first aired the day after my first birthday

[08:35:13.0060] <ljharb>
ohhh right

[08:35:15.0459] <ljharb>
AFTER my time, yes

[08:35:16.0120] <ljharb>
sorry

[08:35:20.0003] <Aki>
back to hyperventilating

[08:35:51.0414] <cjtenny>
> <@ljharb:matrix.org> AFTER my time, yes

or you're secretly 19 now and have been fooling us

[08:36:06.0332] <devsnek>
"functions" is number 5 on this chart

[08:36:07.0363] <Michael Ficarra>
hyperventilating but for different reasons this time

[08:36:13.0297] <devsnek>
 * "functions" is number 5 on this chart

[08:36:49.0353] <devsnek>
do y'all think we should add functions

[08:38:46.0098] <devsnek>
i usually do `await fetch().then((r) => r.json())`

[08:39:10.0577] <ryzokuken>
functions? what's that?

[08:39:23.0076] <yulia>
javascript needs functions 

[08:39:36.0001] <devsnek>
i feel goto is good enough for any use case

[08:39:38.0730] <yulia>
gotta implement them asap

[08:39:43.0135] <devsnek>
more expressive even

[08:39:52.0575] <ryzokuken>
this sounds like a conspiracy by the functional cabal

[08:40:06.0937] <bakkot>
we need more functions!

[08:40:07.0007] <cjtenny>
TIL matrix has (numeric, of course) 'power levels'. between this and the shadow realm, I can't üòÇ

[08:40:22.0239] <ptomato>
I think for functions we should take inspiration from DEF FN in GW-BASIC. that was a really expressive way to do it

[08:40:23.0746] <cjtenny>
 * TIL matrix has (numeric, of course) 'power levels'. between this and the shadow realm, I can't üòÇ

[08:40:26.0899] <devsnek>
can matrix power levels be over 9000

[08:40:27.0448] <ryzokuken>
how dare you, we need more prototypes and nothing else

[08:40:37.0970] <ryzokuken>
lol

[08:40:40.0466] <ptomato>
all function names must start with FN and all bodies must be one expresssion

[08:40:41.0569] <cjtenny>
only aki can determine that

[08:40:41.0949] <ljharb>
"cons piracy" sounds like a Lisp crime

[08:41:01.0196] <devsnek>
the real question is if we should allow a function to be activated more than once at the same time

[08:41:04.0109] <yulia>
funtional programming yall

[08:41:07.0261] <yulia>
its the next thing

[08:41:07.0696] <Aki>
üí™

[08:41:15.0353] <cjtenny>
> <@ljharb:matrix.org> "cons piracy" sounds like a Lisp crime

wow how have I never thought of this, ljharb you're a genius

[08:41:38.0881] <devsnek>
i want a version of lisp where the operators aren't named "car" and "cdr"

[08:42:21.0015] <cjtenny>
right, mass transit is more environmentally responsible. "bus" and "bdr" are available

[08:42:21.0951] <ryzokuken>
vegeta wins

[08:42:27.0357] <devsnek>
my fav language https://gc.gy/98518700-56cf-4164-baee-b41d906d8c78.png

[08:42:48.0154] <Tierney Cyren>
this looks like 100% of my code lmao

[08:43:02.0677] <davethegr8>
I'm in this image and I don't like it

[08:43:15.0808] <cjtenny>
this is fine üî•

[08:43:32.0142] <devsnek>
we should allow lexical variables to be redeclared

[08:43:33.0184] <devsnek>
like rust

[08:43:55.0513] <ryzokuken>
yeah, I was just about to say, all rust code is like this

[08:44:08.0728] <devsnek>
but without bad names

[08:44:11.0242] <devsnek>
because you can redeclare

[08:44:16.0559] <ryzokuken>
lol 

[08:44:18.0052] <ryzokuken>
yeah

[08:45:17.0061] <ryzokuken>
```rust
async fn main() -> Result<(), std::io::Error> {
    tide::log::start();
    let config = config::read_config();
    let jmap_config = config.jmap.clone();
    let host = jmap_config.host.unwrap_or_else(|| "127.0.0.1".to_string());
    let port = jmap_config.port.unwrap_or_else(|| 8080);
    let addr = format!("{}:{}", host, port);
    let mut app = tide::with_state(ServerState::new(config, addr.clone()));
    app.with(tide_http_auth::Authentication::new(
        tide_http_auth::BasicAuthScheme::default(),
    ));
    app.at("/").get(root);
    app.listen(&addr).await?;
    Ok(())
}
```

[08:45:34.0439] <devsnek>
we should use ∆¨ÃµÃ¨Ãä

[08:45:57.0667] <littledan>
`#`

[08:46:08.0781] <littledan>
 * `#`

[08:46:16.0160] <littledan>
all syntax should be `#`

[08:46:18.0187] <cjtenny>
> <@devsnek:matrix.org> we should use ∆¨ÃµÃ¨Ãä

the operator formerly known as

[08:46:43.0265] <davethegr8>
I propose ‚ÄΩ

[08:46:43.0330] <rbuckton>
Why does the queue seem like it should be in #TDZ?

[08:46:44.0572] <devsnek>
how about a magic variable like in kotlin

[08:46:45.0606] <ryzokuken>
littledan is a `#` maximalist

[08:46:49.0841] <devsnek>
`a() |> b(it)`

[08:46:54.0568] <cjtenny>
> <@dehrenberg:igalia.com> all syntax should be `#`

even comments!

[08:46:59.0791] <ljharb>
interrobang would be a wonderful operator (for something else)

[08:47:03.0358] <jschoi>
devsnek: ljharb is strongly against using identifiers. 

[08:47:04.0096] <shu>
agree with littledan, it already has different names and we can just use different names for its different uses

[08:47:05.0543] <ljharb>
 * interrobang would be a wonderful operator (for something else)

[08:47:13.0962] <littledan>
`#` indicates the semantic concept of encapsulation and functional programming

[08:47:15.0072] <bakkot>
just use `var`, you can redeclare `var`

[08:47:21.0071] <devsnek>
i like `% % %` because it parses unambiguously 

[08:47:58.0952] <littledan>
octothorpe-private, hashtag-record-and-tuple, number-sign-pipeline

[08:48:15.0061] <cjtenny>
pound-comment

[08:48:25.0619] <littledan>
yes we definitely need to add pound-comments to JS as well

[08:48:47.0162] <cjtenny>
first let's get unicode to introduce separate characters for octothorpe, hashtag, number sign, and pound sign

[08:48:53.0082] <cjtenny>
that'll help disambiguate

[08:48:53.0695] <devsnek>
i think it should work inside the body of the function, lexical scoping thx

[08:49:00.0693] <devsnek>
oops wrong channel

[08:49:27.0646] <ryzokuken>
petition to use the greek question mark instead

[08:51:38.0888] <Aki>
this is one of those things that's gonna show up in one of Leo's "this is valid javascript" tweets

[08:52:23.0816] <Tierney Cyren>
gonna put a |> %%% on a shirt

[08:52:33.0862] <devsnek>
make sure you have spaces in it

[08:52:40.0656] <sarahghp>
tattoo material really

[08:53:06.0312] <Tierney Cyren>
I feel like it'd be funnier if it was a tattoo without the spaces lmao

[08:54:18.0299] <bakkot>
littledan: we have `#!`, don't forget

[08:55:15.0645] <Aki>
did he just say "years and years ago" in regard to initial intro of the pipeline operator

[08:56:18.0751] <cjtenny>
we need to go back to shadow realms so I can make a 'screw the rules I have consensus' joke

[09:05:02.0858] <Jamie Kyle>
FYI: https://twitter.com/BenLesh/status/1432733601838338054?s=20

[09:05:26.0935] <bakkot>
Jamie Kyle: yes, many people have strong opinions about this

[09:05:37.0004] <bakkot>
and have been having them for years

[09:05:47.0990] <bakkot>
but many people have the opposite strong opinion

[09:05:49.0778] <bakkot>
(e.g. me)

[09:05:52.0678] <devsnek>
people who want the purely functional form are living in some weird fantasy land that i don't understand

[09:06:01.0826] <bakkot>
I'm impressed the champions managed to get consensus even among themselves

[09:06:04.0876] <Jamie Kyle>
Yeah, just noting the "TC39 is an ivory tower" bit

[09:06:33.0131] <bakkot>
the ivory tower part is especially funny, because that's usually the accusation leveled by the people who like hack style

[09:06:45.0390] <bakkot>
_against_ the people who like the functional style

[09:06:51.0070] <devsnek>
lol this guy does rxjs

[09:07:39.0026] <Jamie Kyle>
Ben has participated in TC39 before, I don't know in what capacity

[09:15:44.0157] <leobalter>
can we invite Rick Waldron to his channel?

[09:15:47.0570] <leobalter>
 * can we invite Rick Waldron to his channel?

[09:16:04.0815] <leobalter>
cc littledan ^^

[09:17:51.0266] <littledan>
of course, all delegates can attend

[09:18:19.0491] <devsnek>
i think this channel is just public to anyone

[09:18:26.0870] <littledan>
I've spent so much time talking with Ben and trying to give him space to contribute constructively to TC39...

[09:18:30.0961] <leobalter>
I cannot invite people to this room

[09:18:37.0468] <leobalter>
that's why I asked

[09:18:44.0686] <devsnek>
i think rick can just join it

[09:19:07.0570] <leobalter>
I don't really know how this thing works, ok? :)

[09:19:28.0938] <Rick Waldron>
> <@bitandbang:matrix.org> gonna put a |> %%% on a shirt

Please send me one. 

[09:19:37.0106] <leobalter>
Aki  Tierney Cyren I can eventually have some tattoos with "this is valid javascript"

[09:19:51.0675] <leobalter>
 * Aki  Tierney Cyren I can eventually have some tattoos with "this is valid javascript"

[09:20:55.0370] <TabAtkins>
don't think there's quite enough content there to make one of those "THEY HAVE PLAYED US FOR FOOLS" memes about it

[09:21:12.0868] <bakkot>
there is vastly more than enough content for that

[09:21:21.0636] <TabAtkins>
anyway, gonna regret responding to Ben but fucking hell is bugs me when people read the tea leaves for corporate conspiracies

[09:21:43.0004] <TabAtkins>
"Google was willing to pay for it" no Google is willing to pay me to do nearly whatever the fuck I want

[09:22:15.0769] <TabAtkins>
I *do* push things for Corporate Reasons sometimes! This isn't remotely one of them!

[09:22:40.0058] <devsnek>
you heard it here first sundar pichai and his rich investor cabal wants hack style

[09:23:02.0379] <leobalter>
`o--|> %%% <!--o`

[09:23:26.0388] <devsnek>
oh god

[09:23:53.0264] <devsnek>
leo wait that's not valid in modules

[09:24:15.0592] <bakkot>
devsnek: it is valid in modules, it just means a different thing

[09:24:39.0992] <devsnek>
uhhhh

[09:24:58.0575] <bakkot>
assuming `|>` is legal anyway

[09:25:00.0456] <devsnek>
`(o--|> %%%) < (!(--o))`

[09:25:01.0858] <leobalter>
:shrugs:

[09:25:32.0389] <TabAtkins>
oh god

[09:26:52.0731] <devsnek>
i wonder if v8 native syntax can survive this

[09:26:58.0810] <devsnek>
`% [no space here] Identifier`

[09:27:14.0065] <Rick Waldron>
> <@devsnek:matrix.org> `(o--|> %%%) < (!(--o))`

I'm feeling very pleased with myself for putting that "% % %" example on the queue lol

[09:27:20.0072] <devsnek>
lol

[09:28:00.0877] <Rick Waldron>
> <@devsnek:matrix.org> `% [no space here] Identifier`

Don't worry, they'll just redefine `$DONOTEVALUATE()` for those tests

[09:28:20.0730] <Justin Ridgewell>
> <@devsnek:matrix.org> `% [no space here] Identifier`

Babel says "Cannot combine v8intrinsic plugin and Hack-style pipes."


[09:28:26.0652] <devsnek>
lol

[09:28:34.0506] <Michael Ficarra>
bakkot: wait, it lexes differently inside a module? üò±

[09:30:12.0403] <devsnek>
modules don't have html comments

[09:30:25.0542] <Rick Waldron>
Rules, rules, rules. 

[09:30:56.0948] <devsnek>
anyone watched taskmaster?

[09:31:10.0739] <devsnek>
i discovered recently they uploaded all the episodes to yt

[09:31:13.0950] <bakkot>
Michael Ficarra: https://github.com/shapesecurity/shift-parser-js/blob/93df83a922018f7c9abed9f55ae0d352f1265843/src/tokenizer.js#L649

[09:31:13.0995] <devsnek>
ez binge 

[09:31:27.0832] <devsnek>
`moduleIsTheGoalSymbol` nice

[09:32:41.0718] <Rick Waldron>
TabAtkins: Ben is coming for you. I mean... this is just not true: https://twitter.com/BenLesh/status/1432742795710697481?s=20

[09:32:48.0385] <Michael Ficarra>
lol I probably wrote that code

[09:34:22.0242] <devsnek>
https://twitter.com/devsnek/status/1432743516682194950

[09:37:58.0908] <devsnek>
someone mentioned elixir pipelines which are indeed my fav but require every function in the entire language to have the exact same argument ordering

[09:44:25.0295] <TabAtkins>
I agree that, if we're just talking functions, Elixir pipelines are the best fit for JS. JS also puts the most important argument first, generally.

[09:45:40.0313] <TabAtkins>
(Funnily, "F#-style" is *actually* "insert head as last argument". It's just that F# is auto-curried, so it can *also* be thought of as "call RHS with LHS as sole arg". The difference, tho, is quite significant, and what finally pushed me all the way over to "F#-style is Bad Actually".)

[09:49:12.0687] <bakkot>
TabAtkins: I don't understand the distinction?

[09:50:20.0844] <TabAtkins>
The important distinction is that "insert as last argument" means you just define your function to take N argument, and you can either call it normally with N argument or call it in a pipeline with N-1 arguments. The function author doesn't need to decide ahead of time which calling syntax they think the user will choose.

[09:50:42.0998] <bakkot>
I did not realize that was the F# proposal

[09:50:45.0020] <Jamie Kyle>
How about ^^ as the token for pipelines instead of %. Then your code can look like smiling eyes and point up at the previous value:

```
aReallyHappyValue
  |> joy(^^)
```

[09:50:56.0438] <bakkot>
I thought the F# one was just "call the RHS with the LHS as its sole argument"

[09:51:09.0407] <TabAtkins>
Whereas "call the RHS with the LHS" *does* require this - if your function nominally takes N argument, you either write it to take N argument, or write it to take N-1 and return an unary function, and then the caller has to adapt their calling convention if it doesn't amtch

[09:51:17.0269] <ljharb>
Jamie Kyle: that assumes it won't be a one-line pipeline :-p

[09:51:44.0635] <Jamie Kyle>
Still smiling eyes, still happy

[09:51:50.0446] <devsnek>
sorry double xor is reserved for raising to the power of 3

[09:52:15.0575] <TabAtkins>
bakkot: Right, what I"m saying is that *in F#* the distinction between "call RHS with LHS" and "insert as last argument" doesn't matter. In JS it does, and the "F#-style" syntax was choosing the variant that's *worse* for JS (imo)

[09:54:35.0835] <bakkot>
devsnek: it's not raising to the power of three, it's https://en.wikipedia.org/wiki/Knuth%27s_up-arrow_notation

[09:54:49.0096] <devsnek>
no that's a separate unicode symbol

[09:55:00.0956] <devsnek>
which we should also support

[09:55:22.0263] <TabAtkins>
wait is there a tetration operator in unicode

[09:56:01.0607] <devsnek>
‚áà

[09:56:09.0311] <devsnek>
‚áÖ

[09:56:18.0407] <devsnek>
üòé

[09:56:39.0428] <jschoi>
Unicode has many things.

[10:11:45.0187] <devsnek>
does selinux use sedate

[10:18:05.0256] <ryzokuken>
> <@devsnek:matrix.org> does selinux use sedate

only one way to find out

[10:33:44.0907] <Michael Ficarra>
found this actual alt text in ECMA262 just now:
> An image of lots of boxes and arrows.

[10:33:48.0256] <Michael Ficarra>
which one of you did this?

[10:35:01.0735] <yulia>
which diagram?

[10:36:01.0781] <bakkot>
brian, probably

[10:36:07.0269] <bakkot>
that's the generator relationship diagram

[10:36:10.0158] <bakkot>
I'm pretty sure anyway

[10:36:14.0879] <devsnek>
yeah

[10:36:18.0786] <devsnek>
a good image

[10:36:30.0919] <bakkot>
in fairness, pretty hard to come up with good alt text for that

[10:37:05.0908] <bakkot>
https://raw.githubusercontent.com/tc39/ecma262/56ed133fb890f0c6e291ca696d8adf18891b72a6/img/figure-2.png

[10:37:09.0871] <devsnek>
why can ctrl+f not find alt text

[10:37:13.0912] <devsnek>
it could highlight the image

[10:38:00.0860] <jschoi>
> <@bakkot:matrix.org> in fairness, pretty hard to come up with good alt text for that

Good alt text is important but difficult and contextual‚Ä¶Alt text for that chart would probably be a whole paragraph of text.

[10:38:12.0144] <jschoi>
Alternatively, just make it blank and explain everything the diagram does in the body text.

[10:38:15.0637] <bakkot>
or, no, the "lots of boxes and arrows" one is actually https://github.com/tc39/ecma262/blob/master/img/figure-1.png

[10:38:26.0160] <bakkot>
the generator relationships one is "A staggering variety of boxes and arrows."

[10:38:33.0352] <ljharb>
> <@bakkot:matrix.org> https://raw.githubusercontent.com/tc39/ecma262/56ed133fb890f0c6e291ca696d8adf18891b72a6/img/figure-2.png

lol i had to edit that diagram when we changed the intrinsic notation, i used pixelmator

[10:38:37.0682] <Michael Ficarra>
both figure 1 and figure 2 share taht alt text

[10:38:43.0339] <devsnek>
this png image has weird black dots on it

[10:38:46.0844] <devsnek>
or are they transparent dots

[10:38:50.0431] <devsnek>
ü§î

[10:39:11.0773] <bakkot>
Michael Ficarra: one is "An image of lots of boxes and arrows.", the other is "A staggering variety of boxes and arrows."

[10:39:29.0318] <Michael Ficarra>
ah, yep lol

[10:39:30.0818] <Michael Ficarra>
even worse

[10:39:32.0155] <ljharb>
want "A maze of twisty little passages, all alike."

[10:40:00.0129] <ljharb>
 * want "A maze of twisty little passages, all alike."

[10:40:12.0223] <ljharb>
time for a xyzzy proposal?

[10:40:24.0480] <ljharb>
moves flow control to where it's meant to be

[10:40:36.0995] <devsnek>
where is it meant to be jordan

[10:40:37.0667] <devsnek>
 * where is it meant to be jordan

[10:40:51.0736] <ljharb>
depends on which text adventure you're in

[10:41:02.0829] <ljharb>
`plugh arr` could make a sparse array dense

[10:41:04.0434] <bakkot>
`comefrom`

[10:41:07.0844] <devsnek>
google did an interesting thing

[10:41:14.0494] <devsnek>
when you search text adventure

[10:41:22.0618] <devsnek>
they define getters on globalThis

[10:41:29.0056] <devsnek>
which you can "run" in the console like commands

[10:41:36.0762] <devsnek>
 * which you can "run" in the console like commands

[10:41:38.0746] <bakkot>
i love it

[10:41:55.0538] <ljharb>
omg that is amazing

[10:42:25.0647] <devsnek>
kinda ruined by CSP warnings lol

[10:42:35.0802] <ryzokuken>
just change the filter?

[10:43:15.0704] <ljharb>
the single-word interface severely limits the playability :-(

[10:43:30.0790] <devsnek>
am i hearing support for bare words

[10:43:33.0670] <ljharb>
i want a template tag that takes a real command

[10:43:37.0028] <shu>
yesss unicode2

[10:43:51.0249] <devsnek>
lol

[10:43:55.0665] <ryzokuken>
oh I cannot disable typeerror

[10:43:57.0644] <nicolo-ribaudo>
two-nicode

[10:44:14.0410] <danielrosenwasser>
I hate this game

[10:44:27.0705] <devsnek>
sounds like you aren't okay

[10:45:03.0585] <devsnek>
does this mean it would be `/abc/v.vnicode`

[10:45:20.0197] <shu>
ooo

[10:45:39.0483] <danielrosenwasser>
jschoi: un-click the OK for a second

[10:45:45.0509] <danielrosenwasser>
nvm

[10:46:04.0555] <devsnek>
its not the number of reactions

[10:46:09.0776] <devsnek>
its that matrix reaction ordering is not stable

[10:46:58.0595] <devsnek>
someone gonna have to read this https://gc.gy/0e95d750-279e-4610-bccd-13eefa889827.png

[10:47:16.0178] <devsnek>
i was thinking of what a human readable regex language might look like the other day

[10:47:39.0666] <bakkot>
well, it would allow whitespace, for one thing

[10:47:55.0486] <danielrosenwasser>
Of course, how else would you match against whitespace? /s

[10:47:58.0850] <ryzokuken>
such a thing cannot exist

[10:48:00.0624] <bakkot>
ha

[10:48:15.0544] <ryzokuken>
> <@danielrosenwasser:matrix.org> Of course, how else would you match against whitespace? /s

no actually `\s` :P

[10:48:19.0893] <ryzokuken>
/me runs and hides

[10:48:46.0654] <TabAtkins>
i'm sad that every "human readable regex" i've seen is hard to read for the opposite reason - it's too verbose

[10:49:01.0796] <jschoi>
> <@devsnek:matrix.org> i was thinking of what a human readable regex language might look like the other day

Perl¬†6.

[10:49:05.0060] <devsnek>
yeah i wasn't able to come up with anything i liked

[10:49:07.0898] <devsnek>
needs more thinking

[10:49:10.0254] <bakkot>
I taught regexes and NFAs to undergrads for three years

[10:49:14.0160] <TabAtkins>
but i still feel like there's definitely a middle ground that's terse but not *terribly* so, allows whitespace and composibility, etc

[10:49:25.0460] <bakkot>
they seemed to mostly struggle with the nondeterminism much more than the syntax itself

[10:49:33.0805] <Michael Ficarra>
in Unicode proposals, we call carets circumflexes

[10:49:45.0220] <bakkot>
which implies to me that the issue is fundamental rather than just the syntax

[10:50:00.0171] <devsnek>
yeah whitespace and composition (e.g. fragments are first class values)

[10:50:07.0741] <devsnek>
instead of concatting strings

[10:50:47.0266] <bakkot>
https://github.com/benjamingr/RegExp.tag

[10:51:00.0187] <bakkot>
kinda anyway

[10:51:11.0916] <danielrosenwasser>
but were you teaching regexes from real world languages with negation and the like? Standard/academic regexes tend to be dramatically simpler

[10:51:31.0974] <bakkot>
danielrosenwasser: the simpler version

[10:51:34.0794] <danielrosenwasser>
> <@bakkot:matrix.org> they seemed to mostly struggle with the nondeterminism much more than the syntax itself

 * but were you teaching regexes from real world languages with negation and the like? Standard/academic regexes tend to be dramatically simpler

[10:51:40.0725] <bakkot>
though my real regexes do not have negation in them

[10:51:47.0725] <bakkot>
mostly, anyway

[10:52:18.0429] <devsnek>
i hear the best regexes have backreferences and negative lookahead

[10:52:50.0890] <TabAtkins>
i don't always use regex, but when i do, i prefer them turing-complete

[10:52:56.0525] <TabAtkins>
(jk i always use regex)

[10:53:09.0095] <devsnek>
for parsing html right

[10:53:15.0532] <TabAtkins>
of course

[10:53:36.0624] <bakkot>
i am seriously considering writing my own xml parser

[10:53:42.0159] <bakkot>
there are no good ones in JS, astonishingly enough

[10:53:51.0027] <bakkot>
that I could find anyway

[10:53:55.0998] <bakkot>
where "good" means "gives me location information", specifically

[10:54:02.0235] <devsnek>
yeah i had the same issue

[10:54:05.0176] <bakkot>
it will have lots of regexs in

[10:54:08.0875] <devsnek>
you know what i discovered bakkot

[10:54:23.0875] <devsnek>
jsdom has location info and discards it

[10:54:26.0042] <devsnek>
when parsing xml

[10:54:39.0855] <bakkot>
jsdom you can pass a flag to keep location info, no?

[10:54:48.0251] <devsnek>
it doesn't work if the target is xml

[10:54:49.0591] <devsnek>
only html

[10:54:52.0396] <bakkot>
ahh

[10:54:53.0441] <bakkot>
fun

[10:55:10.0176] <Michael Ficarra>
is that because they stuff the location info on the parse result?

[10:55:29.0808] <devsnek>
idk jsdom code is kinda spaghetti and i was not motivated to find out

[10:56:01.0107] <ljharb>
```
Congratulations on winning the game!
It took 203 actions and 840 seconds.
You quacked 0 times.
Now get back to work.
```

[10:56:07.0156] <ljharb>
apparently you can quack in that game

[10:56:14.0289] <ryzokuken>
wow

[10:56:29.0479] <devsnek>
imagine not quacking

[10:56:38.0327] <Michael Ficarra>
I'm convinced that the only right way to produce location info from a parser is to return the parse result and a separate, identity-based location lookup

[10:57:16.0088] <devsnek>
i put location info on each node in engine262

[10:57:26.0885] <bakkot>
side-tables all the way

[10:57:54.0394] <devsnek>
v8 doesn't even keep the locations, it re-parses when it wants to know where something is

[10:58:39.0566] <Ashley Claymore>
for notes: What's the acronym for Justin that spoke before Bradley?

[10:59:00.0764] <bakkot>
JRL, I think

[11:09:17.0963] <Ashley Claymore>
~

[11:09:34.0491] <Ashley Claymore>
 * ~

[11:33:13.0124] <TabAtkins>
me and jschoi are the same person, surprise

[11:34:22.0465] <ljharb>
TabAtkins: you're a doctor of medicine?

[11:35:56.0999] <ljharb>
 * TabAtkins: you're a doctor of medicine?

[11:36:15.0850] <TabAtkins>
sure

[11:36:46.0666] <ljharb>
what kind? (just curious + can't tell if trolling)

[11:36:55.0399] <ljharb>
 * what kind? (just curious, can't tell if trolling)

[11:37:19.0457] <ljharb>
 * what kind? (just curious + can't tell if trolling)

[11:38:30.0234] <Michael Ficarra>
on the internet, nobody knows you're not an MD

[11:39:08.0347] <shu>
i wish i was a Managing Director

[11:41:45.0792] <devsnek>
i wish i was a Matt Damon

[11:43:15.0879] <devsnek>
>  uwu species

[11:43:16.0484] <danielrosenwasser>
queue needs emoji reactions

[11:46:19.0465] <Justin Ridgewell>
> please God, just let me work with it as an array

[11:50:53.0561] <TabAtkins>
oh i'm jus ttrolling

[11:51:12.0024] <ljharb>
lol k

[11:52:31.0068] <jschoi>
> <@ljharb:matrix.org> what kind? (just curious + can't tell if trolling)

Internal medicine, in a fellowship for clinical informatics. 

[11:52:58.0493] <bterlson>
Chakra does many things, it turns out!

[11:56:01.0409] <devsnek>
@bakkot wow throwing engine262 under the bus üò≠

[12:03:43.0080] <bakkot>
devsnek: you don't implement tail calls

[12:03:48.0055] <bakkot>
you did on a branch and then never merged it

[12:03:49.0630] <bakkot>
afaict

[12:03:55.0035] <bakkot>
last I checked anyway

[12:04:24.0760] <bakkot>
https://github.com/engine262/engine262/blob/063418d65006290c4f4ba60b685e0793638dfa99/src/static-semantics/IsInTailPosition.mjs

[12:04:56.0062] <devsnek>
oh right i forgot about that

[12:05:56.0835] <devsnek>
tail calls in js are strictly `return CallExpression` right?

[12:07:27.0452] <Michael Ficarra>
devsnek: https://tc39.es/ecma262/#sec-isintailposition

[12:07:35.0442] <devsnek>
yeah i was just reading that

[12:07:37.0918] <devsnek>
but it hurts my brain

[12:07:54.0069] <devsnek>
probably why i never finished this

[12:08:09.0188] <Tierney Cyren>
iykyk

[12:08:33.0221] <devsnek>
i guess there are a few more forms

[12:08:42.0761] <devsnek>
like `return blah || call()`

[12:08:54.0395] <Michael Ficarra>
return 0, call()

[12:09:38.0353] <devsnek>
yeah

[12:12:13.0884] <Michael Ficarra>
even works with optional chaining like `return a?.b(c)`, nice

[12:13:55.0017] <devsnek>
how do people actually implement this, like a full ast visitor?

[12:18:22.0534] <Michael Ficarra>
you can keep track of whether you're in tail position while compiling and then emit fast calls that reuses stack frames instead of regular calls, right?

[12:18:49.0060] <Michael Ficarra>
that obviously hand-waves the complexity of how the fast calls work, but determining whether you're in tail position is not tough

[12:21:13.0256] <devsnek>
oh yeah i just meant the check itself

[12:21:35.0150] <devsnek>
when i've done this in the past i've optimized `CALL -> RETURN` opcodes in the bytecode to `TAIL_CALL`

[12:21:44.0353] <devsnek>
but i don't have bytecode in engine262

[14:05:50.0084] <bakkot>
you can just keep track while you're parsing

