2022-01-06
[12:49:06.0388] <Ashley Claymore>
Hello implementers! The questions of add implementation complexity has been brought up in https://github.com/tc39/proposal-symbols-as-weakmap-keys/issues/21
TDLR: In the world where symbols are allowed in `Weak{Map, Ref, Set}` and `FinalizationRegistry`.
Are there implementations concerns on also allowing `Symbol.for` symbols.
e.g. for engines (SM?) that GC registered symbols. It would need to branch and ensure these are actually held strongly by the WeakMap/Set/Ref 

[12:49:54.0620] <Ashley Claymore>
The thread also discusses the end-developer-expierence of either allowing or throwing for registered symbols.


2022-01-07
[09:37:18.0088] <leobalter>
> <@aclaymore:matrix.org> Hello implementers! The questions of add implementation complexity has been brought up in https://github.com/tc39/proposal-symbols-as-weakmap-keys/issues/21
> TDLR: In the world where symbols are allowed in `Weak{Map, Ref, Set}` and `FinalizationRegistry`.
> Are there implementations concerns on also allowing `Symbol.for` symbols.
> e.g. for engines (SM?) that GC registered symbols. It would need to branch and ensure these are actually held strongly by the WeakMap/Set/Ref

You might already know this info, but it seems like the restriction for only non registered symbols is preferred by the V8 team. 

[12:56:47.0164] <ljharb>
where you see that?

[13:12:06.0426] <leobalter>
ljharb: I don't have anything official but talking with the champions group for this proposal. We should bring this discussion to the plenary and this can clarified by other delegates.

