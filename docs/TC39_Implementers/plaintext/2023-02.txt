2023-02-01
[18:17:41.0250] <rkirsling>
so uh

[18:17:55.0134] <rkirsling>
the note in https://tc39.es/proposal-set-methods/#sec-set.prototype.intersection seems kind of surprising, upon attempting implementation

[18:18:10.0767] <rkirsling>
 * the note in https://tc39.es/proposal-set-methods/#sec-set.prototype.intersection seems kind of surprising, upon attempting implementation

[18:18:44.0629] <rkirsling>
because it seems like it's literally saying "hey V8 and JSC, why don't you redo your existing Set impls to match SM"

[18:19:48.0595] <rkirsling>
given that you're not gonna copy a Set into a new data structure in order to perform an operation on it

[18:20:18.0107] <rkirsling>
 * given that copying a Set into a new data structure in order to perform an operation on it is not going to constitute a perf win

[18:24:21.0359] <bakkot>
I looked into V8's and believed it would work

[18:24:24.0226] <rkirsling>
ah damn, or maybe not V8

[18:24:25.0636] <rkirsling>
https://github.com/v8/v8/blob/main/src/objects/ordered-hash-table.h#L30-L32

[18:24:27.0356] <bakkot>
in the same way described there

[18:24:37.0437] <bakkot>
if JSC's doesn't, that's a good data point and we could consider a different sorting option

[18:24:47.0652] <rkirsling>
in JSC a Set is a hashmap with a linked list

