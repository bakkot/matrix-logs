[
{"content":{"body":"ehhh","msgtype":"m.text"},"ts":1594686348000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"technically yes, not obvious to me it would be worth it","msgtype":"m.text"},"ts":1594686357000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"my initial thought is that it would make it harder to mess up, and would obviate a ton of boilerplate, especially with iterator helpers coming","msgtype":"m.text"},"ts":1594704264000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ljharb: ping on https://github.com/tc39/ecma262/pull/1660","msgtype":"m.text"},"ts":1594705083000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"on it","msgtype":"m.text"},"ts":1594705540000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu thoughts on including +/- infinity in the set of mathematical values?","msgtype":"m.text"},"ts":1594760417000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"currently it's just reals, but jmdyck points out that this breaks ToInteger","msgtype":"m.text"},"ts":1594760433000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that sgtm, i think","msgtype":"m.text"},"ts":1594760526000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"how do we use +/- infinity right now? aleph null or aleph 1?","msgtype":"m.text"},"ts":1594760535000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm googling to understand those aleph terms and am still having trouble","msgtype":"m.text"},"ts":1594760597000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but i'm delighted these series are named with hebrew letters","msgtype":"m.text"},"ts":1594760631000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"aleph null is the size of the naturals, aleph 1 is the size of the reals. i don't think we distinguish them in our use of MVs since there's no reason to","msgtype":"m.text"},"ts":1594760648000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ahhh ok","msgtype":"m.text"},"ts":1594760655000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"seems like it'd be aleph 1 then, if it matters?","msgtype":"m.text"},"ts":1594760676000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i guess my question is just if we expand our MV (which is the reals) to include an infinity, do we need to say which infinity","msgtype":"m.text"},"ts":1594760677000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"in common use the infinity symbol is usually the lowest infinity i think","msgtype":"m.text"},"ts":1594760697000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ordinals, not cardinals","msgtype":"m.text"},"ts":1594760741000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, then sgtm","msgtype":"m.text"},"ts":1594760764000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"how do you want to notationally represent it?","msgtype":"m.text"},"ts":1594760815000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"a definition we certainly do not need to get into; we just say that the set of mathematical values includes two additional values, spelled ∞ and -∞, which have the property of being equal to themselves and greater than / less than every other mathematical value respectively","msgtype":"m.text"},"ts":1594760840000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and say that speaking of the \"finite mathematical values\" excludes those two values and no others","msgtype":"m.text"},"ts":1594760871000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I guess you also have to define arithmetic on these maybe, though","msgtype":"m.text"},"ts":1594760984000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"when subscripting with _RR, is that going to exclude the infinities unless explicit?","msgtype":"m.text"},"ts":1594760984000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which sucks","msgtype":"m.text"},"ts":1594760985000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i guess not, since the point is to include it in the set of MVs, but then _R seems misleading","msgtype":"m.text"},"ts":1594761014000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we could spell it `\\overline R` I guess","msgtype":"m.text"},"ts":1594761061000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that is the usual name for this set","msgtype":"m.text"},"ts":1594761070000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but, ehh","msgtype":"m.text"},"ts":1594761077000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i'm happy deferring on notation","msgtype":"m.text"},"ts":1594761110000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"deferring to decision to you, that is","msgtype":"m.text"},"ts":1594761146000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"as for defining arithmetic on it, how does it mess up ToInteger now?","msgtype":"m.text"},"ts":1594761168000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"looking more, there's a bunch of places this will get awkward","msgtype":"m.text"},"ts":1594761170000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ok so","msgtype":"m.text"},"ts":1594761175000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"currently ToInteger returns an integral Number, or the Numbers which are +/- Infinity","msgtype":"m.text"},"ts":1594761202000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and then there is lots of \"Let len be the mathematical value of ? ToInteger(argument)\"","msgtype":"m.text"},"ts":1594761260000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which is not defined, because \"the mathematical value of\" infinity is explicitly not defined","msgtype":"m.text"},"ts":1594761280000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"by far the most common usages of the result is to compare to another number or clamp with min/max, in which case my above definition suffices","msgtype":"m.text"},"ts":1594761316000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"right, i see","msgtype":"m.text"},"ts":1594761347000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1594761348000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"but there are places where we do arithmetic, e.g. in String.p.slice","msgtype":"m.text"},"ts":1594761349000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"Let intStart be the mathematical value of ? ToInteger(start). .. If intStart < 0, let from be max(len + intStart, 0); otherwise let from be min(intStart, len).\"","msgtype":"m.text"},"ts":1594761362000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and, like, it is clear what is supposed to happen here","msgtype":"m.text"},"ts":1594761372000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but you do have to define arithmetic on infinities for this to work","msgtype":"m.text"},"ts":1594761386000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"or reword these sections","msgtype":"m.text"},"ts":1594761390000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"do we need to define arithmetic, or just +","msgtype":"m.text"},"ts":1594761406000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"well, probably just +","msgtype":"m.text"},"ts":1594761415000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"maybe -","msgtype":"m.text"},"ts":1594761417000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"well, we can reword those as +","msgtype":"m.text"},"ts":1594761424000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that seems maybe not so bad?","msgtype":"m.text"},"ts":1594761432000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the bit that I'm worried about is that there will be other places that assume mathematical values are finite","msgtype":"m.text"},"ts":1594761436000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I am hesitant to break this assumption","msgtype":"m.text"},"ts":1594761452000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if ToInteger is the only place that needs the extended set","msgtype":"m.text"},"ts":1594761485000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"do you have to define arithmetic to make < and > work? (that's what's in slice)","msgtype":"m.text"},"ts":1594761503000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh `len + intStart`, nvm","msgtype":"m.text"},"ts":1594761512000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i do see there are a lot of uses, but how much work is it really? 30 minutes? if you define \\overline R as a separate thing, you can localize how it propagates","msgtype":"m.text"},"ts":1594761546000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, I think having an \"extended mathematical value\" distinct from the usual one would be nicest","msgtype":"m.text"},"ts":1594761578000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"since it seems like all use cases of infinities is to immediately apply an operation that lowers it back to a finite thing","msgtype":"m.text"},"ts":1594761580000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ok with calling this \"extended mathematical values\"?","msgtype":"m.text"},"ts":1594761867000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1594761936000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"can't imagine much else we want to extend MVs with","msgtype":"m.text"},"ts":1594761943000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"michael is strongly opposed to this","msgtype":"m.text"},"ts":1594762149000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1594762150000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I will try to get him on IRC","msgtype":"m.text"},"ts":1594762153000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"would you say he's infinity opposed to it","msgtype":"m.text"},"ts":1594762196000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"no, finite but large","msgtype":"m.text"},"ts":1594762252000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"I really really really don't want to do that\"","msgtype":"m.text"},"ts":1594762254000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"why does he not want to do that","msgtype":"m.text"},"ts":1594762543000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"especially since it's localized","msgtype":"m.text"},"ts":1594762554000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I have tried to get him to come on irc and talk about it but no luck","msgtype":"m.text"},"ts":1594762731000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"we'll talk tomorrow if we have time I guess","msgtype":"m.text"},"ts":1594762735000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"he wanna fight bout it","msgtype":"m.text"},"ts":1594762766000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(ง'̀-'́)ง ±∞","msgtype":"m.text"},"ts":1594762896000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"shu: thoughts on reducing duplication in https://github.com/tc39/ecma262/pull/2043 by adding a grammar flag?","msgtype":"m.text"},"ts":1594765701000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah great idea","msgtype":"m.text"},"ts":1594765936000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"those productions aren't flag-laden right now, so it wouldn't be hard to read","msgtype":"m.text"},"ts":1594765953000,"senderName":"shu","senderId":"shu@irc"}
]