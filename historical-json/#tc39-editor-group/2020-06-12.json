[
{"content":{"body":"ljharb: re: having the lint and build jobs separate, is there an easy way to tell travis that if step 1 fails it should still run step 2 before failing the job?","msgtype":"m.text"},"ts":1591926272000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"specifically, I don't want it to pass just because step 2 passed","msgtype":"m.text"},"ts":1591926287000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(I ask because you seem to have experience with travis, but I can probably google it if you don't know off  the top of your head)","msgtype":"m.text"},"ts":1591926311000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if both can run in parallel, then both have to succeed for the overarching job to succeed, and both will run even if one fails","msgtype":"m.text"},"ts":1591926741000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if it’s a serial stage tho then i think it won’t run the second if the first fails (I’m less familiar with stages)","msgtype":"m.text"},"ts":1591926769000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1591927633000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"how attached are you to having different stages for build vs upload","msgtype":"m.text"},"ts":1591927642000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"because this would be trivial as a single line bash script or wahtever","msgtype":"m.text"},"ts":1591927651000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"just hard to coordinate across stages","msgtype":"m.text"},"ts":1591927663000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"at the moment not attached at all","msgtype":"m.text"},"ts":1591928423000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"actually hmm","msgtype":"m.text"},"ts":1591928430000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so, there's like three phases","msgtype":"m.text"},"ts":1591928435000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in phase 1 (now) it doesn't matter","msgtype":"m.text"},"ts":1591928439000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in phase 3 (full checks API integration) it doesn't matter, because the linting errors will be shown inline, so it's as clear as it can get","msgtype":"m.text"},"ts":1591928453000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"somewhere in the middle i'm worried it might be less confusing to have a separate PR status for linting failures","msgtype":"m.text"},"ts":1591928477000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but maybe, now that the checks API is a thing we can integrate with, that's not useful to optimize for","msgtype":"m.text"},"ts":1591928489000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(phase 2, i mean)","msgtype":"m.text"},"ts":1591928492000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, this would be easy to undo","msgtype":"m.text"},"ts":1591928570000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"basically what I am thinking is, if the build-with-lint fails, rerun it without linting and then run the upload job and then fail the travis job","msgtype":"m.text"},"ts":1591928594000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this involves redoing some work, but only when the build fails, so I don't really care","msgtype":"m.text"},"ts":1591928617000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1591928619000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i mean we don't even need the fallback","msgtype":"m.text"},"ts":1591928624000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we could run two jobs: build+upload, and build+lint","msgtype":"m.text"},"ts":1591928632000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in parallel","msgtype":"m.text"},"ts":1591928634000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it'd be repeated work but that's travis's resources","msgtype":"m.text"},"ts":1591928642000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1591928646000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"either approach works for me","msgtype":"m.text"},"ts":1591928667000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I do not know enough about how to make travis do things in parallel to try implementing the second approach myself, though","msgtype":"m.text"},"ts":1591928732000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i can try to make that change if you throw me a branch name","msgtype":"m.text"},"ts":1591928824000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"right now there's one \"include\" job with 2 stages, but i can add a second \"include\" job with one stage that also lints (or with the second stage as a noop)","msgtype":"m.text"},"ts":1591928873000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I don't have a branch around already, if that's what you're asking for","msgtype":"m.text"},"ts":1591928911000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"errors-what-errors\" would make a fine name if you are asking for help with naming","msgtype":"m.text"},"ts":1591928936000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh lol ok","msgtype":"m.text"},"ts":1591929023000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"this was all theoretical; I haven't done any work yet","msgtype":"m.text"},"ts":1591929046000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah i can do that later tonight. add `--lint-spec` in the linting job?","msgtype":"m.text"},"ts":1591929054000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"`build-master` currently does `--lint-spec`; my plan was to add a new `build-without-lint` that was just a copy-paste of that job without that flag passed","msgtype":"m.text"},"ts":1591929978000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I'd normally do something fancy with shell variables, but this needs to work on windows I guess","msgtype":"m.text"},"ts":1591930005000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"gotcha, that should be fine","msgtype":"m.text"},"ts":1591930541000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'll shoot you a travis link later tonight","msgtype":"m.text"},"ts":1591930547000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ok actually I have now read some docs","msgtype":"m.text"},"ts":1591930811000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I suspect I can make this work myself","msgtype":"m.text"},"ts":1591930815000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah ok that was totally trivial, assuming this works: https://github.com/tc39/ecma262/pull/2044","msgtype":"m.text"},"ts":1591930943000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(commit intentionally adds a linting error to the spec to confirm the upload still works, which will of course need to be fixed before merging)","msgtype":"m.text"},"ts":1591930987000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"will take a look in an hour or three","msgtype":"m.text"},"ts":1591931006000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, that seems to have worked, cool","msgtype":"m.text"},"ts":1591931036000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"no rush on reviewing","msgtype":"m.text"},"ts":1591931180000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"also, apparently github's implementation for inline linting errors basically does not work for OSS projects","msgtype":"m.text"},"ts":1591933480000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"in particular, if I understand correctly, it cannot be made to add inline linting errors to PRs which come from forks","msgtype":"m.text"},"ts":1591933504000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i think we'd need a Github App, created by an org admin","msgtype":"m.text"},"ts":1591938830000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh, right","msgtype":"m.text"},"ts":1591938835000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so in order to have it work on PRs from forks we'd need to do the same thing as the Begin deploy preview; ie, make a separate microservice to do the API calls","msgtype":"m.text"},"ts":1591938857000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"we have free infra there for life, we just have to write the code :-/","msgtype":"m.text"},"ts":1591938872000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm going to go ahead and land 2044, minus the linting error","msgtype":"m.text"},"ts":1591941332000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"sgtm","msgtype":"m.text"},"ts":1591941474000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"tweaked the scripts also so there's only one ecmarkup invocation","msgtype":"m.text"},"ts":1591941537000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if that does what it looks like, great","msgtype":"m.text"},"ts":1591941707000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that solution did not occur to me","msgtype":"m.text"},"ts":1591941733000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i have spent an unhealthy amount of time on both travis configs and npm run-scripts ¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1591941835000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"for all of our internal stuff anything nontrivial I commit as a script to the directory","msgtype":"m.text"},"ts":1591941870000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"because messing with the scripts gets painful fast","msgtype":"m.text"},"ts":1591941888000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]