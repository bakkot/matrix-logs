[
{"content":{"body":"ljharb any interest in reviewing https://github.com/tc39/ecmarkdown/pull/66? Michael and I wrote it together so he can't really review","msgtype":"m.text"},"ts":1588465660000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(\"no\" is fine; I'll just land it.)","msgtype":"m.text"},"ts":1588465668000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"Bakkot: sure, i can take a look; not sure how much i can add tho","msgtype":"m.text"},"ts":1588525486000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"lol, clearly this project doesn't use the prefer-const eslint rule","msgtype":"m.text"},"ts":1588525505000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it seems really weird to me for Visitor to be a class, and then to have it used by `new Visitor(observer).genericallyVisit(ast);`","msgtype":"m.text"},"ts":1588525543000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"eg `genericallyVisit` seems like it should be a function that takes observer and ast","msgtype":"m.text"},"ts":1588525557000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"otherwise, PR seems fine","msgtype":"m.text"},"ts":1588525571000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, that's a fair point; we started writing it as a class with methods which could be overridden for each node type and then ended up with just the general one","msgtype":"m.text"},"ts":1588533023000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and it should probably just be a function at this point, since there's not really anything left to overridie","msgtype":"m.text"},"ts":1588533039000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thanks for the review!","msgtype":"m.text"},"ts":1588533048000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"np!","msgtype":"m.text"},"ts":1588536672000,"senderName":"ljharb","senderId":"ljharb@irc"}
]