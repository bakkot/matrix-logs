[
{"content":{"body":"Bakkot: for https://github.com/tc39/ecma262/pull/2271/commits/6342163d7444d23fe85cdd45df595623721118fa, it was intentional that even single-alternative productions are made multiline?","msgtype":"m.text"},"ts":1610582960000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu yeah I thought it looked better","msgtype":"m.text"},"ts":1610587938000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it's subjective though","msgtype":"m.text"},"ts":1610588036000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"for e.g. the functions in https://ci.tc39.es/preview/tc39/ecma262/sha/2f4449bf9667a5b847e03db4f4e4cec553a7813f/#sec-static-semantics-isfunctiondefinition","msgtype":"m.text"},"ts":1610588047000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"having it multiline reads a lot better to me","msgtype":"m.text"},"ts":1610588057000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"happy to revert if you prefer though","msgtype":"m.text"},"ts":1610588102000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i don’t feel strongly","msgtype":"m.text"},"ts":1610588356000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"do you think they always look better?","msgtype":"m.text"},"ts":1610588363000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i’d be happy to have am productions be multi line","msgtype":"m.text"},"ts":1610588375000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"no, the `block` one is definitely weird as two lines","msgtype":"m.text"},"ts":1610588376000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"s/am/all","msgtype":"m.text"},"ts":1610588383000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1610588389000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ad hoc is fine by me too","msgtype":"m.text"},"ts":1610588401000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"for the LabelledStatement chain rule thing, I will add an emu-note","msgtype":"m.text"},"ts":1610588818000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"The only two productions of |Statement| which have special semantics for LabelledEvaluation are |BreakableStatement| and |LabeledStatement|.\" sound good?","msgtype":"m.text"},"ts":1610588855000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"addressed comments I think","msgtype":"m.text"},"ts":1610589323000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb shu: a thing I forgot to mention is, this leaves a couple of clauses empty, specifically \"The do-while Statement\" and \"The while Statement\"","msgtype":"m.text"},"ts":1610593653000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"this is because there is no specific \"while statement\" production; they're all just grouped into IterationStatement","msgtype":"m.text"},"ts":1610593678000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I think this is fine for now and I will submit a followup PR which splits IterationStatement into the different kinds, if you are on board with that","msgtype":"m.text"},"ts":1610593714000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"thoughts on https://github.com/tc39/ecma262/pull/2271#discussion_r556999580 ?","msgtype":"m.text"},"ts":1610597298000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"Generally, when a clause defines an aoid, the id attribute is just \"sec-\" + lowercase(aoid).\" - I included the \"static-semantics-\" part in the ids","msgtype":"m.text"},"ts":1610597319000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I have no strong feelings","msgtype":"m.text"},"ts":1610597330000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i like having static-semantics","msgtype":"m.text"},"ts":1610598349000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"last call for feedback on https://github.com/tc39/ecma262/pull/2271","msgtype":"m.text"},"ts":1610644623000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]