[
{"content":{"body":"i thought we were going to take over the original PR","msgtype":"m.text"},"ts":1598201970000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(ie, the same thing that would have happened if rick had done the work)","msgtype":"m.text"},"ts":1598201978000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"like I said in the PR message, I opened it as its own PR so that reviewers can more easily see the differences between the two","msgtype":"m.text"},"ts":1598205807000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb https://github.com/tc39/ecma262/pull/2139 appears to be good to land","msgtype":"m.text"},"ts":1598213746000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"though I guess maybe we should wait on shu for https://github.com/tc39/ecma262/pull/2139#discussion_r474273479","msgtype":"m.text"},"ts":1598213792000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ah ok, i won't land it yet then","msgtype":"m.text"},"ts":1598215387000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it seems like his only issue was resolved, but there's no rush","msgtype":"m.text"},"ts":1598215400000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I agree, I just want to check that he agrees too","msgtype":"m.text"},"ts":1598215463000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"ljharb btw, you know eslint: is there seriously not a built-in rule which would forbid stuff like `let a = b[c++]` and `while (x = y) {}` and so on?","msgtype":"m.text"},"ts":1598215544000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i mean, i think the common advice has been \"never use ++ or -- in any context\" for a very long time","msgtype":"m.text"},"ts":1598215573000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it was one of the earliest crockford rules in jslint","msgtype":"m.text"},"ts":1598215579000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"so altho it seems like a reasonable subset of the plusplus rule, i assume nobody's asked for it","msgtype":"m.text"},"ts":1598215597000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"even then, that would only be half of it","msgtype":"m.text"},"ts":1598215607000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"for the assignment, what doesn't https://eslint.org/docs/rules/no-cond-assign cover?","msgtype":"m.text"},"ts":1598215620000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i suppose it might not cover non-conditional expression positions?","msgtype":"m.text"},"ts":1598215645000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I am meaning to refer to all kinds of assignments occurring in expression position","msgtype":"m.text"},"ts":1598215654000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"there are many expression positions","msgtype":"m.text"},"ts":1598215660000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1598215663000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"seems like a good rule to exist, i'd use it","msgtype":"m.text"},"ts":1598215670000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"my assumption for that one is that very few people actually misuse assignment in that fashion enough for it to have come up, but ¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1598215688000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"for the latter, at least, since it can catch bugs and isn't \"style\", seems worth an issue to eslint","msgtype":"m.text"},"ts":1598215718000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I no longer have any faith that issue suggestions to eslint will get read, but I guess I might as well","msgtype":"m.text"},"ts":1598215763000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, yeah, they formalized that: https://eslint.org/blog/2020/05/changes-to-rules-policies","msgtype":"m.text"},"ts":1598215888000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"time to start my own repo of rules, I guess","msgtype":"m.text"},"ts":1598215902000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"they formalized no new style rules","msgtype":"m.text"},"ts":1598215908000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but the assignment in expression position isn't style","msgtype":"m.text"},"ts":1598215917000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"that's not what that says","msgtype":"m.text"},"ts":1598215933000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"\"New rules are limited - we will only accept new rules when they relate to new ECMAScript features that reached stage 4 in the preceding 12 months.\"","msgtype":"m.text"},"ts":1598215939000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh, hm","msgtype":"m.text"},"ts":1598215942000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yeah, snap","msgtype":"m.text"},"ts":1598215952000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it's a terrible policy (like their stage 4 one) because it's still way too painful to get rules adopted when they're not in core :-(","msgtype":"m.text"},"ts":1598215968000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"I guess we did technically add a new assignment form in the last 12 months!","msgtype":"m.text"},"ts":1598215978000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah...","msgtype":"m.text"},"ts":1598215984000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"need a well-accepted place for community rules","msgtype":"m.text"},"ts":1598215994000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"*well known","msgtype":"m.text"},"ts":1598216004000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"more than that tho; eslint needs an ergonomic way to consume them","msgtype":"m.text"},"ts":1598216042000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"the current way is peer dep hell","msgtype":"m.text"},"ts":1598216046000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"really? I have always just added the package as a dev-dep then added the plugin and the rule to the config","msgtype":"m.text"},"ts":1598216075000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"sorry i meant, in a shared config","msgtype":"m.text"},"ts":1598216087000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"to use them directly, you're right","msgtype":"m.text"},"ts":1598216091000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but the real value is packaging up multiple plugins so people only have to use your wrapper","msgtype":"m.text"},"ts":1598216107000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"does making it a direct dependency of your wrapper not do the right thing?","msgtype":"m.text"},"ts":1598216143000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1598216169000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1598216175000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"because of possible duplication if the app depends on it both directly and via the shared config","msgtype":"m.text"},"ts":1598216182000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"which is why the airbnb config has `install-peerdeps` instructions in its readme","msgtype":"m.text"},"ts":1598216194000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"duplication being a problem because... bloat in node_modules, or some other reason?","msgtype":"m.text"},"ts":1598216209000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"not bloat, because \"the reason npm is great\", which is that you *can* have duplicates in the tree :-)","msgtype":"m.text"},"ts":1598216225000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"any plugin system tho requires singleton-like behavior, which can only be truly solved with peer deps","msgtype":"m.text"},"ts":1598216255000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ah, the problem being that the plugin ends up added twice?","msgtype":"m.text"},"ts":1598216325000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"which breaks eslint somehow?","msgtype":"m.text"},"ts":1598216334000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"it would break because the config is shared, so if you had a rule config that required 1.1, and 1.0 ended up being used by eslint, it'd crash","msgtype":"m.text"},"ts":1598216365000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or if the versions crossed majors, you might silently have different behavior than you intended","msgtype":"m.text"},"ts":1598216383000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"crossing majors seems like an unresolvable issue, but I wonder if the non-major conflicts could be resolved by eslint just choosing the later version if you try to add a plugin twice","msgtype":"m.text"},"ts":1598216450000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"eslint would have to be able to find both, and `require` is contextual","msgtype":"m.text"},"ts":1598216501000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"though, actually, real fix is to stop requiring singleton-like behavior","msgtype":"m.text"},"ts":1598216502000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1598216507000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"eslint could solve it by making shared configs prefix rules","msgtype":"m.text"},"ts":1598216520000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"ie, `airbnb/import/order`","msgtype":"m.text"},"ts":1598216526000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it shouldn't really be a problem to resolve plugins relative to the config file which names them","msgtype":"m.text"},"ts":1598216533000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"and then you could configure `import/order` *or* `airbnb/import/order`","msgtype":"m.text"},"ts":1598216538000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i don't really understand why eslint hasn't solved this tbh","msgtype":"m.text"},"ts":1598216548000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"there is an RFC that i think was merged that'll be out in some v7 minor that they claim solves it, but i won't know for sure til i set up the airbnb config with it","msgtype":"m.text"},"ts":1598216568000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh, neat","msgtype":"m.text"},"ts":1598216598000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I assume the reason they haven't solved it is because it's a bunch of work","msgtype":"m.text"},"ts":1598216655000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that's usually the reason","msgtype":"m.text"},"ts":1598216658000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"that seems likely","msgtype":"m.text"},"ts":1598216684000,"senderName":"ljharb","senderId":"ljharb@irc"}
]