[
{"content":{"body":"Bakkot: 2085 on the list for today","msgtype":"m.text"},"ts":1600100502000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"reviewing it right now. for references the ideal type would be a discriminated union of records. the single record + predicates for checking for sentinels in certain fields approach smacks me too much of treating the spec like an imperative programming language","msgtype":"m.text"},"ts":1600107459000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that said i'm not sure where we else we'd like to union different records together with _different_ fields","msgtype":"m.text"},"ts":1600107477000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"perhaps Completion Records","msgtype":"m.text"},"ts":1600107565000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu break the tie on https://github.com/tc39/ecma262/pull/2174#discussion_r487646583 ?","msgtype":"m.text"},"ts":1600118603000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"reading","msgtype":"m.text"},"ts":1600118731000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: i don't see a choice around making \"length\" explicit","msgtype":"m.text"},"ts":1600119084000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"how is the length of Math.max and friends currently specified? is the idea that the line about built-in functions having a \"length\" equal to the number of required arguments is supposed to apply?","msgtype":"m.text"},"ts":1600119137000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if so, the spec as it stands says contradictory things: Math.max lists value1 and value2, and the prose then says given 0 or more arguments","msgtype":"m.text"},"ts":1600119180000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"what does \"required\" mean, that they're rendered without [ ]?","msgtype":"m.text"},"ts":1600119195000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if so, then it's extra confusing for these, but well-defined, and still very much warrants an explicit length","msgtype":"m.text"},"ts":1600119218000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"that's what required means, yes","msgtype":"m.text"},"ts":1600119271000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"commented","msgtype":"m.text"},"ts":1600119702000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"we definitely never have an explicit length where the signature defines it","msgtype":"m.text"},"ts":1600119775000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"here the signature doesn't make sense","msgtype":"m.text"},"ts":1600119793000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i see the choices as what's in master, or, the \"`...args` with explicit length prose\" approach","msgtype":"m.text"},"ts":1600119796000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yes, i see that as the argument for the latter","msgtype":"m.text"},"ts":1600119807000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"yup, that's what I want","msgtype":"m.text"},"ts":1600119812000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but the existence of length prose imo is 100% dictated by whether the observable length differs from the signature, or not","msgtype":"m.text"},"ts":1600119850000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but the choice on master is also kind of confusing, in that we list 2 \"required\" parameters for Math.max but then the prose says \"Given zero or more\"","msgtype":"m.text"},"ts":1600119903000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and between the two i'd prefer jmdyck's PR form i think","msgtype":"m.text"},"ts":1600119916000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yeah, i agree the prose is inconsistent","msgtype":"m.text"},"ts":1600119933000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"cool, let's land the PR as-is then?","msgtype":"m.text"},"ts":1600120134000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i stamped it","msgtype":"m.text"},"ts":1600120145000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Bakkot: did you take over the Reference Record PR?","msgtype":"m.text"},"ts":1600120173000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"no, I just pushed some wording tweaks","msgtype":"m.text"},"ts":1600120180000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"oh okay, then we'll wait for the author","msgtype":"m.text"},"ts":1600120191000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"well, i don't like this solution","msgtype":"m.text"},"ts":1600120207000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"but if shu and Bakkot prefer this one, and michael has no opinion, then i'm overruled","msgtype":"m.text"},"ts":1600120223000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what is your preferred solution if you think the current version is confusing, and dislike this one?","msgtype":"m.text"},"ts":1600120240000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i prefer maximally avoiding an explicit length, and keeping the signature as-is, and rewriting the prose to not say \"zero or more\"","msgtype":"m.text"},"ts":1600120261000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"in particular, it's just not sensible to call Math.max with less than 2 args","msgtype":"m.text"},"ts":1600120271000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"because what are you getting the max of","msgtype":"m.text"},"ts":1600120277000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"(that it doesn't happen to throw when you do that, doesn't make it sensible, it just makes it defined)","msgtype":"m.text"},"ts":1600120290000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1600120317000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"you are getting the max of the list of arguments you passed","msgtype":"m.text"},"ts":1600120338000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"but you didn't pass a list.","msgtype":"m.text"},"ts":1600120344000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"if the list is of length 1 you get the max of that 1 item","msgtype":"m.text"},"ts":1600120346000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"the spec is treating it as a list, but that's not the same thing.","msgtype":"m.text"},"ts":1600120350000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"\"the list of arguments you passed\"","msgtype":"m.text"},"ts":1600120355000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"if it took an array that'd be different","msgtype":"m.text"},"ts":1600120357000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"right but users don't think of a list of arguments as a reified thing","msgtype":"m.text"},"ts":1600120366000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"it takes any number of parameters","msgtype":"m.text"},"ts":1600120366000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"i understand that desire and disagree with it. feels to me like a recurring disagreement that the result i'd like a spec to maximally cater to is interoperable implementation, not \"better\" JS programs","msgtype":"m.text"},"ts":1600120484000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"and readability for \"length\" i feel is definitely hurt without explicit repetition for the possibly confusing cases","msgtype":"m.text"},"ts":1600120599000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"repetition where a single rule unconfusingly applies would argue for favoring minimizing explicit notes","msgtype":"m.text"},"ts":1600120643000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(also, for the specific case of \"users don't think of a list of arguments as a reified thing\" is more demonstrably false for JS than for other languages because of F.p.call)","msgtype":"m.text"},"ts":1600120757000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"apply, i assume you mean","msgtype":"m.text"},"ts":1600120774000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"or call with spread i suppose","msgtype":"m.text"},"ts":1600120786000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oops, yes, i mean apply","msgtype":"m.text"},"ts":1600120861000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"so, land it?","msgtype":"m.text"},"ts":1600121544000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"yeah i'll land it tonight","msgtype":"m.text"},"ts":1600123958000,"senderName":"ljharb","senderId":"ljharb@irc"}
]