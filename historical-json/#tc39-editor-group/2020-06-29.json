[
{"content":{"body":"bakkot_: ping","msgtype":"m.text"},"ts":1593469503000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu pong","msgtype":"m.text"},"ts":1593469635000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"bakkot_: fixing up the promise invariants thing, had the following musing","msgtype":"m.text"},"ts":1593469651000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'm changing the \"propagates active script/module\" thing to also be a property of executions at a particular time","msgtype":"m.text"},"ts":1593469686000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the musing is, the second bulletpoint as i have now which imposes some additional structure on the execution context stack *could* be rephrased as an assert inside GetActiveScriptOrModule() itself","msgtype":"m.text"},"ts":1593469726000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"now, our position is that asserts are strictly editorial","msgtype":"m.text"},"ts":1593469736000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"does that cease to be so if i write something like \"Perform host-defined steps s.t. GetActiveScriptOrModule() is _script_\"?","msgtype":"m.text"},"ts":1593469772000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i.e. it's clear that the intent is that the host does steps that would not trip the assert","msgtype":"m.text"},"ts":1593469822000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"hmm, intersting","msgtype":"m.text"},"ts":1593469825000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"but should it be spelled out","msgtype":"m.text"},"ts":1593469828000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"my answer is that one ought not speak of the result of `GetActiveScriptOrModule()` without first ensuring that the asserts it contains are not violated","msgtype":"m.text"},"ts":1593469874000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"(so, no, asserts are still editorial)","msgtype":"m.text"},"ts":1593469912000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"if you add an assert and the host could trip it, you should say \"such that [the conditions of the assert hold] and GetActiveScriptOrModule() is _script_`\"","msgtype":"m.text"},"ts":1593469969000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"so that it is meaningful to talk about `GetActiveScriptOrModule`","msgtype":"m.text"},"ts":1593469977000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"yes, that's the current approach in the PR","msgtype":"m.text"},"ts":1593469990000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"well, and that the assert isn't even spelled out in the AO itself","msgtype":"m.text"},"ts":1593470010000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i'll leave it as is then","msgtype":"m.text"},"ts":1593470056000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"what are the exact rules of dfn autolinking","msgtype":"m.text"},"ts":1593471480000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"uhh somewhat complicated","msgtype":"m.text"},"ts":1593471542000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"it must be a literal match, on word boundaries, and in a different section","msgtype":"m.text"},"ts":1593471580000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"there's casing rules but I don't know them","msgtype":"m.text"},"ts":1593471605000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1593471855000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: where are the uses of https://tc39.es/ecma262/#sec-%asyncfromsynciteratorprototype%.throw within ecma262?","msgtype":"m.text"},"ts":1593472436000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ljharb: #1776 has the note on throw: \"In this specification, _value_ is always provided, but is left optional for consistency with <emu-xref title href=\"#sec-%asyncfromsynciteratorprototype%.return\"></emu-xref>\"","msgtype":"m.text"},"ts":1593472473000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: like in `YieldExpression: yield* AssignmentExpression`, it does `Call(throw, iterator, « received.[[Value]] »).`","msgtype":"m.text"},"ts":1593472640000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1593472687000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"actually that might be the only place","msgtype":"m.text"},"ts":1593472702000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'm not sure if that note is necessary -- it's a user-visible prototype function","msgtype":"m.text"},"ts":1593472716000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"justifying why it has a certain shape based on all uses within ecma262 itself is odd","msgtype":"m.text"},"ts":1593472732000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i agree, but i added it in response to kevin's comment https://github.com/tc39/ecma262/pull/1776#discussion_r440506745","msgtype":"m.text"},"ts":1593472768000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"oh i missed that first part, the entire object is unobservable?","msgtype":"m.text"},"ts":1593472818000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"because these adapters can't ever escape outside of the syntax parts that need them?","msgtype":"m.text"},"ts":1593472834000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"then this note is justified","msgtype":"m.text"},"ts":1593472841000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1593472844000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"thanks for the link","msgtype":"m.text"},"ts":1593472850000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1593472854000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"i'll unresolve that thread so it's visible for future readers","msgtype":"m.text"},"ts":1593472867000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"lgtm","msgtype":"m.text"},"ts":1593472874000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"woot, landing","msgtype":"m.text"},"ts":1593472883000,"senderName":"ljharb","senderId":"ljharb@irc"},
{"content":{"body":"what is that squirrel detective!","msgtype":"m.text"},"ts":1593473970000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"https://www.quora.com/On-GitHub-what-is-the-significance-of-the-Ship-It-squirrel","msgtype":"m.text"},"ts":1593473989000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"(the immediate answer is, it's what you get when you type `:shipit:` in a PR)","msgtype":"m.text"},"ts":1593474006000,"senderName":"bakkot_","senderId":"bakkot_@irc"},
{"content":{"body":"i have never seen that before","msgtype":"m.text"},"ts":1593474055000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i guess i don't use GH enough","msgtype":"m.text"},"ts":1593474058000,"senderName":"shu","senderId":"shu@irc"}
]