[
{"content":{"body":"Literal check may be better there, btw","msgtype":"m.text"},"ts":1392105680000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"Especially if we do that for script","msgtype":"m.text"},"ts":1392105696000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"jgraham: not being able to use {{host}} etc in tests directly is a bit annoying. would it be possible to enable it with __dir__ or something?","msgtype":"m.text"},"ts":1392107955000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk-cloud: do you know what the cases are, if any, in which it isn't possible to convert a string to punycode?","msgtype":"m.text"},"ts":1392111513000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"looking at it it would seem to happily munge anything","msgtype":"m.text"},"ts":1392111530000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I ask because HTML says \"Constraint validation: While the user interface is representing input that the user agent cannot convert to punycode, the control is suffering from bad input.\" (for email inputs)","msgtype":"m.text"},"ts":1392111654000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but deniak has been having trouble writing a test for that :)","msgtype":"m.text"},"ts":1392111673000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"So, when is an object element rendered as a replaced element?","msgtype":"m.text"},"ts":1392112052000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: Yeah. Not sure how to solve that best","msgtype":"m.text"},"ts":1392116303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"darobin: not sure if punycode can fail, but ToASCII can","msgtype":"m.text"},"ts":1392117010000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"jgraham: would it be bad to have sub enabled for all .html files?","msgtype":"m.text"},"ts":1392117765000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah, I think so. I strongly suspect it makes things much slower","msgtype":"m.text"},"ts":1392117932000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: We could make some hack like a file extension to indicate that substitutions should be applied","msgtype":"m.text"},"ts":1392119099000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like foo.sub.html","msgtype":"m.text"},"ts":1392119106000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1392119187000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: elsewhere you do use :not(.classname) fwiw","msgtype":"m.text"},"ts":1392124669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: yo, could you maybe comment on your preference with regards to GC of Notification objects in https://github.com/whatwg/notifications/issues/9 ?","msgtype":"m.text"},"ts":1392127931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what we've done so far in such scenarios","msgtype":"m.text"},"ts":1392127943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"github","msgtype":"m.text"},"ts":1392128062000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1392128066000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"looking...","msgtype":"m.text"},"ts":1392128073000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(while eating lunch )","msgtype":"m.text"},"ts":1392128083000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: is there really any other option than returning always new notification","msgtype":"m.text"},"ts":1392128352000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Notification objects could be tied to the lifetime of the global","msgtype":"m.text"},"ts":1392128386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so over timer there can be tons of them...","msgtype":"m.text"},"ts":1392128432000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"say an email app","msgtype":"m.text"},"ts":1392128435000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: well, notifications that are closed can be collected","msgtype":"m.text"},"ts":1392128490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1392128504000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what was the reason to add .get()","msgtype":"m.text"},"ts":1392128510000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: if you close your email page and then open it again later while notifications are still in the notification center","msgtype":"m.text"},"ts":1392128550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: or if you open your email page again in another window and you want to know about existing notifications","msgtype":"m.text"},"ts":1392128581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, right","msgtype":"m.text"},"ts":1392128601000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but it is getOrCreate","msgtype":"m.text"},"ts":1392128647000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"currently","msgtype":"m.text"},"ts":1392128667000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, it gets notifications, either as existing Notification objects, or as newly created ones if the global didn't have any representation for them yet","msgtype":"m.text"},"ts":1392128766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it doesn't create new notifications, just new Notification objects","msgtype":"m.text"},"ts":1392128785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"could we call get() something else and always create a new Notification for each notifications","msgtype":"m.text"},"ts":1392128806000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"getCopies()","msgtype":"m.text"},"ts":1392128893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"getClones()","msgtype":"m.text"},"ts":1392128902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since it is a bit odd if (new Notification({})) != Notification.get({}),<add_random_promise_stuff_here>;","msgtype":"m.text"},"ts":1392128904000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, either one","msgtype":"m.text"},"ts":1392128928000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps Clones","msgtype":"m.text"},"ts":1392128933000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"mkay","msgtype":"m.text"},"ts":1392128943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I also need to clarify that GC should not happen if we have event listeners attached?","msgtype":"m.text"},"ts":1392128958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least for particular events","msgtype":"m.text"},"ts":1392128969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1392128981000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Something similar to http://xhr.spec.whatwg.org/#garbage-collection","msgtype":"m.text"},"ts":1392128983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebSocket has something similar too","msgtype":"m.text"},"ts":1392129002000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Mkay, we'll go with this I guess","msgtype":"m.text"},"ts":1392129040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: so the annoying thing with always new is the event listeners I think","msgtype":"m.text"},"ts":1392129236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: you don't want to add them all over","msgtype":"m.text"},"ts":1392129246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, if you don't want to add new ones, you keep ref to the original Notification or something","msgtype":"m.text"},"ts":1392129285000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: sure you would, but now you got a copy of that one so you need to make some kind of crappy comparison between the two","msgtype":"m.text"},"ts":1392129338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":".isEqualNotification","msgtype":"m.text"},"ts":1392129357000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: right :/","msgtype":"m.text"},"ts":1392129366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's mostly why my design tried to preserve === but I guess once you add an <iframe> or a worker you're already in trouble","msgtype":"m.text"},"ts":1392129397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: just wanted to say i loved your performance in the hobbit 2","msgtype":"m.text"},"ts":1392129600000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"I was pretty good","msgtype":"m.text"},"ts":1392129648000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":".equals() is a bit annoying","msgtype":"m.text"},"ts":1392129860000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but works","msgtype":"m.text"},"ts":1392129902000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh my","msgtype":"m.text"},"ts":1392129971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bah Ms2ger, now I found some buggy wording in isEqualNode","msgtype":"m.text"},"ts":1392130129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"remembers TabAtkins mentioning he fixed Selectors","msgtype":"m.emote"},"ts":1392130157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, the recursive call?","msgtype":"m.text"},"ts":1392130184000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, both it not being in terms of an abstract algorithm and the way it is invoked","msgtype":"m.text"},"ts":1392130238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Clearly I should have caught that :)","msgtype":"m.text"},"ts":1392130270000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I also never really tested this method so now I'm wondering what it does for <input>.value and a <script> that has run versus one that hasn't and such","msgtype":"m.text"},"ts":1392130307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mm","msgtype":"m.text"},"ts":1392130327000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think nothing special","msgtype":"m.text"},"ts":1392130331000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But that's without leaving my sense of logic at the door","msgtype":"m.text"},"ts":1392130353000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":".value is ignored :-)","msgtype":"m.text"},"ts":1392130447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, I guess I'll rewrite this in terms of a concept-node-equals","msgtype":"m.text"},"ts":1392130485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh right, the domparsing review","msgtype":"m.text"},"ts":1392130498000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Thanks zcorpan","msgtype":"m.text"},"ts":1392130502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, mm, I pretty much did that in servo too :)","msgtype":"m.text"},"ts":1392130531000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"had a good laugh at the compatibility section on https://businessportal.alcatel-lucent.com/","msgtype":"m.emote"},"ts":1392130619000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what about all this purported upstream Servo specification review then?!","msgtype":"m.text"},"ts":1392130682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't read well enough :)","msgtype":"m.text"},"ts":1392130787000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: http://dev.w3.org/csswg/selectors/#data-model Just using the DOM as the Selectors element tree in HTML.","msgtype":"m.text"},"ts":1392134127000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the whole \"in HTML\" thing doesn't make much sense to me","msgtype":"m.text"},"ts":1392134184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: by the team you get to Selectors, there's no HTML","msgtype":"m.text"},"ts":1392134191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"time*","msgtype":"m.text"},"ts":1392134196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes there is.  That's the host document.","msgtype":"m.text"},"ts":1392134204000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTML is syntax, DOM is representation","msgtype":"m.text"},"ts":1392134214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I see.  So something more like - in documents represented by a DOM?","msgtype":"m.text"},"ts":1392134232000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What if I created the whole thing through createDocument() and createElement() and then did matching?","msgtype":"m.text"},"ts":1392134244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1392134245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Except wouldn't that suggest that Selectors should never mention HTML in any way?","msgtype":"m.text"},"ts":1392134314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well that is kind of my opinion","msgtype":"m.text"},"ts":1392134332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: you could talk about HTML elements","msgtype":"m.text"},"ts":1392134347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But some of that's completely wrong.  The DOM doesn't give the table pseudos any meaning.","msgtype":"m.text"},"ts":1392134354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, okay.","msgtype":"m.text"},"ts":1392134357000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but you also happily match against elements that are not HTML elements","msgtype":"m.text"},"ts":1392134359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1392134364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All right, I'm satisfied.","msgtype":"m.text"},"ts":1392134368000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The way the table pseudos get meaning is because certain elements have additional flags, such as whether those pseudos match :-)","msgtype":"m.text"},"ts":1392134407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how I should handle XML here.  Invoke Infoset? Or just lean on DOM?","msgtype":"m.text"},"ts":1392134410000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DOM","msgtype":"m.text"},"ts":1392134416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least as far as browsers are concerned DOM is the model we use and operate on. Other players can easily map DOM to their own model. That seems easiest","msgtype":"m.text"},"ts":1392134463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1392135618000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"smaug____: any thoughts on https://www.w3.org/Bugs/Public/show_bug.cgi?id=23268 ?","msgtype":"m.text"},"ts":1392135936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mtg","msgtype":"m.text"},"ts":1392135988000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: sounds like a good reason to give it a thought","msgtype":"m.text"},"ts":1392136068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ha","msgtype":"m.text"},"ts":1392136080000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"W3C is now using CORS as example for security propaganda? http://www.w3.org/blog/2014/02/strengthen-web-security-on-the-day-we-fight-back/","msgtype":"m.text"},"ts":1392136657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1392137100000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"You have to love campaigns about global issues that assume all internet users are from the USA","msgtype":"m.text"},"ts":1392137181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1392137192000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I wonder who here works for the NSA :)","msgtype":"m.text"},"ts":1392137255000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"\"We do not believe any of W3C’s Recommendations were weakened through interference\"... it says nothing about WHATWG specs, which no doubt have been meddled with. My money is on MikeSmith as a double agent.","msgtype":"m.text"},"ts":1392137332000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"lol :)","msgtype":"m.text"},"ts":1392137358000,"senderName":"qrwteyrutiyoup","senderId":"qrwteyrutiyoup@irc"},
{"content":{"body":"Ms2ger: ping?","msgtype":"m.text"},"ts":1392137625000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Ms2ger: ok if I do both the things you asked in https://critic.hoppipolla.co.uk/r/767 on separate branches? there's lots of things to fix here but I'd like to keep it to one topic per branch as much as possible...","msgtype":"m.text"},"ts":1392137691000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"jgraham: I got excited there for a minute, thought you were talking about global object issues","msgtype":"m.text"},"ts":1392137737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip, if it happens, sure :)","msgtype":"m.text"},"ts":1392137765000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I thought we didn't have global objects, just realms :p","msgtype":"m.text"},"ts":1392137782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: it will","msgtype":"m.text"},"ts":1392137859000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk for Protector of the Realm?","msgtype":"m.text"},"ts":1392137875000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Thanks :)","msgtype":"m.text"},"ts":1392137876000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I thought he didn't stand for re-election?","msgtype":"m.text"},"ts":1392137905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm. They must've meant CSP.","msgtype":"m.text"},"ts":1392138142000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Can we make a rule that all initalisms must be universally unique?","msgtype":"m.text"},"ts":1392138255000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1392138358000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I keep thinking Communicating Sequential Processes. Which are quite different to the Content Security Policy.","msgtype":"m.text"},"ts":1392138400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"There aren't enough small numbers to meet the many demands made of them.\"","msgtype":"m.text"},"ts":1392138410000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I keep thinking Continuation Passing Style, so I'm not sure that uniqueness is all it's cracked up to be","msgtype":"m.text"},"ts":1392138443000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that's CPS, not CSP!","msgtype":"m.text"},"ts":1392138477000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hence uniqueness not being all it's cracked up to be","msgtype":"m.text"},"ts":1392138636000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I kinda like that moment in the conversation when you realize the person you're talking to has absolutely no clue what they're talking about.","msgtype":"m.text"},"ts":1392139758000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like the inverse of http://xkcd.com/451/ ?","msgtype":"m.text"},"ts":1392139818000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In this case, it was some rando saying that with Blink dropping Regions, he might as well go native.","msgtype":"m.text"},"ts":1392139821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"He citied iOS Regions (they have something *similar* to Regions, but much less complex), then pointed to a web page as an example.","msgtype":"m.text"},"ts":1392139845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Talking about how pretty it was in Safari. I was confused, so I pressed him on how it was native.","msgtype":"m.text"},"ts":1392139867000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"He responded that he'd just develop apps wrapped around a webview.","msgtype":"m.text"},"ts":1392139883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" /headdesk","msgtype":"m.text"},"ts":1392139886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(If he's targetting iOS, Blink doesn't matter anyway, because it doesn't even *exist* on the platform. iOS Chrome is just a wrapper around Safari.)","msgtype":"m.text"},"ts":1392139920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: If it had been in person, the conversation would have been over in a minute or two.","msgtype":"m.text"},"ts":1392139965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CPS = Child Protective Services; Crown Prosecution Service","msgtype":"m.text"},"ts":1392142145000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"foolip, got more? :)","msgtype":"m.text"},"ts":1392142279000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyone in here got Chrome Beta or newer, on Mac or Windows? Mind seeing if this looks messed up? http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2805","msgtype":"m.text"},"ts":1392144377000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyone in here got Chrome Beta or newer, on Mac or Windows? Mind seeing if this looks messed up? http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2805","msgtype":"m.text"},"ts":1392144470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Looks OK to me in Canary on Windows","msgtype":"m.text"},"ts":1392144506000,"senderName":"amtiskaw","senderId":"amtiskaw@irc"},
{"content":{"body":"Okay, might be just a Linux issue then.","msgtype":"m.text"},"ts":1392144538000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"amtiskaw: Just to make sure - you're seeing three distinct character on each line? The characters aren't jumbled up and overlapping each other?","msgtype":"m.text"},"ts":1392144605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Yep, all distinct. Rendering matches Firefox Nightly almost exactly, as far as I can see.","msgtype":"m.text"},"ts":1392144673000,"senderName":"amtiskaw","senderId":"amtiskaw@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1392144691000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How do you use :has to emulate `a !b ~ c`?","msgtype":"m.text"},"ts":1392155497000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"TabAtkins ^","msgtype":"m.text"},"ts":1392155512000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: That's almost exactly the same selector we have in the poll.","msgtype":"m.text"},"ts":1392155549000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a b:has(~ c)","msgtype":"m.text"},"ts":1392155553000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah I guess it makes sense. It's a bit weird because I only think of elements as \"having\" their children","msgtype":"m.text"},"ts":1392155584000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"They also \"have\" siblings.","msgtype":"m.text"},"ts":1392155638000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1392155651000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"a b:matches(# ~ c) { }","msgtype":"m.text"},"ts":1392155807000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the real question is how do you do  b:matches(a #):matches(b #) with !","msgtype":"m.text"},"ts":1392155830000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or b:matches(# a):matches(# b) { }","msgtype":"m.text"},"ts":1392155876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Can `p:has(a) ~ .legal { display: block }` be translated to using `!`?","msgtype":"m.text"},"ts":1392156264000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: :matches(!p a) ~ .legal","msgtype":"m.text"},"ts":1392159444000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: That's a <b> with both <a> and <b> ancestors?","msgtype":"m.text"},"ts":1392159461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":matches(a b, b b)","msgtype":"m.text"},"ts":1392159485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1392159511000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, commas can get you some of the way, but they don't scale well","msgtype":"m.text"},"ts":1392159527000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":matches(!p a) ~ .legal  is kinda ugly (why would the p be in the :matches?).  p:matches(!* a) ~ .legal  is basically the same as  p:matches(# a) ~ .legal  which is what i proposed years ago","msgtype":"m.text"},"ts":1392159609000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"p:matches(!* a) doesn't match anything.","msgtype":"m.text"},"ts":1392159642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1392159652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The subject of the :matches() selector is the thing the :matches() pseudo-class is attached to.","msgtype":"m.text"},"ts":1392159656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"p:matches(a) is nonsense.","msgtype":"m.text"},"ts":1392159661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"p:matches(# a) and p:matches(a) are completely different.","msgtype":"m.text"},"ts":1392159699000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Only if you're using a different definition of :matches() than the spec has.","msgtype":"m.text"},"ts":1392159722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(and in my original proposal, p:matches(a) would match any <p> in a document with an <a>)","msgtype":"m.text"},"ts":1392159724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(which i still think makes way more sense)","msgtype":"m.text"},"ts":1392159744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how is :matches(!p a) not equivalent to p:matches(!* a) ?","msgtype":"m.text"},"ts":1392159771000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In \"A:matches(B C)\", the C part of the selector refers to the same element as the A part.","msgtype":"m.text"},"ts":1392159827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The subject of the :matches() selector arguments is A.","msgtype":"m.text"},"ts":1392159839000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1392159941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and in A:matches(!B C), the subject of the argument is the B, which is the same element as the A","msgtype":"m.text"},"ts":1392159953000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and in the original proposal, A:matches(# C), the # is the subject of the argument, which is the same elmeent as the A","msgtype":"m.text"},"ts":1392159979000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, right.  Yes, you're right.","msgtype":"m.text"},"ts":1392159981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*:matches(!p a) is identical to p:matches(!* a)","msgtype":"m.text"},"ts":1392159996000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's why the original proposal for :matches and :has had two separate pseudo-classes","msgtype":"m.text"},"ts":1392160020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because in :matches(), the condition was just \"there is an element that matches this\", without the # it wasn't linked to the element on which the pseudo was found","msgtype":"m.text"},"ts":1392160057000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":has() was then :matches() with an implied \"#\" at the start of the selector argument","msgtype":"m.text"},"ts":1392160068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(\"!\" is net inferior since it is a subset of the expressiveness, without actually limiting what can be said, it just makes it more verbose, as far as i can tell)","msgtype":"m.text"},"ts":1392160108000,"senderName":"Hixie","senderId":"Hixie@irc"}
]