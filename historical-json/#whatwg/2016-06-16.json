[
{"content":{"body":"so I figured why not read the HTML syntax spec... and it's been a bit tough reading. \"If the current node is an HTML element whose tag name is subject\" - what element has the tag name of subject?","msgtype":"m.text"},"ts":1466043153000,"senderName":"cluelesscoder","senderId":"cluelesscoder@irc"},
{"content":{"body":"reading the adoption agency algorithm?","msgtype":"m.text"},"ts":1466044104000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the text of that one can pretty much be replaced with \"dumbdumbdumbdumbdumbdumbdumbdumbdumb\" with no difference in meaning","msgtype":"m.text"},"ts":1466044128000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I mean you'd have to repeat that a few dozen times to really capture the same semantics, but basically","msgtype":"m.text"},"ts":1466044218000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"unfortunately html doesn't make the rules, it just writes them down","msgtype":"m.text"},"ts":1466044345000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"cluelesscoder: yeah that spec text doesn‚Äôt mean a tag named ‚Äúsubject‚Äù","msgtype":"m.text"},"ts":1466056507000,"senderName":"MikeSmit1","senderId":"MikeSmit1@irc"},
{"content":{"body":"cluelesscoder: not literally ‚Äúsubject‚Äù but instead that‚Äôs a placeholder for whatever the actual tag name is, when that generic algorithm is called on that tag","msgtype":"m.text"},"ts":1466056616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/whatwg/html/pull/1428#issuecomment-226282258 <3","msgtype":"m.text"},"ts":1466059103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what version of node are you using for this? https://github.com/jakearchibald/range-request-test","msgtype":"m.text"},"ts":1466073900000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: v6.2.1 - sorry, I just had to update node on one of my machines to get it working too","msgtype":"m.text"},"ts":1466073937000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: np... just thought I would ask instead of continuing to guess :-)","msgtype":"m.text"},"ts":1466073962000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: updated the readme. Didn't realise I was using new-node stuff when I originally built it.","msgtype":"m.text"},"ts":1466074025000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1466074032000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: weird that brew only has node 5.x","msgtype":"m.text"},"ts":1466074155000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: lmk if it's getting in the way. I can probably avoid whatever feature that requires 6. I think it's the spread operator.","msgtype":"m.text"},"ts":1466074412000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: its fine... I do see the range header in the service worker... but we don't play the video in that case... so something is broken","msgtype":"m.text"},"ts":1466075179000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: CSP headers are relevant only to html resources, right?","msgtype":"m.text"},"ts":1466075209000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"wanderview: but is the range header actually being sent? I don't see it in the server's log","msgtype":"m.text"},"ts":1466075241000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: https://bugs.chromium.org/p/chromium/issues/detail?id=620386","msgtype":"m.text"},"ts":1466075250000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ondras: hmm ask mkwst","msgtype":"m.text"},"ts":1466075255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ondras: currently parsed for all though, maybe‚Ä¶","msgtype":"m.text"},"ts":1466075285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: no... you found the error... its spec'd that way as far as I can tell:  step 5 here https://fetch.spec.whatwg.org/#concept-headers-append","msgtype":"m.text"},"ts":1466075299000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: not sure how the range header appears on the request at all then","msgtype":"m.text"},"ts":1466075356000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, I think media probably does not go through the headers append algorithm in practice... but when you fetch I think we re-append headers, etc","msgtype":"m.text"},"ts":1466075405000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mkwst: ?","msgtype":"m.text"},"ts":1466075408000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"this seems like a similar issue to the client headers stuff. Maybe headers need the concept of \"UA-added\" meaning they bypass some of the checks +annevk","msgtype":"m.text"},"ts":1466075409000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: maybe we can just blame annevk","msgtype":"m.text"},"ts":1466075414000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mkwst: CSP headers are relevant only to html resources, right?","msgtype":"m.text"},"ts":1466075419000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1466075423000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: he is not looking at his computer at the moment... I should probably pay attention to this meeting too","msgtype":"m.text"},"ts":1466075436000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: btw, pub this evening?","msgtype":"m.text"},"ts":1466075459000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes pleae!","msgtype":"m.text"},"ts":1466075468000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"please","msgtype":"m.text"},"ts":1466075469000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1466075476000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm I thought about that, but it seems bad from a security perspective","msgtype":"m.text"},"ts":1466076033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: trying to figure out what we are willing to do about that","msgtype":"m.text"},"ts":1466076075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: some of the institutional knowledge got lost","msgtype":"m.text"},"ts":1466076096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we need to come up with a way to let things like Range headers through. At the moment event.respondWith(fetch(event.request)) breaks","msgtype":"m.text"},"ts":1466076107000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not sure it should from the spec... fetch header list should just be copied across from the original request","msgtype":"m.text"},"ts":1466076162000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I think maybe firefox never provides the response back to the media element in fetch(event.request) case and exact range request","msgtype":"m.text"},"ts":1466076295000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: üòû","msgtype":"m.text"},"ts":1466076415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We'll give ourselves one pint to solve it later","msgtype":"m.text"},"ts":1466076443000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I will look into it next week I suppose","msgtype":"m.text"},"ts":1466076451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1466076455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I can't think of anything better other than \"The UA may add headers that bypass filters\" - because that's effectively what it already does","msgtype":"m.text"},"ts":1466076496000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: can you turn these into WPT tests? :-)","msgtype":"m.text"},"ts":1466076502000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Y'know what, it's been lovely to do a little bit of research on this stuff and have a think about standards. *dev-rel whip cracks* oh yeah gotta a get a talk ready","msgtype":"m.text"},"ts":1466076568000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I'd be happy to do this. Not written one before though","msgtype":"m.text"},"ts":1466076587000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: would just be nice since you are half-way there and clearly there are some bugs here... might help the other browsers get it right the first time they do it too","msgtype":"m.text"},"ts":1466076616000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1466076647000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heycam: what's the status of the Java-specific stuff from within the spec?","msgtype":"m.text"},"ts":1466079245000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it should all have been removed","msgtype":"m.text"},"ts":1466079257000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"a while ago","msgtype":"m.text"},"ts":1466079260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: alright. Just wanted to make sure. :)","msgtype":"m.text"},"ts":1466079286000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: <3","msgtype":"m.text"},"ts":1466080414000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"noticing https://www.linkedin.com/in/h%C3%A5vard-molland-45022b5","msgtype":"m.text"},"ts":1466082366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Haavard Molland moving on","msgtype":"m.text"},"ts":1466082382000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://twitter.com/myriamjessier/status/743412990138028032 ‚ÄúI went into a German conference on web components. I don't speak German. Here are my notes.‚Äù","msgtype":"m.text"},"ts":1466091383000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: WebIDL has ednotes. What would you make those into in bikeshed? Issues?","msgtype":"m.text"},"ts":1466116451000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: e.g.: http://heycam.github.io/webidl/#idl-callback-functions","msgtype":"m.text"},"ts":1466116519000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ah, the \"Editorial note\"?","msgtype":"m.text"},"ts":1466116536000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh yeah, sorry, I was misreading as \"endnotes\"","msgtype":"m.text"},"ts":1466116547000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So yeah, issue.","msgtype":"m.text"},"ts":1466116553000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Either class=issue, or if you're taking advantage of markdown, just start a paragraph with \"Issue: \"","msgtype":"m.text"},"ts":1466116568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh yeah, and newish thing: any webidl in a non-normative block (if it or an ancestor is class=example, class=note, or class=non-normative) will get syntax-highlighted but not linked up. So make sure all your IDL blocks have class=idl and either they or an ancestor has one of the non-normative classes.","msgtype":"m.text"},"ts":1466116701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, saw those improvements, that's awesome.","msgtype":"m.text"},"ts":1466116741000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"While I have your attention, what's your suggestion on how to deal with the grammar?","msgtype":"m.text"},"ts":1466116767000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: i.e., this stuff: http://heycam.github.io/webidl/#prod-Definitions","msgtype":"m.text"},"ts":1466116838000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I don't have an abnf parser yet. (Mike West said he would work on it, BUT HE HAS FAILED TO.)","msgtype":"m.text"},"ts":1466116901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, uh, dunno.","msgtype":"m.text"},"ts":1466116931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'd say use type=type, as that's what we use for CSS grammar non-terminals, but maybe we don't want things to overlap?","msgtype":"m.text"},"ts":1466116958000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm wondering if a type=abnf would work, with a mandatory for='' value.","msgtype":"m.text"},"ts":1466116990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"To algorithm-scope it.","msgtype":"m.text"},"ts":1466116995000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mmm","msgtype":"m.text"},"ts":1466117371000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I guess I need to think about this some more.","msgtype":"m.text"},"ts":1466117532000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"or i do","msgtype":"m.text"},"ts":1466117925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just write it in a pre for now; i'll put \"auto-parse abnf\" on my roadmap for the near future","msgtype":"m.text"},"ts":1466117959000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not hard","msgtype":"m.text"},"ts":1466117961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I like where you're going with this. :)","msgtype":"m.text"},"ts":1466117971000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"What, \"do whatever the easiest thing is, I'll make the hard parts work automatically\"?","msgtype":"m.text"},"ts":1466118010000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1466118025000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1466118028000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1466118028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, it looks like IDL is just using some ad hoc grammar convention.","msgtype":"m.text"},"ts":1466118616000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]