[
{"content":{"body":"Domenic: Did you miss a few onshow wpt tests?","msgtype":"m.text"},"ts":1501222091000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: it's possible, although they would have to be ones Chrome is not running","msgtype":"m.text"},"ts":1501222125000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, you're here","msgtype":"m.text"},"ts":1501222489000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"was expecting async :)","msgtype":"m.text"},"ts":1501222494000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"just trying to make sure I didn't rip out too much code","msgtype":"m.text"},"ts":1501222520000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/blob/master/html/semantics/forms/the-button-element/button-events.html","msgtype":"m.text"},"ts":1501222521000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/blob/master/html/browsers/the-window-object/security-window/window-security.html","msgtype":"m.text"},"ts":1501222533000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/blob/master/html/browsers/the-window-object/window-properties.html","msgtype":"m.text"},"ts":1501222543000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hmm, yeah, those look bad. The first especially needs a decent bit of removal.","msgtype":"m.text"},"ts":1501222578000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"alright, cool, that's good news for me :)","msgtype":"m.text"},"ts":1501222599000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"heads to bed","msgtype":"m.emote"},"ts":1501222628000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: Currently implementing UTS46 proper with all validation rules into whatwg-url and I think the w3c toAscii.json tests are wrong (or impl is wrong, of course). For example, https://github.com/w3c/web-platform-tests/blob/ded8ffe86722118bf035cf2e48c9dbf199aa1f92/url/toascii.json#L16-L20 fails on BiDi rules, since - is neither an L, nor R, nor AL bidi char, I think?","msgtype":"m.text"},"ts":1501232454000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: I don't have the bidi rules in my head","msgtype":"m.text"},"ts":1501232622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://tools.ietf.org/html/rfc5893#section-2","msgtype":"m.text"},"ts":1501232637000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: right and what table should I consult for the hyphen again?","msgtype":"m.text"},"ts":1501232732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: I guess this is further fallout from browsers having an ASCII fast path sigh","msgtype":"m.text"},"ts":1501232763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: if you want me to do the research the best way forward would be to file a bug I think","msgtype":"m.text"},"ts":1501232871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.fileformat.info/info/unicode/char/2D/index.htm says it's in the EN class? I'm not sure if it can be in multiple classes and the site only lists one though","msgtype":"m.text"},"ts":1501232885000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Alright, I'll file a bug","msgtype":"m.text"},"ts":1501232987000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: looking at http://www.unicode.org/reports/tr9/#Bidirectional_Character_Types the classes due to seem exclusive","msgtype":"m.text"},"ts":1501233073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: but it also almost reads as if www.9.com would fail then?","msgtype":"m.text"},"ts":1501233091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is correct. I can probably test that out real quick","msgtype":"m.text"},"ts":1501233174000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"http://www.unicode.org/Public/UNIDATA/UnicodeData.txt is the canonical thing here I think and would indeed classify 9.com as an error","msgtype":"m.text"},"ts":1501233302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suspect we must be missing something or none of this makes sense","msgtype":"m.text"},"ts":1501233325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can confirm. Definitely a failing url...","msgtype":"m.text"},"ts":1501233367000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: ooh wait","msgtype":"m.text"},"ts":1501233428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: I think you're not doing the \"is a bidi domain\" check","msgtype":"m.text"},"ts":1501233439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: \"A Bidi domain name is a domain name containing at least one character with Bidi_Class R, AL, or AN.\"","msgtype":"m.text"},"ts":1501233475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You are correct","msgtype":"m.text"},"ts":1501233488000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1501233489000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"doing the is a bidi domain check makes idnatest.txt fail, of course :(","msgtype":"m.text"},"ts":1501235174000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: FWIW, I really appreciate you doing an independent implementation","msgtype":"m.text"},"ts":1501239639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: all browser vendors have been rather lame thus far","msgtype":"m.text"},"ts":1501239648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh, definitely","msgtype":"m.text"},"ts":1501239685000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Domenic: Filed https://github.com/w3c/web-platform-tests/issues/6652","msgtype":"m.text"},"ts":1501246995000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"JakeA: seems like Firefox perceives the results as intermittent","msgtype":"m.text"},"ts":1501251065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I restarted that job","msgtype":"m.text"},"ts":1501251069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cheers!","msgtype":"m.text"},"ts":1501251469000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA:  do you know of any other sites besides your blog using streams in service workers?","msgtype":"m.text"},"ts":1501251522000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not that your blog isn't great, just looking for more sites to test with","msgtype":"m.text"},"ts":1501251541000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe I already asked you this... my brain is not working great lately","msgtype":"m.text"},"ts":1501251572000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'm not aware of any. It's something Facebook are experimenting with, but nothing public","msgtype":"m.text"},"ts":1501251621000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess rbyers hinted at some streaming google site that is coming, but maybe not with service workers","msgtype":"m.text"},"ts":1501251646000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA I can forward you the doc I saw on this, don't know exact details.","msgtype":"m.text"},"ts":1501251707000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Please!","msgtype":"m.text"},"ts":1501251717000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1501251720000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rbyers: I think we will soon have nightly builds with stream built, but turned off behind a pref... hoping the folks building this google site can test with that","msgtype":"m.text"},"ts":1501251785000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: It's Jake's team that has apparently been working with the site in question, so I hope he can help.","msgtype":"m.text"},"ts":1501251815000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: orly?  maybe I can convince him to tell my why it can't work without streams at all","msgtype":"m.text"},"ts":1501251851000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Streams are usually way faster","msgtype":"m.text"},"ts":1501251887000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"... Jake, it looks like Surma has been working with them?","msgtype":"m.text"},"ts":1501251904000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: Ohhh ok. I guess I'm out of the loop","msgtype":"m.text"},"ts":1501251936000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or my brain's fading","msgtype":"m.text"},"ts":1501251940000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, but what site makes it a *requirement*?  It seems you could polyfil a slower, but functional path instead of blocking current firefox like rbyers said was going to happen","msgtype":"m.text"},"ts":1501251970000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: can you help analyze https://travis-ci.org/w3c/web-platform-tests/jobs/258559653?","msgtype":"m.text"},"ts":1501252005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: it seems like the Firefox bot doesn't have enough time to run all the tests or some such and just calls it quits?","msgtype":"m.text"},"ts":1501252063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... To be clear though, I didn't mean to imply that streams is definitely the reason the site is launching initially Chrome-only (didn't mean to cause you to feel undue pressure wnaderview).  In their long list of \"features we need\" it was the only one I saw that Firefox didn't have yet.  It's possible they have other reasons not stated in the doc I read for choosing to launch Chrome-only.","msgtype":"m.text"},"ts":1501252064000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"wanderview: I guess I'd need to see what they're using it for","msgtype":"m.text"},"ts":1501252070000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rbyers: I guess I didn't know it was chrome-only... I assumed it was not since other browsers have streams API","msgtype":"m.text"},"ts":1501252169000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: FWIW, the only Fx developer that could look into it will be gone until end of August","msgtype":"m.text"},"ts":1501252187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm just working to understand and reduce all the legitimate technical obsticals that Google teams face when trying to make their sites work great across browsers.","msgtype":"m.text"},"ts":1501252190000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"jgraham: would not be fun to block the tests on that","msgtype":"m.text"},"ts":1501252195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: Yeah they have other features on their list for other browsers, eg. WebP for Edge.","msgtype":"m.text"},"ts":1501252216000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: well, the cynical folks would argue its not technical reasons why google sites end up chrome-only...","msgtype":"m.text"},"ts":1501252298000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: streams, webp... really?  how are those functional blockers?  they are optimizations in most cases I am aware of","msgtype":"m.text"},"ts":1501252316000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I don't understand","msgtype":"m.text"},"ts":1501252321000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: you're not alone","msgtype":"m.text"},"ts":1501252574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The problem isn't that the tests don't finish. It's that it seems to get 3 results per test","msgtype":"m.text"},"ts":1501253490000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: how is that possible though?","msgtype":"m.text"},"ts":1501253622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fetch/api/abort/general.html runs the tests once in window, once in a worker and once in a shared worker without distiniguishing them by names","msgtype":"m.text"},"ts":1501253788000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can't do that, so the travis failure is a legit bug","msgtype":"m.text"},"ts":1501253801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In the tests","msgtype":"m.text"},"ts":1501253804000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hooray for travis!","msgtype":"m.text"},"ts":1501253844000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: ohh, is there a best-practice way to work around that?","msgtype":"m.text"},"ts":1501253875000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or shall I just add Worker: to the start of the test name if I detect that global?","msgtype":"m.text"},"ts":1501253905000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, just giving them different names is a good way to go","msgtype":"m.text"},"ts":1501253990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: ta!","msgtype":"m.text"},"ts":1501254004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Yeah, that would work","msgtype":"m.text"},"ts":1501254006000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Cool, cheers!","msgtype":"m.text"},"ts":1501254016000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think there is some existing prior art for this kind of stuff in fetch and cachestorage WPT tests","msgtype":"m.text"},"ts":1501254592000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Yes, lot's of non-technical reasons people could speculate.  But there are _some_ legitimate technical reasons (biggest one IMHO is the cost of additional testing given all the little interop bugs between browsers) and those act as barriers to efforts to try to solve the larger problem (eg. muddy the debate especially for leaders/execs who lack deep technical context).","msgtype":"m.text"},"ts":1501254638000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: isn't testing/supporting across \"the lumpy web\" part of web development?  if a company like google says they aren't going to do that what message does it send to web community in general?","msgtype":"m.text"},"ts":1501254732000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"... So it's my goal to be able to show compelling concrete data about how modern browsers are more interoperable than ever and continuously getting closer, making a compelling argument for why browser-specific-web-design is a relic from the past and today when you build for any modern browser you should assume (except when shown otherwise) your code works for all of them.","msgtype":"m.text"},"ts":1501254784000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"wanderview: Of course I agree.  I personally HATE the idea that anyone (let alone Google) would think it's OK to release a web product for a single browser.","msgtype":"m.text"},"ts":1501254823000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... You're preaching to the choir (I wouldn't be devoting my career to this web predictability thing otherwise).","msgtype":"m.text"},"ts":1501254859000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: I kind of understand realities around things like google earth... but when you tell me that google won't support edge because they don't have webp... honestly that just sounds lazy at best and anti-competitive at worst","msgtype":"m.text"},"ts":1501254913000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: I appreciate your efforts, sorry if I'm frustrated","msgtype":"m.text"},"ts":1501254940000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"... That said, I don't think the problem is as bad as \"google says they aren't going to do that\".  Most Google properties invest a ton in this, and actually those are the ones (not exceptions like Inbox that start off Chrome-only) where I'm trying to invest most of my time - they're already motivated but still struggling.  Eg. google search puts a ton of resources into understand behavior on dozens of different weird","msgtype":"m.text"},"ts":1501254973000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"browsers, eg. all the UC browsers of the developing world that have all sorts of site-specific hacks built into them.","msgtype":"m.text"},"ts":1501254973000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"wanderview: This isn't \"Google\", this is one particular product that historically has so far been native-mobile-only and is finally adding _some_ desktop web support.","msgtype":"m.text"},"ts":1501255086000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... And I totally understand your frustration, definitely feel free to continue venting to me.  I see it as part of my job (because you can sure as hell bet that the product teams in question aren't themselves out here in #whatwg talking about it <grin>).","msgtype":"m.text"},"ts":1501255138000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: people within google like to point out there are separate teams, etc... those of us on the outside have to deal with the reality google is a single company and what it means when it ships sites that are chrome-only...","msgtype":"m.text"},"ts":1501255259000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm thankful all google services are not chrome-only... that is great... but if things like \"doesn't have my favorite image format\" are reasons for chrome-only now it seems like we're moving in the wrong direction","msgtype":"m.text"},"ts":1501255290000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"unless you are building a webp manipulation site or something","msgtype":"m.text"},"ts":1501255298000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Sure, I'm just saying just because one product makes bad choices doesn't mean it's hopeless for all of them...","msgtype":"m.text"},"ts":1501255334000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Changing culture is hard. Even when the culture change is beneficial to the org in question. When it's not so clear cut… well I hope this is a fight we can win.","msgtype":"m.text"},"ts":1501255341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"As proof of this, we've got at least one engineer from the Google search team excited enough to fly to Waterloo in a couple weeks to do the compat hackathon with Mike Taylor and other mozillians.","msgtype":"m.text"},"ts":1501255362000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"something like \"what browsers must we support\" is not a cultural question, IMO... that is something that could pretty clearly be set as policy if google cared to","msgtype":"m.text"},"ts":1501255388000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Right, but policy is part of culture","msgtype":"m.text"},"ts":1501255403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"someone at a certain level in google could say \"don't ship chrome-only sites\"","msgtype":"m.text"},"ts":1501255407000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but they choose not to","msgtype":"m.text"},"ts":1501255410000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Right, I agree. I would like them to do that :)","msgtype":"m.text"},"ts":1501255425000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Right and the question \"should we have a company wide policy for what browser we should support\" is absolutely a culture question to which Google would strongly say \"NO, that's a product question for each team to decide\".","msgtype":"m.text"},"ts":1501255434000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: then I think its fair to say *google* does not necessarily have a culture that values web compat","msgtype":"m.text"},"ts":1501255478000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"But from the other side, someone at Mozilla could declare that we have to put additional effort into compat despite short term cost (e.g. stop writing non-web-platform-tests for platform features) and they don't","msgtype":"m.text"},"ts":1501255499000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: we have shifted most testing to WPT, though","msgtype":"m.text"},"ts":1501255548000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Hah","msgtype":"m.text"},"ts":1501255555000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: is WPT running on android yet?","msgtype":"m.text"},"ts":1501255562000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah frankly I'm kind of surprised that Mozilla of all browsers doesn't yet have an interop testing policy a least as strong as our current (temporarily weak one).","msgtype":"m.text"},"ts":1501255565000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"wanderview: That is true of certain engineers on certain teams, but not in general","msgtype":"m.text"},"ts":1501255575000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: No","msgtype":"m.text"},"ts":1501255589000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: To be fair, we don't run WPT on Android yet either.  But in practice our web platform code is nearly identical on Linux so we haven't seen that cause much problem in practice so I'm OK with it as a temporary pragmatic tradeoff.","msgtype":"m.text"},"ts":1501255641000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... But if we start seeing Android-specific issues slip through at a non-trivial rate, then I'll definitely get it fixed somehow.","msgtype":"m.text"},"ts":1501255662000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"my point is WPT integration is progressing, but there are still some coverage gaps, etc...  we have largely moved to WPT tests for webapi related stuff AFAIK","msgtype":"m.text"},"ts":1501255711000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah, we could get it working on android too. The pieces are there, what's needed is maybe a quater of effort to wire it all up and deal with the inevitable horrorshow of intermittents","msgtype":"m.text"},"ts":1501255714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For context: our requirements for shipping any newly exposed web feature include describing why it isn't yet fully tested with web-platform-tests: https://docs.google.com/document/d/1vlTlsQKThwaX0-lj_iZbVTzyqY7LioqERU8DK3u3XjI/edit#bookmark=id.w8j30a6lypz0.","msgtype":"m.text"},"ts":1501255727000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"jgraham: if there are teams not writing WPT tests let me know... I think it works well enough now we should ask them to switch","msgtype":"m.text"},"ts":1501255736000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I've seen plenty of examples of new features that shipped in Firefox without web platform tests, I could dig some up if you like.  position:sticky is one recent one that comes to mind.","msgtype":"m.text"},"ts":1501255830000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"wanderview: Well the observed reality is that stylo didn't add wpt testing until I fixed that, even though it was trivial. And if you look at the tests we write there are still lots of mochitest-plain and reftests. Which is partially to do with coverage gaps, but if someone decreed we were only going to do wpt and committed more people to the effort, those gaps could be fixed a lot faster","msgtype":"m.text"},"ts":1501255938000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I still write mochitests when I am testing things that require superPowers, weird crash regressions that aren't really about web compat, etc","msgtype":"m.text"},"ts":1501255978000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm playing around with some JS and was looking to see what the specification is around 'expando' properties on DOM/HTML Nodes, but I can't seem to find any info in the HTML, DOM or ECMA-262 specs. It's quite possible it's there and I missed it, but I can't think of the right search terms","msgtype":"m.text"},"ts":1501255991000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"rbyers: I think we just got CSS WPT tests running","msgtype":"m.text"},"ts":1501255992000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Anyway, to get back to my original point, I think Google products only supporting Chrome is a medium-term threat to the multi-vendor open web. But I think that the kind of cultural change that would be required to prevent it ever happening is really hard to achieve.","msgtype":"m.text"},"ts":1501256059000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I am at least very glad that rbyers is trying. I hope it's enough.","msgtype":"m.text"},"ts":1501256101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm worried about the trend... missing features requiring native plugins is one thing... rbyers is now warning us of a new product that is making that decision with a *much* lower bar (webp missing in edge, etc)","msgtype":"m.text"},"ts":1501256127000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and I know rbyers did not intend to apply pressure on our streams implementation... but clearly it does actually apply pressure when a company with sites as big as google say they are going to block your browser","msgtype":"m.text"},"ts":1501256170000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I share your worry. I don't know what to do about it except trying to remove the technical hurdles by e.g. having good cross-browser testing and having a good way of running tests for the sites themselves that works cross-browser.","msgtype":"m.text"},"ts":1501256218000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"even though what I'm talking about is probably obvious to most, I did a example JSfiddle: https://jsfiddle.net/ohzuz1hc/","msgtype":"m.text"},"ts":1501256243000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"trying not to be cynical, but its a short jump to \"implement html imports or we can't support firefox, sorry... chrome-only\"","msgtype":"m.text"},"ts":1501256243000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: Thanks, I'm certainly trying - and it's not just me, lots of people on the web platform team.","msgtype":"m.text"},"ts":1501256264000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"thank you rbyers","msgtype":"m.text"},"ts":1501256280000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"side note as I'm joining in this conversation late, but strategically doesn't Apple's strong presence in mobile mean that any Google property has to work in Safari/WebKit?","msgtype":"m.text"},"ts":1501256338000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"On my original question: the fact that you can set a new property on a JS object is just normal, but the fact that you can set the property, then retrieve the Node from the DOM and the new property (or a copy) is still there is the interesting part","msgtype":"m.text"},"ts":1501256428000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"bloopletech: maybe the expando info you are looking for is covered by webidl [SameObject] and then its use in various other specs? https://heycam.github.io/webidl/#SameObject","msgtype":"m.text"},"ts":1501256454000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think the issue is not specific features like WebP or streams.  I think we can all agree that would be stupid.  But there is a larger legitimate issue here that's more abstract: the cost of building a rich powerful web product that works really great across all browsers is a lot higher than the cost of building the same product for any one browser.  It's on us (the web browser/standards community) to reduce this cost.","msgtype":"m.text"},"ts":1501256455000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: that statement has been true for the entire time I've been involved with web development (so about 2003 onwards ;))","msgtype":"m.text"},"ts":1501256607000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"Frankly I think we've been too complacent on this front historically.  We solve this problem by first looking really critically at ourselves and how we can do better (since we can control that directly).  IMHO It is an absolute embarrassment that the single most popular computing platform in the world doesn't yet really evolve with a good level of software engineering discipline.","msgtype":"m.text"},"ts":1501256621000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"isn't the lack of 'discipline' the exact same reason the web exploded and became a platform in the first place?","msgtype":"m.text"},"ts":1501256702000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"rbyers: what's interesting from the examples (streams, WebP) is those are new features which have precisely been added with the intent to improve the platform and make it more competitive. And yet, because vendors don't sync shippung new features it has a tendency to provoke the opposite, at least during a certain time.","msgtype":"m.text"},"ts":1501256749000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"bloopletech: Perhaps, there's certainly a tension between innovation and careful engineering discipline ;-).  Eg. we could be much more \"disciplined\" about interop by never shipping any feature in Chrome that wasn't also shipping in another browser, but we're not willing to slow down web evolution to that extent.","msgtype":"m.text"},"ts":1501256763000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"yes that is an awesome ideal","msgtype":"m.text"},"ts":1501256786000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"This tension is the crux of the problem, right?","msgtype":"m.text"},"ts":1501256821000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"but I think the W3C requiring 2 competing implementations before standardisation is what killed a number of specs and begat WHATWG in the first place right?","msgtype":"m.text"},"ts":1501256876000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"well that and xhtml","msgtype":"m.text"},"ts":1501256889000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"tobie: Perhaps, it's certainly important.  But just the progress we've made in web predictability on the past year in Chrome suggests there was a lot of win-win value available that we were just missing somehow...","msgtype":"m.text"},"ts":1501256905000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"that's why we work to make APIs feature detectable, etc.  So sites can be Progressive... (something I think google coined an acronym about or something)","msgtype":"m.text"},"ts":1501256931000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sure, but that's still extra work.","msgtype":"m.text"},"ts":1501256969000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"YEah, so I certainly agree that we haven't got to the stage where we can't do better just by solving engineering problems","msgtype":"m.text"},"ts":1501256986000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"welcome to shipping on the platform with the greatest reach that isn't owned by a single company?","msgtype":"m.text"},"ts":1501256993000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: that's a good point. All the investment in wpt for example, increases velocity for everyone and thus tends to reduce that gap.","msgtype":"m.text"},"ts":1501257001000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I mean, this isn't new... we want to improve it over time... but some of this is unavoidable due to the decentralized nature of the web and the fact no one entity controls it","msgtype":"m.text"},"ts":1501257020000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"But it might also be true that just solving eningeering problems isn't enough in the face of a large power imbalance","msgtype":"m.text"},"ts":1501257040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The other question is whether there's still a long term value today in having multiple browser engines, when they're open source and effectively a commodity.","msgtype":"m.text"},"ts":1501257266000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ducks","msgtype":"m.emote"},"ts":1501257271000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I've actually had the same thought privately","msgtype":"m.text"},"ts":1501257295000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"but the popular opinion re cathedral vs bazaar is that the bazaar is a priori better","msgtype":"m.text"},"ts":1501257337000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"phrased differently, does open source trump standardisation at some point or not?","msgtype":"m.text"},"ts":1501257343000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think that servo is an existence proof of the value of having >1 engine, even though it's not yet viable as a standalone product","msgtype":"m.text"},"ts":1501257449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in DOM, Element certainly has \"[SameObject] readonly attribute NamedNodeMap attributes;\" and there's certainly descriptions of how to get and set the attributes etc but AFAICT nothing explicit that the attributes are accessible on the Element itself","msgtype":"m.text"},"ts":1501257449000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"good point","msgtype":"m.text"},"ts":1501257460000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"bloopletech: I think from spec perspective its just a js object... so you can set properties on it... the [SameObject] is what guarantees those properties will persist across API getter calls","msgtype":"m.text"},"ts":1501257520000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bloopletech: but maybe Domenic knows better here","msgtype":"m.text"},"ts":1501257530000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bloopletech: I'm not sure I understand the question","msgtype":"m.text"},"ts":1501257557000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah I am being pedantic for sure, but element.potato is different from element.attributes.potato right? and having just checked the fact that the newly-created property is JS-side only is worth mentioning","msgtype":"m.text"},"ts":1501257587000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"tobie: in this fiddle, you can see one can create a new property on an element dynamically in JS and then later retrieve the property on a new 'instance' of the same Node: https://jsfiddle.net/ohzuz1hc/","msgtype":"m.text"},"ts":1501257644000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"I just cant' find anything spec-wise that explicitly describes the process","msgtype":"m.text"},"ts":1501257662000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"that's just JS","msgtype":"m.text"},"ts":1501257702000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"bloopletech: and it has no relation to the attributes attribute.","msgtype":"m.text"},"ts":1501257749000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ok sure... but the fact that the Element you get back from querySelector has the extra property is because it's literally the same object in memory or whatever?","msgtype":"m.text"},"ts":1501257887000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"bloopletech: yes","msgtype":"m.text"},"ts":1501257897000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"bloopletech: it's the same object","msgtype":"m.text"},"ts":1501257912000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"sure. empirically that's obvious, just didn't realise that was guaranteed. but tbh I didn't even look at the spec of querySelector till now","msgtype":"m.text"},"ts":1501257961000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"bloopletech: that's irrelevant to querySelector","msgtype":"m.text"},"ts":1501257990000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"bloopletech: the DOM tree is constructed at load time and then just sits there.","msgtype":"m.text"},"ts":1501258026000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"bloopletech: querySelector is just a way to easily traverse it.","msgtype":"m.text"},"ts":1501258064000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah now you mention it that's obvious. Because everything is defined as IDL and interfaces, I didn't realise it was spec that there is only one instance of the Node object in the tree for a particular element","msgtype":"m.text"},"ts":1501258175000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"the cool part is that I can definitely abuse this; as opposed to dataset where the values are coerced to strings, I can whack in whatever object I want","msgtype":"m.text"},"ts":1501258308000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"bloopletech: the reason this is avoided is it tends to create references which prevent GC when the nodes are subsequently removed.","msgtype":"m.text"},"ts":1501258408000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah ok, interesting. I mean the other reason is because whatever property name you choose might be clobbered in the future by the spec","msgtype":"m.text"},"ts":1501258453000,"senderName":"bloopletech","senderId":"bloopletech@irc"},
{"content":{"body":"JakeA: I'm happy with the fetch abort tests now, but you should get approval from someone who understands the spec :)","msgtype":"m.text"},"ts":1501258587000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: cheers!","msgtype":"m.text"},"ts":1501258684000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"How is CSSOMString a thing?","msgtype":"m.text"},"ts":1501260247000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Rust","msgtype":"m.text"},"ts":1501260283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, but what does it even mean?","msgtype":"m.text"},"ts":1501260297000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it means USVString in Rust and likely DOMString everywhere else","msgtype":"m.text"},"ts":1501260313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't that an implementation detail, though?","msgtype":"m.text"},"ts":1501260326000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it's observable with lone surrogates","msgtype":"m.text"},"ts":1501260336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where is it defined?","msgtype":"m.text"},"ts":1501260420000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: and how is it defined?","msgtype":"m.text"},"ts":1501260439000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"oh, CSSOM","msgtype":"m.text"},"ts":1501260480000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://drafts.csswg.org/cssom/#cssomstring-type","msgtype":"m.text"},"ts":1501260566000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yup, Rust wanted USVString because it better matches their internals, other browsers wanted DOMString for the same reason, the difference is tiny, so we just used both.","msgtype":"m.text"},"ts":1501260600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I see. Isn't this something that's going to permeate other bits of the platform at some point?","msgtype":"m.text"},"ts":1501260842000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it might, hsivonen wants to do it for DOM too","msgtype":"m.text"},"ts":1501262634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: once we get there we can revisit the name and place of definition","msgtype":"m.text"},"ts":1501262669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure. No hurries.","msgtype":"m.text"},"ts":1501262684000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I was looking at the string stuff and got carried away into this rabbit hole","msgtype":"m.text"},"ts":1501262720000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: JakeA: did the fetch cancelation WPT tests land?","msgtype":"m.text"},"ts":1501270855000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: are we allowed to land them before spec?","msgtype":"m.text"},"ts":1501270990000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess not","msgtype":"m.text"},"ts":1501271002000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I got some more fetch cancel patches from baku and was hoping the spec/tests were finalish","msgtype":"m.text"},"ts":1501271497000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the tests in that branch are good to go","msgtype":"m.text"},"ts":1501271908000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1501271963000,"senderName":"wanderview","senderId":"wanderview@irc"}
]