[
{"content":{"body":"JakeA: FWIW, I'd personally use null for Infra structs since the item is always defined, unless there's a particular need for 2 distinct \"empty\" values.","msgtype":"m.text"},"ts":1533006871000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Thanks all! In this case it's `thing.getRegistration(id)`. I've made it return undefined since it matches what service worker does when getting registrations.","msgtype":"m.text"},"ts":1533027537000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And also because that's what `map.get` does","msgtype":"m.text"},"ts":1533027549000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: in wpt, when one uses non-default domain and does something like iframe.src = \"https://{{domains[www2]}}:{{ports[https][0]}}...\"","msgtype":"m.text"},"ts":1533049217000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what replaces all that {}","msgtype":"m.text"},"ts":1533049225000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or how does that work","msgtype":"m.text"},"ts":1533049235000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: The server does; it reads the data from its configuration file and applies substitutions","msgtype":"m.text"},"ts":1533049352000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If the filename has .sub. in it or you load with ?pipe=sub","msgtype":"m.text"},"ts":1533049366000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so server preprocesses the file?","msgtype":"m.text"},"ts":1533049398000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1533049403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1533049414000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"are async iterables a thing these days yet? I.e. if I want to design an API that asyncronously returns a bunch of entries, what is the best way to express that in WebIDL?","msgtype":"m.text"},"ts":1533076742000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: yes they are a thing. No Web IDL support yet but we can make it happen.","msgtype":"m.text"},"ts":1533079849000,"senderName":"Domenic","senderId":"Domenic@irc"}
]