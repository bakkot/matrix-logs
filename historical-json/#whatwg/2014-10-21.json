[
{"content":{"body":"TabAtkins: it depends whether his name is Dutch, e.g. Swedish would sort under v iirc, but gsnedders is entirely correct when it comes to Dutch :-)","msgtype":"m.text"},"ts":1413873954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nl-NL, that is","msgtype":"m.text"},"ts":1413877392000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hi, are the WebIDL definitions shown on *.spec.whatwg.org available somewhere? I couldn't find them in the GitHub repo","msgtype":"m.text"},"ts":1413883219000,"senderName":"joa_","senderId":"joa_@irc"},
{"content":{"body":"annevk: well, TabAtkins did say Dutch names. So I was assuming he meant Dutch. (But yes, Swedish would sort under \"v\")","msgtype":"m.text"},"ts":1413883965000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"joa_: what do you mean?","msgtype":"m.text"},"ts":1413883986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"joa_: we don't distribute standalone IDL files","msgtype":"m.text"},"ts":1413884000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is there an automated process that generates dom.spec.whatwg.org for instance?","msgtype":"m.text"},"ts":1413884309000,"senderName":"joa_","senderId":"joa_@irc"},
{"content":{"body":"joa_: I write HTML in Overview.src.html, run make, which generates Overview.html, that's it","msgtype":"m.text"},"ts":1413884354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Alright, thank you!","msgtype":"m.text"},"ts":1413884446000,"senderName":"joa_","senderId":"joa_@irc"},
{"content":{"body":"SteveF_: when do you want a response by?","msgtype":"m.text"},"ts":1413889349000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: end of week or start of next would be good","msgtype":"m.text"},"ts":1413891255000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"SteveF_: right, sure thing","msgtype":"m.text"},"ts":1413891403000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Thanks!","msgtype":"m.text"},"ts":1413891424000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"me/ was looking at your flickr photos from TPAC 2008 and reminiscing","msgtype":"m.text"},"ts":1413891579000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"'08? I was thinking it was '09. But I guess it must've been '08, wow.","msgtype":"m.text"},"ts":1413891598000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's kinda sad I've not managed to make it since. Oh well, maybe next yearâ€¦","msgtype":"m.text"},"ts":1413891861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Guess we'll find out where it's planned to be soon enoguh","msgtype":"m.text"},"ts":1413891910000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*enough","msgtype":"m.text"},"ts":1413891914000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/2015/11/TPAC/","msgtype":"m.text"},"ts":1413891965000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sapporo.","msgtype":"m.text"},"ts":1413891972000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"oooh!","msgtype":"m.text"},"ts":1413891996000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I was /going/ to say I'd only definitely go if it were in Europe. But okay, maybe you have me.","msgtype":"m.text"},"ts":1413892011000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Haven't been to Hokkaido yet. This is a good excuse.","msgtype":"m.text"},"ts":1413892196000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Don't tempt me to try and get there without flying. :)","msgtype":"m.text"},"ts":1413893151000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I've done 80% of the overland route before. Highly recommended.","msgtype":"m.text"},"ts":1413893233000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"idk, it's more the whole perception and legality of LGBT people in Russia that makes me uneasy about doing so","msgtype":"m.text"},"ts":1413893259000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Valid point.","msgtype":"m.text"},"ts":1413893442000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"That's the sort of reason that actually puts me off from doing so. The other stuff just makes it difficult.","msgtype":"m.text"},"ts":1413893479000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: ping?","msgtype":"m.text"},"ts":1413896316000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: here","msgtype":"m.text"},"ts":1413896323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can I get you to explain the expected results for this test: http://intertwingly.net/stories/2014/10/16/urltest-results/61a4a14209 ?","msgtype":"m.text"},"ts":1413896340000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I get the same results as ie, opera, and rust.","msgtype":"m.text"},"ts":1413896428000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah, per spec it is \"0xc0.0250.01\" at the moment","msgtype":"m.text"},"ts":1413896454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can update web-platform-tests if you want","msgtype":"m.text"},"ts":1413896489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One more question first: http://intertwingly.net/stories/2014/10/16/urltest-results/f3382f1412","msgtype":"m.text"},"ts":1413896519000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Background on why I'm asking: I have a JavaScript implementation that passes 254/256 tests.  I should be ready to post it today or tomorrow.","msgtype":"m.text"},"ts":1413896605000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: per the specification parsing that should return failure, the reason being that there's a % left in step 6 of the host parser afaict","msgtype":"m.text"},"ts":1413896679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: so results for testdata seem correct","msgtype":"m.text"},"ts":1413896716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I get \"0xc0.0250.01.\"","msgtype":"m.text"},"ts":1413896740000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"\"%3g\" should remain \"%3g\" afaict","msgtype":"m.text"},"ts":1413896762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How do you normalize that away?","msgtype":"m.text"},"ts":1413896770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my bad, I pointed to the wrong test.  This is the one I meant: http://intertwingly.net/stories/2014/10/16/urltest-results/bc6ea8bdf8","msgtype":"m.text"},"ts":1413896778000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Isn't 0xc0.0250.01. what testdata says?","msgtype":"m.text"},"ts":1413896827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm.  looks like it.  Let me check","msgtype":"m.text"},"ts":1413896896000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"ok, found the bug in my code; now I have 255/256 tests passing, and you agree on the one failure","msgtype":"m.text"},"ts":1413897622000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1413897650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(seems like we need more tests)","msgtype":"m.text"},"ts":1413897678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"always :-)","msgtype":"m.text"},"ts":1413897688000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"my code is probably very buggy in that I did test-driven development, only consulting the spec when I had questions.  I also have more work to do in encoding, but it is at the point that it is worth publishing for discussion.","msgtype":"m.text"},"ts":1413897750000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"it also may be worth mining for ideas in the upcoming spec functional rewrite","msgtype":"m.text"},"ts":1413897822000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"meanwhile, a sneak peek: http://intertwingly.net/stories/2014/10/20/Url.xhtml","msgtype":"m.text"},"ts":1413897859000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: you have your own tool or is that bikeshed?","msgtype":"m.text"},"ts":1413897922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://pegjs.majda.cz/ => https://twitter.com/peg_js/status/329493915881320448 => http://bottlecaps.de/convert/","msgtype":"m.text"},"ts":1413897995000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Note that with functional I didn't necessarily mean declarative","msgtype":"m.text"},"ts":1413898010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let's discuss when I have something concrete posted, should be today or tomorrow","msgtype":"m.text"},"ts":1413898061000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"the grammar I've developed is only a small part, there is a lot of logic, and a Url class.","msgtype":"m.text"},"ts":1413898118000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"in the process, all flags are eliminated, and with only one exception, the only scheme checks are of the form \"if (this.scheme == base.scheme)\"","msgtype":"m.text"},"ts":1413898175000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"but again, it will be easier to discuss with running code.","msgtype":"m.text"},"ts":1413898214000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"You have the API implemented as well?","msgtype":"m.text"},"ts":1413898230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Get back to work, then ;)","msgtype":"m.text"},"ts":1413898236000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The \"relative flag\" is mostly for the API","msgtype":"m.text"},"ts":1413898238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"parts of the API.  I should be able to do all of the \"setters\" without a flag.","msgtype":"m.text"},"ts":1413898278000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I wonder if the POSIX DNS layer also does the crazy IPv4 parsing inside IPv6...","msgtype":"m.text"},"ts":1413898463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pretty sure POSIX leaves most of it undefined","msgtype":"m.text"},"ts":1413898531000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's somewhat annoying we rely on such a subsystem","msgtype":"m.text"},"ts":1413898989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fortunately it mostly works","msgtype":"m.text"},"ts":1413898997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That was easier than I thought it would be: http://intertwingly.net/projects/pegurl/liveview.html","msgtype":"m.text"},"ts":1413902221000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1413904073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: peg?","msgtype":"m.text"},"ts":1413904094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://pegjs.majda.cz/ I presume","msgtype":"m.text"},"ts":1413904605000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://intertwingly.net/blog/2014/10/21/pegurl-js","msgtype":"m.text"},"ts":1413904688000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"doh","msgtype":"m.text"},"ts":1413905006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: it's a bit unclear to me how you envision those railroad diagrams to become the normative part of the spec","msgtype":"m.text"},"ts":1413905348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did I say normative?  What I meant was to follow the lead of CSS.","msgtype":"m.text"},"ts":1413905424000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Ah okay, this would be for the URL writing section?","msgtype":"m.text"},"ts":1413905467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Possibly.  However these diagrams also capture invalid URL productions too.  Needs more thought.","msgtype":"m.text"},"ts":1413905501000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Just looked at http://dev.w3.org/csswg/css-syntax/ again, I guess I see what you mean","msgtype":"m.text"},"ts":1413905569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm assuming that you won't be in the bay area next week?","msgtype":"m.text"},"ts":1413905611000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1413905625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bummer","msgtype":"m.text"},"ts":1413905635000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I'm in Portland Dec 1-6, that's it for work travel this year","msgtype":"m.text"},"ts":1413905658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At this point, I'm quite willing to commit to putting substantial effort into contributing to the WHATWG URL Standard; any guidance on how to do that without ruffling feathers or wasting anybody's time would be appreciated.","msgtype":"m.text"},"ts":1413905778000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I want railroad diagrams. I want to switch to Bikeshed. I'm not sure if railroad diagrams should just be for writing or should be for the parser or for both.","msgtype":"m.text"},"ts":1413905820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The way I was thinking of rewriting the parser would be in the form of several functions, each parsing its own bit, operating on the same underlying input string and buffers. With the option for some of those functions to be invoked standalone so the API can use them.","msgtype":"m.text"},"ts":1413905890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"None of this I'm actively working on at the moment. I do actively fix API bugs as that's actually implemented.","msgtype":"m.text"},"ts":1413905932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my parser is a set of functions, each returning back a POJO (corresponding to a dictionary or hash in other languages)","msgtype":"m.text"},"ts":1413905944000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Unless you strongly object, I'll try to produce a number of pull requests.  Be forewarned: some might be substantial.  We can use github facilities to discuss the pull requests.","msgtype":"m.text"},"ts":1413906129000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I certainly won't object to getting PRs :-)","msgtype":"m.text"},"ts":1413906228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cool.  This will likely fill my dead time on the plane ride to the left coast on Sunday.","msgtype":"m.text"},"ts":1413906328000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: I currently only use railroad diagrams for non-normative illustrations of syntax.","msgtype":"m.text"},"ts":1413906770000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think that makes sense, I wouldn't want to use them for something else personally","msgtype":"m.text"},"ts":1413906799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They could probably be used normatively, but you need something with real grammar, as they're not good for error-correcting grammars.","msgtype":"m.text"},"ts":1413906802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There isn't much error correcting in the URL grammar; most of it is in dealing with mal-formed URLs with an @ sign in them.","msgtype":"m.text"},"ts":1413907117000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Any error-correction usually pushes the actual accepting grammar to excessive wideness/verbosity to be usefully expressed as a railroad diagram.","msgtype":"m.text"},"ts":1413907314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You don't have to be as extreme as HTML or CSS, whose accepting grammars are .*","msgtype":"m.text"},"ts":1413907335000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't see much of that in URL.  http://intertwingly.net/stories/2014/10/20/Url.xhtml","msgtype":"m.text"},"ts":1413907567000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I only see @ showing up in one production in the whole thing.  That right?","msgtype":"m.text"},"ts":1413907634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The error-correction is done elsewhere.  Search for '@' in http://intertwingly.net/projects/pegurl/url.pegjs","msgtype":"m.text"},"ts":1413907695000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"JakeA: public-webapps high-five","msgtype":"m.text"},"ts":1413907785000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Note: that logic also contains the \"prepend %40\" that I believe is unnecessary for web compat.  Example: http://intertwingly.net/stories/2014/10/16/urltest-results/1bdb1f0518","msgtype":"m.text"},"ts":1413907804000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"TabAtkins: any guidance on what it would take to convert a document from Anolis to Bikeshed?","msgtype":"m.text"},"ts":1413907865000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: Most of Anolis converts to Bikeshed just fine, as Anolis is *also* derived from Bert's preprocessor.  The big problem is linking, because anolis is really verbose about it.","msgtype":"m.text"},"ts":1413907926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That said, I find converting things to be relaxing, and would be happy to help.","msgtype":"m.text"},"ts":1413907938000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bikeshed seems to be the path of least resistance to incorporating railroad diagrams; at the moment, however, I know neither Anolis nor Bikeshed, but I learn fast :-).","msgtype":"m.text"},"ts":1413908029000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: something like http://@@@test.com seems interoperable between Firefox and Chrome","msgtype":"m.text"},"ts":1413908036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: not sure why that test fails in Firefox, might be related to the leading ::","msgtype":"m.text"},"ts":1413908053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll note that http://@@@test.com doesn't require pre-pending; merely percent encoding.","msgtype":"m.text"},"ts":1413908136000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"It's the active reordering that seems wrong to me.","msgtype":"m.text"},"ts":1413908207000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: if you don't do that you'd have to process the string twice, no?","msgtype":"m.text"},"ts":1413909243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm but that's already the case","msgtype":"m.text"},"ts":1413909273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: I guess if you use a different encode set that could work","msgtype":"m.text"},"ts":1413909704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll experiment and make a concrete proposal.","msgtype":"m.text"},"ts":1413909764000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"One thing I like about the grammar I produced is that it makes quirks more easy to spot.","msgtype":"m.text"},"ts":1413909944000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Example of clean:","msgtype":"m.text"},"ts":1413909961000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    if (scheme) {       result.scheme = scheme[0].toLowerCase()     } else {       result.scheme = base.scheme     }","msgtype":"m.text"},"ts":1413909964000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Example of ugly:","msgtype":"m.text"},"ts":1413909969000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    host = host.split('@');     result.host = host.pop();     if (host.length > 0) {       if (!auth) auth = {username: ''}       if (auth.password != null) {         auth.password += Array(host.length+1).join(\"%40\")+host.join('')       } else {         auth.username += Array(host.length+1).join(\"%40\")+host.join('')       }     };","msgtype":"m.text"},"ts":1413909977000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Note: in my implementation, I don't process the string twice, instead I do a fixup after parsing.","msgtype":"m.text"},"ts":1413910052000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"... but as long as I get the same results, all should be good, right?","msgtype":"m.text"},"ts":1413910086000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Hmmm.  Why doesn't the URL Standard include \"Conformance requirements phrased as algorithms or specific steps may be implemented in any   manner, so long as the end result is equivalent. (In particular, the algorithms defined in this   specification are intended to be easy to follow, and not intended to be performant.)\", like the HTML spec does?","msgtype":"m.text"},"ts":1413910243000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Domenic: :D just read your email","msgtype":"m.text"},"ts":1413910401000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rubys: my guess is an oversight. I love that text.","msgtype":"m.text"},"ts":1413910567000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: how do i get a @thestreamsstandard bot","msgtype":"m.text"},"ts":1413910575000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/whatwg/url/pull/7","msgtype":"m.text"},"ts":1413911397000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Domenic: register the twitter account and set up a github hook","msgtype":"m.text"},"ts":1413912137000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: is there a built-in GitHub hook?","msgtype":"m.text"},"ts":1413912151000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/streams/settings/hooks/new?service=twitter yep","msgtype":"m.text"},"ts":1413912174000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"well that's nice and easy","msgtype":"m.text"},"ts":1413912184000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I hereby call dibs on at least one (1) Streams sticker btw","msgtype":"m.text"},"ts":1413912235000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1413912381000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Aight, well, pretty boring right now, but https://twitter.com/streamsstandard","msgtype":"m.text"},"ts":1413913726000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is lists.whatwg.org down?","msgtype":"m.text"},"ts":1413916864000,"senderName":"pluma","senderId":"pluma@irc"},
{"content":{"body":"@TabAtkins: FATAL ERROR: IDL SYNTAX ERROR LINE: 10 - skipped: \"iterable<USVString, USVString>\"","msgtype":"m.text"},"ts":1413917044000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"pluma: yes, permanently","msgtype":"m.text"},"ts":1413918605000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: but the list still exists?","msgtype":"m.text"},"ts":1413918621000,"senderName":"pluma","senderId":"pluma@irc"},
{"content":{"body":"hober: I just want to make sure I don't need to unsubscribe.","msgtype":"m.text"},"ts":1413918847000,"senderName":"pluma","senderId":"pluma@irc"},
{"content":{"body":"pluma: yup, list is still up. archives are at lists.w3.org/Archives/Public/public-whatwg-archive/latest","msgtype":"m.text"},"ts":1413919162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pluma: if you want to unsubscribe, there should be an e-mail address in the e-mails from the list","msgtype":"m.text"},"ts":1413919185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, but I subscribed with an alias, so it'd have been easier to unsubscribe via the web interface.","msgtype":"m.text"},"ts":1413919576000,"senderName":"pluma","senderId":"pluma@irc"},
{"content":{"body":"Hixie: I'll do it the old-fashioned way then.","msgtype":"m.text"},"ts":1413919629000,"senderName":"pluma","senderId":"pluma@irc"},
{"content":{"body":"pluma: you can actually get to lists.whatwg.org if you really want to, you just need to clear your cache entirely first (or use a browser that's never visited *.whatwg.org)","msgtype":"m.text"},"ts":1413920488000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pluma: the underlying problem is we don't have a way to make lists.whatwg.org work over https, because dreamhost","msgtype":"m.text"},"ts":1413920506000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks, but I already unsubscribed via mail.","msgtype":"m.text"},"ts":1413920542000,"senderName":"pluma","senderId":"pluma@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1413920555000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rubys: Sorry, haven't yet updated Bikeshed to the new idl stuff.  I'm pretty sure plinss has fixed those in widlparser, one sec while I pull it down.","msgtype":"m.text"},"ts":1413920892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: Okay, updated.  Pull the new stuff down and see if it worked; if not, I'll bug plinss to update.","msgtype":"m.text"},"ts":1413920998000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"@TabAtkins: on to the next error.","msgtype":"m.text"},"ts":1413921145000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"FATAL ERROR: Functions/methods must end with () in their linking text, got 'dom-URL'.","msgtype":"m.text"},"ts":1413921155000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"looking to see if I can figure this one out myself","msgtype":"m.emote"},"ts":1413921165000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Now you're running into the \"anolis has a weird data-model for links\" thing that the conversion will have trouble with.","msgtype":"m.text"},"ts":1413921196000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thing like <span title=dom-URL>?","msgtype":"m.text"},"ts":1413921232000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1413921237000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what should that look like?  I'm good with global search and replace.","msgtype":"m.text"},"ts":1413921252000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Well, move the dom-URL into the ID, then either remove the title or set it to \"URL()\".","msgtype":"m.text"},"ts":1413921301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That way you can autolink to it with just {{URL()}}","msgtype":"m.text"},"ts":1413921311000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, I think I need to spend some quality time with the bikeshed docs.","msgtype":"m.text"},"ts":1413921374000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah, Bikeshed's autolinking stuff is rich and easy to use when you start with it, but converting from something with different semantics can be a little tricky.","msgtype":"m.text"},"ts":1413921419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I'm about to head to lunch if you want me to help.)","msgtype":"m.text"},"ts":1413921429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll try to get as far as I can.  I can always look at the anolis output for clues as to what the desired output should look like.","msgtype":"m.text"},"ts":1413921471000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"anyone know anything about registerElement()?","msgtype":"m.text"},"ts":1413924468000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm trying to figure out http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=3270","msgtype":"m.text"},"ts":1413924482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I kind of do","msgtype":"m.text"},"ts":1413924486000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"specifically, why chrome says e.g. firstChild is on that x-foo element","msgtype":"m.text"},"ts":1413924500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1413924512000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Chrome has shitty WebIDL support","msgtype":"m.text"},"ts":1413924516000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"They have been trying to move to accessors on the prototype for years","msgtype":"m.text"},"ts":1413924524000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and failing due to perf regressions","msgtype":"m.text"},"ts":1413924530000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there are epic bugthreads with patches being added and reverted all over the place","msgtype":"m.text"},"ts":1413924542000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok so if it shouldn't have any of Element or Node on that x-foo element, in what sense is that element an element?","msgtype":"m.text"},"ts":1413924569000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wait maybe i missed the question","msgtype":"m.text"},"ts":1413924603000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"could you do document.registerElement('x-bar', WebSocket) ?","msgtype":"m.text"},"ts":1413924620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah sorry you are using for-in not Object.keys so I was talking about something compleeeetely different","msgtype":"m.text"},"ts":1413924641000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"interesting i see what you're saying now","msgtype":"m.text"},"ts":1413924667000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i thought there was a requirement to have HTMLElement in your proto chain","msgtype":"m.text"},"ts":1413924679000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe it fails soft","msgtype":"m.text"},"ts":1413924686000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"spec-reading time","msgtype":"m.text"},"ts":1413924688000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i don't see anything in the spec that would fix it up or enforce it, unless you pass null","msgtype":"m.text"},"ts":1413924709000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then it defaults to HTMLElement","msgtype":"m.text"},"ts":1413924712000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1413924816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i am having a hard time with all the terms","msgtype":"m.text"},"ts":1413924825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"interface prototype object\" etc.","msgtype":"m.text"},"ts":1413924828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah it's webidl-speak","msgtype":"m.text"},"ts":1413924834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's weird but the thing that hurts me the most reading that spec is the capitalisation of all the variables","msgtype":"m.text"},"ts":1413924854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1413924869000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i'm going to call that a failed experiment","msgtype":"m.text"},"ts":1413924877000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm Chrome people say that is related to the instance-not-prototype bug.","msgtype":"m.text"},"ts":1413925036000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so, Chrome bug.","msgtype":"m.text"},"ts":1413925085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so if i do document.registerElement('x-bar', WebSocket), and i call my constructor, does it, like, open a TCP connection somewhere?","msgtype":"m.text"},"ts":1413925113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"The prototype is already in-use as an interface prototype object\"","msgtype":"m.text"},"ts":1413925188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, ok","msgtype":"m.text"},"ts":1413925189000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, it'll just grab WebSocket.prototype","msgtype":"m.text"},"ts":1413925190000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, and maybe fail because of that","msgtype":"m.text"},"ts":1413925199000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wonders why blink still has the perf issue with prototypes","msgtype":"m.emote"},"ts":1413925211000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess blink could take Gecko's Webidl bindings ;)","msgtype":"m.text"},"ts":1413925267000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's so embarassing","msgtype":"m.text"},"ts":1413925297000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"[NoInterfaceObject, Exposed=(Window,Worker)] is a bit confusing.","msgtype":"m.text"},"ts":1413925942000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: why?","msgtype":"m.text"},"ts":1413926180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"exposed\" apparently doesn't mean \"exposed as a property on the global\" like I assumed it would.","msgtype":"m.text"},"ts":1413926238000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i think it maybe depends on how the interface is then used?","msgtype":"m.text"},"ts":1413926403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. if you say A implements B, but B isn't exposed, then B won't be imported?","msgtype":"m.text"},"ts":1413926414000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could be wrong","msgtype":"m.text"},"ts":1413926417000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it looks like it's more \"contexts the interface can be used in\" rather than \"contexts it is exposed as a global property\"","msgtype":"m.text"},"ts":1413926647000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's also possible i used it wrong","msgtype":"m.text"},"ts":1413926721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm actually looking at URLUtils","msgtype":"m.text"},"ts":1413926763000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1413926964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: Before I comment on es-discuss, I'm totally confused about the Function.prototype[Symbol.referenceGet] value.","msgtype":"m.text"},"ts":1413927571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's what makes iterable::map(fn) work","msgtype":"m.text"},"ts":1413927589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In the other objects, the @@referenceGet property is a function that *does* something when you pass it the base value.","msgtype":"m.text"},"ts":1413927599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it doesn't seem to do anything for generic functions.","msgtype":"m.text"},"ts":1413927606000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The function ignores base and just returns the function?","msgtype":"m.text"},"ts":1413927615000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh wait, never mind.","msgtype":"m.text"},"ts":1413927626000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's just the iterable::map part.  The () part then *calls* that function.","msgtype":"m.text"},"ts":1413927641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No, wait, still confused.","msgtype":"m.text"},"ts":1413927664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1413927677000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"should it be return this.bind(base)?","msgtype":"m.text"},"ts":1413927683000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think it needs to be, yeah.","msgtype":"m.text"},"ts":1413927691000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Otherwise there's no way for base to get intot he function.","msgtype":"m.text"},"ts":1413927703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/zenparsing/es-abstract-refs/issues/4","msgtype":"m.text"},"ts":1413927707000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, cool, someone else caught it.","msgtype":"m.text"},"ts":1413927733000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not crazy, then.","msgtype":"m.text"},"ts":1413927741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah somehow i just skipped over it and saw what i wanted to see","msgtype":"m.text"},"ts":1413927777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there something special in ES that makes the foo.bar() form work, with `foo` bound to `this`?","msgtype":"m.text"},"ts":1413927924000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe it was meant to invoke that somehow.","msgtype":"m.text"},"ts":1413927930000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I don't know my way around the ES spec's very indirect definitions to find this out myself. It's a very confusing spec to read.)","msgtype":"m.text"},"ts":1413928052000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"something special?","msgtype":"m.text"},"ts":1413928166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in what sense?","msgtype":"m.text"},"ts":1413928169000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Like, foo.bar just returns the value of the \"bar\" property on \"foo\".  But invoking it immediately, with foo.bar(), has the side-effect of binding foo to the \"this\" variable inside of bar.","msgtype":"m.text"},"ts":1413928245000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So maybe it was intended that foo::bar() have the same magic.","msgtype":"m.text"},"ts":1413928266000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-evaluatecall","msgtype":"m.text"},"ts":1413928315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So the function returned by bar[Symbol.referenceGet](foo) (what the foo::bar syntax decomposes to) is also soft-bound to foo.","msgtype":"m.text"},"ts":1413928321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And nah, if it's anything like https://people.mozilla.org/~jorendorff/es6-draft.html#sec-evaluatecall, it's meant to provide a convenient syntax for extracting bound methods too","msgtype":"m.text"},"ts":1413928354000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm although it's not that convenient if you can't omit the first part","msgtype":"m.text"},"ts":1413928383000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bind operator gives var bound = ::obj.method;","msgtype":"m.text"},"ts":1413928391000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this proposal only has var bound = obj::obj.method;","msgtype":"m.text"},"ts":1413928399000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This isn't really a binding operator.","msgtype":"m.text"},"ts":1413928436000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure it's supposed to be a generalization of it","msgtype":"m.text"},"ts":1413928452000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and of relationships","msgtype":"m.text"},"ts":1413928456000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"in both cases being a little more awkward than the original","msgtype":"m.text"},"ts":1413928465000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean that it doesn't do binding at all.  It does \"application of functions to objects in ltr order rather than nesting order\".","msgtype":"m.text"},"ts":1413928522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which happens to accomplish something very similar to the old bind operator.","msgtype":"m.text"},"ts":1413928535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it works alone","msgtype":"m.text"},"ts":1413928566000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"var bound = obj::obj.method;","msgtype":"m.text"},"ts":1413928571000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Sure, it accomplishes that.  (Though not as written, due to the probably-mistaken default implementation.)","msgtype":"m.text"},"ts":1413928635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so uh","msgtype":"m.text"},"ts":1413929840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you define properties in es6 classes?","msgtype":"m.text"},"ts":1413929851000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is that not a thing?","msgtype":"m.text"},"ts":1413929854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"get x() { ... } set x(v) { ... }","msgtype":"m.text"},"ts":1413929920000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"is that not in the spec?","msgtype":"m.text"},"ts":1413929936000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"es6 classes are just silly syntax, bah!","msgtype":"m.text"},"ts":1413929937000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i can't find it anywhere","msgtype":"m.text"},"ts":1413929938000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-method-definitions","msgtype":"m.text"},"ts":1413929954000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1413930025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i assumed \"method\" meant, like, method :-P","msgtype":"m.text"},"ts":1413930033000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1413930037000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah :-/","msgtype":"m.text"},"ts":1413930062000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"how about constructors?","msgtype":"m.text"},"ts":1413930169000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are those still in?","msgtype":"m.text"},"ts":1413930171000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't see those either","msgtype":"m.text"},"ts":1413930175000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even in methods!","msgtype":"m.text"},"ts":1413930177000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the constructor property of a class","msgtype":"m.text"},"ts":1413930187000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"or is it just a method called \"constructor\"","msgtype":"m.text"},"ts":1413930193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bingo","msgtype":"m.text"},"ts":1413930199000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1413930204000,"senderName":"Hixie","senderId":"Hixie@irc"}
]