[
{"content":{"body":"Can whatwg provide off site notification support?","msgtype":"m.text"},"ts":1458558299000,"senderName":"mohsen_","senderId":"mohsen_@irc"},
{"content":{"body":"mohsen_: not sure what that means","msgtype":"m.text"},"ts":1458558458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Receiving notification when the browser is closed","msgtype":"m.text"},"ts":1458558597000,"senderName":"mohsen_","senderId":"mohsen_@irc"},
{"content":{"body":"mohsen_: the unload event provides that","msgtype":"m.text"},"ts":1458558993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" Do you have an example for that?","msgtype":"m.text"},"ts":1458559032000,"senderName":"mohsen_","senderId":"mohsen_@irc"},
{"content":{"body":"mohsen_: window.onunload = ...","msgtype":"m.text"},"ts":1458561355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No I mean after that, when the browser is closed, the user still receive notifications from server.","msgtype":"m.text"},"ts":1458561610000,"senderName":"mohsen_","senderId":"mohsen_@irc"},
{"content":{"body":"mohsen_: oh, https://w3c.github.io/push-api/","msgtype":"m.text"},"ts":1458561739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone know how to suppress a bikeshed IDL LINK ERROR?","msgtype":"m.text"},"ts":1458563794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll ignore it for now","msgtype":"m.text"},"ts":1458563907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, ShadowRoot is in dom spec now","msgtype":"m.text"},"ts":1458566452000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"good good","msgtype":"m.text"},"ts":1458566456000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It's quite a bit of work, but slowly getting there","msgtype":"m.text"},"ts":1458566502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: wouldn't it make sens to have an abstract operation in Permissions-API to request permission if the request permission state returns \"prompt\"? I'm seeing everyone come up with roughly the same boilerplate for this.","msgtype":"m.text"},"ts":1458566634000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: wdym?","msgtype":"m.text"},"ts":1458569984000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir:  retrieving the permission state, returns one of \"granted\", \"denied\" or \"prompt\"","msgtype":"m.text"},"ts":1458570899000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"mounir: \"granted\" let's you go ahead with whatever it was you wanted to do.","msgtype":"m.text"},"ts":1458570932000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: sounds reasonable","msgtype":"m.text"},"ts":1458570947000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: \"denied\" pretty much forces you to throw/reject with a NotAllowedError","msgtype":"m.text"},"ts":1458571003000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I would leave that to the implementation","msgtype":"m.text"},"ts":1458571029000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: arguably","msgtype":"m.text"},"ts":1458571052000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I guess we could have two algorithms: one basic that checks the permission and return the result","msgtype":"m.text"},"ts":1458571077000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: and \"prompt\" pretty much asks you to do a little dance prompting the user (or some such)","msgtype":"m.text"},"ts":1458571085000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"one that \"do X if allowed\" and rejects otherwise","msgtype":"m.text"},"ts":1458571090000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"some specs wouldn't","msgtype":"m.text"},"ts":1458571112000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"background-sync so far is a UA permission for example","msgtype":"m.text"},"ts":1458571127000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"as in not in the user's face","msgtype":"m.text"},"ts":1458571131000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"Curious as to what is being discussed? :)","msgtype":"m.text"},"ts":1458571165000,"senderName":"tilal6991","senderId":"tilal6991@irc"},
{"content":{"body":"mounir: I'm not suggesting *all* specs should do the same, but a lot do something similar, eg midi: http://webaudio.github.io/web-midi-api/#dfn-algorithm-to-request-midi-access","msgtype":"m.text"},"ts":1458571206000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tilal6991: a common abstract operation to ask for use permission in case the return value of the  request permission state abstract operation is \"prompt\".","msgtype":"m.text"},"ts":1458571324000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: interested in writing it? :)","msgtype":"m.text"},"ts":1458571359000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"tobie: I see. If you do write it ^ have fun :P","msgtype":"m.text"},"ts":1458571394000,"senderName":"tilal6991","senderId":"tilal6991@irc"},
{"content":{"body":"mounir: well, I have to write it for the sensor API, so I might as well write it for the permissions API. :)","msgtype":"m.text"},"ts":1458571427000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I take PR :)","msgtype":"m.text"},"ts":1458571446000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir and I did a lot of that work on the permissions code last summer. Haven't looked at it for a while though so not sure what state it's in","msgtype":"m.text"},"ts":1458571505000,"senderName":"tilal6991","senderId":"tilal6991@irc"},
{"content":{"body":"tilal6991: I tihnk tobie is mostly interested about the spec :)","msgtype":"m.text"},"ts":1458571737000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"Oh I misunderstood. Still figuring out the interaction with requests would be interesting.","msgtype":"m.text"},"ts":1458571805000,"senderName":"tilal6991","senderId":"tilal6991@irc"},
{"content":{"body":"tilal6991, mounir: well, spec, sure; but I also want to make sure it can be easily implemented as one of the Intel guys working on this is about to send an intent to implement","msgtype":"m.text"},"ts":1458571831000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: in Chromium, it should be fine","msgtype":"m.text"},"ts":1458571885000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: awesome","msgtype":"m.text"},"ts":1458571921000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tilal6991: can Riju ping you if he has issues/questions around this?","msgtype":"m.text"},"ts":1458571946000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: have we considered exposing shadom dom only in secure contexts ?","msgtype":"m.text"},"ts":1458571949000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"shadow dom and custom elments","msgtype":"m.text"},"ts":1458571957000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"elements","msgtype":"m.text"},"ts":1458571961000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I don't think we have","msgtype":"m.text"},"ts":1458571967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I would be okay with that, file an issue against w3c/webcomponents?","msgtype":"m.text"},"ts":1458572005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"files a bug. Something to consider at least","msgtype":"m.emote"},"ts":1458572006000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well sure but I've been out of chromium for a little while now. mounir would be the better person to ask since he owns the code but I can chip in sure","msgtype":"m.text"},"ts":1458572024000,"senderName":"tilal6991","senderId":"tilal6991@irc"},
{"content":{"body":"tobie: Riju should feel free to ping me","msgtype":"m.text"},"ts":1458572062000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"tilal6991: noted. thanks","msgtype":"m.text"},"ts":1458572063000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"mounir: noted.","msgtype":"m.text"},"ts":1458572073000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"mounir: where's \"permission\" precisely defined, btw?","msgtype":"m.text"},"ts":1458572091000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: hmm, that sounds like a tricky question :)","msgtype":"m.text"},"ts":1458572133000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: tricky or trick?","msgtype":"m.text"},"ts":1458572158000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"trick, sorry","msgtype":"m.text"},"ts":1458572177000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: well, maybe, I'm not sure. I can't find a dfn for it, and I'm unsure if it means the PermissionName, a PermissionDescriptor with name set to xxx, etc.","msgtype":"m.text"},"ts":1458572278000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"mounir: I refer to it like so in the Sensor spec: https://w3c.github.io/sensors/#retrieve-the-sensor-permission","msgtype":"m.text"},"ts":1458572329000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"why isn't <option> in the list of \"Special\" elements (in the parser)?","msgtype":"m.text"},"ts":1458573115000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not sure, there's a couple of special category conditionals, are those affected?","msgtype":"m.text"},"ts":1458573249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is trying to figure out how to define <slot> parsing","msgtype":"m.emote"},"ts":1458573259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: so... html5lib doesn't support <template>?","msgtype":"m.text"},"ts":1458573791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, it doesn't","msgtype":"m.text"},"ts":1458574456000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: hmm right, in particular \"any other end tag\". probably menuitem shouldn't be special but i'm not entirely sure yet","msgtype":"m.text"},"ts":1458575104000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also AAA","msgtype":"m.text"},"ts":1458575174000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if those are actually what makes option not special, that is worthy of a note","msgtype":"m.text"},"ts":1458575220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: seems super confusing","msgtype":"m.text"},"ts":1458575225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: file an issue, assign to Hixie_?","msgtype":"m.text"},"ts":1458575234000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doneth","msgtype":"m.text"},"ts":1458575711000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1458575753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: hey--it seems you've written the core of the \"request permission\" abstract operation I also need in a branch of your fork of the Permissions API.","msgtype":"m.text"},"ts":1458577467000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: mounir and I were just discussing this above.","msgtype":"m.text"},"ts":1458577493000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm on vacation today, so can't reply much.","msgtype":"m.text"},"ts":1458577514000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: oh--sorry.","msgtype":"m.text"},"ts":1458577536000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: when are you back?","msgtype":"m.text"},"ts":1458577547000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But I'll scroll up and read your conversation tomorrow. Feel free to send comments on the PR, or take it over and merge it. :)","msgtype":"m.text"},"ts":1458577549000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"oh, I must have somehow missed the PR.","msgtype":"m.text"},"ts":1458577575000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: looking","msgtype":"m.text"},"ts":1458577672000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://github.com/w3c/permissions/pull/66","msgtype":"m.text"},"ts":1458577852000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: ty","msgtype":"m.text"},"ts":1458578145000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: you'll be interested in https://www.w3.org/Bugs/Public/show_bug.cgi?id=27048 for adding support for partial enums in WebIDL","msgtype":"m.text"},"ts":1458578176000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Would be easier if WebIDL consolidated its issue trackers.","msgtype":"m.text"},"ts":1458578632000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Would be easier if it had an active editor","msgtype":"m.text"},"ts":1458578790000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mounir: what I'm looking for is basically in: https://github.com/w3c/permissions/pull/66","msgtype":"m.text"},"ts":1458578795000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"is [Unscopeable] actually used in any spec?","msgtype":"m.text"},"ts":1458580388000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it's in DOM","msgtype":"m.text"},"ts":1458580407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, there","msgtype":"m.text"},"ts":1458580473000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not in HTML","msgtype":"m.text"},"ts":1458580476000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, different thing","msgtype":"m.text"},"ts":1458580777000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#dom-childnode-before am I reading that right, or does the algorithm actually end up putting nodes before previous sibling","msgtype":"m.text"},"ts":1458580799000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/right/wrong/","msgtype":"m.text"},"ts":1458580808000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"Pre-insert node into parent before viablePreviousSibling. \"","msgtype":"m.text"},"ts":1458580873000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, no, there is 5","msgtype":"m.text"},"ts":1458580956000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1458580958000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"odd reuse of viablePreviousSibling variable","msgtype":"m.text"},"ts":1458580988000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: if it's confusing, I take PRs or issues","msgtype":"m.text"},"ts":1458581050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1458587209000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: Getting rid of Link Errors in bikeshed generally involves adding an item to the 'anchors' or 'link-defaults' blocks at the top of your spec. See https://github.com/WebBluetoothCG/web-bluetooth/blob/gh-pages/index.bs for a bunch of examples.","msgtype":"m.text"},"ts":1458594423000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"tobie: Yeah, I've seen that bug. I was waiting to push on it until I'd fixed the Permissions spec to handle other specs extending it.","msgtype":"m.text"},"ts":1458594583000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"To really fix it, it'd be nice to have a catalog of the \"registries\" in HTML specs, to see if they could all be handled in some uniform way other than partial enums. But failing that, partial enums look like they're probably enough for Permissions.","msgtype":"m.text"},"ts":1458594687000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah. Baby steps. Also, weren't you supposed to be on PTO? ;)","msgtype":"m.text"},"ts":1458594986000,"senderName":"tobie","senderId":"tobie@irc"}
]