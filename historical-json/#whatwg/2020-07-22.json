[
{"content":{"body":"Domenic: nevermind, I see now that the `docker run` invocation in build.sh is actually using --mount","msgtype":"m.text"},"ts":1595396172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: the list shorthand doesn't allow a spread syntax, right?","msgtype":"m.text"},"ts":1595416777000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"actually, never mind","msgtype":"m.text"},"ts":1595417895000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MikeSmith: right, also note that build.sh doesn't actually use the Wattsi docker image via `docker run`; it pulls in the binary into its own separate docker image.","msgtype":"m.text"},"ts":1595422693000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think this is where docker-compose is supposed to come in... e.g. if I wanted to pull in the html checker from one docker image, pdfsizeopt from another, and wattsi from a third...","msgtype":"m.text"},"ts":1595422719000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"docker-compose is for running mutliple images at the same time. If you just want to build a docker image with parts from several parents, I think multi-stage builds might be the right thing","msgtype":"m.text"},"ts":1595422831000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The problem I ran into is that I don't know _where_ in the docker image the binary is. (I could probably track it down by introspecting the container, but it's not obvious which part of the container's $PATH it's in.)","msgtype":"m.text"},"ts":1595423237000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'd like to be able to do multiple `docker run`s on the same mounted filesystem","msgtype":"m.text"},"ts":1595423262000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Since `docker run` just uses the entrypoint, thus letting the actual location of the binary stay as an implementation detail of the container I'm `docker run`ing.","msgtype":"m.text"},"ts":1595423292000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: why are 26.4.1.2 and 26.4.1.3 not reusable too?","msgtype":"m.text"},"ts":1595428823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I agree that if we cannot reuse the [[Properties]] setup it's a bit meaningless","msgtype":"m.text"},"ts":1595428859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: 2 is reusable I guess but it's a given; I wouldn't call it reuse as much as a fundamental building block. 3 is not reusable because it is creating a generic property bag for unbounded properties.","msgtype":"m.text"},"ts":1595428861000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well but we'd only copy a select set of properties instead","msgtype":"m.text"},"ts":1595428889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We'd need some separate store for the non-enumerable properties","msgtype":"m.text"},"ts":1595428897000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Otherwise it'd install them as enumerable","msgtype":"m.text"},"ts":1595428905000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah I see, hmm","msgtype":"m.text"},"ts":1595428918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess the only thing left at that point would be to use deep as inspiration so we don't have per-property logic for errors","msgtype":"m.text"},"ts":1595428989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1595429000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: (I wouldn't mind not stringifying message)","msgtype":"m.text"},"ts":1595429003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's basically what I was saying if we want to add implementation/test churn by revisiting message","msgtype":"m.text"},"ts":1595429016000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think it's the better model but I'm not sure it's worth it","msgtype":"m.text"},"ts":1595429028000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k, I guess I'll wait for others to chime in","msgtype":"m.text"},"ts":1595429042000,"senderName":"annevk","senderId":"annevk@irc"}
]