[
{"content":{"body":"annevk: 3day conf schedule sounds reasonable.","msgtype":"m.text"},"ts":1512696012000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Hmm. https://github.com/WebAssembly/design/issues/1164","msgtype":"m.text"},"ts":1512703935000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh lord","msgtype":"m.text"},"ts":1512704329000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"belly laughs","msgtype":"m.text"},"ts":1512704333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OPâ€™s comments start out great and just keep getting better","msgtype":"m.text"},"ts":1512704362000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why are people engaging in good faith when OP clearly is not?","msgtype":"m.text"},"ts":1512704585000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I think they're testing to see if it's a bot","msgtype":"m.text"},"ts":1512704749000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"i read and write wasm\" really?","msgtype":"m.text"},"ts":1512705979000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"I think OP is posting in good faith but is misguided (and kind of opinionated)","msgtype":"m.text"},"ts":1512706231000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think I agree with othermaciej. I mostly feel bad for the 786 inboxes who get one email per post in that thread.","msgtype":"m.text"},"ts":1512707992000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh my, our Code of conduct notice on every repo lacks an Oxford comma","msgtype":"m.text"},"ts":1512725084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How did that even happen?","msgtype":"m.text"},"ts":1512725092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's because Oxford commas shouldn't exist.","msgtype":"m.text"},"ts":1512726107000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Lies","msgtype":"m.text"},"ts":1512726574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, smaug____ : I think the desired syntax is this.[[prop]]","msgtype":"m.text"},"ts":1512729673000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: looks reasonable. (I've given up objecting [[foo]] syntax)","msgtype":"m.text"},"ts":1512729736000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"tobie: in IntersectionObserver spec the issue is that root is also an attribute in the interface","msgtype":"m.text"},"ts":1512729787000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so this.root = some value is odd. this.[[root]], if defined what [[]] means, would be good.","msgtype":"m.text"},"ts":1512729840000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yup. It's at the top of my todo list","msgtype":"m.text"},"ts":1512729937000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1512729966000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/heycam/webidl/issues/258","msgtype":"m.text"},"ts":1512729968000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"arguably, it's been at the top of my todolist for a while :-(","msgtype":"m.text"},"ts":1512729992000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I assume \"slot children;\" isn't going to happen","msgtype":"m.text"},"ts":1512730022000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Since that would pollute the API declaration, make it harder to read.","msgtype":"m.text"},"ts":1512730127000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: thinking about request.navigationInfo.history vs request.navigationHistory. Happy to avoid a tear-off object, but navigationHistory doesn't sound like a boolean to me. isReloadNavigation, isHistoryNavigation?","msgtype":"m.text"},"ts":1512735180000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"This is https://github.com/w3c/ServiceWorker/issues/1167#issuecomment-350238893 btw","msgtype":"m.text"},"ts":1512735217000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm, maybe tear-off is okay; I'm actually more interested in the question of getting rid of the technical debt before we expose more potentially incorrect APIs","msgtype":"m.text"},"ts":1512737284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not a big fan of quicksand API design","msgtype":"m.text"},"ts":1512737311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which parts are you worried about? It seems straight forward to as we already do different things for reload & back/forward elsewhere","msgtype":"m.text"},"ts":1512737531000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: basically navigation and history not being defined in interoperable detail","msgtype":"m.text"},"ts":1512737562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: eg there's already https://w3c.github.io/navigation-timing/#idl-def-navigationtype","msgtype":"m.text"},"ts":1512737563000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: see the many many issues against whatwg/html on those subjects","msgtype":"m.text"},"ts":1512737574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the Performance WG is rather notorious for designing quicksand APIs","msgtype":"m.text"},"ts":1512737616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and also never paying off the technical debt they leave behind","msgtype":"m.text"},"ts":1512737630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(quicksand API is a thing I just made up btw, to give this a name)","msgtype":"m.text"},"ts":1512737659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess if we already expose this to some extent we can at least ensure through tests things are consistent, but I'm not particularly pleased","msgtype":"m.text"},"ts":1512737803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll see what I can do to properly plumb it through navigate","msgtype":"m.text"},"ts":1512737869000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: also, given that you reduced the scope of the proposal I'm somewhat more comfortable with it","msgtype":"m.text"},"ts":1512737879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: should have read that comment first","msgtype":"m.text"},"ts":1512737889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: gave your comment a thumbs up, let me know if you need something more ðŸ˜Š","msgtype":"m.text"},"ts":1512740515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ta, will get some tests together than start looking at the specs. We have internal customers that are mostly interested in reload/history, but I don't want to count out needing to split out 'history' later.","msgtype":"m.text"},"ts":1512740579000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: just updated #w3c/webcomponents/713","msgtype":"m.text"},"ts":1512744521000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"having tomdale@ is a good news","msgtype":"m.text"},"ts":1512744537000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"yeah is","msgtype":"m.text"},"ts":1512744566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if not Yehuda","msgtype":"m.text"},"ts":1512744579000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Hey jyasskin--are you still up to talk today?","msgtype":"m.text"},"ts":1512754947000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: Agh, I have a meeting in 5 minutes, but I'll be free after 11:30 or so. I'll also read your bug.","msgtype":"m.text"},"ts":1512755812000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Thanks, jyasskin!","msgtype":"m.text"},"ts":1512756183000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: Ok, I might have to disappear for a bit, but I've re-read https://github.com/w3c/permissions/pull/151 and can talk about it intelligibly.","msgtype":"m.text"},"ts":1512759629000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Got it, jyasskin","msgtype":"m.text"},"ts":1512759778000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: I think your wording for \"Interpret parameters.state as if it were the result of an invocation of permission state for typedDescriptor with the argument target made at this moment.\" is fine. I tried formalizing this state more in https://github.com/w3c/permissions/pull/96 (and #91 and #95), but folks didn't like it.","msgtype":"m.text"},"ts":1512759786000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jugglinmike: re \"WebDriver algorithms execute outside of any particular event loop\", that's why you need to post to an event loop before modifying fields of a settings object. We don't want to modify those fields concurrently with algorithms using them.","msgtype":"m.text"},"ts":1512759826000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jugglinmike: about the always-granted APIs like \"midi\", it's fine with me to let the UA reject the change at the beginning of Set Permission instead of the point where it actually tries to change the permission state.","msgtype":"m.text"},"ts":1512759937000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jugglinmike: Did you have any other questions?","msgtype":"m.text"},"ts":1512759967000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I think so--in response to the feedback you're giving me now :)","msgtype":"m.text"},"ts":1512760007000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"As far as formalizing state: I started down the road of defining a \"permission cache\" for each environment settings object. I think this is a primitize form of the patch you shared above, and if so, I would expect it to likewise meet resistance. https://github.com/w3c/permissions/compare/master...bocoup:cache","msgtype":"m.text"},"ts":1512760117000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I didn't got very far with that patch because I wanted to talk with you first. Does the above sound right to you?","msgtype":"m.text"},"ts":1512760154000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"That patch would need to make \"New information about the user's intent\" into a formal algorithm, and the input would need to be well-defined (I think: a permission descriptor and an environment settings object)","msgtype":"m.text"},"ts":1512760265000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yeah, I tried hard to define that cache, and could never get agreement about it. That was complicated by some Mozilla folks being mad that permissions.request() was in the spec, and since it's gone, you might have better luck now, but it's not something I'm enthusiastic to try again","msgtype":"m.text"},"ts":1512760499000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Hmm, okay","msgtype":"m.text"},"ts":1512760524000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"It's too bad your patch didn't go through, but I'm glad to hear that you were thinking along the same lines","msgtype":"m.text"},"ts":1512760560000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I think you're right that the inputs are a permission descriptor and an environment settings object.","msgtype":"m.text"},"ts":1512760565000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I'll have to take some time to read the review you received for that patch","msgtype":"m.text"},"ts":1512760617000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"If you do want to try again, I think #91, #95, and #96 have the relevant people to talk to.","msgtype":"m.text"},"ts":1512760623000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"because it seems to me like there already is a cache--it's just defined very informally","msgtype":"m.text"},"ts":1512760651000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"and the way we're considering interacting with it in this WebDriver patch kind of forces that issue","msgtype":"m.text"},"ts":1512760682000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"We're basically saying, \"update the cache\" but wording it in such a way that an implementor looking at one part of the spec would never suspect its usage in another","msgtype":"m.text"},"ts":1512760747000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"It's informal because it's slightly different for each browser. https://github.com/w3c/permissions/pull/151#discussion_r140614720 has a brief summary of how browsers differ here, and I think one of those PRs has my more detailed investigation.","msgtype":"m.text"},"ts":1512760754000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Oh, right. I was reading that in the context of \"realms,\" but now I see that you were describing the caching mechanisms","msgtype":"m.text"},"ts":1512760830000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"WebDriver can (hopefully) set the browser to a \"testing\" mode that matches the \"testing\" mode of all other browsers, but, for example, Firefox's default mode never saves a permission response at all, which definitely doesn't work for the proactive model you're aiming at.","msgtype":"m.text"},"ts":1512760858000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"What do you think about formalizing the informality? In other words, something like, \"The user agent MAY cache requests to read the state for a given descriptor and environment settings object, but this cache must be invalidated by \"Set Permission\"","msgtype":"m.text"},"ts":1512761028000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"with similar text accompanying the new WebDriver \"Set Permission\" command","msgtype":"m.text"},"ts":1512761072000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"This is a difference between your \"cache\" change and my attempts to define a \"store\". Are you thinking that an un-cached permission state gets fetched from the user?","msgtype":"m.text"},"ts":1512761086000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Hm, no, because then \"Set Permission\" would be forcing something into the cache instead of invalidating the entry there...","msgtype":"m.text"},"ts":1512761144000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I think so, but I'm still hazy on the details. That's because I don't fully understand the text \"and the UA has not received new information about the user's intent\"","msgtype":"m.text"},"ts":1512761171000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"That seems a little unbounded. Would it be fair to add \"...about Permissions Descriptor |x| and environment settings object |y|\" ?","msgtype":"m.text"},"ts":1512761232000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Ah, yes, I think that won't break anything.","msgtype":"m.text"},"ts":1512761277000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Because trying to formalize the cache makes it seem like any \"new information about the user's intent\" would clear the entire cache","msgtype":"m.text"},"ts":1512761291000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Mhmm. Now, a browser *is* free to treat the user clearing the geolocation permission on one tab as information about their intent for the notifications permission on another tab, or even another origin.","msgtype":"m.text"},"ts":1512761372000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"The note about implicit signals in https://w3c.github.io/permissions/#new-information-about-the-users-intent says to be cautious about that.","msgtype":"m.text"},"ts":1512761403000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Oh! I think I missed that since it landed since I started this patch. I ought to re-read the spec from top to bottom. Sorry about that","msgtype":"m.text"},"ts":1512761531000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"No worries. :)","msgtype":"m.text"},"ts":1512761548000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I may be over-thinking this now, but I'm starting to get confused about the difference between \"the user's intent\" and \"the UA's interpretation of the user's intent\"","msgtype":"m.text"},"ts":1512761639000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"In the example you shared, it seems like you could argue that you've only received information about the user's intent for the geolocation permission. Though i wouldn't make that argument myself.","msgtype":"m.text"},"ts":1512761788000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"So maybe that's too pedantic","msgtype":"m.text"},"ts":1512761820000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":":) Everything here is about the UA's interpretation of the user's intent. One particular example where that's important is when *other* users flag a site as spammy or hostile, Chrome wants to be able to revoke your grant of the permission, on the theory that you intend to avoid spammy or hostile sites but might not have realized when you granted this particular site permission.","msgtype":"m.text"},"ts":1512761903000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"(We don't do this today, unless something's changed, but it's something the permissions spec should allow in the future.)","msgtype":"m.text"},"ts":1512761938000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jugglinmike: So, even when I was modeling this as a store, there was blanket permission for the browser to change the store at almost any time.","msgtype":"m.text"},"ts":1512762030000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"sorry jyasskin, I dropped again. I've switched to a wired connection","msgtype":"m.text"},"ts":1512762442000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: What's my last message you saw?","msgtype":"m.text"},"ts":1512762453000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":">  jugglinmike: So, even when I was modeling this as a store, there was blanket permission for the browser to change the store at almost any time.","msgtype":"m.text"},"ts":1512762465000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"That was my last message. :)","msgtype":"m.text"},"ts":1512762471000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1512762484000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Your comment makes it sound like \"forcing something into the cache\" is a deal-breaker, but as I understand it, that is exactly what Set Permissions needs to be doing","msgtype":"m.text"},"ts":1512762571000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"because when you say, \"invalidating the entry there\" as an alternative, I'm wondering what would happen if that was all that \"Set Permission\" could do","msgtype":"m.text"},"ts":1512762632000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I think that your current wording in https://pr-preview.s3.amazonaws.com/bocoup/permissions/pull/151.html#set-permission-command should be implementable for all the browsers, and will in practice cause the automation to work when there's no human also poking at the browser to make it stop working.","msgtype":"m.text"},"ts":1512762728000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Okay, then maybe I should just drop it :)","msgtype":"m.text"},"ts":1512762784000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: It's not that your concern is wrong: your text doesn't *require* the browser to do the right thing, and maybe someone will complain about it in the future. I just don't think it's worth spending a lot of time on it now.","msgtype":"m.text"},"ts":1512763190000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Understood. I appreciate your input--I'm in no position to prioritize things like this","msgtype":"m.text"},"ts":1512763280000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I mean, I'm not really the final authority either, but if I were, your text would already be good enough. :)","msgtype":"m.text"},"ts":1512763317000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"If only :P","msgtype":"m.text"},"ts":1512763518000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: If I were to try to fix this, I'd probably try to nail down the \"testing\" mode, where the browser isn't allowed to take user input into account, and it always persists permissions, and then say that browsers only need to use that mode when WebDriver tells them to. But again, only if this matters to you or someone wants to veto the change without it, and you want to corral the Mozilla folks who objected","msgtype":"m.text"},"ts":1512763582000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"last time.","msgtype":"m.text"},"ts":1512763582000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Ok, I'm running off to lunch. Let me know if any other questions come up.","msgtype":"m.text"},"ts":1512763607000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: Could you give me a little guidance on how to allow the UA to reject requests? Should it be as specific as describing the case of setting an always-on permission to \"denied\"","msgtype":"m.text"},"ts":1512763614000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Or should it just say, \"If the UA doesn't like the looks of the request, return a WebDriver error\"","msgtype":"m.text"},"ts":1512763652000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: I would probably use the second unless there's a reason to restrict UAs more than that.","msgtype":"m.text"},"ts":1512763676000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Okay then","msgtype":"m.text"},"ts":1512763718000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"There could be a note giving the example of denying always-on permissions, but I bet someone will come up with another time they can't munge the permission.","msgtype":"m.text"},"ts":1512763721000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"So here's my plan for today","msgtype":"m.text"},"ts":1512763730000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"1- Extend the step \"Interpret parameters.state as if it were the result of an invocation of permission state\" to occur inside a task (and update the algorithm to wait for all such tasks to complete) 2- add a provision to allow the UA to initially reject the request if they can't honor it (for whatever reason)","msgtype":"m.text"},"ts":1512763874000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Does that sound right to you?","msgtype":"m.text"},"ts":1512763879000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yep, sounds great.","msgtype":"m.text"},"ts":1512763923000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Excellent","msgtype":"m.text"},"ts":1512763945000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Thanks for your time today, jyasskin","msgtype":"m.text"},"ts":1512763952000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"No problem. :)","msgtype":"m.text"},"ts":1512763960000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Have a good lunch!","msgtype":"m.text"},"ts":1512763963000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Thought I got pinged here but maybe not. Searching the logs, though...","msgtype":"m.text"},"ts":1512764612000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"othermaciej: new TextDecoder('windows-949').encoding === \"euc-kr\"","msgtype":"m.text"},"ts":1512764655000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Not sure that was the question (from Nov 6th) though. :)","msgtype":"m.text"},"ts":1512764709000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"You can also load a page w/ <meta charset=windows-949> and inspect its document.characterSet (again, not sure that was the question)","msgtype":"m.text"},"ts":1512764789000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I don't know what question that would be the answer to","msgtype":"m.text"},"ts":1512764871000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: https://freenode.logbot.info/whatwg/20171106#c1367176","msgtype":"m.text"},"ts":1512764910000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I have partial answers for some of the other encoding questions that came up in that discussion but it may all be moot now. Feel free to re-ask.","msgtype":"m.text"},"ts":1512764997000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Domenic: re the Object.prototype.toString issue, V8 has this API called v8::FunctionTemplate::SetClassName that defines the behavior: https://v8.paulfryzel.com/docs/master/classv8_1_1_function_template.html#a491e77dc7ceb5b0fe75880d11f2dbe9e","msgtype":"m.text"},"ts":1512774941000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I'm guessing Chrome's IDL class generator uses this function, which leads to the issue you filed","msgtype":"m.text"},"ts":1512775008000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"but not only does it govern the toString behavior, the function also sets the \"name\" property of the constructor function","msgtype":"m.text"},"ts":1512775077000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"which means that in short, it should be a V8 issue to make SetClassName() only change the name of the constructor function and not any toString behavior","msgtype":"m.text"},"ts":1512775190000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: nice detective work. Yeah, we'll see how they come down... I hope it gets straightened out.","msgtype":"m.text"},"ts":1512775214000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TimothyGu: https://cs.chromium.org/chromium/src/third_party/WebKit/Source/bindings/core/v8/V8DOMConfiguration.cpp?type=cs&q=V8DOMConfiguration.cpp&sq=package:chromium&l=727 might be informative (that's where it's used by the bindings code)","msgtype":"m.text"},"ts":1512775232000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: thanks for the link. I think the binding code looks right","msgtype":"m.text"},"ts":1512775282000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"v8::FunctionTemplate::SetClassName() sets the internal class_name property in the FunctionTemplate, which is then used by FunctionTemplateInfo::GetOrCreateSharedFunctionInfo in https://cs.chromium.org/chromium/src/v8/src/objects.cc?type=cs&q=objects.cc&sq=package:chromium&l=1308","msgtype":"m.text"},"ts":1512775376000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"it uses it in two ways as I mentioned: 1. as the name of the function (https://cs.chromium.org/chromium/src/v8/src/objects.cc?type=cs&q=objects.cc&sq=package:chromium&l=1335) and as the [[Class]] internal slot (https://cs.chromium.org/chromium/src/v8/src/objects.cc?type=cs&q=objects.cc&sq=package:chromium&l=1342)","msgtype":"m.text"},"ts":1512775429000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"then this [[Class]] internal slot gets picked up in the CodeStubAssembler::ClassOf() (https://cs.chromium.org/chromium/src/v8/src/code-stub-assembler.cc?type=cs&sq=package:chromium&l=9724), which is itself called by Object.prototype.toString (https://cs.chromium.org/chromium/src/v8/src/builtins/builtins-object-gen.cc?type=cs&sq=package:chromium&l=355)","msgtype":"m.text"},"ts":1512775523000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"thats about it","msgtype":"m.text"},"ts":1512775541000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"}
]