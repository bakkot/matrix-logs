[
{"content":{"body":"annevk: hi, can I ask you to take a look at https://github.com/whatwg/html/pull/5574 again? It now includes all the EXIF details as we've discussed.","msgtype":"m.text"},"ts":1590659641000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: done","msgtype":"m.text"},"ts":1590662034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks annevk! Regarding the algorithm, it introduces some variables: preferred width/height, preferred horizonta/vertical resolution, preferred resolution unit. All of them only live within the \"update the metadata\" algorithm. is there a normative way to go about algorithm-local vars as such?","msgtype":"m.text"},"ts":1590663050000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: 1) use <var>, not <code> and 2) don't tie them to img","msgtype":"m.text"},"ts":1590663113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: so not img's preferred width, but let _preferredWidth_ be ...","msgtype":"m.text"},"ts":1590663148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"got it, thanks again annevk. Will ping you again when it's amended","msgtype":"m.text"},"ts":1590663156000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: reading https://infra.spec.whatwg.org/ might help","msgtype":"m.text"},"ts":1590663186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1590663231000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: I think those issues are fixed now... ready for another look","msgtype":"m.text"},"ts":1590673448000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"(finally got my builds running quickly after switching to local docker, could never get the wattsi server to return stable responses)","msgtype":"m.text"},"ts":1590673484000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Hey, I see that Chrome returns for `Object.keys(new Event('foo'))` `['isTrusted']`, looking at the spec it looks like isTrusted is \"[LegacyUnforgeable]\" but I am not sure if Chrome is correct to set it as enumerable https://heycam.github.io/webidl/#LegacyUnforgeable (Firefox behaves like Chrome, Edge does not enumerate it)","msgtype":"m.text"},"ts":1590678264000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"My intuition is to behave like Chrome and Firefox here","msgtype":"m.text"},"ts":1590678275000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: https://heycam.github.io/webidl/#define-the-unforgeable-regular-attributes","msgtype":"m.text"},"ts":1590678678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1590678791000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"Hmm, I am starting to port WPTs to run in Node and I noticed a lot of the DOM event tests are very browser-specific (which makes sense). For example tests for `once` will dispatch the events on `document` rather than dispatch them on a `new EventTarget()`. I want to port those tests to run in Node but I don't have a `document` (since I'm not implementing the whole spec). I have a copy where I just do `const document","msgtype":"m.text"},"ts":1590686824000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"= new EventTarget()` and I _think_ we can probably run the tests that way - but I was wondering if it would be helpful if I ported the source tests to use that format. For example this file: https://github.com/web-platform-tests/wpt/blob/master/dom/events/AddEventListenerOptions-once.html can be a `.js` file with `new EventTarget()` rather than `document` being used. Would that be at all helpful?","msgtype":"m.text"},"ts":1590686824000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: it seems helpful for projects using wpt that aren't browsers (like Node.js, Deno)","msgtype":"m.text"},"ts":1590688086000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"benjamingr__: there's precedent for changing tests in that way for that purpose https://bocoup.com/blog/wpt-workshop-report","msgtype":"m.text"},"ts":1590688140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"benjamingr__: it's *possible* that browsers have bugs in `document` or other objects that aren't shared with `EventTarget`, though, so ideal would be to keep that coverage somehow","msgtype":"m.text"},"ts":1590688227000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I can make a PR adding copies of those tests with EventTarget though that would be some duplicate coverage. Just asking what's helpful.","msgtype":"m.text"},"ts":1590689873000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: I'd disagree with zcorpan here, not sure it really makes sense to duplicate them for everything","msgtype":"m.text"},"ts":1590700273000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]