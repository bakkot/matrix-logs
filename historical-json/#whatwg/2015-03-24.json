[
{"content":{"body":"othermaciej: i think in that case microtasks shouldn't fire","msgtype":"m.text"},"ts":1427155201000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"since the general philosophy is that they run on clean callstacks, no?","msgtype":"m.text"},"ts":1427155214000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"I don’t know what the philosophy is","msgtype":"m.text"},"ts":1427155226000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The spec doesn’t explain the theory of microtasks at a high level, it just has a bunch of algorithms that reference each other","msgtype":"m.text"},"ts":1427155246000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jsbell: Right, but the problem is semantics. A test for cross-origin communication isn't necessarily going to work if I just s|http://locahost:8000|https://{{host}}:{{ports[https][0]}}|","msgtype":"m.text"},"ts":1427155250000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so I can’t tell if I’m following them correctly","msgtype":"m.text"},"ts":1427155260000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think the idea is you implement the algorithms you don't have to understand the theory :)","msgtype":"m.text"},"ts":1427155302000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jsbell: So it would be useful if the chrome tests were rewritten to run from https:8443 by default","msgtype":"m.text"},"ts":1427155304000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jamesr___: what confuses me is this Note: https://html.spec.whatwg.org/multipage/webappapis.html#processing-model-9:clean-up-after-running-a-callback","msgtype":"m.text"},"ts":1427155312000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr___: it seems like most kinds of callbacks do not in fact eventually call the “clean up after running a callback” steps","msgtype":"m.text"},"ts":1427155344000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr___: which is the hook where microtasks might be run after running some script","msgtype":"m.text"},"ts":1427155359000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: if you're asking us to s/http/https/, s/8000/8443/ where possible in the blink repo, then SGTM","msgtype":"m.text"},"ts":1427155369000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"looks like that's only reached by 8.1.3.3 which is reached by creating a <script>","msgtype":"m.text"},"ts":1427155377000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jamesr___: that note implies they would, but it only seems to apply to non-function entry into script","msgtype":"m.text"},"ts":1427155379000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr___: if that is totally intentional, then perhaps the only issue is that the note is confusing","msgtype":"m.text"},"ts":1427155404000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it seems a bit confusing. the flag in the queue is needed since the event loop can be entered reentrantly","msgtype":"m.text"},"ts":1427155421000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jsbell: Yeah, that would be ideal","msgtype":"m.text"},"ts":1427155429000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i.e. you could within a microtask call showModalDialog() and then start spinning again","msgtype":"m.text"},"ts":1427155431000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"could you insert a new <script> within a microtask?","msgtype":"m.text"},"ts":1427155457000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"i mean you could, but would it run then?","msgtype":"m.text"},"ts":1427155466000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"I don’t know","msgtype":"m.text"},"ts":1427155511000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well you could via showModalDialog","msgtype":"m.text"},"ts":1427155526000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"since you can do anything in that","msgtype":"m.text"},"ts":1427155530000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"document.write() would run it synchronously but I am not sure if something about microtasks prevents it","msgtype":"m.text"},"ts":1427155533000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but i don't think that's what the note is supposed to signify. definitely worth some clarification","msgtype":"m.text"},"ts":1427155545000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jgraham: but ideally we should be using resources/test-helpers.js and get_host_info() everywhere instead of hardcoding anything","msgtype":"m.text"},"ts":1427155554000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I notice though that there is nothing to account for non-<script> script callbacks in that algorithm","msgtype":"m.text"},"ts":1427155567000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: i.e. crbug.com/462361","msgtype":"m.text"},"ts":1427155600000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I guess the only relevance is to prevent the algorithm from re-entering so it doesn’t matter that most script callbacks don’t do it","msgtype":"m.text"},"ts":1427155610000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jsbell: Right, but irrespective of that moving from http to https by default requires changes to what's considered cross-origin + etc.","msgtype":"m.text"},"ts":1427155646000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: get_host_info() populates e.g. HTTPS_REMOTE_ORIGIN; assuming the tests use those variables correctly, wouldn't that cover it? (sorry if I'm being dense here)","msgtype":"m.text"},"ts":1427155726000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Well I think my point is just that the changes there might not be trivial, depending on *exactly* what is being tested","msgtype":"m.text"},"ts":1427155783000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Agreed.","msgtype":"m.text"},"ts":1427155799000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"e.g. if the default server is https://localhost:8443 then the remote origin probably has to be a subdomain, or different port, or something, whereas at the moment https is itself a seperate origin","msgtype":"m.text"},"ts":1427155874000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and different tests might want different things here)","msgtype":"m.text"},"ts":1427155898000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway I guess I will look at this more tomorrow, now I will sleep","msgtype":"m.text"},"ts":1427155943000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jsbell: thanks for the help!","msgtype":"m.text"},"ts":1427155951000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'll reply to the thread a bit and annotate the bug, but your clarifications (post sleep!) will help, thx!","msgtype":"m.text"},"ts":1427155971000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Hello all. I understand this would probably target HTML6, but does anyone else feel there is a case for allowing multiple <base> tags on a page (outside of <head>)? Imagine being able to nest a base tag in a section and have it override the base href for that section and it's inner elements.","msgtype":"m.text"},"ts":1427164932000,"senderName":"jpdevries","senderId":"jpdevries@irc"},
{"content":{"body":"\"I tried to make an \"end credits\" slide w/ IE-only APIs not in Project Spartan that scrolls while I talk. The list was so long it crashed PPT\"","msgtype":"m.text"},"ts":1427187723000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Pointer?","msgtype":"m.text"},"ts":1427188384000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://twitter.com/jacobrossi/status/580253880690208768","msgtype":"m.text"},"ts":1427188488000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk_, https://github.com/servo/servo/issues/5336","msgtype":"m.text"},"ts":1427188883000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hi, how would I read a certain meta tag with html5lib?","msgtype":"m.text"},"ts":1427197643000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"in python","msgtype":"m.text"},"ts":1427197645000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"like, <meta name=\"description\" content=\"Something\" />","msgtype":"m.text"},"ts":1427197669000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"I need the \"Something\"","msgtype":"m.text"},"ts":1427197673000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"tiago: this channel is for HTML & DOM specs. In JS it could be document.querySelector('meta[name=description]').getAttribute('content'), dunno if html5lib has something similar. It isn't maintained by whatwg.","msgtype":"m.text"},"ts":1427197928000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Thanks JakeA, it's just because the html5lib github page points to this channel","msgtype":"m.text"},"ts":1427197974000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"Streams people (cc Domenic), if I have an underlying binary stream, piped to a text decoding transform stream, piped to a CSV decoder, should the CSV decoder yield, say, a CSV cell per read, or is it customary to deliver as much data as you can per read?","msgtype":"m.text"},"ts":1427198084000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tiago: oh, actually, maybe I'm wrong, looks like quite a few people in this channel build that lib. My bad. +MikeSmith gsnedders","msgtype":"m.text"},"ts":1427198279000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1427198301000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"tiago: once you've got a document, you can use .childNodes to gets its children etc etc. Once you find the meta, use .attributes and find the one with name 'name'","msgtype":"m.text"},"ts":1427198764000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-python/blob/f5fd711dd3e933353423656b8adf114e436cc4bb/html5lib/treebuilders/etree.py#L19","msgtype":"m.text"},"ts":1427198768000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thanks JakeA, I will tr","msgtype":"m.text"},"ts":1427198837000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"*try","msgtype":"m.text"},"ts":1427198839000,"senderName":"tiago","senderId":"tiago@irc"},
{"content":{"body":"JakeA: CSV cell (more likely row) per read is generally customary","msgtype":"m.text"},"ts":1427201510000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks!","msgtype":"m.text"},"ts":1427201659000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: btw, the streams API seems to be a perfect balance of simplicity and functionality. Nice one","msgtype":"m.text"},"ts":1427201796000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1427201802000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yea, it seems for chunk or message oriented streams like ReadableStream... each chunk should be a logical object for whatever transformation you are doing","msgtype":"m.text"},"ts":1427202497000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think its less clear for ReadableByteStreams","msgtype":"m.text"},"ts":1427202508000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, or text which is \"as many chars as possible\", and it only holds back incomplete chars","msgtype":"m.text"},"ts":1427202554000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: iirc I told you that TextDecoder kept state, but TextEncoder didn't","msgtype":"m.text"},"ts":1427203616000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"JakeA: you should keep passing stream:true until you hit OEF","msgtype":"m.text"},"ts":1427203650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's what I'm doing","msgtype":"m.text"},"ts":1427203764000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"stream is !result.done","msgtype":"m.text"},"ts":1427203796000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we could maybe make pipe(new TextDecoder) work for the common case, if TextDecoder/TextEncoder implement some stream-protocol","msgtype":"m.text"},"ts":1427203831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah yes, now I remember","msgtype":"m.text"},"ts":1427203885000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: at a quick glance, I think that could be possible in a backwards compatible way","msgtype":"m.text"},"ts":1427203887000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"You could maybe even define .decode in terms of real streams","msgtype":"m.text"},"ts":1427203949000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah just add .writable and .readable properties","msgtype":"m.text"},"ts":1427203951000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the bit I'm worried about is what .decode etc do if you're using the decoder as a stream","msgtype":"m.text"},"ts":1427203981000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah true","msgtype":"m.text"},"ts":1427203993000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"perhaps unnecessarily complicated","msgtype":"m.text"},"ts":1427204024000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it could be as simple as it throws if the stream is locked","msgtype":"m.text"},"ts":1427204068000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Mehhhh","msgtype":"m.text"},"ts":1427204088000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Using it as a stream, *and* calling .decode sounds like a mistake","msgtype":"m.text"},"ts":1427204119000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It seems the streamified object should wrap an existing TextDecoder object","msgtype":"m.text"},"ts":1427204357000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Gone done a post on fetch & streams http://jakearchibald.com/2015/thats-so-fetch/","msgtype":"m.text"},"ts":1427204438000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: or TextDecoder should wrap a streamified object. But, they should be separate I think... too messy otherwise.","msgtype":"m.text"},"ts":1427204478000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think since TextDecoder existed first... its easier to write the new stream in terms of the TextDecoder","msgtype":"m.text"},"ts":1427204500000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1427204521000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: \"Dramatic reconstruction\" :-)","msgtype":"m.text"},"ts":1427205577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I had to fallback to an SVG of that on iphone because they *still* don't allow inline video","msgtype":"m.text"},"ts":1427206015000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Could have used a 5mb gif but screw that","msgtype":"m.text"},"ts":1427206022000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"an svg O_O i gotta see this","msgtype":"m.text"},"ts":1427206471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm tried it on my ipad looks the same","msgtype":"m.text"},"ts":1427206605000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"don't engage webreflection...","msgtype":"m.text"},"ts":1427206746000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, too late","msgtype":"m.text"},"ts":1427207094000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"he is _the_ es-discuss troll","msgtype":"m.text"},"ts":1427207106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the SVG is static unfortunately. Inline video works fine on ipad","msgtype":"m.text"},"ts":1427207117000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm i was picturing an animated vector representation","msgtype":"m.text"},"ts":1427207133000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So I'm not crazy then? I can't match up what webreflection is saying to reality","msgtype":"m.text"},"ts":1427207147000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think maybe if someone focuses on the tongue-in-cheek parts they could view it as a rant... *mumbles something about cognitive bias*","msgtype":"m.text"},"ts":1427207204000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe. I tried to keep it tongue-in-cheek and of course didn't name","msgtype":"m.text"},"ts":1427207247000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the official policy has always been there's no real topic for this channel, and nobody really cares about using this for html5lib since half the discussions historically were half spec discussions and actual questions are pretty infrequent","msgtype":"m.text"},"ts":1427207305000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"does anybody maintain a JSON file or something with a list of the currents UA strings for major browsers?","msgtype":"m.text"},"ts":1427207390000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"something meant to be easily consumable","msgtype":"m.text"},"ts":1427207418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: I know... it was a valiant effort... but people tend to see what they expect to see unfortunately","msgtype":"m.text"},"ts":1427207445000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"gsnedders: noted, cheers!","msgtype":"m.text"},"ts":1427207500000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"webreflection is andrea giammarchi_","msgtype":"m.text"},"ts":1427207588000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1427207588000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I recall his talk on jsconf.eu ~2012 or so","msgtype":"m.text"},"ts":1427207598000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"was this whole thing about how fetch is bad because of promises, or was that a different one?","msgtype":"m.text"},"ts":1427207698000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"MikeSmith: At one point that UA sniffing tool thing had them, I think. Or I guess regexps that were supposed to match lots of known browsers","msgtype":"m.text"},"ts":1427207700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp-: I believe this started with \"OMG fetch is not based on streams\"","msgtype":"m.text"},"ts":1427207742000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or maybe there are two issues flying about","msgtype":"m.text"},"ts":1427207754000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: ok","msgtype":"m.text"},"ts":1427207808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"enables Cache by default in Firefox nightly.","msgtype":"m.emote"},"ts":1427207884000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ondras: he's a cool guy, he's just a bit hot-headed about this","msgtype":"m.text"},"ts":1427207978000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: Something like https://github.com/3rd-Eden/useragent/blob/master/lib/regexps.js","msgtype":"m.text"},"ts":1427207997000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp-: yeah, partly it was \"this is not based on streams\" even though it is, but also that we don't have cancellation yet, but that's on its way","msgtype":"m.text"},"ts":1427208018000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: ohhhh! In window objects too?","msgtype":"m.text"},"ts":1427208269000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: looking now","msgtype":"m.text"},"ts":1427208280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: yep... it won't ride the trains to release yet, though","msgtype":"m.text"},"ts":1427208286000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm going to push a blog post in a bit explaining","msgtype":"m.text"},"ts":1427208300000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: ah coolーthanks","msgtype":"m.text"},"ts":1427208324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can never figure out how to get images to look right in twitter summary cards.","msgtype":"m.emote"},"ts":1427210320000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: here is the blog explaining what we are doing:  https://blog.wanderview.com/blog/2015/03/24/service-workers-in-firefox-nightly/","msgtype":"m.text"},"ts":1427210604000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nice blog post","msgtype":"m.text"},"ts":1427239306000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: thanks for taking time to write it up","msgtype":"m.text"},"ts":1427239315000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: the amount of work you've been doing to get there is pretty phenomenal","msgtype":"m.text"},"ts":1427239369000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"always forgets who wanderview is","msgtype":"m.emote"},"ts":1427239529000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also wanderview++ on landing the SW stuff. Hopefully we make more progress with the Blink tests soon","msgtype":"m.text"},"ts":1427239574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah tests","msgtype":"m.text"},"ts":1427239608000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: If no-one beats me to it, I'll try and pick up the blink side of the test todos, but I'm booked solid for ~2 weeks","msgtype":"m.text"},"ts":1427239836000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: That sounds great :) (well not that you are booked solid ofc. Unless it's solid fun ;)","msgtype":"m.text"},"ts":1427239883000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: is the caches API in FF scoped to SW or exposed everywhere?","msgtype":"m.text"},"ts":1427241071000,"senderName":"jsbell","senderId":"jsbell@irc"}
]