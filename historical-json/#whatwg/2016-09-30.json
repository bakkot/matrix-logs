[
{"content":{"body":"have we gotten rid of window.find?","msgtype":"m.text"},"ts":1475193916000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"wycats: it's happening https://github.com/whatwg/html/issues/1840","msgtype":"m.text"},"ts":1475217435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wycats: you remember bringing this up three years ago?","msgtype":"m.text"},"ts":1475217462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: I raised a couple Houdini issues around the event loop thing","msgtype":"m.text"},"ts":1475221364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cool.","msgtype":"m.text"},"ts":1475221725000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"heycam|away: any reasons why we have: ReadWriteSetlike →\tSetlikeRest in the grammar? http://heycam.github.io/webidl/#prod-ReadWriteSetlike","msgtype":"m.text"},"ts":1475224082000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1475224100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Same for http://heycam.github.io/webidl/#prod-ReadWriteMaplike","msgtype":"m.text"},"ts":1475224125000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Same of AttributeNameKeyword","msgtype":"m.text"},"ts":1475224212000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm not sure. if you think it's clearer feel free to just use MaplikeRest etc. in its place","msgtype":"m.text"},"ts":1475224266000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"tobie: though if you look at the definition of InterfaceMember maybe it's nicer to read?","msgtype":"m.text"},"ts":1475224286000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://heycam.github.io/webidl/#prod-InterfaceMember","msgtype":"m.text"},"ts":1475224290000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"than something with \"Rest\" in its name","msgtype":"m.text"},"ts":1475224303000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"readability is a good enough reason. :)","msgtype":"m.text"},"ts":1475224416000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"heycam: I'd all it SetLike, though","msgtype":"m.text"},"ts":1475224430000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/all/call/","msgtype":"m.text"},"ts":1475224443000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"you mean with a capital L? or without the \"Rest\"?","msgtype":"m.text"},"ts":1475224455000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or without the \"ReadWrite\"","msgtype":"m.text"},"ts":1475224472000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the latter, sorry.","msgtype":"m.text"},"ts":1475224516000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"as you wish :)","msgtype":"m.text"},"ts":1475224525000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"But I see how that breaks consistency with ReadWriteAttributes.","msgtype":"m.text"},"ts":1475224541000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"heycam: I wanted to know if there was a reasoning behind this. Seems there is. I'll send a PR if I suddenly become strongly opinionated about why it should be simplified.","msgtype":"m.text"},"ts":1475224617000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: ok","msgtype":"m.text"},"ts":1475224628000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: thanks for the explanations.","msgtype":"m.text"},"ts":1475224653000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1475224664000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jyasskin: the other thing with threads and lifetime is that keeping them alive for the duration of the system allows storing things in variables and being available in the next task/message/job/thingy","msgtype":"m.text"},"ts":1475229399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: e.g., for a shared worker manager thread, that's a necessity","msgtype":"m.text"},"ts":1475229415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I think https://github.com/whatwg/html/pull/1790 is good to land now","msgtype":"m.text"},"ts":1475242522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok thanks","msgtype":"m.text"},"ts":1475242633000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/commit/cf0355d7e0e229b98f7fbd51b8c7608010c787f5 regressed setting name / constructor url on the SharedWorkerGlobalScope object","msgtype":"m.text"},"ts":1475246437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there's basically nothing doing that at the moment","msgtype":"m.text"},"ts":1475246447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and I'm not sure how to best bring it back","msgtype":"m.text"},"ts":1475246456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I found this because in https://github.com/whatwg/html/pull/1782 I identified the need for a third field on that object, constructor origin, and couldn't figure out where we'd actually set it","msgtype":"m.text"},"ts":1475246490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for the review, will update the fullscreen PR shortly.","msgtype":"m.text"},"ts":1475247688000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: ta, seems done now","msgtype":"m.text"},"ts":1475247711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: might be able to land it later","msgtype":"m.text"},"ts":1475247751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, not in a hurry but for mental sanity for Friday night.","msgtype":"m.text"},"ts":1475247813000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1475247818000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: oh wow, are you back home?","msgtype":"m.text"},"ts":1475247847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: hadn't realized yet that it's kinda late in Tokyo","msgtype":"m.text"},"ts":1475247875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, I'm at home :)","msgtype":"m.text"},"ts":1475247883000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"is still jet-lagged?","msgtype":"m.emote"},"ts":1475247898000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1475247918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"idly wonders how you fly from Lisbon to Tokyo","msgtype":"m.emote"},"ts":1475247985000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"On a plane?","msgtype":"m.text"},"ts":1475248008000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, jgraham's answer seems like the right one","msgtype":"m.text"},"ts":1475248033000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean I'm sure you can go by airship","msgtype":"m.text"},"ts":1475248039000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but… yeah.","msgtype":"m.text"},"ts":1475248041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"would take a while.","msgtype":"m.text"},"ts":1475248046000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, I thought attached to a long-distance duck","msgtype":"m.text"},"ts":1475248061000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, you can't fly a duck over china in case it gets turned into crisy pancakes","msgtype":"m.text"},"ts":1475248098000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Perhaps it would be better to use a flying nun","msgtype":"m.text"},"ts":1475248199000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"btw, I flew back via CDG (Paris).","msgtype":"m.text"},"ts":1475248218000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1475248264000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Does the storage need to be associated with the thread, or can we say that the shared worker manager has such-and-such state, including a thread?","msgtype":"m.text"},"ts":1475249691000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: could work too","msgtype":"m.text"},"ts":1475250892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: would remove need for named threads","msgtype":"m.text"},"ts":1475250909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I did realize that we want each variable to live on a particular thread, to avoid races in updating the variables.","msgtype":"m.text"},"ts":1475250928000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah, no cross access","msgtype":"m.text"},"ts":1475250977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd probably want a \"bluetooth communication thread\" that doesn't have any particular state, but I can just say \"The <dfn>bluetooth communication thread</dfn> is a <a>thread</a>.\"","msgtype":"m.text"},"ts":1475250993000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1475251142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Associating state with a thread seems better","msgtype":"m.text"},"ts":1475251169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Could make it similar to internal slot dfns of objects","msgtype":"m.text"},"ts":1475251198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk yes","msgtype":"m.text"},"ts":1475254036000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"jgraham: is http://hoppipolla.co.uk/410/results.db.gz something you would have generated?","msgtype":"m.text"},"ts":1475257593000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: It is","msgtype":"m.text"},"ts":1475257608000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: do you know what version of Chrome was used?","msgtype":"m.text"},"ts":1475257713000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: The one on my machine at the time I guess","msgtype":"m.text"},"ts":1475257783000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It was not generated in a very careful way","msgtype":"m.text"},"ts":1475257790000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I currently have Version 53.0.2774.3 dev (64-bit) so something before that","msgtype":"m.text"},"ts":1475257823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: cool - yeah it looks like \"not the current one\" based on particular failures, but I wanted to confirm","msgtype":"m.text"},"ts":1475257842000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"(I don't know how out of date that is or whether my chrome updates broke at some point)","msgtype":"m.text"},"ts":1475258038000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"53 is current","msgtype":"m.text"},"ts":1475258072000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I just noticed that document.querySelectorAll('a').forEach is in Chrome and Safari. When did that happen?","msgtype":"m.text"},"ts":1475263259000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Dont' know when, but it's defined due to it being iterable in WebIDL: https://dom.spec.whatwg.org/#nodelist https://heycam.github.io/webidl/#idl-iterable","msgtype":"m.text"},"ts":1475263576000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That’s pretty interesting. I’ve never seen code leveraging that, polyfills for Firefox, or anything talking about it.","msgtype":"m.text"},"ts":1475263830000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"It also conviently avoids all the breakage we saw when we tried to make it have Array.prototype on its prototype chain","msgtype":"m.text"},"ts":1475264535000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"We're unfortunately still missing the ability to map over it, but at least you can easily cast to an Array now - [...document.querySelectorAll(\"a\")].map(...)","msgtype":"m.text"},"ts":1475266154000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is there any interest in adding a second level of error types to DOMException? e.g. bluetooth.requestDevice() returns a NotFoundError for several conditions that result in the user canceling the chooser. However, a site might want to give the user more help and so might want to know if the user canceled because the system doesn't support bluetooth, there","msgtype":"m.text"},"ts":1475271032000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"were no devices, or because they changed their mind.","msgtype":"m.text"},"ts":1475271032000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: at TPAC we discussed adding .details to error (in webidl it'd be an \"any\")","msgtype":"m.text"},"ts":1475271392000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jyasskin: Domenic was going to follow up on that I think... ?","msgtype":"m.text"},"ts":1475271415000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Mhhmm. Would there be guidelines on what details should contain? Or is it just whatever the dispatching spec wants?","msgtype":"m.text"},"ts":1475271465000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"the latter","msgtype":"m.text"},"ts":1475271473000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"'k","msgtype":"m.text"},"ts":1475271701000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1475273252000,"senderName":"BMMJJ","senderId":"BMMJJ@irc"},
{"content":{"body":"eveyone","msgtype":"m.text"},"ts":1475273256000,"senderName":"BMMJJ","senderId":"BMMJJ@irc"},
{"content":{"body":"is this a https://html5.validator.nu help chat ?","msgtype":"m.text"},"ts":1475273281000,"senderName":"BMMJJ","senderId":"BMMJJ@irc"},
{"content":{"body":"or w3c","msgtype":"m.text"},"ts":1475273584000,"senderName":"BMMJJ","senderId":"BMMJJ@irc"},
{"content":{"body":"Domenic / bz: Is the paragraph at http://heycam.github.io/webidl/#ref-for-dfn-dictionary-member-5 correct? It seems to constrain dictionary member types to disallow \"SomeDictionary?\".","msgtype":"m.text"},"ts":1475278459000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]