[
{"content":{"body":"Hixie, should access control and postMessage() align formats for origin etc?","msgtype":"m.text"},"ts":1202860860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(actually, the answer is yes, so we should probably resolve it...)","msgtype":"m.text"},"ts":1202860861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"scheme://hostname:port","msgtype":"m.text"},"ts":1202860980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just the uri format without a path","msgtype":"m.text"},"ts":1202860981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the differences were that your proposed format included a trailing slash and omitted the default port ","msgtype":"m.text"},"ts":1202861100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"from a very brief scan","msgtype":"m.text"},"ts":1202861101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hasn't actually checked the spec though","msgtype":"m.emote"},"ts":1202861102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just the e-mail","msgtype":"m.emote"},"ts":1202861103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sees that the spec doesn't have the trailing slash but does omit the default port","msgtype":"m.text"},"ts":1202861220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, i don't figure most people will include the port","msgtype":"m.text"},"ts":1202861280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, I suppose I could make that change to Access-Control-Origin","msgtype":"m.text"},"ts":1202861340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"access-item is already flexible enough (does not allow / though)","msgtype":"m.text"},"ts":1202861400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the / is part of the path","msgtype":"m.text"},"ts":1202861401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1202861402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i was wondering whether to allow a trailing slash for copy & paste friendlyness","msgtype":"m.text"},"ts":1202861403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, postMessage() actually allows the entire URI","msgtype":"m.text"},"ts":1202861460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just ignores the path","msgtype":"m.text"},"ts":1202861461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it doesn't include it in event.origin, though that's poorly defined right now","msgtype":"m.text"},"ts":1202861462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k, i'm not going to change that for access-item","msgtype":"m.text"},"ts":1202861520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, maybe you should use the same syntax as access-item...","msgtype":"m.text"},"ts":1202861700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: elaborate?","msgtype":"m.text"},"ts":1202861760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for the second argument of postMessage()","msgtype":"m.text"},"ts":1202861880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i mean, elaborate on what you would want changed in the syntax :-)","msgtype":"m.text"},"ts":1202861881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now, it's just a plain old uri/iri","msgtype":"m.text"},"ts":1202861882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you can use postMessage(\"...\", \"example.org\")","msgtype":"m.text"},"ts":1202861883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1202861940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1202861941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that just seems like asking for confusion...","msgtype":"m.text"},"ts":1202861942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i'd recommend that access-item be simplified too :-)","msgtype":"m.text"},"ts":1202861943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1202862060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(in particular, i may just make postMessage(\"...\", \"example.org\") resolve the uri locally instead of throwing an exception)","msgtype":"m.text"},"ts":1202862120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, and postMessage(\"...\", \"*.example.org\") would work","msgtype":"m.text"},"ts":1202862180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that would make it way more complex","msgtype":"m.text"},"ts":1202862240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"probably not so relevant for postMessage, indeed","msgtype":"m.text"},"ts":1202862241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"99% of the time, you'll just do postMessage(\"...\", e.origin);","msgtype":"m.text"},"ts":1202862242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to prevent sending messages to new hosts","msgtype":"m.text"},"ts":1202862243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and on the long run, you'll use endPoints, anyway","msgtype":"m.text"},"ts":1202862244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and just use postMessage() to set up the original connection","msgtype":"m.text"},"ts":1202862300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"suggestions for simplifying access-item are welcome on public-appformats btw :)","msgtype":"m.text"},"ts":1202862480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmph, Opera (9.5) apparently doesn't let me add a doctype to a document","msgtype":"m.text"},"ts":1202862540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Opera only supports ninja doctypes","msgtype":"m.text"},"ts":1202862541000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Uhhh","msgtype":"m.text"},"ts":1202862600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"makes it add a comment instead of a doctype","msgtype":"m.emote"},"ts":1202862780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"-> bed","msgtype":"m.emote"},"ts":1202863020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, Opera deletes \"--\" from inside comments","msgtype":"m.text"},"ts":1202863021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cbody%3E%0D%0A%3Cscript%3Edocument.body.appendChild(document.createComment('a-b--c---d----e'))%3C%2Fscript%3E","msgtype":"m.text"},"ts":1202863140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Looks like an Opera bug","msgtype":"m.text"},"ts":1202863141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does anyone have anything they'd like me to prioritise?","msgtype":"m.text"},"ts":1202863920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, but thank you for asking :-)","msgtype":"m.text"},"ts":1202864160000,"senderName":"chrismurf","senderId":"chrismurf@irc"},
{"content":{"body":"Someone should make something like JSON that can handle 'var x=[];x[0]=x'","msgtype":"m.text"},"ts":1202864280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`:  yaml can probably do that","msgtype":"m.text"},"ts":1202865720000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"I think YAML has \"&label\" and \"*label\" to mark and refer to bits of structure when you want non-trees, and it seems to be quite handy when writing by hand","msgtype":"m.text"},"ts":1202865900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I've no idea how useful or ugly it is when automatically serialising, though)","msgtype":"m.text"},"ts":1202865901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(But YAML is too crazy and complex to be used where interoperability matters - the spec is a hundred pages long)","msgtype":"m.text"},"ts":1202866140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so should U+0085 NEXT LINE (NEL) be a space character in html5?","msgtype":"m.text"},"ts":1202866260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm thinking no.","msgtype":"m.text"},"ts":1202866261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd like no because then I could pass UTF-8 through my ASCII parser and it'd still work alright","msgtype":"m.text"},"ts":1202866380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is randomly replying to feedback from random folders","msgtype":"m.emote"},"ts":1202866440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Pick me, pick me!","msgtype":"m.text"},"ts":1202866560000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"which folder are you? :-)","msgtype":"m.text"},"ts":1202866620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does dir=\"\" always default to ltr?","msgtype":"m.text"},"ts":1202866621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dunno, I just felt like saying it","msgtype":"m.text"},"ts":1202866622000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"or is there a UA pref for the default?","msgtype":"m.text"},"ts":1202866623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I would suspect that that's based on locales","msgtype":"m.text"},"ts":1202867160000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"Hixie: re: NEL, please no","msgtype":"m.text"},"ts":1202889000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Reason: non-ASCII syntax-significant chars => bad","msgtype":"m.text"},"ts":1202889060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie, parsing could use an update","msgtype":"m.text"},"ts":1202890560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webben++ http://www.w3.org/mid/47B1B887.7040205⊙gc","msgtype":"m.text"},"ts":1202891340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the DOM is so bloated :(","msgtype":"m.text"},"ts":1202900820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's pretty sad","msgtype":"m.text"},"ts":1202900821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mostly because it's hard to change at this point","msgtype":"m.text"},"ts":1202900822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the DOM is very sad.","msgtype":"m.text"},"ts":1202901000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but the Attribute node thing might be changeable at this point","msgtype":"m.text"},"ts":1202901060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also getAttribute when the attribute is absent","msgtype":"m.text"},"ts":1202901061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I was thinking about that","msgtype":"m.text"},"ts":1202901062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems to me that Attr is important because it has namespaceURI","msgtype":"m.text"},"ts":1202901063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so can we really change that?","msgtype":"m.text"},"ts":1202901120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do you mean enumerating the attributes instead querying one?","msgtype":"m.text"},"ts":1202901121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202901180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though maybe Attr could be changed in a way that it does not inherit from Node","msgtype":"m.text"},"ts":1202901360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because Note is fricking bloated","msgtype":"m.text"},"ts":1202901420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/Note/Node/","msgtype":"m.text"},"ts":1202901421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be interesting to know if Attr is in practice used by any scripts except serializers","msgtype":"m.text"},"ts":1202901480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do Ajax libraries do that kind of looping over all attributes?","msgtype":"m.text"},"ts":1202901481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"element.attributes is used I think","msgtype":"m.text"},"ts":1202901720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, btw, do you have a list of things where the DOM assumes UTF-16?","msgtype":"m.text"},"ts":1202903760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't.","msgtype":"m.text"},"ts":1202903820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: perhaps saying that the DOM requires it misses the point. it's JavaScript strings that assume 16-bit units","msgtype":"m.text"},"ts":1202903880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"DOM Range is a place where utf-16 is assumed","msgtype":"m.text"},"ts":1202903940000,"senderName":"harri","senderId":"harri@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1202903941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think i'll raise this with the SVG WG","msgtype":"m.text"},"ts":1202904000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera does \"UTF-16 units\" for getNumberOfChars() and I think it makes sense to keep it that way","msgtype":"m.text"},"ts":1202904001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not have a slightly different API just for SVG","msgtype":"m.text"},"ts":1202904002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, Zs doesn't include u0009–u000D","msgtype":"m.text"},"ts":1202904900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-svg/2008Feb/0017.html","msgtype":"m.text"},"ts":1202905320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was there someone on this channel working on Comet stuff?","msgtype":"m.text"},"ts":1202908860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"at some point","msgtype":"m.text"},"ts":1202908920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man, who uses nodeiterator anyway?","msgtype":"m.text"},"ts":1202909940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"complex :(","msgtype":"m.text"},"ts":1202909941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not just a little bit","msgtype":"m.text"},"ts":1202910060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should OPTIONS on a non-existent URI path return 404?","msgtype":"m.text"},"ts":1202911380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"presumably yes","msgtype":"m.text"},"ts":1202911440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"as in, a non-existent GET URI path?","msgtype":"m.text"},"ts":1202911560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1202911680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: if the URI would be 404 on GET or POST","msgtype":"m.text"},"ts":1202911681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"either that or maybe METHOD NOT ALLOWED (405 or so?)","msgtype":"m.text"},"ts":1202911740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the method is allowed thoguh","msgtype":"m.text"},"ts":1202911860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*though","msgtype":"m.text"},"ts":1202911861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so that status code can't be used","msgtype":"m.text"},"ts":1202911862000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie, where in DOM Level 2 Traversal is it defined what to do with incorrect return values for filters? Such as 'true' and 'false'?","msgtype":"m.text"},"ts":1202913000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something tells me Dmitry Turin hasn't paid good attention to what others (Hixie in particular) have written on public-html","msgtype":"m.text"},"ts":1202913360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i always forget to bookmark those posts for reuse as I expect people to understand...","msgtype":"m.text"},"ts":1202913420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if access-control is *now* stable enough to implement in Validator.nu...","msgtype":"m.text"},"ts":1202917500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: surely the GET algorithm should apply to HEAD as well","msgtype":"m.text"},"ts":1202917740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in access-control","msgtype":"m.text"},"ts":1202917741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm not sure how I far I want to open that door","msgtype":"m.text"},"ts":1202917980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. looks like Gecko source now has OPTIONS but still the Method-Check stuff","msgtype":"m.text"},"ts":1202918040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"implements per spec","msgtype":"m.emote"},"ts":1202918041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, I'd wait for Firefox 3 to ship","msgtype":"m.text"},"ts":1202918280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you expect changes to the single-URI policy version?","msgtype":"m.text"},"ts":1202918340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"from xxx import *\" works fine as a normal import in Python, but how can you deal with such a thing when the module is bound to a variable?","msgtype":"m.text"},"ts":1202918640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders why #dom li:last-child::before doesn't work right in Firefox","msgtype":"m.emote"},"ts":1202918700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham__: maintaining backwards compat. is harder than I thought, because everything refers to specific classes/functions in the dom treebuilder","msgtype":"m.text"},"ts":1202918701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, it does work right in Firefox once you make it reflow or something","msgtype":"m.text"},"ts":1202918940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hrm. OPTIONS * seems like a useless complication that doesn't have an upside","msgtype":"m.text"},"ts":1202919420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: access-control could use a companion guide for server-side devs","msgtype":"m.text"},"ts":1202919600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, I hope on no changes whatsoever","msgtype":"m.text"},"ts":1202920380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, I have hoped that for the past year","msgtype":"m.text"},"ts":1202920381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, OPTIONS *? I'll remind you that you argued for using OPTIONS too :)","msgtype":"m.text"},"ts":1202920620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, OPTIONS is the right way to go, but OPTIONS * is still an unnecessary complication in RFC 2616","msgtype":"m.text"},"ts":1202920680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I've now deployed access-control on v.nu","msgtype":"m.text"},"ts":1202920740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"have fun","msgtype":"m.text"},"ts":1202920741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but it seems that OPTIONS * stuff never reaches the servlet","msgtype":"m.text"},"ts":1202920800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not a problem. just weird","msgtype":"m.text"},"ts":1202920801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and useless","msgtype":"m.text"},"ts":1202920802000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oops. And I broke html5.validator.nu and parsetree.validator.nu, it seems","msgtype":"m.text"},"ts":1202920860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that promises something for when less competent people start doing this :(","msgtype":"m.text"},"ts":1202920920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's not related to handling options. it is another \"fix\" in the same checkout","msgtype":"m.text"},"ts":1202920980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1202921820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sighs, thinking his change to html5lib is finally working","msgtype":"m.emote"},"ts":1202921880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Now, to commit.","msgtype":"m.text"},"ts":1202921881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"isn't sure if he ever has actually commited before, even though he's had perms for a while","msgtype":"m.emote"},"ts":1202922000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so the main reasons people use Transitional seems to be (1) be able to use target=_blank and (2) using software that emits markup that only validates as transitional (also mainly due to target=_blank)","msgtype":"m.text"},"ts":1202923320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Isn't iframe also a factor?","msgtype":"m.text"},"ts":1202925240000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(a major factor, I mean)","msgtype":"m.text"},"ts":1202925300000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: less so than target=_blank, it seems. however, iframe is already valid html5","msgtype":"m.text"},"ts":1202925360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: is this based on 10 answers to the sitepoint survey?","msgtype":"m.text"},"ts":1202925361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes, and the comments","msgtype":"m.text"},"ts":1202925420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/people/people who are on sitepoint and read the thread and care enough to vote or comment/","msgtype":"m.text"},"ts":1202925540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ergh.","msgtype":"m.text"},"ts":1202926080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"html5lib relies on minidom's brokenness.","msgtype":"m.text"},"ts":1202926081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://philip.html5.org/tools/parser/","msgtype":"m.text"},"ts":1202926200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Currently missing quite a few bits (especially anything to do with CDATA or RCDATA etc) but generally it seems to work","msgtype":"m.text"},"ts":1202926260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: that your JS impl?","msgtype":"m.text"},"ts":1202926261000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1202926262000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<http://code.google.com/p/html5lib/source/browse/trunk/python/src/html5lib/treebuilders/dom.py#97> — why do we set a readonly property?","msgtype":"m.text"},"ts":1202926440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's irritating that the DOM interface doesn't let you create as many DOMs as an XML parser or HTML parser can","msgtype":"m.text"},"ts":1202926560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: huh?","msgtype":"m.text"},"ts":1202926620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"we set that readonly property to work around a bug in minidom, seemingly","msgtype":"m.text"},"ts":1202926621000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, I suppose for ownerDocument you can just pass the doctype into createDocument and it'll work alright, so maybe you can do as much as an XML parser","msgtype":"m.text"},"ts":1202926800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but it's still not possible to write a proper HTML5 parser in JS because the DOM won't let you create elements and attributes with funny names)","msgtype":"m.text"},"ts":1202926801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: that's really useful","msgtype":"m.text"},"ts":1202926920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonders how else to work around that bug in minidom","msgtype":"m.emote"},"ts":1202926980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Why does the current workaround not work?","msgtype":"m.text"},"ts":1202926981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: are you catching invalid names for attributes?","msgtype":"m.text"},"ts":1202927040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: if you aren't using minidom, and you're using something that enforces the readonly-ness of the property, it breaks","msgtype":"m.text"},"ts":1202927041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"How can I check if \"Dom\" is the module xml.dom.minidom?","msgtype":"m.text"},"ts":1202927042000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: If the minidom bug doesn't affect any other DOMs, you could perhaps wrap the property-setting line in try/except and ignore failures","msgtype":"m.text"},"ts":1202927043000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: the exception raised depends on what impl you're using, though","msgtype":"m.text"},"ts":1202927100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: is <foo:bar> handled correctly?","msgtype":"m.text"},"ts":1202927220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Oops, I wasn't checking attributes - fixed now","msgtype":"m.text"},"ts":1202927221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan: Depends on what you mean by \"correctly\"","msgtype":"m.text"},"ts":1202927280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: local name \"foo:bar\" rather than \"bar\"","msgtype":"m.text"},"ts":1202927281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: some DOM's don't allow attributes to be created containing with a \":\"","msgtype":"m.text"},"ts":1202927340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: It just does createElementNS('http://www.w3.org/1999/xhtml', 'foo:bar'), which seems to work with localName correctly","msgtype":"m.text"},"ts":1202927341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: the w3c dom does","msgtype":"m.text"},"ts":1202927342000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/'//","msgtype":"m.text"},"ts":1202927400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: i think that ends up being a \"bar\" element","msgtype":"m.text"},"ts":1202927401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/work/not work/","msgtype":"m.text"},"ts":1202927402000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I agree now :-)","msgtype":"m.text"},"ts":1202927403000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<foo:p><p> gets parsed wrongly","msgtype":"m.text"},"ts":1202927404000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(because my code just tests localName)","msgtype":"m.text"},"ts":1202927405000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan: I get a \"foo:bar\" in Saf3","msgtype":"m.text"},"ts":1202927406000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders how he should fix that","msgtype":"m.emote"},"ts":1202927460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: either createElement() or throw when there are colons","msgtype":"m.text"},"ts":1202927520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Could createElement work when I want these things to be in the HTML namespace?","msgtype":"m.text"},"ts":1202927521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: if the browser puts them in the html namespace then yes :)","msgtype":"m.text"},"ts":1202927580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Why would it put them in the HTML namespace, when they're not being added into an existing HTML document?","msgtype":"m.text"},"ts":1202927700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ah. hmm. perhaps because dom5 core will require it? :)","msgtype":"m.text"},"ts":1202927760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document.implementation.createDocument('a', 'b', null).createElement('foo:bar').namespaceURI only works in Opera :-(","msgtype":"m.text"},"ts":1202927761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: how come <foo:p><p> and <foo:a><a> are different?","msgtype":"m.text"},"ts":1202928000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: <foo:a> doesn't get added to the list of active elements, since it's not an \"a\" start tag, and so the <a> doesn't realise there's already an active \"a\"","msgtype":"m.text"},"ts":1202928480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"where <foo:p> does get added to the stack of open elements, and so the <p> does think there's already a \"p\"","msgtype":"m.text"},"ts":1202928481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan: I've updated it to distrust anything that's not /^[a-zA-Z_][a-zA-Z0-9_.-]*$/, which will hopefully avoid those problems","msgtype":"m.text"},"ts":1202928660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: that seems a bit harsh","msgtype":"m.text"},"ts":1202928780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"are there other characters than the colon that are problematic?","msgtype":"m.text"},"ts":1202928781000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Anything that's not an XML Name should cause an exception","msgtype":"m.text"},"ts":1202928840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: yeah, but it did that before too, no?","msgtype":"m.text"},"ts":1202928841000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(modulo browser bugs)","msgtype":"m.text"},"ts":1202928900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It used to cause an exception and then catch it and get rid of anything that's /[^a-zA-Z_]/","msgtype":"m.text"},"ts":1202928901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(except in browsers that failed to throw the exception)","msgtype":"m.text"},"ts":1202928902000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in which case it'd act inconsistently with other browsers, which is probably undesirable)","msgtype":"m.text"},"ts":1202928960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, i guess there are few valid reasons to use <embed ☺> anyway","msgtype":"m.text"},"ts":1202929020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Or maybe I should just use createElement and forget about the namespace thing, at least for the DOM-viewer version","msgtype":"m.text"},"ts":1202929021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sounds reasonable","msgtype":"m.text"},"ts":1202929022000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"except that shouldn't help because createElement and setAttribute should still throw exceptions if it's not an XML Name","msgtype":"m.text"},"ts":1202929080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it solves the colon problem","msgtype":"m.text"},"ts":1202929081000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(and the only difference is it doesn't have to be a QName)","msgtype":"m.text"},"ts":1202929082000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and that createElement() takes local name as input rather than qname","msgtype":"m.text"},"ts":1202929140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Okay, I've changed it to just use createElement by default, and to be more permissive about characters","msgtype":"m.text"},"ts":1202929320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(It accepts /^[a-zA-Z:_][a-zA-Z0-9:_.-]*$/, else it gets rid of all /[^a-zA-Z_]/)","msgtype":"m.text"},"ts":1202929440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why not check against the Name production?","msgtype":"m.text"},"ts":1202929441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Because that seems long and complex and not very useful","msgtype":"m.text"},"ts":1202929442000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, why not let the browser throw then?","msgtype":"m.text"},"ts":1202929500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Because then it'll give different output in different browsers (depending on the browser's bugs), which will be a little confusing","msgtype":"m.text"},"ts":1202929560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but testing nonascii or random junk is useful","msgtype":"m.text"},"ts":1202929740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is off for food","msgtype":"m.emote"},"ts":1202929800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Either they continue to use HTML4 Transitional, or they stop to care about conformance, or they use","msgtype":"m.text"},"ts":1202929801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"scripts to insert the target attribute or use window.open().","msgtype":"m.text"},"ts":1202929802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"","msgtype":"m.text"},"ts":1202929803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the last two options are the same as the second option","msgtype":"m.text"},"ts":1202929804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"the stop to care about the output of conformance checkers\"","msgtype":"m.text"},"ts":1202929860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s//y/","msgtype":"m.text"},"ts":1202929861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"conformance checkers should check script too","msgtype":"m.text"},"ts":1202929920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would be interesting to write a conformance checker that supported rewinding","msgtype":"m.text"},"ts":1202929980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that just went down every branch","msgtype":"m.text"},"ts":1202929981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"checking arguments to every method, etc","msgtype":"m.text"},"ts":1202929982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Bonus points if it doesn't take infinite time","msgtype":"m.text"},"ts":1202930040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well obviously it wouldn't check everything","msgtype":"m.text"},"ts":1202930041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you could catch a number of simple things","msgtype":"m.text"},"ts":1202930100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So some well-intentioned person will write some obfuscated code that opens windows in a way the conformance checker can't detect, and then other well-intentioned people will copy-and-paste that so that their pages validate successfully","msgtype":"m.text"},"ts":1202930160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and they'll get a warning \"warning: script could not be verified\"","msgtype":"m.text"},"ts":1202930161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if people want to ignore a validator, why would they use a validator?","msgtype":"m.text"},"ts":1202930220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"They'll ignore those warnings because every non-trivial script will give that warning","msgtype":"m.text"},"ts":1202930221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i think most people don't realise that setting target from script is non-conforming","msgtype":"m.text"},"ts":1202930222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's hard enough trying to decide that some code will always terminate, without always giving up and saying \"can't verify code\"","msgtype":"m.text"},"ts":1202930340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i'm just sayin', it'd be useful","msgtype":"m.text"},"ts":1202930640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Many impossible things would be useful :-)","msgtype":"m.text"},"ts":1202930641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/impossible/hard/","msgtype":"m.text"},"ts":1202930642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: just to update you on what olliej mentioned last night","msgtype":"m.text"},"ts":1202930700000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"annevk: I am in the process of implementing the new postMessage","msgtype":"m.text"},"ts":1202930701000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"annevk: it has not landed yet though","msgtype":"m.text"},"ts":1202930760000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Hixie: can you fix the occurrence of title\"\" in source?","msgtype":"m.text"},"ts":1202930761000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: i thought i had","msgtype":"m.text"},"ts":1202931480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh, wait. I doing this from a local copy.","msgtype":"m.text"},"ts":1202931540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"looks at the current copy","msgtype":"m.emote"},"ts":1202931541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, it's fixed.","msgtype":"m.text"},"ts":1202931542000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1202931543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is too tired","msgtype":"m.emote"},"ts":1202931600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: for the cross-referencing (per HTML 5) should I do any normalisation (of whitespace? of Unicode? or case?) before calculating cross references?","msgtype":"m.text"},"ts":1202931660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"space characters should go to one space, yeah","msgtype":"m.text"},"ts":1202931720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"several of the title attributes and element contents span multiple lines","msgtype":"m.text"},"ts":1202931721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"currently the spec says it must be exactly identical","msgtype":"m.text"},"ts":1202931722000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: (I mean in the HTML 5 def of dfn)","msgtype":"m.text"},"ts":1202931780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"probably best to normaline case too","msgtype":"m.text"},"ts":1202931781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah that's all gonna be dropped i think","msgtype":"m.text"},"ts":1202931782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah.","msgtype":"m.text"},"ts":1202931783000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"notes that on his private playing around copy that actually processing the DOM is now slower than parsing","msgtype":"m.emote"},"ts":1202931960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"import psyco","msgtype":"m.text"},"ts":1202932020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Makes things much faster!","msgtype":"m.text"},"ts":1202932021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1202932080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"expands graph","msgtype":"m.emote"},"ts":1202932081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Okay, that isn't good.","msgtype":"m.text"},"ts":1202932082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Python is definitely too slow. That sucks.","msgtype":"m.text"},"ts":1202932140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You could use Java","msgtype":"m.text"},"ts":1202932141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I know no Java, which is a slight issue.","msgtype":"m.text"},"ts":1202932200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"python is slow, generally, but i wouldn't bet on python's speed being the gating factor unless you're making a ray tracer or something","msgtype":"m.text"},"ts":1202932201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: or maybe `cat header_whatwg source` is too big for a python spec-gen :)","msgtype":"m.text"},"ts":1202932260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"shouldn't be","msgtype":"m.text"},"ts":1202932261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, the overhead isn't going to be _that_ big, regardless of what language you use","msgtype":"m.text"},"ts":1202932262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the spec splitter is a python script, e.g.)","msgtype":"m.text"},"ts":1202932320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok, s/conformance/validating their documents/","msgtype":"m.text"},"ts":1202932380000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"thinks he could try doing this another way, actually","msgtype":"m.emote"},"ts":1202932440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: also, window.open() isn't non-conforming, is it?","msgtype":"m.text"},"ts":1202932441000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: window.open with _blank is","msgtype":"m.text"},"ts":1202932442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1202932443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"window.open(url) works","msgtype":"m.text"},"ts":1202932444000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"iirc that's non-conforming","msgtype":"m.text"},"ts":1202932500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, i guess it's not explicitly non-conforming","msgtype":"m.text"},"ts":1202932501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1202932502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway i think you're right, and _blank will just have to be made valid. we'll just have to make it optional to implement instead.","msgtype":"m.text"},"ts":1202932503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thinks he'll be able to do it in a more memory expensive way","msgtype":"m.emote"},"ts":1202932560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1202932561000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(but the overhead is still not that big)","msgtype":"m.text"},"ts":1202932562000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan_: any time the spec requires opening a new top-level browsing context, i think the current one should be selected instead","msgtype":"m.text"},"ts":1202932563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: i'm getting more and more annoyed by sites that decide when i'm opening a page in a new tab","msgtype":"m.text"},"ts":1202932564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and since all i have is a spec-hammer, all problems look like spec-nails to me","msgtype":"m.text"},"ts":1202932620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, but that's configurable in the browser","msgtype":"m.text"},"ts":1202932621000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: weinig has a question for you (and he's a pansy)","msgtype":"m.text"},"ts":1202932622000,"senderName":"bradee-oh","senderId":"bradee-oh@irc"},
{"content":{"body":"not currently, but yeah","msgtype":"m.text"},"ts":1202932623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bradee-oh: brt","msgtype":"m.text"},"ts":1202932624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: using the spec-hammer doesn't stop sites opening new windows, it just makes it harder to configure because it becomes an arms race","msgtype":"m.text"},"ts":1202932680000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham__: ping","msgtype":"m.text"},"ts":1202932681000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan_: yeah","msgtype":"m.text"},"ts":1202932682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hey, we were just curious what an <ihost> refers to?","msgtype":"m.text"},"ts":1202932683000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig: same as <host>, but for IRIs","msgtype":"m.text"},"ts":1202932740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ah, ok","msgtype":"m.text"},"ts":1202932741000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig: did i use it in a paragraph without a reference?","msgtype":"m.text"},"ts":1202932742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in Resource metadata management","msgtype":"m.text"},"ts":1202932743000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1202932800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"someone send mail :-)","msgtype":"m.text"},"ts":1202932801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weinig: can you?","msgtype":"m.text"},"ts":1202932802000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: sure","msgtype":"m.text"},"ts":1202932803000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Hixie: I will also send mail regarding this, but, is postMessage supposed to work with file: urls?","msgtype":"m.text"},"ts":1202932860000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"(i.e., not the guy who pointed out where it was, but the one who found it)","msgtype":"m.text"},"ts":1202932861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"weinig: basically, anything involving file: URIs is not my concern, since you don't need interop for anything that's using file: URIs. so it's up to you.","msgtype":"m.text"},"ts":1202932862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weinig: but generally i would say i guess it would work, but origin would be null","msgtype":"m.text"},"ts":1202932863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nods","msgtype":"m.emote"},"ts":1202932920000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Hixie: when replacing spaces for x-refs, what space characters should be done? just ASCII ones?","msgtype":"m.text"},"ts":1202932921000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i'd just do whatever falls under the \"space character\" definition in html5","msgtype":"m.text"},"ts":1202933040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k.","msgtype":"m.text"},"ts":1202933041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but for me, it just needs to be space and linefeed","msgtype":"m.text"},"ts":1202933042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all \"me\" Hixie :)","msgtype":"m.text"},"ts":1202933043000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"doesn't particually want to commit this to html5lib because he expects he'll be shot for it","msgtype":"m.emote"},"ts":1202933580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm kinda here","msgtype":"m.text"},"ts":1202936580000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"jgraham__: would I be shot if I committed a \"except Exception\"?","msgtype":"m.text"},"ts":1202936640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"specifically, to work around a bug in minidom","msgtype":"m.text"},"ts":1202936641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No, well you would unless you just write except: (no need for the Exception bit) :)","msgtype":"m.text"},"ts":1202936642000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"gsnedders: Yeah, that seems like a reasonable use case","msgtype":"m.text"},"ts":1202936700000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"(I read the logs earlier)","msgtype":"m.text"},"ts":1202936701000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"the exact exception depends on the DOM impl, as I said","msgtype":"m.text"},"ts":1202936702000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, the alternative (if Dom == xml.dom.minidom) seems just as bad","msgtype":"m.text"},"ts":1202936760000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"jgraham__: and should I add pxdom to the parser tests even though one test fails, due to a bug in pxdom?","msgtype":"m.text"},"ts":1202937000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yeah, for sure. But email html5lib-discuss⊙gc explaining why the test fails","msgtype":"m.text"},"ts":1202937060000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1202937061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I've already emailed the author of pxdom about the bug, fwiw)","msgtype":"m.text"},"ts":1202937062000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Have you looked at making multiple dom imps work with treewalkers","msgtype":"m.text"},"ts":1202937300000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"jgraham__: I haven't yet tried, but a quick look at the code made me think it would work","msgtype":"m.text"},"ts":1202937360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, I don't know how much woulkd need to be changed. Maybe just adding pyxdom to the tests","msgtype":"m.text"},"ts":1202937361000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"jgraham__: what file would they need to be added in for that?","msgtype":"m.text"},"ts":1202937420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"test_treewalkers.py?","msgtype":"m.text"},"ts":1202937421000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tests/testtreewalkers.py","msgtype":"m.text"},"ts":1202937480000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"yeah.","msgtype":"m.text"},"ts":1202937481000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"thanks weinig","msgtype":"m.text"},"ts":1202937540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham__: yeah, it works fine with the DOM treewalker.","msgtype":"m.text"},"ts":1202937720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(pending the other bug that comes up again)","msgtype":"m.text"},"ts":1202937721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Great","msgtype":"m.text"},"ts":1202937722000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"I think I'll send a general email about what I've done","msgtype":"m.text"},"ts":1202938140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"commits and sends email","msgtype":"m.emote"},"ts":1202938860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"updated http://www.hixie.ch/specs/dom/messages/0.9","msgtype":"m.text"},"ts":1202939100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"could you add some rational etc?","msgtype":"m.text"},"ts":1202939280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not really clear to me what problem it's trying to solve","msgtype":"m.text"},"ts":1202939340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rationale, you mean?","msgtype":"m.text"},"ts":1202939460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1202939461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202939520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be interesting to have a .reply() API for the postMessage() stuff","msgtype":"m.text"},"ts":1202941680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in, e.g., step 2.4 of the postMessage() algorithm, does \"these steps\" mean the substeps of step 2 or all the steps of the algorithm?","msgtype":"m.text"},"ts":1202942340000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"Hixie: I assume the latter","msgtype":"m.text"},"ts":1202942341000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"all of them","msgtype":"m.text"},"ts":1202942700000,"senderName":"Hixie","senderId":"Hixie@irc"}
]