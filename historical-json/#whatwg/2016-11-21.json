[
{"content":{"body":"MikeSmith: zcorpan: I mentioned the XSLT argument too, but I think the problem with that argument is that XSLT hasn't evolved at all and still does poorly at HTML serialization","msgtype":"m.text"},"ts":1479714704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: zcorpan: I believe there are several void elements it doesn't get right and such","msgtype":"m.text"},"ts":1479714717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: belated happy b-day!","msgtype":"m.text"},"ts":1479717686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thank you","msgtype":"m.text"},"ts":1479717711000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: yeah, using this doctype is indicative that the tool used is bad at producing HTML. but people use them anyway, and there are non-XML tools that are also bad at producing HTML that are also used.","msgtype":"m.text"},"ts":1479720063000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: zcorpan I could add a warning to the checker for documents with “about:legacy-compat” saying “Tools that aren’t capable of generating a docytpe without a system ID are likely to have other problems generating HTML output. Check your output carefully.”","msgtype":"m.text"},"ts":1479721526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but in practice for users of that checker they are going to see that as an error message","msgtype":"m.text"},"ts":1479721558000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"a message they want to make go away","msgtype":"m.text"},"ts":1479721581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they are using a checker so they are checking their output already","msgtype":"m.text"},"ts":1479721591000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1479721607000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if anything the message should be \"consider switching to a different toolchain that doesn't suck\" :-)","msgtype":"m.text"},"ts":1479721647000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i don't think that's helpful","msgtype":"m.text"},"ts":1479721679000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1479721684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess that is not helpful to authors","msgtype":"m.text"},"ts":1479721698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it hurts to keep paying the XML tax forever","msgtype":"m.text"},"ts":1479721740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we can make tools suck less by contributing with issues etc, and advocating using tools we think are good","msgtype":"m.text"},"ts":1479721766000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Do any of you have an opinion about XML5?","msgtype":"m.text"},"ts":1479721778000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: what context?","msgtype":"m.text"},"ts":1479721800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i heard context was https://github.com/validator/validator/issues/284","msgtype":"m.text"},"ts":1479721800000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"zcorpan: ALL OF THEM","msgtype":"m.text"},"ts":1479721831000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1479721853000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I like XML5","msgtype":"m.text"},"ts":1479721880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but maybe the window of opportunity has passed","msgtype":"m.text"},"ts":1479721892000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or the window of need","msgtype":"m.text"},"ts":1479721896000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah I don't see anyone using it anytime soon but Servo.","msgtype":"m.text"},"ts":1479721906000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"i would much prefer browsers using XML5 over parsing XML with the HTML parser","msgtype":"m.text"},"ts":1479721956000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Do they do that?","msgtype":"m.text"},"ts":1479722079000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: some do, but more back in the day. presto-Opera did also at the end in some cases (only to reparse if it wasn't well-formed XML)","msgtype":"m.text"},"ts":1479722640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nox: https://simon.html5.org/articles/mobile-results","msgtype":"m.text"},"ts":1479722687000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1479722829000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: is there an upstream/downstream process between validator/validator and w3c/web-platform-tests ?","msgtype":"m.text"},"ts":1479723130000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh validator/tests is a mirror. ok","msgtype":"m.text"},"ts":1479724743000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://lists.xml.org/archives/xml-dev/201611/msg00067.html","msgtype":"m.text"},"ts":1479752847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm somewhat surprised the major difference in boolean attributes isn't discussed","msgtype":"m.text"},"ts":1479753968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also somewhat surprised we're discussing DTDs in 2016, but maybe given recent election results I shouldn't be","msgtype":"m.text"},"ts":1479754030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thinking about the election as a boolean hurts my brain","msgtype":"m.text"},"ts":1479754138000,"senderName":"eusid","senderId":"eusid@irc"},
{"content":{"body":"Why can dictionary attributes not be nullable, I wonder?","msgtype":"m.text"},"ts":1479754406000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: dictionary members can be nullable","msgtype":"m.text"},"ts":1479754441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but the preference is that they're not, unless they can be fed by some object that has a property of the same name that is nullable for some reason","msgtype":"m.text"},"ts":1479754489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, but you can't do interface Foo { attribute SomeDictionary? bar; }","msgtype":"m.text"},"ts":1479754493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So people are inventing interfaces just to get around that restriction","msgtype":"m.text"},"ts":1479754514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if we start returning plain objects from getters, why do we have FrozenArray?","msgtype":"m.text"},"ts":1479754538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: should just be Array then","msgtype":"m.text"},"ts":1479754544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I agree, but some people like immutability","msgtype":"m.text"},"ts":1479754554000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1479754559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So your argument is against dictionary attributes in general","msgtype":"m.text"},"ts":1479754560000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Also doesn't notifications do this","msgtype":"m.text"},"ts":1479754585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Now sicking has disappeared, maybe we can revisit the immutability argument?","msgtype":"m.text"},"ts":1479754587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess just not nullable","msgtype":"m.text"},"ts":1479754588000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Notification doesn't return dictionaries from a getter","msgtype":"m.text"},"ts":1479754628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah just frozenarray<dictionary>","msgtype":"m.text"},"ts":1479754640000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which it freezes in prose","msgtype":"m.text"},"ts":1479754645000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh right, that madness","msgtype":"m.text"},"ts":1479754657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not a fan","msgtype":"m.text"},"ts":1479754664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If I had the power I'd remove FrozenArray and replace existing usage with sequence","msgtype":"m.text"},"ts":1479754703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As for nullable dictionary attributes, why would that be needed as opposed to returning {}?","msgtype":"m.text"},"ts":1479754763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is your payment address not set, or is it just a payment address with empty string country/region/city/etc.? The former seems better.","msgtype":"m.text"},"ts":1479754888000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Fair","msgtype":"m.text"},"ts":1479754967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it seems like we want a PaymentAddress interface with lots of readonly fields, after all.","msgtype":"m.text"},"ts":1479755020000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk, tobie: The distinction y'all are looking for is the notion of \"kinds\" from type theory. Values are the lowest kind, types are the next highest (they can be instantiated to produce a value), and type constructors are the next highest after that (they can be instantiated to produce a type).  The kind hierarchy is infinite, of course.","msgtype":"m.text"},"ts":1479757144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If values are kind 1, types are kind 2, etc, then \"dictionary\" or \"record\" are kind-3 things.","msgtype":"m.text"},"ts":1479757175000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The IDL definitions types in Bikeshed are meant to capture kind-2 things.  There's nothing official for kind-3, because there's no call for it, so they instead fall into the generic \"dfn\" bucket.","msgtype":"m.text"},"ts":1479757252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then you've also got the kind-2 things like \"sequence<DOMString>\". They're definitely kind-2, types, because when they're instantiated they produce values (an array of strings, in this case).","msgtype":"m.text"},"ts":1479757329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're just *anonymous* types, which aren't handled by the Bikeshed linking model. As far as I can tell, you don't really need it, either.  You instead want to link to \"sequence\" (the kind-3 thing) and \"DOMString\" (the kind-2 thing).  If you use typedef to give a name to it, tho, like \"typedef sequence<DOMString> NameList;\", then \"NameList\" is a kind-2","msgtype":"m.text"},"ts":1479757462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thing, a type, with a name that can be referred with Bikeshed's linking model.","msgtype":"m.text"},"ts":1479757462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am getting complaints frm devepers that webgl it has to transpile to javascript or avoid garbage colection.","msgtype":"m.text"},"ts":1479764800000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"They don't like it","msgtype":"m.text"},"ts":1479764829000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"What are you ogoing to do about it?","msgtype":"m.text"},"ts":1479764870000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"I think we removed the \"block inheritance\" flag from shadow roots, right?","msgtype":"m.text"},"ts":1479767033000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`'s old canvas tests, regenerating them seems to produce different reference images depending on cairo version. Is this a problem?","msgtype":"m.text"},"ts":1479767183000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders how they differ","msgtype":"m.emote"},"ts":1479767188000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: If it's just changes to antialiasing etc, then no","msgtype":"m.text"},"ts":1479767430000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The reference images weren't meant to precisely match the canvas output, just look close enough that a human could visually check if the browser was doing basically the right thing","msgtype":"m.text"},"ts":1479767472000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and to help debug test failures by seeing what was expected","msgtype":"m.text"},"ts":1479767493000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: thx","msgtype":"m.text"},"ts":1479767825000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(But I could be wrong, I haven't worked on this stuff for like a decade)","msgtype":"m.text"},"ts":1479767948000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well, that's where you went wrong! :)","msgtype":"m.text"},"ts":1479767997000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I assumed the web was solved so there wasn't any need to continue working on it","msgtype":"m.text"},"ts":1479768743000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"turns out that assumption was wrong, unfortunately","msgtype":"m.text"},"ts":1479769119000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]