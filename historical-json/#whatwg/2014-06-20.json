[
{"content":{"body":"Hixie: can you pls regen? kthxbye :-)","msgtype":"m.text"},"ts":1403240405000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: i tried, but got assertion errors in anolis since i was still set to using html5lib","msgtype":"m.text"},"ts":1403242265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: will try again tomorrow","msgtype":"m.text"},"ts":1403242272000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders, way to spam me :)","msgtype":"m.text"},"ts":1403248778000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mounir: heh, sure, this 70% is better quality too, Lindt is okay","msgtype":"m.text"},"ts":1403249817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh, why did I not see http://dev.w3.org/html5/decision-policy/html5-2014-plan.html until now","msgtype":"m.text"},"ts":1403252066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I love how first it says \"monolithic kitchen sink specification\" (without acknowledging that is a WHATWG graphic and that the situation at the W3C is different) and then goes on to claim \"HTML5 is good at modularity\" as if they didn't just say monolithic","msgtype":"m.text"},"ts":1403252128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I doubt I can either.","msgtype":"m.text"},"ts":1403253118000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which review is this?","msgtype":"m.text"},"ts":1403253124000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: I won't necessarily defend \"plan 2014\", certainly not to the letter, but in fairness the link to the image is straight to http://images.whatwg.org/abstract.png which, well, doesn't exactly hide the provenance :)","msgtype":"m.text"},"ts":1403254241000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"also, it is entirely possible to believe that a specification is handled in a monolithic manner but that the technology lends itself to (some forms of) modularity","msgtype":"m.text"},"ts":1403254287000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(my point was mostly that WHATWG HTML is larger than W3C HTML5; so that using that graphic as representing W3C HTML5 is weird, especially with the weird Jeff Jaffe modular dance it is followed with)","msgtype":"m.text"},"ts":1403254449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I won't dispute that there's weirdness","msgtype":"m.text"},"ts":1403254510000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"What's the best URL to use as a reference for web-platform-tests?","msgtype":"m.text"},"ts":1403255473000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests","msgtype":"m.text"},"ts":1403255569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not really that useful as an introduction to what wpt *is*","msgtype":"m.text"},"ts":1403255611000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: depends on what level of introduction — perhaps the README should be pimped to serve the purpose you have in mind?","msgtype":"m.text"},"ts":1403255727000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"krit: is there anything left we need to work on?","msgtype":"m.text"},"ts":1403255854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: Yeah, perhaps that's the right solution. It just means the answer to my original question depends on me actually creating such an introduction","msgtype":"m.text"},"ts":1403255871000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I think it may be useful, nothing obvious jumps at me from the TestTWF docs","msgtype":"m.text"},"ts":1403255960000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: that email broke threading again","msgtype":"m.text"},"ts":1403259465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though it did not on http://lists.w3.org/Archives/Public/www-svg/2014Jun/thread.html","msgtype":"m.text"},"ts":1403259514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gmail :/","msgtype":"m.text"},"ts":1403259523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's what I was going to say","msgtype":"m.text"},"ts":1403259526000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I think the problem is at your end","msgtype":"m.text"},"ts":1403259533000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"the message has all the right Reply-To stuff","msgtype":"m.text"},"ts":1403259543000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I guess Gmail sorts on Subject?","msgtype":"m.text"},"ts":1403259557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thunderbird is a clusterfuck of brokenness on small trivial things like not corrupting mailboxes or not breaking its own UI every other minute; but you can be sure it got mailing list headers right","msgtype":"m.text"},"ts":1403259601000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I have no idea, I always found GMail completely unusable","msgtype":"m.text"},"ts":1403259618000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I find it super awesome, except for plain text and I guess the header stuff","msgtype":"m.text"},"ts":1403259729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera Mail was really great at those things, was hard to switch away from that","msgtype":"m.text"},"ts":1403259763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I never got to try Opera Mail because it crashed importing my email every single time I decided to give it a shot","msgtype":"m.text"},"ts":1403259941000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Wow the one thing that you can't accuse Thunderbird of is updating the UI too often","msgtype":"m.text"},"ts":1403260069000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's changed like once in about 5 years","msgtype":"m.text"},"ts":1403260076000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"One thing you can't accuse Opera Mail of is changing, like, ever.","msgtype":"m.text"},"ts":1403260248000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: I didn't accuse it of updating — but it (dynamically) breaks an awful lot","msgtype":"m.text"},"ts":1403260521000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Oh, I see","msgtype":"m.text"},"ts":1403260553000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I haven't had that experience","msgtype":"m.text"},"ts":1403260558000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't really rembmer that happening recently","msgtype":"m.text"},"ts":1403260567000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"just this morning I undeleted a mail in a thread, it made it show the thread twice in the box view, with one copy gradually losing its subject (and showing Jan 1970 for the date) as I deleted from the other","msgtype":"m.text"},"ts":1403260574000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"then it became impossible to delete the ghost thread","msgtype":"m.text"},"ts":1403260602000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"just another day with Thunderbird :)","msgtype":"m.text"},"ts":1403260609000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"You might be using more advanced features than me :)","msgtype":"m.text"},"ts":1403260640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it's true that figuring out how to enabling threading required pretty advanced experimental sleuthing","msgtype":"m.text"},"ts":1403260688000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"*enable","msgtype":"m.text"},"ts":1403260697000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I guess I never delete emails :)","msgtype":"m.text"},"ts":1403260949000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah that's a point. I only delete spam","msgtype":"m.text"},"ts":1403260976000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What kinda of weirdo deletes emails?","msgtype":"m.text"},"ts":1403261011000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, wait, darobin.","msgtype":"m.text"},"ts":1403261013000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"evidently","msgtype":"m.text"},"ts":1403261242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which incidentially sounds like his album of terrible MOR music aimed at middle aged women \"darobin: evidently\"","msgtype":"m.text"},"ts":1403261301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ow, that's just mean jgraham :)","msgtype":"m.text"},"ts":1403262157000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I guess it's the kind of music you could listen to while reading http://www.amazon.co.uk/The-Darobin-Legend-Mysterious-Warriors/dp/059529832X","msgtype":"m.text"},"ts":1403262253000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"edits the Plan 2014 doc to add a link to http://ecx.images-amazon.com/images/I/513JXR8S50L._.jpg","msgtype":"m.emote"},"ts":1403262413000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1403262443000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"JakeA: Domenic: I've been looking into defining progress events better and something occurred to me. Streams will not help with actually identifying how many bytes transfered","msgtype":"m.text"},"ts":1403270085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Domenic: HTTP network and cache fetch layer deals with content encodings and as such those details never make it all the way through","msgtype":"m.text"},"ts":1403270154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, so we need bytesReceived and bytesExpected on response.body?","msgtype":"m.text"},"ts":1403270277000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not sure what the best solution is","msgtype":"m.text"},"ts":1403270429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: will there be the same issue reading from disk, or is this unique to web requests?","msgtype":"m.text"},"ts":1403270535000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: bah, gotta go flight mode, for a flight no less","msgtype":"m.text"},"ts":1403270557000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think this is unique to HTTP","msgtype":"m.text"},"ts":1403270582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: although it depends a bit on how we deal with zipped storage and such I guess","msgtype":"m.text"},"ts":1403270609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we haven't really started exploring those details until recently","msgtype":"m.text"},"ts":1403270626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: safe travels","msgtype":"m.text"},"ts":1403270647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm away starting second week of July","msgtype":"m.text"},"ts":1403270668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is searching for some serious use-cases for generators ","msgtype":"m.emote"},"ts":1403272166000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"Domenic, I would be very useful if you could suggest me few use-case studies of generators :-)","msgtype":"m.text"},"ts":1403272338000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"You could perhaps look at https://mxr.mozilla.org/mozilla-central/","msgtype":"m.text"},"ts":1403272490000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess there's a reason they say \"Helpful as a Ms2ger\"","msgtype":"m.text"},"ts":1403272637000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger, nice, the first thing I came across searching there was TODO: Bug 948484 - support arrow functions and ES6 generators :)","msgtype":"m.text"},"ts":1403272640000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"typically to make non-linear code linear, in my experience","msgtype":"m.text"},"ts":1403272644000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"similar to workers, i suppose","msgtype":"m.text"},"ts":1403272691000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"darobin, so it's not only in my dreams they say that?","msgtype":"m.text"},"ts":1403272744000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I understand the power of yield","msgtype":"m.text"},"ts":1403272746000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"Did some tree traversal with it as well, http://h3manth.com/new/blog/2014/tree-traversal-with-es6-generator/","msgtype":"m.text"},"ts":1403272793000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"You use them anytime you want lazy iteration","msgtype":"m.text"},"ts":1403272796000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is pretty often in my experience","msgtype":"m.text"},"ts":1403272813000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: i find that to be a nice bonus, but not the main benefit","msgtype":"m.text"},"ts":1403272814000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Control flow w/suspend and resume","msgtype":"m.text"},"ts":1403272822000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"at least in my use in python","msgtype":"m.text"},"ts":1403272828000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"something like  var responses = yield [_get(\"index.html\", resume()) is fun","msgtype":"m.text"},"ts":1403272875000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"more like what koa and co does","msgtype":"m.text"},"ts":1403272883000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"zewt: Are you talking about yield on the rhs?","msgtype":"m.text"},"ts":1403273119000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like foo = (yield bar())","msgtype":"m.text"},"ts":1403273171000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think of that as a generator, although the PEP does call it \"extended generators\"","msgtype":"m.text"},"ts":1403273201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: no, the generator itself","msgtype":"m.text"},"ts":1403273237000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"So I don't exactly see how you are using them to make non-linear code linear that doens't amount to iteration","msgtype":"m.text"},"ts":1403273290000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the main benefit i find is being able to write the generator itself linearly, eg. as if it's the top-level function and it's calling a function to output values, rather than having to save state and be called independently several times","msgtype":"m.text"},"ts":1403273303000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Right, the implicit state saving is useful","msgtype":"m.text"},"ts":1403273340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's ideal to encode infinite sequences and operations over them","msgtype":"m.text"},"ts":1403273347000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"Rather than having to write a class","msgtype":"m.text"},"ts":1403273352000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's a bigger benefit than the streaming itself, IMO","msgtype":"m.text"},"ts":1403273364000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: you got a sec for debugging anolis/pms?","msgtype":"m.text"},"ts":1403275393000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Perhaps","msgtype":"m.text"},"ts":1403275711000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'm hitting the assert isinstance(buffer,bytes) on line 535 of inputstream.py (detectEncodingMeta)","msgtype":"m.text"},"ts":1403275759000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: why do streams not help with that?","msgtype":"m.text"},"ts":1403275822000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: What are you doing to hit it?","msgtype":"m.text"},"ts":1403275841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://anolis.hoppipolla.co.uk/aquarium.py/output?uri=http://www.whatwg.org/specs/web-apps/current-work/source-whatwg-complete&process_toc=on&process_xref=on&process_sub=on&w3c_compat_xref_a_placement=on&w3c_compat_xref_elements=on&parser=html5lib&serializer=html5lib&omit_optional_tags=on&output_encoding=ascii","msgtype":"m.text"},"ts":1403275868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Well you are evidently getting punted down the \"not unicode\" codepath, but at some point getting unicode data","msgtype":"m.text"},"ts":1403276199000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure why","msgtype":"m.text"},"ts":1403276205000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/not unicode/raw bytes/","msgtype":"m.text"},"ts":1403276225000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'm trying to use html5lib so i have a sane output that i can try to duplicate","msgtype":"m.text"},"ts":1403276244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so in theory this will be the last time i need this","msgtype":"m.text"},"ts":1403276250000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if you want to just band-aid it for now that's fine by me","msgtype":"m.text"},"ts":1403276259000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the libxml.html + aaalib output that i was using before is not sane, especially with respect to whitespace)","msgtype":"m.text"},"ts":1403276290000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: you could explain this as the network stream handing you a transformed stream without giving you access to the actual network bits","msgtype":"m.text"},"ts":1403276291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, that reminds me","msgtype":"m.text"},"ts":1403276308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Well there is a real bug, probably in html5lib","msgtype":"m.text"},"ts":1403276314000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Somewhere around the code that SimonSapin changed to avoid a real bug in python","msgtype":"m.text"},"ts":1403276335000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: i was talking to some folk at google the other day who do back-end html serving stuff, and they asked about a feature of service workers and i didn't know the answer","msgtype":"m.text"},"ts":1403276339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: yeah, i guess. but the transform stream could contain an accumulator that counts bytes transformed so far","msgtype":"m.text"},"ts":1403276348000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: is there any way in service workers to batch requests? e.g. if the browser knows that it suddenly needs three scripts, can the service worker package them up into one back-end request and then split up the result?","msgtype":"m.text"},"ts":1403276371000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: yeah, what JakeA was suggesting might work","msgtype":"m.text"},"ts":1403276403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh this is about progress events on service workers, not on XHR","msgtype":"m.text"},"ts":1403276445000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: since you can do event.respondWith(promise), yes","msgtype":"m.text"},"ts":1403276447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: progress \"events\" for fetch()","msgtype":"m.text"},"ts":1403276466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1403276471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: how would you do the buffering? just set a timer for 1ms and see if you get any other requests in the meantime? or would the three requests be delivered to the worker at once?","msgtype":"m.text"},"ts":1403276496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so RequestBodyStream should just be a stream of arraybuffers","msgtype":"m.text"},"ts":1403276498000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we recently figured out how exactly we wanted progress events for XMLHttpRequest to behave, while trying to figure out a plan as to how to write that in the specification I realized our streams approach is not quite ideal for that","msgtype":"m.text"},"ts":1403276514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's as close to \"raw network bytes\" as JavaScript gets","msgtype":"m.text"},"ts":1403276526000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no, Content-Encoding is already done at that point","msgtype":"m.text"},"ts":1403276546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it shouldn't be.","msgtype":"m.text"},"ts":1403276555000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: yeah I guess","msgtype":"m.text"},"ts":1403276559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: euhm","msgtype":"m.text"},"ts":1403276570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: would be nice if there was a less hacky way to know that a batch of requests came in at once","msgtype":"m.text"},"ts":1403276576000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: RequestBodyStream should be raw bytes. If you want to decode, do `.pipeThrough(new TextDecoderTransform(request.headers[\"Content-Encoding\"]))`","msgtype":"m.text"},"ts":1403276582000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/[\"Content-Encoding\"]/.get(\"Content-Encoding\")","msgtype":"m.text"},"ts":1403276606000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: how would you know such a thing?","msgtype":"m.text"},"ts":1403276632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: e.g. when i have the dependency thing i'm working on, and script A depends on scripts B, C, and D, and you tell the browser \"i need script A!\". The browser synchronously knows it needs A, B, C, and D.","msgtype":"m.text"},"ts":1403276674000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: or similar for ES modules","msgtype":"m.text"},"ts":1403276703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: hmm, that would make fetch() noticeably harder to work with","msgtype":"m.text"},"ts":1403276705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: https://github.com/slightlyoff/ServiceWorker/issues/new ?","msgtype":"m.text"},"ts":1403276737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: add .asStringStream() then","msgtype":"m.text"},"ts":1403276882000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Content-Encoding has nothing to do with that","msgtype":"m.text"},"ts":1403276899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: then I don't understand; you said \"Content-Encoding is already done at that point\"","msgtype":"m.text"},"ts":1403276919000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh dear","msgtype":"m.text"},"ts":1403276942000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: browsers have a network & cache layer","msgtype":"m.text"},"ts":1403276947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm getting Content-Encoding and text encoding mixed up","msgtype":"m.text"},"ts":1403276955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that sits below the fetching layer","msgtype":"m.text"},"ts":1403276960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: which sits below the content layer","msgtype":"m.text"},"ts":1403276966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so we're not exposing primitives to allow access to the raw, gzipped bytes?","msgtype":"m.text"},"ts":1403276982000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the network & cache layer deals with gzip and friends","msgtype":"m.text"},"ts":1403276987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i thought that was the entire point of fetch having a stream API","msgtype":"m.text"},"ts":1403276994000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so if someone wants to fetch something and then store it on disk, you're going to un-gzip it first, then make them gzip it back to store efficiently on disk?","msgtype":"m.text"},"ts":1403277025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't know, all I know is what we've explained so far","msgtype":"m.text"},"ts":1403277063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought fetch was going to be a low-level API like Node's http.get","msgtype":"m.text"},"ts":1403277082000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or rather http.request","msgtype":"m.text"},"ts":1403277087000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not necessarily opposed to changing it, but that would require a bunch of coordination","msgtype":"m.text"},"ts":1403277093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well does any of this impact near-term stuff? it seems all related to the eventual stream manifestation","msgtype":"m.text"},"ts":1403277122000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, it seems it would affect whether you get a JSON object back or a failure because it was zipped","msgtype":"m.text"},"ts":1403277148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: So I think upgrading html5lib has helped. I also think it's going to time out before you get a response…","msgtype":"m.text"},"ts":1403277151000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, no, it worked","msgtype":"m.text"},"ts":1403277169000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nah, I figure asXXX can contain as many steps as you want, for maximum convenience","msgtype":"m.text"},"ts":1403277213000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: whoa whoa whoa","msgtype":"m.text"},"ts":1403277221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk doing his best Keanu Reeves impression there","msgtype":"m.text"},"ts":1403277245000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"asJSON = is application/json? ok proceed; otherwise fail. is gzipped? pass through ungzip transform. now json parse. succeed? return object. fail ? return parse error","msgtype":"m.text"},"ts":1403277261000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i guess there's a text-decoding step there too","msgtype":"m.text"},"ts":1403277285000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"after the ungzip","msgtype":"m.text"},"ts":1403277291000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jgraham: cool, let me try regenning...","msgtype":"m.text"},"ts":1403277320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: there is","msgtype":"m.text"},"ts":1403277464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: thanks, looks like it worked!","msgtype":"m.text"},"ts":1403277475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: https://github.com/slightlyoff/ServiceWorker/issues/339","msgtype":"m.text"},"ts":1403277503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: Great","msgtype":"m.text"},"ts":1403277516000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: indeed. and if you're doing transforms from array buffers to text to object, makes sense to me to make that compressed array buffers to uncompressed ones to text to object","msgtype":"m.text"},"ts":1403277524000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"man, what a diff","msgtype":"m.text"},"ts":1403277551000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SteveF: re <h>, would it be better for me to file a pull request with my polyfill or to create a separate polyfill repo?","msgtype":"m.text"},"ts":1403277565000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: maybe, though it also quite fundamentally impacts what is going on today","msgtype":"m.text"},"ts":1403277581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Do you mean https://github.com/html5lib/html5lib-python/issues/127 ? This was worked around in html5lib","msgtype":"m.text"},"ts":1403277588000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I don't think it was actually that bug, but it must have been something we fixed relatively recently","msgtype":"m.text"},"ts":1403277643000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JonathanNeal: i think the discussion has a little way to go on it yet, I would hold off if you are interested in it being used","msgtype":"m.text"},"ts":1403277646000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JonathanNeal: have been busy with other things but plan to make further contribution to dicussion","msgtype":"m.text"},"ts":1403277700000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: got it, thanks!","msgtype":"m.text"},"ts":1403277989000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: I don't think it impacts any APIs fetch exposes today.","msgtype":"m.text"},"ts":1403278007000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: and I think if we don't provide this level of access now, we'll have to do more archaeology and discover what's underneath fetch to enable certain use cases.","msgtype":"m.text"},"ts":1403278042000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: https://github.com/slightlyoff/ServiceWorker/issues/340","msgtype":"m.text"},"ts":1403278185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"WAT","msgtype":"m.text"},"ts":1403278241000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I don't even...really? This can't be our bottleneck","msgtype":"m.text"},"ts":1403278285000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: what are you talking about?","msgtype":"m.text"},"ts":1403278296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We need advisory memory caching headers *long* before this","msgtype":"m.text"},"ts":1403278310000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"#340","msgtype":"m.text"},"ts":1403278320000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"i'm not making any assertions about prioritisation","msgtype":"m.text"},"ts":1403278364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Do we have data to suggest we need it?","msgtype":"m.text"},"ts":1403278389000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Do browser caches work this way WRT IPC latency elimination today? (Chrome doesn't)","msgtype":"m.text"},"ts":1403278421000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"i'm not sure what you're asking","msgtype":"m.text"},"ts":1403278438000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what would this have to do with caches?","msgtype":"m.text"},"ts":1403278442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, I'm curious --- what is the new Request object referenced in the fetch spec supposed to offer over existing XHR?","msgtype":"m.text"},"ts":1403293796000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"A sane, simple API.","msgtype":"m.text"},"ts":1403293819000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Versus the several lines of crap you have to remember and type out with every XHR today.","msgtype":"m.text"},"ts":1403293833000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well that would be lovely, but we'll see","msgtype":"m.text"},"ts":1403293868000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it doesn't look like anyone has begun implementing it yet though","msgtype":"m.text"},"ts":1403293877000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"No, it's quite new.","msgtype":"m.text"},"ts":1403293959000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, I need to take another look at it---but really the question here is like, taking jQuery for example, if they're already abstracting XHR, do they gain anything from eventually also abstracting Request","msgtype":"m.text"},"ts":1403294500000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I guess nobody knows for sure until implementations exist","msgtype":"m.text"},"ts":1403294564000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it also seems like it will expose more potential capabilities","msgtype":"m.text"},"ts":1403294606000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"especially once it becomes streaming","msgtype":"m.text"},"ts":1403294631000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"caitp: \"Will the libraries switch to it\" isn't really a useful argument; libraries can paper over *lots* of things.  Removing the necessity for libraries to exist for common pieces of the platform to be usable is important for the evolution of the platform.","msgtype":"m.text"},"ts":1403294831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But also, yes, we'll be adding fun new things to Request over time.","msgtype":"m.text"},"ts":1403294843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, I work on some of these libraries, so the question becomes \"should we worry about adding support for Request once it's available --- what's the testability story like, etc\"","msgtype":"m.text"},"ts":1403294904000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well Angular is just going to overwrite everything to make it \"more testable\" anyway, so I'm not sure why you're worried ;)","msgtype":"m.text"},"ts":1403295449000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: anything we can do about moving Status before TOC? I don't care that much, but would be nice.","msgtype":"m.text"},"ts":1403295465000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Yes, planning on doing something about that, so you can supply a *local* version of some boilerplate and have it sub in instead.","msgtype":"m.text"},"ts":1403295490000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Awesome! Will merge for now then.","msgtype":"m.text"},"ts":1403295513000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's not clear that we actually can \"overwrite everything\" when it comes to native code which uses native promises, since they might not respect our mocks :)","msgtype":"m.text"},"ts":1403295642000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"is it possible for Fetch to be polyfilled using XHR?","msgtype":"m.text"},"ts":1403304727000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"regarding what was being said earlier about extended possibilities (eg the Stream API), there's a bug open (or closed, I can't remember I didn't read it) about adding support for the stream api to xhr too","msgtype":"m.text"},"ts":1403304842000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"assuming you mean the interfaces defined in Fetch","msgtype":"m.text"},"ts":1403304878000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403304882000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Depends what you mean by \"polyfill\" too. A useful, forward-compatible subset, certainly.","msgtype":"m.text"},"ts":1403304939000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I was meaning the whole API","msgtype":"m.text"},"ts":1403304953000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean obviously a subset is doable","msgtype":"m.text"},"ts":1403304960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"definitely the streams thing is not really polyfillable, even in browsers with progress events","msgtype":"m.text"},"ts":1403304985000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"haven't gotten too far into that yet though, living in xhr land :>","msgtype":"m.text"},"ts":1403305017000,"senderName":"caitp","senderId":"caitp@irc"}
]