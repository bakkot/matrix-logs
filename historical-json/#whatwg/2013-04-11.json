[
{"content":{"body":"Hixie: so the DOMTokenList story is I think that I did tell you about a change, but that I wanted to wait with filing bugs on HTML until someone had attempted to implement the changes we made for DOM","msgtype":"m.text"},"ts":1365657896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: let me dig up the trail","msgtype":"m.text"},"ts":1365657911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=20105","msgtype":"m.text"},"ts":1365658079000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But that's not the big one","msgtype":"m.text"},"ts":1365658083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20104#c4 is the one","msgtype":"m.text"},"ts":1365658166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I did add you to the cc, but maybe that's not good enough these days?","msgtype":"m.text"},"ts":1365658179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Just for you critic is now https","msgtype":"m.text"},"ts":1365664552000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aw man, now I might have to start using it","msgtype":"m.text"},"ts":1365664583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in HTML5, <label> and form controls are a 1:1 mapping, right (as opposed to HTML4's N:1 mapping)? I mean, unless I missed some part of the spec","msgtype":"m.text"},"ts":1365665111000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"asmodai: a form control can have 0 or more labels, a label can have 0 or 1 form control","msgtype":"m.text"},"ts":1365666442000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"asmodai: also see http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#dom-lfe-labels","msgtype":"m.text"},"ts":1365666484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So where's darobin hiding?","msgtype":"m.text"},"ts":1365666765000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: *nod* thanks. Now I wonder why this designer thinks he can apply a <label> to a <ul> of <input \"radio\">s.","msgtype":"m.text"},"ts":1365667113000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"on Linux x86_64, my local clang opt build fails with symbol \"isascii\" missing when linking WebRTC STUN stuff. known problem?","msgtype":"m.text"},"ts":1365679186000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"apparently yes: https://bugzilla.mozilla.org/show_bug.cgi?id=860222","msgtype":"m.text"},"ts":1365679229000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doh. wrong channel. sorry.","msgtype":"m.text"},"ts":1365679318000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1365679321000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: (I have to run now, but see my email to public-test-infra)","msgtype":"m.text"},"ts":1365679558000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ok, just arriving now, but I'll look!","msgtype":"m.text"},"ts":1365679585000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk, there's some critic reviews I'd love you to have a look at ;)","msgtype":"m.text"},"ts":1365679670000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I can have a look now if you want. PointeR?","msgtype":"m.text"},"ts":1365679698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: I setup a hook from the repo","msgtype":"m.text"},"ts":1365679741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://critic.hoppipolla.co.uk/r/27, 28, 29","msgtype":"m.text"},"ts":1365679747000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: ok, great","msgtype":"m.text"},"ts":1365679757000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: is your GH account darobin too? I can add you to WHATWG","msgtype":"m.text"},"ts":1365679758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes it is, ok, I'll try not to replace the logo with W3C's ;)","msgtype":"m.text"},"ts":1365679776000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1365679781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the sync didn't work last night when I left, but it was likely a problem of MX record propagation so I need to test again now","msgtype":"m.text"},"ts":1365679799000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"in any case it'll work soon","msgtype":"m.text"},"ts":1365679806000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1365679812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, thanks for the link yesterday","msgtype":"m.text"},"ts":1365679812000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you're added as admin","msgtype":"m.text"},"ts":1365679818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we don't really have groups","msgtype":"m.text"},"ts":1365679822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1365679826000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1365679828000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: np","msgtype":"m.text"},"ts":1365679835000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Does that mean darobin gets to tweet as @WHATWG too?","msgtype":"m.text"},"ts":1365679838000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think the tweeting is handled through GitHub :)","msgtype":"m.text"},"ts":1365679851000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: yeah I guess, if he wanted","msgtype":"m.text"},"ts":1365679863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'd be surprised","msgtype":"m.text"},"ts":1365679863000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1365679878000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but our policy for @WHATWG is that anyone can tweet from it as long as it's not spam so that's not a problem","msgtype":"m.text"},"ts":1365679894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can tweet from @w3c as well","msgtype":"m.text"},"ts":1365679915000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"so I could wreak total havok and then move on to some other career","msgtype":"m.text"},"ts":1365679929000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: lots of tests","msgtype":"m.text"},"ts":1365679960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: what kind of quality are we looking for?","msgtype":"m.text"},"ts":1365679982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. \"XMLHttpRequest L2\" seems wrong for <title>","msgtype":"m.text"},"ts":1365680004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mainly correctness, but feel free to complain about things like that too","msgtype":"m.text"},"ts":1365680091000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I can't do 28 I think. I wrote a lot of those tests.","msgtype":"m.text"},"ts":1365680747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though they've been reviewed before.","msgtype":"m.text"},"ts":1365680756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At Opera, or?","msgtype":"m.text"},"ts":1365680772000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And there's some issues with the auth-related tests.","msgtype":"m.text"},"ts":1365680778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: yeah, though also by WebApps at times, it's been through a lot of iteration","msgtype":"m.text"},"ts":1365680799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin, do you remember what policy we ended up with in the thread about internally-reviewed tests?","msgtype":"m.text"},"ts":1365680930000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ooh, the <link rel=help> stuff is no good","msgtype":"m.text"},"ts":1365681032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno have someone else look at that I suppose","msgtype":"m.text"},"ts":1365681131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ooh man that thing generates email","msgtype":"m.text"},"ts":1365681217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lunch","msgtype":"m.text"},"ts":1365681265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: IIRC we said anyone could review the tests except the person who wrote them","msgtype":"m.text"},"ts":1365681843000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"for an interesting way of speccing things, check out the character-based limits on UTF-8 data in http://tools.ietf.org/html/rfc5389#section-15.7","msgtype":"m.text"},"ts":1365682415000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ooh that's the WebRTC stuff","msgtype":"m.text"},"ts":1365684379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder why there's so much more complexity than before","msgtype":"m.text"},"ts":1365684410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"blames Google","msgtype":"m.emote"},"ts":1365684455000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: a big factor in the complexity is the use of UDP and the UDP-hostility of middle boxes","msgtype":"m.text"},"ts":1365685915000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Anyone got AAA swapped in? Give an example that hits the \"…but the element is not in scope\" case in step 4?","msgtype":"m.text"},"ts":1365688441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"'Since there are so many opportunities for the UA to just say \"fuck it\"' -- I love it when annevk gets technical","msgtype":"m.text"},"ts":1365691591000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1365691686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: context?","msgtype":"m.text"},"ts":1365691835000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-device-apis/2013Apr/0017.html","msgtype":"m.text"},"ts":1365691858000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"SimonSapin: did you have a Rust impl of the Encoding Standard?","msgtype":"m.text"},"ts":1365692192000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SimonSapin: someone's asking about converters on rust-dev","msgtype":"m.text"},"ts":1365692214000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: not really, yet","msgtype":"m.text"},"ts":1365692264000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I have something very incomplete, that I wouldn’t recommend anybody uses","msgtype":"m.text"},"ts":1365692300000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'm confused, why is cover (in Python) not picking up code-coverage of html5lib.treebuilders.dom? It's definitely running!","msgtype":"m.text"},"ts":1365692301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: if you're on that list can you email a pointer to the Encoding Standard? so we'll get the right thing implemented","msgtype":"m.text"},"ts":1365692348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I’ll do it","msgtype":"m.text"},"ts":1365692388000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1365692658000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"SimonSapin: thanks","msgtype":"m.text"},"ts":1365693012000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk, hsivonen: sent. https://mail.mozilla.org/pipermail/rust-dev/2013-April/003575.html","msgtype":"m.text"},"ts":1365693836000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah I don't think we'd ever want that separate API","msgtype":"m.text"},"ts":1365693896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"furthering bullshit encodings should be a non-goal","msgtype":"m.text"},"ts":1365693916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My point is: if someone wants UTF-32 in a Rust libstd, unrelated to the web, is should be separated to what eg. Servo will use","msgtype":"m.text"},"ts":1365693982000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It’s unfortunate that 'green' is rgb(0, 128, 0) rather than rgb(0%, 50%, 0%)","msgtype":"m.text"},"ts":1365696289000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(128 being 0.50196%, because 100% is 255, not 256.)","msgtype":"m.text"},"ts":1365696338000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"makes testing suck","msgtype":"m.text"},"ts":1365696349000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"jgraham: so what did you change in that review?","msgtype":"m.text"},"ts":1365696928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I find critic so incomprehensible","msgtype":"m.text"},"ts":1365696936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I marked the deleted files as reviewed","msgtype":"m.text"},"ts":1365697096000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you reviewed the other files you should tick next to the ones that you reviewed (even if there were issues, as long as you finished marking all the issues)","msgtype":"m.text"},"ts":1365697129000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and press submit","msgtype":"m.text"},"ts":1365697133000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tick where?","msgtype":"m.text"},"ts":1365697186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://critic.hoppipolla.co.uk/33e7bba0?review=29 under where it says \"Reviewed\"","msgtype":"m.text"},"ts":1365697226000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(to the left of the file names)","msgtype":"m.text"},"ts":1365697246000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no effect","msgtype":"m.text"},"ts":1365697261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/TR/2013/WD-mediaont-api-1.0-20130411/#example-in-javascript-23 are you fucking kidding me?","msgtype":"m.text"},"ts":1365697382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this API is sooo bad :-(","msgtype":"m.text"},"ts":1365697395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, you marked yourself as a watcher on the review. To review stuff you need to be a reviewer","msgtype":"m.text"},"ts":1365697411000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I did not do shit","msgtype":"m.text"},"ts":1365697419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I added you as one for this review, but you should adjust your filters","msgtype":"m.text"},"ts":1365697423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I just followed some links","msgtype":"m.text"},"ts":1365697428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, well maybe commenting auto-adds you as a watcher","msgtype":"m.text"},"ts":1365697440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway you are now a reviewer","msgtype":"m.text"},"ts":1365697460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For that review","msgtype":"m.text"},"ts":1365697464000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I see, thanks","msgtype":"m.text"},"ts":1365697516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To fix in general go to https://critic.hoppipolla.co.uk/home?repository=10 and click \"Add Filter\" at the bottom of the page.","msgtype":"m.text"},"ts":1365697518000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You probably want to review /","msgtype":"m.text"},"ts":1365697540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(i.e. everything)","msgtype":"m.text"},"ts":1365697552000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have to say though, this is an interesting thing","msgtype":"m.text"},"ts":1365697654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe at some point we can use this for specs, once we have enough people to write them","msgtype":"m.text"},"ts":1365697672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1365697771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"save settings\" goes so fast and there's no delay on the dialog displayed","msgtype":"m.text"},"ts":1365697783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it looks more like corruption than success","msgtype":"m.text"},"ts":1365697797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That spec has the word \"Ontology\" in the introduction. That's not so much a red flag as a blaring siren, and a crush of people screaming \"danger, get out while you still can\"","msgtype":"m.text"},"ts":1365699016000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but it also defines an API for getting data out of objects","msgtype":"m.text"},"ts":1365699250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I'm wondering if this is something we want to implement","msgtype":"m.text"},"ts":1365699260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one browser guy","msgtype":"m.text"},"ts":1365699278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kinda","msgtype":"m.text"},"ts":1365699280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand the rationale behind making this async.","msgtype":"m.text"},"ts":1365699302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It doesn't appear that there's anything that would cause delay, I think?","msgtype":"m.text"},"ts":1365699313000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"plus a bunch of university people who by the looks of their API design never made a site","msgtype":"m.text"},"ts":1365699322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: it's IO","msgtype":"m.text"},"ts":1365699326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so that makes sense, but it should be futures","msgtype":"m.text"},"ts":1365699332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, file IO, gotcha.","msgtype":"m.text"},"ts":1365699344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: In that case, yeah, definitely.","msgtype":"m.text"},"ts":1365699349000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though this was written before Futures.","msgtype":"m.text"},"ts":1365699355000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but the return value needs to be cleaned up","msgtype":"m.text"},"ts":1365699377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that seems much more disheartening than anything else there","msgtype":"m.text"},"ts":1365699386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also: awgoddammit they use, not even named class constants, but just straight-up *numbers* to identify modes in MediaResource#getSupportedModes()","msgtype":"m.text"},"ts":1365699409000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I could go through and do an API rewrite if anyone thinks it's something that might be valuable to implement.","msgtype":"m.text"},"ts":1365699508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: While you're here, let me bounce a ProgressFuture idea off of you.","msgtype":"m.text"},"ts":1365699569000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suspect that a decent fraction of ProgressFuture users will want to use the progress events for things like showing UI (depending on exactly what it is, of course).","msgtype":"m.text"},"ts":1365699612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so I think people have suggested better EXIF-like APIs already, I just wonder where those went; emailed webapps about it now","msgtype":"m.text"},"ts":1365699630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This kind of thing benefits from knowing the current state of the progress at the time it registers, in addition to listening for future progress updates.","msgtype":"m.text"},"ts":1365699640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Gecko supports media.mozGetMetadata()","msgtype":"m.text"},"ts":1365699685000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"In other words, it seems like the progress updates themselves could be useful in a future-like way, where you get informed of the latest \"completed\" progress.","msgtype":"m.text"},"ts":1365699698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: maybe reply in that thread with a pointer?","msgtype":"m.text"},"ts":1365699707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Idea: rather than just registering a callback with .progress(), also allow registering an object with number keys in [0,1] and callback values.  ProgressFuture gains, in addition to (or instead of?) the explicit progress value, a progress number from [0,1].","msgtype":"m.text"},"ts":1365699770000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or, wait, I just realized the API I'm suggesting is a bad idea.","msgtype":"m.text"},"ts":1365699813000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the progress callback will just be passed an object with the data","msgtype":"m.text"},"ts":1365699833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with which you can do everything","msgtype":"m.text"},"ts":1365699842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Instead!  ProgressFuture gains a progress number, from [0,1].  If you register for .progress(), it gets called immediately (next tick) with the current progress number.","msgtype":"m.text"},"ts":1365699846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Problem with current spec is that you have to wait for the next resolver.progress() update.","msgtype":"m.text"},"ts":1365699865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, fwiw, the FormData test may be a joke, but it used to fail in Gecko :)","msgtype":"m.text"},"ts":1365699886000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Gecko is a joke :p","msgtype":"m.text"},"ts":1365699905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1365699913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, indeed so :)","msgtype":"m.text"},"ts":1365699916000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do we have an easy way to test FormData?","msgtype":"m.text"},"ts":1365699934000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: that seems like an impl detail","msgtype":"m.text"},"ts":1365699941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Marking things as reviewed when they still have issues as a slightly non-obvious part of the critic model. \"I've reviewed this\" doesn't mean \"I think this is OK\".","msgtype":"m.text"},"ts":1365699974000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: I... don't think it is?  The spec seems clear so far that the future's progress callbacks are called whenever the resolver posts a progress update.","msgtype":"m.text"},"ts":1365699976000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: we can spec that the first thing .progress() does is have resolver.progress() queue something (unless the future is already complete in which case that does not make much sense I think)","msgtype":"m.text"},"ts":1365699979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, so that's a spec detail, not an impl detail. ^_^","msgtype":"m.text"},"ts":1365699993000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That would work.","msgtype":"m.text"},"ts":1365699997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So you don't really need to add a comment pointing out that your other comments need to be addressed; that's just the normal workflow","msgtype":"m.text"},"ts":1365700008000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And yes, if the future is complete, no progress callback.  We should also just entirely turn off progress updates after it's resolved.","msgtype":"m.text"},"ts":1365700031000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: with \"impl\" I meant we might want to make it depend on where we are using it","msgtype":"m.text"},"ts":1365700042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hm, I doubt there's a case where you're registering for progress updates and *don't* want to know what the current progress is.","msgtype":"m.text"},"ts":1365700065000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I sometimes say \"impl\" if e.g. HTML uses URL, HTML has an impl of the URL stuff I wrote","msgtype":"m.text"},"ts":1365700082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: fair","msgtype":"m.text"},"ts":1365700098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I'm also leaning towards the .then(success,reject,progress) model","msgtype":"m.text"},"ts":1365700114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but maybe starting with .progress is sufficient","msgtype":"m.text"},"ts":1365700129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interesting.  I'm fine with the current model, given chaining.","msgtype":"m.text"},"ts":1365700131000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"with the current model you might do the wrong thing if you first do .then()","msgtype":"m.text"},"ts":1365700165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Really?","msgtype":"m.text"},"ts":1365700179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's no way to get back to the future you .then()d on","msgtype":"m.text"},"ts":1365700181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you're chaining","msgtype":"m.text"},"ts":1365700185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh!","msgtype":"m.text"},"ts":1365700185000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1365700188000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I forgot that .then() returns a new future.","msgtype":"m.text"},"ts":1365700199000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: is there any documentation on this mozGetMedia thing?","msgtype":"m.text"},"ts":1365700529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/html/nsIDOMHTMLMediaElement.idl#97","msgtype":"m.text"},"ts":1365700544000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"just found that","msgtype":"m.text"},"ts":1365700611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that's sync","msgtype":"m.text"},"ts":1365700615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess we cache stuff","msgtype":"m.text"},"ts":1365700621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it seems our approach is to just expose whatever if we support the storage format","msgtype":"m.text"},"ts":1365700656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1365700663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: btw, good work on upgrading the futures spec.  It's more readable now, though I think I can still contribute.","msgtype":"m.text"},"ts":1365700819000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Can we still change fullscreen?","msgtype":"m.text"},"ts":1365700866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Also, I'd love to define the fetching model for CSS.  The thread on filter-effects has a confusing amount of detail, though.","msgtype":"m.text"},"ts":1365700928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, any help would be appreciated.","msgtype":"m.text"},"ts":1365700937000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hopefully by end of Q2 http://fetch.spec.whatwg.org/ is roughly done","msgtype":"m.text"},"ts":1365700969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I should wait on that?","msgtype":"m.text"},"ts":1365700977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well the general model is in place so we can start thinking about it","msgtype":"m.text"},"ts":1365700998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"up to you","msgtype":"m.text"},"ts":1365701004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok, if I have time in the near future I'll look through it.","msgtype":"m.text"},"ts":1365701061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay so Mozilla does not expose Fullscreen unprefixed","msgtype":"m.text"},"ts":1365701075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On an unrelated note, if we change ProgressFuture as discussed here, I think that concept should be reified somewhere, as it's a useful Event alternative in some cases.","msgtype":"m.text"},"ts":1365701091000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: So what is the commit policy now for html5lib?","msgtype":"m.text"},"ts":1365701102000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"that concept\" being \"callback called multiple times, but also called as soon as you register with the latest data\".","msgtype":"m.text"},"ts":1365701109000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WebKit is prefixed too","msgtype":"m.text"},"ts":1365701141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In which case, going with the 3-arg .then() might be a good idea.","msgtype":"m.text"},"ts":1365701143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fuck yeah futures","msgtype":"m.text"},"ts":1365701146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It may or may not ever actually complete.","msgtype":"m.text"},"ts":1365701179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Depending on the exact usage.","msgtype":"m.text"},"ts":1365701187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: I won't cry if you make comemnt cleanups without getting review","msgtype":"m.text"},"ts":1365701209000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But maybe larger changes should have code review","msgtype":"m.text"},"ts":1365701218000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We could see how it works at least, now we have a tool that doesn't entirely suck","msgtype":"m.text"},"ts":1365701243000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: yes, we'll make it part of the contract","msgtype":"m.text"},"ts":1365701334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: if you do ProgressFuture, you need to have progress data available next to having a result available","msgtype":"m.text"},"ts":1365701365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm compiling a blog post of scenarios and which callback mechanism to use to solve them, so I'll put it in there.","msgtype":"m.text"},"ts":1365701383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: and at some point progress data becomes null and result becomes non-null","msgtype":"m.text"},"ts":1365701388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, for ProgressFuture that's definitely what happens.","msgtype":"m.text"},"ts":1365701404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I can easily see a Future that doesnt' ever complete, but only gives \"progress\" updates, where \"progress\" is just any value.","msgtype":"m.text"},"ts":1365701432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This would let us wipe out the last events from Font Load Events, and do it *better* than the events currently do, to boot.","msgtype":"m.text"},"ts":1365701461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1365701480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one problem with using futures for requestFullscreen is that subdocuments would no longer be modified","msgtype":"m.text"},"ts":1365701494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which seems bad","msgtype":"m.text"},"ts":1365701519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but we could have both","msgtype":"m.text"},"ts":1365701533000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in this case","msgtype":"m.text"},"ts":1365701538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and get rid of fullscreenerror","msgtype":"m.text"},"ts":1365701549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I didn't realize that w() had a special printing mode for when you pass in events.  Nice!","msgtype":"m.text"},"ts":1365701784000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Also, are you following the monadic-promises discussion that's happening on the promises-aplus github?","msgtype":"m.text"},"ts":1365702596000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I saw some of it come by","msgtype":"m.text"},"ts":1365702630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You wouldn't need to add much to make it happen, and the most important bit - making a \"basic\" future out of a static value, with something like Future#of - is useful by itself.","msgtype":"m.text"},"ts":1365702992000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It lets you, frex, intermix a static value with other futures in the futures combinators.","msgtype":"m.text"},"ts":1365703007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can already do that","msgtype":"m.text"},"ts":1365703018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Future.any(future, \"test\") works","msgtype":"m.text"},"ts":1365703035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, seriously though... How do you test FormData?","msgtype":"m.text"},"ts":1365703371000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Microsoft managed :p","msgtype":"m.text"},"ts":1365703385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ouch :(","msgtype":"m.text"},"ts":1365703393000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you have to push it over the network basically at the moment","msgtype":"m.text"},"ts":1365703427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: apart from the IDL trickery one can do","msgtype":"m.text"},"ts":1365703433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Eventually it might grow to be more like URLQuery","msgtype":"m.text"},"ts":1365703453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hm, that means that you can't easily make a future that returns a future as its completion value, no?  Because you end up having to ducktype it?","msgtype":"m.text"},"ts":1365703462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: accept() can be used if you want that","msgtype":"m.text"},"ts":1365703526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, tell me more about this IDL trickery","msgtype":"m.text"},"ts":1365703622000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: the kind of tests you wrote for ProgressEvent","msgtype":"m.text"},"ts":1365703660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You mean just doing \"new Future(function(r){r.accept(<static value>);})?","msgtype":"m.text"},"ts":1365703682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what is static value?","msgtype":"m.text"},"ts":1365703705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Whatever value you want to upgrade into a promise.  You already have it, but you want it to interact with the promise algebra.","msgtype":"m.text"},"ts":1365703728000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/promise/future/","msgtype":"m.text"},"ts":1365703739000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if that value needs to be able to be a future, yes","msgtype":"m.text"},"ts":1365703767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the general pattern is using .resolve() though","msgtype":"m.text"},"ts":1365703798000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, Future.of(<static value>) sounds like a much more convenient way to do that. ^_^","msgtype":"m.text"},"ts":1365703805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"could you explain the scenario though where .resolve() is not okay?","msgtype":"m.text"},"ts":1365703933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on www-dom perhaps","msgtype":"m.text"},"ts":1365703950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Are you referring to the code I posted above (but with .resolve instead of .accept)?","msgtype":"m.text"},"ts":1365704554000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if making Blob URLs cross origin will clean up the data: URL morass","msgtype":"m.emote"},"ts":1365704981000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"For some reason changing this in the spec feels dangerous.","msgtype":"m.text"},"ts":1365705021000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"TabAtkins: just in general I guess","msgtype":"m.text"},"ts":1365705152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: so what needs to happen is that we need to decide how the blob URL lifecycle works","msgtype":"m.text"},"ts":1365705188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: I don't think it's dangerous, as the URL is secret (unguessable)","msgtype":"m.text"},"ts":1365705214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: the problem is the lifecycle, but that's a problem either way :(","msgtype":"m.text"},"ts":1365705248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, we've struggled with lifecycle for what seems like a long time now :(  seems like autoRevoke is no silver bullet","msgtype":"m.text"},"ts":1365706671000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk: ah, if you were intentionally not having me update the spec then nevermind :-)","msgtype":"m.text"},"ts":1365707262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: it does sound vaguely familiar now that you mention it","msgtype":"m.text"},"ts":1365707269000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: :-)","msgtype":"m.text"},"ts":1365707277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So, chardet on PyPi doesn't support Python 3 doesn't Mark having had a chapter in Dive Into Python 3 on getting it working on Python 3. Yay.","msgtype":"m.text"},"ts":1365707591000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, ... eh?","msgtype":"m.text"},"ts":1365708478000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: What's eh about that. Mark Pilgrim, author of chardet, wrote a chapter on porting chardet to Python 3. He never made a release of chardet supporting Python 3.","msgtype":"m.text"},"ts":1365708555000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/doesn't/despite/, or?","msgtype":"m.text"},"ts":1365708584000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1365708647000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That does make more sense","msgtype":"m.text"},"ts":1365708672000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"seems he is online, you could ask him about it","msgtype":"m.text"},"ts":1365708814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On the other hand, he has basically abandoned all of that stuff.","msgtype":"m.text"},"ts":1365708873000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: cannot find the HTMLImageElement.src compat bug","msgtype":"m.text"},"ts":1365708947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: did not know about IE doing \"null\" either","msgtype":"m.text"},"ts":1365708973000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: found it https://bugzilla.mozilla.org/show_bug.cgi?id=859640","msgtype":"m.text"},"ts":1365709414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: the pseudo algorithm in multicol, is it supposed to be normative?","msgtype":"m.text"},"ts":1365711668000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yes, but it's under heavy discussion.  See recent mailing list stuff.","msgtype":"m.text"},"ts":1365713277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think i'll wait until the edits have been made and then look at it again","msgtype":"m.text"},"ts":1365713463000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i didn't read it carefully but my knee-jerk reaction was that things could be interpreted in several ways, or that the pseudo-code was ambiguous","msgtype":"m.text"},"ts":1365713543000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm not a fan of normative pseudo-code","msgtype":"m.text"},"ts":1365713568000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The pseudo-code *is* ambiguous right now, which is the biggest part of the discussion.","msgtype":"m.text"},"ts":1365713892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin is trying to get it fixed.","msgtype":"m.text"},"ts":1365713898000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"excellent","msgtype":"m.text"},"ts":1365713985000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think that the edits in the attachment here capture what we discussed: http://lists.w3.org/Archives/Public/www-style/2013Apr/0225.html","msgtype":"m.text"},"ts":1365713996000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: ah, didn't notice the attachment. that looks better","msgtype":"m.text"},"ts":1365714253000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: the first two lines could be removed as well?","msgtype":"m.text"},"ts":1365714269000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah I guess","msgtype":"m.text"},"ts":1365714290000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but getting this much has been hard enough :/","msgtype":"m.text"},"ts":1365714301000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: (if you read logs) not sure what to say to that: https://mail.mozilla.org/pipermail/rust-dev/2013-April/003579.html","msgtype":"m.text"},"ts":1365716803000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"heycam: i'm assigning https://www.w3.org/Bugs/Public/show_bug.cgi?id=21591 to you, let me know if you disagree (reassign it to me and i'll do it the other way)","msgtype":"m.text"},"ts":1365718917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, sounds good, I'll allow string constants","msgtype":"m.text"},"ts":1365718950000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"'s public-script-coord folder is coming up on 1000 unread messages, so he promises to look at it next week","msgtype":"m.emote"},"ts":1365718984000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(the folder that is)","msgtype":"m.text"},"ts":1365718990000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"s/promises/futures/","msgtype":"m.text"},"ts":1365719014000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: Also, https://bugs.webkit.org/show_bug.cgi?id=114457","msgtype":"m.text"},"ts":1365719065000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1365719095000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: cool, thanks. I'm also giving you https://www.w3.org/Bugs/Public/show_bug.cgi?id=21589; again, feel free to reassign it to me (request to allow trailing commas on enum definitions)","msgtype":"m.text"},"ts":1365719216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1365719225000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(neither is a high priority)","msgtype":"m.text"},"ts":1365719248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf is https://www.w3.org/Bugs/Public/show_bug.cgi?id=21576 about","msgtype":"m.text"},"ts":1365719378000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm pretty sure the spec doesn't have that ID","msgtype":"m.text"},"ts":1365719384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, an extension is to blame","msgtype":"m.text"},"ts":1365719438000,"senderName":"Hixie","senderId":"Hixie@irc"}
]