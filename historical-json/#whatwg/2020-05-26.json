[
{"content":{"body":"MikeSmith: could it be that wattsi is still not feeling well? Getting build errors after a rebase on something that was working before","msgtype":"m.text"},"ts":1590489731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://github.com/whatwg/html/pull/5491","msgtype":"m.text"},"ts":1590489737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1590490001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: yeah it’s still broke","msgtype":"m.text"},"ts":1590490096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1590490120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not “still”","msgtype":"m.text"},"ts":1590490130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was thinking that it was caused by the Python 3 changes","msgtype":"m.text"},"ts":1590490147000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but those are only  in https://github.com/whatwg/html-build/pull/227 and not merged yet","msgtype":"m.text"},"ts":1590490191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> /bin/sh: 1: /whatwg/wattsi/build.sh: not found","msgtype":"m.text"},"ts":1590490273000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that doesn’t look familiar","msgtype":"m.text"},"ts":1590490317000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: let's wait for Domenic then","msgtype":"m.text"},"ts":1590490761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(it's not really blocking me, was just curious)","msgtype":"m.text"},"ts":1590490779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I realize now what caused it","msgtype":"m.text"},"ts":1590490811000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/whatwg/wattsi/commit/9f5e9e75bf1071fd8bc22c5765266b89305b0cce","msgtype":"m.text"},"ts":1590490824000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we merged that without updating html-build to align with that change","msgtype":"m.text"},"ts":1590490850000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: hola! wanted to chat re. https://github.com/whatwg/html/pull/5574","msgtype":"m.text"},"ts":1590493109000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"(intrinsic image resolution)","msgtype":"m.text"},"ts":1590493117000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: best to leave a question","msgtype":"m.text"},"ts":1590499637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure! I am struggling with how to add that algorithm into the HTML spec, because EXIF and image metadata are not things that are well defined in HTML-land and are codec-related to an extent. Was thinking to add a passage about \"Updating the image metadata\", where the orientation/resolution/size are read from the image metadata, but without referring normatively to EXIF. Maybe adding a non-normative note about EXIF","msgtype":"m.text"},"ts":1590499668000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"(sorry, had this written and forgot to press Enter)","msgtype":"m.text"},"ts":1590499683000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"I actually created a new PR with this approach... but it's not clear where HTML stops and image codecs start wrt standartization","msgtype":"m.text"},"ts":1590499722000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: why can we not reference EXIF normatively?","msgtype":"m.text"},"ts":1590499729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since JPEG/GIF/PNG etc. are not referenced normatively, and EXIF is embedded in them. I don't mind referencing it normatively though","msgtype":"m.text"},"ts":1590499827000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: does EXIF define the embedding for each of those?","msgtype":"m.text"},"ts":1590499872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess we currently only require PNG encoding, sigh","msgtype":"m.text"},"ts":1590499919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, but it can be potentially be defined in other metadata formats like XMP.","msgtype":"m.text"},"ts":1590499936000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: should UAs support those though?","msgtype":"m.text"},"ts":1590500023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably not for now.","msgtype":"m.text"},"ts":1590500087000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: so I guess we want the abstract \"obtain image\" that returns an image bitmap + metadata and that algorithm can then be a bit vague about formats, but it could say that if UAs support GIF, they must do X for EXIF","msgtype":"m.text"},"ts":1590500090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: that way we sidestep requiring formats, but do require a particular metadata strategy if the format is supported","msgtype":"m.text"},"ts":1590500140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: perhaps Domenic finds it reasonable to start requiring some baseline image formats though, certainly seems reasonable to me","msgtype":"m.text"},"ts":1590500167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sure, I'll do that. Most codecs support EXIF, and I can define that if the image codec supports EXIF embedding, then metadata extraction should use that.","msgtype":"m.text"},"ts":1590500585000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: I'm doing this for density correction, but shouldn't this be also done for orientation? Maybe a follow up would be to be more explicit about reading orientation from EXIF","msgtype":"m.text"},"ts":1590500638000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: yeah, though orientation has this weird quirk with the CSS property","msgtype":"m.text"},"ts":1590500677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this is kinda similar, with the image-resolution CSS Property. However, I didn't bother with it since nobody seems to be planning to implement image-resolution in the foreseeable future :)","msgtype":"m.text"},"ts":1590500742000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"there's also imageOrientation in <canvas>","msgtype":"m.text"},"ts":1590500755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really rather not have CSS properties as it's rather unclear how they apply in a number of places","msgtype":"m.text"},"ts":1590500778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess we also forgot to test EXIF + imageOrientation :/","msgtype":"m.text"},"ts":1590500810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea I agree - not dealing with CSS for now.","msgtype":"m.text"},"ts":1590500864000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"thanks annevk, will come up with a new patch soonish","msgtype":"m.text"},"ts":1590500872000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: for your review of #5573, should I instead say when setting the loading attribute, run these steps: [possibly set the ready to be lazy loaded flag]? Is that more accurate, since it lists the requirement?","msgtype":"m.text"},"ts":1590503441000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: \"when X is set, the user agent must set Y\" (see other attribute UA requirements)","msgtype":"m.text"},"ts":1590503717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: does make me wonder what happens if you set it and then remove it, and edge cases like that","msgtype":"m.text"},"ts":1590503737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah so an interesting case to test would be 1) Setting it to something 2) Entering #updating-the-image-data 3) Setting it to something else when the micro task is queued, 4) Asserting that the rest of the algorithm acknowledges the latest ‘loading’ value","msgtype":"m.text"},"ts":1590504561000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: otherwise if the image is just deferred, setting the attr to eager and then quickly removing it shouldn’t be any different than just setting it to eager","msgtype":"m.text"},"ts":1590504590000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yeah, but you can test the latter too as implementations might well do something else","msgtype":"m.text"},"ts":1590504661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1590504677000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Do you know of a firefox bug or iframe lazyloading? Or can I just reuse https://bugzilla.mozilla.org/show_bug.cgi?id=1542784","msgtype":"m.text"},"ts":1590510758000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: https://bugzilla.mozilla.org/show_bug.cgi?id=1622090","msgtype":"m.text"},"ts":1590514521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Can you explain what you mean by \"The changes from 5/6 to 4/6 passing in Blink/WebKit make me a bit worried that the refactoring broke something\". When I `./wpt serve` on the latest PR, and navigate to a test in Chrome stable, I still see \"5 tests\", with at most 1 failing","msgtype":"m.text"},"ts":1590519344000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"(Admittedly I haven't run them all, because they take a little while)","msgtype":"m.text"},"ts":1590519357000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: I was looking at https://wpt.fyi/results/html/semantics/scripting-1/the-script-element/moving-between-documents?diff&filter=ADC&run_id=554640001&run_id=567930001","msgtype":"m.text"},"ts":1590519796000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and https://wpt.fyi/results/html/semantics/scripting-1/the-script-element/moving-between-documents?diff&filter=ADC&run_id=558510001&run_id=539730001","msgtype":"m.text"},"ts":1590519828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ooh I don't think I knew you could do that. OK I'll check it out","msgtype":"m.text"},"ts":1590519857000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: Ah, so my refactoring made it \"better\". Will comment back on the thread","msgtype":"m.text"},"ts":1590520673000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"This button is magic https://usercontent.irccloud-cdn.com/file/gSNQYtLq/wpt-fyi.png","msgtype":"m.text"},"ts":1590520773000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yassss OK good to know, that is lit","msgtype":"m.text"},"ts":1590520885000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"TabAtkins: ping on https://github.com/whatwg/html-build/pull/227#issuecomment-632401568","msgtype":"m.text"},"ts":1590521167000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks for the ping; i'll handle it today","msgtype":"m.text"},"ts":1590521194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/pull/126 if anyone wants a trivial parser test PR","msgtype":"m.text"},"ts":1590532207000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]