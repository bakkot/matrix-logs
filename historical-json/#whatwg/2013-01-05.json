[
{"content":{"body":"yroc: i seem to recall there was some difference, but the real answer is probably just because it was already implemented, so why not","msgtype":"m.text"},"ts":1357344276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: random thought, but i wonder if this could just be element.addEventListener(\"click\", function(e) { }, { options }) when the third argument is a dictionary instead of a boolean, possible options are \"selector\" and \"capture\", and have \"alwaysBubble\" be an option (instead of having a separate function just for that)","msgtype":"m.text"},"ts":1357344961000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also i wonder if making addEventListener return an object or a timeout-like id would be web-compatible (can't imagine why not, but it's such a critical API that who knows)","msgtype":"m.text"},"ts":1357345045000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if we do that i'd really like there to be a way to specify some filters on the sorts of events - i.e. say which key events you care about for keyboard-related ones, specifying which modifiers you care about","msgtype":"m.text"},"ts":1357346175000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"so the browser can know up-front whether to bother doing all the setup of firing a DOM event or if the listener is just going to toss it","msgtype":"m.text"},"ts":1357346202000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie: Interesting though because <wbr> is not in the 4.01 spec as far as I can see, nor in Berners-Lee RFC 1866 or W3C's 3.2 spec.","msgtype":"m.text"},"ts":1357346616000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"yeah we didn't pay much attention to the earlier specs when writing the current one","msgtype":"m.text"},"ts":1357346638000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"more what browsers implemented","msgtype":"m.text"},"ts":1357346644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I have found references to it dating back to the late 90s, so it's obviously been around","msgtype":"m.text"},"ts":1357346651000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1357346656000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"So that was the driving force then. The fact that it was implemented in the major browsers, so it was just spec'ed","msgtype":"m.text"},"ts":1357346699000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"that's why it was specced as required to implement, but the reason it was speced as valid to use (a completely different question) is more likely to be that it provided a valid use case (albeit one that's no more useful than the zwsp character, iirc)","msgtype":"m.text"},"ts":1357346753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But there's really such thing as \"required to implement,\" is there? I mean the vendors can do what they want, no?","msgtype":"m.text"},"ts":1357346904000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"well true","msgtype":"m.text"},"ts":1357346916000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in practice what the spec says is required to implement is what they will implement anyway","msgtype":"m.text"},"ts":1357346935000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...or have already implemented! :-)  Gotcha.","msgtype":"m.text"},"ts":1357346969000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"but it also says what a new browser would have to implement to be compatible with the web","msgtype":"m.text"},"ts":1357346973000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Compatible with the web?\" -- what do you mean by \"web\" here?","msgtype":"m.text"},"ts":1357347098000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"deployed web content","msgtype":"m.text"},"ts":1357347116000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So compatible with what web authors are producing.","msgtype":"m.text"},"ts":1357347155000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1357347838000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, i'm reopening all the whatwg later and remind bugs","msgtype":"m.text"},"ts":1357350310000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"new year = it's later now?","msgtype":"m.text"},"ts":1357350731000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1357351090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: did you fiele a bug for https://www.w3.org/Bugs/Public/show_bug.cgi?id=20535#c3 ?","msgtype":"m.text"},"ts":1357358033000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: will do","msgtype":"m.text"},"ts":1357386051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1357387042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr: interesting idea","msgtype":"m.text"},"ts":1357387367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I suggest looking at some popular JavaScript libraries if you want to understand \"why\"","msgtype":"m.text"},"ts":1357391098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that isn't why","msgtype":"m.text"},"ts":1357392195000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is though","msgtype":"m.text"},"ts":1357392213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jQuery has its API just because someone has decided to have such","msgtype":"m.text"},"ts":1357392222000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'd like to understand why jQuery has the API","msgtype":"m.text"},"ts":1357392242000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't have too much against jQuery's APIs, but need to be careful since it tends to slow down things (either it is jQuery implementation or the API design)","msgtype":"m.text"},"ts":1357392323000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"every developer I talk to wants selector-based filtering","msgtype":"m.text"},"ts":1357393746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you make a good point about when to do said filtering though","msgtype":"m.text"},"ts":1357393759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pretty sure we can do whatever is most performant there","msgtype":"m.text"},"ts":1357393842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it affects to behavior","msgtype":"m.text"},"ts":1357393888000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder what jQuery does","msgtype":"m.text"},"ts":1357393894000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oops, it seems it filters based on event.target","msgtype":"m.text"},"ts":1357394115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1357394141000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is somewhat odd","msgtype":"m.text"},"ts":1357394144000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nah, see e.g. http://icant.co.uk/sandbox/eventdelegation/","msgtype":"m.text"},"ts":1357394152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"other thing possibly useful would be event target groups, so that one could add and remove listeners from many targets at once","msgtype":"m.text"},"ts":1357394224000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that's basically this","msgtype":"m.text"},"ts":1357394243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is not","msgtype":"m.text"},"ts":1357394267000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"you register on a common parent and select the targets with a selector","msgtype":"m.text"},"ts":1357394283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this requires common parent and all","msgtype":"m.text"},"ts":1357394300000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"given that events dispatch in a tree, that's a given","msgtype":"m.text"},"ts":1357394319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but maybe the reverse is all we need...","msgtype":"m.text"},"ts":1357394336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"listen to events for elements that match these selectors?","msgtype":"m.text"},"ts":1357394370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure that quite works given text nodes and such though","msgtype":"m.text"},"ts":1357394395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"given that events dispatch in a tree\"... I was thinking something more generic which can handle several DOM trees at once, and wouldn't actually be restricted to DOM trees, but would work with all the event targets","msgtype":"m.text"},"ts":1357394474000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, selector matching on XHR doesn't quite make sense","msgtype":"m.text"},"ts":1357394513000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is jquery's 'on' node only thing","msgtype":"m.text"},"ts":1357394583000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh dear, it has all different thing for \"Ajax\"","msgtype":"m.text"},"ts":1357394628000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, selector-based matching only makes sense for Elements","msgtype":"m.text"},"ts":1357394738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, for RootNode I suppose","msgtype":"m.text"},"ts":1357394757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't understand the word \"delegation\" with event handling","msgtype":"m.emote"},"ts":1357394831000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is just normal event handling","msgtype":"m.text"},"ts":1357394836000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the fact that listener isn't on the target or that target checking happens within the listner does not mean any kind of \"delegation\"","msgtype":"m.text"},"ts":1357394896000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think the way it's viewed is that you delegate the work to a listener registered on a parent","msgtype":"m.text"},"ts":1357395460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure it's very interesting to debate terminology at this point though. It's called delegation by the developer community...","msgtype":"m.text"},"ts":1357395496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, and I just don't understand what you actually delegate. You just do stuff in an ancestor's listener :)","msgtype":"m.text"},"ts":1357395527000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, delegation isn't a good term IMO, so I don't expect it to end up to specs","msgtype":"m.text"},"ts":1357395563000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we need something more exact, if anything","msgtype":"m.text"},"ts":1357395574000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but lunch time","msgtype":"m.text"},"ts":1357395597000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the spec will just define the API, no buzzwords...","msgtype":"m.text"},"ts":1357396092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but at this point it's not really clear what requirements the API should meet","msgtype":"m.text"},"ts":1357396118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, need to know the requirements first","msgtype":"m.text"},"ts":1357399789000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: \"delegation\" just refers to the approach (handling events for dynamic trees by listening up the tree and filtering), and it's the best term there will ever be merely because it's what everyone uses and understands","msgtype":"m.text"},"ts":1357407087000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"trying to rename something after a term is widely accepted is never the right thing to do","msgtype":"m.text"},"ts":1357407112000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, I don't know how accepted that is","msgtype":"m.text"},"ts":1357407222000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyhow, if it doesn't end up to any spec, as I hope, I don't care :)","msgtype":"m.text"},"ts":1357407272000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is in my experience","msgtype":"m.text"},"ts":1357407274000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Firefox UI is all about event \"delegation\", but \"delegation\" isn't really used anywhere","msgtype":"m.text"},"ts":1357407350000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I know, that is not web development)","msgtype":"m.text"},"ts":1357407369000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oops, tried to put a million event listeners on window and chrome is upset at me","msgtype":"m.text"},"ts":1357408682000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357408865000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: doing performance testing?","msgtype":"m.text"},"ts":1357408876000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(for some reason chrome's event dispatch speed has regressed significantly)","msgtype":"m.text"},"ts":1357408957000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(at least in my tests)","msgtype":"m.text"},"ts":1357408988000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: just sanity checking the \"event filtering\" thing on https://www.w3.org/Bugs/Public/show_bug.cgi?id=16491 (which as I suspected, seems to not be useful, at least at the dispatch phase)","msgtype":"m.text"},"ts":1357409253000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also ... wow, webkit is initKeyboardEvent and gecko is initKeyEvent and there's no overlap? seriously?","msgtype":"m.text"},"ts":1357409298000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Gecko has DOM 0 key events, webkit has some obsolete D3E draft key events, IIRC","msgtype":"m.text"},"ts":1357409336000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1357409593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"And we provide the longest support life cycle of any browser, allowing you to upgrade your browser at your own pace.\"","msgtype":"m.text"},"ts":1357417827000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"From http://blogs.windows.com/ie/b/ie/archive/2012/12/13/ten-reasons-why-internet-explorer-10-is-best-for-business.aspx","msgtype":"m.text"},"ts":1357417835000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"one might possibly refer to that as \"spin\"","msgtype":"m.text"},"ts":1357420311000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"<zewt> one might possibly refer to that as \"spin\"","msgtype":"m.text"},"ts":1357421483000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Not my point, My point is they are actually touting that they support all IE versions for the 10+ years life of a Windows version.","msgtype":"m.text"},"ts":1357421549000,"senderName":"Yuhong","senderId":"Yuhong@irc"}
]