[
{"content":{"body":"hsivonen: shouldn't the html5 datatype library include link types?","msgtype":"m.text"},"ts":1200614520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah crap","msgtype":"m.text"},"ts":1200616800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the next e-mail is about colour spaces","msgtype":"m.text"},"ts":1200616801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tries to see if the e-mail has any suggestion that would allow him to duck the entire issue neatly","msgtype":"m.emote"},"ts":1200616802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`, o' Philip`, where art thou","msgtype":"m.text"},"ts":1200617040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: *waves*","msgtype":"m.text"},"ts":1200617760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: check out the new color section","msgtype":"m.text"},"ts":1200617820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Hmm, I don't really know much about colour spaces - I just assume everything is nice RGB 0-255 and then twiddle my monitor brightness until it looks alright","msgtype":"m.text"},"ts":1200617940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i tried that","msgtype":"m.text"},"ts":1200617941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then you raised issues!","msgtype":"m.text"},"ts":1200617942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1200617943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, I don't remember that","msgtype":"m.text"},"ts":1200617944000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Since all my canvas tests assume there's no magical colour space conversion anyway, and browsers seem to pass the tests, I guess that means they do everything without conversions, which is good","msgtype":"m.text"},"ts":1200618060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"even for drawImage() of an image with gamma info?","msgtype":"m.text"},"ts":1200618061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but I have no idea if they're really using sRGB or some device-specific colour space or something else","msgtype":"m.text"},"ts":1200618120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and what does toDataURL return in its gamma information?","msgtype":"m.text"},"ts":1200618121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what should putImageData() do if one of the pixels is 127.5 ?","msgtype":"m.text"},"ts":1200618122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I haven't tried drawImage with gamma, since that sounds like it would lead to hard problems and I would get confused :-)","msgtype":"m.text"},"ts":1200618123000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"...has a component that is...","msgtype":"m.text"},"ts":1200618124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't there also possibility of rounding errors in e.g. JPEG decoders and such?","msgtype":"m.text"},"ts":1200618180000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"ugh, color spaces","msgtype":"m.text"},"ts":1200618240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's probably sufficient to require that reading and writing pixels occurs in the same colorspace","msgtype":"m.text"},"ts":1200618300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(maybe you also require that it's the same colorspace used for any rendering done by CSS)","msgtype":"m.text"},"ts":1200618301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm, css3 color-profile inherits.","msgtype":"m.text"},"ts":1200618360000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"othermaciej: there is some nastiness there if you do a drawImage, though, since the 2 can have different css colorspaces set..","msgtype":"m.text"},"ts":1200618361000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Hixie: It would be helpful for authors if it was rounded, instead of throwing an exception","msgtype":"m.text"},"ts":1200618362000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but it doesn't matter which way it's rounded","msgtype":"m.text"},"ts":1200618363000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"IEEE754r it is","msgtype":"m.text"},"ts":1200618364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because e.g. Firefox does the canvas with premultiplied alpha, while Opera does it without, so you get imprecise results whatever you do","msgtype":"m.text"},"ts":1200618420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(because a colour with alpha=0.5 has only 7 bits of precision for each colour component in Firefox)","msgtype":"m.text"},"ts":1200618421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"surely we need to fix that","msgtype":"m.text"},"ts":1200618480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't see why","msgtype":"m.text"},"ts":1200618481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't that mean you'll get different results for the same code?","msgtype":"m.text"},"ts":1200618482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or is it just a matter of accuracy","msgtype":"m.text"},"ts":1200618483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I doubt you'll get exact results with different rasterizers.","msgtype":"m.text"},"ts":1200618540000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"About drawImage alpha: See http://software.hixie.ch/utilities/js/live-dom-viewer/ and 'download' if nobody's overwritten it - Firefox/Opera/Safari have the same output from the <canvas> as from the <img>s, though Safari (at least on Windows) does the gamma wrong (for some definition of 'wrong')","msgtype":"m.text"},"ts":1200618600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: Not quite sure what you mean - if there's a matter with accuracy, then you will get different results for the same code because of the inaccuracy","msgtype":"m.text"},"ts":1200618601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1200618660000,"senderName":"harri","senderId":"harri@irc"},
{"content":{"body":"are those images supposed to look the same, other than the number?","msgtype":"m.text"},"ts":1200618661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: http://www.libpng.org/pub/png/pngsuite.html says they should","msgtype":"m.text"},"ts":1200618662000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: is the acid3 test in some kind of version control?","msgtype":"m.text"},"ts":1200618663000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"Philip`: i mean, it's not like the alpha channel will have 1.0 in one browser and 0.5 in another, right? they'll both be roughly the same, just with different number of significant bits of accuracy?","msgtype":"m.text"},"ts":1200618664000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok (wasn't sure what the test was doing)","msgtype":"m.text"},"ts":1200618665000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: hmm, seems like I got something to fix.","msgtype":"m.text"},"ts":1200618720000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Hixie: it's not the alpha channel that is mainly affected by premultiplied alpha, it's the color channels","msgtype":"m.text"},"ts":1200618721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok, so, the color channels will all be roughly the same? it's not like one will be 0 and the other 255?","msgtype":"m.text"},"ts":1200618722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: If you draw rgba(255, 255, 255, 0) then do getImageData, Opera will return (255, 255, 255, 0) and Firefox will return (0, 0, 0, 0)","msgtype":"m.text"},"ts":1200618780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"getImageData says \"Pixels must be returned as non-premultiplied alpha values.\"","msgtype":"m.text"},"ts":1200618781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that seems like a bug in firefox","msgtype":"m.text"},"ts":1200618782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on Mac, Firefox appears to draw those images lighter than Safari (probably due to not accounting for the system colorspace)","msgtype":"m.text"},"ts":1200618783000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: rgba(n, n, n, 0) converted to premultiplied alpha is (0, 0, 0, 0), so it's impossible to recover the colour components from it","msgtype":"m.text"},"ts":1200618840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"othermaciej: if you're using a trunk build, you could retry the test with gfx.color_management.enabled set to true","msgtype":"m.text"},"ts":1200618841000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"Philip`: right","msgtype":"m.text"},"ts":1200618842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: so, that's a bug.","msgtype":"m.text"},"ts":1200618843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"according to the spec","msgtype":"m.text"},"ts":1200618844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you draw something with zero alpha, nothing will ever get drawn, so it doesn't matter that the colour components were lost","msgtype":"m.text"},"ts":1200618845000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it only matters if you get the pixels back and do something to them that un-zeroes the alpha","msgtype":"m.text"},"ts":1200618900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1200618901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"premultiplying is a good optimization","msgtype":"m.text"},"ts":1200618902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it would be unfortunate to rule it out","msgtype":"m.text"},"ts":1200618903000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: It's the same 'bug' as rgba(1, 2, 3, 0.5) being read back as something like (2, 2, 4, 127) - it's just a loss of precision, and when alpha=0 it's just ending up with zero precision","msgtype":"m.text"},"ts":1200618904000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so it's not like a horrible thing for the browser to do :-)","msgtype":"m.text"},"ts":1200618960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well right now the spec rules it out","msgtype":"m.text"},"ts":1200619020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't see where the spec rules it out","msgtype":"m.text"},"ts":1200619021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"3.14.11.1.10. Pixel manipulation, first paragraph, last sentence","msgtype":"m.text"},"ts":1200619080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/would be unfortunate/is unfortunate/","msgtype":"m.text"},"ts":1200619081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i seem to recall responding to feedback that basically said that they really didn't want it premultiplied for some reason","msgtype":"m.text"},"ts":1200619082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That part isn't relevant - the canvas pixel colours are still being returned non-premultiplied, and nothing says that e.g. filling with (255,0,0,0) can't result in the canvas pixel colours being (0,0,0,0) and thus being returned as (0,0,0,0) from getImageData","msgtype":"m.text"},"ts":1200619260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is there a requirement that a putImageData / getImageData round trip has to return identical data?","msgtype":"m.text"},"ts":1200619320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1200619321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though there's a requirement that getImageData / putImageData has no effect) ","msgtype":"m.text"},"ts":1200619322000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"maybe i should make it clear that getImageData / putImageData / getImageData / putImageData should have no effect either","msgtype":"m.text"},"ts":1200619380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think that's clear already","msgtype":"m.text"},"ts":1200619381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that wouldn't affect premult","msgtype":"m.text"},"ts":1200619382000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because if get/put has no effect, then get/put/get/put can't possibly have any effect...","msgtype":"m.text"},"ts":1200619383000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though to be honest if 3.14.11.1.10. Pixel manipulation, first paragraph, last sentence doesn't apply here, i don't really understand what we're talking about","msgtype":"m.text"},"ts":1200619440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is unsurprising given my general ignorance in this region of the spec","msgtype":"m.text"},"ts":1200619441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(127, 127, 127, 0.5) would be stored internally as (64, 64, 64, 0.5) (I can't remember if you premultiply alpha by itself, but I think you don't) but would return (128, 128, 128, 0.5) when retrieving because premult is undone","msgtype":"m.text"},"ts":1200619500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think we're talking about the internal canvas representations not being required to have a specific precision","msgtype":"m.text"},"ts":1200619501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but (128, 128, 128, 0.5) and (127, 127, 127, 0.5) would draw the same thing","msgtype":"m.text"},"ts":1200619560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh i understand what Philip` meant earlier about the extreme 0 case meaning that data was \"lost\" but that really just being that the precision is lost","msgtype":"m.text"},"ts":1200619561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so a put/get cycle from arbitrary data might not retrieve the same data","msgtype":"m.text"},"ts":1200619620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's just that with alpha=0, the number of bits left is 0, so you'll always get 0 in the rgb components","msgtype":"m.text"},"ts":1200619621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but a get/put always would preserve contents","msgtype":"m.text"},"ts":1200619622000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200619623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and so there's no point in worrying about whether 127.5 gets rounded to 127 or to 128, because it'll get clobbered by the conversion to the internal representation anyway)","msgtype":"m.text"},"ts":1200619624000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i don't care so much about that","msgtype":"m.text"},"ts":1200619625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: not if alpha is 1!","msgtype":"m.text"},"ts":1200619626000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Is there any point worrying about it in that specific case?","msgtype":"m.text"},"ts":1200619680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't think rounding mode of fractional pixels is that important, no","msgtype":"m.text"},"ts":1200619681000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but not for the reason you stated","msgtype":"m.text"},"ts":1200619682000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"probably the simplest thing for implementations would be to do an ECMA-262 ToInt32 conversion on the provided pixel value","msgtype":"m.text"},"ts":1200619740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(I think that truncates)","msgtype":"m.text"},"ts":1200619741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"truncation is going to mean that you are always slightly off-white","msgtype":"m.text"},"ts":1200619800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Since performance kind of matters here, is there some particular way of handling putImageData that would be as fast as possible while still being reasonably sane?","msgtype":"m.text"},"ts":1200619801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(like, not doing lots of conversions and roundings and range checks for every component of every pixel because it'll make putImageData more unusably slow)","msgtype":"m.text"},"ts":1200619860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: it's much easier if you don't require the image data object to be an actual array","msgtype":"m.text"},"ts":1200619920000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: What would be the alternative?","msgtype":"m.text"},"ts":1200619921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"my assumption has been that if you use getImageData then you get back something with a [[Class]] of ImageData that, when you set things to it, keeps the data in a really compact representation so long as you're only setting valid data ","msgtype":"m.text"},"ts":1200619922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: An object with length and integer accessor properties. ","msgtype":"m.text"},"ts":1200619923000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"and expands to a normal JS object (which happens to have a [[Class]] of ImageData) if you do anything \"wrong\" (like set a pixel value to a string)","msgtype":"m.text"},"ts":1200619980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That sort of magic sounds annoying to implement","msgtype":"m.text"},"ts":1200620040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: anyway, if you do that, storing data in a native format, you only need to do conversion when JS explicitly requests it. And if JS is doing a lot of pixel throbbing, a few expensive ALU ops aren't gonna kill everything (even if their latency is gonna be hard to hide)","msgtype":"m.text"},"ts":1200620100000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"well, if you don't, you have no choice but to type check and range check and so on","msgtype":"m.text"},"ts":1200620101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. when setting to a number, you'd have to work out whether that number was an integer and could be safely stored in the int[]","msgtype":"m.text"},"ts":1200620102000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: no more than the imagedata in general.","msgtype":"m.text"},"ts":1200620103000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"It's not too disimilar from the native array object, but w/o the worry about autoboxing and whatnot.","msgtype":"m.text"},"ts":1200620160000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"one can just let JS properties shadow those of the internal impl. ","msgtype":"m.text"},"ts":1200620161000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"s/autoboxing/small int/","msgtype":"m.text"},"ts":1200620162000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: I think the usual uses of ImageData involve JS manipulating every pixel, so it needs to be optimised more for pixels that are accessed than for pixels that aren't","msgtype":"m.text"},"ts":1200620220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Does nobody have a nice simple fast ByteArray in JS already? :-(","msgtype":"m.text"},"ts":1200620280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: again, array objects have all the tricks. The most obvious thing I can say: with a JS array, your cost per image color component is at least a pointer.","msgtype":"m.text"},"ts":1200620340000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Philip`: with a specialized object, it's about a byte","msgtype":"m.text"},"ts":1200620341000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"That wouldn't be a problem at all if we had 8-bit pointers","msgtype":"m.text"},"ts":1200620460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I blame whoever thought we needed so much address space","msgtype":"m.text"},"ts":1200620461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"then we wouldn't have to worry about JS iterating over megapixel images, too.","msgtype":"m.text"},"ts":1200620520000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"has forgotten what the original discussion was about now :-)","msgtype":"m.emote"},"ts":1200620521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, nobody tell Philip` about 64 bit architectures","msgtype":"m.text"},"ts":1200620580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"premultiplied alpha and getPixelData/putPixelData","msgtype":"m.text"},"ts":1200620581000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Philip`: are your tests up-to-date wrt to the spec changes?","msgtype":"m.text"},"ts":1200620582000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: The path transformation tests aren't","msgtype":"m.text"},"ts":1200620640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't think there have been any other spec changes that would have affected tests","msgtype":"m.text"},"ts":1200620641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: one of the shadow tests rely on a quirks mode in webkit for dashboard compatibility","msgtype":"m.text"},"ts":1200620700000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"there, i made it so if you have a true ImageData object, then you can't store non-numeric data in there","msgtype":"m.text"},"ts":1200620701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that should simplify matters a little","msgtype":"m.text"},"ts":1200620702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"relies*","msgtype":"m.text"},"ts":1200620703000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"fredrikh: Hmm, do you know which test or quirk that is?","msgtype":"m.text"},"ts":1200620760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: clip() clearing the path","msgtype":"m.text"},"ts":1200620761000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"in 2d.shadow.blur.low","msgtype":"m.text"},"ts":1200620820000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"Hixie: thanks. Does the website update quickly, or is there a more up-to-date way of looking at it","msgtype":"m.text"},"ts":1200620880000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: it updates about 60 seconds after i say that i've updated it here","msgtype":"m.text"},"ts":1200620881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sometimes longer","msgtype":"m.text"},"ts":1200620882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the regenning script takes a long time to run)","msgtype":"m.text"},"ts":1200620883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool. Hmm, are images of about 4.2 billion pixels intended to be supported?","msgtype":"m.text"},"ts":1200620884000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"fredrikh: Ah, thanks - it looks like 2d.path.clip.unaffected is meant to be testing that, so 2d.shadow.blur.low probably shouldn't","msgtype":"m.text"},"ts":1200620885000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"SadEagle: UAs may have implementation-defined limits and may be subject to hardware limitations.","msgtype":"m.text"},"ts":1200620940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fixes in his local copy","msgtype":"m.emote"},"ts":1200620941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: ah, the reason I asked was actually some subtle difference between how foo[1] and foo['1'] behaves.","msgtype":"m.text"},"ts":1200620942000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"where instead of 1, you use 2^32-1 :-)","msgtype":"m.text"},"ts":1200621000000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"(Would be nice if everyone passed 2d.path.clip.unaffected in the same way, of course :-) )","msgtype":"m.text"},"ts":1200621001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but only Firefox follows the spec there, seemingly)","msgtype":"m.text"},"ts":1200621002000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"SadEagle: yeah, not sure how to handle that exactly, i'm waiting on the dom bindings spec","msgtype":"m.text"},"ts":1200621003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"christ, the w3c site is getting slower every time i regen the spec","msgtype":"m.text"},"ts":1200621060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure looking forward to gsnedders' spec generator :-)","msgtype":"m.text"},"ts":1200621061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: hmm, I thought we passed that, but I gues snot","msgtype":"m.text"},"ts":1200621120000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"it's strange that we don't, because we do close the sub path","msgtype":"m.text"},"ts":1200621180000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"but while on the topic of shadows...","msgtype":"m.text"},"ts":1200621300000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"Hixie: i'd really appreciate it if the spec didn't say that implementations must use the specified algorithm","msgtype":"m.text"},"ts":1200621301000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"which one?","msgtype":"m.text"},"ts":1200621302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for shadows","msgtype":"m.text"},"ts":1200621303000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1200621304000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(The specified algorithm ought to match what Safari does now)","msgtype":"m.text"},"ts":1200621360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"in khtml we use a different filter that produces an effect that's very similar to a gaussian blur, but is many times faster","msgtype":"m.text"},"ts":1200621361000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"fredrikh: Conformance requirements phrased as algorithms or specific steps may be implemented in any manner, so long as the end result is equivalent.","msgtype":"m.text"},"ts":1200621362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1200621420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: okay","msgtype":"m.text"},"ts":1200621421000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"apparently someone needs to write Cookie5","msgtype":"m.text"},"ts":1200621422000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"\"equivalent\" is fairly loose here since rounding/precision issues mean nobody's going to really notice if some values are off by a few percent","msgtype":"m.text"},"ts":1200621423000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1200621424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is it intended that drawImage function when the source image is the same canvas element as the destination?","msgtype":"m.text"},"ts":1200621425000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"if there's some algorithm that looks like gaussian but happens to be an approximation, that's just an implemetation of gaussian blur that happens to approximate","msgtype":"m.text"},"ts":1200621480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or at least it means I'm willing to add lots of +/- value tolerance in my tests - I don't know if anybody else minds that :-) )","msgtype":"m.text"},"ts":1200621481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"SadEagle: what do browsers do now?","msgtype":"m.text"},"ts":1200621482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"notes that his Firefox shadow patch is a (possibly poor) Gaussian approximation since it just chops off the ends of the distribution","msgtype":"m.emote"},"ts":1200621660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: no idea, will try. Just a mental observation of a potential problem (after supper..)","msgtype":"m.text"},"ts":1200621720000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Ccanvas%20id%3Dc%3E%3C%2Fcanvas%3E%0D%0A%3Cscript%3E%0D%0Awindow.onload%20%3D%20function%20()%20%7B%0D%0Avar%20ctx%20%3D%20document.getElementById('c').getContext('2d')%3B%0D%0Actx.fillStyle%20%3D%20'red'%3B%0D%0Actx.fillRect(0%2C%200%2C%2050%2C%2050)%3B%0D%0Actx.drawImage(document.getElementById('c')%2C%2020%2C%2020)%3B%0D%0A%7D%0D%0A%3C%2Fscript%3E","msgtype":"m.text"},"ts":1200621780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"SadEagle: k","msgtype":"m.text"},"ts":1200621781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: the real question is what happens if the source pixels would change value during the opueration","msgtype":"m.text"},"ts":1200621840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. using one of the PNG test images","msgtype":"m.text"},"ts":1200621841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Firefox/Safari draw two red rectangles, Opera draws an endless chain of rectangles","msgtype":"m.text"},"ts":1200621842000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"testing both bottom right and top left overlap","msgtype":"m.text"},"ts":1200621843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it is testing that already, and Opera loses :-)","msgtype":"m.text"},"ts":1200621900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"endless chain?","msgtype":"m.text"},"ts":1200621901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/Opera/Opera 9.2/","msgtype":"m.text"},"ts":1200621902000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1200621903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it paints the whole canvas","msgtype":"m.text"},"ts":1200621904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Opera 9.5 works like FF/S)","msgtype":"m.text"},"ts":1200621905000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i thought you were only painting the rect","msgtype":"m.text"},"ts":1200621906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"teehee","msgtype":"m.text"},"ts":1200621907000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1200621908000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"adds to his list of things to add tests for","msgtype":"m.emote"},"ts":1200621960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: that's the only way to do it if you want reasonable performance, and the gaussian curve is effectively 0 after about 3 standard deviations","msgtype":"m.text"},"ts":1200621961000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"is there a better way to say it than:","msgtype":"m.text"},"ts":1200622080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  <p>When a canvas is drawn onto itself, user agents must act as if","msgtype":"m.text"},"ts":1200622081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  the source was copied before the drawing operation started.</p>","msgtype":"m.text"},"ts":1200622082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fredrikh: Apparently about 0.27% percent is outside +/- 3 sigma, so I guess that's fine since it'll be lost in the rounding errors","msgtype":"m.text"},"ts":1200622140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: That's not necessary to state, since the drawing model already covers it","msgtype":"m.text"},"ts":1200622141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1200622142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The canvas would get drawn to the source image bitmap, and then it would get composited onto the canvas bitmap later","msgtype":"m.text"},"ts":1200622200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"valid, valid","msgtype":"m.text"},"ts":1200622201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it has to be read before anything is written","msgtype":"m.text"},"ts":1200622202000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"removes the paragraph","msgtype":"m.emote"},"ts":1200622203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll just add this note instead:","msgtype":"m.text"},"ts":1200622260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  <p class=\"note\">When a canvas is drawn onto itself, the drawing","msgtype":"m.text"},"ts":1200622261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  model requires the source to be copied before the image is drawn","msgtype":"m.text"},"ts":1200622262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  back onto the canvas, so it is possible to copy parts of a canvas","msgtype":"m.text"},"ts":1200622263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  onto overlapping parts of itself.</p>","msgtype":"m.text"},"ts":1200622264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless you think even that is unnecessary (but someone asked the question, so...)","msgtype":"m.text"},"ts":1200622265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks","msgtype":"m.text"},"ts":1200622320000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Seems sensible to have that note","msgtype":"m.text"},"ts":1200622321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: you could perhaps say that it's an atomic operation","msgtype":"m.text"},"ts":1200622322000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"i think the drawing model describes that part well enough, as Philip` pointed out","msgtype":"m.text"},"ts":1200622440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we should have an example of fudging with putImageData()","msgtype":"m.text"},"ts":1200622441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone want to come up with a decent, useful filter that isn't long?","msgtype":"m.text"},"ts":1200622442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://canvex.lazyilluminati.com/misc/filter.html ?","msgtype":"m.text"},"ts":1200622500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"do you mind contributing that to the spec?","msgtype":"m.text"},"ts":1200622560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I wouldn't mind at all, although it could probably doing with being cleaned up a bit first :-)","msgtype":"m.text"},"ts":1200622620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah don't worry, i'll clean it up :-)","msgtype":"m.text"},"ts":1200622621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll also change the image you use :-P","msgtype":"m.text"},"ts":1200622622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(It's just a boring edge detection filter - don't know if it's got an official name or anything)","msgtype":"m.text"},"ts":1200622680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's the only image on the web whose URL I can remember","msgtype":"m.text"},"ts":1200622681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"laplacian edge detection or somesuch","msgtype":"m.text"},"ts":1200622682000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Oh, but I had to copy it to my own server because of the annoying security restrictions :-(","msgtype":"m.text"},"ts":1200622740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders about Access-Control for canvas images","msgtype":"m.emote"},"ts":1200622741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(grr, who's idea was it to make the Image() constructor take _dimensions_ as its argument. all i care about is the uri!)","msgtype":"m.text"},"ts":1200622800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: let's wait for access-control to be resolved first :-)","msgtype":"m.text"},"ts":1200622801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and do fast image filtering ops instead :9","msgtype":"m.text"},"ts":1200622860000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"kig: Ah, yes, looks like it is Laplacian","msgtype":"m.text"},"ts":1200622861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It would be great if we could generate Java bytecode in JS to do the filtering operation, and then tell the browser to compile and JIT it and run it on every pixel","msgtype":"m.text"},"ts":1200622920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: what's with the fillrects in that demo? :-)","msgtype":"m.text"},"ts":1200623040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That was to measure how much faster putImageData was","msgtype":"m.text"},"ts":1200623041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"fillRects: 2606ms; putImageData: 30ms\"","msgtype":"m.text"},"ts":1200623100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1200623101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"deletes code","msgtype":"m.emote"},"ts":1200623102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: great is one word for it. :)","msgtype":"m.text"},"ts":1200623160000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Hmm, the isNaN thing is a bit ugly, but the alternative ways of filling the outermost 1-pixel edge of the image with 0 are a bit ugly too :-(","msgtype":"m.text"},"ts":1200623220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(It would be much nicer to write this kind of code in C)","msgtype":"m.text"},"ts":1200623520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Oh, that's a good idea - web browsers should allow <script type=\"text/c\">)","msgtype":"m.text"},"ts":1200623580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gnu lightning ","msgtype":"m.text"},"ts":1200623581000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"You could use a self-hosted instance of the lcc compiler to convert C into whatever the JIT backend needs","msgtype":"m.text"},"ts":1200623700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: download on http://software.hixie.ch/utilities/js/live-dom-viewer/","msgtype":"m.text"},"ts":1200623820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what am i doing wrong","msgtype":"m.text"},"ts":1200623821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GLSL is a lot nicer than C for graphics though","msgtype":"m.text"},"ts":1200623880000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Hixie: Are you using something like FF2 on Linux?","msgtype":"m.text"},"ts":1200624000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it worked on your demo","msgtype":"m.text"},"ts":1200624060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1200624061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=406036","msgtype":"m.text"},"ts":1200624062000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1200624063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"There's a bug with images with certain dimensions","msgtype":"m.text"},"ts":1200624064000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which I guess might be what's breaking this","msgtype":"m.text"},"ts":1200624065000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is it working for you?","msgtype":"m.text"},"ts":1200624066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Your example works for me in FF3 on Windows, but not FF2 on Linux)","msgtype":"m.text"},"ts":1200624067000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1200624068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It looks pretty ugly, though :-p","msgtype":"m.text"},"ts":1200624069000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the code or the output? :-)","msgtype":"m.text"},"ts":1200624120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The output","msgtype":"m.text"},"ts":1200624121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I haven't looked at the code much :-)","msgtype":"m.text"},"ts":1200624122000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1200624123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it'd be good to at least get rid of the \"var w4 = w*4\" because it's not a sufficiently useful optimisation","msgtype":"m.text"},"ts":1200624180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok gotta go. regenning the spec, i'll commit it tomorrow.","msgtype":"m.text"},"ts":1200624360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, sounds good","msgtype":"m.text"},"ts":1200624480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In the new spec, s/clamed/clamped/","msgtype":"m.text"},"ts":1200624540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"The toDataURL() method must not include color space information in the resource returned.\" - hmm, I guess I need to write a PNG decoder to be able to test that...","msgtype":"m.text"},"ts":1200624780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Well, at least enough to parse out all the chunk types)","msgtype":"m.text"},"ts":1200624840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Or I could not bother, which would be much easier","msgtype":"m.text"},"ts":1200624841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fredrikh: 77%","msgtype":"m.text"},"ts":1200624900000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Aha, if undefined is like 0 then the isNaN checks can be removed from clamp256, and the loops made to go 1<=y<h-1, 1<=x<w-1","msgtype":"m.text"},"ts":1200624960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which is much nicer","msgtype":"m.text"},"ts":1200624961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"except you'd have to say \"outputData.length = w*h*4\" to make sure it's got the right number of undefineds","msgtype":"m.text"},"ts":1200625020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: wrt to 2d.composite.operation.darker --- was 'darker' removed from the spec at some point?","msgtype":"m.text"},"ts":1200625080000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: Yes","msgtype":"m.text"},"ts":1200625081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I see, thanks. *removes*","msgtype":"m.text"},"ts":1200625140000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-May/011386.html etc","msgtype":"m.text"},"ts":1200625200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Firefox/Opera/Safari all implemented it totally differently)","msgtype":"m.text"},"ts":1200625201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: it's not hard to write a PNG decoder that just does that","msgtype":"m.text"},"ts":1200625260000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: In JavaScript? :-)","msgtype":"m.text"},"ts":1200625261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you have a fair point there","msgtype":"m.text"},"ts":1200625262000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"tries to work out what Gecko 1.8.1.12 is","msgtype":"m.emote"},"ts":1200625500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think that's going to be Firefox 2.0.whatever","msgtype":"m.text"},"ts":1200625501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so that should mean Firefox 2 will get a working putImageData","msgtype":"m.text"},"ts":1200625560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"1.8.1.11 is 2.0.0.11","msgtype":"m.text"},"ts":1200625561000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"that's almost binutils-like","msgtype":"m.text"},"ts":1200625562000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Philip`: uh-oh. Now I definitely will have to implement that ;-)","msgtype":"m.text"},"ts":1200625563000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"(where \"working\" means \"buggy\" because it's still returning premultiplied colours, I think)","msgtype":"m.text"},"ts":1200625620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but at least you can work around that in JS)","msgtype":"m.text"},"ts":1200625621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fredrikh: Oops, I just noticed I misinterpreted what you said about 2d.shadow.blur.low - I thought shadow bugs were being masked by clip bugs, but actually the test was relying on those clip bugs...","msgtype":"m.text"},"ts":1200626460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: right","msgtype":"m.text"},"ts":1200626461000,"senderName":"fredrikh","senderId":"fredrikh@irc"},
{"content":{"body":"Philip`: re: canvas 2d impl in opengl, going to do it?","msgtype":"m.text"},"ts":1200631440000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Hixie: there's an instructions.in/test 5 asymmetry again :-)","msgtype":"m.text"},"ts":1200635100000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie, s/clamed to 255/clamped to 255/","msgtype":"m.text"},"ts":1200635760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/in\\//inc\\//","msgtype":"m.text"},"ts":1200635761000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"hmm, Acid3 is testing @font-face now?","msgtype":"m.text"},"ts":1200636540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is that the purple \"X\" ?","msgtype":"m.text"},"ts":1200636600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1200636601000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so it seems","msgtype":"m.text"},"ts":1200636602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fun times","msgtype":"m.text"},"ts":1200636660000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"gasps","msgtype":"m.emote"},"ts":1200636661000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it's not an EOT font!","msgtype":"m.text"},"ts":1200636662000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"that same test also tests positioned generated content, nice","msgtype":"m.text"},"ts":1200636720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"omg Hixie is teh font pirate!!!111","msgtype":"m.text"},"ts":1200636900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: is that what the red square in the upper right corner is?","msgtype":"m.text"},"ts":1200637080000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"hum.. hixie.ch is failing to load","msgtype":"m.text"},"ts":1200637081000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome, an \"X\" drawn in the Ahem font is supposed to cover that","msgtype":"m.text"},"ts":1200637082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we support @font-face...","msgtype":"m.text"},"ts":1200637140000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"wonders what sort of @font-face madness he's doing","msgtype":"m.emote"},"ts":1200637141000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"do you support positioned generated content though?","msgtype":"m.text"},"ts":1200637142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably","msgtype":"m.text"},"ts":1200637143000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"otherwise the X will not be on top of the red square (the \"X\" is also invisible if you support @font-face afaict)","msgtype":"m.text"},"ts":1200637200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there some documentation on what subset of descriptors WebKit supports?","msgtype":"m.text"},"ts":1200637440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for @font-face? not many","msgtype":"m.text"},"ts":1200637680000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i'm all for not many, just wondering which :)","msgtype":"m.text"},"ts":1200637740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"UTSL","msgtype":"m.text"},"ts":1200640080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I do not think it is documented otherwise","msgtype":"m.text"},"ts":1200640081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's not that strong with me it seems","msgtype":"m.text"},"ts":1200640200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: link types are extensible and the extensibility mechanism is unstable","msgtype":"m.text"},"ts":1200641040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"notes that Opera violates the HTML5 requirement that UAs MUST NOT support UTF-7","msgtype":"m.emote"},"ts":1200646740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what's the reason for forbidding UTF-7?","msgtype":"m.text"},"ts":1200647340000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"other than it being a totally useless encoding for the web","msgtype":"m.text"},"ts":1200647341000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: it is a security problem, too","msgtype":"m.text"},"ts":1200647700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"kig: I'm not planning to do that","msgtype":"m.text"},"ts":1200647880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen, what's the scenario?","msgtype":"m.text"},"ts":1200648300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: an attacker injects UTF-7 encoded evil code into a forum. the forum software assumes that Basic Latin and ASCII bytes have a sane correspondence and doesn't filter out the evil attack code.","msgtype":"m.text"},"ts":1200648480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the user is somehow tricked to selecting UTF-7 (e.g. by simply posting an instruction to do so; so gullible people will fall for it).","msgtype":"m.text"},"ts":1200648540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the attack code runs","msgtype":"m.text"},"ts":1200648541000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Firefox supports UTF-7 too","msgtype":"m.text"},"ts":1200648660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and IE","msgtype":"m.text"},"ts":1200648661000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Safari doesn't let you pick UTF-7 from the encoding menu in the UI at least","msgtype":"m.text"},"ts":1200648720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though I dunno if it supports it generally","msgtype":"m.text"},"ts":1200648721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"8-bit encodings where ASCII is not ASCII are bad mojo","msgtype":"m.text"},"ts":1200648780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Lachy: I think there's a bug about disabling UTF-7 from Gecko wherever feasible","msgtype":"m.text"},"ts":1200648781000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's most insecure when auto-detect is enabled and allowed to switch to UTF-7 automatically","msgtype":"m.text"},"ts":1200648840000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=408457","msgtype":"m.text"},"ts":1200648960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=406777","msgtype":"m.text"},"ts":1200648961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has very little sympathy for authors whose sites would break due to UTF-7 getting disabled","msgtype":"m.emote"},"ts":1200649080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder how many sites are actually using UTF-7","msgtype":"m.text"},"ts":1200649081000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"probably in the same ballpark with UTF-32 usage","msgtype":"m.text"},"ts":1200649140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is there an easy way to test whether an encoding is ebcdic-based?","msgtype":"m.text"},"ts":1200649200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"UTF-32 is not used","msgtype":"m.text"},"ts":1200649201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it is by test suites, I believe","msgtype":"m.text"},"ts":1200649202000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"test suites don't matter","msgtype":"m.text"},"ts":1200649203000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"yeah, test suites caused us to support it iirc","msgtype":"m.text"},"ts":1200649204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"coming up with new character encodings should carry an even more drastic punishment than coming up with new C++ features","msgtype":"m.text"},"ts":1200649260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if it's only test suites using it, then that's not real world usage and it can be dropped","msgtype":"m.text"},"ts":1200649261000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"is x-JISAutoDetect a real Web encoding decl or an ICU internal magic name?","msgtype":"m.text"},"ts":1200649740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"are there encodings that aren't either: 1) ASCII-based, 2) EBCDIC-based or 3) designed for Unicode?","msgtype":"m.text"},"ts":1200650100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"definitely","msgtype":"m.text"},"ts":1200650280000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"isn't JISAutoDetect a Java-specific thing?","msgtype":"m.text"},"ts":1200650340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"lots of the older Asian encodings for example","msgtype":"m.text"},"ts":1200650341000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"MikeSmith: perhaps. I'll put in on the banned list.","msgtype":"m.text"},"ts":1200650342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen - I'll also ask Felix Sasaki about it","msgtype":"m.text"},"ts":1200650343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I reckon he'll know for sure","msgtype":"m.text"},"ts":1200650344000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(the banned list is stuff that the Validator.nu deployment has decoders for but that a Web-facing piece of software should not support)","msgtype":"m.text"},"ts":1200650400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Big5 and GB2312 for example","msgtype":"m.text"},"ts":1200650460000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: ah. ok. ","msgtype":"m.text"},"ts":1200650461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thought GB stuff was ASCII-based","msgtype":"m.emote"},"ts":1200650462000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"roc: according to my test code, ASCII bytes decode to corresponding Basic Lating in Big5 and GB2312","msgtype":"m.text"},"ts":1200650520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, if that's what you mean by ASCII based...","msgtype":"m.text"},"ts":1200650580000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"then Unicode is ASCII based too :-)","msgtype":"m.text"},"ts":1200650581000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"The mappings for bytes 00-7F are actually not specified by Big5 or GB2312 or comparable encodings","msgtype":"m.text"},"ts":1200650582000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: well, UTF-8 and CESU-8","msgtype":"m.text"},"ts":1200650583000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"they're just \"whatever the system does\"","msgtype":"m.text"},"ts":1200650640000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"oh. that's bad","msgtype":"m.text"},"ts":1200650641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Big5","msgtype":"m.text"},"ts":1200650642000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ASCII is de facto, though, isn't it?","msgtype":"m.text"},"ts":1200650643000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"The modern characterization of Big5 as an MBCS consisting of the DBCS of Big5 plus the SBCS of ASCII is therefore historically incorrect and potentially flawed, as the choice of the matching SBCS was, and theoretically still is, quite independent of the flavour of Big5 being used.\"","msgtype":"m.text"},"ts":1200650644000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I care about the IANA meaning and actual Web usage","msgtype":"m.text"},"ts":1200650700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"more specifically, I'm right now implementing checking for the HTML5 requirements about encodings implementations MUST NOT support, authors SHOULD NOT use and the ASCII superset requirement","msgtype":"m.text"},"ts":1200650820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: you have a definition for ASCII supersetness but you don't say how to tell if an encoding is EBCDIC-based","msgtype":"m.text"},"ts":1200650880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It seems that the stuff on my non-ASCII list consists of UTF-16, UTF-32, ISCII, legacy dingbat stuff, a couple of Japanese and Korean encodings and an insane number of IBM encodings","msgtype":"m.text"},"ts":1200651000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it looks almost safe to whitelist UTF-16 and complain about all other non-ASCII-superset encodings","msgtype":"m.text"},"ts":1200651001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. or perhaps this heuristic works for non-x-encodings: if non-ASCII-superset and name starts with \"cp\" or \"ibm\", the encoding falls under the EBCDIC SHOULD NOT","msgtype":"m.text"},"ts":1200651180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: while you're at it, you could warn about encodings other than utf-8 and utf-16 for xml","msgtype":"m.text"},"ts":1200652020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(or drop support for other encodings altogether, although that probably makes the validator less useful)","msgtype":"m.text"},"ts":1200652080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Don't I already warn about them? (other than ISO-8859-1 and US-ASCII that is)","msgtype":"m.text"},"ts":1200652140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hopes hsivonen does not warn about text/xml","msgtype":"m.emote"},"ts":1200652141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/hsivonen/validator.nu/ :p","msgtype":"m.text"},"ts":1200652200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't remember what exactly the text/xml warning are, but I think I warn if charset= is missing on the HTTP level","msgtype":"m.text"},"ts":1200652260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1200652261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't your patch about that still in queue for Gecko? might be a good idea to suggest that it not be checked in","msgtype":"m.text"},"ts":1200652320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh, i just tested with iso-8859-1","msgtype":"m.text"},"ts":1200652380000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so far I only updated some architecture","msgtype":"m.text"},"ts":1200652381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: warning about iso-8859-1 and us-ascii seems unproductive considering implementation reality","msgtype":"m.text"},"ts":1200652382000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: true","msgtype":"m.text"},"ts":1200652440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"isn't iso-8859-1 really windows-1252?","msgtype":"m.text"},"ts":1200652441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not in Validator.nu XML support","msgtype":"m.text"},"ts":1200652442000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders what the various control characters do in browsers","msgtype":"m.emote"},"ts":1200652500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"C1 range should give a warning in V.nu","msgtype":"m.text"},"ts":1200652501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the lax type checkbox turns off RFC 3023 uselessness.","msgtype":"m.text"},"ts":1200652620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but if the checkbox is unchecked, I'm eligible for the t-shirt","msgtype":"m.text"},"ts":1200652680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fyi, I've set up the following page to document milestones related to HTML over the last 10 years (between publication of the HTML 4.0 Rec and creation of the current HTML WG) and to try to provide context for HTML5","msgtype":"m.text"},"ts":1200653700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://esw.w3.org/topic/HTML/history","msgtype":"m.text"},"ts":1200653701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm sure there are some things of significance that I've missed, so if anybody notices such, please add it.","msgtype":"m.text"},"ts":1200653760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Or change anything that's not accurate","msgtype":"m.text"},"ts":1200653820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"If you do add or change anything, please also include a comment indicating what you added or changed.","msgtype":"m.text"},"ts":1200653821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"first compatible native implementation of XMLHttpRequest\" - compatible with what?","msgtype":"m.text"},"ts":1200654420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the APIs matched","msgtype":"m.text"},"ts":1200654540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though getting the object was slightly different","msgtype":"m.text"},"ts":1200654541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i should say \"matched\"","msgtype":"m.text"},"ts":1200654542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip` - I copied that wording directly from Wikipedia. I don't know what it means either. I guess it means compatible with the implementation in IE6.","msgtype":"m.text"},"ts":1200654900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"..","msgtype":"m.text"},"ts":1200655800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"What kinds of Web applications are the use cases behind the Network Connections part of the current HTML5 spec?","msgtype":"m.text"},"ts":1200655860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.w3.org/html/wg/html5/#network","msgtype":"m.text"},"ts":1200655861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Chat rooms and such, maybe?","msgtype":"m.text"},"ts":1200655920000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"p2p games, avoiding overhead of HTTP","msgtype":"m.text"},"ts":1200655921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1200655980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"recent discussions around Access Control leave me thinking it might be a worthwhile to try to start getting use cases documented for various parts of the HTML5 spec","msgtype":"m.text"},"ts":1200656100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"probably, yeah","msgtype":"m.text"},"ts":1200656101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1200656102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, definitely worthy of a big sigh","msgtype":"m.text"},"ts":1200656220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe can get some people to volunteer to do the work of gathering the use cases and documenting them and maintaining the doc","msgtype":"m.text"},"ts":1200656221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"would be quite different work than spec-editing, with nowhere near the same need of technical expertise to write it up","msgtype":"m.text"},"ts":1200656280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1200656400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think i've address all the concerns with access control now","msgtype":"m.text"},"ts":1200656460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"addressed*","msgtype":"m.text"},"ts":1200656461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://users.ecs.soton.ac.uk/jmb/test/cookies.php","msgtype":"m.text"},"ts":1200658320000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"MikeSmith: hmm. the wiki should probably mention the introduction of doctype sniffing. I don't have the dates at hand. Tantek and Peter Linss probably recall the historical specifics.","msgtype":"m.text"},"ts":1200659700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen - If you can have time to find dates for that, I'd appreciate it","msgtype":"m.text"},"ts":1200659760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm reminded now that I wanted to add the date for first public launch of your conformance checker","msgtype":"m.text"},"ts":1200659820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and also for validator.nu launch","msgtype":"m.text"},"ts":1200659821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll see if I can dig up some the dates","msgtype":"m.text"},"ts":1200659880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1200660060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"You could list all the occasions that the HTML WG has agreed on something","msgtype":"m.text"},"ts":1200661020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sigh. so much character encoding code tweaking","msgtype":"m.text"},"ts":1200661980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"everyone should just use utf-8","msgtype":"m.text"},"ts":1200661981000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Everyone should just use us-ascii and NCRs","msgtype":"m.text"},"ts":1200662160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"everyone should use utf-7, the imap version","msgtype":"m.text"},"ts":1200662161000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: oh, yeah, the IMAP version... I found out about it earlier today and put it on the banned list","msgtype":"m.text"},"ts":1200662220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"All characters should be encoded as PNGs","msgtype":"m.text"},"ts":1200662221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"nope, not enough XML","msgtype":"m.text"},"ts":1200662222000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"has a printed copy of the IMAP spec for when he can't get to sleep","msgtype":"m.emote"},"ts":1200662280000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"And the screen readers (audio) should recognise the pattern in the PNG character and interpret it as a sound.","msgtype":"m.text"},"ts":1200662281000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"Sounds like IMAP UTF-7 doesn't have the security problems of plain UTF-7, since ASCII characters can't be encoded as multiple bytes","msgtype":"m.text"},"ts":1200662340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"OmegaJunior: PNG is extensible so we can add a new chunk that gives a textual representation of the image","msgtype":"m.text"},"ts":1200662341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And an audio representation?","msgtype":"m.text"},"ts":1200662400000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"That would be a good way of making accessible CAPTCHAs, actually","msgtype":"m.text"},"ts":1200662401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Not if it has the text rep built in... automated retrieval not good for security","msgtype":"m.text"},"ts":1200662402000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"OmegaJunior: I'm not sure why that would be needed - screen readers can convert the text to audio","msgtype":"m.text"},"ts":1200662403000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Less CPU power needed by the screen readers :)","msgtype":"m.text"},"ts":1200662460000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"They can make up for that CPU power usage by disabling the graphics output","msgtype":"m.text"},"ts":1200662461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1200662462000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"getting innerHTML: \"If one of the ancestors of the child node is a style, script, xmp, iframe, noembed, noframes, noscript, or plaintext element, then append the value of the child node's data DOM attribute literally.\"","msgtype":"m.text"},"ts":1200662940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"perhaps that should say \"If the parent node of the child node ...\" in order to make the algorithm more performant while still DTRT in normal cases","msgtype":"m.text"},"ts":1200663000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in fact, firefox seems to only serialize the child text nodes of e.g. <script>","msgtype":"m.text"},"ts":1200663240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but opera serializes all children and only checks parent for deciding about < vs. &lt;","msgtype":"m.text"},"ts":1200663480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sends email","msgtype":"m.emote"},"ts":1200663481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"actually, i guess the spec could be implemented in a performant way by just using a flag","msgtype":"m.text"},"ts":1200663780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's not quite clear if what the spec says is nice for <script><?test alert(1)?></script>","msgtype":"m.text"},"ts":1200663840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is not entirely unlikely if you copy and paste nodes of responseXML into your own DOM and then serialize","msgtype":"m.text"},"ts":1200663841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i've complained about serializing PIs","msgtype":"m.text"},"ts":1200663900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"same applies to comments i guess","msgtype":"m.text"},"ts":1200663901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what do you mean? you think comments should be omitted from the serialization?","msgtype":"m.text"},"ts":1200663960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(firefox omits them)","msgtype":"m.text"},"ts":1200664020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm not sure if what is being said for <script> etc. makes sense for comments","msgtype":"m.text"},"ts":1200664021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the spec says to serialize them as normal. which we do, but firefox doesn't","msgtype":"m.text"},"ts":1200664140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"neither roundtrips correctly of course, but omitting probably roundtrips better than not omitting","msgtype":"m.text"},"ts":1200664260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: I'd suggest changing the edge filtering demo to be more like http://philip.html5.org/demos/canvas/edgedetect.html - the clamping is now unnecessary, and the edges can be handled by setting .length so they are undefined and thus black","msgtype":"m.text"},"ts":1200664380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(This doesn't work in Firefox or in Opera 9.5, though)","msgtype":"m.text"},"ts":1200664440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: in test 1, you have","msgtype":"m.text"},"ts":1200669600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"          case 1: case 3: case 4: case 6: case 7: case 8: case 9: case 12: case 12: throw exception;","msgtype":"m.text"},"ts":1200669601000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"was it intended to list \"case 12\" twice?","msgtype":"m.text"},"ts":1200669602000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"takkaria: Cookie5 falls into the HTTPbis work, IIRC","msgtype":"m.text"},"ts":1200672840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(and parsing and dealing of invalid things falls into my own draft, as the WG seems to not want to do it itself)","msgtype":"m.text"},"ts":1200672900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.cisco.com/univercd/illus/6/42/65242.jpg - hmm, I think this is the first time I've noticed a web site with small print that can't be made readable by increasing the font size","msgtype":"m.text"},"ts":1200674040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is there any way to get back to a DOM from a tree walker?","msgtype":"m.text"},"ts":1200676560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(in html5lib)","msgtype":"m.text"},"ts":1200676620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"should I use xhtml or html for my web site, and why?","msgtype":"m.text"},"ts":1200677640000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"BlueG: You should, because the alternatives are usually proprietary technologies from a single vendor and don't have as wide adoption as (X)HTML","msgtype":"m.text"},"ts":1200677760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does anyone perchance know of any good dom traversal testsuites?","msgtype":"m.text"},"ts":1200677820000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Philip`: I meant I want to know why to choose one of the two over the other...","msgtype":"m.text"},"ts":1200678060000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"a bit OT for this channel, but considering virtually all 'XHTML' sites serve content as if they are HTML, there's virtually only one option","msgtype":"m.text"},"ts":1200678180000,"senderName":"Camaban","senderId":"Camaban@irc"},
{"content":{"body":"would it be legitimate to serve xhtml code with content negotiation so that all of the browsers that support the application/xml+xhtml mime type get it that way, and IE recieves it at text/html?","msgtype":"m.text"},"ts":1200678181000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"BlueG: it states you can do that in the XHTML spec","msgtype":"m.text"},"ts":1200678182000,"senderName":"Camaban","senderId":"Camaban@irc"},
{"content":{"body":"BlueG: What would be the benefit of doing that?","msgtype":"m.text"},"ts":1200678183000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I am told that serving xhtml at text/html is a bad idea, loosing most of the benefits of using xhtml, but that IE doesn't understand the proper mime type","msgtype":"m.text"},"ts":1200678360000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"what are the benefits of using xhtml? :-)","msgtype":"m.text"},"ts":1200678361000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"good question. I have read a few things, but what I am really wanting to know is whether I should use xhtml or html and why","msgtype":"m.text"},"ts":1200678480000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"BlueG: If the application/xhtml+xml (in Firefox etc) and text/html (in IE etc) versions of the page have the same features, then you aren't using any of the features that XHTML provides, and you might as well send it as text/html to everyone because it's easier and less likely to break","msgtype":"m.text"},"ts":1200678481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Er, any of the *new* features that XHTML provides)","msgtype":"m.text"},"ts":1200678600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"would I be better off using html 4.01, instead of xhtml 1.0?","msgtype":"m.text"},"ts":1200678601000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"BlueG: if you serve XHTML as text/html, you may as well use HTML anyway, as the browser looks at it in the same way.  And you can't send XHTML as XTHML because IE doesn't like it....  So either use HTML, or use XHTML as if it's HTML, the end result is, it gets treated as HTML","msgtype":"m.text"},"ts":1200678602000,"senderName":"Camaban","senderId":"Camaban@irc"},
{"content":{"body":"You can send XHTML as XHTML if you don't mind blocking IE users :-)","msgtype":"m.text"},"ts":1200678603000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, that's an option that is rarely open :)","msgtype":"m.text"},"ts":1200678660000,"senderName":"Camaban","senderId":"Camaban@irc"},
{"content":{"body":"hehe... maybe I don't... :-)","msgtype":"m.text"},"ts":1200678661000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"it's my personal web page... I can do what I want :-p","msgtype":"m.text"},"ts":1200678662000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"what are the advantages of xhtml when actually served as xhtml anyways?","msgtype":"m.text"},"ts":1200678720000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"unless you have a particular penchant for XHTML (I tend to code in it still because I got use to it before I knew that there was no point) then HTML4.01 strict is your best bet","msgtype":"m.text"},"ts":1200678721000,"senderName":"Camaban","senderId":"Camaban@irc"},
{"content":{"body":"BlueG: your browser will tell you if you made a stupid typo in a closing tag.","msgtype":"m.text"},"ts":1200678722000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"http://www.w3.org/MarkUp/2004/xhtml-faq#advantages","msgtype":"m.text"},"ts":1200678723000,"senderName":"Camaban","senderId":"Camaban@irc"},
{"content":{"body":"does anyone actually use/support XForms?","msgtype":"m.text"},"ts":1200678780000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"BlueG: Inline SVG seems to be the most common benefit from using XHTML","msgtype":"m.text"},"ts":1200678840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I can't think of much else that is used in practice, except for some rare MathML","msgtype":"m.text"},"ts":1200678900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah, we need to port that to HTML in due course","msgtype":"m.text"},"ts":1200678901000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"SadEagle: Is that an advantage? :-)","msgtype":"m.text"},"ts":1200678960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: the FAQ above lists it as one :-)","msgtype":"m.text"},"ts":1200679140000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: Gecko does with an extension to give a UI","msgtype":"m.text"},"ts":1200679141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(IIRC that's all the extension does, the dealing with the data is in gecko)","msgtype":"m.text"},"ts":1200679142000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SadEagle: (I was referring to the typo thing, rather than XForms)","msgtype":"m.text"},"ts":1200679143000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: it does reduce the chance of unexpected parsing incompatibilities. But then, one should validate against the DTD if one really cares, anyway :-)","msgtype":"m.text"},"ts":1200679260000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"don't say that in here","msgtype":"m.text"},"ts":1200679320000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"Don't say DTD?","msgtype":"m.text"},"ts":1200679321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"DTD and validate in one sentence :)","msgtype":"m.text"},"ts":1200679380000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"Aren't the non-validation uses of DTDs even worse? :-)","msgtype":"m.text"},"ts":1200679381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, DTD then","msgtype":"m.text"},"ts":1200679440000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"Okay, I won't say DTD then","msgtype":"m.text"},"ts":1200679500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":evil:","msgtype":"m.text"},"ts":1200679560000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"krijnh: I think you need to erase the last 6 lines from the log because we don't say DTD in here","msgtype":"m.text"},"ts":1200679561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"apologizes in multiple languages","msgtype":"m.emote"},"ts":1200679562000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"May I use \"tree grammar\", though?","msgtype":"m.text"},"ts":1200679620000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"anne-mibbit: mibbit?","msgtype":"m.text"},"ts":1200679621000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think we don't like grammars","msgtype":"m.text"},"ts":1200679622000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders, it's Web IRC interface (mibbit.com)","msgtype":"m.text"},"ts":1200679680000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"and it's pretty decent too","msgtype":"m.text"},"ts":1200679681000,"senderName":"anne-mibbit","senderId":"anne-mibbit@irc"},
{"content":{"body":"what is the deal with not saying \"D\" acronym?","msgtype":"m.text"},"ts":1200680100000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"they don't provide sufficient or useful guarantees for the real world, and if you rely on them for anything you're likely to be let down","msgtype":"m.text"},"ts":1200680400000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so, does that mean we shouldn't use a doctype declaration?","msgtype":"m.text"},"ts":1200680460000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"you should use it to get the browser into strict mode.","msgtype":"m.text"},"ts":1200680520000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"You should use a doctype in text/html, because otherwise browsers think you're asking for more bugs","msgtype":"m.text"},"ts":1200680521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so what is it we are _not_ doing?","msgtype":"m.text"},"ts":1200680522000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"I believe the idea is that the d-word validation tools are far from sufficient.","msgtype":"m.text"},"ts":1200680580000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"(HTML5 currently uses \"<!doctype html>\", because that has the right effect of making browsers not act buggier, and it doesn't mention or use a DTD at all)","msgtype":"m.text"},"ts":1200680581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's also easy to remember :-)","msgtype":"m.text"},"ts":1200680640000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"The old doctype strings aren't just not easy to remember - they are impossible :-)","msgtype":"m.text"},"ts":1200680700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so, how does this work, using html 5? it won't validate as any w3c standard yet, right? ","msgtype":"m.text"},"ts":1200681360000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"should one use html 5, instead of 4.01, or wait for the standard?","msgtype":"m.text"},"ts":1200681480000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"BlueG - http://hsivonen.iki.fi/doctype/ is worth reading","msgtype":"m.text"},"ts":1200681540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as using HTML5 now, see the advice in the \"What About HTML5?\" section","msgtype":"m.text"},"ts":1200681600000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"BlueG: HTML5 won't become a standard if people don't use it first :-)","msgtype":"m.text"},"ts":1200682320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmmm... so, we want to promote standards, but in order to promote the _progress_ of standards, we have to break the current standards?","msgtype":"m.text"},"ts":1200682380000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"scratches head","msgtype":"m.emote"},"ts":1200682381000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"It isn't breaking current standards - it's just not following them","msgtype":"m.text"},"ts":1200682440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Most web pages don't follow the ISO C standard either, but that's okay because they're not meant to be valid C","msgtype":"m.text"},"ts":1200682441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, yea, i guess thats true... still seems like something of an oxymoron... promoting standards by not following them","msgtype":"m.text"},"ts":1200682442000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"haha, good point","msgtype":"m.text"},"ts":1200682443000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"Philip`: most C programs aren't 'strictly conforming' with ISO C either, BTW.","msgtype":"m.text"},"ts":1200682620000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I more-or-less use HTML5 on my site","msgtype":"m.text"},"ts":1200682680000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Basically, a subset of HTML5: I don't use \"new\" elements and attributes","msgtype":"m.text"},"ts":1200682681000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"(new being not necessarily \"newly defined in a standard,\" more like \"new as in not widely deployed on the web\")","msgtype":"m.text"},"ts":1200682682000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: so what does that mean practically? does it work well for most users? what can you claim about that kind of markup (as opposed to valid html 4.01 strict, or some such)?","msgtype":"m.text"},"ts":1200682740000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"I haven't received any complaints, if that's what you mean. Also, the site lands in standards mode in the major browsers.","msgtype":"m.text"},"ts":1200682800000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I'm not sure what you mean about claims.","msgtype":"m.text"},"ts":1200682801000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"well, lots of people put buttons or links on their page claiming the validity of their markup, pressumably to promote others to use better markup","msgtype":"m.text"},"ts":1200682860000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"Ahh. No, I don't have any such links on the page.","msgtype":"m.text"},"ts":1200682861000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"so, if I have content written as xhtml 1.0 and want it to validate as html 4.01 instead, all I should need to do is remove the xml namespace and lang stuff, and change the <br /> type stuff to <br>?","msgtype":"m.text"},"ts":1200683400000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"and if I am not interested in validating, I could start adding html 5 features?","msgtype":"m.text"},"ts":1200683401000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"what are the most useful features of html 5 that are already widely implemented?","msgtype":"m.text"},"ts":1200683460000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"That sounds like it'd probably be sufficient for getting mostly-valid HTML4, and validators can point out any minor issues","msgtype":"m.text"},"ts":1200683461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You can use the \"Highly Experimental\" http://html5.validator.nu/ if you want to validate HTML5, though your page might become invalid when the spec changes so you need to be a bit careful","msgtype":"m.text"},"ts":1200683520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Implementations_in_Web_browsers lists some of the implemented things","msgtype":"m.text"},"ts":1200683580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: shall I add things konqueror 4 implements?","msgtype":"m.text"},"ts":1200683700000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I would certainly be interested in what konqueror 4 implements","msgtype":"m.text"},"ts":1200683760000,"senderName":"BlueG","senderId":"BlueG@irc"},
{"content":{"body":"SadEagle: Please do :-)","msgtype":"m.text"},"ts":1200683761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders if it's able to run Canvex yet...","msgtype":"m.emote"},"ts":1200683762000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: somewhat. no SVG. what sort of SVG functionality do you need? ","msgtype":"m.text"},"ts":1200683820000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: Hmm, not sure - I just click the buttons in Inkscape and hope browsers can understand it","msgtype":"m.text"},"ts":1200683880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I mean how do you use it?","msgtype":"m.text"},"ts":1200683940000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: Er, I'm not quite sure what you mean now","msgtype":"m.text"},"ts":1200684000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"do you just put them in an <img>, or do somethign fancier?","msgtype":"m.text"},"ts":1200684120000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Oh - they're in an <object> and I do some dynamic setAttribute('transform', '...') on elements inside them","msgtype":"m.text"},"ts":1200684180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, SVG dom? not soon then :(","msgtype":"m.text"},"ts":1200684181000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"(which is a pretty stupid way of implementing an FPS counter, but I wasn't aiming for non-stupidity :-) )","msgtype":"m.text"},"ts":1200684182000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I am not sure I want to see that :-)","msgtype":"m.text"},"ts":1200684240000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"gsnedders: well, there's an independent small open-source browser called netsurf that's just updated their cookie support, I'm not sure what kind of feedback you'd want off them but I could pass messages along","msgtype":"m.text"},"ts":1200686580000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"is there any way to get back to a DOM from a tree walker (in html5lib)?","msgtype":"m.text"},"ts":1200688320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"takkaria: in a world where everyone has to remain compat. with the guy with the largest marketshare, not much — probably just comments on what I generally send out (which will be sent to whatwg⊙wo among other places)","msgtype":"m.text"},"ts":1200688440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: mail me about the ebcdic stuff","msgtype":"m.text"},"ts":1200690060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: i changed the code based on your earlier comments and haven't seen your edgedetect.html -- let me know when i regen the spec if you like the new code","msgtype":"m.text"},"ts":1200690120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"case 12: case 12:\" fixed","msgtype":"m.text"},"ts":1200690180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"regarding the @font-face test, safari passes it, but fails the positioning test","msgtype":"m.text"},"ts":1200690240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"opera fails the font-face part but passes the positioning part (not that you'd know it given the mess that's going on around it)","msgtype":"m.text"},"ts":1200690241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and firefox fails both","msgtype":"m.text"},"ts":1200690242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is it intentional that the treewalker testcases don't seem to test the really nasty stuff?","msgtype":"m.text"},"ts":1200690300000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"what's the nasty stuff?","msgtype":"m.text"},"ts":1200690301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"filtering of non-leafs","msgtype":"m.text"},"ts":1200690302000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"if you can come up with something that matches the conditions listed on http://ln.hixie.ch/ i'd be happy to add it","msgtype":"m.text"},"ts":1200690303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however i don't recall finding any bugs with the non-leafs filtering","msgtype":"m.text"},"ts":1200690360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(reading). I have to make a bunch of TC's anyway","msgtype":"m.text"},"ts":1200690361000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Hixie: test 5/instructions.inc got out of sync again","msgtype":"m.text"},"ts":1200690362000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: safari should be completely broken with that if my code reading is right","msgtype":"m.text"},"ts":1200690363000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"jwalden: heh, i went back to what i had before and again forgot to update the test :-)","msgtype":"m.text"},"ts":1200690420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SadEagle: http://www.hixie.ch/tests/evil/acid/003/competition/ can help you write a test to check","msgtype":"m.text"},"ts":1200690421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks","msgtype":"m.text"},"ts":1200690422000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"acid3 points for everyone!","msgtype":"m.text"},"ts":1200690480000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"if you implement treewalker correctly, that is","msgtype":"m.text"},"ts":1200690481000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"goes back to debugging treewalker :-)","msgtype":"m.emote"},"ts":1200690482000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"k, gotta go catch a bus","msgtype":"m.text"},"ts":1200690483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1200690484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The \"var i = 0;\" should be removed","msgtype":"m.text"},"ts":1200693180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Otherwise I think it looks reasonable","msgtype":"m.text"},"ts":1200693300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"how is the acid3 competition going?","msgtype":"m.text"},"ts":1200694140000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"gsnedders: Re: html5lib, from memory it's not trivial ","msgtype":"m.text"},"ts":1200695460000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"Although I make no promises about the quality of my memory on this point","msgtype":"m.text"},"ts":1200695520000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"sux.","msgtype":"m.text"},"ts":1200695580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham__: can I buy a memory upgrade for you?","msgtype":"m.text"},"ts":1200695581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But it shouldn't be hard to implement because the tokens a treewalker produces look like the ones the tokenizer produces, so you just use the treewalker as a tokenizer","msgtype":"m.text"},"ts":1200695582000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"I'd like a memory upgrade. And more registers","msgtype":"m.text"},"ts":1200695640000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"jgraham__: what arch are you based on?","msgtype":"m.text"},"ts":1200695700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/arch/arch./","msgtype":"m.text"},"ts":1200695701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Homo Sapiens/Male","msgtype":"m.text"},"ts":1200695702000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"jgraham__: Homo and Sapiens/Male?","msgtype":"m.text"},"ts":1200695820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"All one term. Do parentheses help?: (Homo sapiens)/Male It's a fundamentally mammalian arch. although it still suffers of many of the design flaws of earlier models in its lineage. Many people are of the opinion that a ground-up redesign is the only way forward, but current users can't be persuaded to make the upgrade","msgtype":"m.text"},"ts":1200696120000,"senderName":"jgraham__","senderId":"jgraham__@irc"},
{"content":{"body":"I wish I could use apostrophes in the comments in my canvas tests, without having to write them in pairs to avoid totally breaking Vim's YAML syntax highlighting","msgtype":"m.text"},"ts":1200698880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"spends a while adding descriptions to his test cases, then realises he's still only up to line 498 in the 7211-line source file and gives up","msgtype":"m.emote"},"ts":1200700140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: Why does http://html5.validator.nu/?doc=http%3A%2F%2Fmxr.mozilla.org%2Fmozilla%2Fsource%2Fcontent%2Fcanvas%2Ftest%2Ftest_2d.composite.image.copy.html%3Fforce%3D1&showsource=yes complain?","msgtype":"m.text"},"ts":1200700440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"with <body><canvas><p>","msgtype":"m.text"},"ts":1200700441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"when <body><p> is (I think) allowed, and <canvas> is transparent","msgtype":"m.text"},"ts":1200700442000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ah good, <canvas> allows block-level content now?","msgtype":"m.text"},"ts":1200700500000,"senderName":"annevk","senderId":"annevk@irc"}
]