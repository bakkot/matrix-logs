[
{"content":{"body":"URLSearchParams::forEach","msgtype":"m.text"},"ts":1532694289000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"please, where is this specced?","msgtype":"m.text"},"ts":1532694294000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras, probably https://heycam.github.io/webidl/#es-forEach","msgtype":"m.text"},"ts":1532695330000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: a-ha! I looked at the URLSearchParams specifically and there was no sign of forEach :/","msgtype":"m.text"},"ts":1532695383000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"But there was! Only it was spelled \"iterable<USVString, USVString>;\" :)","msgtype":"m.text"},"ts":1532695499000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1532695520000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"yeah, the \"iterable\" looked more like \"haz @@iterator\"","msgtype":"m.text"},"ts":1532695563000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"And of course it *also* means that!","msgtype":"m.text"},"ts":1532695723000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"returns to cursing RelativeTimeFormat","msgtype":"m.emote"},"ts":1532695738000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1532695742000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Domenic: Yo, which is the canonical definition of ReadableStream, Fetch or Streams? They're both claiming to define the term right now.","msgtype":"m.text"},"ts":1532714226000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Domenic's traveling, but it's Streams","msgtype":"m.text"},"ts":1532714973000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I think there's an issue open somewhere for removing one of the definitions","msgtype":"m.text"},"ts":1532714980000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Doesn't look like it, but I'm opening one right now anyway.","msgtype":"m.text"},"ts":1532714988000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/whatwg/streams/issues/861","msgtype":"m.text"},"ts":1532714989000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"https://github.com/heycam/webidl/issues/445","msgtype":"m.text"},"ts":1532714989000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"https://github.com/whatwg/streams/issues/372","msgtype":"m.text"},"ts":1532714989000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Ah, that didn't come up when I searched.","msgtype":"m.text"},"ts":1532714996000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All right, I went ahead and filed my issue anyway, as I can provide an actual suggestion for a fix that doesn't disrupt the current spec.","msgtype":"m.text"},"ts":1532715145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"One way of looking at the issue is that Bikeshed's overload of \"interface\" to mean both \"JS class\" and \"Web IDL type\" is causing problems, because internally Streams wants to refer to its JS class definition, whereas most other specs want to refer to Fetch's Web IDL type definition.","msgtype":"m.text"},"ts":1532715177000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"...what's the purpose for distinguishing the two?","msgtype":"m.text"},"ts":1532715222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, JS classes are defined using JS semantics, then you define a Web IDL type to wrap them. A bit like Array vs. sequence<>, or Object vs. object.","msgtype":"m.text"},"ts":1532715303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, they're definitely distinct things, but what's the *purpose* in distinguishing them in a spec?","msgtype":"m.text"},"ts":1532715324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Specs that don't use Web IDL, like Streams itself, appreciate the distinction?","msgtype":"m.text"},"ts":1532715366000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Whereas specs that do, are a bit ill-founded if they don't refer to a proper Web IDL type","msgtype":"m.text"},"ts":1532715387000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's not a great system","msgtype":"m.text"},"ts":1532715396000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Streams, I mean, not Bikeshed's)","msgtype":"m.text"},"ts":1532715408000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't understand why Streams isn't defining the IDL type too, tho; the rest of the ecosystem needs IDL to work on.","msgtype":"m.text"},"ts":1532715563000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(This is relevant to me because I'm currently defining the CSS Parser API to be able to take in a ReadableStream as input: http://wicg.github.io/CSS-Parser-API/#typedefdef-cssstringsource)","msgtype":"m.text"},"ts":1532715815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: If you're trying to use those streams from an `in parallel` context, check out the very in-progress \"Stream algorithms\" section in https://github.com/jyasskin/webpackage/blob/loading-spec/loading.bs.","msgtype":"m.text"},"ts":1532722910000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: Let me know if I definitely shouldn't define those helpers. :)","msgtype":"m.text"},"ts":1532722978000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Is there any interest in an \"ascii encode\" next to https://infra.spec.whatwg.org/#isomorphic-encode that would assert all the codepoints are <=0x7f?","msgtype":"m.text"},"ts":1532723678000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]