[
{"content":{"body":"I still kinda think we should rename DOMString","msgtype":"m.text"},"ts":1600142101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: about Encoding, are you aware of implementations that implement the decoders and encoders per-spec?","msgtype":"m.text"},"ts":1600155551000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Chrome, Firefox, and soon Safari","msgtype":"m.text"},"ts":1600155580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1600155592000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1600155593000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or at least Safari TP","msgtype":"m.text"},"ts":1600155595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I remain curious where the Firefox code for that lives","msgtype":"m.text"},"ts":1600155624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I want to blog about it when that happens as it's so cool that we're finally there, 11 years after starting to look into it","msgtype":"m.text"},"ts":1600155654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://github.com/hsivonen/encoding_rs","msgtype":"m.text"},"ts":1600155659000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1600155668000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"was about to paste that","msgtype":"m.emote"},"ts":1600155670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1600155688000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1600155696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/hsivonen/chardetng might also be of interest","msgtype":"m.text"},"ts":1600155699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1600155795000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah I now recall Henri mentioning that elsewhere","msgtype":"m.text"},"ts":1600155856000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there's posts/articles too, yes :-)","msgtype":"m.text"},"ts":1600155881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the need to implement the decoders and encoders makes implementing a conforming HTML parser signficantly more work","msgtype":"m.text"},"ts":1600156048000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think html5ever and parse5 don’t actually implement decoders/encoders per spec","msgtype":"m.text"},"ts":1600156086000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...but instead just rely on the character encoding support in the runtime","msgtype":"m.text"},"ts":1600156121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think node has an encoding standard implementation, see https://github.com/nodejs/node/issues/20365","msgtype":"m.text"},"ts":1600156612000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think that might be around non-compliant encoders/decoders","msgtype":"m.text"},"ts":1600156652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1600156675000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe mathiasbynens encoders/decoders are of interest then https://www.npmjs.com/search?q=keywords:legacy-encoding MikeSmith","msgtype":"m.text"},"ts":1600156818000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1600156857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah cool","msgtype":"m.text"},"ts":1600156866000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: hmmmm, it seems hard to isolate the effect of encoding scanner in wpt, in particular if the speculative parser also looks for encoding declarations (which gecko does at least)","msgtype":"m.text"},"ts":1600165537000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Well, we only need to document what is observable, so...","msgtype":"m.text"},"ts":1600165635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"getting 💥 Error: 403 Forbidden 💥","msgtype":"m.text"},"ts":1600165675000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...for https://github.com/whatwg/html/pull/5916","msgtype":"m.text"},"ts":1600165686000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno if that’s the same problem we had recently with another PR, or whether it’s a different problem","msgtype":"m.text"},"ts":1600165719000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That seems different","msgtype":"m.text"},"ts":1600165753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did w3.org start blocking PR Preview?","msgtype":"m.text"},"ts":1600165786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: true. it's certainly possible to test things like <script><meta charset=A></script><meta charset=B>","msgtype":"m.text"},"ts":1600165792000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: dunno maybe accidentally","msgtype":"m.text"},"ts":1600166024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<annevk> \"I still kinda think we should rename DOMString,\" I already heard this opinion","msgtype":"m.text"},"ts":1600170050000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"annevk, do you get pinged when I enwrap your name in <>?","msgtype":"m.text"},"ts":1600170068000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1600170084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does `fetch` inspect the Content-Type header?","msgtype":"m.text"},"ts":1600173842000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"OK. The question is stupid, because it obviously provides Response.headers.","msgtype":"m.text"},"ts":1600173958000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"OK, once again I'm a bit confused by the MDN https://developer.mozilla.org/en-US/docs/Web/API/Response","msgtype":"m.text"},"ts":1600174025000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This is mentioning Response *interface*, and lists the properties below, for example Response.headers. But this should be written as Response.prototype.headers?","msgtype":"m.text"},"ts":1600174087000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: yes","msgtype":"m.text"},"ts":1600174100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that’s a common problem with some MDN content, unfortunately","msgtype":"m.text"},"ts":1600174132000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, so this *interface* is the WebIDL term, right?","msgtype":"m.text"},"ts":1600174154000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1600174161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe probably it should instead talk about it object","msgtype":"m.text"},"ts":1600174186000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but again that’s kind of a common shortcoming in some MDN articles","msgtype":"m.text"},"ts":1600174203000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the articles in the https://developer.mozilla.org/en-US/docs/Web/JavaScript tree are written in a way that’s more correct and familiar","msgtype":"m.text"},"ts":1600174302000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, Cool, I might even try to change this Response page these days, to see what happens.","msgtype":"m.text"},"ts":1600175591000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: If you can make time to update it, that would be great","msgtype":"m.text"},"ts":1600175646000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Becuase I remember reading that several times over the last years, and I remember it confused me so much, although it is kind of intuitive.","msgtype":"m.text"},"ts":1600175710000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600175722000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So I was like: \"Ok, lets not bother with the details this time.\"","msgtype":"m.text"},"ts":1600175746000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"and in general with MDN, when you run into confusing articles, you can also file issues at https://github.com/mdn/sprints/issues/new/choose with details about changes that should be made","msgtype":"m.text"},"ts":1600175755000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, cool","msgtype":"m.text"},"ts":1600175779000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"but it’s better if you can make the edits directly","msgtype":"m.text"},"ts":1600175803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will be happy post-review any changes you make","msgtype":"m.text"},"ts":1600175820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I get automated notifications for any changes to https://developer.mozilla.org/en-US/docs/Web/API articles, so I’ll see it regardless","msgtype":"m.text"},"ts":1600175850000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, regarding this issues link, which category do WHATWG specs fit.","msgtype":"m.text"},"ts":1600175853000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Ofc HTML goes into HTML, but the other specs?","msgtype":"m.text"},"ts":1600175870000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"hmm good point","msgtype":"m.text"},"ts":1600175891000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see now that https://github.com/mdn/sprints/issues/new/choose doesn’t have category for API docs","msgtype":"m.text"},"ts":1600175908000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess “Content issue template” is the general one","msgtype":"m.text"},"ts":1600175956000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I will suggest that a specific API one be added","msgtype":"m.text"},"ts":1600175973000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"croraf: actually though, the preferred way is to just follow a link from the MDN article","msgtype":"m.text"},"ts":1600176017000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1600176024000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"if you go to https://developer.mozilla.org/en-US/docs/Web/API/Response, there a Feedback drop-down at the top","msgtype":"m.text"},"ts":1600176040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1600176071000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yeah, from that you can select Report a content problem","msgtype":"m.text"},"ts":1600176089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"One unlinked question. The URL spec from WHATWG does only relate to the URL object available by the browser or also with the web URL concept itself?","msgtype":"m.text"},"ts":1600176127000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"both","msgtype":"m.text"},"ts":1600176139000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"both the API/object and general definition of what a URL is","msgtype":"m.text"},"ts":1600176166000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"This is kind of unfortunate in my opinion. I hoped that WHATWG would only deal with the browser objects (APIs)","msgtype":"m.text"},"ts":1600176195000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Would be more clean, so to say.","msgtype":"m.text"},"ts":1600176207000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"well the problem is that in practice that clean separation is most often not possible","msgtype":"m.text"},"ts":1600176236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It is kind of unclear to me what WEB consists of. Could we say that WHATWG specifies things only strictly within the WEB?","msgtype":"m.text"},"ts":1600176279000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(WEB consists of = what WEB actually is)","msgtype":"m.text"},"ts":1600176295000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"and another specific problem in the case of URL is that the relevant RFCs are out of data and not maintained and in fact peole in IETF land think there is nothing that needs to be updated","msgtype":"m.text"},"ts":1600176303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in fact many assert that the term URL should not be used but instead URI should be","msgtype":"m.text"},"ts":1600176330000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and so on and on and on","msgtype":"m.text"},"ts":1600176339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, does this mean that WHATWG specs sometimes conflict with the IETF one?","msgtype":"m.text"},"ts":1600176349000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Or they only extend it?","msgtype":"m.text"},"ts":1600176355000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1600176356000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"conflict","msgtype":"m.text"},"ts":1600176363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks.","msgtype":"m.text"},"ts":1600176366000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yeah, again, that’s because the responsible parties at the IETF usually don’t ever update their specs after they become RFCs","msgtype":"m.text"},"ts":1600176415000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, I just read https://softwareengineering.stackexchange.com/questions/109517/how-is-ietf-different-from-w3c","msgtype":"m.text"},"ts":1600176434000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"...even in cases where the specs are known to conflict with implememtations","msgtype":"m.text"},"ts":1600176436000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean should IETF at all dead with such stuff?","msgtype":"m.text"},"ts":1600176448000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Or the W3C?","msgtype":"m.text"},"ts":1600176451000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Or is W3C a subcomitee of IETF?","msgtype":"m.text"},"ts":1600176460000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"separate","msgtype":"m.text"},"ts":1600176472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the answers in that that stack question are not good","msgtype":"m.text"},"ts":1600176506000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And the top voted answer?","msgtype":"m.text"},"ts":1600176537000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"- IETF works on Internet protocols, particularly at OSI layer 3 and 4.","msgtype":"m.text"},"ts":1600176549000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"- WWW, which is simply an application-layer protocol. The W3C works on WWW specifications","msgtype":"m.text"},"ts":1600176560000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"that W3C generally does not work on protocols at all","msgtype":"m.text"},"ts":1600176583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with some exceptions","msgtype":"m.text"},"ts":1600176603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Also the first answer conflicts with the second answer:","msgtype":"m.text"},"ts":1600176638000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"- IETF works on Internet protocols, particularly at OSI layer 3 and 4.","msgtype":"m.text"},"ts":1600176643000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"- IETF focuses on packet/line/terminal/telnet based protocols","msgtype":"m.text"},"ts":1600176654000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"telnet is Application layer","msgtype":"m.text"},"ts":1600176664000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"about “Web”, you’ll notice that we use the term “the Web platform” — which basically means the set of standard technologies that are implemented nativelly in web browsers","msgtype":"m.text"},"ts":1600176687000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So Web are basically the application implemented in the browsers?","msgtype":"m.text"},"ts":1600176736000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"web platform","msgtype":"m.text"},"ts":1600176747000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1600176755000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"that Web is an information system","msgtype":"m.text"},"ts":1600176761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does W3C also deal with defining the URL for example?","msgtype":"m.text"},"ts":1600176951000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"W3C specs reference the WHATWG URL standard","msgtype":"m.text"},"ts":1600177262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm, I indeed see that in MDN the entire Web/API section of articles uses WebIDL terminology. So it is not possible to change, because that would be 1 inconsistent out of 50.","msgtype":"m.text"},"ts":1600177408000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"MikeSmith: annevk: I'm looking into why CI isn't building... maybe it's not picking up the latest Wattsi somehow.","msgtype":"m.text"},"ts":1600179988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, it is picking up the latest Wattsi, which is preventing most PRs, but I'm unsure why https://github.com/whatwg/html/pull/5916 is failing CI...","msgtype":"m.text"},"ts":1600180015000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: did I break it with my html-build change?","msgtype":"m.text"},"ts":1600180017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't sure about the timeline, but did land something today","msgtype":"m.emote"},"ts":1600180033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, it's because we merged MikeSmith's change to make data-export + data-dfn-type an error (because they're redundant), which makes the current spec an error.","msgtype":"m.text"},"ts":1600180043000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So master doesn't build anymore","msgtype":"m.text"},"ts":1600180049000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But https://github.com/whatwg/html/pull/5916 should fix that","msgtype":"m.text"},"ts":1600180058000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But it's not passing validation","msgtype":"m.text"},"ts":1600180063000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll investigate for a bit, and rollback Wattsi if it's not an easy fix.","msgtype":"m.text"},"ts":1600180076000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: didn't you need to update the Wattsi server manually?","msgtype":"m.text"},"ts":1600180106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CI shouldn't be using the Wattsi server","msgtype":"m.text"},"ts":1600180117000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But yes I do need to do that soon enough","msgtype":"m.text"},"ts":1600180128000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So looking at MikeSmith's PR the problem is that the output doesn't validate","msgtype":"m.text"},"ts":1600180188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right. Which indicates incomplete replacements maybe?","msgtype":"m.text"},"ts":1600180206000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems we don't convert export/attribute back to data-...","msgtype":"m.text"},"ts":1600180216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/wattsi/commit/b6a7eea5edacb73af77a457055bab81d6e93387c indicates we should, but maybe we didn't fully test...","msgtype":"m.text"},"ts":1600180268000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dang","msgtype":"m.text"},"ts":1600180341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looking now","msgtype":"m.text"},"ts":1600180366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"are we sure the build is picking up the latest Wattsi?","msgtype":"m.text"},"ts":1600180433000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think so, because it's giving the export + dfn-type error","msgtype":"m.text"},"ts":1600180464000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm testing locally now","msgtype":"m.text"},"ts":1600180467000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah with latest Wattsi locally the attributes still appear in the source (noexport=\"\", abstract-op=\"\", ...)","msgtype":"m.text"},"ts":1600180500000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wish this was using GitHub CI already, it's much harder for me to retry Travis stuff","msgtype":"m.text"},"ts":1600180506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It looks like the replacement might indeed be done in the wrong phase","msgtype":"m.text"},"ts":1600180508000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We should probably roll back https://github.com/whatwg/wattsi/commit/7e4d1e8f42b6d9f6a4a355c0213aa91b4f47605d specifically for now","msgtype":"m.text"},"ts":1600180547000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"To un-break the build on master and let other PRs land","msgtype":"m.text"},"ts":1600180553000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Then figure out why the conversion code (noexport -> data-noexport, etc.) isn't working.","msgtype":"m.text"},"ts":1600180571000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I can reproduce it locally","msgtype":"m.text"},"ts":1600180584000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it’s not just the noexport -> data-noexport part","msgtype":"m.text"},"ts":1600180603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see alos “Attribute “element” not allowed on element “h4” at this point.”","msgtype":"m.text"},"ts":1600180623000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah I don't think any of the replacements are working :(","msgtype":"m.text"},"ts":1600180654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I would think most of them are working","msgtype":"m.text"},"ts":1600180684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because I am only getting 35 errors","msgtype":"m.text"},"ts":1600180719000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if it were not working at all, I would think it’d be more like hundreds","msgtype":"m.text"},"ts":1600180743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so my first guess is that that Wattsi code is not catching a subset of cases","msgtype":"m.text"},"ts":1600180775000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"My output/index.html does not contain any data-dfn-type or data-export","msgtype":"m.text"},"ts":1600180797000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":" but also I see some weird instances of “Attribute “dfn” not allowed on element “h5” at this point.”","msgtype":"m.text"},"ts":1600180799000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: for me:","msgtype":"m.text"},"ts":1600180961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"$ rg data-dfn-type output/ | wc -l 720","msgtype":"m.text"},"ts":1600180963000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh shoot my thing used the build server","msgtype":"m.text"},"ts":1600181005000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Forgot to set $PATH","msgtype":"m.text"},"ts":1600181016000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1600181031000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"CI errors at https://travis-ci.org/github/whatwg/html/builds/727323337#L618 look like exactly the same set of errors I am getting locally","msgtype":"m.text"},"ts":1600181131000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe <hN>s and <dfn>s are treated specially by Wattsi","msgtype":"m.text"},"ts":1600181182000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah must be that","msgtype":"m.text"},"ts":1600181208000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well now that I say that: Actually the Wattsi code doesn’t do anythign for these in hNs","msgtype":"m.text"},"ts":1600181258000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that is expected","msgtype":"m.text"},"ts":1600181265000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the current Wattsi code only makes the translations for dfn elements","msgtype":"m.text"},"ts":1600181298000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess the first fix that’s needed is to just duplicate the translation handling for dfn over to the hN-handling code","msgtype":"m.text"},"ts":1600181382000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh dang haha","msgtype":"m.text"},"ts":1600181393000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, silly oversight :(","msgtype":"m.text"},"ts":1600181407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but then I was not aware that we had this stuff on hNs","msgtype":"m.text"},"ts":1600181420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I should not have just assumed","msgtype":"m.text"},"ts":1600181433000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, I should have also run the HTML checker on the output locally","msgtype":"m.text"},"ts":1600181452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"incidentally, maybe we should have the build script be running the HTML checker","msgtype":"m.text"},"ts":1600181504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"locally I mean","msgtype":"m.text"},"ts":1600181518000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with an opt-out","msgtype":"m.text"},"ts":1600181536000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not run it for the -f case for sure","msgtype":"m.text"},"ts":1600181552000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, will make the hN fix in Wattsi right now","msgtype":"m.text"},"ts":1600181583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and then re-test","msgtype":"m.text"},"ts":1600181591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK well did that, and that eliminates all the HTML checker errors","msgtype":"m.text"},"ts":1600181998000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Can interface be a mixin?","msgtype":"m.text"},"ts":1600182005000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"including “Attribute “dfn” not allowed on element “h5” at this point.”","msgtype":"m.text"},"ts":1600182006000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: annevk: so I guess “dfn” is a valid dfn type","msgtype":"m.text"},"ts":1600182035000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks the code","msgtype":"m.emote"},"ts":1600182042000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"croraf: yes, an interface defined in a spec can be mixin","msgtype":"m.text"},"ts":1600182074000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does this mean an interface can have some methods and/or properties implemented and still be an interface?","msgtype":"m.text"},"ts":1600182127000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Domenic: annevk: hmmm, what happened here? I don't get that locally, and the PR is based on latest master https://travis-ci.org/github/whatwg/html/builds/727385861","msgtype":"m.text"},"ts":1600182152000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, no, “dfn” is not a valid dfn type, so I don’t know why my change fixed that error","msgtype":"m.text"},"ts":1600182153000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: see last hour of chat :)","msgtype":"m.text"},"ts":1600182175000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh lol","msgtype":"m.text"},"ts":1600182189000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: basically, new Wattsi breaks master, and we're working on fixing it","msgtype":"m.text"},"ts":1600182200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"croraf: don’t understand your question. For an interface mixin, the members are exposed from other interfaces that use that mixin","msgtype":"m.text"},"ts":1600182214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":+1:","msgtype":"m.text"},"ts":1600182239000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: so, upload your fix and we're good to go, no reverts needed?","msgtype":"m.text"},"ts":1600182240000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no reverts needed","msgtype":"m.text"},"ts":1600182248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will raise a PR with the patch shortly","msgtype":"m.text"},"ts":1600182261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but we now have other errors that require updating the spec source","msgtype":"m.text"},"ts":1600182284000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the redundant export thing","msgtype":"m.text"},"ts":1600182309000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Error: <dfn> found with dfn type name and redundant export attribute; dfn is <h4> element containing \"StructuredSerialize ( value )\"; previous heading contents are \"StructuredSerialize ( value )\"","msgtype":"m.text"},"ts":1600182324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Error: <dfn> found with dfn type name and redundant export attribute; dfn is <h4> element containing \"StructuredSerializeForStorage ( value )\"; previous heading contents are \"StructuredSerializeForStorage ( value )\"","msgtype":"m.text"},"ts":1600182328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Error: <dfn> found with dfn type name and redundant export attribute; dfn is <h4> element containing \"StructuredDeserialize ( serialized, targetRealm [ ,   memory ] )\"; previous heading contents are \"StructuredDeserialize ( serialized, targetRealm [ ,   memory ] )\"","msgtype":"m.text"},"ts":1600182332000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Error: <dfn> found with dfn type name and redundant export attribute; dfn is <h4> element containing \"StructuredSerializeWithTransfer ( value, transferList   )\"; previous heading contents are \"StructuredSerializeWithTransfer ( value, transferList   )\"","msgtype":"m.text"},"ts":1600182336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Error: <dfn> found with dfn type name and redundant export attribute; dfn is <h4> element containing \"StructuredDeserializeWithTransfer ( serializeWithTransferResult,   targetRealm )\"; previous heading contents are \"StructuredDeserializeWithTransfer ( serializeWithTransferResult,   targetRealm )\"","msgtype":"m.text"},"ts":1600182340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Error count: 5","msgtype":"m.text"},"ts":1600182346000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I will fix those by pushing a commit to the HTML spec PR","msgtype":"m.text"},"ts":1600182366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah perfect","msgtype":"m.text"},"ts":1600182521000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith, I'm reading this \"A mixin is a class or interface in which some or all of its methods and/or properties are unimplemented, requiring that another class or interface provide the missing implementations.\" from https://developer.mozilla.org/en-US/docs/Glossary/mixin","msgtype":"m.text"},"ts":1600182532000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"When it says \"is a class or interface\", are class and interface WebIDL terms?","msgtype":"m.text"},"ts":1600182563000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Because I dont see class defined in WebIDL","msgtype":"m.text"},"ts":1600182620000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"well it’s a class really","msgtype":"m.text"},"ts":1600182687000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"arguably we rightly shouldn’t be using the term “interface” at all","msgtype":"m.text"},"ts":1600182721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the specs are","msgtype":"m.text"},"ts":1600182733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that MDN glossary entry should not be mentioning “class” I guess","msgtype":"m.text"},"ts":1600182766000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: TranslateShortSyntax() for the function name?","msgtype":"m.text"},"ts":1600182816000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: SGTM, or maybe \"TranslateBikeshedSyntax\"","msgtype":"m.text"},"ts":1600182833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1600182838000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"croraf: they're neither classes or interfaces, https://heycam.github.io/webidl/#idl-interface-mixins is a separate concept. interfaces can include an interface mixin","msgtype":"m.text"},"ts":1600182906000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So interface mixin is basically an interface that can be extended by another interface, and that's it?","msgtype":"m.text"},"ts":1600182969000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I mean you said it is not an interface, so i guess it technically is not.","msgtype":"m.text"},"ts":1600183003000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"right, it's a specification-level shorthand so you don't need to write the same things twice","msgtype":"m.text"},"ts":1600183026000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"interface A { undefined queueMicrotask(VoidFunction callback); } interface B { undefined queueMicrotask(VoidFunction callback); }","msgtype":"m.text"},"ts":1600183073000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is equivalent to","msgtype":"m.text"},"ts":1600183079000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"But is it basically an interface that cannot be used as an interface itself but can be extended by other interfaces?","msgtype":"m.text"},"ts":1600183112000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"interface A {}; interface B {}; interface mixin C { undefined queueMicrotask(VoidFunction callback); }; A includes C; B includes C;","msgtype":"m.text"},"ts":1600183117000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm not sure why it exists as a separate concept, why is it not just the interface itself zcorpan ?","msgtype":"m.text"},"ts":1600183175000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: they aren't extended by other interfaces, their members are folded into other interfaces","msgtype":"m.text"},"ts":1600183209000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Maybe the confusion is that \"interface mixin\" doesn't mean \"interface that is a mixin\". It means \"mixin for use by interfaces\"","msgtype":"m.text"},"ts":1600183233000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, I understand. But I'm making a parallel with Java OO concepts.","msgtype":"m.text"},"ts":1600183261000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I don't think that will serve you well.","msgtype":"m.text"},"ts":1600183274000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You have interfaces and interfaces can \"extend\" other interfaces.","msgtype":"m.text"},"ts":1600183277000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Web IDL is not like Java.","msgtype":"m.text"},"ts":1600183279000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Web IDL is a framework for generating code.","msgtype":"m.text"},"ts":1600183284000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And saving typing.","msgtype":"m.text"},"ts":1600183291000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The concepts in it are not OO concepts.","msgtype":"m.text"},"ts":1600183302000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The concepts in it are things that are useful to save typing by spec authors.","msgtype":"m.text"},"ts":1600183311000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well interface is basically an OO concept.","msgtype":"m.text"},"ts":1600183318000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"interface that applies to objects.","msgtype":"m.text"},"ts":1600183334000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The Web IDL interface is not an OO concept.","msgtype":"m.text"},"ts":1600183335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if you're coming from Java, WebIDL \"interface\" is *kinda like* a class, and a WebIDL \"mixin\" is *kinda like* an interface","msgtype":"m.text"},"ts":1600183336000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"It is a way of generating spec code.","msgtype":"m.text"},"ts":1600183341000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The spec code that it generates mostly corresponds to a JavaScript class, but that's incidental, and as you can see, the names were not chosen to match up.","msgtype":"m.text"},"ts":1600183368000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"andreubotella, I think that both \"interface mixin\" and \"interface\" are like OO Java's interface.","msgtype":"m.text"},"ts":1600183388000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Trying to draw analogies will mostly hurt understanding.","msgtype":"m.text"},"ts":1600183390000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"interface mixing defines members that are included in interfaces","msgtype":"m.text"},"ts":1600183407000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"by using A includes Amixin","msgtype":"m.text"},"ts":1600183426000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"That seeems analoguous as having interface A and interface Amixin in java and doing  interface A extends Amixin {}","msgtype":"m.text"},"ts":1600183455000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/wattsi/pull/136 (and I’ll do the HTML commit in about 90 minutes from now)","msgtype":"m.text"},"ts":1600183476000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"None have an implementation, so none are considered as class.","msgtype":"m.text"},"ts":1600183489000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"MikeSmith: excellent, thank you. I can try to finish things off; if local testing works then I'll push and merge.","msgtype":"m.text"},"ts":1600183565000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"To ilustrate I dont know why you couldnt do: interface A {}; interface C { undefined queueMicrotask(VoidFunction callback); }; A includes C;","msgtype":"m.text"},"ts":1600183793000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"to see how a WebIDL interface is more like a class in OOP languages, consider that you can do `new URL()` or `var instanceof URL`, but you can't do that with a mixin","msgtype":"m.text"},"ts":1600184276000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"the fact that interfaces aren't implemented in WebIDL doesn't matter because WebIDL meant to describe APIs, not their behavior","msgtype":"m.text"},"ts":1600184317000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"*is meant","msgtype":"m.text"},"ts":1600184321000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MikeSmith: still some issues sadly :( https://github.com/whatwg/html/pull/5916#issuecomment-692797393","msgtype":"m.text"},"ts":1600184352000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll revert the conflict-checking commit for now","msgtype":"m.text"},"ts":1600184359000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"croraf: all webidl interface names are exposed as properties on the global. that's not desired for mixins","msgtype":"m.text"},"ts":1600184382000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"isn't there any intro documents for beginners to the web specs?","msgtype":"m.text"},"ts":1600184411000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella, you can do new URL() because someone implemented the URL interface.","msgtype":"m.text"},"ts":1600184448000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"andreubotella: there's https://wpc.guide/ but it doesn't go into depth of details like these :)","msgtype":"m.text"},"ts":1600184470000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"croraf: an IDL interface really is a description of a class","msgtype":"m.text"},"ts":1600184473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Web IDL interface that is","msgtype":"m.text"},"ts":1600184481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And (by convention it seems) the interface mixins itself cannot be implemented but must be included in an interface.","msgtype":"m.text"},"ts":1600184482000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"andreubotella: I don't think so, sometimes specifications have introductions and maybe Web IDL should have a better one","msgtype":"m.text"},"ts":1600184526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's amazing to me how much confusion we're seeing caused just because Web IDL used the incorrect word \"interface\"","msgtype":"m.text"},"ts":1600184543000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wish it'd used \"flargle\" instead, then nobody would have these questions.","msgtype":"m.text"},"ts":1600184551000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"An IDL interface doesnt specifiy the implementation, but an API","msgtype":"m.text"},"ts":1600184553000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"They'd say \"what's a flargle\" and we could explain from scratch","msgtype":"m.text"},"ts":1600184561000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Instead of them bringing pre-concieved incorrect notions from Java or similar.","msgtype":"m.text"},"ts":1600184569000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"croraf: no it does specify an implementation","msgtype":"m.text"},"ts":1600184570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"croraf: even in Java, you can't construct an interface with `new URL()`, URL would have to be a class","msgtype":"m.text"},"ts":1600184595000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Domenic: I mean, \"class\" would work and we can still rename","msgtype":"m.text"},"ts":1600184601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and one day I hope we will","msgtype":"m.text"},"ts":1600184616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: quick LGTM on https://github.com/whatwg/wattsi/pull/137 would be good","msgtype":"m.text"},"ts":1600184628000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I rubberstamped it","msgtype":"m.text"},"ts":1600184666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, you see interface Headers here https://fetch.spec.whatwg.org/#headers-class this is not an implementation it is just a specification","msgtype":"m.text"},"ts":1600184799000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: ok","msgtype":"m.text"},"ts":1600184840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It has the class of the same name which implements this interface.","msgtype":"m.text"},"ts":1600184849000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And that class is available in the browser.","msgtype":"m.text"},"ts":1600184860000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And what defines that?","msgtype":"m.text"},"ts":1600184873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm starting to agree with annevk that it'd be worth renaming the concept","msgtype":"m.text"},"ts":1600184888000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"You mean the class?","msgtype":"m.text"},"ts":1600184890000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"annevk,","msgtype":"m.text"},"ts":1600184895000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"what defines the class?","msgtype":"m.text"},"ts":1600184903000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The class' API is defined by the Class interface.","msgtype":"m.text"},"ts":1600184950000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"the point we're trying to explain is that, even by your model, there'd be one single class that implements the Headers interface, and the spec defines it with reference to the Headers interface, not as a separate class","msgtype":"m.text"},"ts":1600185034000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"but it'd be more productive to just see \"WebIDL interface\" and think of \"class\"","msgtype":"m.text"},"ts":1600185091000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"and also, part of your implementation is generated from the IDL construct, such as how to do argument coercion, etc.","msgtype":"m.text"},"ts":1600185099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, master is back to building","msgtype":"m.text"},"ts":1600185101000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1600185105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"andreubotella, I don't see your point. Not sure what you mean \"there had to be one single class\".","msgtype":"m.text"},"ts":1600185318000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"annevk, Haven't went into details but this is more like specifying how the implementation should behave.","msgtype":"m.text"},"ts":1600185353000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: the way this works, you cannot have multiple classes implementing the same interface","msgtype":"m.text"},"ts":1600185367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"croraf: sure, but it's a lot more than just a shape","msgtype":"m.text"},"ts":1600185410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well it is shape and behavior.","msgtype":"m.text"},"ts":1600185421000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"You cannot use the interface before someone implements it as a Class.","msgtype":"m.text"},"ts":1600185463000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"You can have several implementations of the interface.","msgtype":"m.text"},"ts":1600185482000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Class1 implements Class,    Class2 implements Class,    etc.","msgtype":"m.text"},"ts":1600185501000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"You are making a bunch of assertions here, but I don't think these are backed up by any web standard","msgtype":"m.text"},"ts":1600185507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which makes it hard to have a conversation; when we say \"interface\", we mean what Web IDL defines that to be","msgtype":"m.text"},"ts":1600185568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+1, it is getting a bit frustrating.","msgtype":"m.text"},"ts":1600185589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems like you see the word \"interface\" and assume it means what you want it to mean, instead of what the spec defines it to mean.","msgtype":"m.text"},"ts":1600185609000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think I'm going to file an issue about adding an intro for newcomers","msgtype":"m.text"},"ts":1600185753000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"they we could point everyone there","msgtype":"m.text"},"ts":1600185771000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"*then","msgtype":"m.text"},"ts":1600185774000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Domenic, you said the concepts in WebIDL are not OO concepts. The first sentence in https://heycam.github.io/webidl/#idl-interfaces says \"IDL fragments are used to describe object oriented systems.\"","msgtype":"m.text"},"ts":1600185819000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Then we should fix that sentence.","msgtype":"m.text"},"ts":1600185833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/heycam/webidl/issues/918","msgtype":"m.text"},"ts":1600186093000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"btw, can anyone review https://github.com/whatwg/html/pull/5874?","msgtype":"m.text"},"ts":1600186204000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I'd much appreciate the comments of parser folks","msgtype":"m.text"},"ts":1600186236000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I think I understnad now what you trying to say. In Java the interface only specifies members and methods, it doesnt specify behavior.","msgtype":"m.text"},"ts":1600186257000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Domenic: thanks for the fixes. The remaining stuff will take me longer than what I have time left for I need to step away again. But can get back to it in the morning my time (~5 hours from now)","msgtype":"m.text"},"ts":1600190007000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think I've got it all working; running the final build now.","msgtype":"m.text"},"ts":1600190020000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Importantly, \"object oriented systems\" is not a synonym for \"Java-like\"; OO is a far wider and weirder set of concepts than most people who've been taught about OO typically understand.","msgtype":"m.text"},"ts":1600190284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CLOS is OO, despite not having anything like a class or methods, just free functions which can have multiple implementations keyed by the types of their arguments.","msgtype":"m.text"},"ts":1600190328000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I don't know what CLOS is, but from wikipedia: \"The basic building blocks of CLOS are classes and their methods, instances of those classes, and generic functions\"","msgtype":"m.text"},"ts":1600193676000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Although I agree that OO is not only Java-like OO. JS is OO, but radically different from Java's OO.","msgtype":"m.text"},"ts":1600193733000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"CLOS doesn't have methods. If you specialize more than one argument, they call it a \"multi-method\", but it's literally the exact opposite of what a \"method\" is in JS/Java/etc, since it's explicitly *not* owned by a single class.","msgtype":"m.text"},"ts":1600193783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The important sentence in the WebIDL spec is: \"Objects that implement the GraphicalWindow interface will expose these attributes and operations in a manner appropriate to the particular language being used.\"","msgtype":"m.text"},"ts":1600193945000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"That is more generic: \"Objects that implement an interface will expose its attributes and operations in a manner appropriate to the particular language being used.\"","msgtype":"m.text"},"ts":1600193980000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And they continue with: \"In ECMAScript, the attributes on the IDL interfaces will be exposed as accessor properties and the operations as data properties whose value is a built-in function object on a prototype object for all GraphicalWindow objects; each ECMAScript object that implements GraphicalWindow will have that prototype object in its prototype chain.\"","msgtype":"m.text"},"ts":1600194020000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"notice that it talks about *objects* implementing an interface, not classes","msgtype":"m.text"},"ts":1600194021000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"WebIDL's \"objects that implement an interface\" is equivalent to Java's \"objects that are instances of a class\"","msgtype":"m.text"},"ts":1600194024000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella, yes","msgtype":"m.text"},"ts":1600194028000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1600194034000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Although the analogy is only partially valid. As class in JS also holds the implementation. While the WebIDL interface is just a \"signature\"","msgtype":"m.text"},"ts":1600194120000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"In pure Ecmascript you cannot just define the signature I guess (maybe in typescript), you have to define an implementation with it.","msgtype":"m.text"},"ts":1600194175000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"No, it is not just a signature. We have told you this many times.","msgtype":"m.text"},"ts":1600194181000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"WebIDL isn't in the business of defining an interface's behavior, that's for the prose in the spec","msgtype":"m.text"},"ts":1600194207000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"It defines the behavior for argument handling and various other pieces.","msgtype":"m.text"},"ts":1600194229000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although the types come with transforms to/from JS","msgtype":"m.text"},"ts":1600194235000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"By signature I mean the list of attributes and operations. And as per the following the Interface defines just this: \"Objects that implement the GraphicalWindow interface will expose these attributes and operations in a manner appropriate to the particular language being used.\"","msgtype":"m.text"},"ts":1600194252000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Are there any artifacts supporting the XML syntax for HTML? I'd like to find anything that would help validate instances: Schemas, DTDs, RNG, Schematron, etc? I'd also like to find XML examples.","msgtype":"m.text"},"ts":1600194409000,"senderName":"Webb","senderId":"Webb@irc"},
{"content":{"body":"Webb: https://validator.nu/ can validate.","msgtype":"m.text"},"ts":1600194541000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there anything else? Anything normative or machine-readable?","msgtype":"m.text"},"ts":1600195465000,"senderName":"Webb","senderId":"Webb@irc"},
{"content":{"body":"andreubotella, we also have the term class like: https://fetch.spec.whatwg.org/#headers-class . Is the Headers interface just the IDL card on the top (the interface Headers {...}) or is part of the interface something from the prose?","msgtype":"m.text"},"ts":1600195834000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The term class hear is meant the JS class I suppose.","msgtype":"m.text"},"ts":1600195864000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it's part of the prose","msgtype":"m.text"},"ts":1600195886000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella, is maybe the entire section 5.1 the description of the Headers interface?","msgtype":"m.text"},"ts":1600195979000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(this section is the one linked above)","msgtype":"m.text"},"ts":1600196009000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600196035000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"thanks. I'm clear now.","msgtype":"m.text"},"ts":1600196056000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"What is the appropriate venue to talk about webrtc? from poking around I haven't found anything to do with it in the whatwg specs. The standards are IETF and w3c, but they look \"done;\" no updates on the mailing lists in over a year.","msgtype":"m.text"},"ts":1600203164000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"isd: maybe their GitHub repositories?","msgtype":"m.text"},"ts":1600203237000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1600203738000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"Hm. It doesn't look like the webrtc github org is very active/in good condition either. They have some pinned repos with test data & samples, but nothing that looks like a viable forum for discussion, and issues like this one don't give me a lot of confidence: https://github.com/webrtc/samples/issues/1350","msgtype":"m.text"},"ts":1600205095000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"Is there a reason whatwg doesn't have anything in the specs about webrtc APIs? It seems odd to have an API that's essential to widely used applications just not be referenced at all.","msgtype":"m.text"},"ts":1600205758000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"Well, specs are different from applications, and need different things.","msgtype":"m.text"},"ts":1600205864000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not entirely sure I follow.","msgtype":"m.text"},"ts":1600205928000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"Why would specs reference WebRTC APIs? Just because applications do, doesn't mean specs should.","msgtype":"m.text"},"ts":1600205958000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Perhaps I misunderstand the scope of whatwg: it seems like if applications in the wild are heavily using an API that is not in the standard, then that is an incompleteness in the standard? It seems like a goal is to specify the web platform, and this seems like it ought to be a part of that?","msgtype":"m.text"},"ts":1600206209000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"The goal is not to specify the whole web platform. Each specification has a specific scope that it covers. There are many specifications, from many different organizations (to name a few: WHATWG, W3C, Ecma, IETF, Khronos, CABF, ...) which come together to form the web platform.","msgtype":"m.text"},"ts":1600206364000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1600206559000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"Domenic: I see you made all the fixes needed to the HTML patch","msgtype":"m.text"},"ts":1600209294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and merged","msgtype":"m.text"},"ts":1600209298000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks much for taking care of that (and the Wattsi fixes that were needed too)","msgtype":"m.text"},"ts":1600209320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"isd: https://github.com/w3c?q=webrtc","msgtype":"m.text"},"ts":1600209583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> 24 results for repositories matching webrtc","msgtype":"m.text"},"ts":1600209601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"isd: I think the WebRTC working group is quite actively still working on spec updates","msgtype":"m.text"},"ts":1600209640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Updated 16 hours ago","msgtype":"m.text"},"ts":1600209673000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1600209676000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm checking the consume body https://fetch.spec.whatwg.org/#concept-body-consume-body when used with text(). Step 4 has two things suspicious to me.","msgtype":"m.text"},"ts":1600209694000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"A) it says \"with the first argument given\", what does that mean?","msgtype":"m.text"},"ts":1600209721000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"B) it says \"and object's MIME type\" with the link on MIME type saying that objects implementing Body gain MIME type. It is not clear to me how they get MIME type?","msgtype":"m.text"},"ts":1600209798000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(MDN for example doesnt mention the MIME type property, and I couldn't find it in the response object gotten after fetch)","msgtype":"m.text"},"ts":1600210052000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"https://developer.mozilla.org/en-US/docs/Web/API/Body","msgtype":"m.text"},"ts":1600210085000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"\"MIME type\" there is a (browser-internal) variable","msgtype":"m.text"},"ts":1600210101000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"or field, rather","msgtype":"m.text"},"ts":1600210121000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"How would I know that? And the associated body is also an internal body field and not the one exposed by the IDL?","msgtype":"m.text"},"ts":1600210866000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"andreubotella,","msgtype":"m.text"},"ts":1600210881000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"interfaces and mixins can have associated fields, and they're usually marked as such, \"a Response object has an associated response\", \"objects implementing the Body mixin have an associated body\"","msgtype":"m.text"},"ts":1600211042000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"they're understood not to be exposed through the WebIDL API by default, but they can be","msgtype":"m.text"},"ts":1600211067000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella, thanks once again. And the last thing if you can address my question A) above","msgtype":"m.text"},"ts":1600211775000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"that also wasn't obvious to me at first sight","msgtype":"m.text"},"ts":1600211838000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"`upon fulfillment` there takes some caller-specific code -- a closure, if you will","msgtype":"m.text"},"ts":1600211861000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"that closure should call package data with the first argument passed to it","msgtype":"m.text"},"ts":1600211878000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"OK, makes sense. Ty","msgtype":"m.text"},"ts":1600211956000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Perhaps this \"given\" might be worded better.","msgtype":"m.text"},"ts":1600211990000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1600212003000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"The bullet 5. also has some strange wording.","msgtype":"m.text"},"ts":1600212048000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"\"Return the result of upon fulfillment of promise given steps.\"","msgtype":"m.text"},"ts":1600212061000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"MikeSmith: aha, thanks","msgtype":"m.text"},"ts":1600212073000,"senderName":"isd","senderId":"isd@irc"},
{"content":{"body":"croraf: see https://github.com/whatwg/infra/issues/320 for that","msgtype":"m.text"},"ts":1600212088000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"While WebIDL says: \"To perform some steps upon fulfillment of a Promise<T> promise given some steps steps taking a value of type T, perform the following steps:\"","msgtype":"m.text"},"ts":1600212095000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"andreubotella, my small objection is that you cannot \"have the result of upon fulfillment\" but you can \"perform some steps upon fulfillment\". Perhaps the outcome is equivalent and obvious to the experienced reader.","msgtype":"m.text"},"ts":1600212305000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"yeah, well, fetch here is using \"upon fulfillment\" as the name of the algorithm when it maybe should use \"return the result of performing `steps` upon fulfillment\"","msgtype":"m.text"},"ts":1600212451000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"feel free to open a pull request if that bothers you","msgtype":"m.text"},"ts":1600212474000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"https://heycam.github.io/webidl/#dfn-perform-steps-once-promise-is-settled this is the sentence that confused me the most","msgtype":"m.text"},"ts":1600212844000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Like which \"2 sets of steps... promise that is fullfilled, rejected, or BOTH\". But I understand it now.","msgtype":"m.text"},"ts":1600212884000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it's basically an equivalent of Promise.prototype.then, which can take one or two functions","msgtype":"m.text"},"ts":1600212912000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"They meant one set of steps when promise is fulfilled, one set when rejected, or provide 2 sets of step for both cases.","msgtype":"m.text"},"ts":1600212916000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"andreubotella, what if reading all bytes rejects its promise https://fetch.spec.whatwg.org/#concept-body-consume-body","msgtype":"m.text"},"ts":1600213151000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This case seems not to be covered.","msgtype":"m.text"},"ts":1600213157000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The promise in bullet 5 is defined in bullet 3. If it fails the upon fulfillment does nothing. And what is returned then?","msgtype":"m.text"},"ts":1600213230000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I'm not too familiar with the promise operations in WebIDL, but from a first glance, it looks like the rejection would be ignored and the returned promise would succeed with undefined","msgtype":"m.text"},"ts":1600213455000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"thanks. It boils down to the return of upon fulfillment when the promise is rejected.","msgtype":"m.text"},"ts":1600213676000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"That is this: Return ! PerformPromiseThen(promise.[[Promise]], onFulfilled, onRejected, newCapability)","msgtype":"m.text"},"ts":1600213741000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"when rejected happens","msgtype":"m.text"},"ts":1600213747000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(last bullet in React to promise in WebIDL)","msgtype":"m.text"},"ts":1600213796000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"PerformPromiseThen kind of leads me to the broken link in the ECMAScript spec.","msgtype":"m.text"},"ts":1600213877000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(oh actually it takes some time to jump, so something crashes kind of)","msgtype":"m.text"},"ts":1600213922000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Yes, I think the .text() in this specific case just returns a promise that gets rejected when the error in reading happens.","msgtype":"m.text"},"ts":1600214022000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I'm not sure it does, since the rejection steps return undefined","msgtype":"m.text"},"ts":1600214047000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"that strikes me as a WebIDL bug, but I'll have to look deeper into it","msgtype":"m.text"},"ts":1600214067000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Aha, I see. It says to return undefined as onRejectedSteps.","msgtype":"m.text"},"ts":1600214267000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And then this \"undefined\" will be called.","msgtype":"m.text"},"ts":1600214281000,"senderName":"croraf","senderId":"croraf@irc"}
]