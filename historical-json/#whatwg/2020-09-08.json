[
{"content":{"body":"annevk: at https://encoding.spec.whatwg.org/#ref-for-ascii-code-point the Encoding spec says this:","msgtype":"m.text"},"ts":1599541935000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> These are ‚ÄúASCII-incompatible‚Äù encodings and other than ISO-2022-JP, UTF-16BE, and UTF-16LE, which are unfortunately required due to deployed content, they are not supported.","msgtype":"m.text"},"ts":1599541957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...while at https://html.spec.whatwg.org/multipage/infrastructure.html#ascii-compatible-encoding the HTML spec says this:","msgtype":"m.text"},"ts":1599542004000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> An ASCII-compatible encoding is any encoding that is not a UTF-16 encoding. [ENCODING]","msgtype":"m.text"},"ts":1599542012000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"..","msgtype":"m.text"},"ts":1599542804000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So per that HTML spec language, ISO-2022-JP is an ASCII-compatible encoding","msgtype":"m.text"},"ts":1599542853000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, actually ISO-2022-JP is actually an ASCII-compatible encoding, isn‚Äôt it?","msgtype":"m.text"},"ts":1599546053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that ‚Äúother than ISO-2022-JP‚Äù part of the language in the Encoding spec should be dropped, shouldn‚Äôt it?","msgtype":"m.text"},"ts":1599546091000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it‚Äôs not due to the escapes","msgtype":"m.text"},"ts":1599551106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: we should prolly harmonize that language in HTML though","msgtype":"m.text"},"ts":1599551138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah I am asking because we have some code in the validator.nu parser that does a ‚Äúis ASCII-compatible‚Äù check","msgtype":"m.text"},"ts":1599551506000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I think it‚Äôs based on old spec language","msgtype":"m.text"},"ts":1599551516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the current equivalent in the HTML spec is just the explicit checks for UTF-16","msgtype":"m.text"},"ts":1599551551000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I need to check that the code is actually doing something that current spec requires (and not something that it used to require and doesn‚Äôt now)","msgtype":"m.text"},"ts":1599551616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: HTML should just drop ASCII-compatible at this point; not sure why we kept it when we added UTF-16 encoding as a thing","msgtype":"m.text"},"ts":1599554437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: and I guess HTML's \"UTF-16 encoding\" could move to Encoding, but would like to land the refactoring PR for Encoding first","msgtype":"m.text"},"ts":1599554562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: refactoring PR is the ‚ÄúRename Encoding's \"streams\" to \"I/O queues\"‚Äù PR?","msgtype":"m.text"},"ts":1599556954000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah","msgtype":"m.text"},"ts":1599557025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1599557029000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: by the way, the specific check in the validator.nu code that I‚Äôm wondering about does this:","msgtype":"m.text"},"ts":1599557073000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"andreubotella: btw, realized that Domenic is out this week so do you want to wait or potentially do some tidying up later?","msgtype":"m.text"},"ts":1599557075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"> The encoding ‚Äúfoo‚Äù is not an ASCII superset and, therefore, cannot be used in an internal encoding declaration. Continuing the sniffing algorithm","msgtype":"m.text"},"ts":1599557112000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"..in the the meta-scan code","msgtype":"m.text"},"ts":1599557126000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually, it‚Äôs doing the same thing for the fully-parsed case too","msgtype":"m.text"},"ts":1599557190000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Internal encoding declaration specified ‚Äúfoo‚Äù, which is not an ASCII superset. Not changing the encoding.","msgtype":"m.text"},"ts":1599557233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since there‚Äôs earlier code that explicitly checks for UTF-16, then as far as I can see, that ‚Äúnot an ASCII superset. Not changing the encoding‚Äù would only get reached if the encoding is ISO-2022-JP and if ISO-2022-JP is considered to not be an ASCII superset","msgtype":"m.text"},"ts":1599557361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1599557474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is this:","msgtype":"m.text"},"ts":1599557479000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> If the encoding that is already being used to interpret the input stream is a UTF-16 encoding, then set the confidence to certain and return. The new encoding is ignored","msgtype":"m.text"},"ts":1599557481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...except that the spec says to do that ignore return only for UTF-16 encodings explictly (not for ‚Äúnot an ASCII superset‚Äù encodings)","msgtype":"m.text"},"ts":1599557559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, note that the specification has seen some refactoring already","msgtype":"m.text"},"ts":1599557642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://github.com/whatwg/html/commit/a73180679a40fce96b8e8fb6dfa5815a9bce30eb is probably of interest","msgtype":"m.text"},"ts":1599557926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1599558077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ah yeah that‚Äôs it","msgtype":"m.text"},"ts":1599558107000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"2015","msgtype":"m.text"},"ts":1599558113000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I am kind of surprised how far out of conformance the validator.nu Java code is with the spec","msgtype":"m.text"},"ts":1599558143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean specifically the encodings-handling code","msgtype":"m.text"},"ts":1599558197000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since it‚Äôs used for Firefox too, I would expect that‚Äôd necessarily mean that Firefox was also way out of conformance with the spec as far as encodings handling","msgtype":"m.text"},"ts":1599558262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: is it actually non-compliant though? Only checking for UTF-16 seems correct","msgtype":"m.text"},"ts":1599558333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is just one place I have found where the Java code is non-conforming","msgtype":"m.text"},"ts":1599558372000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"To stress the point a bit, the Encoding Standard's definition of ASCII-incompatible is completely non-normative","msgtype":"m.text"},"ts":1599558385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1599558395000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders if the big OK represents an annoyed MikeSmith üòä","msgtype":"m.emote"},"ts":1599558439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, no ‚Äî not annoyed at all","msgtype":"m.text"},"ts":1599558472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, another place that the Java code does not match the spec is that it implements the Charset Alias Matching thing rather than just trim-leading-trailing whitespace","msgtype":"m.text"},"ts":1599558535000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I am kind of beginning to suspect that this is a part of the Java source that doesn‚Äôt actually get used in the Firefox code","msgtype":"m.text"},"ts":1599558597000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh yeah, that's bad","msgtype":"m.text"},"ts":1599558602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Pretty sure that's not in Firefox indeed","msgtype":"m.text"},"ts":1599558615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how many more times I will see Charset Alias Matching referenced in my life","msgtype":"m.text"},"ts":1599558648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I think Henri must have separate C++ source for this","msgtype":"m.text"},"ts":1599558648000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1599558652000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"more than you would like, I‚Äôm sure","msgtype":"m.text"},"ts":1599558671000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, actually I already know one specific place where the Firefox code does something very different from the Java code: the \"replacement\" encoding name/label","msgtype":"m.text"},"ts":1599558741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there is zero code in the Java sources for dealing with the \"replacement\" encoding","msgtype":"m.text"},"ts":1599558761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...yet Firefox handles it per-spec","msgtype":"m.text"},"ts":1599558770000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"R.I.P. He rid the web from Charset Alias Matching. OK chap.","msgtype":"m.text"},"ts":1599558783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1599559052000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: oh, I didn't know that. Let's merge now and fix later, then","msgtype":"m.text"},"ts":1599559508000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: sounds good, doing a final round of nits now","msgtype":"m.text"},"ts":1599559639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1599559665000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"annevk: hi, I've updated https://github.com/whatwg/html/pull/5574 to account for same-origin concerns as discussed.","msgtype":"m.text"},"ts":1599566927000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Today I posted to the wicg discourse 1400 words worth of the most stupid, unrealistic idea I've ever had. At least it has not been deleted, so that's a plus...","msgtype":"m.text"},"ts":1599596904000,"senderName":"EveryOS","senderId":"EveryOS@irc"}
]