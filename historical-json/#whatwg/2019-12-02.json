[
{"content":{"body":"domfarolino: then I don't get why you're looking at the initiator for same-origin checks?","msgtype":"m.text"},"ts":1575271773000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: A request's referrer string and initiator (origin) can be cross-origin. And the definition of same-origin compares a request's URL with the initiator origin","msgtype":"m.text"},"ts":1575271850000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"jochen__: (But chrome's impl compares a request's URL with the referrer string origin)","msgtype":"m.text"},"ts":1575271879000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"but why would we care about the initiator?","msgtype":"m.text"},"ts":1575271951000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"maybe the same-origin definition is not fitting the intend ?","msgtype":"m.text"},"ts":1575271965000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: I was just trying to align chrome's impl with the definition of same-origin (found in referrer-policy spec). It compares a request's origin with the current URL, and in implementation-land, I believe that is the same as comparing initiator (origin) and URL","msgtype":"m.text"},"ts":1575272091000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I think we can either change chrome's implementation to match the spec, or change the spec's definition of same-origin to compare <url, referrrer string> instead of <url, origin>","msgtype":"m.text"},"ts":1575272206000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"we should do the latter","msgtype":"m.text"},"ts":1575272282000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"OK; feel free to mention that on the thread too. Just want to make sure there isn't any harm in doing that (privacy-wise maybe)","msgtype":"m.text"},"ts":1575272379000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"cc yhirano","msgtype":"m.text"},"ts":1575272385000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"does feel a little inconsistent that one spec's definition of a same-origin request is kinda different from others though. Maybe that's ok","msgtype":"m.text"},"ts":1575272540000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: FYI https://github.com/mdn/browser-compat-data/issues/5214 is about updating BCD to distinguish between legacy Edge and Blink-based Edge","msgtype":"m.text"},"ts":1575272877000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as I commented there, I think it would make the most sense to just create a new top-level \"Edge (Blink-based)\" browser in BCD, and add the new data under that (which is relatively simple because it can basically just all be copied from the existing Chrome data)","msgtype":"m.text"},"ts":1575272999000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"domfarolino, jochen__: commented at https://github.com/w3c/webappsec-referrer-policy/issues/123","msgtype":"m.text"},"ts":1575273524000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"jgraham, gsnedders: you're welcome to come up whenever. We're an easy 15 minute walk from the station. I'd try to avoid a Wednesday as some people tend to work from home that day, but that could change if necessary. Probably best to DM?","msgtype":"m.text"},"ts":1575292277000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"PiersW: what's your email, and I'll drop you a line later?","msgtype":"m.text"},"ts":1575292629000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"piersâŠ™ec","msgtype":"m.text"},"ts":1575292813000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"zcorpan, at 2019-05-31 11:29 UTC, MikeSmith said: when you have some time, I wanted to ask you about <picture> test cases","msgtype":"m.text"},"ts":1575297148000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"MikeSmith: here now","msgtype":"m.text"},"ts":1575297162000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I noticed another html parser interop difference :-|","msgtype":"m.text"},"ts":1575297240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1575297290000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"If the parser was created as part of the HTML fragment parsing algorithm, then act as described in the \"any other start tag\" entry below. (fragment case)\"","msgtype":"m.text"},"ts":1575297403000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: any concerns exposing MIMEParams as a ctor in https://bmeck.github.io/node-proposal-mime-api/ , seems like it should accept a round-trip able string is all?","msgtype":"m.text"},"ts":1575302555000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"also unclear on how to handle URL percent encoding staring at the parser it doesn't have any flags so would decoding prior to piping through it be the right place? that would mean encoded `=` acts a bit odd though","msgtype":"m.text"},"ts":1575302666000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I'm not sure that it's great to add the concept of \"parameter string\" separate from \"serialized MIME type\"","msgtype":"m.text"},"ts":1575307785000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like right now there is no concept for what `foo=bar;baz=qux` is separate from `x/y;foo=bar;baz=qux`. And introducing a new concept with its own parser, serializer, etc. seems potentially problematic.","msgtype":"m.text"},"ts":1575307832000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it makes the API slightly more convenient since non-callable classes are not really a thing in, and URL params also exposes a string ctor","msgtype":"m.text"},"ts":1575307836000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"part of the reason here is there appears to be a problem with URL percent encoding and MIME param parsing as well","msgtype":"m.text"},"ts":1575307863000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I think a constructor can exist without being overloaded to also take a string","msgtype":"m.text"},"ts":1575307882000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you likely want to flag decoding the params as it shouldn't happen before parsing the params due to encoding the =","msgtype":"m.text"},"ts":1575307884000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"It should just behave like the Map() constructor.","msgtype":"m.text"},"ts":1575307887000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't think URL encoding should be involved here at all","msgtype":"m.text"},"ts":1575307897000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just prohibit characters not in the list","msgtype":"m.text"},"ts":1575307905000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm a bit confused as URL encoding is quite intertwined with MIME params when you deal with data:","msgtype":"m.text"},"ts":1575307939000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"i.e. parameter names must be HTTP token code points and parameter values must be HTTP quoted-string code points","msgtype":"m.text"},"ts":1575307944000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the list of prohibited characters doesn't really work","msgtype":"m.text"},"ts":1575307949000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"data: is separate","msgtype":"m.text"},"ts":1575307950000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you don't agree with the spec's prohibitions then you have more fundamental problems","msgtype":"m.text"},"ts":1575307963000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it is not as parsing URL percent encoding is involed in data MIME parsing","msgtype":"m.text"},"ts":1575307967000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"its part of data, it isn't really about agreement","msgtype":"m.text"},"ts":1575307982000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the parser seems fine but gets all wonky and doesn't make sense when put inside a URL","msgtype":"m.text"},"ts":1575308002000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"That isn't how the data: URL parser works. First it URL parses. Then it MIME type parses pieces of it. Only the first part involves URL encoding.","msgtype":"m.text"},"ts":1575308003000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so you are saying `text/plain;foo${encodeURIComponent('=')}bar${encodeURIComponent(',')}baz,`  should have a body of `baz,` not ``?","msgtype":"m.text"},"ts":1575308080000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Is that a MIME type or a data URL?","msgtype":"m.text"},"ts":1575308108000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah, prepend `data:` to that, so `data:text/plain;foo${encodeURIComponent('=')}bar${encodeURIComponent(',')}baz,`","msgtype":"m.text"},"ts":1575308150000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"The answers are different in each case","msgtype":"m.text"},"ts":1575308158000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, I guess they are not, in both cases the URLs are not decoded","msgtype":"m.text"},"ts":1575308210000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://jsdom.github.io/whatwg-url/#url=ZGF0YTp0ZXh0L3BsYWluO2ZvbyUzRGJhciUyQ2Jheiw=&base=YWJvdXQ6Ymxhbms=","msgtype":"m.text"},"ts":1575308215000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i'm trying to figure out an API that is usable for both, thats all. i don't really want to propose changes anywhere but the specs seem confusing here","msgtype":"m.text"},"ts":1575308225000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"The MIME type string is `text/plain;foo%3Dbar%2Cbaz` which parses as just `text/plain` since the parameter named `foo%3Dbar%2Cbaz` gets thrown out","msgtype":"m.text"},"ts":1575308308000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the data: RFC pointed out using percent encoding for values outside of http quoted-string ranges so it just adds to this confusion a bit for me","msgtype":"m.text"},"ts":1575308323000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://runkit.com/domenicdenicola/5de54c2c2340d00019ec9b51","msgtype":"m.text"},"ts":1575308337000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ignore the RFCs","msgtype":"m.text"},"ts":1575308341000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Use the reference implementations, at https://jsdom.github.io/whatwg-url/ and https://npm.runkit.com/whatwg-mimetype","msgtype":"m.text"},"ts":1575308417000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So e.g. your example data: URL is at https://jsdom.github.io/whatwg-url/#url=ZGF0YTp0ZXh0L3BsYWluO2ZvbyUzRGJhciUyQ2Jheiw=&base=YWJvdXQ6Ymxhbms=","msgtype":"m.text"},"ts":1575308427000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"As you can see it has a path component of `text/plain;foo%3Dbar%2Cbaz,`","msgtype":"m.text"},"ts":1575308449000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: there appears to be issues with that ref impl though","msgtype":"m.text"},"ts":1575308452000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"https://runkit.com/bmeck/5de54c621ede90001abf065e","msgtype":"m.text"},"ts":1575308453000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"What's the issue?","msgtype":"m.text"},"ts":1575308466000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i've tried going step by step through the mimesniff spec","msgtype":"m.text"},"ts":1575308468000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"That result looks correct to me","msgtype":"m.text"},"ts":1575308498000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it doesn't seem to deal with percent encoding anywhere that i can tell","msgtype":"m.text"},"ts":1575308511000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Correct","msgtype":"m.text"},"ts":1575308517000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"like percent encoding is ignored for that part of the url","msgtype":"m.text"},"ts":1575308519000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Correct","msgtype":"m.text"},"ts":1575308522000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That is the correct behavior","msgtype":"m.text"},"ts":1575308526000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You seem to have been confused by some obsoleted RFCs","msgtype":"m.text"},"ts":1575308533000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and the current mimesniff / data url processor","msgtype":"m.text"},"ts":1575308546000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"not just the RFCs","msgtype":"m.text"},"ts":1575308550000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"the RFCs got brought up after the issue on fetch opened","msgtype":"m.text"},"ts":1575308561000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"OK. Then where are you getting the idea that URL encoding should be involved?","msgtype":"m.text"},"ts":1575308574000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://fetch.spec.whatwg.org/#data-urls , it takes a URL and serializes it , the URL would have already decoded stuff to my understanding, and re-encoding gets funky/wrong with some stuff","msgtype":"m.text"},"ts":1575308669000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1575308712000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"The URL does not \"already have decoded stuff\"","msgtype":"m.text"},"ts":1575308733000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"As seen from https://jsdom.github.io/whatwg-url/#url=ZGF0YTp0ZXh0L3BsYWluO2ZvbyUzRGJhciUyQ2Jheixmb28lM0RiYXIlMkNiYXo=&base=YWJvdXQ6Ymxhbms=","msgtype":"m.text"},"ts":1575308746000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll be back later too, getting lunch","msgtype":"m.text"},"ts":1575308768000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: then i'm just more confused as to how a URL is there if it isn't parsed/decoded already","msgtype":"m.text"},"ts":1575309778000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"The URL parser does very little percent decoding itself (only for hosts and dots in paths really, iirc)","msgtype":"m.text"},"ts":1575309899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A processor for a particular scheme could do more decoding, and the data: one does, but not for the MIME type","msgtype":"m.text"},"ts":1575309941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm fine with either direction but feel some uneasiness with the tone of ignoring other places (e.g. the RFCs) that i often see here","msgtype":"m.text"},"ts":1575310159000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"So the problem with some RFCs is that they aren't maintained and nobody wants to align with them. That's mainly why there's alternatives now, that are maintained (mostly).","msgtype":"m.text"},"ts":1575310311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Well, \"nobody\" is something like \"nobody big enough that they need to interoperate with web content in the wild\".)","msgtype":"m.text"},"ts":1575310357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bradleymeck: as for your API sketch, if a MIME's mime is a MIME type, that'll also hold the parameters","msgtype":"m.text"},"ts":1575310470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bradleymeck: also, I'd call the main class MIMEType","msgtype":"m.text"},"ts":1575310482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bradleymeck: and there should be an essence getter on it","msgtype":"m.text"},"ts":1575310529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, but if you expose an API for the params like URLSearchParams does it causes a separate object API","msgtype":"m.text"},"ts":1575310537000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"This might lead to all kinds of issues though depending on how folks use these","msgtype":"m.text"},"ts":1575310635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you clarify/has this been discussed regarding URLSearchParams somewhere that I can read?","msgtype":"m.text"},"ts":1575310783000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"annevk: Domenic: https://domspec.herokuapp.com/ has MDN annotations added to the DOM spec","msgtype":"m.text"},"ts":1575319891000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Iâ€™m still working on the patch for Bikeshed, but as far as the output goes, thatâ€™s what the patch will generate","msgtype":"m.text"},"ts":1575319944000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., look around https://domspec.herokuapp.com/#dom-event-stoppropagation","msgtype":"m.text"},"ts":1575319968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That's pretty sweet!!","msgtype":"m.text"},"ts":1575319970000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1575320122000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Iâ€™ll try to get Bikeshed PR raised for it this morning (Iâ€™ll otherwise be out all day from 10am to the evening my time)","msgtype":"m.text"},"ts":1575320244000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh dang, thanks MikeSmith! I wanted to get to it but between vacation and some higher-prio thing I haven't been able to!","msgtype":"m.text"},"ts":1575321310000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hey TabAtkins!","msgtype":"m.text"},"ts":1575321328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no worries â€” I had meant to get to it long before now","msgtype":"m.text"},"ts":1575321345000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: anyway, after I get the PR raised, you can make lots of time to review it :)","msgtype":"m.text"},"ts":1575321441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah def","msgtype":"m.text"},"ts":1575321448000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you have a good setup for doing profiling of Bikeshed, among the things I hope you can look at is the performance","msgtype":"m.text"},"ts":1575321523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"on my machine it increases the build time for the DOM spec from 15 seconds to 30 seconds..","msgtype":"m.text"},"ts":1575321551000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess there is probably some costly thing Iâ€™m naively doing, or else maybe just general slowness of lxml, I dunno","msgtype":"m.text"},"ts":1575321619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, it will be nice if itâ€™ll be possible to get that time reduced","msgtype":"m.text"},"ts":1575321654000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder if anyone here happens to know current state of Safari's disagreement about how Page Visibility API works? â€“ https://bugs.webkit.org/show_bug.cgi?id=116769","msgtype":"m.text"},"ts":1575321830000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"( https://bugs.webkit.org/show_bug.cgi?id=151234 )","msgtype":"m.text"},"ts":1575321840000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Yeah, I've got some good profiling scripts set up that I can run over the stuff.","msgtype":"m.text"},"ts":1575322848000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The `bikeshed profile` command, tho it depends on some things installed that aren't immediately obvious.)","msgtype":"m.text"},"ts":1575322872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"More than likely it's something like you running selectors inside a loop or something.","msgtype":"m.text"},"ts":1575322903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah there are couple places that I suspect but I havenâ€™t had time to look at yet","msgtype":"m.text"},"ts":1575323059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]