[
{"content":{"body":"JakeA: we need some new terms for service workers","msgtype":"m.text"},"ts":1439376979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: when request's destination is \"unknown\", the service worker needs to be skipped","msgtype":"m.text"},"ts":1439377004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: when it's \"subresource\", the service worker is selected based on the client","msgtype":"m.text"},"ts":1439377018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: when request's destination is any other value, the service worker is selected based on the request's url","msgtype":"m.text"},"ts":1439377043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Makes sense","msgtype":"m.text"},"ts":1439377071000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we used to call this last one \"client request\", but does that still make sense if it includes NEL and CSP reports?","msgtype":"m.text"},"ts":1439377080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and downloads)","msgtype":"m.text"},"ts":1439377089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed, describing it in terms of destination makes more sense. Although I'm still not totally sure if CSP reports are \"of the page\" or not","msgtype":"m.text"},"ts":1439377205000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If they're not they could become a subresource, but it doesn't really resolve the naming issue","msgtype":"m.text"},"ts":1439377240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Assuming we want to have names","msgtype":"m.text"},"ts":1439377250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since CSP can block \"client\" requests, I guess they're not of the page","msgtype":"m.text"},"ts":1439377276000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(of the client, I mean)","msgtype":"m.text"},"ts":1439377288000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So the system works","msgtype":"m.text"},"ts":1439377303000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"\" is an acceptable destination","msgtype":"m.text"},"ts":1439377317000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Sure, but my question is what we should do with \"client request\" as a term","msgtype":"m.text"},"ts":1439377337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And \"navigation request\"","msgtype":"m.text"},"ts":1439377345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Etc.","msgtype":"m.text"},"ts":1439377349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: are you explaining microtask vs compound microtask, too?","msgtype":"m.text"},"ts":1439384645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wasn't, but probably because I don't understand it myself","msgtype":"m.text"},"ts":1439384686000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I could","msgtype":"m.text"},"ts":1439384691000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I just know I need the latter for mutation observers... I forgot why it has that setup","msgtype":"m.text"},"ts":1439384764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: aklein knows and explained it to me once","msgtype":"m.text"},"ts":1439384786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just saw the other messages, we could get rid of \"client request\" and \"navigation request\" and instead describe them in terms of destination","msgtype":"m.text"},"ts":1439384788000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I have some kind of solution for that already","msgtype":"m.text"},"ts":1439384808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it's \"non-subresource request\"","msgtype":"m.text"},"ts":1439384820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not super elegant, but it'll do","msgtype":"m.text"},"ts":1439384835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems fine to me","msgtype":"m.text"},"ts":1439384840000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: is https://github.com/whatwg/fetch/issues/79 going to result in a change to the Cache API?","msgtype":"m.text"},"ts":1439388698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I think the same-origin restriction seems reasonable","msgtype":"m.text"},"ts":1439396572000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(sorry that reply took so long)","msgtype":"m.text"},"ts":1439396579000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm, that's not the one I hoped for","msgtype":"m.text"},"ts":1439396666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I was hoping that if we the request has redirect mode not to follow and the cache only has a redirected response, it returns failure","msgtype":"m.text"},"ts":1439396700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, wait, you're right","msgtype":"m.text"},"ts":1439396723000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah, it won't need a change","msgtype":"m.text"},"ts":1439396728000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1439396734000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I should think more","msgtype":"m.text"},"ts":1439396749000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"You mean Fetch doesn't need a change, but the Cache API does?","msgtype":"m.text"},"ts":1439396751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, cache doesn't need to change, \"same-origin\" navigations are enough","msgtype":"m.text"},"ts":1439396780000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hmm. I thought we wanted to allow CORS responses for those in theory?","msgtype":"m.text"},"ts":1439396825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do anyway","msgtype":"m.text"},"ts":1439396830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think this is a good reason not to","msgtype":"m.text"},"ts":1439396841000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Seems rather arbitrary","msgtype":"m.text"},"ts":1439396848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think this is a good reason to not make the Cache API return something different from the fetch() API","msgtype":"m.text"},"ts":1439396874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not sure what you mean","msgtype":"m.text"},"ts":1439397067000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"This bug can be fixed by a same-origin restriction in cache, or enforcing same-origin for navigations in fetch. In both cases, you could take a CORS response, read the data & make a synthetic response to circumvent the limitation","msgtype":"m.text"},"ts":1439397176000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"What about my solution?","msgtype":"m.text"},"ts":1439397199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What I mean is that the Cache API not respecting RedirectMode seems like a bit of a bug","msgtype":"m.text"},"ts":1439397274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: JakeA: whatever happened to the idea of requiring SW scripts to be 'use strict'?","msgtype":"m.text"},"ts":1439401364000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/slightlyoff/ServiceWorker/issues/294 captures most of it, I guess.","msgtype":"m.text"},"ts":1439403701000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1439403754000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think that failed","msgtype":"m.text"},"ts":1439405080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: we need something like module:true at some point","msgtype":"m.text"},"ts":1439405100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... I was more just verifying we should not be treating script warnings as hard failures in the SW script... currently gecko does that","msgtype":"m.text"},"ts":1439405361000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: what is a script warning?","msgtype":"m.text"},"ts":1439405405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: sounds bogus","msgtype":"m.text"},"ts":1439405429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: function f() { return 1; return 2; }","msgtype":"m.text"},"ts":1439405445000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"legal js, but we generate a warning","msgtype":"m.text"},"ts":1439405457000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I believe","msgtype":"m.text"},"ts":1439405460000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that doesn't even throw with \"use strict\" afaict","msgtype":"m.text"},"ts":1439405491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so yeah, we shouldn't do that","msgtype":"m.text"},"ts":1439405537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1439405549000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":" yeah that's a devtools thing basically","msgtype":"m.text"},"ts":1439405988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: whats really awesome is that because of this bug we can't load asmjs stuff in service worker scripts... because it \"logs\" success messages as \"warnings\"","msgtype":"m.text"},"ts":1439407949000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh wow that is fun","msgtype":"m.text"},"ts":1439407972000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: so much wrong :-/","msgtype":"m.text"},"ts":1439408391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Its a one-line fix thankfully","msgtype":"m.text"},"ts":1439408418000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins, when nesting two `flex-direction: column` containers in a `flex-direction: row` container, the innermost flex items seem to overflow the innermost container.","msgtype":"m.text"},"ts":1439410450000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"http://codepen.io/anon/pen/oXOYNz?editors=110","msgtype":"m.text"},"ts":1439410453000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Is that right? I have an app that I haven't touched in months. It used to work as expected, but doesn't now.","msgtype":"m.text"},"ts":1439410479000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"JosephSilber: That's the min-height:auto triggering.","msgtype":"m.text"},"ts":1439410522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Set min-height:0 to make it not expand too large","msgtype":"m.text"},"ts":1439410534000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, In that example, I would expect the list to scroll, since it should stop at the boundry of its container.","msgtype":"m.text"},"ts":1439410536000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"min-height makes it spill over?","msgtype":"m.text"},"ts":1439410551000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Yeah, it forces it to a minimum height equal to its natural height.","msgtype":"m.text"},"ts":1439410567000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which element needs the min-height:0","msgtype":"m.text"},"ts":1439410578000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1439410579000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"The column","msgtype":"m.text"},"ts":1439410585000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why does it only happen in triple-nested flex containers like that?","msgtype":"m.text"},"ts":1439410626000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"TabAtkins, it doesn't happen here: http://codepen.io/anon/pen/mJgOeB?editors=110","msgtype":"m.text"},"ts":1439410676000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Only when I wrap it in an additional flex container with a perpendicular axis.","msgtype":"m.text"},"ts":1439410691000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"It does happen, but overflow is complicated and hard to debug.","msgtype":"m.text"},"ts":1439411417000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that case you're specifying the height on the containers, so the min-width adjusts to that.","msgtype":"m.text"},"ts":1439411470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But when they're perpendicular, if often doesn't have a definite-height container any more.","msgtype":"m.text"},"ts":1439411494000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So the min-height is full-powered.","msgtype":"m.text"},"ts":1439411500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmmmmmm.","msgtype":"m.text"},"ts":1439411809000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Like you said, complicated.","msgtype":"m.text"},"ts":1439411817000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1439411820000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"It turns out to be complicated no matter what. :(  Before we did min-height:auto, flexboxes did visible overflow constantly and it was really hard to debug which one was the problem.","msgtype":"m.text"},"ts":1439411950000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"NetVC is aiming at WebRTC and similar things, right? who has (and hasn't) expressed an interest in it?","msgtype":"m.text"},"ts":1439421613000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I presume it's mostly the normal crowd (Moz, Goog, Op)","msgtype":"m.text"},"ts":1439421624000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]