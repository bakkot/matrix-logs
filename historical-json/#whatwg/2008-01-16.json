[
{"content":{"body":"the solution to all problems is to plaster over the crackrock that the world gives","msgtype":"m.text"},"ts":1200441600000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"css differences between browsers? roll your own css with js and position:absolute","msgtype":"m.text"},"ts":1200441660000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Has anybody written a JS interpreter in pure JS?","msgtype":"m.text"},"ts":1200441661000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i wish","msgtype":"m.text"},"ts":1200441662000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"would settle for a js-to-browser-js -compiler too","msgtype":"m.text"},"ts":1200441720000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"I thought someone had.","msgtype":"m.text"},"ts":1200441721000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"There's Narcissus but I think that requires some SpiderMonkey extensions","msgtype":"m.text"},"ts":1200441722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But maybe that's a false memory.","msgtype":"m.text"},"ts":1200441723000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"http://lxr.mozilla.org/mozilla/source/js/narcissus/jsparse.js etc","msgtype":"m.text"},"ts":1200441724000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it'd cool if someone wrote a JS interpeter in LOLCode, and then ran that in the LOLCode interpreter that's written in JS :-)","msgtype":"m.text"},"ts":1200441725000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"__defineProperty__? What does that do?","msgtype":"m.text"},"ts":1200441780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If you wrote a js interpreter in python you could compile it to js PyPy, the python interpreter written in python...","msgtype":"m.text"},"ts":1200441840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.nabble.com/__defineProperty__-by-default-in-SpiderMonkey-td2853378.html - oh, it's only there if you #define NARCISSUS, which is cheating","msgtype":"m.text"},"ts":1200441841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There is (or used to be) a JS code-generating backend for Pugs (the Perl 6 compiler written in Haskell)","msgtype":"m.text"},"ts":1200442260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but \"hello world\" was about 1MB of JS, and it didn't work in any browser :-(","msgtype":"m.text"},"ts":1200442261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is reminded that he really needs to finish his JS HTML5 parser","msgtype":"m.emote"},"ts":1200442440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Actually I need the Perl one more than JS, but the JS one is more fun)","msgtype":"m.text"},"ts":1200442500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is IDL \"float\" 32-bit or 64-bit?","msgtype":"m.text"},"ts":1200444720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"32-bit","msgtype":"m.text"},"ts":1200445140000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"can you guess why it's called 'double'? ;-)","msgtype":"m.text"},"ts":1200445141000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ah, thanks","msgtype":"m.text"},"ts":1200445142000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I couldn't find anything in HTML5 using 'double', so it was possible that 'float' was just referring generically to a large floating point type :-)","msgtype":"m.text"},"ts":1200445200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders if he should send comments to public-html in attempt to increase the SNR","msgtype":"m.emote"},"ts":1200445860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/ / an /","msgtype":"m.text"},"ts":1200445861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: well, in that matter, it might just be generic -- just note that JS numbers are traditional doubles","msgtype":"m.text"},"ts":1200445862000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: I guess it doesn't matter much for the case I was looking at, since it all gets converted to 16.16 fixed-point anyway","msgtype":"m.text"},"ts":1200446400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh, no :-)","msgtype":"m.text"},"ts":1200446401000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wonders who thought 64K coordinate space units would be enough for anyone","msgtype":"m.emote"},"ts":1200446580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jwalden: oops, fixed. i changed the text in instructions.inc and forgot to update the test.","msgtype":"m.text"},"ts":1200447960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: incidentally, I don't hugely care any more for 31/32 now that you've made them reset and Firefox passes, but -- I can't help wondering how you're reading the HTML DOM spec to allow click() to work on type=\"text\"; I just don't see it","msgtype":"m.text"},"ts":1200448020000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it seems clear-cut to me that it only works on the specific enumerated types","msgtype":"m.text"},"ts":1200448021000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"the spec says \"Simulate a mouse-click. For INPUT elements whose type attribute has one of the following values: \"button\", \"checkbox\", \"radio\", \"reset\", or \"submit\".\".","msgtype":"m.text"},"ts":1200448080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the first sentence is an imperative statement saying what the UA must do if the method is invoked","msgtype":"m.text"},"ts":1200448081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the second sentence is an informative statement of intent.","msgtype":"m.text"},"ts":1200448082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shudder","msgtype":"m.text"},"ts":1200448083000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"but I guess I can see","msgtype":"m.text"},"ts":1200448084000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I'm sure if you'd written it this wouldn't be anywhere close to ambiguous :-)","msgtype":"m.text"},"ts":1200448140000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"would still suggest reviewing the spec for ambiguity rather than assuming Hixie is perfect :-)","msgtype":"m.emote"},"ts":1200448260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah well","msgtype":"m.text"},"ts":1200448261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that spec has issues","msgtype":"m.text"},"ts":1200448262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: indeed!","msgtype":"m.text"},"ts":1200448263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, certainly :-)","msgtype":"m.text"},"ts":1200448320000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"good lord, this xhtml nonsense is getting out of hand","msgtype":"m.text"},"ts":1200448321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think I've referred to specs more in the last week than in the entire last month","msgtype":"m.text"},"ts":1200448322000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1200448380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems you can crash Safari by doing a shadowBlur that's more than about 10000px.","msgtype":"m.text"},"ts":1200454080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fun","msgtype":"m.text"},"ts":1200455640000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: When implementing shadows for FF, I just clamped shadowBlur to 2000 (i.e. about 600 pixels radius) since that seemed a sensible way to avoid using gigabytes of memory for a large blur","msgtype":"m.text"},"ts":1200473640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.ytqm.org/2008/01/16/whatyouseeiswhatthefuck/","msgtype":"m.text"},"ts":1200477120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: redirects me to an anti-spyware scam","msgtype":"m.text"},"ts":1200477300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, doesn't do that for me","msgtype":"m.text"},"ts":1200477301000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen, the page contains this comic strip http://www.userfriendly.org/cartoons/archives/07jul/uf010526.gif","msgtype":"m.text"},"ts":1200477360000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and, translated text equivalent underneath the image... try this one http://translate.google.com/translate?u=http%3A%2F%2Fwww.ytqm.org%2F2008%2F01%2F16%2Fwhatyouseeiswhatthefuck%2F","msgtype":"m.text"},"ts":1200477420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that one shows a NSFW penis enlargement ad","msgtype":"m.text"},"ts":1200477540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"clearly a quality site","msgtype":"m.text"},"ts":1200477541000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1200477542000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1200477840000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"Hixie: hmm, in test 10 you test that Attr nodes have child nodes. that's something i'd like to change in the dom spec actually","msgtype":"m.text"},"ts":1200477900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"isn't it interoperably implemented already?","msgtype":"m.text"},"ts":1200477960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not in opera","msgtype":"m.text"},"ts":1200477961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or ie","msgtype":"m.text"},"ts":1200477962000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what's the point of attribute nodes?","msgtype":"m.text"},"ts":1200478080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's for entityreference nodes","msgtype":"m.text"},"ts":1200478081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which must die","msgtype":"m.text"},"ts":1200478082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: more to the point, what's the point of attribute nodes having its value duplicated as a child text node?","msgtype":"m.text"},"ts":1200478083000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mpt: Coming up with a correct positive wording for \"Don't override.\" is hard","msgtype":"m.text"},"ts":1200481140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mpt: Since the positive wording would be along the lines of \"Use encoding info from transfer protocol or the document.\"","msgtype":"m.text"},"ts":1200481200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"which is long","msgtype":"m.text"},"ts":1200481201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"As set by the server/page\"?","msgtype":"m.text"},"ts":1200481202000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200481260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1200481261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yw","msgtype":"m.text"},"ts":1200481262000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"Hixie: in order to allow us to fix <link> ignoring content-type in a way that doesn't introduce more differences between quirks and non-quirks, could you perhaps change the test to use image/gif or something instead of text/html?","msgtype":"m.text"},"ts":1200486120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which one is worse: cloning a lot of DOM text nodes or concatenating as many JS strings?","msgtype":"m.text"},"ts":1200494220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"say I have 1500 DOM strings that I want to copy into a text area","msgtype":"m.text"},"ts":1200494280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should I build a concatenation of the strings and put it into the text area","msgtype":"m.text"},"ts":1200494281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or insert each string without modification as a text node of its own into the textarea?","msgtype":"m.text"},"ts":1200494282000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"by \"1500 DOM strings\" do you mean \"1500 DOM text nodes\"?","msgtype":"m.text"},"ts":1200494520000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"my gut feeling is that the JS string concatenation approach would perform better than any kind of DOM manipulation","msgtype":"m.text"},"ts":1200494580000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"assuming you mean something like |for each (textnode in nodes) total += textnode.textContent; textarea.value = total;| vs. |for each (textnode in nodes) textarea.appendChild(textnode.cloneNode());|","msgtype":"m.text"},"ts":1200494700000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"hsivonen: iirc, string concatenation is horrobly slow in ie; it's at least an order of magnitude faster to append the strings to an array and then do .join('')","msgtype":"m.text"},"ts":1200494760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't know about cloning though","msgtype":"m.text"},"ts":1200494761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/horrobly/horribly/","msgtype":"m.text"},"ts":1200494820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gavin: yes, I mean 1500 DOM text node and total += textnode.textContent","msgtype":"m.text"},"ts":1200494821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: ok. ","msgtype":"m.text"},"ts":1200494822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks. I guess this means that I should collect the strings in an array and then join","msgtype":"m.text"},"ts":1200494880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i think you also need to set .value instead of inserting child nodes for compat with ... ie i think","msgtype":"m.text"},"ts":1200494881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, there was a mozilla bug about improving that kind of JS string concatenation","msgtype":"m.text"},"ts":1200494882000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"iincluding workarounds just like zcorpan mentioned","msgtype":"m.text"},"ts":1200494883000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=56940#c14","msgtype":"m.text"},"ts":1200495000000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1200495001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I hope textContent is smart about the single text child case","msgtype":"m.text"},"ts":1200495060000,"senderName":"hsivonen","senderId":"hsivonen@irc"}
]