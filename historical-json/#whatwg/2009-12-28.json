[
{"content":{"body":"jquery","msgtype":"m.text"},"ts":1261959120000,"senderName":"cardona507","senderId":"cardona507@irc"},
{"content":{"body":"ooops - wrong room","msgtype":"m.text"},"ts":1261959121000,"senderName":"cardona507","senderId":"cardona507@irc"},
{"content":{"body":"do any Web Apps WG specs have an official test suite yet?","msgtype":"m.text"},"ts":1261963800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm I see ElementTraversal has one","msgtype":"m.text"},"ts":1261963980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hi all... HTML5 semantics question. Should I do this: <html>...<body><header>...</header><nav>...</nav>...<section id=\"posts\"><article><header><h1>Post title</h1></header><p>Post content</p></article></section>...</body></html>","msgtype":"m.text"},"ts":1261977600000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Or this? ...<div id=\"posts\"><article><header><h1>Title</h1></header><section class=\"post-body\"><p>Content</p></section></article></div>","msgtype":"m.text"},"ts":1261977660000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"both are fine, depending on what you want your document outline to look like","msgtype":"m.text"},"ts":1261977661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm just unclear on where <section> is to be used and where it should be <div>","msgtype":"m.text"},"ts":1261977720000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Like, right now I have <section id=\"main\"><aside>...</aside>..a bunch of <article>s","msgtype":"m.text"},"ts":1261977721000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"But I'm running into compatibility issues styling the <article>s' <p> tags, because not all browsers support CSS3 :first-of-type and :last-of-type at the moment","msgtype":"m.text"},"ts":1261977780000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"So I'm wondering if I should go with <article><header><h1>Title</h1></header><section class=\"post-body\"><p>... instead","msgtype":"m.text"},"ts":1261977781000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Or something entirely different.","msgtype":"m.text"},"ts":1261977782000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"The HTML5 draft spec seems a bit vague in its examples; it says \"A general rule is that the section element is appropriate only if the element's contents would be listed explicitly in the document's outline.\" and \"Examples of sections would be chapters, the various tabbed pages in a tabbed dialog box, or the numbered sections of a thesis. A Web site's home page could be split into sections for an introduction, news items, contact information.\"","msgtype":"m.text"},"ts":1261977900000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Hixie: HTML5 may not be at the point for what's \"right\" or \"wrong\", but maybe just suggestions on semantics right now. I don't know","msgtype":"m.text"},"ts":1261978020000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Any ideas?","msgtype":"m.text"},"ts":1261978440000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"jtbandes: sorry, got distracted","msgtype":"m.text"},"ts":1261979580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1261979581000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"jtbandes: basically, use <section> for anything where you would feel ok giving a section title (<h1>) and including that section title in a table of contents","msgtype":"m.text"},"ts":1261979582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jtbandes: and use <div> if the only reason you have the element is styling or scripting","msgtype":"m.text"},"ts":1261979640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: does <article>/<hgroup>/something start a new heading level like <section> does?","msgtype":"m.text"},"ts":1261979700000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"<article>, <nav>, <section>, and <aside> are the same in that respect, yes","msgtype":"m.text"},"ts":1261979820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Would this make sense then? <section id=\"main\"><h1>Posts</h1><article><header><h1>Title</h1></header><section class=\"post-body\"><p>...","msgtype":"m.text"},"ts":1261979940000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"no need for the post-body one","msgtype":"m.text"},"ts":1261980000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"other than that, yes","msgtype":"m.text"},"ts":1261980001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I feel like I should mark up the body of each <article>","msgtype":"m.text"},"ts":1261980060000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"If nothing else, to make styling the first <p> element easier","msgtype":"m.text"},"ts":1261980061000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"jtbandes: use <div> for that","msgtype":"m.text"},"ts":1261980420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hm","msgtype":"m.text"},"ts":1261980421000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"(if tabatkins reads the archives... there's another example of why we should fix <di> in CSS/DOM rather than in markup)","msgtype":"m.text"},"ts":1261980422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: <di>?","msgtype":"m.text"},"ts":1261981560000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"a long running discussion unrelated to what you're talking about, don't worry :-)","msgtype":"m.text"},"ts":1261981620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But I'm curious now :)","msgtype":"m.text"},"ts":1261981621000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"it's hard to style grounps of <dt>/<dd>s","msgtype":"m.text"},"ts":1261981680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(as well as groups of lots of other things, like the stuff after an <h1> in a <section>, as you mentioned)","msgtype":"m.text"},"ts":1261981681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, in that particular case it'd be p:first-of-type, but that's CSS3 and not widely supported","msgtype":"m.text"},"ts":1261981740000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"so some people, instead of suggesting we fix CSS to make it possible to style these groups once and for all, think we should have authors who want to style those sections add <di> elements to their <dl>s to wrap the groups","msgtype":"m.text"},"ts":1261981741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1261981742000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"it's not as bad as i made it sound","msgtype":"m.text"},"ts":1261981743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but these are the kinds of things we often talk about in #whatwg :-)","msgtype":"m.text"},"ts":1261981800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"afk, playing game","msgtype":"m.text"},"ts":1261981801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is WhatWG responsible for CSS too?","msgtype":"m.text"},"ts":1261981802000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Because I really want nested selectors... like #main { ...styles... p { line-height: 1.3em;... } } ","msgtype":"m.text"},"ts":1261981860000,"senderName":"jtbandes","senderId":"jtbandes@irc"},
{"content":{"body":"Yeah, I'd like to be able style elements based on what children they have....","msgtype":"m.text"},"ts":1262003880000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(in response to jtbandes and Hixie from 6 hours ago)","msgtype":"m.text"},"ts":1262003940000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"zcorpan: I think xml-stylesheet checking is now passing all test cases you've given so far","msgtype":"m.text"},"ts":1262003941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: cool","msgtype":"m.text"},"ts":1262004000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: did you remove the rest of the win1252 table?","msgtype":"m.text"},"ts":1262004001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm sure there are some other bugs in there that we've not found so far","msgtype":"m.text"},"ts":1262004002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: no","msgtype":"m.text"},"ts":1262004060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"should I?","msgtype":"m.text"},"ts":1262004061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't actually even know what that's for","msgtype":"m.text"},"ts":1262004062000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes, xml charref has no fixups","msgtype":"m.text"},"ts":1262004063000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1262004064000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll remove it now","msgtype":"m.text"},"ts":1262004065000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's for &#x80; showing a eurosign instead of a control character in text/html","msgtype":"m.text"},"ts":1262004180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1262004181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so the whole of C1 controls range is allowed?","msgtype":"m.text"},"ts":1262004240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or I should still emit an error for that","msgtype":"m.text"},"ts":1262004241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1262004242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you should emit an err if the expanded character is not:","msgtype":"m.text"},"ts":1262004300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"[2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF] /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */","msgtype":"m.text"},"ts":1262004301000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.w3.org/TR/REC-xml/#NT-Char","msgtype":"m.text"},"ts":1262004302000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1262004360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(and possibly warn for control characters and undefined unicode characters)","msgtype":"m.text"},"ts":1262004361000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(and \"compatibility characters\", whatever they are)","msgtype":"m.text"},"ts":1262004480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK, I ripped out the win1252 stuff and pushed an update to qa-dev","msgtype":"m.text"},"ts":1262004720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can add the other warnings later","msgtype":"m.text"},"ts":1262004721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1262004900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: update patch is at http://bugzilla.validator.nu/attachment.cgi?id=136 ","msgtype":"m.text"},"ts":1262004960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that includes some other stuff I added recently","msgtype":"m.text"},"ts":1262004961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"charset checker","msgtype":"m.text"},"ts":1262004962000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if you see anything remaining in the XmlStylesheetChecker code that looks wrong/suspicious, lemme know","msgtype":"m.text"},"ts":1262005080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw, I think will suggest to hsivonen that we change the name of that to LexicalChecker","msgtype":"m.text"},"ts":1262005081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1262005082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because due to the need to check if instancesd of xml-stylesheets PIs are in doctype declarations, it now has to be an implementation of SAX LexicalHandler","msgtype":"m.text"},"ts":1262005140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so we could choose to turn it into a variety lexical checker that includes specific checking for xml-stylesheet PI content","msgtype":"m.text"},"ts":1262005200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(though the xml-stylesheet checking is itself not lexical)","msgtype":"m.text"},"ts":1262005260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but one other thing that comes to mind that it could potentially be used for is warning about CDATA secions","msgtype":"m.text"},"ts":1262005380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*sections","msgtype":"m.text"},"ts":1262005381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why would you warn about cdata sections?","msgtype":"m.text"},"ts":1262005440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"for checking reverse-polygot document case -- people who have XHTML documents and want to test to make sure they can be parsed as text/html","msgtype":"m.text"},"ts":1262005441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we can warn, \"Document contains CDATA sections; can't be parsed as text/html.\"","msgtype":"m.text"},"ts":1262005500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1262005501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1262005502000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess maybe the htmlparser already warns about that","msgtype":"m.text"},"ts":1262005503000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks","msgtype":"m.emote"},"ts":1262005504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah, i thought polyglot checking would be code in the html parser checking for xml compat","msgtype":"m.text"},"ts":1262005505000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"you should prolly rename it also for XBL","msgtype":"m.text"},"ts":1262005560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though that depends on whether we'll still introduce <?xbl?> or not","msgtype":"m.text"},"ts":1262005561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can have cdata sections in foreign lands","msgtype":"m.text"},"ts":1262005562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well, we could check and report it only if it's not in foreign lands","msgtype":"m.text"},"ts":1262005620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1262005621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe I can just rename the class VarietyChecker","msgtype":"m.text"},"ts":1262005680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that makes it sound fun","msgtype":"m.text"},"ts":1262005681000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: remind me, the idea of having a PI for CORS has been dropped?","msgtype":"m.text"},"ts":1262005740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk, zcorpan : btw, I notice that v.nu checking for media-query values seems to fail for many examples in the current draft","msgtype":"m.text"},"ts":1262005800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is it worth updating/fixing it at this point?","msgtype":"m.text"},"ts":1262005860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i'm not really up to speed with mq status, but i'm under the impressino that browsers are pretty aligned with the latest draft","msgtype":"m.text"},"ts":1262005920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if that's the case, I guess I should look into updating it","msgtype":"m.text"},"ts":1262005980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the fixes might be simple","msgtype":"m.text"},"ts":1262006040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, probably not simple","msgtype":"m.text"},"ts":1262006041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but maybe not too difficult","msgtype":"m.text"},"ts":1262006042000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, yes","msgtype":"m.text"},"ts":1262006460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1262006461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, dunno about media queries","msgtype":"m.text"},"ts":1262006462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they'd require a full CSS parser to properly support","msgtype":"m.text"},"ts":1262006463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1262006520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you can use e.g. CSS escapes and all","msgtype":"m.text"},"ts":1262006521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if there's a java CSS parsing library","msgtype":"m.text"},"ts":1262006522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if so, we could just import and use that","msgtype":"m.text"},"ts":1262006523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, there's the W3C CSS parser right?","msgtype":"m.text"},"ts":1262006524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't that in Java?","msgtype":"m.text"},"ts":1262006525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would be cool if it could be integrated so <style> style=\"\" etc. can be checked too","msgtype":"m.text"},"ts":1262006580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you'd want to check external css too if you're checking css","msgtype":"m.text"},"ts":1262006640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: yeah, current w3c css validator is written in java","msgtype":"m.text"},"ts":1262006641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and feeds, etc.","msgtype":"m.text"},"ts":1262006642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1262006643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and images","msgtype":"m.text"},"ts":1262006644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should prolly have a checkbox for external resources","msgtype":"m.text"},"ts":1262006700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"BN","msgtype":"m.text"},"ts":1262006760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"BN?","msgtype":"m.text"},"ts":1262006761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the css valididator exposes a rest interface, I guess I could maybe just use that","msgtype":"m.text"},"ts":1262006762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: <?xml-stylesheet HREF=\"\"?> is invalid","msgtype":"m.text"},"ts":1262006820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK","msgtype":"m.text"},"ts":1262006821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks now","msgtype":"m.emote"},"ts":1262006822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah crap","msgtype":"m.text"},"ts":1262006880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"css validator only has a soap interface, I guess","msgtype":"m.text"},"ts":1262006881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I see now that's an side effect of the fact I'm using switch/case for checking the attribute names","msgtype":"m.text"},"ts":1262007000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"switch/case is case-insensitive?","msgtype":"m.text"},"ts":1262007001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: i thought it was because of  c += 0x20; in various places","msgtype":"m.text"},"ts":1262007060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: in java you can only use constants in case statements","msgtype":"m.text"},"ts":1262007061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I was just following the convention of using uppercase for constants","msgtype":"m.text"},"ts":1262007120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the lowercasing to compare","msgtype":"m.text"},"ts":1262007121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Java is weird","msgtype":"m.text"},"ts":1262007122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: probably that too","msgtype":"m.text"},"ts":1262007180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though Python does not have case/switch at all, which is also somewhat weird","msgtype":"m.text"},"ts":1262007181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: your tokenizer normalizes pseudo-attributes to lowercase","msgtype":"m.text"},"ts":1262007182000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: the constants' names shouldn't matter, should they?","msgtype":"m.text"},"ts":1262007183000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it matters in this case because I convert the name of the attribute and uppercase it and compare that to the constant name","msgtype":"m.text"},"ts":1262007300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can just make the constant names lowercase","msgtype":"m.text"},"ts":1262007360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or just change it all to if","msgtype":"m.text"},"ts":1262007361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1262007362000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, I can see I need to remove all that c += 0x20 stuff","msgtype":"m.text"},"ts":1262007420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I gotta drop off for now","msgtype":"m.text"},"ts":1262007600000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders, did you ever do header encoding tests with XHR?","msgtype":"m.text"},"ts":1262017620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders, the spec should be more explicit on the manner, but isn't currently","msgtype":"m.text"},"ts":1262017621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"implementation code of this seems to be somewhat messy as well","msgtype":"m.text"},"ts":1262018400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I cannot even find where things are going from string to byte sequence","msgtype":"m.text"},"ts":1262018640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hack","msgtype":"m.text"},"ts":1262018641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, I didn't get that far (I was always more concerned with the basic syntax, never got to semantics)","msgtype":"m.text"},"ts":1262028240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: k, it's just you having said all tests pass somewhere (in a bug?)","msgtype":"m.text"},"ts":1262028300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: heh. I didn't expect so much appreciation :)","msgtype":"m.text"},"ts":1262028301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: And you're engaged? congrats on taht","msgtype":"m.text"},"ts":1262028302000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*that","msgtype":"m.text"},"ts":1262028303000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: As for how do you use it, first thing to do is to wait for it to be finished, seeming I guess you want a TOC :)","msgtype":"m.text"},"ts":1262028480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, too bad","msgtype":"m.text"},"ts":1262032980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone familiar with an IRC channel more specifically focused on Canvas?","msgtype":"m.text"},"ts":1262034960000,"senderName":"whiteinge","senderId":"whiteinge@irc"},
{"content":{"body":"Would the WHATWG or public-iri@w3c be the best place to ask about IRI bis?","msgtype":"m.text"},"ts":1262040060000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"public-iri","msgtype":"m.text"},"ts":1262041080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what do you wanna ask foolip?","msgtype":"m.text"},"ts":1262041081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want to ask if query string parsing should be a part of IRI bis, another IETF spec or maybe something else","msgtype":"m.text"},"ts":1262041380000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"IRI bis says \"Specifications that define the syntax of any of the above components MAY divide them further and define smaller parts to be components according to this document.\"","msgtype":"m.text"},"ts":1262041500000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'm not really sure what exactly that means though","msgtype":"m.text"},"ts":1262041560000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I've reverse engineered PHP, ASP (VBScript) and JSP a bit and they seem to work mostly in compatible ways, only interesting differences are in how they treat malformed %XX entities","msgtype":"m.text"},"ts":1262041620000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Doesn't Perl do some totally different thing involving semicolons?","msgtype":"m.text"},"ts":1262041740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: aha, might that be the source of the mysterious W3C suggestion that implementations handle both & and ; as a separator?","msgtype":"m.text"},"ts":1262041741000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I dunno, I just know that Perl apps tend to use semicolons where I'd expect ampersands.","msgtype":"m.text"},"ts":1262041800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"E.g.: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=6b7b284958d47b77d06745b36bc7f36dab769d9b","msgtype":"m.text"},"ts":1262041801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I know very little about Perl, is there even a standard module used for this kind of thing?","msgtype":"m.text"},"ts":1262041802000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Perl seems to have standard modules for everything.","msgtype":"m.text"},"ts":1262041860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't do Perl either, though.","msgtype":"m.text"},"ts":1262041861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"meh","msgtype":"m.text"},"ts":1262041862000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"sounds worthwhile investigating though","msgtype":"m.text"},"ts":1262041863000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: The \"CGI\" module is the standard#","msgtype":"m.text"},"ts":1262042220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/#//","msgtype":"m.text"},"ts":1262042221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The other standard is the regexps in whatever tutorials/examples people copy-and-paste argument-splitting code from","msgtype":"m.text"},"ts":1262042280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: learning about CGI feels like going back in time :)","msgtype":"m.text"},"ts":1262042281000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"The other other standard is probably whatever mod_perl does","msgtype":"m.text"},"ts":1262042282000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"foolip: Perl often uses the CGI module API even if the implementation is not actually based on CGI","msgtype":"m.text"},"ts":1262042340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: ok, thanks","msgtype":"m.text"},"ts":1262042341000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"CGI.pm splits on /[&;]/","msgtype":"m.text"},"ts":1262042400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"then it splits key/value on the first =","msgtype":"m.text"},"ts":1262042401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(or puts everything in key if no value)","msgtype":"m.text"},"ts":1262042402000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and sets value to \"\")","msgtype":"m.text"},"ts":1262042460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"then it unescapes key, and unescapes value","msgtype":"m.text"},"ts":1262042461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sounds like everyone else appart from the ;","msgtype":"m.text"},"ts":1262042462000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"where unescape finds /%(?:([0-9a-fA-F]{2})|u([0-9a-fA-F]{4}))/ and decodes as hex","msgtype":"m.text"},"ts":1262042520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"foolip, it seems you can parse it however you like","msgtype":"m.text"},"ts":1262042521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"much like you can parse /foo/bar however you like on the server","msgtype":"m.text"},"ts":1262042522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unless you're running on EBCDIC in which case it finds /%([0-9a-fA-F]{2})/ and decodes as ASCII hex","msgtype":"m.text"},"ts":1262042523000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1262042580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, and unescape replaces '+' with ' ' before that","msgtype":"m.text"},"ts":1262042581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: yes, but the problem is that the media fragments WG wants define something on top of something that looks like a query string","msgtype":"m.text"},"ts":1262042582000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1262042640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, %u422A is actually a valid percent escape?","msgtype":"m.text"},"ts":1262042641000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I've never seen that format actually","msgtype":"m.text"},"ts":1262042642000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"and they expect it to be processed client-side?","msgtype":"m.text"},"ts":1262042643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Valid for Perl, I guess.","msgtype":"m.text"},"ts":1262042700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk: client side for #t=10 and server-side for ?t=10","msgtype":"m.text"},"ts":1262042701000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"it seems to me they should stick to #syntax and define some kind of HTTP header","msgtype":"m.text"},"ts":1262042702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Isn't there some standard for encoding GET form data in query strings?","msgtype":"m.text"},"ts":1262042703000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"there is","msgtype":"m.text"},"ts":1262042704000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"in HTML5","msgtype":"m.text"},"ts":1262042705000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but none for decoding","msgtype":"m.text"},"ts":1262042706000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1262042707000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that I have found anyway","msgtype":"m.text"},"ts":1262042760000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"     #!/usr/bin/perl -w","msgtype":"m.text"},"ts":1262042761000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"     print \"Content-type: text/html\\n\\n\";","msgtype":"m.text"},"ts":1262042762000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"sorry :/","msgtype":"m.text"},"ts":1262042763000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"it seems a very fragile approach to me","msgtype":"m.text"},"ts":1262042764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If this is just for media fragments, can't you just require it to behave like HTML5 requires it gets output?  Or is there some reason you want compatibility with major scripting languages?","msgtype":"m.text"},"ts":1262042765000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"how many implementors reviewed this?","msgtype":"m.text"},"ts":1262042766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't really believe such a thing would get past basic review","msgtype":"m.emote"},"ts":1262042767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the reason is that I'm meeting resistance when saying that the WG should define the processing requirements of this syntax, because presumably it belongs in another spec","msgtype":"m.text"},"ts":1262042820000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: I haven't seen any browser vendors apart from Opera (me) make significant noise since I joined","msgtype":"m.text"},"ts":1262042880000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"are they part of the group though?","msgtype":"m.text"},"ts":1262042881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I agree that some group should define processing requirements","msgtype":"m.text"},"ts":1262042940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think some of the Apple guys are","msgtype":"m.text"},"ts":1262042941000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: UAs will of course just ignore the query string, but we need to know what to do for fragment URIs","msgtype":"m.text"},"ts":1262042942000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if HTML5 keeps the definition of encoding it should also define how to decode imo","msgtype":"m.text"},"ts":1262042943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which part in particular do you think is fragile?","msgtype":"m.text"},"ts":1262042944000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"looks in","msgtype":"m.emote"},"ts":1262043000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wassup","msgtype":"m.text"},"ts":1262043001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that one part is for the client and one part for the server","msgtype":"m.text"},"ts":1262043002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and that the server part might use names already in use","msgtype":"m.text"},"ts":1262043003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well HTML5 defines how to encode form data, what we are decoding isn't really form data, but I wouldn't mind if it's in HTML5","msgtype":"m.text"},"ts":1262043004000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: it's not the intention that both be used at once, and in either case the server part is opaque to the client and vice versa","msgtype":"m.text"},"ts":1262043060000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"apparently the thinking is that in some cases doing the chopping on the server is faster, e.g. archive.org already implements this","msgtype":"m.text"},"ts":1262043120000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: what are \"names already in use\"?","msgtype":"m.text"},"ts":1262043121000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"what if I have a resource that's named /x?t=10","msgtype":"m.text"},"ts":1262043122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(not sure if t is the right param name)","msgtype":"m.text"},"ts":1262043123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's right","msgtype":"m.text"},"ts":1262043124000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Hixie, discussing media fragments","msgtype":"m.text"},"ts":1262043180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, I doubt anyone ever considered that","msgtype":"m.text"},"ts":1262043181000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Hixie, oh, and whether HTML5 should define how to decode <form> GET URLs besides defining how to encode them","msgtype":"m.text"},"ts":1262043182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in my feedback I have pretended the query string part doesn't exist, because it is irrelevant to UAs","msgtype":"m.text"},"ts":1262043240000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip, also, apart from maybe the fragment URIs are supposed to be opaque","msgtype":"m.text"},"ts":1262043241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the server assigns meaning to it for sure, but with this the client and server have some shared understanding of a part of the URI","msgtype":"m.text"},"ts":1262043300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean that the server doesn't get to see the fragment part","msgtype":"m.text"},"ts":1262043301000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"it feels somewhat wrong","msgtype":"m.text"},"ts":1262043302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there is no shared part","msgtype":"m.text"},"ts":1262043303000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip, sure, the query part","msgtype":"m.text"},"ts":1262043304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the UA doesn't (shouldn't) care about that","msgtype":"m.text"},"ts":1262043305000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the UA generates it and the server is expected to respond in a particular way","msgtype":"m.text"},"ts":1262043360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the UA doesn't, how does the server ever get it?","msgtype":"m.text"},"ts":1262043361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, the UA doesn't generate a query string","msgtype":"m.text"},"ts":1262043362000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the UA can either be clever and seek to the right place with simple heuristics and range requests, or use the HTTP headers that the WG is defining","msgtype":"m.text"},"ts":1262043363000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"so why do we have the query string?","msgtype":"m.text"},"ts":1262043420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and who will be using it?","msgtype":"m.text"},"ts":1262043421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. archive.org uses it, or something that looks like it","msgtype":"m.text"},"ts":1262043422000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"however, I would be happy if it wasn't in the spec at all","msgtype":"m.text"},"ts":1262043480000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'm not sure why it would need to be defined","msgtype":"m.text"},"ts":1262043481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"presumably because it is convenient to use the same syntax for both, or something like that","msgtype":"m.text"},"ts":1262043482000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"and because server-side implementations actually exist","msgtype":"m.text"},"ts":1262043540000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"why would we need to define how to decode the query component? What's the interoperability concern?","msgtype":"m.text"},"ts":1262043541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But you don't need standards if it's done purely on the server side . . .","msgtype":"m.text"},"ts":1262043542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Surely each URL can only be read by one server","msgtype":"m.text"},"ts":1262043543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there's nothing to interoperate with","msgtype":"m.text"},"ts":1262043600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess the idea is to standardize a common API for media resources","msgtype":"m.text"},"ts":1262043601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I'm not really interested in decoding a query string, I'm interested in decoding a fragment component which uses the same syntax as a query string","msgtype":"m.text"},"ts":1262043602000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but I'm not sure why that needs to be standardized...","msgtype":"m.text"},"ts":1262043603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The fragment component decoding can be done on UAs, so that needs to be standardized.","msgtype":"m.text"},"ts":1262043660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In fact, it has to be done on UAs.","msgtype":"m.text"},"ts":1262043661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: exactly","msgtype":"m.text"},"ts":1262043662000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"well surely the fragment component decoding would be defined by the spec that defines the fragment?","msgtype":"m.text"},"ts":1262043663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that's what I've been trying to argue for","msgtype":"m.text"},"ts":1262043664000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"sounds good to me","msgtype":"m.text"},"ts":1262043665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, well, the idea would be to define how servers can get the data out of the URL","msgtype":"m.text"},"ts":1262043666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, I've been a bit thrown off by the query string issue it seems","msgtype":"m.text"},"ts":1262043720000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Hixie, if you define how that works presumably you can swap the software that gets data out of the URL","msgtype":"m.text"},"ts":1262043721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just define some subset of generally-used query string encoding.","msgtype":"m.text"},"ts":1262043722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk: presumably that would be defined by the spec for that software","msgtype":"m.text"},"ts":1262043723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: different servers have different needs for how to parse query components","msgtype":"m.text"},"ts":1262043724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, it seems to me it's sort of an integral part of <form> submission","msgtype":"m.text"},"ts":1262043780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. http://example.com/?foo+bar vs http://example.com/?a=b&c=d vs http://example.com/a=b;c=d","msgtype":"m.text"},"ts":1262043781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"these are all valid query components","msgtype":"m.text"},"ts":1262043782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but they need different parsing rules","msgtype":"m.text"},"ts":1262043783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems that one should do either (1) define how to parse a query string (probably in another spec) and reuse that definition for the fragment part in MF or (2) remove any mention of query strings from MF and just define how to parse the fragment component","msgtype":"m.text"},"ts":1262043784000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Hixie, I think you're missing a ? in the last.","msgtype":"m.text"},"ts":1262043785000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"er yes","msgtype":"m.text"},"ts":1262043786000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip, (2) sounds more sensible.  Just make up something simple.","msgtype":"m.text"},"ts":1262043840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"We don't define how to parse query strings for anything else, no reason to start for media fragments.","msgtype":"m.text"},"ts":1262043841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ok, I don't expect arguing this line is going to be easy though","msgtype":"m.text"},"ts":1262043900000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I agree it makes the most sense however","msgtype":"m.text"},"ts":1262043901000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"will try writing an email suggesting as much tomorrow when my brain has slept","msgtype":"m.text"},"ts":1262043902000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks all","msgtype":"m.text"},"ts":1262044080000,"senderName":"foolip","senderId":"foolip@irc"}
]