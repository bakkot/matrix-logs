[
{"content":{"body":"wonders what the cleverer approach is","msgtype":"m.emote"},"ts":1258071120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it sounds like \"given a tree to work with\" is not aiming at the same use case","msgtype":"m.text"},"ts":1258071240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, didn't sound like it would be backwards compatible with XML 1.x","msgtype":"m.text"},"ts":1258071300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it also doesn't sound like it would address surface syntax well-formedness errors, given that description","msgtype":"m.text"},"ts":1258071360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm somewhat annoyed people just throw out assertions like that without at least a little information","msgtype":"m.text"},"ts":1258071361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if he means http://conferences.idealliance.org/extreme/html/2007/Thompson01/EML2007Thompson01.html","msgtype":"m.text"},"ts":1258071362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but that seems schema-based","msgtype":"m.text"},"ts":1258071363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should outline XML5 on the list as Tony suggested","msgtype":"m.text"},"ts":1258071600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not today, well, this hour of today","msgtype":"m.text"},"ts":1258071660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose XML5 is an alternate path to getting Distributed Extensibility + Tolerant Error Handling in the same syntax","msgtype":"m.text"},"ts":1258071900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Assuming XML Namespaces is sufficient for Distributed Extensibility","msgtype":"m.text"},"ts":1258071960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"most of the proposals we have heard seem predicated on that assumption","msgtype":"m.text"},"ts":1258072080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It could be a wrong assumption, depending on what the requirements of DE are","msgtype":"m.text"},"ts":1258072140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's actually namespaces + draconian error handling + ambiguity about whether external entities are considered or not","msgtype":"m.text"},"ts":1258072200000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"e.g. it might be reasonable to want extensions to degrade gracefully and behave like standard elements when not supported, which isn't something namespaces support","msgtype":"m.text"},"ts":1258072201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: my proposal for vendor-prefixed attributes would handle that kind of use case better I think","msgtype":"m.text"},"ts":1258072500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wonders why people and/or mail clients still send smileys using the Wingdings font","msgtype":"m.emote"},"ts":1258110060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Are they aware it gets rendered as \"J\" for many people?","msgtype":"m.text"},"ts":1258110061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thinks Philip` gets more \"exciting\" email than he does","msgtype":"m.emote"},"ts":1258110300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can't say I've noticed any such mail","msgtype":"m.text"},"ts":1258110360000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"See the latest one on public-html","msgtype":"m.text"},"ts":1258110361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"...assuming you see the HTML version of it, not the plain text version","msgtype":"m.text"},"ts":1258110420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Also see http://blogs.msdn.com/oldnewthing/archive/2006/05/23/604741.aspx etc)","msgtype":"m.text"},"ts":1258110480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"This one? http://lists.w3.org/Archives/Public/public-html/2009Nov/0356.html","msgtype":"m.text"},"ts":1258110720000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1258110721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but the HTML version of it)","msgtype":"m.text"},"ts":1258110722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(e.g. as shown by Gmail)","msgtype":"m.text"},"ts":1258110780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"plain text email ++","msgtype":"m.text"},"ts":1258110781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<p class=MsoNormal><font size=2 face=Arial><span lang=EN-GB style='font-size: 10.0pt;font-family:Arial'>Maybe something like this is already in progress&nbsp;</span></font><font size=2 face=Wingdings><span lang=EN-GB style='font-size:10.0pt;font-family: Wingdings'>J</span></font><font size=2 face=Arial><span lang=EN-GB style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></font></p>","msgtype":"m.text"},"ts":1258110840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: I've not been able to find a way to make Gmail always show the plain text variant :-(","msgtype":"m.text"},"ts":1258110841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You could use a different mail client","msgtype":"m.text"},"ts":1258110900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I do use a different mail client too","msgtype":"m.text"},"ts":1258110901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but Gmail is a much more convenient interface","msgtype":"m.text"},"ts":1258110960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's a lot of bytes of markup","msgtype":"m.text"},"ts":1258110961000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: At least Word takes care to optimise it by omitting needless quotes","msgtype":"m.text"},"ts":1258110962000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: regarding the requirements of DE, I believe the requirements are that you need to use colons and URIs","msgtype":"m.text"},"ts":1258111380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Are you sure XML isn't a requirement? Other alternatives seem to face the \"But we already have lots of stuff using XML and namespaces, why invent something new?\" argument.","msgtype":"m.text"},"ts":1258111560000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: it seems to me that it's not a requirement to use an XML parser for text/html.","msgtype":"m.text"},"ts":1258111860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I thought it was usually a requirement that you could process DEed text/html with an XML parser","msgtype":"m.text"},"ts":1258111920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"just like you can with XHTML today","msgtype":"m.text"},"ts":1258111980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If not a requirement, at least a goal","msgtype":"m.text"},"ts":1258111981000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"even if browsers do some weird crazy hacky thing instead of using an XML parser","msgtype":"m.text"},"ts":1258111982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but never mind what they do, because you can just use XML","msgtype":"m.text"},"ts":1258111983000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the recent wikipedia case shows how hard that is","msgtype":"m.text"},"ts":1258111984000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That's only because browsers sabotage it on purpose","msgtype":"m.text"},"ts":1258112040000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"but I concede that that's a goal. I meant it isn't a requirement to make browsers process text/html using an XML parser.","msgtype":"m.text"},"ts":1258112041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think XML Core has sabotaged &nbsp; in XML on its own","msgtype":"m.text"},"ts":1258112100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The goal seems to be that everything is XML+colons+URIs and that tag soup is a dim and forgotten memory","msgtype":"m.text"},"ts":1258112640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But the goal is not necessarily achievable :)","msgtype":"m.text"},"ts":1258112641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: Unless you assume that external entities are just candy to silence objectors, and that the real expectation was that everyone would ignore them :)","msgtype":"m.text"},"ts":1258112820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"RDFa 1.1 is apparently going to support raw URIs as well as CURIEs","msgtype":"m.text"},"ts":1258113000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"backcompat++","msgtype":"m.text"},"ts":1258113060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And the CURIEs will remain unsafe?","msgtype":"m.text"},"ts":1258113061000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"wonders if you will have to put a version attribute somewhere to make them work","msgtype":"m.emote"},"ts":1258113062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dashiva: I suspect that external entities were allowed as optinal to resolve an otherwise unresolved difference of opinion in the original XML WG, but I haven't read the archives to confirm or refute my guess","msgtype":"m.text"},"ts":1258113063000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Dashiva: and then it backfired due to MathML and &nbsp;","msgtype":"m.text"},"ts":1258113120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: Sounds like they do want to add versioning","msgtype":"m.text"},"ts":1258113180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems a bit silly to introduce incompatible versions before there's even a relevant deployed corpus","msgtype":"m.text"},"ts":1258113240000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: But millions of sites already use RDFa!","msgtype":"m.text"},"ts":1258113241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dashiva: RDFa is already deployed by the biggest players: U.S. and U.K. gov'ts, Google, Y! and Drupal!111!!11!!","msgtype":"m.text"},"ts":1258113300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Indeed, but it's all generated, so they just have to change a script or two","msgtype":"m.text"},"ts":1258113360000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"wonders if the IBM and Boeing intranets already have millions of RDFa pages","msgtype":"m.emote"},"ts":1258113361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well allegedly lots of people are using RDFa to make better search result listings on Yahoo or whatever","msgtype":"m.text"},"ts":1258113362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And they might have tediously coded every instance by hand","msgtype":"m.text"},"ts":1258113420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: Do you really think that streamability is essential in XML5 under error conditions?","msgtype":"m.text"},"ts":1258113480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yes","msgtype":"m.text"},"ts":1258113540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So you couldn't go back and adjust, say, the attributes on a previous element","msgtype":"m.text"},"ts":1258113541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you can't support streamability under error conditions, you can't support it at all","msgtype":"m.text"},"ts":1258113542000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think the worst problem is that you close the root element and find start tags after","msgtype":"m.text"},"ts":1258113600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"since you'll have already streamed the output before you found the error condition","msgtype":"m.text"},"ts":1258113601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I meant supporting only the kind of error correction where the parser has a fixed finite amount of internal state","msgtype":"m.text"},"ts":1258113602000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: You can require streaming parsers to stop, like HTML5 does","msgtype":"m.text"},"ts":1258113603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: and anything the parser reports to the app has been committed to","msgtype":"m.text"},"ts":1258113660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm envisioning the HTML5 tokenizer","msgtype":"m.text"},"ts":1258113661000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and a tree builder that commits to its actions on a per-token basis","msgtype":"m.text"},"ts":1258113662000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"even if the resulting fixups can't be as fancy as the AAA or foster-parenting","msgtype":"m.text"},"ts":1258113720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: It seems bad to design a language so that people have to choose between performance (streaming) and robustness (non-streaming, error-correcting) and non-conformance (streaming, error-correcting-in-a-different-way)","msgtype":"m.text"},"ts":1258113721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"as far as I can tell, the main problem is that if you happen to close the root element, all the subsequent non-comment tokens have to be discarded","msgtype":"m.text"},"ts":1258113780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(of course, PIs should be tokenized as PIs)","msgtype":"m.text"},"ts":1258113781000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I'd be inclined to kill the internal subset","msgtype":"m.text"},"ts":1258113782000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(which are the three choices the validator.nu SAX parser offers)","msgtype":"m.text"},"ts":1258113840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: It depends how much worse the error correction has to be to support the SAX case","msgtype":"m.text"},"ts":1258113841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For the web the sax case seems less important because typical UAs are required to build trees anyway","msgtype":"m.text"},"ts":1258113842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: XML content doesn't have fancy legacy fixup requirements","msgtype":"m.text"},"ts":1258113900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: I don't expect XML5 parsers to ever work as general-purpose text/html parser","msgtype":"m.text"},"ts":1258113901000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s","msgtype":"m.text"},"ts":1258113902000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Sure. I don't know in practice how big the tradeoffs are you would have to make to get streaming support","msgtype":"m.text"},"ts":1258113903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"since you'd want an XML5 parser support non-html root elements","msgtype":"m.text"},"ts":1258113904000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Would offloading parsing into a separate thread become much easier if the parser was streaming?","msgtype":"m.text"},"ts":1258113960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"basically the rule is this:","msgtype":"m.text"},"ts":1258113961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if you get a start tag, create and insert the element","msgtype":"m.text"},"ts":1258113962000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if you get an end tag, and there's a matching start on the stack, pop up to and including the latest start","msgtype":"m.text"},"ts":1258113963000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if not, ignore the end tag","msgtype":"m.text"},"ts":1258113964000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"But given something that dealt gracefully with more errors vs something that supported streaming it is not obvious to me that streaming should always win for all values of \"more\" and \"gracefully\"","msgtype":"m.text"},"ts":1258113965000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and once root is closed, throw away non-comment tokens","msgtype":"m.text"},"ts":1258114020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"then there's the issue of needing a non-Draconian Namespace layer on top of this thing","msgtype":"m.text"},"ts":1258114021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: It sounds like you can't do that with a fixed finite amount of internal state, since you have to maintain an unbounded stack of open elements","msgtype":"m.text"},"ts":1258114080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: true. the stack is allowed to be infinite","msgtype":"m.text"},"ts":1258114140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I suppose you could put it behind an XML firewall that prevents DOS attacks by limiting the nesting depth","msgtype":"m.text"},"ts":1258114141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The stack size is limited to input size / 3 at least :)","msgtype":"m.text"},"ts":1258114200000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"What do you do on EOF with non-empty stack?","msgtype":"m.text"},"ts":1258114201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: pop the whole stack","msgtype":"m.text"},"ts":1258114260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i.e. generate endElement callbacks for each stack item","msgtype":"m.text"},"ts":1258114261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What about the last text node, is that emitted?","msgtype":"m.text"},"ts":1258114262000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Seems kind of brittle if the input can be truncated","msgtype":"m.text"},"ts":1258114320000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"jgraham: How would you define \"gracefully\"? Would it be something like: consider a list of errors people make when producing XML (weighted by likelihood), and work out what output they wanted, and the error correction is more graceful if it gives that output?","msgtype":"m.text"},"ts":1258114321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Something like that","msgtype":"m.text"},"ts":1258114322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rather than just being the simplest thing that doesn't abort and doesn't lose all subsequent data when there's any error","msgtype":"m.text"},"ts":1258114323000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I was thinking of this from the POV of never throwing a fatal error and then just taking the simplest tree-builder-level recoveries","msgtype":"m.text"},"ts":1258114380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and using HTML5 tokenizer behaviors just in order to be able to copy and paste code","msgtype":"m.text"},"ts":1258114381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in fact, I once made a parser like this just in order to measure the cost of the HTML5 tree building part","msgtype":"m.text"},"ts":1258114440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Priority of constituencies :)","msgtype":"m.text"},"ts":1258114500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: A fatal error isn't any better for users than a stray </html> near the top of the page causing the rest of the page to vanish","msgtype":"m.text"},"ts":1258114501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Exception: Don't emit the root element close tag until EOF, even if you see it earlier","msgtype":"m.text"},"ts":1258114620000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It seems more non-draconian if you at least keep all the text content; e.g. ignore root element close tags entirely","msgtype":"m.text"},"ts":1258114621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I thought it was a requirement not to change the parser output for doctypeless XML 1.0 documents","msgtype":"m.text"},"ts":1258114680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Nobody's going to notice if comments-after-root-element change :-)","msgtype":"m.text"},"ts":1258114681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: people who write CSS whitespace handling test case notice changes in getting trailing ws getting hoisted into root element","msgtype":"m.text"},"ts":1258114740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*cases","msgtype":"m.text"},"ts":1258114741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"People who write test cases don't count :-p","msgtype":"m.text"},"ts":1258114800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the worst part of hoisting trailing WS is that you can't write round-trippable documents that don't cause diff to whine about lack of newline at the end of file","msgtype":"m.text"},"ts":1258114860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: I noticed that whitespace after </html> changed :)","msgtype":"m.text"},"ts":1258114861000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: are you a person who writes test cases? :-)","msgtype":"m.text"},"ts":1258114862000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"No, I write scripts that depend on body.lastChild","msgtype":"m.text"},"ts":1258114920000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"In XML documents?","msgtype":"m.text"},"ts":1258114921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Sure, why not","msgtype":"m.text"},"ts":1258114980000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hsivonen: Couldn't you just omit </html>, and then diff and round-trippers will be happy?","msgtype":"m.text"},"ts":1258114981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Sounds like you could just do away with an explicit root","msgtype":"m.text"},"ts":1258115040000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: good idea","msgtype":"m.text"},"ts":1258115041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: anyway, you'd still get a newline at the end of body in your CSS ws test cases","msgtype":"m.text"},"ts":1258115100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(the alternative, of course, is not to set non-default ws handling on body)","msgtype":"m.text"},"ts":1258115101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"however, there's existence proof for everything on the Web","msgtype":"m.text"},"ts":1258115160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I recall seeing a bug report about a Web page that changed ws handling on body in CSS","msgtype":"m.text"},"ts":1258115161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fortunately, that site wasn't sensitive to trailing ws","msgtype":"m.text"},"ts":1258115162000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: Gmail thinks every one of your coalescing emails is spam :-(","msgtype":"m.text"},"ts":1258115220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and nobody else's)","msgtype":"m.text"},"ts":1258115280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Great.","msgtype":"m.text"},"ts":1258115281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: the infamous spammer!","msgtype":"m.text"},"ts":1258115282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's your name","msgtype":"m.text"},"ts":1258115283000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It's obviously made-up","msgtype":"m.text"},"ts":1258115284000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Much like Dashiva.","msgtype":"m.text"},"ts":1258115340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't use that in email","msgtype":"m.text"},"ts":1258115341000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"How am I to know? You don't post on real mailing lists.","msgtype":"m.text"},"ts":1258115342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, but I do","msgtype":"m.text"},"ts":1258115400000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"You just don't notice. See previous statement.","msgtype":"m.text"},"ts":1258115401000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"wonders if gsnedders watches all mailing lists","msgtype":"m.emote"},"ts":1258115402000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"assumed it was German for The Hiva","msgtype":"m.emote"},"ts":1258115460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"For example Dashiva might post in the My Little Pony lovers list list ilove⊙mc under his real name on a daily basis","msgtype":"m.text"},"ts":1258115520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There is a German Dashiva out there. I think he plays counterstrike","msgtype":"m.text"},"ts":1258115521000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"played CS once, but 10% of it involved running around not knowing where anyone was, and 90% of it involved waiting to respawn in the next round","msgtype":"m.emote"},"ts":1258115640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so I don't trust anybody who claims to like it","msgtype":"m.text"},"ts":1258115641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can anybody (hsivonen maybe?) enlighten me on Aria roles on the section element? validator.nu says it's not allowed, but http://www.whatwg.org/specs/web-apps/current-work/multipage/content-models.html#annotations-for-assistive-technology-products-%28aria%29 says it is :-)","msgtype":"m.text"},"ts":1258115700000,"senderName":"davidhund","senderId":"davidhund@irc"},
{"content":{"body":"davidhund: Draft spec trumps validator.","msgtype":"m.text"},"ts":1258115701000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Philip`: You're supposed to cheat and look through walls","msgtype":"m.text"},"ts":1258115702000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"webben that's what I thought :-)","msgtype":"m.text"},"ts":1258115703000,"senderName":"davidhund","senderId":"davidhund@irc"},
{"content":{"body":"supposes someone ought to write evil parser test cases, to make sure parsers gracefully handle deep nesting and long names and text coalescence etc without crashing or taking forever","msgtype":"m.emote"},"ts":1258116540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And ones where the deep nesting is caused by AAA","msgtype":"m.text"},"ts":1258118640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"When do you hit 'Insert last node into node, first removing it from its previous parent node if any.' in AAA?","msgtype":"m.text"},"ts":1258118820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Try putting a 'raise' in the part of html5lib that implements that step, then run the tests, and hope someone already wrote a test for it :-)","msgtype":"m.text"},"ts":1258119660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: is the *[irrelevant] used anywhere?","msgtype":"m.text"},"ts":1258119900000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"<cite><b><cite><i><cite><i><cite><i><div>X</b>TEST","msgtype":"m.text"},"ts":1258120020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or simply:","msgtype":"m.text"},"ts":1258120021000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<DIV> abc <B> def <I> ghi <P> jkl </B>","msgtype":"m.text"},"ts":1258120022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan_: not sure","msgtype":"m.text"},"ts":1258120320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: <div>abc<b>def<i>ghi<p>jki</p></i></b><i><p>ghi</i></p>","msgtype":"m.text"},"ts":1258120380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or something?","msgtype":"m.text"},"ts":1258120381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://pastebin.com/m6568f05d","msgtype":"m.text"},"ts":1258120440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But I don't care atm about the final result","msgtype":"m.text"},"ts":1258120441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is wrong anyway","msgtype":"m.emote"},"ts":1258120500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Huh","msgtype":"m.text"},"ts":1258121040000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: anyway, it was renamed to hidden and ie6 will drop the ruleset because there's an attribute selector","msgtype":"m.text"},"ts":1258121041000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"So the above fragment runs through AAA twice","msgtype":"m.text"},"ts":1258121100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan_: good point. I didn't consider the renaming. ","msgtype":"m.text"},"ts":1258121101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Why would you need to keep track of why a text nodef was flushed and foster-parented?","msgtype":"m.text"},"ts":1258121700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: if foster-parenting normally doesn't coalesce","msgtype":"m.text"},"ts":1258121760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: and if I flush at the end of a packet boundary","msgtype":"m.text"},"ts":1258121761000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1258121820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: thanks for looking at the AAA","msgtype":"m.text"},"ts":1258122240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"argleblarg I hate windows that can go behind things but don't put an entry in the taskbar.","msgtype":"m.text"},"ts":1258122720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.dabs.com/ is incompatible with what's currently specced about defer scripts","msgtype":"m.text"},"ts":1258123980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"whee!","msgtype":"m.text"},"ts":1258124040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I now have an A4 piece of paper with scribbles of me trying to find something that would create adjacent text nodes all over it :)","msgtype":"m.text"},"ts":1258124100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen, does the site have other, non-deferred scripts relying on the variables set inside the deferred script?","msgtype":"m.text"},"ts":1258124160000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I haven't investigated","msgtype":"m.text"},"ts":1258124340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: the script is https://seal.globalsign.com/SiteSeal/gs_image_100-50_en.js","msgtype":"m.text"},"ts":1258124341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"whose purpose seems to be merely to write a Verisign badge","msgtype":"m.text"},"ts":1258124342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, I didn't see the document.write() in there before. I thought it was just declaring a few variables and a function","msgtype":"m.text"},"ts":1258124400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"argh. they even sniff for Firefox 3.5","msgtype":"m.text"},"ts":1258124401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and assume \"and higher\" has the same behavior as 3.5","msgtype":"m.text"},"ts":1258124402000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1258124403000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: I want to talk to you about html5lib sometime, FYI","msgtype":"m.text"},"ts":1258124520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ooh. It's because I have a browser that implements defer but doesn't have Firefox in the UA string","msgtype":"m.text"},"ts":1258124700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*sigh*","msgtype":"m.text"},"ts":1258124701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Web authors should know that the moment they look for \"Firefox\" or \"Safari\" in the UA string, they are writing a bug","msgtype":"m.text"},"ts":1258124880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm annoyed at sites that check for \"Firefox\", but this is way worse than the usual stuff that e.g. Google does","msgtype":"m.text"},"ts":1258125060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"at least Wave and Google Maps still let me click through","msgtype":"m.text"},"ts":1258125120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"\"\"There is a broad consensus not to accept any well-formedness violations and to reject any document that violates well-formedness instead of trying to fix the error. ","msgtype":"m.text"},"ts":1258130940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"However, there are some exceptions where it can be both necessary and safe to repair well-formedness violations, as long as this occurs not at the receiving side (XML parser) but at the generating side (XML generator)\"\"\"","msgtype":"m.text"},"ts":1258130941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess you can't upset too many people and get your paper published at the same time :)","msgtype":"m.text"},"ts":1258131000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where is this from?","msgtype":"m.text"},"ts":1258131001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"How does it matter which side of the pipe you correct errors on?","msgtype":"m.text"},"ts":1258131240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Cost to repair.","msgtype":"m.text"},"ts":1258131241000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(in terms of necessity and safety)","msgtype":"m.text"},"ts":1258131242000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If you repair once at the generator, it's better than repairing many times at every receiver.","msgtype":"m.text"},"ts":1258131300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Except that at least for the web, there are vastly more generators than receivers, so repairing at the receiver makes a lot more sense.","msgtype":"m.text"},"ts":1258131540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't understand, Aryeh.  It seems to me that there are far more browsers than servers, generally.","msgtype":"m.text"},"ts":1258131600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There are only about five browsers.","msgtype":"m.text"},"ts":1258131601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"With four layout engines between them.","msgtype":"m.text"},"ts":1258131602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Parsing, layout, whatever.","msgtype":"m.text"},"ts":1258131603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No, I wasn't talking implementation cost.  I was talking processor cost.","msgtype":"m.text"},"ts":1258131604000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I doubt processor cost is a big deal here.","msgtype":"m.text"},"ts":1258131660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm just saying, it's a factor.","msgtype":"m.text"},"ts":1258131661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Client CPU cycles are cheaper than server CPU cycles","msgtype":"m.text"},"ts":1258131720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"because clients have quad-core 3GHz processors at 0% load, and they can do a bit of parsing without breaking a sweat","msgtype":"m.text"},"ts":1258131780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Most clients don't have quad-core 3 GHz processors just yet.","msgtype":"m.text"},"ts":1258131960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I might be exaggerating but only a little bit :-p","msgtype":"m.text"},"ts":1258131961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Someone has just pointed out to me that MediaWiki doesn't actually output named entities in most cases.","msgtype":"m.text"},"ts":1258132560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Now that's a very interesting data point.","msgtype":"m.text"},"ts":1258132561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Basically the only ones are hardcoded in the skin or such.","msgtype":"m.text"},"ts":1258132620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: http://conferences.idealliance.org/extreme/html/2004/Siefkes01/EML2004Siefkes01.html","msgtype":"m.text"},"ts":1258132740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Extreme Markup Languages®","msgtype":"m.text"},"ts":1258132920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"}
]