[
{"content":{"body":"TabAtkins: When some spec says <foo> && <bar>, unless stated otherwise the serialisation by default should be <foo> <bar>, right?","msgtype":"m.text"},"ts":1497858909000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: Asking because https://drafts.fxtf.org/filters/#funcdef-filter-drop-shadow says <length>{2,3} <color>?, but every UA I tried serialises the colour first.","msgtype":"m.text"},"ts":1497859035000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: getting long delays for responses from https://drafts.csswg.org/","msgtype":"m.text"},"ts":1497863532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"on the order of 20 seconds just to get the start of the response","msgtype":"m.text"},"ts":1497863649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"before the content even can begin loading","msgtype":"m.text"},"ts":1497863685000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wondering if maybe it has some rate limiting in place and Iâ€™m getting tarpitted","msgtype":"m.text"},"ts":1497864105000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nox: Yes to your first question.  But to your second question, there's no && in there; putting a color first shouldn't even parse, per spec.","msgtype":"m.text"},"ts":1497883860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Oh right.","msgtype":"m.text"},"ts":1497883871000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: Hmm, dunno about that. plinss is the one to bug, tho.","msgtype":"m.text"},"ts":1497883892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: What happens I think is that both UA probably just parse that stuff like box-shadow and then reject values with inset and spread.","msgtype":"m.text"},"ts":1497883900000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Probably, yeah.","msgtype":"m.text"},"ts":1497883908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: But I think the spec should say '&&', because they both serialise the color first.","msgtype":"m.text"},"ts":1497883917000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: Should I file an issue?","msgtype":"m.text"},"ts":1497883926000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yes plz","msgtype":"m.text"},"ts":1497883931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Will do.","msgtype":"m.text"},"ts":1497883940000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: Another question:","msgtype":"m.text"},"ts":1497883947000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: with <number-percentage>, calc(10 + 10%) should be allowed, right?","msgtype":"m.text"},"ts":1497883961000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1497883970000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh wait.","msgtype":"m.text"},"ts":1497883973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As opposed to <number> | <percentage>.","msgtype":"m.text"},"ts":1497883989000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No, we just disallowed that. I need to go edit some things.","msgtype":"m.text"},"ts":1497884000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1497884006000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: Are all such mixing disallowed except for <length>, now?","msgtype":"m.text"},"ts":1497884014000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(Required to be disallowed to make calc unit algebra work sanely.)","msgtype":"m.text"},"ts":1497884015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No, all units are fine.","msgtype":"m.text"},"ts":1497884023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just number+percent that's problematic.","msgtype":"m.text"},"ts":1497884030000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But no browsers care, right?","msgtype":"m.text"},"ts":1497884031000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Nobody implements a number+percent calc yet, no.","msgtype":"m.text"},"ts":1497884045000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I haven't seen anything allow calc(10s + 10%) or angles or whatever else but lengths.","msgtype":"m.text"},"ts":1497884051000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Uh, probably so.","msgtype":"m.text"},"ts":1497884072000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Don't remember any off the top of my head.","msgtype":"m.text"},"ts":1497884081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bikeshed question here: when I write `[=fetch/status=]`, Bikeshed complains:","msgtype":"m.text"},"ts":1497904380000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"LINK ERROR: No 'dfn' refs found for 'status' with for='fetch'.","msgtype":"m.text"},"ts":1497904381000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"<a data-link-type=\"dfn\" data-lt=\"status\" data-link-for=\"fetch\">status</a>","msgtype":"m.text"},"ts":1497904382000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"but when I run `bikeshed refs --spec fetch --text status`","msgtype":"m.text"},"ts":1497904427000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"the results include:","msgtype":"m.text"},"ts":1497904442000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"status:    current","msgtype":"m.text"},"ts":1497904443000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"for:       []","msgtype":"m.text"},"ts":1497904444000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"level:     1","msgtype":"m.text"},"ts":1497904444000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"url:       https://fetch.spec.whatwg.org/#concept-status","msgtype":"m.text"},"ts":1497904444000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"type:      dfn","msgtype":"m.text"},"ts":1497904444000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"export:    True","msgtype":"m.text"},"ts":1497904444000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"text:      status","msgtype":"m.text"},"ts":1497904445000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"shortname: fetch","msgtype":"m.text"},"ts":1497904445000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"normative: True","msgtype":"m.text"},"ts":1497904446000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"spec:      fetch","msgtype":"m.text"},"ts":1497904446000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"TabAtkins: or maybe Domenic: do you know what I'm doing wrong there? ^","msgtype":"m.text"},"ts":1497904468000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yeah, that definition is \"for\" nothing. You're trying to specify the *spec* it's from, which can't be done in the shorthand.","msgtype":"m.text"},"ts":1497904496000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(In [=foo/bar=], it's equivalent to <a dfn for=foo>bar</a>.)","msgtype":"m.text"},"ts":1497904521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does that mean this patch is incorrect? https://github.com/w3c/ServiceWorker/pull/1144/files","msgtype":"m.text"},"ts":1497904576000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I don't understand the relevance of that patch.","msgtype":"m.text"},"ts":1497904602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Isn't status supposed to be for a response, anyway?","msgtype":"m.text"},"ts":1497904651000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Not a fetch?","msgtype":"m.text"},"ts":1497904654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, sorry. That patch is using \"WorkerGlobalScope\", not the name of a spec","msgtype":"m.text"},"ts":1497904690000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Domenic: Yeah, I think that definition could do with a for value in the spec. A bare \"status\" is kinda hard to link to.","msgtype":"m.text"},"ts":1497904734000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it has one in the spec","msgtype":"m.text"},"ts":1497904748000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This is the text that was confusing me: https://github.com/w3c/ServiceWorker/blob/fa1f95c41523b7cc8de65d2ec24edb43bf9f5cc3/docs/index.bs#L2009","msgtype":"m.text"},"ts":1497904762000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Domenic: It does not.","msgtype":"m.text"},"ts":1497904767000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, well, it depends on if you're linking to the status *type* or the property of a response","msgtype":"m.text"},"ts":1497904771000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://fetch.spec.whatwg.org/#concept-status vs. https://fetch.spec.whatwg.org/#concept-response-status","msgtype":"m.text"},"ts":1497904789000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's the latter that I want, actually","msgtype":"m.text"},"ts":1497904807000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: Yeah, that's linking to the \"terminate a fetch\" definition, which is for=fetch.  Unrelated to being in the Fetch spec.","msgtype":"m.text"},"ts":1497904810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1497904817000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yeah, then just [=response/status=]","msgtype":"m.text"},"ts":1497904818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: The other status should still have a for value. Like for=http or something?","msgtype":"m.text"},"ts":1497904858000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Perfect! Thanks to you both","msgtype":"m.text"},"ts":1497904870000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yeah, maybe. Unsure why disambiguating by spec is insufficient though","msgtype":"m.text"},"ts":1497904873000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's sufficient, but it's hard to do so in Bikeshed's syntax. ^_^","msgtype":"m.text"},"ts":1497904886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And then you'd still need to *also* disambiguate by for value, since there are multiple \"status\" dfns in the spec.)","msgtype":"m.text"},"ts":1497904911000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, not if you use the explicit for switch ^_^","msgtype":"m.text"},"ts":1497905007000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay sure, but only you two weirdos use that. ^_^","msgtype":"m.text"},"ts":1497905025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hello. My script is running in context of webpage say http://xyz.com. I make an xhr request to http://media.xyz.com/a.mp4 but it fails. Why is that?","msgtype":"m.text"},"ts":1497905647000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"That's a different domain.","msgtype":"m.text"},"ts":1497905661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And thus, CORS applies.)","msgtype":"m.text"},"ts":1497905670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am trying to understand why that fails and why does <video src = http://media.xyz.com/a.mp4 > would work then?","msgtype":"m.text"},"ts":1497905681000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"TabAtkins: but the browser was able to download and play the video fine (ignoring my script). So how is browser allowed to get the video then?","msgtype":"m.text"},"ts":1497905723000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"Because <video> was implemented *just* before we realized how good of an idea it was to be strict about same-origin restrictions.","msgtype":"m.text"},"ts":1497905724000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then people were already using <video> cross-origin, and so changing it would have broken too much stuff.","msgtype":"m.text"},"ts":1497905764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so you're saying CORS applies to XHR but not to <video src= ../> ?","msgtype":"m.text"},"ts":1497905810000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"Yup. It's a dumb inconsistency that we can't get rid of.","msgtype":"m.text"},"ts":1497905933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Argh I see. So then how can browser load and play a cross domain video but I can't get access to same video via XHR?","msgtype":"m.text"},"ts":1497905979000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"for e.g https://html5media.info serves the video from media.html5media.info","msgtype":"m.text"},"ts":1497906020000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"Browsers have magic powers in many ways; this isn't something built into the internet, it's just how browsers expose the data to you.  If you want to access it via XHR, you just need to set up proper CORS headers on the subdomain; there are plenty of tutorials that'll help you with that.","msgtype":"m.text"},"ts":1497906033000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i can't control the subdomain..I am just injecting a script (chrome extension) to get video source and making XHR request","msgtype":"m.text"},"ts":1497906068000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"Then you're out of luck.","msgtype":"m.text"},"ts":1497906268000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so if I've understood it correctly, when browser renders page, it can access any url it wants. When I make an XHR request, it knows that origin is not the browser so it'll get the response, check headers and deny my XHR request?","msgtype":"m.text"},"ts":1497906350000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"aff23: Yes.","msgtype":"m.text"},"ts":1497907920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: around?","msgtype":"m.text"},"ts":1497909737000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"aff23: Yo?","msgtype":"m.text"},"ts":1497914580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aff23: (Don't ask if you can ask: just ask, and allow people to be async in their communications.)","msgtype":"m.text"},"ts":1497914598000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aff23: only you seemed active on channel so :p","msgtype":"m.text"},"ts":1497914637000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"TabAtkins: I was wondering..what if I send an XHR request to my own server, which performs GET request on cross-domain video and returns video data as response?","msgtype":"m.text"},"ts":1497914671000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"Yeah, that's a pretty standard proxy setup.  It works just fine, and is common in situations like this where you can't alter the other endpoint's headers.","msgtype":"m.text"},"ts":1497914728000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's like money-laundering, but for security. ^_^","msgtype":"m.text"},"ts":1497914737000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"haha okay..and can you point me to any spec/doc which explains how/why we can do <video src = \"crossdomain.url\"> ?","msgtype":"m.text"},"ts":1497914895000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"You can do <video> because the spec *doesn't* mandate a same-origin restriction.","msgtype":"m.text"},"ts":1497914944000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Tangent: the reason the proxy-thru-your-server approach is just fine, is because your server doesn't have any of the credentials that the user does.  Cookies, in particular, tend to \"go along for the ride\" when you make cross-origin requests, possibly giving your page access to things that the user is signed into. Your server doesn't have any of that, so assuming basic security exists, it only has access to things that it's","msgtype":"m.text"},"ts":1497915037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"allowed to have access to.)","msgtype":"m.text"},"ts":1497915037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aha got it TabAtkins. Yeah valid point about tangent. I read about it as well.","msgtype":"m.text"},"ts":1497915335000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"I am just wondering, if my server is in c++, how do I allocate size for video data? I've no way of knowing the video size in advance","msgtype":"m.text"},"ts":1497915365000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"No clue about any of that. ^_^","msgtype":"m.text"},"ts":1497915373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But dynamically-sized arrays do exist in c++","msgtype":"m.text"},"ts":1497915384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay thanks","msgtype":"m.text"},"ts":1497915387000,"senderName":"aff23","senderId":"aff23@irc"},
{"content":{"body":"yeah but since I am not doing range queries, I'd have to get all the data","msgtype":"m.text"},"ts":1497915403000,"senderName":"aff23","senderId":"aff23@irc"}
]