[
{"content":{"body":"AlexNRoss: did you mean \"nofollow\"?","msgtype":"m.text"},"ts":1306976220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, I meant \"dofollow\".","msgtype":"m.text"},"ts":1306976580000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1306976581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"never heard of it","msgtype":"m.text"},"ts":1306976582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.inlineseo.com/dofollowdiver/","msgtype":"m.text"},"ts":1306976640000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"It encourages bots to follow the link.","msgtype":"m.text"},"ts":1306976700000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"nofollow discourages them. However, they can still go to the link.","msgtype":"m.text"},"ts":1306976701000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"It is a SEO initiative that started months ago. It's irritating that it hasn't been implemented into the spec yet; I even submitted it to the spec to be added.","msgtype":"m.text"},"ts":1306976760000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"i'm here for the pseudo-class action","msgtype":"m.text"},"ts":1306976820000,"senderName":"eightfold","senderId":"eightfold@irc"},
{"content":{"body":"a:visited:after { content: \"(you've been here before)\"; }","msgtype":"m.text"},"ts":1306976880000,"senderName":"eightfold","senderId":"eightfold@irc"},
{"content":{"body":"should be valid?","msgtype":"m.text"},"ts":1306976881000,"senderName":"eightfold","senderId":"eightfold@irc"},
{"content":{"body":"jgraham, re your test, I did some similar testing recently for array index properties http://www.w3.org/mid/20110503052431.GN2576âŠ™wmia","msgtype":"m.text"},"ts":1306976940000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, and I think the answer should depend on what comes out of that thread","msgtype":"m.text"},"ts":1306976941000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the current way that named/indexed properties are handled sucks a bit","msgtype":"m.text"},"ts":1306977000000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's a little awkward having to look at what own properties already exist on the object, whether they're configurable or not, etc., so that they can be explicitly overwritten","msgtype":"m.text"},"ts":1306977001000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"having a [[Get]] & [[Put]] layer over the top of the object seems cleaner and easier to understand","msgtype":"m.text"},"ts":1306977060000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I did change the spec to this \"looking at what properties exist on the object and having real properties set on the object when collection elements are added\" way because TC39 folks were unhappy with the custom [[Get]]/[[Put]] semantics that used to exist in the spec","msgtype":"m.text"},"ts":1306977120000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but now they seem to be ok with it","msgtype":"m.text"},"ts":1306977121000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(with the Proxy proposal moving forward)","msgtype":"m.text"},"ts":1306977122000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"eightfold, Is valid code according to http://jigsaw.w3.org/css-validator/validator at least","msgtype":"m.text"},"ts":1306977180000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"jgraham, so to answer a slightly different question: what I want that test to log is true, [object HTMLImageElement], true","msgtype":"m.text"},"ts":1306977181000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"AlexNRoss: That page says \"DoFollow doesn't technically exist, instead, it is the absense of the \"nofollow\" tag in a link.\"","msgtype":"m.text"},"ts":1306977240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AlexNRoss: Bots follow all links anyway (and sometimes follow things that aren't even links), there's no point explicitly marking any as followable","msgtype":"m.text"},"ts":1306977241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I'm aware of this, but using \"dofollow\" is basically putting a big \"follow this link\" sign right on it.","msgtype":"m.text"},"ts":1306977300000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"AlexNRoss: Since bots have no reason to ever care about such a sign, why put it up?","msgtype":"m.text"},"ts":1306977360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: It's an initiative, if people start using it, bots will use it more widely.","msgtype":"m.text"},"ts":1306977420000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"Why would bots use it, instead of just following all links (like they do already)?","msgtype":"m.text"},"ts":1306977421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: https://encrypted.google.com/search?q=google+dofollow&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-CA:official&client=firefox-a","msgtype":"m.text"},"ts":1306977422000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"That doesn't seem to be answering any questions :-p","msgtype":"m.text"},"ts":1306977480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Google already acknowledges it. That is what I was showing.","msgtype":"m.text"},"ts":1306977600000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"So, if it becomes official in the spec, more search engines are likely to make use of this.","msgtype":"m.text"},"ts":1306977601000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"Where do they acknowledge it?","msgtype":"m.text"},"ts":1306977602000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Read the search findings.","msgtype":"m.text"},"ts":1306977603000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1306977660000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"http://www.verticalmeasures.com/miscellaneous/googles-take-on-nofollow-vs-dofollow-2/","msgtype":"m.text"},"ts":1306977661000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"Perfect example.","msgtype":"m.text"},"ts":1306977662000,"senderName":"AlexNRoss","senderId":"AlexNRoss@irc"},
{"content":{"body":"That's just a load of people using it as a kind of pun for a phrase meaning not-nofollow","msgtype":"m.text"},"ts":1306977720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i.e. for <a href>","msgtype":"m.text"},"ts":1306977721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which happens to be a perfectly good way of marking up links that bots should follow","msgtype":"m.text"},"ts":1306977722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AlexNRoss: nofollow doesn't actually mean \"don't follow the link\", it means \"don't give this link any credibility\"","msgtype":"m.text"},"ts":1306979520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AlexNRoss: i can't find anything that suggests \"dofollow\" would do anything useful","msgtype":"m.text"},"ts":1306979521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nofollow is a pretty bad choice for that kind of attribute value","msgtype":"m.text"},"ts":1306980000000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"no argument from me there","msgtype":"m.text"},"ts":1306980060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: btw i really think we should reconsider this foo? syntax in WebIDL","msgtype":"m.text"},"ts":1306980061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: having to put question marks in every IDL block is going to take me weeks","msgtype":"m.text"},"ts":1306980120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, To answer eightfold's question, is a:visited:after { content: \"(you've been here before)\"; } valid? I do not see anything in the spec saying pseudo-elements can work with pseudo-classes.","msgtype":"m.text"},"ts":1306980121000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"heycam: can't we do it the other way around? have an exclamation mark for the opposite case?","msgtype":"m.text"},"ts":1306980122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod: which spec?","msgtype":"m.text"},"ts":1306980123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod, history sniffing, do you know it? i believe this will not work.","msgtype":"m.text"},"ts":1306980124000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hixie, http://www.w3.org/TR/CSS2/","msgtype":"m.text"},"ts":1306980180000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"good lord","msgtype":"m.text"},"ts":1306980181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSS2 is over 13 years obsolete","msgtype":"m.text"},"ts":1306980182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't look at that","msgtype":"m.text"},"ts":1306980183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod, i had that same trick (with a check mark :after :visited links) ruined by the history sniffing countermeasures.","msgtype":"m.text"},"ts":1306980184000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hixie, weeks? of course it is possible to do it the other way around for types that previously had \"null\" as part of them. I chose this way to avoid having both \"?\" and \"!\".","msgtype":"m.text"},"ts":1306980185000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"kevogod: :hover::after { content: '<has hover!' } should work fine","msgtype":"m.text"},"ts":1306980186000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, let me take a look at the html spec and determine how many \"?\"s would really be needed","msgtype":"m.text"},"ts":1306980187000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"kevogod, i believe :visited changes can only affect color.","msgtype":"m.text"},"ts":1306980188000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"kevogod: with :link it's a bit more dodgy because of the history thing as erlehmann says","msgtype":"m.text"},"ts":1306980240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i am too lazy looking it up. have to work on a minecraft clone.","msgtype":"m.text"},"ts":1306980241000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":":3","msgtype":"m.text"},"ts":1306980242000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"kevogod: but anyway, http://dev.w3.org/csswg/selectors3/ is where you want to go for selectors","msgtype":"m.text"},"ts":1306980243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: i think i would want it everywhere","msgtype":"m.text"},"ts":1306980244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod, oh well. read this <http://dbaron.org/mozilla/visited-privacy>","msgtype":"m.text"},"ts":1306980300000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hixie, there are really no cases where you want to throw if null is passed as an argument where an object is expected?","msgtype":"m.text"},"ts":1306980301000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: since that's what was assumed until now, so all the prose assumes null is always allowed","msgtype":"m.text"},"ts":1306980302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: i'm sure there's lots of cases. but they already throw.","msgtype":"m.text"},"ts":1306980303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I see","msgtype":"m.text"},"ts":1306980304000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i could see slowly one-by-one moving them to using IDL instead of prose to require it","msgtype":"m.text"},"ts":1306980305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which you could do with \"!\"...","msgtype":"m.text"},"ts":1306980360000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1306980361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, I'll think it over :)","msgtype":"m.text"},"ts":1306980362000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, follow the CSS2 link, it's updated","msgtype":"m.text"},"ts":1306980363000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, do you mind to file a bug on it?","msgtype":"m.text"},"ts":1306980420000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hey, dbaron, nice job ruining our :visited selector ;D","msgtype":"m.text"},"ts":1306980421000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"dbaron: the css2 link should point to http://www.w3.org/Style/Group/css2-src/cover.html :-P","msgtype":"m.text"},"ts":1306980422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: sure","msgtype":"m.text"},"ts":1306980423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1306980424000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, http://dev.w3.org/csswg/selectors3/#gen-content refers to the CSS 2.1 spec so it does not necessarily clarify that ::before or :after can be applied to pseudo-classes.","msgtype":"m.text"},"ts":1306980480000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"heycam: reopened http://www.w3.org/Bugs/Public/show_bug.cgi?id=10640","msgtype":"m.text"},"ts":1306980540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1306980600000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: if you do want to give me a diff (against the .../source file) then i probably wouldn't complain either","msgtype":"m.text"},"ts":1306980601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: (per your comment in there)","msgtype":"m.text"},"ts":1306980602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: you're one of hte few people i'd trust to not screw something like that up :-)","msgtype":"m.text"},"ts":1306980603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1306980604000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if even with prose changes most types still get a \"?\", then changing to \"!\" would be better","msgtype":"m.text"},"ts":1306980660000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Nor do I see where it says a pseudo-element can be applied to a pseudo-class in http://dev.w3.org/csswg/selectors3/#pseudo-elements","msgtype":"m.text"},"ts":1306980661000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"so I will check that first","msgtype":"m.text"},"ts":1306980662000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"there's 183 idl blocks in the spec","msgtype":"m.text"},"ts":1306980663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod: it's not applied to a pseudo-class","msgtype":"m.text"},"ts":1306980720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod: every selector can have one pseudo-element","msgtype":"m.text"},"ts":1306980721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod: and any number of combinators, pseudo-classes, normal classes, ids, attribute selectors, etc","msgtype":"m.text"},"ts":1306980722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kevogod: (and one type selector per \"chain\")","msgtype":"m.text"},"ts":1306980723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK, that clears it up. Thanks Hixie.","msgtype":"m.text"},"ts":1306980724000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1306980780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"too bad we can't style with xpath","msgtype":"m.text"},"ts":1306980781000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"shudders","msgtype":"m.emote"},"ts":1306980782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"think about it. absolutely position -> not in the flow -> i have to give the container some extra class/id just to give it dimensions","msgtype":"m.text"},"ts":1306980840000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"with xpath that would go away","msgtype":"m.text"},"ts":1306980841000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"but i guess that would be too expensive to parse","msgtype":"m.text"},"ts":1306980900000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"how would you do it with xpath?","msgtype":"m.text"},"ts":1306980901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ancestor axis","msgtype":"m.text"},"ts":1306980902000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"oh well we can add that to selectors too","msgtype":"m.text"},"ts":1306980960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's not an xpath vs selectors thing","msgtype":"m.text"},"ts":1306980961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"selectors has intentionally avoided having such a feature because it's a perf nightmare","msgtype":"m.text"},"ts":1306980962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought things are only supposed to go downwards/forwards in CSS","msgtype":"m.text"},"ts":1306980963000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"right, i'm just saying that if that's what you're missing, it'd be easier to add it to selectors than replace selectors with xpath","msgtype":"m.text"},"ts":1306980964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, but that's just one example. i might want to do something with previous siblings instead... sibling axis","msgtype":"m.text"},"ts":1306981020000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"my :matches(...#...) proposal handles all of that","msgtype":"m.text"},"ts":1306981021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"m'kay","msgtype":"m.text"},"ts":1306981022000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"The_8472: Both of those are perfectly compatible with CSS, we've just avoided them for performance reasons, like Hixie said.","msgtype":"m.text"},"ts":1306981080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a:matches(#+b) matches an a followed by a b sibling","msgtype":"m.text"},"ts":1306981081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The downwards/forwards restriction means you can match selectors against an element *while* parsing a document, using only the information you've already parsed.","msgtype":"m.text"},"ts":1306981082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a:matches(#>b) matches an a followed by a b child","msgtype":"m.text"},"ts":1306981083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also, someone slap google for putting w3schools ontop of the results for anything web standard related","msgtype":"m.text"},"ts":1306981084000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"their site is horrible","msgtype":"m.text"},"ts":1306981085000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"at least google finally added an \"ignore this site forever\" thing, heh","msgtype":"m.text"},"ts":1306981140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The_8472: when you get a result, click it, hit back, then hit \"block this site\"","msgtype":"m.text"},"ts":1306981141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"been wanting that for years","msgtype":"m.text"},"ts":1306981142000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"mhm... but then i have to allow cookies for google","msgtype":"m.text"},"ts":1306981143000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"(now if only they'd stop fuzzing searches to death so i have to +prefix +every +word +of +every +search +to +make +it +not +add +typos +for +me)","msgtype":"m.text"},"ts":1306981144000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Google is your friend.  Do what Google says.","msgtype":"m.text"},"ts":1306981145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you really should log in to google anyway, it makes your results way better","msgtype":"m.text"},"ts":1306981146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(disclaimer, tab and i work for google)","msgtype":"m.text"},"ts":1306981200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Google tricks me into searching while logged in due to their universal log-in.","msgtype":"m.text"},"ts":1306981201000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1306981260000,"senderName":"kevogod","senderId":"kevogod@irc"},
{"content":{"body":"Hixie, so... i could use that to select the previous sibling of a specific type too?","msgtype":"m.text"},"ts":1306981560000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"ah, yeah. neat","msgtype":"m.text"},"ts":1306981620000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"<TabAtkins> The downwards/forwards restriction means you can match selectors against an element *while* parsing a document, using only the information you've already parsed. <- just like C was designed to for a single-pass compiler. and we're all using multi-pass ones today ;)","msgtype":"m.text"},"ts":1306981621000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"imo the runtime complexity class is more important than having to wait for the document to finish to load for (some) selectors.","msgtype":"m.text"},"ts":1306981680000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"but it doesn't look like one can construct NP-hard statements with that ^^","msgtype":"m.text"},"ts":1306981740000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"it's not so much to allow single-pass (you already can't do that with e.g. :last-child)","msgtype":"m.text"},"ts":1306981741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's to allow you to style the document without having to do a full crawl of the entire document for each element","msgtype":"m.text"},"ts":1306981800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: That's why there isn't any inherent restriction against that sort of thing.  It's just not possible with currently-defined syntax, is all.","msgtype":"m.text"},"ts":1306981801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"consider *:matches(.foo) { }, for example, which would match any element if the document had a class=foo element in it","msgtype":"m.text"},"ts":1306981802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for every element, you'd have to walk the entire document (modulo caching)","msgtype":"m.text"},"ts":1306981803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, but that is traversing the entire document once","msgtype":"m.text"},"ts":1306981860000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"you could try to evaluate all those conditions at once","msgtype":"m.text"},"ts":1306981861000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Which isn't really a problem once the entire document is present, but it means that you can't determine if that selector matches until the entire document loads.","msgtype":"m.text"},"ts":1306981920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or :matches(.foo .bar ~ .baz #) which for every element would require crawling huge parts of the dom and would be very difficult to cache efficiently","msgtype":"m.text"},"ts":1306981921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...Hixie, that's equivalent to just omitting :matches().","msgtype":"m.text"},"ts":1306981922000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, that should be acceptable i think. fancy javascript stuff doesn't load either until the dom is there","msgtype":"m.text"},"ts":1306981923000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"TabAtkins: that's not such a big problem, document load is just like dynamic changes to the dom","msgtype":"m.text"},"ts":1306981924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: It's not acceptable.","msgtype":"m.text"},"ts":1306981925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"er, i had my example backwards","msgtype":"m.text"},"ts":1306981980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i meant :matches(# .foo ~ .bar .baz)","msgtype":"m.text"},"ts":1306981981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: You want to be able to display a page *as* it loads.","msgtype":"m.text"},"ts":1306981982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And preferably as complete as possible, to minimize visual jank.","msgtype":"m.text"},"ts":1306981983000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so just display it based on the the forward-evaluateable rules","msgtype":"m.text"},"ts":1306981984000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"you already have to do that, think of nth-last-child","msgtype":"m.text"},"ts":1306982040000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Those are *very* rarely used.","msgtype":"m.text"},"ts":1306982041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And they do indeed slow the document down when you use them.","msgtype":"m.text"},"ts":1306982042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should do that on a separate thread","msgtype":"m.text"},"ts":1306982043000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"they don't slow the document down anywhere near as much as :matches() would :-)","msgtype":"m.text"},"ts":1306982044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"snapshot the graph and do some traversing to match the selectors","msgtype":"m.text"},"ts":1306982045000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Doesn't help.  You're still doing multiple layouts over the same tree.  Once a new selector is found to match, you have to throw away most of your progress over the subtree and start again.","msgtype":"m.text"},"ts":1306982100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"of course nobody designed/implemented dom with multithreading in mind :/","msgtype":"m.text"},"ts":1306982101000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Because one value changing can percolate down via inheritance, etc.","msgtype":"m.text"},"ts":1306982102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins... same when JS does dynamic stuff on dom ready","msgtype":"m.text"},"ts":1306982103000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"simple sites won't need it and complex sites will already be... complex","msgtype":"m.text"},"ts":1306982160000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"but yes, it'll certainly not work well with naive implementations","msgtype":"m.text"},"ts":1306982161000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"The problem is that people don't think of CSS as complex.  We'd prefer that the performance impact be small before adding them.","msgtype":"m.text"},"ts":1306982220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1306982221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/naive/all current/","msgtype":"m.text"},"ts":1306982222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the loops that this combined with calc() might create are far more interesting","msgtype":"m.text"},"ts":1306982400000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"mh, nvm","msgtype":"m.text"},"ts":1306982401000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"it would just override it","msgtype":"m.text"},"ts":1306982460000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"http://forums.silverlight.net/forums/p/230502/562113.aspx :D","msgtype":"m.text"},"ts":1307021040000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Hixie: I reverted the Overview.html copy in cvs to a version which you should be able to commit over without conflicts","msgtype":"m.text"},"ts":1307030820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if you do get conflicts, then, yeah, please do feel free to just blow it away and replace it","msgtype":"m.text"},"ts":1307030880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"CSSOM View defines offsetTop giving the offset to the body element (in the case where there's no position properties). How do you find the offset of the body element to the viewport? (Or the offset of an arbitrary element to the viewport?)","msgtype":"m.text"},"ts":1307033280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So Google's finally come out behind microdata instead of RDFa for search results, it seems.","msgtype":"m.text"},"ts":1307040060000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Apparently Microsoft and Yahoo! too, if they're backing schema.org, although I notice the whois goes to Google.","msgtype":"m.text"},"ts":1307040120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(they clearly are backing schema.org, they've got blog posts announcing it too)","msgtype":"m.text"},"ts":1307040180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://schema.org/docs/faq.html#14","msgtype":"m.text"},"ts":1307040240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"Focusing on microdata was a pragmatic decision. Supporting multiple syntaxes makes documentation for webmasters more complex and introduces more overhead in terms of defining new formats. Microformats are concise and easy to understand, but they don't offer an open extensibility mechanism and the reuse of the class tag can cause conflicts with website CSS. RDFa is extensible and very expressive, but the substantial complexity of the language","msgtype":"m.text"},"ts":1307040241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":" has contributed to slower adoption. Microdata is the most recent well-known standard, created along with HTML5. It strikes a balance between extensibility and simplicity, and is most suitable for building the schema.org. Google and Yahoo! have in the past supported both microformats and RDFa for certain schemas and will continue to support these syntaxes for those schemas. We will also be monitoring the web for RDFa and microformats adoption","msgtype":"m.text"},"ts":1307040242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":" and if they pick up, we will look into supporting these syntaxes. Also read the section on the data model for more on RDFa.\"","msgtype":"m.text"},"ts":1307040243000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ack, too long.  I do that too often.","msgtype":"m.text"},"ts":1307040244000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The discussion group is also a Google Group.","msgtype":"m.text"},"ts":1307040300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, didn't hixie tell us that microdata was easier to author and understand than RDFa?","msgtype":"m.text"},"ts":1307040360000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i wonder what CC is doing now for licensing information, i did my wordpress plugin for GSoC with RDFa.","msgtype":"m.text"},"ts":1307040420000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Well, yes, but until recently, Google's rich snippets mostly focused on RDFa, or at least as much as microdata.","msgtype":"m.text"},"ts":1307040421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Awesome, a PAM update on Ubuntu a couple of days ago broke cron and at.  How many systems will that wind up completely wrecking, I wonder?","msgtype":"m.text"},"ts":1307040600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1307042280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In the execCommand() use-case, is there really any notable difference between <div align=right> and <div style=\"text-align: right\">?","msgtype":"m.text"},"ts":1307042281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The only obvious differences I can think of involve things like fixed-width block descendants, which you can't really get in a normal contenteditable setup.","msgtype":"m.text"},"ts":1307042340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Tables?","msgtype":"m.text"},"ts":1307042460000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"There's no way to make those with execCommand() either, actually, that I've seen.  Although you'd think there should be.","msgtype":"m.text"},"ts":1307042461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems like a pretty obvious feature to add.","msgtype":"m.text"},"ts":1307042462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess I'll spec it as text-align across the board for now, and change it if any problems arise.","msgtype":"m.text"},"ts":1307042580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, it is ubuntu. whoever runs that should know that updates break stuff, even deliberately, see unity.","msgtype":"m.text"},"ts":1307044560000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"That's a major version upgrade, not a security update.","msgtype":"m.text"},"ts":1307044561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"heh, i stopped using ubuntu after yet another major update totally hosed my system ... don't think I've ever had one go well","msgtype":"m.text"},"ts":1307044740000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I always mix up \"microformats\" and \"microdata\" when reading","msgtype":"m.text"},"ts":1307045640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Probably would have been good if they'd had distinct prefixes","msgtype":"m.text"},"ts":1307045641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"microdata\" wasn't really ever intended to be a brand","msgtype":"m.text"},"ts":1307046180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that one just kinda got away from me","msgtype":"m.text"},"ts":1307046240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it was just meant to be descriptive, the same way that the html spec uses \"microsyntax\"","msgtype":"m.text"},"ts":1307046241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can itemprop take multiple values?","msgtype":"m.text"},"ts":1307051040000,"senderName":"linclark","senderId":"linclark@irc"},
{"content":{"body":"mhhh... do border images support gradients instead of url() images?","msgtype":"m.text"},"ts":1307052420000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"i guess not","msgtype":"m.text"},"ts":1307052780000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"well, the css3 border spec and the css3 images spec contradict each other","msgtype":"m.text"},"ts":1307052900000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"i see , they use the css2.1 definition","msgtype":"m.text"},"ts":1307052960000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"linclark: \"The itemprop attribute, if specified, must have a value that is an unordered set of unique space-separated tokens that are case-sensitive, representing the names of the name-value pairs that it adds. The attribute's value must have at least one token.\"","msgtype":"m.text"},"ts":1307053560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"linclark: in other words, \"yes\"","msgtype":"m.text"},"ts":1307053561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks!","msgtype":"m.text"},"ts":1307053620000,"senderName":"linclark","senderId":"linclark@irc"},
{"content":{"body":"Hixie: how would you name microdata had you intended to give it a brand?","msgtype":"m.text"},"ts":1307055720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: i dunno, that's one of those things that takes careful thought","msgtype":"m.text"},"ts":1307056380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Not die-rdfa-die-data then? :)","msgtype":"m.text"},"ts":1307056381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Am I the only one who thinks it's crazy whenever people say how bad localStorage is and imply everyone should use IndexedDB instead?","msgtype":"m.text"},"ts":1307056500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IndexedDB is *horrifyingly* complicated.","msgtype":"m.text"},"ts":1307056501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And there's no persistent storage either implemented, specced, or planned other than IndexedDB and localStorage, that I know of (leaving aside WebSQL, since it has no future).","msgtype":"m.text"},"ts":1307056560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"cookies? :-)","msgtype":"m.text"},"ts":1307056620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: implementation complexity does matter","msgtype":"m.text"},"ts":1307056621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Fine, no persistent storage that a) actually persists, b) does not have to be sent on every HTTP request, c) can be more than a few KB.","msgtype":"m.text"},"ts":1307056622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"other than the annoying global lock problem, i don't think there's anything bad about localStorage; it's very natural to the platform","msgtype":"m.text"},"ts":1307056680000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, it's synchronous.  That's bad if you need to do a bunch of disk access.","msgtype":"m.text"},"ts":1307056681000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because it freezes the UI.","msgtype":"m.text"},"ts":1307056682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well, that and the fact that everything's forever stuck at 5MB, because when you say \"we'll set it at 5MB and increase it later\", that apparently means \"we'll set it at 5MB and then never change it\"","msgtype":"m.text"},"ts":1307056683000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't know if that's a big problem, though.","msgtype":"m.text"},"ts":1307056684000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, but that's probably going to be true for IDB and everything else too.","msgtype":"m.text"},"ts":1307056685000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"5MB is just patently absurd, heh","msgtype":"m.text"},"ts":1307056686000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that can still be fixed, though, it's nothing baked in--just nobody's bothering to do so (as far as I know)","msgtype":"m.text"},"ts":1307056800000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It should really be more flexible.","msgtype":"m.text"},"ts":1307056801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It would be better if there were no guarantees that the storage would be permanent, then you could be much more generous up front.","msgtype":"m.text"},"ts":1307056802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There realistically aren't any guarantees that the storage is permanent anyway.","msgtype":"m.text"},"ts":1307056860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"and there's pushback from implementors from exposing whether it is (eg. chrome's porn mode)","msgtype":"m.text"},"ts":1307056920000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AryehGregor: flash cookies?","msgtype":"m.text"},"ts":1307056921000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't think making it bigger but nonpersistant is much of a win, though; the entire point is persisting","msgtype":"m.text"},"ts":1307056922000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"50MB would be a saner default than 5MB, though, really","msgtype":"m.text"},"ts":1307056980000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, it only persists until the user clears cookies, or uses a different browser or whatever.","msgtype":"m.text"},"ts":1307056981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So typical uses can't rely on it persisting anyway.","msgtype":"m.text"},"ts":1307056982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Persisting? Or caching? :)","msgtype":"m.text"},"ts":1307056983000,"senderName":"pdr3","senderId":"pdr3@irc"},
{"content":{"body":"depends on what you mean by \"persist\", but yeah","msgtype":"m.text"},"ts":1307056984000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It really depends how many sites use it.","msgtype":"m.text"},"ts":1307056985000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Twenty sites all using close to the 50 MB limit would make users quite unhappy.","msgtype":"m.text"},"ts":1307057040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"localStorage, IndexDB, and Cookies had better all have the same lifetime","msgtype":"m.text"},"ts":1307057041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i really don't see every site filling up 50MB (or even 1MB) of localStorage if 50MB is given by default","msgtype":"m.text"},"ts":1307057042000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"At least some users.","msgtype":"m.text"},"ts":1307057043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Realistically, most wouldn't notice, but . . .","msgtype":"m.text"},"ts":1307057044000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"otherwise you get cookie resurrection","msgtype":"m.text"},"ts":1307057045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You don't need every site to do it, you just need a small percentage.","msgtype":"m.text"},"ts":1307057046000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i mean, I get the concern of not wanting every site a user visits taking up 50MB (for example) of space, but I don't think that's a likely end result","msgtype":"m.text"},"ts":1307057047000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: the problem isn't hte good sites","msgtype":"m.text"},"ts":1307057048000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: the problem is the hostile sites","msgtype":"m.text"},"ts":1307057049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Even if you visit the site only once, it will persist forever, after all.","msgtype":"m.text"},"ts":1307057050000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"zewt: the good sites you can grant GBs of access to","msgtype":"m.text"},"ts":1307057051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not even considering DoS here.","msgtype":"m.text"},"ts":1307057100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just accumulation over time.","msgtype":"m.text"},"ts":1307057101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"sure, I just don't see giving 50MB to all sites as something likely to blow up","msgtype":"m.text"},"ts":1307057102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"my point is the 5MB isn't intended to be used by the good sites","msgtype":"m.text"},"ts":1307057103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just supposed to be enough to do minor stuff that isn't problematic","msgtype":"m.text"},"ts":1307057104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like storing prefs","msgtype":"m.text"},"ts":1307057105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you're serious about using the site, you grant it more","msgtype":"m.text"},"ts":1307057106000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"much more","msgtype":"m.text"},"ts":1307057107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be fine, except as far as I know implementations don't implement the \"grant it more\" path","msgtype":"m.text"},"ts":1307057160000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"file bugs","msgtype":"m.text"},"ts":1307057161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yelling out my window feels as likely to help :)","msgtype":"m.text"},"ts":1307057162000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is localStorage sync per spec? doesn't seem like it needs to be--would make more sense to only guarantee atomicity, and to make updates async","msgtype":"m.text"},"ts":1307057400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Well, it's sync in the JavaScript sense.","msgtype":"m.text"},"ts":1307057460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just because the API is sync.","msgtype":"m.text"},"ts":1307057461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Of course browsers don't have to do sets synchronously.","msgtype":"m.text"},"ts":1307057462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I assume they don't.","msgtype":"m.text"},"ts":1307057463000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They probably write it and return immediately without fsync()ing.  Or I'd hope they do, anyway.","msgtype":"m.text"},"ts":1307057464000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"filing bugs does help","msgtype":"m.text"},"ts":1307057465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But for gets, kind of hard to avoid synchronous disk reads if the API is synchronous.","msgtype":"m.text"},"ts":1307057520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"could just read the whole thing in on the first read--which is still sync, but just once","msgtype":"m.text"},"ts":1307057521000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(given that, even putting aside the 5MB thing, localStorage is not going to be huge)","msgtype":"m.text"},"ts":1307057522000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"my experience with filing bugs on Firefox is that I get annoying bugzilla mails for years and that's about it, heh","msgtype":"m.text"},"ts":1307057580000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i find it amusing that when I unsubscribe from a bug because it emails me too much, it emails everyone else on the bug telling them that I unsubscribed","msgtype":"m.text"},"ts":1307057581000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what if there's more data stored than memory available?","msgtype":"m.text"},"ts":1307057700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it only e-mails them if they opted in to getting mails about changed to the cc list","msgtype":"m.text"},"ts":1307057701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having that much data doesn't seem like a case for localStorage (but of course browsers can decide whether to pre-cache localStorage heuristically)","msgtype":"m.text"},"ts":1307057760000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess there are also the more complex structured clone cases, like File, where you may have to cross-check mtimes or whatever--so even in 5MB, you may have thousands of File objects that would need to be verified synchronously","msgtype":"m.text"},"ts":1307057940000,"senderName":"zewt","senderId":"zewt@irc"}
]