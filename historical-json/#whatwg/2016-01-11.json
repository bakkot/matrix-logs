[
{"content":{"body":"nice job Domenic :)","msgtype":"m.text"},"ts":1452488526000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"kudos go to terinjokes and robertkowalski; I'm just kind of shepherding them through it :)","msgtype":"m.text"},"ts":1452488548000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i don't usually meme, but when I do.","msgtype":"m.text"},"ts":1452488618000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"http://i2.kym-cdn.com/photos/images/original/000/234/739/fa5.jpg","msgtype":"m.text"},"ts":1452488619000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1452491653000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk, Domenic: Any pointer as to where is the spec related to the tree building of an <svg> element in a <mathml annotation-xml> element in HTML?","msgtype":"m.text"},"ts":1452508239000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Never mind, can't read.","msgtype":"m.text"},"ts":1452508351000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: hello, could you review this https://github.com/whatwg/html/pull/485","msgtype":"m.text"},"ts":1452513011000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"annevk, can you add (webidl arrays) to the summary in https://github.com/whatwg/html/issues/11 ?","msgtype":"m.text"},"ts":1452515737000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Isn't Client.id in serviceworkers a bit too vaguely spec'ed. I could easily see some web page starting to rely on the id types of some browser, but id being some other kind of string in some other browser","msgtype":"m.text"},"ts":1452516971000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(not that I understand the need for id at all)","msgtype":"m.text"},"ts":1452517005000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ms2ger: done","msgtype":"m.text"},"ts":1452517769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks\\","msgtype":"m.text"},"ts":1452517780000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rits: not sure what zcorpan means either","msgtype":"m.text"},"ts":1452517798000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rits: zcorpan should probably review it though","msgtype":"m.text"},"ts":1452517805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rits: he's more familiar with that section","msgtype":"m.text"},"ts":1452517817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sent you the wrong link actually i am asking for this one https://github.com/whatwg/html/pull/484","msgtype":"m.text"},"ts":1452517891000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"rits: the step below my comment should be merged into the step above my comment, so those things are in the same \"queue a task\"","msgtype":"m.text"},"ts":1452517908000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rits: except \"abort these steps\" at the end which can be its own step","msgtype":"m.text"},"ts":1452517928000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: okay, thanks!","msgtype":"m.text"},"ts":1452517988000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"Ms2ger: btw, about wrapping, the img section should move towards 100-col wrapping like the rest of the spec","msgtype":"m.text"},"ts":1452518029000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: Is anyone working on fixing WebIDL.py wrt to #11?","msgtype":"m.text"},"ts":1452518056000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"rits: https://github.com/whatwg/html/commit/16eb8bb254dde2d0ab5617c410d46a87485065c8 is similar","msgtype":"m.text"},"ts":1452518113000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rits: possibly you should add some more linebreaks also to have consistent style","msgtype":"m.text"},"ts":1452518149000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nox, I have no idea what the status is","msgtype":"m.text"},"ts":1452518156000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, okay (though I kinda feel like semantic wrapping was a good idea)","msgtype":"m.text"},"ts":1452518181000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rits: I think it would be great if in the seamless=\"\" removal commit message you list the sets of commits that are being reverted","msgtype":"m.text"},"ts":1452518206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rits: that would also make it easier to review if anything was missed","msgtype":"m.text"},"ts":1452518222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: Ok.","msgtype":"m.text"},"ts":1452518245000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: yeah i saw that, i'll do the fix","msgtype":"m.text"},"ts":1452518256000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"annevk: you mean those previous commits right like these one's https://github.com/whatwg/html/commit/dfa3f22b5278113cba689c3cf6e358f17e334311","msgtype":"m.text"},"ts":1452518484000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"Ms2ger: i don't disagree in principle though i didn't get used to it when working on <picture>. but if everyone prefers semantic linebreaks over 100-col i'd be cool with that","msgtype":"m.text"},"ts":1452518500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rits: yeah","msgtype":"m.text"},"ts":1452518563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure will do that :)","msgtype":"m.text"},"ts":1452518600000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"Ms2ger: semantic wrapping?","msgtype":"m.text"},"ts":1452518619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: ^","msgtype":"m.text"},"ts":1452518623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://rhodesmill.org/brandon/2012/one-sentence-per-line/","msgtype":"m.text"},"ts":1452518633000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, let's not do that, that's a lot more work","msgtype":"m.text"},"ts":1452518774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm not sure it's really a lot more work, but it does need some getting used to","msgtype":"m.text"},"ts":1452518899000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it also makes searching text simpler because you can search for things with just spaces instead of doing \\s+ to catch things that are split over lines","msgtype":"m.text"},"ts":1452519055000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That's true, I do try to keep terms on a single line","msgtype":"m.text"},"ts":1452519097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although not in HTML since we weren't using that convention there","msgtype":"m.text"},"ts":1452519106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/forms.html#dom-form-item","msgtype":"m.text"},"ts":1452520587000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/forms.html#htmlformelement","msgtype":"m.text"},"ts":1452520600000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"instead of \"getter Element (unsigned long index);\", should it be \"getter Element? (unsigned long index);\"","msgtype":"m.text"},"ts":1452520615000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"e.g. if formelement.elements is an empty collection, what element should formelements[100] return?","msgtype":"m.text"},"ts":1452520670000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"frewsxcv: i think that is covered by webidl (returns undefined)","msgtype":"m.text"},"ts":1452520804000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if that is true we should have a note explaining that since the definition entirely defers to item() from HTMLCollection which can return null","msgtype":"m.text"},"ts":1452520898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"frewsxcv: That matters only for getters with a name.","msgtype":"m.text"},"ts":1452520910000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That getter doesn't have one.","msgtype":"m.text"},"ts":1452520921000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The one getter with a name and no optional type, IIRC, is in CSStyleDeclaration.","msgtype":"m.text"},"ts":1452520937000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"For undefined properties, item() returns the empty string, while the getter returns undefined as usual.","msgtype":"m.text"},"ts":1452520954000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"frewsxcv, logically, it returns Result<T, ()>","msgtype":"m.text"},"ts":1452521285000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Where Err(()) => undefined","msgtype":"m.text"},"ts":1452521304000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://heycam.github.io/webidl/#idl-indexed-properties has a note covering this","msgtype":"m.text"},"ts":1452521519000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: under \"Handle redirects\" the navigate algorithm talks about a same-origin check, but I cannot think of any platform features that warrant that check being there","msgtype":"m.text"},"ts":1452522613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: is that perhaps a leftover from the old <form> submission methods (PUT/DELETE)","msgtype":"m.text"},"ts":1452522642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: that's the only thing I can think of that would warrant all that text there","msgtype":"m.text"},"ts":1452522650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not sure. I can't think of a way to navigate using a non GET/POST method either but it at least makes sense that if such a thing existed then you would want that check, so it could also be futureproofing","msgtype":"m.text"},"ts":1452522915000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: I've been thinking about how to handle redirects and navigate","msgtype":"m.text"},"ts":1452523520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I think I have a good one but it changes the processing model a bit...","msgtype":"m.text"},"ts":1452523541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... process model of navigate or serviceworker/fetch?","msgtype":"m.text"},"ts":1452523607000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: basically in HTTP fetch under \"redirect status\" we directly return when request's redirect mode is either \"error\" (with a network error) or \"manual\" (with a wrapped response), and all other processing of the response and modifying of the request only happens for \"follow\", which basically ends up invoking a \"HTTP redirect fetch\" algorithm for","msgtype":"m.text"},"ts":1452523624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that, that HTML will also invoke in order to follow the manual redirect it got back","msgtype":"m.text"},"ts":1452523625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: can you point me to the line in that link which talks about that behavior?","msgtype":"m.text"},"ts":1452523625000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"wanderview: I have to run an errand now, but I think I should have time to prepare a PR for this so you can review when I get back, if it doesn't sound totally crazy","msgtype":"m.text"},"ts":1452523668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds reasonable... but I am also still waking up","msgtype":"m.text"},"ts":1452523682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"i just realised the irony of <meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\">","msgtype":"m.text"},"ts":1452524946000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: can you test https://github.com/whatwg/html-build/issues/42#issuecomment-168966903 (and edit the comment) ?","msgtype":"m.text"},"ts":1452525144000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: how do I translate the test output into table rows","msgtype":"m.text"},"ts":1452525262000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I get HTML: no space between: ȃ  / HTML: with space between: a ̑  / XHTML: no space between: a / XHTML: with space between: a","msgtype":"m.text"},"ts":1452525304000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i.e. hat-on-top, hat-to-the-side, no hat, no hat","msgtype":"m.text"},"ts":1452525330000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: woah, no hat? i don't know how to explain that","msgtype":"m.text"},"ts":1452525363000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1452525378000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe Edge doesn't support that FPI and expands unknown entities to the empty string","msgtype":"m.text"},"ts":1452525427000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in XHTML only though","msgtype":"m.text"},"ts":1452525439000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Isn't XHTML supposed to only have like two named character entities","msgtype":"m.text"},"ts":1452525465000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: can you check http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3819 instead?","msgtype":"m.text"},"ts":1452525506000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: the set can be extended with a DTD, and browsers have built-in DTDs that get enabled by the public identifier in the doctype","msgtype":"m.text"},"ts":1452525539000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: same result","msgtype":"m.text"},"ts":1452525560000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ok thx. i can edit the comment","msgtype":"m.text"},"ts":1452525592000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: could you review https://github.com/whatwg/html/pull/456 , thanks!","msgtype":"m.text"},"ts":1452528095000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"rits_: done, thank *you*","msgtype":"m.text"},"ts":1452528876000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: \\o/","msgtype":"m.text"},"ts":1452528924000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"wanderview: I wish you had stated your make all combinations work together preference a little earlier","msgtype":"m.text"},"ts":1452528927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thats how I started the issue, no?","msgtype":"m.text"},"ts":1452528947000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: your last comment was \"either way\"","msgtype":"m.text"},"ts":1452528952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: anyway, I'm glad I created a PR now","msgtype":"m.text"},"ts":1452528992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm ok with blocking them... but not if it means fetch(url, { mode: 'no-cors' }) throws","msgtype":"m.text"},"ts":1452529017000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: the \"same-origin data-URL flag\" has to be added here https://fetch.spec.whatwg.org/#requests , right?","msgtype":"m.text"},"ts":1452529019000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"rits_: no, it is specified there","msgtype":"m.text"},"ts":1452529095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah :)","msgtype":"m.text"},"ts":1452529150000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"rits_: section 2.2.2 of HTML lists dependencies and terms imported from dependencies","msgtype":"m.text"},"ts":1452529172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rits_: under Fetch, that flag is not listed currently, but needs to be if we start using it","msgtype":"m.text"},"ts":1452529192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, thanks for the information","msgtype":"m.text"},"ts":1452529269000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"wanderview: https://github.com/whatwg/fetch/pull/194","msgtype":"m.text"},"ts":1452531372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: your comment in https://github.com/whatwg/fetch/issues/169#issuecomment-170612532 confuses me; my PR made omit/include work, but not same-origin","msgtype":"m.text"},"ts":1452531453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: what tweak did you make in https://github.com/whatwg/html/pull/492#issuecomment-170608046? I cannot figure it out","msgtype":"m.text"},"ts":1452531951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Probably doesn't matter, but since you mentioned it...","msgtype":"m.text"},"ts":1452531962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: changed back to plural \"form elements\"","msgtype":"m.text"},"ts":1452532064000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh I see, I had been comparing identical commits","msgtype":"m.text"},"ts":1452532239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: either time for a third cup of coffee or perhaps a different strategy :p","msgtype":"m.text"},"ts":1452532741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: how's https://github.com/whatwg/html/pull/441 doing? Been open for a while","msgtype":"m.text"},"ts":1452532768000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: also, to be clear, I didn't try to set you up, I'm likewise not very sharp at the moment","msgtype":"m.text"},"ts":1452532771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've gotten this set of logic wrong in the spec a number of times","msgtype":"m.text"},"ts":1452532787000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I don't trust myself","msgtype":"m.text"},"ts":1452532789000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: seems to be waiting for davve to review","msgtype":"m.text"},"ts":1452532802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: my confusion is compounded by gecko using a reversed logic flag... we have an \"exclude credentials\" flag which we set in the reverse logic condition","msgtype":"m.text"},"ts":1452532828000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: yeah, i think it's a-OK. i could ask davve if he would like to check again though","msgtype":"m.text"},"ts":1452532849000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: ah, I moved towards include because the safe default is to not include them","msgtype":"m.text"},"ts":1452532886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea, makes sense","msgtype":"m.text"},"ts":1452532896000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: though the web-compatible default is often unsafe of course :/","msgtype":"m.text"},"ts":1452532901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I had a reference to https://html.spec.whatwg.org/multipage/webappapis.html#script-execution-environment, which has now disappeared. Is that now https://tc39.github.io/ecma262/#sec-execution-contexts?","msgtype":"m.text"},"ts":1452540249000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: it depends on what you are doing with that reference... it was never a well-defined concept in HTML, to be honest :-/","msgtype":"m.text"},"ts":1452540486000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm using it to say when navigator.bluetooth.requestDevice() will return the same BluetoothDevice instance. Maybe the global object is the right thing to attach that to? Should we share objects across any wider scope than a global object?","msgtype":"m.text"},"ts":1452540646000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah the global object = current Realm = environment settings object (pick one, probably entry) is the right thing to do there. You should not share objects across any wider scope in general, since different realms have different Object.prototype etc.","msgtype":"m.text"},"ts":1452540733000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jyasskin: maybe you can just use the Bluetooth interface though; there should only be one of those per global, right?","msgtype":"m.text"},"ts":1452540799000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, I can use that. Should I want realm1.navigator.bluetooth.requestDevice() to return objects from window1, even if it's called from realm2?","msgtype":"m.text"},"ts":1452540913000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"s/window1/realm1","msgtype":"m.text"},"ts":1452540917000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"oof i hate these sort of questions","msgtype":"m.text"},"ts":1452540994000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe good to check with bz who generally has opinions on this, but my provisional thoughts would be: treat it like instance state. So window1.navigator.bluetooth.requestDevice.call(window2.navigator.bluetooth) will look it up on the \"this\" value, i.e. on window2","msgtype":"m.text"},"ts":1452541057000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or on window2's Bluetooth instance, rather","msgtype":"m.text"},"ts":1452541072000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, that's what I was suggesting. window2.navigator.bluetooth would be the Bluetooth instance. Then we'd attach each object to its Bluetooth instance so it could look up the right objects too.","msgtype":"m.text"},"ts":1452541189000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I'll cc bz on the change that fixes this, so he can comment.","msgtype":"m.text"},"ts":1452541281000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"awesome yeah sounds like a good plan to me","msgtype":"m.text"},"ts":1452541290000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sorry about messing up the link","msgtype":"m.text"},"ts":1452541299000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for wrapping only wrap to 100 characters is necessary for the whatwg spec, because when i set to 100 it goess like this http://pastebin.com/yLZFaDpQ","msgtype":"m.text"},"ts":1452541365000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"rits_: that doesn't seem like correct wrapping; whatever tool you are using is not doing a good job","msgtype":"m.text"},"ts":1452541397000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: sublime, but i have tried every option to set it's wrapping","msgtype":"m.text"},"ts":1452541443000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"aren't tools just the worst","msgtype":"m.text"},"ts":1452541445000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"rits_: in general I just make sublime put a line at 100 characters and make sure to never go over it","msgtype":"m.text"},"ts":1452541462000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ok from ruler right?","msgtype":"m.text"},"ts":1452541503000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"rits_: yeah","msgtype":"m.text"},"ts":1452541513000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"do they let you hire interns Domenic","msgtype":"m.text"},"ts":1452541535000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if you get the chance you should get an intern to make a clang-format plugin for bikeshed et al","msgtype":"m.text"},"ts":1452541555000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: No problem; it pointed out that I wasn't precisely specifying what happens.","msgtype":"m.text"},"ts":1452541569000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: ok i did that too but sometimes i kind of cross that and it starts looking weird, thanks!, i'll try to be more specific now :)","msgtype":"m.text"},"ts":1452541656000,"senderName":"rits_","senderId":"rits_@irc"},
{"content":{"body":"wow... running firefox 2 feels like running netscape 4","msgtype":"m.text"},"ts":1452544128000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"everything is blurry, i suppose it doesn't do subpixel stuff. and it crashes trying the thing i want to test","msgtype":"m.text"},"ts":1452544186000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"isn't that like a 10 year old browser now?","msgtype":"m.text"},"ts":1452544243000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"<iframe src=\"  ->     * IFRAME src=\"</HTML\" hahaha i had forgotten about this pre-html5-parser gecko bug","msgtype":"m.text"},"ts":1452544257000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"caitp: i somehow hadn't expected that testing a 10 year old browser now would give the same vibes as testing a 10 year old browser 10 years ago","msgtype":"m.text"},"ts":1452544345000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"because i remember using firefox 2 and it didn't suck","msgtype":"m.text"},"ts":1452544378000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"caitp: more, no?","msgtype":"m.text"},"ts":1452544422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"idk, I'm thinking somewhere around 2005","msgtype":"m.text"},"ts":1452544437000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"2006, apparently","msgtype":"m.text"},"ts":1452544467000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"less than 10","msgtype":"m.text"},"ts":1452544476000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"displays were smaller, had different aspect ratios, and were still CRTs more often than not","msgtype":"m.text"},"ts":1452544773000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the mathml.dtd thing apparently doesn't work for data: url documents in firefox 2.","msgtype":"m.text"},"ts":1452544981000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it resolves the system identifier and checks if the last part of the path is \"mathml.dtd\", case-insensitively","msgtype":"m.text"},"ts":1452545047000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: https://github.com/w3c/web-platform-tests/issues/2466 - is there a hook for when a node changes its node document? maybe just say \"the node document is changed\"?","msgtype":"m.text"},"ts":1452546197000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]