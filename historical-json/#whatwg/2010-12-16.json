[
{"content":{"body":"If we don't have interop anyway, presumably the spec is easier to change than Direct2D.","msgtype":"m.text"},"ts":1292457660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hm, does anyone support image-resolution yet in any way?","msgtype":"m.text"},"ts":1292457900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm thinking that it's kinda silly to have resolution units which are just inverted length units.","msgtype":"m.text"},"ts":1292457901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can just use lengths instead.","msgtype":"m.text"},"ts":1292457960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: in this particular instance, changing the spec is non-trivial (nobody has yet, to my knowledge, figured out a way to spec what is desired)","msgtype":"m.text"},"ts":1292457961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my bigger concern for compat is CoreGraphics, which can't implement the currently spec'd semantics","msgtype":"m.text"},"ts":1292458140000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"i doubt that apple will change CG to match what the spec says and i doubt that we'd be super happy to make chrome behave differently from what CoreGraphics does (since we use CG on the mac port)","msgtype":"m.text"},"ts":1292458141000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"sorry, is this a problem with the basic compositing modes or with compositing + clipping?","msgtype":"m.text"},"ts":1292458200000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"the regions to which the compositing modes apply","msgtype":"m.text"},"ts":1292458201000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"for example if the composite mode is \"copy\" and you draw an image into a larger canvas, does that operation cause every pixel outside the target rectangle to become transparent black or no?","msgtype":"m.text"},"ts":1292458260000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1292458261000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"the spec says that everything outside of the target bounds of the image becomes transparent black because you first draw the image into an infinitely large transparent black bitmap, then composite that bitmap on top of the canvas using the specified composite mode","msgtype":"m.text"},"ts":1292458262000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"which (IMHO) is stupid and nobody does (except maybe opera)","msgtype":"m.text"},"ts":1292458320000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yeah it is","msgtype":"m.text"},"ts":1292458380000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"I don't see how it could be impossible to implement in any graphics system - just draw onto a new temporary canvas-sized bitmap and then composite onto the canvas, instead of doing the drawing+compositing in a single step","msgtype":"m.text"},"ts":1292458440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That wouldn't be particularly efficient but you only need to do it for weird compositing modes","msgtype":"m.text"},"ts":1292458441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well sure, it's not impossible if you are willing to be super super slow","msgtype":"m.text"},"ts":1292458560000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"but i'd rather not use a ton more memory and be slow to implement some functionality that no authors really want","msgtype":"m.text"},"ts":1292458561000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"If no authors want it then it doesn't matter that it's slow","msgtype":"m.text"},"ts":1292458620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and if authors do want it but you implement something different but faster, they still won't get what they want","msgtype":"m.text"},"ts":1292458621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is the current drawing model in fact PorterDuff as Jatinder Mann says?","msgtype":"m.text"},"ts":1292458622000,"senderName":"mdelaney","senderId":"mdelaney@irc"},
{"content":{"body":"IE9 may just not support any other composite modes","msgtype":"m.text"},"ts":1292458623000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"And why is sticking with traditional porterduff so important?","msgtype":"m.text"},"ts":1292458624000,"senderName":"mdelaney","senderId":"mdelaney@irc"},
{"content":{"body":"PorterDuff defines what happens at each pixel","msgtype":"m.text"},"ts":1292458680000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"is there a common use case that that conceptual model is needed for though?","msgtype":"m.text"},"ts":1292458681000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"it doesn't define what pixels you apply the operation to","msgtype":"m.text"},"ts":1292458682000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"bckenny: i'm sure you can construct cases and it's very easy to spec out the current model","msgtype":"m.text"},"ts":1292458683000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: So, webkit's behavior may be in compliance with porterduff then?","msgtype":"m.text"},"ts":1292458740000,"senderName":"mdelaney","senderId":"mdelaney@irc"},
{"content":{"body":"I mean, apart from if you might want a transparent blank canvas other than your source image...does it buy you anything in the other compositing modes?","msgtype":"m.text"},"ts":1292458800000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"because otherwise it just sounds like no one wants to define the extents of a source image and then just say \"and it's destination everywhere else\"","msgtype":"m.text"},"ts":1292458860000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"mdelaney: sure, but that's kind of orthogonal to the issue","msgtype":"m.text"},"ts":1292458861000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: I was just going to point out that in Jantinder's email, this is presumably the reasoning for going with Firefox/Opera's way: \"We have since consulted with many graphics experts, and it appears that the spec as written, and implemented by Firefox and Opera, is the correct definition of Porter-Duff and composition operations, and its behavior is acceptable.\"","msgtype":"m.text"},"ts":1292458920000,"senderName":"mdelaney","senderId":"mdelaney@irc"},
{"content":{"body":"bckenny: sure. it's tricky if the source is some gradient with lots of transparency or other odd cases","msgtype":"m.text"},"ts":1292458921000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"so TC39 is publishing yet another ES draft with no HTML version","msgtype":"m.text"},"ts":1292458922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jamesr_: but if both are porterduff in the end, then i'm not sure why Jantinder didn't mention how they came to that conclusion","msgtype":"m.text"},"ts":1292458980000,"senderName":"mdelaney","senderId":"mdelaney@irc"},
{"content":{"body":"MikeSmith: your ->HTML conversion script will still work on the new one, I hope","msgtype":"m.text"},"ts":1292458981000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"mdelaney: porterduff isn't the significant bit here","msgtype":"m.text"},"ts":1292458982000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"hober: problem is, it's not a script","msgtype":"m.text"},"ts":1292458983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's the bounds of the region that you apply the composite operation in","msgtype":"m.text"},"ts":1292458984000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: sure. I just think of it as compositing a textured quad, and everything else seems silly :)","msgtype":"m.text"},"ts":1292458985000,"senderName":"bckenny","senderId":"bckenny@irc"},
{"content":{"body":"or, only partly a script","msgtype":"m.text"},"ts":1292458986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ahh.","msgtype":"m.text"},"ts":1292458987000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"also that email seems to assume that Firefox or Opera match the spec","msgtype":"m.text"},"ts":1292458988000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"manual cleanup :(","msgtype":"m.text"},"ts":1292458989000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is not true for either in all cases","msgtype":"m.text"},"ts":1292459040000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yeah, I've gone down that road before. 80% script, 20% one-off emacs macros I never remember to record","msgtype":"m.text"},"ts":1292459041000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"gregg tavares made a very nice test page in the last big thread about this that showed lots of inconsistencies","msgtype":"m.text"},"ts":1292459042000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"I don't... I don't understand how you can *possible* publish an internet standard not in HTML.","msgtype":"m.text"},"ts":1292459100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But then I think the same thing of the IETF and their ridiculously retarded RFC format.","msgtype":"m.text"},"ts":1292459101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ECMAScript is not an internet standard, i guess","msgtype":"m.text"},"ts":1292459102000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Riiiight.","msgtype":"m.text"},"ts":1292459220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though, I suppose I was being unnecessarily restrictive.","msgtype":"m.text"},"ts":1292459221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why is anything anywhere published to the web not in HTML?","msgtype":"m.text"},"ts":1292459280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" /me wonders if anybody has maybe started work on a WebSRT parser yet","msgtype":"m.text"},"ts":1292467260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: foolip wrote a demo one","msgtype":"m.text"},"ts":1292477400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah cool","msgtype":"m.text"},"ts":1292477460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i'm going through some websrt feedback now though and making a number of changes to the syntax","msgtype":"m.text"},"ts":1292477461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, saw a checkin earlier","msgtype":"m.text"},"ts":1292477462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there's a bunch more but pimpmyspec broke ","msgtype":"m.text"},"ts":1292477463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you busted the spec pimper?","msgtype":"m.text"},"ts":1292478840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham's server's down or something","msgtype":"m.text"},"ts":1292479080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Does anyone know some good CMS systems that already have a beta version in HTML5 ?","msgtype":"m.text"},"ts":1292482320000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Drupal right?","msgtype":"m.text"},"ts":1292482321000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"isn't drupal drinking more RDFa kool aid?","msgtype":"m.text"},"ts":1292482920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what html5 features do they have?","msgtype":"m.text"},"ts":1292482921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I saw mention recently of Wordpress adding some HTML5 stuff","msgtype":"m.text"},"ts":1292483040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno if that counts as a good CMS system","msgtype":"m.text"},"ts":1292483041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1292483100000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ill look it up","msgtype":"m.text"},"ts":1292483101000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"can anyone else maybe name some larger web app products (preferbly cms) that have a beta version of their app in HTML5?","msgtype":"m.text"},"ts":1292483102000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"i more mean that the CMS itself has a beta that uses some cool HTML (API) things","msgtype":"m.text"},"ts":1292483103000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"i.e. for example webworkers if more than 400 nav tree items have to be added (since it could mess up ui handling)","msgtype":"m.text"},"ts":1292483160000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"desktop notifications (sorry i know this is not spec, but i heard there are plans from some other brosers than chrome/safari to support later) that notify the os when a large upload is done so the user does not have to havet he browser focussed","msgtype":"m.text"},"ts":1292483220000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MikeSmith, my implementation is http://people.opera.com/philipj/2010/10/02/ovc/demos/track.js and http://people.opera.com/philipj/2010/10/02/ovc/demos/websrt.js","msgtype":"m.text"},"ts":1292486760000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1292486761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"takes a look","msgtype":"m.emote"},"ts":1292486762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it doesn't implement the rendering or any of the crap after the timecode (positioning)","msgtype":"m.text"},"ts":1292486820000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but otherwise tries to do what the spec says","msgtype":"m.text"},"ts":1292486821000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"you'll see FEEDBACK in the source code, look at the long mail I sent for the details","msgtype":"m.text"},"ts":1292486822000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1292486823000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks at websrt_parse(input)","msgtype":"m.emote"},"ts":1292486880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1292487000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"FEEDBACK: this is a terrible idea\"","msgtype":"m.text"},"ts":1292487001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right, in particular the parsing of the milliseconds","msgtype":"m.text"},"ts":1292488740000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"00:00.1 parses to 0.001 s :)","msgtype":"m.text"},"ts":1292488800000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"because that's what SRT parsers like VLC does","msgtype":"m.text"},"ts":1292488801000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: well, that's not so great","msgtype":"m.text"},"ts":1292489460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they do that by design?","msgtype":"m.text"},"ts":1292489461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or just due to a bug that nobody ever bothered to fix?","msgtype":"m.text"},"ts":1292489462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm not sure","msgtype":"m.text"},"ts":1292489520000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but I believe they're not the only one to do just that","msgtype":"m.text"},"ts":1292489521000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"it's kind of easier to write in C that way","msgtype":"m.text"},"ts":1292489522000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess it's easier to write it in anything that way","msgtype":"m.text"},"ts":1292489580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the date parser in v8 was giving that same result for parsing times with milliseconds, in ISO format","msgtype":"m.text"},"ts":1292489640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"until recently","msgtype":"m.text"},"ts":1292489641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the cause was partly just that it was expecting/assuming three digits for the milliseconds part","msgtype":"m.text"},"ts":1292489760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is what the spec requires","msgtype":"m.text"},"ts":1292489761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but of course not always what people do","msgtype":"m.text"},"ts":1292489762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"foolip: does it handle 00:00.100 correctly?","msgtype":"m.text"},"ts":1292489820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or does it also treat that as 0.001 ?","msgtype":"m.text"},"ts":1292489821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it parses the digits after the decimal point as an integer and takes that as the number of milliseconds","msgtype":"m.text"},"ts":1292489880000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"so it's only correct when there are exactly 3 decimals","msgtype":"m.text"},"ts":1292489940000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292490120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's not quite as bad, then","msgtype":"m.text"},"ts":1292490180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though still not good","msgtype":"m.text"},"ts":1292490181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I can understand why it gives that result","msgtype":"m.text"},"ts":1292490360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"should instead do something like this:","msgtype":"m.text"},"ts":1292490420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://codereview.chromium.org/5336005/patch/25001/26002","msgtype":"m.text"},"ts":1292490421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but anyway, if the existing implementations all interoperably do it the broken way, I guess it makes sense to be consistent with that","msgtype":"m.text"},"ts":1292490540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, the encoding data can be tuned quite a bit by ordering the labels more effectively","msgtype":"m.text"},"ts":1292490960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sleeping things over was definitely a good idea","msgtype":"m.text"},"ts":1292490961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith_, hey!","msgtype":"m.text"},"ts":1292491020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith_, are we publishing today or early January?","msgtype":"m.text"},"ts":1292491021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we aren't publishing today","msgtype":"m.text"},"ts":1292491320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1292491321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm gonna work out how to sort these labels then :)","msgtype":"m.text"},"ts":1292491380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1292491381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyone up for a sorting problem?","msgtype":"m.text"},"ts":1292492100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i iterate through a huge list and calculate a score for each item (items can have the same score); now I want a new list sorted by score first and 0-9a-z second","msgtype":"m.text"},"ts":1292492160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess creating a dictionary with the key being the score and the items being the value as list makes the most sense...","msgtype":"m.text"},"ts":1292492280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MAke a list of (score, name) tuples and do the sort on that","msgtype":"m.text"},"ts":1292492400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It will sort by the first part then the second part, and so on","msgtype":"m.text"},"ts":1292492401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1292492520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems we released Opera 11","msgtype":"m.text"},"ts":1292492521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, how do I sort in reverse on score and normal order on label?","msgtype":"m.text"},"ts":1292492640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I could just build up score the other way around...","msgtype":"m.text"},"ts":1292492641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: make (-scope, label) tuples?","msgtype":"m.text"},"ts":1292492642000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*-score","msgtype":"m.text"},"ts":1292492643000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this is quite neat","msgtype":"m.text"},"ts":1292492700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I've been thinking about how to implement validator support for \"URL potentially surrounded by spaces\", and one way would seem to be to replace common.data.uri = w:iri-ref with common.data.uri = list { w:iri-ref }","msgtype":"m.text"},"ts":1292492760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the downside of that that would be the error message for case like <video src=\" http://example.com/Path with spaces  \"> would change","msgtype":"m.text"},"ts":1292492820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, or maybe not such a bad change","msgtype":"m.text"},"ts":1292492880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"currently, the error message for that is \"Bad value  http://example.com/Path with spaces   for attribute src on element video: Illegal character in scheme component\"","msgtype":"m.text"},"ts":1292492940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but for the case of <video src=\"http://example.com/Path with spaces\">","msgtype":"m.text"},"ts":1292493000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in now reports \"Bad value http://example.com/Path with spaces for attribute src on element video: Whitespace in path component. Use %20 in place of spaces\"","msgtype":"m.text"},"ts":1292493060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if I change to doing  common.data.uri = list { w:iri-ref } it will instead just report \"Bad value http://example.com/Path with spaces for attribute src on element video.\"","msgtype":"m.text"},"ts":1292493120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"without giving any more guidance than that","msgtype":"m.text"},"ts":1292493121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks jgraham","msgtype":"m.text"},"ts":1292493360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"went back from 100 to 86 and far more useful tables at the top","msgtype":"m.text"},"ts":1292493420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://quuz.org/tempxxx/table.html is a little prettier now","msgtype":"m.text"},"ts":1292498220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The numbers in the table are unicode codepoints?","msgtype":"m.text"},"ts":1292498280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1292498340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"The table that follows describes the mapping from octets to Unicode \"","msgtype":"m.text"},"ts":1292498341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should add codepoint","msgtype":"m.text"},"ts":1292498342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, codepoint as hex would be more useful than decimal","msgtype":"m.text"},"ts":1292498343000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you can't do that in your head?","msgtype":"m.text"},"ts":1292498344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks in python docs","msgtype":"m.emote"},"ts":1292498400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"U+\" + str(hex(value)).rpad(4) or so","msgtype":"m.text"},"ts":1292498460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"U+\" + str(hex(value))[2:].rjust(4).upper()","msgtype":"m.text"},"ts":1292498580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is more right","msgtype":"m.text"},"ts":1292498581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what is the rjust for?","msgtype":"m.text"},"ts":1292498700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, hex already returns a string","msgtype":"m.text"},"ts":1292498701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, so it does","msgtype":"m.text"},"ts":1292498702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway, refresh","msgtype":"m.text"},"ts":1292498703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1292498704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I omitted the U+ part btw","msgtype":"m.text"},"ts":1292498705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rjust means that hex(10) -> 000A not A","msgtype":"m.text"},"ts":1292498706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1292498707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that might be nice","msgtype":"m.text"},"ts":1292498760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am assuming everything is BMP","msgtype":"m.text"},"ts":1292498761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Otherwise it should probably be rjust(6)","msgtype":"m.text"},"ts":1292498762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but rjust doesn't work","msgtype":"m.text"},"ts":1292498820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1292498821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rjust defaults to a space","msgtype":"m.text"},"ts":1292498940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it's rjust(4, \"0\")","msgtype":"m.text"},"ts":1292498941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, good point","msgtype":"m.text"},"ts":1292498942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"refresh again","msgtype":"m.text"},"ts":1292498943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice","msgtype":"m.text"},"ts":1292499000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess I should set font-family to monospace to make them align even better","msgtype":"m.text"},"ts":1292499001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1292499240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: please ignore what I said before about the idea of doing common.data.uri = list { w:iri-ref } … I'll add it to the IriRef datatype checker instead","msgtype":"m.text"},"ts":1292500500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I need to add some <section>, classes, and a bit of scripting to the result page ","msgtype":"m.text"},"ts":1292504580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you can filter the output by browsers you care about","msgtype":"m.text"},"ts":1292504581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it recommendable in this current phase of HTML5 , to already start building a beta version of large web app you sell (eg. CMS systems etc) ?","msgtype":"m.text"},"ts":1292505540000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"The short answer is \"yes\"","msgtype":"m.text"},"ts":1292505600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"To get the new functioality/syntax/api knowledge in your organisation","msgtype":"m.text"},"ts":1292505601000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"The longer answer questions the notion of a \"phase\" applied to the whole specification","msgtype":"m.text"},"ts":1292505602000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and to receive feedback from testers, what sort of cool things they could like etc","msgtype":"m.text"},"ts":1292505603000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292505660000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"jgraham: so, when do a presentation, I speak about new functionality that could be relevant for large web apps ( specially CMS) it would be a wise answer to conclude YES because .. ^^ what i just said","msgtype":"m.text"},"ts":1292505661000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"when I do*","msgtype":"m.text"},"ts":1292505662000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"(of course given no instable stuff is spoken about)","msgtype":"m.text"},"ts":1292505720000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: think of HTML5 as CSS3, you use the parts that work in browsers, regardless of the state of the whole specification","msgtype":"m.text"},"ts":1292505721000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Rik`: yea thats hwta i was going to explain","msgtype":"m.text"},"ts":1292505722000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"incremantally more and more apis/features will be used the coming years","msgtype":"m.text"},"ts":1292505723000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: What Rik` said. There is no \"phase\". There is only what is implemented and what is not","msgtype":"m.text"},"ts":1292505780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i more ment:","msgtype":"m.text"},"ts":1292505781000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"everyone is using parts of HTML5, google, facebook, flickr, etc","msgtype":"m.text"},"ts":1292505782000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"This current point in time","msgtype":"m.text"},"ts":1292505783000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"sorry phase was not an appropriate word","msgtype":"m.text"},"ts":1292505784000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"I just need to convince the essence of HTML5, 2-3 mins; why HTML5 standard initiated (by who), 6-7 mins syntax/markup new tags etc, and speaking / summarizing through a few cool apis and what it could do for a CMS","msgtype":"m.text"},"ts":1292505840000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"CMS's can use whatever is deployed in browsers they care about. Significant chunks of HTML5 are deployed in browsers they care about. The rest is logical deduction","msgtype":"m.text"},"ts":1292505900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1292506020000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"but, speaking in terms of creating a beta version, its not per se necessary IE6,7,8 support something","msgtype":"m.text"},"ts":1292506021000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: there are lots of good html5 presentations floating about on the web that will cover what you want","msgtype":"m.text"},"ts":1292506200000,"senderName":"beowulf_","senderId":"beowulf_@irc"},
{"content":{"body":"yea i know ive already build one","msgtype":"m.text"},"ts":1292506260000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"I meant in terms of content, but ok","msgtype":"m.text"},"ts":1292506320000,"senderName":"beowulf_","senderId":"beowulf_@irc"},
{"content":{"body":"beowulf_: oh sorry","msgtype":"m.text"},"ts":1292507400000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"beowulf_: yes i have found a lot good ones, and basically i build my presentation on html5rocks, of course with own content and used a few of the examples that were pretty good already","msgtype":"m.text"},"ts":1292507460000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"jgraham, how do I figure out if a byte has mapped to two code points?","msgtype":"m.text"},"ts":1292512680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, or two 16-bit code units, rather","msgtype":"m.text"},"ts":1292512681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, will the first carry some kind of flag I could check for?","msgtype":"m.text"},"ts":1292512682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because so far I have just rejected encodings that go over 256 16-bit code units, but maybe they are actually creating valid octet -> code point mappings and not some kind of multi-byte scheme","msgtype":"m.text"},"ts":1292512800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you want to check for surrogate pairs in javascript?","msgtype":"m.text"},"ts":1292512860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Are you accounting for encodings that have an escape code that switches them into a different mode?","msgtype":"m.text"},"ts":1292512861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan, yes","msgtype":"m.text"},"ts":1292512920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk congratulations! opera11! :)","msgtype":"m.text"},"ts":1292512921000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"thanks, I'm afraid I had little to do with the release though :)","msgtype":"m.text"},"ts":1292512922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, I'm not dealing with multi-byte encodings","msgtype":"m.text"},"ts":1292512923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, but I want to deal with 8-bit encodings where an octet could potentially create a surrogate pair","msgtype":"m.text"},"ts":1292512980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I forget, but if javascript exposes the surrogate bytes, don't you just check they are in the surrogate range","msgtype":"m.text"},"ts":1292513040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and then stitch them back together using whatever the formula is","msgtype":"m.text"},"ts":1292513041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I was hoping you'd know the details","msgtype":"m.text"},"ts":1292513100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes to research","msgtype":"m.emote"},"ts":1292513101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the wiki article on surrogate pairs should tell you which ranges to check for","msgtype":"m.text"},"ts":1292513160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates seems to have it all","msgtype":"m.text"},"ts":1292513161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Nah, I just look it up","msgtype":"m.text"},"ts":1292513162000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I once even found out where it is documented on OSX if you don't have internet access","msgtype":"m.text"},"ts":1292513220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aah, the 16 means hex","msgtype":"m.text"},"ts":1292513221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"took me a while","msgtype":"m.text"},"ts":1292513222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't seem like it","msgtype":"m.text"},"ts":1292514180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't get the weird behavior I see for some encodings","msgtype":"m.text"},"ts":1292514181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"x-mac-thai is really weird for instance in Safari","msgtype":"m.text"},"ts":1292514240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/#!/ndw/status/15373943112204288","msgtype":"m.text"},"ts":1292517840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"probably a high cost relative the number of switchers attracted","msgtype":"m.text"},"ts":1292517900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1292518680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"embedding a theora stream (from a VLC server) works until the stream moves on to a new playlist item. viewing it in VLC works fine. is there a way to force the <video> element to stay connected across multiple playlist items?","msgtype":"m.text"},"ts":1292518920000,"senderName":"bstar","senderId":"bstar@irc"},
{"content":{"body":"hsivonen: I estimate we would get 1 user per XPath version","msgtype":"m.text"},"ts":1292518980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"before XSLT 2.0 we should do XQueryX","msgtype":"m.text"},"ts":1292519040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, and provide http://www.w3.org/TR/HTTP-in-RDF10/ as output format for developer tools","msgtype":"m.text"},"ts":1292519100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: but very nice users they would be","msgtype":"m.text"},"ts":1292519220000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"annevk: (responding to the sorting issue from earlier) You can pass custom comparator functions to sort.","msgtype":"m.text"},"ts":1292519640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"david_carlisle: All our users are very nice, I'm sure :)","msgtype":"m.text"},"ts":1292519641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: Yeah, but you don't want to","msgtype":"m.text"},"ts":1292519642000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Why not?","msgtype":"m.text"},"ts":1292519643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's complex and slow","msgtype":"m.text"},"ts":1292519644000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So if you can avoid it then you should","msgtype":"m.text"},"ts":1292519700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Slow, okay, maybe.  Shrug.  But complex?  Hardly.","msgtype":"m.text"},"ts":1292519701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At least I imagine it is","msgtype":"m.text"},"ts":1292519702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"comes from lisp, so passing comparators to sort seems natural.","msgtype":"m.emote"},"ts":1292519703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well you have to look up / remember what the function has to return","msgtype":"m.text"},"ts":1292519704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for the different cases","msgtype":"m.text"},"ts":1292519705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's easy.  Just remember the integer comparator lambda x,y: x-y","msgtype":"m.text"},"ts":1292519760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"likes Perl's custom sort syntax, since it encourages use of the spaceship operator","msgtype":"m.emote"},"ts":1292519761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: Like I said, complex","msgtype":"m.text"},"ts":1292519762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Granted, it's even easier if you can just return a bool, but that's the C legacy for you.","msgtype":"m.text"},"ts":1292519763000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my @sorted_by_increasing_age_then_decreasing_height = sort { $a->{age} <=> $b->{age} or $b->{height} <=> $a->{height} } @people; etc","msgtype":"m.text"},"ts":1292519820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's a pretty cool operator.  What does it return?","msgtype":"m.text"},"ts":1292519821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"-1, 0, or +1","msgtype":"m.text"},"ts":1292519822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's what I suspected.","msgtype":"m.text"},"ts":1292519823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(There's a 'cmp' operator which does the same but with string comparison instead of numeric comparison)","msgtype":"m.text"},"ts":1292519880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Wait, perl has operators that only take specific types? I thought perl was rather weakly typed","msgtype":"m.text"},"ts":1292520000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In the sense of \"eager to do implicit type conversions\"","msgtype":"m.text"},"ts":1292520060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume that \"string comparison\" means \"cast to strings before comparing\".","msgtype":"m.text"},"ts":1292520061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Such that 9 cmp 10 return 1.","msgtype":"m.text"},"ts":1292520062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh well that's just silly. There is a reason for explicit cast functions","msgtype":"m.text"},"ts":1292520120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"PHP works the same way.  It's convenient except when it misbehaves and everything breaks.","msgtype":"m.text"},"ts":1292520121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like, in PHP it's a bad idea to do if (!$str) { /* assume string is empty */ }, because '0' == false.","msgtype":"m.text"},"ts":1292520180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I can't count the number of MediaWiki bugs that's caused.","msgtype":"m.text"},"ts":1292520181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I assume it stole the idea from Perl.","msgtype":"m.text"},"ts":1292520182000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham: The operators take any type, and always perform the same operation (e.g. a numeric comparison, or a string comparison) regardless of the dynamic type of the variables","msgtype":"m.text"},"ts":1292520183000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I assume it's so that 0 means false even if it comes straight from a form.","msgtype":"m.text"},"ts":1292520184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1292520240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"See also: http://twitter.com/gsnedders/status/14717708356550656","msgtype":"m.text"},"ts":1292520241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Except when you mean it to be a string and it happens to be exactly '0', it's a headache.","msgtype":"m.text"},"ts":1292520242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(which means you never end up with bugs like doing \"var count = input.value + 1; // oops, the input was 0 and now count is '01'\" like in JS)","msgtype":"m.text"},"ts":1292520243000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Like if (!$_GET['username']) { echo '<strong class=error>You must enter a username!</strong>'; }","msgtype":"m.text"},"ts":1292520300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, I agree.  It's bitten me before, and I think it's retarded.  But shrug.","msgtype":"m.text"},"ts":1292520301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It's silly having a language with implicit string<->number conversions and then operators that do very different things depending on whether a value is currently represented as a string or a number)","msgtype":"m.text"},"ts":1292520302000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That means '0' is an invalid username, oops.","msgtype":"m.text"},"ts":1292520303000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think using . for string concatenation makes sense.","msgtype":"m.text"},"ts":1292520304000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That far it works.","msgtype":"m.text"},"ts":1292520360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But the boolean casting behavior is wonky.","msgtype":"m.text"},"ts":1292520361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Actually, casting altogether is wonky.","msgtype":"m.text"},"ts":1292520362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is why I always use tests like is_set() to see if form vars have been sent, etc.","msgtype":"m.text"},"ts":1292520363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: I think I was happy at \"It's silly having a language with implicit string<->number conversions\"","msgtype":"m.text"},"ts":1292520364000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"'0' == false, false == '', '' != '0'","msgtype":"m.text"},"ts":1292520365000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Perl says anything that stringifies to \"\" or \"0\" is false, I believe","msgtype":"m.text"},"ts":1292520420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's even more horrible.","msgtype":"m.text"},"ts":1292520421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least in PHP it's only literal '' and '0'.","msgtype":"m.text"},"ts":1292520422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Wait, that doesn't even make sense.","msgtype":"m.text"},"ts":1292520423000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: What about the number 0?","msgtype":"m.text"},"ts":1292520424000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I meant strings.","msgtype":"m.text"},"ts":1292520425000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Of course non-strings have their own rules.","msgtype":"m.text"},"ts":1292520426000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Python has sane behavior here.  Classes can define the function that tells whether they're falsy or not.","msgtype":"m.text"},"ts":1292520427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Python is strictly typed.","msgtype":"m.text"},"ts":1292520480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Perl's rules apply to all types","msgtype":"m.text"},"ts":1292520481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Which I have mixed feelings about.","msgtype":"m.text"},"ts":1292520482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It feels kind of excessive to me to have to write things like \"Answer is \" + str(answer) instead of being able to just use \"Answer is \" + answer.","msgtype":"m.text"},"ts":1292520483000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have to say, interpolation is really awesome.","msgtype":"m.text"},"ts":1292520484000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"so 0 stringifies to \"0\", undefined stringifies to \"\", objects stringify to \"HASH(0x7d8220)\" (i.e. not false), etc","msgtype":"m.text"},"ts":1292520485000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Answer is $answer\"","msgtype":"m.text"},"ts":1292520486000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's not strict, it's strong.  (Assuming strict was the opposite of dynamic?)","msgtype":"m.text"},"ts":1292520487000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Strong, strict, whatever.","msgtype":"m.text"},"ts":1292520540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The opposite of dynamic is static.","msgtype":"m.text"},"ts":1292520541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Gah, right.","msgtype":"m.text"},"ts":1292520542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Python has strong dynamic typing.","msgtype":"m.text"},"ts":1292520543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/objects/object references/","msgtype":"m.text"},"ts":1292520544000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Too many words starting with \"st\".","msgtype":"m.text"},"ts":1292520545000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can do \"The answer is %s\"%answer","msgtype":"m.text"},"ts":1292520546000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Use \"Answer is %s\" % answer","msgtype":"m.text"},"ts":1292520547000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dammit, jgraham","msgtype":"m.text"},"ts":1292520548000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is there any way in Python to get something like \"Foo $bar baz\" to interpolate variables?  Something comparably uncluttered?","msgtype":"m.text"},"ts":1292520549000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, but that separates the variables from the place they're put.","msgtype":"m.text"},"ts":1292520600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's considerably more awkward.","msgtype":"m.text"},"ts":1292520601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although probably better than loads of \" + \".","msgtype":"m.text"},"ts":1292520602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, \" + foo + \".","msgtype":"m.text"},"ts":1292520603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I find it more convenient actually, because I can see what the string will look like even with long expressions for the vars.","msgtype":"m.text"},"ts":1292520604000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus, no silly escaping rules.","msgtype":"m.text"},"ts":1292520605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You might be able to do \"Foo ${bar} ${baz}\"%locals() but that might not work","msgtype":"m.text"},"ts":1292520606000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would also be a hideous hack","msgtype":"m.text"},"ts":1292520607000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"always has to pause a bit to remember if he has to do something weird for anything more trivial than a var name in PHP.","msgtype":"m.emote"},"ts":1292520660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I don't recall if it insists that all keys in the dict end up in the output)","msgtype":"m.text"},"ts":1292520661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Another thing that's bitten me in Python is how it concatenates adjacent strings.  Like \"foo\" \"bar\" == \"foobar\".  That's all very nice until you declare an array of lots of strings and forget a comma at the end of the line.","msgtype":"m.text"},"ts":1292520662000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then they silently merge together instead of erroring.","msgtype":"m.text"},"ts":1292520663000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, that's a wart.","msgtype":"m.text"},"ts":1292520664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, that can be annoying in that case","msgtype":"m.text"},"ts":1292520665000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume it comes from C.","msgtype":"m.text"},"ts":1292520666000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It makes sense for C, because there's no way to concatenate strings without a function call.","msgtype":"m.text"},"ts":1292520720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And Guido thought it was useful.","msgtype":"m.text"},"ts":1292520721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can just stick in a + . . .","msgtype":"m.text"},"ts":1292520722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It is sort of useful","msgtype":"m.text"},"ts":1292520723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But not that useful","msgtype":"m.text"},"ts":1292520724000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Perl uses \"<\", \"<=\", \"==\", \"<=>\" etc for numeric comparisons, and \"lt\", \"le\", \"eq\", \"cmp\" etc for string comparisons, which is nice and consistent; but then it uses \"||\" and \"&&\" for normal C-like-precedence boolean operators, and \"or\" and \"and\" for lower-precedence versions of the safe functions, which is a little more confusing)","msgtype":"m.text"},"ts":1292520725000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/safe/same/","msgtype":"m.text"},"ts":1292520726000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Python just uses \"and\" and \"or\" across the board.  Much nicer.","msgtype":"m.text"},"ts":1292520727000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also \"not\" and \"in\".","msgtype":"m.text"},"ts":1292520780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Down with punctuation!","msgtype":"m.text"},"ts":1292520781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Those have C-like precedence, I think","msgtype":"m.text"},"ts":1292520782000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I always forget what exactly the deal is with PHP's \"and\" and \"or\", so I just avoid them.","msgtype":"m.text"},"ts":1292520783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I used to use them in an attempt to emulate Python, but other MediaWiki developers mostly prefer && and ||, so I go with the flow (at least for MW).","msgtype":"m.text"},"ts":1292520840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's kind of like this note from our style guide: \"Homesick C developers write null as NULL because they want to believe that it is a macro defined as ((void*)0). This is not necessary.\"","msgtype":"m.text"},"ts":1292520900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Lower precedence means you can write \"open $fh, $filename or die\" to mean \"if (not (open $fh, $filename)) { die; }\" in a more concise and threatening way","msgtype":"m.text"},"ts":1292520901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I like the \"threatening\".","msgtype":"m.text"},"ts":1292520902000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Concise is, of course, typical of Perl.","msgtype":"m.text"},"ts":1292520903000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I must admit, that's my favorite part of dbconn classes.","msgtype":"m.text"},"ts":1292520904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sadly you can't write \"open $fh, $filename or else\"","msgtype":"m.text"},"ts":1292520905000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Really \"die\" as a keyword is just silly","msgtype":"m.text"},"ts":1292520906000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We seem to be mostly Python people here, is that a coincidence?","msgtype":"m.text"},"ts":1292520907000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, I think it's a function, not a keyword, no?","msgtype":"m.text"},"ts":1292520960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I could be totally wrong.)","msgtype":"m.text"},"ts":1292520961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm like a 5 or 6-language person.","msgtype":"m.text"},"ts":1292520962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno","msgtype":"m.text"},"ts":1292520963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's a built-in function","msgtype":"m.text"},"ts":1292520964000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, you're a Python person if you prefer Python to Perl, regardless of whether you actually use or know either.","msgtype":"m.text"},"ts":1292520965000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I imagine the pyhon thing is pure coincidence","msgtype":"m.text"},"ts":1292520966000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie is a Perl person, and apparently so is Philip`.","msgtype":"m.text"},"ts":1292520967000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Sure, then.","msgtype":"m.text"},"ts":1292520968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can define your own, e.g. the Carp module adds carp and croak etc","msgtype":"m.text"},"ts":1292520969000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which act like die but a bit different","msgtype":"m.text"},"ts":1292520970000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There  don't seem to be that many ruby people here","msgtype":"m.text"},"ts":1292521020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Possibly that is surprising. Possibly they are all just building shit","msgtype":"m.text"},"ts":1292521021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, I've never used Ruby, though it looks interesting.","msgtype":"m.text"},"ts":1292521022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, Ruby is much less popular overall than Perl or Python.","msgtype":"m.text"},"ts":1292521023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least last I checked.","msgtype":"m.text"},"ts":1292521024000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least, outside of Japan.","msgtype":"m.text"},"ts":1292521025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It seems to have gotten more popular over the last couple of years, but Python and Perl are much better-established.","msgtype":"m.text"},"ts":1292521026000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have never really felt the need to learn Ruby since I can use python. If I was learning another language I would pick one a bit different","msgtype":"m.text"},"ts":1292521027000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(especially Perl)","msgtype":"m.text"},"ts":1292521028000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If I were learning a new language, it would be Lisp or Haskell or something.","msgtype":"m.text"},"ts":1292521080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Both are good ideas.","msgtype":"m.text"},"ts":1292521081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: by that definition i'm not a perl person, i just don't know python as well","msgtype":"m.text"},"ts":1292524140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, you use Perl and not Python, so I think that makes you a Perl person.","msgtype":"m.text"},"ts":1292524141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1292524740000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"Hi.","msgtype":"m.text"},"ts":1292524800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"someone can examine this bug https://bugzilla.mozilla.org/show_bug.cgi?id=619703 about drag n drop? ","msgtype":"m.text"},"ts":1292524801000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"it is not related to mozilla, it is a spec bug, i think","msgtype":"m.text"},"ts":1292524802000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"webkit does the same","msgtype":"m.text"},"ts":1292524860000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"File a bug on the spec, then, and the editor will look at it.","msgtype":"m.text"},"ts":1292524861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you think it's a spec bug.","msgtype":"m.text"},"ts":1292524862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I don't know about DnD, so I can't really comment here.)","msgtype":"m.text"},"ts":1292524863000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"thank you... how i can file a bug? ng?","msgtype":"m.text"},"ts":1292524920000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"The spec has a form you can use, that's easiest if you don't have a W3C Bugzilla account.  But you might want an account anyway so you can CC yourself on the bug.","msgtype":"m.text"},"ts":1292524980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/ is the bug tracker (component: HTML5).","msgtype":"m.text"},"ts":1292524981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For the spec, click on the right section here and use the box at the bottom: http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd","msgtype":"m.text"},"ts":1292525040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"thank you, i will register myself","msgtype":"m.text"},"ts":1292525100000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"anyway it is not really a drag & drop bug, but it is related to its events order","msgtype":"m.text"},"ts":1292525160000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"take a look if you have time ;)","msgtype":"m.text"},"ts":1292525161000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"annevk, what version of Fx was used for your encoding tests?","msgtype":"m.text"},"ts":1292529240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hi ms2ger, ive replied to you on mozilla's bugzilla about dragenter/leave","msgtype":"m.text"},"ts":1292529300000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"I don't actually know enough about dnd to know what's desirable","msgtype":"m.text"},"ts":1292529360000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Did you file a spec bug already?","msgtype":"m.text"},"ts":1292529420000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not yet","msgtype":"m.text"},"ts":1292529421000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"i dont want to moan if i'm not sure :)","msgtype":"m.text"},"ts":1292529480000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"in plus what i'm trying to do is impossible to do unless i will examine entire dom trees, set flags, etc","msgtype":"m.text"},"ts":1292529660000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"for who wants to give me an opinion before i file a bug https://bugzilla.mozilla.org/show_bug.cgi?id=619703","msgtype":"m.text"},"ts":1292529720000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"Don't worry, there are loads of people watching the W3C bug tracker who have nothing better to do with their lives than listen to moaning.","msgtype":"m.text"},"ts":1292529900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Speak for yourself, Aryeh :)","msgtype":"m.text"},"ts":1292529960000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm only speaking from observation.","msgtype":"m.text"},"ts":1292529961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"xD","msgtype":"m.text"},"ts":1292530020000,"senderName":"wes222","senderId":"wes222@irc"},
{"content":{"body":"Does passing by reference not work in C99?","msgtype":"m.text"},"ts":1292530800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(sorry for abusing this channel for OpenCL-related help over the last few days)","msgtype":"m.text"},"ts":1292530920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tis not abuse","msgtype":"m.text"},"ts":1292530921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this channel has no topic","msgtype":"m.text"},"ts":1292530922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"points to the /topic","msgtype":"m.emote"},"ts":1292530923000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"unless you would argue that C99 has any relation to logic, i think you're good given the /topic","msgtype":"m.text"},"ts":1292530980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I will most definitely say that OpenCL has no relation to logic, at least insofar as the implementations I've used are concerned.","msgtype":"m.text"},"ts":1292531040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i rest my case :-)","msgtype":"m.text"},"ts":1292531220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: That has to be closer to the theoretical topic than, say, giving gsnedders dating tips. Which I'm pretty sure we have done in the past","msgtype":"m.text"},"ts":1292533440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: pff, you think that's theoretical…","msgtype":"m.text"},"ts":1292533740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Umm, aren't you studying English? You might want to reread the sentence","msgtype":"m.text"},"ts":1292534280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"burn","msgtype":"m.text"},"ts":1292534281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there a better place I could work on the XBL2 use cases? trac.webkit.org Wiki is unbearably slow","msgtype":"m.text"},"ts":1292534340000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"what are your needs?","msgtype":"m.text"},"ts":1292534400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just a wiki?","msgtype":"m.text"},"ts":1292534401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"collaborative editing?","msgtype":"m.text"},"ts":1292534402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wysiwyg?","msgtype":"m.text"},"ts":1292534403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: wiki.whatwg.org?","msgtype":"m.text"},"ts":1292534404000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"indeed, feel free to use wiki.whatwg.org if it's what you need","msgtype":"m.text"},"ts":1292534405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: w3c and whatwg both have wikis","msgtype":"m.text"},"ts":1292534406000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: burn?","msgtype":"m.text"},"ts":1292534407000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: as in, \"ooh, burn\"","msgtype":"m.text"},"ts":1292534408000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: not as in, go burn yourself, or something","msgtype":"m.text"},"ts":1292534460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k thanks","msgtype":"m.text"},"ts":1292534461000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1292534462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as in http://www.urbandictionary.com/define.php?term=burn","msgtype":"m.text"},"ts":1292534463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I see. I have heard that usage but I guess it is more common in en-us","msgtype":"m.text"},"ts":1292534580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah it's an americanism","msgtype":"m.text"},"ts":1292534581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i am being turned","msgtype":"m.text"},"ts":1292534582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's very sad","msgtype":"m.text"},"ts":1292534583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Bwahaha.","msgtype":"m.text"},"ts":1292534584000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"http://www.urbandictionary.com/define.php?term=lambohov <-- urban dictionary is not always reliable","msgtype":"m.text"},"ts":1292534640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: I have better language for the element() function now, and I need to correct the HTML binding so that out-of-document elements act properly within this context.  How do you want the feedback?","msgtype":"m.text"},"ts":1292534641000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"e-mail is fine","msgtype":"m.text"},"ts":1292534700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can't edit now, in the middle of timed track edits","msgtype":"m.text"},"ts":1292534701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean generally you can stay out till 7","msgtype":"m.text"},"ts":1292534702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hehe, \"wörd\".","msgtype":"m.text"},"ts":1292534703000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Hixie: K, no problem.","msgtype":"m.text"},"ts":1292534704000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"othermaciej: I think you missed http://tools.ietf.org/html/draft-cridland-hybi-upgrade-connect-00 out of your list of handshake proposal submissions","msgtype":"m.text"},"ts":1292535060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems to require an extra rt ","msgtype":"m.text"},"ts":1292535120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I did!","msgtype":"m.text"},"ts":1292535121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I should start the wiki page that mnot suggested","msgtype":"m.text"},"ts":1292535122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I didn't realize that handshake had an I-D","msgtype":"m.text"},"ts":1292535123000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah a wiki page would be good. ","msgtype":"m.text"},"ts":1292535180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A registry!","msgtype":"m.text"},"ts":1292535240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't believe that anyone is keeping up with the volume of mail, or has a full grasp of all the points that have been amde","msgtype":"m.text"},"ts":1292535241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Don't joke, in a few weeks we will have enough ID submissions that we will need our own registry just to track them","msgtype":"m.text"},"ts":1292535300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that is certainly true, to the point that I am getting frustrated at having to repeat points","msgtype":"m.text"},"ts":1292535480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"In a few weeks time, everyone will be looking at the next big thing","msgtype":"m.text"},"ts":1292535481000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"this particular argument has been going for months","msgtype":"m.text"},"ts":1292535720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham, . . . what dating tips did you give him?","msgtype":"m.text"},"ts":1292536440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I'm not sure. Maybe he remembers. Maybe he knows if they were good advice or not :)","msgtype":"m.text"},"ts":1292536500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We can probably invent some apropos ones though. Like \"if you ask if she's a Perl person or a Python question and she doesn't look bemused, that's a good sign. If she replies 'perl' make an excuse to leave\"","msgtype":"m.text"},"ts":1292536620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"perl necklace?","msgtype":"m.text"},"ts":1292536740000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Maybe she just understood the question as \"do you prefer pythons or pearls?\", in which case \"pearls\" is really the expected answer for pretty much anyone.","msgtype":"m.text"},"ts":1292536800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"what's wrong with python?","msgtype":"m.text"},"ts":1292536860000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"Who said there's anything wrong with Python?  We've all been making anti-Perl remarks here.","msgtype":"m.text"},"ts":1292536920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ah, touche!","msgtype":"m.text"},"ts":1292536980000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"AryehGregor: You mean you wouldn't look at someone funny if they asked you whether you were a snake person or an item of jewellry?","msgtype":"m.text"},"ts":1292537040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/or an/or preferred an/","msgtype":"m.text"},"ts":1292537041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would admittedly be irregular.","msgtype":"m.text"},"ts":1292537100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Of course, some people like irregularity.","msgtype":"m.text"},"ts":1292537220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have a friend who got married a few months ago, who borrowed my platemail to give her the rings.","msgtype":"m.text"},"ts":1292537280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"platemail?","msgtype":"m.text"},"ts":1292537340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That same friend also wore, to his wedding, a top hat, bow tie, one of those jackets that have long tails in the back, a shirt with studs instead of buttons, and a cummerbund.","msgtype":"m.text"},"ts":1292537400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I didn't even know what a cummerbund was before I met him.","msgtype":"m.text"},"ts":1292537401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"othermaciej, yes, I got some platemail when I was a teenager.","msgtype":"m.text"},"ts":1292537402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Kind of cheap, but it's made of real metal and everything.  Takes like half an hour to put on, with assistance.","msgtype":"m.text"},"ts":1292537403000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And weighs something like 70 pounds.","msgtype":"m.text"},"ts":1292537460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"zoinks!","msgtype":"m.text"},"ts":1292537461000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yes, it's fairly impressive.","msgtype":"m.text"},"ts":1292537640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I tend to collapse if I wear it for more than a few hours.","msgtype":"m.text"},"ts":1292537641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"clearly you need a warhorse","msgtype":"m.text"},"ts":1292538180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I have no idea what AryehGregor looks like, but the thought of him on a warhorse is terrifying","msgtype":"m.text"},"ts":1292538660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I used to ride horses when I was little.","msgtype":"m.text"},"ts":1292538720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"More or less so that I could pretend to be a knight.","msgtype":"m.text"},"ts":1292538721000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"My sister went with me, because she (being a typical young girl) liked horses.","msgtype":"m.text"},"ts":1292538722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I got freaked out when I got up to cantering, though.  Too scary for me at that age, so I gave it up.","msgtype":"m.text"},"ts":1292538780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I bet I'd remember how to trot properly given a bit of a chance to try it out, though.","msgtype":"m.text"},"ts":1292538781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"This was all at the last non-police stable in Manhattan, which apparently closed several years ago: http://en.wikipedia.org/wiki/Claremont_Riding_Academy","msgtype":"m.text"},"ts":1292538782000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: BTW it is no fun to have a predictions section on your website unless you just publish a hash of the prediction text, roc style. It adds an air of mystique. Particularly if your predictions are things like \"I will eat fruit loops for breakfast every day this week\"","msgtype":"m.text"},"ts":1292538900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Publishing a hash of the prediction has the flaw that no one will actually bother recording the hash, so when you finally reveal it, people could legitimately assume that you just went back and changed it.","msgtype":"m.text"},"ts":1292538960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess you could point to archive.org to mitigate that risk, though.","msgtype":"m.text"},"ts":1292538961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It reminds me of sending yourself something through the mail so that the postmark proves that you knew the contents on that date.  (Which doesn't work, because the post office is happy to mail empty envelopes, so you could always seal it later.)","msgtype":"m.text"},"ts":1292539020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You could embed the hash in a popular Open Source software project and point to its VCS","msgtype":"m.text"},"ts":1292539021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I should send myself an empty envelope just to illustrate the principle.)","msgtype":"m.text"},"ts":1292539080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I've also wanted to see what happens if you send a letter with no postage, with the intended destination as the return address and some nonsense as the destination.  Do they actually return it to the return address?  That sounds like a security flaw.)","msgtype":"m.text"},"ts":1292539081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hah","msgtype":"m.text"},"ts":1292539140000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(Maybe they apply heuristics like \"only return it if the return address is close enough to the place it was dropped off that nobody would be likely to bother cheating us that way\".)","msgtype":"m.text"},"ts":1292539141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I was actually at the primary post processing plant in eastern Switzerland last week, and someone asked that question","msgtype":"m.text"},"ts":1292539142000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(But in that case, you could still get free mailing to everyone nearby, if you were a total jerk and didn't mind revealing this fact to all your recipients.)","msgtype":"m.text"},"ts":1292539143000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Dashiva, well, so what was the answer?","msgtype":"m.text"},"ts":1292539200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In small scale, it doesn't really matter to them, letter return is not guaranteed, and unless you mail a huge number of people only a few times, someone would notice","msgtype":"m.text"},"ts":1292539260000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Sensible.","msgtype":"m.text"},"ts":1292539320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://blogs.msdn.com/b/interoperability/archive/2010/12/15/html5-video-and-interop-firefox-add-on-provides-h-264-support-on-windows.aspx","msgtype":"m.text"},"ts":1292539740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's . . . interesting.","msgtype":"m.text"},"ts":1292539741000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"Today, as part of the interoperability bridges work we do on this team, we’re making available a new Firefox add-on that enables Firefox users on Windows to play H.264-encoded video on HTML5 by using the built-in capabilities found in Windows 7.\"","msgtype":"m.text"},"ts":1292539742000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Now let's see if they sneak it into a Service Pack and install it by default.","msgtype":"m.text"},"ts":1292539743000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham: As myself and the girl I've ben inseparable from for the past few weeks often say, \"I'm an English student. You expect me to know that?\"","msgtype":"m.text"},"ts":1292539980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: Smells like webm","msgtype":"m.text"},"ts":1292540160000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, er, how so?","msgtype":"m.text"},"ts":1292540161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Trying to build up h264 as a viable cross-browser option before webm can establish itself","msgtype":"m.text"},"ts":1292540220000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1292540221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's true, this would be consistent with the theory that Microsoft is trying to push H.264 and isn't just afraid of patent risk.","msgtype":"m.text"},"ts":1292540280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've mostly been skeptical of that theory -- why provide any WebM support at all in that case?","msgtype":"m.text"},"ts":1292540340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: The patent risk is a sunk cost for them, so they have no reason to be afraid of it moreso than they already are.","msgtype":"m.text"},"ts":1292540341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It would also be consistent with the theory that Microsoft actually wants to increase web interoperability for its own sake, but my prior probability for that is too small to be stored in a standard 32-bit IEEE float.","msgtype":"m.text"},"ts":1292540342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: And provided they don't actually ship a WebM decoder, there's no patent risk for them. They just look better for supporting it if it is installed.","msgtype":"m.text"},"ts":1292540343000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: JS only has doubles, so it's fine ^^","msgtype":"m.text"},"ts":1292540400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, the patent risk for H.264 is a sunk cost, but not for WebM, unless people are only afraid of H.264 patents.","msgtype":"m.text"},"ts":1292540401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"As far as I'm aware, Microsoft isn't actually supporting webm, they're just not blocking it from being installed as a regular codec?","msgtype":"m.text"},"ts":1292540402000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, yes, but they are blocking everything else except H.264, I think.","msgtype":"m.text"},"ts":1292540403000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or that was the impression I got.","msgtype":"m.text"},"ts":1292540404000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In particular, I don't think they allow Theora.","msgtype":"m.text"},"ts":1292540460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although maybe I'm wrong.","msgtype":"m.text"},"ts":1292540461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Indeed","msgtype":"m.text"},"ts":1292540462000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So that indicates some level of support for WebM.","msgtype":"m.text"},"ts":1292540463000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"moved: http://wiki.whatwg.org/wiki/XBL2UseCases","msgtype":"m.text"},"ts":1292540464000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"My theory is that they don't care about H.264, they don't make much money off it anyway compared to the strategic issues involved, so they'd be okay with WebM if it were really patent-risk-free.","msgtype":"m.text"},"ts":1292540520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which apparently Google has not done enough to assure them about.","msgtype":"m.text"},"ts":1292540521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: All Google has done, AFAIK, is say it isn't.","msgtype":"m.text"},"ts":1292540522000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Of course, Google's patent license for WebM doesn't permit implementations other than their own, so that's a reason for anyone else to be wary about relying on it.","msgtype":"m.text"},"ts":1292540523000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Kind of ironic given the current lawsuit against them by Oracle.)","msgtype":"m.text"},"ts":1292540524000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: It does, now.","msgtype":"m.text"},"ts":1292540580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It does?","msgtype":"m.text"},"ts":1292540581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: AFAIK ever since it was separated from the license for the impl is has","msgtype":"m.text"},"ts":1292540582000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, ","msgtype":"m.text"},"ts":1292540583000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, http://www.webmproject.org/about/faq/#what_if_google_receives_or_buys_a_patent_that_covers_the_code_i_receive_sometime_after_i_receive_the_code_do_i_have_a_patent_grant_for_that_patent","msgtype":"m.text"},"ts":1292540640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(id fail)","msgtype":"m.text"},"ts":1292540641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oops.","msgtype":"m.text"},"ts":1292540642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Wrong id.","msgtype":"m.text"},"ts":1292540643000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://www.webmproject.org/about/faq/#what_if_someone_makes_a_change_to_the_code_and_gives_it_to_me_do_i_have_a_patent_license_from_google_for_that_change","msgtype":"m.text"},"ts":1292540644000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"You still have the right to redistribute but no patent license for the changes (if there are any patents covering it). We can't give patent licenses for changes people make after we distribute the code, as we have no way to predict what those changes will be. Other common licenses take the same approach, including the Apache license.\"","msgtype":"m.text"},"ts":1292540645000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, anyway, all they did *publicly* is say that it isn't.  There was almost certainly a lot of behind-the-scenes stuff with the other major players.","msgtype":"m.text"},"ts":1292540700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You'd think it would be in Google's interest to make an indemnification agreement or something.  How much could that increase their potential liability, given YouTube?  But maybe they figure MS and Apple will come around in time when Google doesn't get sued.  Or maybe they did make an offer but it wasn't accepted for some reason.","msgtype":"m.text"},"ts":1292540760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh well.","msgtype":"m.text"},"ts":1292540761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"}
]