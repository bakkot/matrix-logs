[
{"content":{"body":"gimme a sec","msgtype":"m.text"},"ts":1384819207000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: (i actually just need to know if the bottom line comes out of the bottom of the arc, or the left of the arc, or if something crazy is going on)","msgtype":"m.text"},"ts":1384819363000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh, ok.  Left of the arc.","msgtype":"m.text"},"ts":1384819390000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"awesome, thanks man","msgtype":"m.text"},"ts":1384819398000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Like the horizontal arc bends downward at the point it enters the arc.","msgtype":"m.text"},"ts":1384819405000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"horizontal line","msgtype":"m.text"},"ts":1384819408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1384819415000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"No, left.","msgtype":"m.text"},"ts":1384819419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it left?","msgtype":"m.text"},"ts":1384819440000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"out of the right?","msgtype":"m.text"},"ts":1384819445000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or went right out of the left","msgtype":"m.text"},"ts":1384819452000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Wait, what? Now I'm confused; I was just being dumb.","msgtype":"m.text"},"ts":1384819461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"woot, i win!","msgtype":"m.text"},"ts":1384819471000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(your first answer was fine)","msgtype":"m.text"},"ts":1384819481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"The horizontal line hits the arc at its leftmost point.  It angles downward, to the SE, and continues that way through and beyond the arc.","msgtype":"m.text"},"ts":1384819485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1384819511000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"same as everyone except chrome :-/","msgtype":"m.text"},"ts":1384819518000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yaaaay","msgtype":"m.text"},"ts":1384819702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(spec required both mutually exclusive behaviours until a few minutes ago, so it's a wonder we are only one browser away from interop)","msgtype":"m.text"},"ts":1384819764000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sure glad that I don't really care about these image threads","msgtype":"m.text"},"ts":1384824455000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: That's a good survival strategy.","msgtype":"m.text"},"ts":1384824921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I made the mistake of becoming personally invested.","msgtype":"m.text"},"ts":1384824928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I successfully avoided it for *months*, until John Mellor roped me in over wine.","msgtype":"m.text"},"ts":1384824941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Goddam alcohol, always making me commit to caring about things.","msgtype":"m.text"},"ts":1384824954000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've avoided even opening any of the threads, because I don't want to care (or rather, I want to not care)","msgtype":"m.text"},"ts":1384824973000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(re: got enough things on the list already)","msgtype":"m.text"},"ts":1384824989000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Okay, now that I've finished both looking at emails and doing expense reports, it's time to go back to Python coding for an hour.","msgtype":"m.text"},"ts":1384825003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just... aimlessly?","msgtype":"m.text"},"ts":1384825014000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"^_^ Nah, coding on Bikeshed.","msgtype":"m.text"},"ts":1384825048000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My primary software project for the last 6 months.","msgtype":"m.text"},"ts":1384825067000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how long did it take to come up with the name","msgtype":"m.text"},"ts":1384825109000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"A surprisingly long time.  It was just called \"Tab's new preprocessor\" for months.","msgtype":"m.text"},"ts":1384825143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Until someone in this room started suggesting things.","msgtype":"m.text"},"ts":1384825152000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fitting, then","msgtype":"m.text"},"ts":1384825177000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Exactly!  The actual name came from Twitter.","msgtype":"m.text"},"ts":1384825192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, having \"new\" in the name is nice until the new thing becomes the old thing","msgtype":"m.text"},"ts":1384843112000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(I recently killed the \"newcss\" module in Servo)","msgtype":"m.text"},"ts":1384843134000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Same problem with numbers, eg html5lib","msgtype":"m.text"},"ts":1384844321000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"hsivonen: View Source in Firefox doesn't mark the &#x110000; character in http://w3c-test.org/web-platform-tests/master/conformance-checkers/html/parser/008-novalid.html as error","msgtype":"m.text"},"ts":1384851250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1384851283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no, it does","msgtype":"m.text"},"ts":1384851296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but for the &#xfdd0; in http://w3c-test.org/web-platform-tests/master/conformance-checkers/html/parser/004-novalid.html it shows it in red but doesn't show any tooltip text when you mouse over","msgtype":"m.text"},"ts":1384851425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm I guess it always shows character references in red but errors in red+bold","msgtype":"m.text"},"ts":1384851517000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"files bugs","msgtype":"m.emote"},"ts":1384851619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Okay, so bz put getElementById() directly on DocumentFragment","msgtype":"m.text"},"ts":1384855635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Shouldn't we do the same as with NonDocumentTypeParentNode?","msgtype":"m.text"},"ts":1384855671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Uhm, *ChildNode","msgtype":"m.text"},"ts":1384855681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. looks like occupying an IP4 address costs the same as 12 GB of storage (per unit of time)","msgtype":"m.text"},"ts":1384855861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So I heard a rumor at TPAC that the <picture><source> thing with lower implementation complexity was bad for animated images, for some reason. Anyone know anything about that? Otherwise it seems that we should clearly be doing that syntax","msgtype":"m.text"},"ts":1384857333000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I haven't heard about that, but maybe asking on #respimg?","msgtype":"m.text"},"ts":1384857380000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Uh, yeah, I'm not sure I want to join that channel :)","msgtype":"m.text"},"ts":1384857407000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But picture is baaaad","msgtype":"m.text"},"ts":1384857500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Did Ms2ger turn into a sheep?","msgtype":"m.text"},"ts":1384857523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or maybe he always was one","msgtype":"m.text"},"ts":1384857540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Waaaake up, sheeeple","msgtype":"m.text"},"ts":1384857543000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1384857637000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: why clearly?","msgtype":"m.text"},"ts":1384857669000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you didn't mean clearly we should be doing <picture><source>?","msgtype":"m.text"},"ts":1384857698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Because despite the verbosity it is using the overall syntax of the language in the way it was designed, and it is clearly the solution that authors find most intuitive","msgtype":"m.text"},"ts":1384857732000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the people on #resimg are really nice actually","msgtype":"m.text"},"ts":1384857786000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: But what about the ones on #respimg? :p","msgtype":"m.text"},"ts":1384857806000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"har har har","msgtype":"m.text"},"ts":1384857842000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: I thought another big downside of <picture><source> was that it would require browser projects to basically duplicate most of their existing <img> tests","msgtype":"m.text"},"ts":1384858224000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and w-p-t too","msgtype":"m.text"},"ts":1384858243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Why is that more true than for the other syntaxes?","msgtype":"m.text"},"ts":1384858299000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In any case, although interop is obviously a concern, that feels like a clear violation of the priority of constituencies","msgtype":"m.text"},"ts":1384858342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(assuming that the syntax is guenuinely better for authors)","msgtype":"m.text"},"ts":1384858362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: I raised https://bugzilla.mozilla.org/show_bug.cgi?id=940282 bug for View Source not flagging some invalid characters","msgtype":"m.text"},"ts":1384858381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: I guess I've never heard any b","msgtype":"m.text"},"ts":1384858455000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*heard anybody yet claim that <picture><source> is worse syntax for authors","msgtype":"m.text"},"ts":1384858506000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm but see http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-November/041536.html from TabAtkins","msgtype":"m.text"},"ts":1384858562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The cost there is that <picture><source> is now treated substantially differently than <video><source>, despite sharing a name.\"","msgtype":"m.text"},"ts":1384858576000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"by which I think he means the cost to authors","msgtype":"m.text"},"ts":1384858608000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1384858609000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It is possible that no one is relying on the precise semantics of <video><source>. Or that no one will even notice the difference apart from implementors","msgtype":"m.text"},"ts":1384858670000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1384858693000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: as far as how the test-case duplication is more true for <picture> than for the other syntaxes, I thought it was a matter of testing cost of a new element vs new attribute","msgtype":"m.text"},"ts":1384858737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that just adding a new attribute to img does not require duplicating all existing img tests","msgtype":"m.text"},"ts":1384858782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1384859281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: since I'm redoing the charset menu UI strings anyway, I wonder if I should use the sort of labels IE uses","msgtype":"m.text"},"ts":1384859341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: ie. Foo (ISO) and Foo (Windows) instead of Foo (ISO-8859-x) and Foo (Windows-xxxx)","msgtype":"m.text"},"ts":1384859369000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"didn't know ArrayBuffer was now part of EcmaScript","msgtype":"m.emote"},"ts":1384859379000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: it seems exposing less magic strings to the end user is a plus","msgtype":"m.text"},"ts":1384859392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. I'll try it and see if it passes review","msgtype":"m.text"},"ts":1384859407000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: how do I get to the menu in IE?","msgtype":"m.text"},"ts":1384859483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: also, omitting it entirely, e.g. just \"Thai\" seems better too","msgtype":"m.text"},"ts":1384859524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: when feasible","msgtype":"m.text"},"ts":1384859529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, right click","msgtype":"m.text"},"ts":1384859580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: yeah what IE does makes a lot of sense","msgtype":"m.text"},"ts":1384859622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I guess there could be *some* difference in the number of tests between <picture><source><img></picture> and <img src new-attr>, but it isn't obviously large. You have basically the same space of possible things to test (in the absence of scripted DOM manipulation)","msgtype":"m.text"},"ts":1384859646000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"not sure why Korean lacks a label and Thai says Windows in IE, I don't think either needs one","msgtype":"m.text"},"ts":1384859649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: OK","msgtype":"m.text"},"ts":1384859673000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan might tell me I am wrong though","msgtype":"m.text"},"ts":1384859694000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I've heard the testing cost from hober & zcorpan.","msgtype":"m.text"},"ts":1384859702000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Dammit :)","msgtype":"m.text"},"ts":1384859710000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Basically, you'd need to re-test img's functionality with picture, on top of the new picture-specific functionality","msgtype":"m.text"},"ts":1384859739000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I think the testing cost is uncontroversially higher in the case where DOM manipulation can change things","msgtype":"m.text"},"ts":1384859751000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"pre-scanner is also somewhat more complicated","msgtype":"m.text"},"ts":1384859761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: It seems to me that you would also need to retest img's functionality with no src attribute","msgtype":"m.text"},"ts":1384859784000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yoav: yeah, I guess I also heard it from zcorpan","msgtype":"m.text"},"ts":1384859786000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So are we getting xhtml2 img finally? :)","msgtype":"m.text"},"ts":1384859795000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: preload scanner complexity is not extremely different between picture/src-N","msgtype":"m.text"},"ts":1384859807000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1384859809000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yoav: I did not say extreme","msgtype":"m.text"},"ts":1384859823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I suppose the argument is that you would need to test e.g. canvas.drawImage with a HTMLPictureElement","msgtype":"m.text"},"ts":1384859827000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Need to maintain some state of where you're at","msgtype":"m.text"},"ts":1384859828000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: OK :)","msgtype":"m.text"},"ts":1384859832000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Or a HTMLSourceElement","msgtype":"m.text"},"ts":1384859836000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or whatever you would actually use","msgtype":"m.text"},"ts":1384859842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: I guess xhtml2 was just ahead of its time. The world wasn't ready.","msgtype":"m.text"},"ts":1384859869000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: Yeah, and everything else image currently does.","msgtype":"m.text"},"ts":1384859876000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Ms2ger: so maybe there's also hope yet for XHTML Modularization","msgtype":"m.text"},"ts":1384859897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: If you're around, clarifications would be helpful.","msgtype":"m.text"},"ts":1384859899000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"MikeSmith, hey man, I really should avoid bursting into laughter in the middle of my class :)","msgtype":"m.text"},"ts":1384859926000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It seems likely that implementations would reuse as much of the same code as possible though, so it isn't super-clear that those tests would actually find anything once you had verified that the element worked at ll","msgtype":"m.text"},"ts":1384859938000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*all","msgtype":"m.text"},"ts":1384859942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Speak of the devil","msgtype":"m.text"},"ts":1384859958000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I think MikeSmith just did","msgtype":"m.text"},"ts":1384859972000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well actually that's unfair","msgtype":"m.text"},"ts":1384859979000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"He hasn't mentioned namespaes yet","msgtype":"m.text"},"ts":1384859985000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So now you did","msgtype":"m.text"},"ts":1384859992000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: your instructor will just assume it's because of something really clever he said earlier and that you're just catching up with now","msgtype":"m.text"},"ts":1384859997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, not sure that's betetr","msgtype":"m.text"},"ts":1384860011000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"better, even","msgtype":"m.text"},"ts":1384860014000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: We were discussing <picture> test costs here. I'd be happy  if you could clarify your current standpoint on the subject (post Kornel's atomic mutation algo)","msgtype":"m.text"},"ts":1384860136000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"hallvors: you should read my comment again I think","msgtype":"m.text"},"ts":1384861262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: I'm not proposing anything really in https://www.w3.org/Bugs/Public/show_bug.cgi?id=20322#c11 other than writing down what I believe is implemented today","msgtype":"m.text"},"ts":1384861289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I may well be misunderstanding something..","msgtype":"m.text"},"ts":1384861305000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: the second example forces a preflight because of the setRequestHeader()","msgtype":"m.text"},"ts":1384861334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I get that","msgtype":"m.text"},"ts":1384861340000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: the first example does not force a preflight","msgtype":"m.text"},"ts":1384861341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: now, will upload events dispatch or not is the question","msgtype":"m.text"},"ts":1384861356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so the way it's implemented today is no upload events will fire for the first example?","msgtype":"m.text"},"ts":1384861367000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: if we dispatch them for late listener registration it seems we have a security bug","msgtype":"m.text"},"ts":1384861373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wouldn't you sort of agree that this sucks for the users of this API?","msgtype":"m.text"},"ts":1384861391000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: I'd hope so (again assuming we're actually protecting something here)","msgtype":"m.text"},"ts":1384861400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should write some tests","msgtype":"m.emote"},"ts":1384861413000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1384861423000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hallvors: I never thought this flag made much sense or a lot of CORS for that matter","msgtype":"m.text"},"ts":1384861425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: but I wasn't calling the shots","msgtype":"m.text"},"ts":1384861435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mozilla's security team proxied through sicking is how a lot happened","msgtype":"m.text"},"ts":1384861460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK - I'm sort of relieved that it must be some sort of collective misunderstanding and not you being weird. I don't want you to be weird  :-p","msgtype":"m.text"},"ts":1384861521000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(that's probably an odd thing to say :-])","msgtype":"m.text"},"ts":1384861540000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1384861586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should keep in mind that a spec editor is just a ghost writing proxy much of the time","msgtype":"m.emote"},"ts":1384861626000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"But yeah, should probably create a test to see what implementations do. If they allow late registration, there's no reason to make early registration trigger a preflight...","msgtype":"m.text"},"ts":1384861629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm..","msgtype":"m.text"},"ts":1384861654000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"it's complicated because addEventListener() is presumably not supposed to throw either?","msgtype":"m.text"},"ts":1384861680000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I can't think of any case where aEL throws right now","msgtype":"m.text"},"ts":1384861693000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"so we can't do that if authors try to late-register listeners that should not fire","msgtype":"m.text"},"ts":1384861718000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(and xhr.upload.onprogress = foo throwing would be even more ugly)","msgtype":"m.text"},"ts":1384861763000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I'm pretty sure the idea was that events would not dispatch if there was no preflight done. And that the check for early listeners triggering a preflight was added as some kind of best effort hack.","msgtype":"m.text"},"ts":1384861784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However, it's been half a decade and my memory has been known to be faulty.","msgtype":"m.text"},"ts":1384861808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What if the functions would fire but the length computable would be false and no details given?","msgtype":"m.text"},"ts":1384861810000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"The problem is that you \"revealed\" the server existed.","msgtype":"m.text"},"ts":1384861857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sighs at the weird nooks and corners of the so-called platform","msgtype":"m.emote"},"ts":1384861859000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"The details of the event are not that interesting.","msgtype":"m.text"},"ts":1384861873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<img onload=\"\"> already does that, no?","msgtype":"m.text"},"ts":1384861884000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Yes, but less quick.","msgtype":"m.text"},"ts":1384861894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's surely just an implementation detail?","msgtype":"m.text"},"ts":1384861922000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Not in the face of timing attacks.","msgtype":"m.text"},"ts":1384861931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"odinho: around?","msgtype":"m.text"},"ts":1384861988000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"BTW annevk: I'd like to suggest a small note about what the \"settings object\" contains","msgtype":"m.text"},"ts":1384862042000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: I iz around!","msgtype":"m.text"},"ts":1384862182000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"great :)","msgtype":"m.text"},"ts":1384862192000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"have you written any CORS tests that seem relevant to what annevk and I just discussed above?","msgtype":"m.text"},"ts":1384862216000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(read your blog recently BTW. If I had read it a little earlier I might have pestered your for video-related advice :-) but I've figured out some VirtualDub + ffmpeg approaches that seem to handle this project I'm working on)","msgtype":"m.text"},"ts":1384862321000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: No, I have not :)  Tests need to be always appended to, and that's one such case ;-)","msgtype":"m.text"},"ts":1384862370000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"sure. I'll take it","msgtype":"m.text"},"ts":1384862407000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: Create it on the python branch.","msgtype":"m.text"},"ts":1384862461000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hallvors: The newest cors tests are there. They're reviewed and work better than their php counterparts :)","msgtype":"m.text"},"ts":1384862479000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hm.. there's jgraham/python,  jgraham/python_review and  jgraham/python_review_2. They all sort of belong to James, I'm not sure if it would be well-behaved to mess with them. /cc jgraham","msgtype":"m.text"},"ts":1384862621000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: how did x-mac-cyrillic end up in the Encoding Standard?","msgtype":"m.text"},"ts":1384862626000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: ^?","msgtype":"m.text"},"ts":1384862635000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"SimonSapin: https://www.w3.org/Bugs/Public/show_bug.cgi?id=23793","msgtype":"m.text"},"ts":1384862638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: aside from x-user-defined, it's the only x- encoding","msgtype":"m.text"},"ts":1384862640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: http://lists.w3.org/Archives/Public/www-archive/2011Dec/att-0020/encoding-labels.html supported by all browsers","msgtype":"m.text"},"ts":1384862735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: Feel free to push stuff to jgraham/python_review_2 if it isn't going to be super-controversial (i.e. if it won't delay the review)","msgtype":"m.text"},"ts":1384862826000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OK. I doubt an extra test or two trying to figure out what current implementations do will be controversial :)","msgtype":"m.text"},"ts":1384862863000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(unless I make stupid coding mistakes - then I'll delay the review and learn something :-p)","msgtype":"m.text"},"ts":1384862893000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: ok. I think I'm going to see if excluding it from the menu passes review. Neither Chromium nor IE has it in the menu.","msgtype":"m.text"},"ts":1384862962000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"holy god just now finding this www-tag thread on JSON slash encoding detection slash BOMs","msgtype":"m.text"},"ts":1384864608000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"any point in trying to read any of it?","msgtype":"m.text"},"ts":1384864634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"judging from the set of personalities From field of most of the postings, it looks suspiciously like it's probably a big how-many-angels-on-the-head-of-a-pin wank-off","msgtype":"m.text"},"ts":1384864813000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: my todo list includes posting to that thread and saying it's reprehensible for people to bikeshed complications for this stuff instead of doing things the way the Encoding Standard says","msgtype":"m.text"},"ts":1384864988000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I'm not sure they're actually interested in solutions","msgtype":"m.text"},"ts":1384865429000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at this point the only thing that thread is missing is Len Bullard","msgtype":"m.text"},"ts":1384865450000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yoav: does http://lists.w3.org/Archives/Public/public-respimg/2013Oct/0045.html help?","msgtype":"m.text"},"ts":1384865511000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yes, it does. Do you have a ballpark estimate of the number of tests required? (like the previous 10K number)","msgtype":"m.text"},"ts":1384865628000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"jgraham^^","msgtype":"m.text"},"ts":1384865712000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: i dunno, maybe duplicate all img tests and then a few hundred tests for the selection algorithm plus a few hundred tests for the new fallback mechanism. though i very much doubt that amount of tests would materialize before shipping <picture> if we decide it's what we want","msgtype":"m.text"},"ts":1384865954000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK. Thanks!","msgtype":"m.text"},"ts":1384866002000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: It seems interesting to get an estimate of how much <img> code could be reused directly in the <picture> case","msgtype":"m.text"},"ts":1384866081000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: yeah, I concluded the same from that thread","msgtype":"m.text"},"ts":1384866087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1384866102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"If it is \"almost all\" then the amount of testing you would need seems considerably lower than a balck-box estimate would suggest","msgtype":"m.text"},"ts":1384866115000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: I guess I should try to be friendly and educate some more, but there's many other things to work on :/","msgtype":"m.text"},"ts":1384866123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+to achieve interop","msgtype":"m.text"},"ts":1384866125000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah. though i'm not familiar with img implementations to know if it can be reused without refactoring. if it requires refactoring, there's a regression risk for img, too","msgtype":"m.text"},"ts":1384866141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Right, but we already have <img> tests","msgtype":"m.text"},"ts":1384866156000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hopefully","msgtype":"m.text"},"ts":1384866160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"admires annevk for passing up the 386 opportunity","msgtype":"m.emote"},"ts":1384866196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: so let's assume that we can reuse the img code (with or without refactoring) and we have a perfect testsuite for img (hahaha), i still wouldn't trust that the picture integration doesn't have bugs so doesn't need tests","msgtype":"m.text"},"ts":1384866336000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: I'm a bit late to that python server party you've been hosting, can I just clone https://github.com/jgraham/wptserve and it will work beautifully?","msgtype":"m.text"},"ts":1384866424000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"zcorpan: Sure. But the question isn't \"does it need tests\". The question is \"is the cost of the tests greater than the benefit of the better syntax?\"","msgtype":"m.text"},"ts":1384866453000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hehehehe","msgtype":"m.text"},"ts":1384866460000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so one thing that i've discussed here but not on the list is <img> + <source> in a way like <input list><datalist> works. i don't know how people feel about that","msgtype":"m.text"},"ts":1384866492000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: yes, i agree","msgtype":"m.text"},"ts":1384866495000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hallvors: Yes, but you probably want to just clone web-platform-tests, check out the jgraham/python_review_2 branch and follow the instructions in the readme file","msgtype":"m.text"},"ts":1384866517000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hallvors: Check out with all submodules. I think a --recursive clone will do it for you.","msgtype":"m.text"},"ts":1384867117000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho, jgraham: thanks - it's up and running and was easily started indeed","msgtype":"m.text"},"ts":1384867214000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1384867232000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"is a fan","msgtype":"m.emote"},"ts":1384867236000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"zcorpan: The \" <input list><datalist>\" model is interesting, but may be tricky to implement, as far as the preloader goes. One compromise would be to not preload <img src list> that doesn't have a matching datalist","msgtype":"m.text"},"ts":1384868186000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Or to force the 2 elements to be near each other","msgtype":"m.text"},"ts":1384868206000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Need to think about it...","msgtype":"m.text"},"ts":1384868228000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: What was the response to that model?","msgtype":"m.text"},"ts":1384868372000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"https://twitter.com/w3cmemes/status/402793055591620608 <3","msgtype":"m.text"},"ts":1384868445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/07U0lgaBP3g","msgtype":"m.text"},"ts":1384869398000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"[[","msgtype":"m.text"},"ts":1384869410000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"- 92.5% pages have !DOCTYPE, most of them start with \"<!doctype html\"","msgtype":"m.text"},"ts":1384869411000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"- 33.5% pages have Transitional doctype","msgtype":"m.text"},"ts":1384869411000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"- 36.1% pages have <!doctype html>, <!DOCTYPE html> <!DOCTYPE HTML>","msgtype":"m.text"},"ts":1384869415000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"]]","msgtype":"m.text"},"ts":1384869417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yoav: i haven't seen much of a response","msgtype":"m.text"},"ts":1384869557000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan:OK","msgtype":"m.text"},"ts":1384869574000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: we could require the source wrapper to be the next element sibling of img, which removes the need to use IDs","msgtype":"m.text"},"ts":1384869611000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: That would also simplify the preloader work. Would make it identical to picture in that sense.","msgtype":"m.text"},"ts":1384869649000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1384869675000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: In any case, I don't have a strong opinion regarding syntax. (as long as it's implementable, the major use-cases are covered, and no obvious hurdles to adoption are there)","msgtype":"m.text"},"ts":1384869750000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: So it sounds to me like your proposal would work (and won't require ~1K new tests), but might be best to ask the language design people what they think","msgtype":"m.text"},"ts":1384869819000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"i guess i can send an email about it and see what people think","msgtype":"m.text"},"ts":1384869882000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think that'd be good","msgtype":"m.text"},"ts":1384869915000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: supporting <input list><datalist> (ie without explicit ID) sounds like a good idea","msgtype":"m.text"},"ts":1384870039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: IDs suck","msgtype":"m.text"},"ts":1384870045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1384870065000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"file a bug?","msgtype":"m.text"},"ts":1384870088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: so on Mac this XUL stuff maps to native menus?","msgtype":"m.text"},"ts":1384870291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: On second thought, you'd need some indicator inside image that the 'src' should be loaded (for both the preloader and the parser)","msgtype":"m.text"},"ts":1384870375000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"s/should/shouldn't/","msgtype":"m.text"},"ts":1384870383000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Otherwise, the parser would start loading the image 'src' as soon as the element is created","msgtype":"m.text"},"ts":1384870418000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: yes. Also on Ubuntu in Canonical-provided builds","msgtype":"m.text"},"ts":1384870420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So you'd need the 'list' attr, just no id","msgtype":"m.text"},"ts":1384870453000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"hsivonen: cool, guess I finally know what inspired the <menu> feature","msgtype":"m.text"},"ts":1384870460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(although that might have dramatically changed now)","msgtype":"m.text"},"ts":1384870471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: yes, i intended list=\"\" for that","msgtype":"m.text"},"ts":1384870568000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK. Sounds good","msgtype":"m.text"},"ts":1384870603000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: technically the preloader could wait with preloading img until there is a next element sibling or the parent is closed, but it seems clearer to be explicit","msgtype":"m.text"},"ts":1384870620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'm worried about the parser, not the preloader","msgtype":"m.text"},"ts":1384870642000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"The parser starts an img download before the element is added to the DOM, so has no notion of parent/sibling","msgtype":"m.text"},"ts":1384870670000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1384870699000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I had these issues when implementing picture's <img> fallback","msgtype":"m.text"},"ts":1384870704000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Note that for the dynamic case this seems kind of cumbersome to work with. Same with <picture> I suppose. With either you don't know when you can start loading the image after the element is created.","msgtype":"m.text"},"ts":1384870782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why is it different than today with just src and crossorigin=\"\"? currently the load doesn't happen until you reach a stable state","msgtype":"m.text"},"ts":1384870827000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"per spec","msgtype":"m.text"},"ts":1384870856000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: currently you can load without appending","msgtype":"m.text"},"ts":1384870864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: not sure how you see that work for an API that requires siblings","msgtype":"m.text"},"ts":1384870878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, right. yeah i didn't consider that.","msgtype":"m.text"},"ts":1384870925000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: Can you elaborate on that concern? I didn't get that","msgtype":"m.text"},"ts":1384870954000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"so let's say you want to load an image but not put it in the document","msgtype":"m.text"},"ts":1384870982000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ohhhh, OK","msgtype":"m.text"},"ts":1384871011000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"with srcset you just do var i = (new Image()).srcset = '...'","msgtype":"m.text"},"ts":1384871012000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Why would you set i to the value of srcset?","msgtype":"m.text"},"ts":1384871032000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You'd have to create a document fragment,or something of that sort","msgtype":"m.text"},"ts":1384871034000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Ms2ger: heh, oops","msgtype":"m.text"},"ts":1384871053000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"var i; (i = new Image()).srcset = '...'","msgtype":"m.text"},"ts":1384871082000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"better?","msgtype":"m.text"},"ts":1384871085000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1384871126000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"better\"","msgtype":"m.text"},"ts":1384871131000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yoav: yeah, or we could come up with something like setting .list to the element, and have that association go away when the elements are inserted to the document, but both of those are non-obvious","msgtype":"m.text"},"ts":1384871179000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I agree that it's a complication","msgtype":"m.text"},"ts":1384871226000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"another idea is like <picture> syntax-wise, but require an <img> child that acts like \"driver\" i.e. the element that actually gets used for rendering and what you would paint on a canvas, etc","msgtype":"m.text"},"ts":1384871266000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"One could also argue that if you're adding sources lists dynamically, you can add only the ones relevant using matchMedia","msgtype":"m.text"},"ts":1384871292000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: Elaborate?","msgtype":"m.text"},"ts":1384871350000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like instead of <img list><sourcelist><source></sourcelist>, change it to <sourcelist><img list><source></sourcelist>","msgtype":"m.text"},"ts":1384871387000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Cyrillic 8-bit encodings are still http://xkcd.com/927/ : https://bug805374.bugzilla.mozilla.org/attachment.cgi?id=8334498","msgtype":"m.text"},"ts":1384871397000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and that's after removing ISO-IIR and hiding MacCyrillic","msgtype":"m.text"},"ts":1384871424000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the sourcelist element is a normal inline","msgtype":"m.text"},"ts":1384871432000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Would you consider this easier for the dynamic case?","msgtype":"m.text"},"ts":1384871491000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess it would be, since you'd have to create only 2 elements instead of 3...","msgtype":"m.text"},"ts":1384871524000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: it means you don't need a document fragment or anything to get the association when creating the things in script without appending to the document","msgtype":"m.text"},"ts":1384871537000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonders if that idea could be stretched to just reuse datalist instead of introducing sourcelist","msgtype":"m.emote"},"ts":1384871576000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: I'm cool with it, as long as the <img> has a list attr","msgtype":"m.text"},"ts":1384871577000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"i need to leave (i'll read the logs)","msgtype":"m.text"},"ts":1384871577000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1384871588000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I need leave soon as well, but I say post it to the lists","msgtype":"m.text"},"ts":1384871620000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"would be interested to see the idea fleshed out (I would need to reread how datalist works to fully follow otherwise I think)","msgtype":"m.emote"},"ts":1384871624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: https://bug805374.bugzilla.mozilla.org/attachment.cgi?id=8334498 looks very nice!","msgtype":"m.text"},"ts":1384872096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1384872164000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, though maybe jp should use just \"ISO\" as well?","msgtype":"m.text"},"ts":1384872165000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"2022 is sufficiently not ISO","msgtype":"m.text"},"ts":1384872217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1384872284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE10","msgtype":"m.text"},"ts":1384872286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Japanese (Auto-Select), Japanese (EUC), Japanese (Shift-JIS)","msgtype":"m.text"},"ts":1384872316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's it","msgtype":"m.text"},"ts":1384872317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: that would break concordance with the other Japanese items","msgtype":"m.text"},"ts":1384872351000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I like the way IE handles this","msgtype":"m.text"},"ts":1384872362000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: seems IE10 does not have an item for ISO-2022-JP","msgtype":"m.text"},"ts":1384872369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: furthermore, only Japanese has Auto-Select","msgtype":"m.text"},"ts":1384872382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"English locale though","msgtype":"m.text"},"ts":1384872388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I do too)","msgtype":"m.text"},"ts":1384872391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm pretty sure Auto-Select has ISO-2022-JP magic","msgtype":"m.text"},"ts":1384872393000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: need to test how exactly Auto-Select in IE works","msgtype":"m.text"},"ts":1384872416000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it could be a combo decoder for all the three Japanese encodings","msgtype":"m.text"},"ts":1384872436000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"which then raises the question: what does document.characterSet say?","msgtype":"m.text"},"ts":1384872454000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(ringdingding)","msgtype":"m.text"},"ts":1384872462000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I suspect it detects and makes a choice","msgtype":"m.text"},"ts":1384872474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just like WebKit","msgtype":"m.text"},"ts":1384872476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the story is the decoder for the ISO-2022-JP label does Shift_JIS, too","msgtype":"m.text"},"ts":1384872514000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in IE","msgtype":"m.text"},"ts":1384872519000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I need to test myself some day","msgtype":"m.text"},"ts":1384872528000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but not for this patch","msgtype":"m.text"},"ts":1384872534000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I'm wrong, it says \"_autodetect_all\"","msgtype":"m.text"},"ts":1384872550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: tested by overriding in Live DOM Viewer and then <script>w(document.characterSet)</script>","msgtype":"m.text"},"ts":1384872577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: awesome","msgtype":"m.text"},"ts":1384872615000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"might not be insane to spec that","msgtype":"m.text"},"ts":1384872659000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if ISO-2022-JP is just an alias for that","msgtype":"m.text"},"ts":1384872704000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: Thought about it some more. You could even make your proposal look almost identical to <picture>, only with a mandatory <img> inside. That's brilliant!","msgtype":"m.text"},"ts":1384872745000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"hsivonen: if we end up with agreement among everyone that we need sniffing for Japanese and nothing else, I'll try to figure it out","msgtype":"m.text"},"ts":1384873091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: FWIW, before Firefox 4 shipped, I tried to make the Japanese sniffing happen on the first 1024 bytes only. That broke the Japanese Planet Debian, which is why Firefox went whole stream.","msgtype":"m.text"},"ts":1384873425000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Japanese Planet Debian has been fixed since","msgtype":"m.text"},"ts":1384873439000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"as is typical with stuff like this","msgtype":"m.text"},"ts":1384873449000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: for our other sniffing, do we enforce 1024 bytes? That is if there's less than 1024 bytes and the network is slow we'll wait with making a decision?","msgtype":"m.text"},"ts":1384873537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: seems like something we should keep trying","msgtype":"m.text"},"ts":1384873566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: what is the reasoning for the events here http://w3c.github.io/webcomponents/spec/shadow/#events-that-are-always-stopped","msgtype":"m.text"},"ts":1384884100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: why those, and why not also submit and input","msgtype":"m.text"},"ts":1384884116000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and I assume there are many more","msgtype":"m.text"},"ts":1384884129000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Can I get a review on https://github.com/w3c/web-platform-tests/pull/397 / https://critic.hoppipolla.co.uk/r/387 please?","msgtype":"m.text"},"ts":1384886358000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: You can *do* the review on that...","msgtype":"m.text"},"ts":1384886421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sure, but getting one is more fun :)","msgtype":"m.text"},"ts":1384886444000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm not sure that going from N=tests.length iframes to N=1 iframe is obviously a great idea","msgtype":"m.text"},"ts":1384886604000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Doesn't it make the tests slower?","msgtype":"m.text"},"ts":1384886617000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not if they end up swapping otherwise :)","msgtype":"m.text"},"ts":1384886652000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1384886673000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But how does N=1 compare to N=10, for example?","msgtype":"m.text"},"ts":1384886688000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No idea","msgtype":"m.text"},"ts":1384886717000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And I feel like I'll get burned at the stake if I suggest it :)","msgtype":"m.text"},"ts":1384886732000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yoav: right","msgtype":"m.text"},"ts":1384892170000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: so the <img src> being loaded by the html parser before it has a parent, that seems like something that can be changed in impls by not loading it until it has been inserted to the document for img elements created by the parser, right=","msgtype":"m.text"},"ts":1384893224000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: It'd break scripts that create Image.src and never add it, but count on the resource downloading","msgtype":"m.text"},"ts":1384893280000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: scripts that create Image.src aren't created by the parser","msgtype":"m.text"},"ts":1384893310000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah. It's not the parser that downloads. It happens during element creation.","msgtype":"m.text"},"ts":1384893628000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess you could create a separate path for scripts, in some way","msgtype":"m.text"},"ts":1384893651000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"you just need the html parser to set a flag","msgtype":"m.text"},"ts":1384893671000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"But I don't know if it's something that browsers want to do","msgtype":"m.text"},"ts":1384893673000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"<script> has such a flag (not that <script> processing is in any way sane)","msgtype":"m.text"},"ts":1384893719000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Look. Ibumped into trouble there when working on picture, and didn't want to modify HTMLImageElement because I was afraid it'd break stuff","msgtype":"m.text"},"ts":1384893835000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"But, ask it on the list and the DOM people must have an opinion on the subject","msgtype":"m.text"},"ts":1384893866000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"The only question it raises is whether we \"flag\" the image or not (by adding an attr)","msgtype":"m.text"},"ts":1384893929000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"If the DOM people are cool with postponing image download until the element is in the DOM (when the element is parsed), I'd certainly won't object","msgtype":"m.text"},"ts":1384893996000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"the flag wouldn't be an attribute, just a bit that is invisible to JS","msgtype":"m.text"},"ts":1384894042000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"should the img go first or last?","msgtype":"m.text"},"ts":1384894121000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"last would be better IMO, so when it's parsed, it can already walk its parent and get the resources","msgtype":"m.text"},"ts":1384894187000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Nah, I don't make sense","msgtype":"m.text"},"ts":1384894222000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"We need to wait till its added to its parent, so I'm not sure it matters much. Need to look into it.","msgtype":"m.text"},"ts":1384894283000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"if it's first, then the <source>s won't be in the tree when the img element is inserted","msgtype":"m.text"},"ts":1384894385000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but kornel's algorithm handles that fine by just re-running the algorithm for each <source> (or once when the parent is closed)","msgtype":"m.text"},"ts":1384894439000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe more relevant is what authors expect it should be. if they think the syntax should be like <video>, then the sources should come first","msgtype":"m.text"},"ts":1384894488000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"You're right that we can hook up on the insertion to its parent. You're also right that authors would expect <img> to be last","msgtype":"m.text"},"ts":1384894569000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"even if img goes last, we could make <picture> own the selection algorithm and run it for each <source>/<img> that is inserted, in case we want <picture><source> (pause) <img> to start loading before the img element exists","msgtype":"m.text"},"ts":1384894640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I tend to think that it might be best to wait till the parent closes, and only then start fetching, to avoid cases where <img> is first from breaking, as it may be a common authoring error, and I don't see serious downsides to it","msgtype":"m.text"},"ts":1384894649000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Starting load before the parent is completed would only benefit us if the HTML buffer is split after <img> and before </picture>","msgtype":"m.text"},"ts":1384894749000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"right. maybe the <img> is big because the fallback src is a big SVG as a data: URL or something","msgtype":"m.text"},"ts":1384894885000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That doesn't make sense (from an authoring PoV)","msgtype":"m.text"},"ts":1384894932000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"fallback image should be something you usually don't download","msgtype":"m.text"},"ts":1384894952000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"OTOH starting the load before img exists might mean that you download something that won't be used because there actually isn't an <img> element","msgtype":"m.text"},"ts":1384895007000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah. I also think that it'd mean that picture would have to be a lot smarter than it needs to with this scheme","msgtype":"m.text"},"ts":1384895052000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"i don't follow 'fallback image should be something you usually don't download'","msgtype":"m.text"},"ts":1384895055000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'd be much more comfortable if HTMLImageElement will be the one doing the download, just getting its sources from picture","msgtype":"m.text"},"ts":1384895087000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1384895114000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"A data URI as a fallback image doesn't make sense, because then you're downloading the fallback image and the actual image","msgtype":"m.text"},"ts":1384895193000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: Don't apply logic! People won't follow it!","msgtype":"m.text"},"ts":1384895231000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsn","msgtype":"m.text"},"ts":1384895242000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"ah yeah, i agree it doesn't make sense. but i wouldn't be surprised to see that sort of thing in the wild :-)","msgtype":"m.text"},"ts":1384895261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: People are logical beings, no?","msgtype":"m.text"},"ts":1384895297000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"or a big <script>","msgtype":"m.text"},"ts":1384895304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or not a big but a <script src> which blocks the parser from closing the parent","msgtype":"m.text"},"ts":1384895332000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: Well, you say that, but there's lots of stupid stuff on the web…","msgtype":"m.text"},"ts":1384895376000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yoav: people aren't really logical beings","msgtype":"m.text"},"ts":1384895408000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: people like to think that they act based on logical thinking but actually often act based on emotions, belief, etc :-)","msgtype":"m.text"},"ts":1384895483000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or based on what other people say or do","msgtype":"m.text"},"ts":1384895528000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"was joking :)","msgtype":"m.emote"},"ts":1384895533000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"But, I'm not sure implementation should be complicated in order to optimize authoring errors","msgtype":"m.text"},"ts":1384895582000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yeah it probably doesn't need to, we can just make <img> look at its previous siblings and start loading when the img is inserted to the document","msgtype":"m.text"},"ts":1384895694000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"actually per spec, <img> shouldn't start loading anything until a 'stable state' has been provided, which would be between tasks of the html parser, i think","msgtype":"m.text"},"ts":1384896342000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so the spec wouldn't need the flag, but maybe actual impl would want a flag and not wait until the parser yeilds","msgtype":"m.text"},"ts":1384896427000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or the spec should be changed to not await a stable state for parser-created img","msgtype":"m.text"},"ts":1384896477000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Are we still considering the \"<img> is the driver, it uses <picture> or <sourcelist> or whatever as a data source\" idea?","msgtype":"m.text"},"ts":1384896605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's what we're discussing yeah","msgtype":"m.text"},"ts":1384896735000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Excelelnt.","msgtype":"m.text"},"ts":1384896835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: What's your opinion on that option?","msgtype":"m.text"},"ts":1384896852000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'm down with this.","msgtype":"m.text"},"ts":1384896865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Awesome!","msgtype":"m.text"},"ts":1384896891000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"i need to ponder what should happen for dynamic updates to <source>s. <video> ignores some changes (like changing src attribute of a <source>)","msgtype":"m.text"},"ts":1384896974000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i think this could listen to mutations to <source src> and rerun the selection algorithm on the next tick, since doing so isn't destructive as for <video>","msgtype":"m.text"},"ts":1384897084000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, that sounds fine to me.","msgtype":"m.text"},"ts":1384897499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And reminds me that I've specced src-N to not pay attention to mutations, which is a problem.)","msgtype":"m.text"},"ts":1384897510000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"srcset handles mutations. this just needs to have more listeners","msgtype":"m.text"},"ts":1384898057000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok at this point my brain has stopped working so i just sent the email","msgtype":"m.text"},"ts":1384898882000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Does anyone know the situation with character encoding of HTML in emails?","msgtype":"m.text"},"ts":1384899411000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"anyone got an opinion on what should happen with History objects of non-active documents, when you use them? https://www.w3.org/Bugs/Public/show_bug.cgi?id=23359","msgtype":"m.text"},"ts":1384899459000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(browsers all disagree)","msgtype":"m.text"},"ts":1384899464000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ping","msgtype":"m.text"},"ts":1384901024000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yo","msgtype":"m.text"},"ts":1384901034000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: quick question - according to the current spec, navigating an iframe by programatically setting .src uses the iframe as the source browsing context, rather than the incumbent script","msgtype":"m.text"},"ts":1384901063000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes","msgtype":"m.text"},"ts":1384901064000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: is that intentional?","msgtype":"m.text"},"ts":1384901067000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"it impacts sandboxing","msgtype":"m.text"},"ts":1384901084000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"you mean rather than the incumbent script's responsible browsing context?","msgtype":"m.text"},"ts":1384901096000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: correct","msgtype":"m.text"},"ts":1384901101000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"it shouldn't make any difference in general, whether it's the iframe's ownerDocument's browsing context or the responsible browsing context specified by the incumbent settings object","msgtype":"m.text"},"ts":1384901200000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but in some cases, there's no incumbent settings object","msgtype":"m.text"},"ts":1384901221000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so that's why i use the iframe's host document's browsing context","msgtype":"m.text"},"ts":1384901235000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(e.g. when parsing the <iframe> in the first place)","msgtype":"m.text"},"ts":1384901244000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"thinks","msgtype":"m.emote"},"ts":1384901274000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: what about the allow-same-origin case where a sandboxed iframe attempts to navigate a non-sandboxed parent by setting the src attribute on its frameElement?","msgtype":"m.text"},"ts":1384901342000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: in that case, the navigation will succeed by setAttribute('src', foo), and fail by |location = foo|","msgtype":"m.text"},"ts":1384901381000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: (I know allow-same-origin is kind of a stupid example)","msgtype":"m.text"},"ts":1384901391000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"if you have a sandboxed iframe, the only way it could do that is if you do allow-same-origin and allow-script at the same time","msgtype":"m.text"},"ts":1384901483000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and if you do that, you've basically lost.","msgtype":"m.text"},"ts":1384901487000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: right","msgtype":"m.text"},"ts":1384901490000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i mean it could just create a new iframe and do whatever it wants in that","msgtype":"m.text"},"ts":1384901503000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: sure","msgtype":"m.text"},"ts":1384901509000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"self.location = foo shouldn't fail though, should it?","msgtype":"m.text"},"ts":1384901535000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you can always navigate yourself","msgtype":"m.text"},"ts":1384901540000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I'm just pointing out the existence of a somewhat-arbitrary behavioral difference here","msgtype":"m.text"},"ts":1384901556000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: I'm fine with it","msgtype":"m.text"},"ts":1384901559000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"(oh you mean two iframes deep, i see)","msgtype":"m.text"},"ts":1384901565000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, it is somewhat arbitrary. i justify it as one being an API, and thus being designed around script, and the other being the markup, and thus being designed around that.","msgtype":"m.text"},"ts":1384901609000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"conceptually, if you set src=\"\" you are reconfiguring the <iframe>","msgtype":"m.text"},"ts":1384901621000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"whereas if you set location you are following a link","msgtype":"m.text"},"ts":1384901631000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's a bit dubious, but that's how i justify it :-)","msgtype":"m.text"},"ts":1384901641000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: fair enough - thanks for the clarification :-)","msgtype":"m.text"},"ts":1384901654000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: do you have an opinion on https://www.w3.org/Bugs/Public/show_bug.cgi?id=23359 ? (History in non-active documents)","msgtype":"m.text"},"ts":1384901983000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: hmmm","msgtype":"m.text"},"ts":1384902025000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: let me see if there's any recent context on our permissiveness here","msgtype":"m.text"},"ts":1384902083000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i'm guessing it's just you do an origin check rather than a liveness check","msgtype":"m.text"},"ts":1384902132000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but if there's a compat reason that would be interesting","msgtype":"m.text"},"ts":1384902146000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yes, exactly","msgtype":"m.text"},"ts":1384902154000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: apparently I put it in","msgtype":"m.text"},"ts":1384902157000,"senderName":"bholley","senderId":"bholley@irc"}
]