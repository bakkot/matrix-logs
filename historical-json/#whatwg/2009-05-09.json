[
{"content":{"body":"we're up to 992 members","msgtype":"m.text"},"ts":1241827200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"holy batman, check out the amount of metadata on http://www.house.gov/","msgtype":"m.text"},"ts":1241827980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fails to find a page that anyone would ever want to do anything with that has this metadata","msgtype":"m.emote"},"ts":1241828040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if anyone reading these logs finds pages with this metadata where the metadata would actually be useful, please do let me know","msgtype":"m.text"},"ts":1241828041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"particularly likes how house.gov has a <meta name=\" DC.relation.conformsTo\" content=\"\"> where the content attribute lists lots of specificaions including XHTML 1.1, even though it doesn't even pass the machine-checkable conformnce criteria for that specificaion","msgtype":"m.emote"},"ts":1241859480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it doesn't even pass the machine-checkable conformnce criteria for the \"DC.relation.conformsTo\" metadata item","msgtype":"m.text"},"ts":1241860260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: so technically it doesn't _actually_ claim to support those...","msgtype":"m.text"},"ts":1241860320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/support/conform to/","msgtype":"m.text"},"ts":1241860321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is this a place i can ask xhr questions or is there a better place?","msgtype":"m.text"},"ts":1241860500000,"senderName":"fearphage","senderId":"fearphage@irc"},
{"content":{"body":"DC.relation.conformsTo is a refutation of the idea that there's no value in namespaces being URIs because you can look for the terms on Google instead to find the appropriate specification","msgtype":"m.text"},"ts":1241860560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"https://www.bethere.co.uk/ - \"Please Note: Copy & paste is not permitted in this field\" - why do they go to so much trouble to intentionally disable useful features?","msgtype":"m.text"},"ts":1241862240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So, Opera now has Opera Turbo to optimise bandwidth usage on slow/expensive links","msgtype":"m.text"},"ts":1241877780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The question is: How long will it take until the savings from Turbo exceed the bandwidth I have to use in order to download the latest version of Opera?","msgtype":"m.text"},"ts":1241877781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://core.trac.wordpress.org/ticket/9689 — more yay","msgtype":"m.text"},"ts":1241887200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: ping?","msgtype":"m.text"},"ts":1241898240000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: I am going to have to run so I will leave my question here for you to find later","msgtype":"m.text"},"ts":1241899080000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: the spec says that a media element that isn't in the DOM should not be collected until there is not more audio to play","msgtype":"m.text"},"ts":1241899081000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: and mentions paused(), ended(), and rate==0 as things to consider before allowing collection","msgtype":"m.text"},"ts":1241899082000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: it doesn't say what to do with a file that is slow to load","msgtype":"m.text"},"ts":1241899083000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: eg. 'new Audio(\"http://....\")' may not be playable before the collector runs","msgtype":"m.text"},"ts":1241899084000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: so I think the spec should mention this case, but I am not sure what the guidance should be","msgtype":"m.text"},"ts":1241899085000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: maybe at least wait until readyState >= HAVE_METADATA?","msgtype":"m.text"},"ts":1241899086000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"Hixie: I will look for you later to chat","msgtype":"m.text"},"ts":1241899140000,"senderName":"eric_carlson","senderId":"eric_carlson@irc"},
{"content":{"body":"What does & do before a variable name in a function definition in C++?","msgtype":"m.text"},"ts":1241901540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Makes it pass-by-reference instead of pass-by-value","msgtype":"m.text"},"ts":1241901600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What's the difference between pass by reference and passing by pointer?","msgtype":"m.text"},"ts":1241901660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's an operator that returns a pointer with the address of the variable, right?","msgtype":"m.text"},"ts":1241901661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the address of its operand, i should say","msgtype":"m.text"},"ts":1241901662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Which is what * does, right?)","msgtype":"m.text"},"ts":1241901663000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i.e. the argument is not (as it would otherwise be) a copy of the parameter's value; it's the same variable","msgtype":"m.text"},"ts":1241901664000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh in a function definition","msgtype":"m.text"},"ts":1241901720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"never mind","msgtype":"m.text"},"ts":1241901721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shuts up","msgtype":"m.emote"},"ts":1241901722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: Syntax","msgtype":"m.text"},"ts":1241901723000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Then why does one function definition in moz use both? :P","msgtype":"m.text"},"ts":1241901724000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The implementation of \"void f(T& x)\" and \"void f(T* x)\" is identical; the only difference is that in the first case you can refer to the value as \"x\", in the second case you have to use \"*x\"","msgtype":"m.text"},"ts":1241901725000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: Probably a combination of conventions","msgtype":"m.text"},"ts":1241901780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"e.g. it's sometimes conventional to pass output arguments by pointer (so it's explicit)","msgtype":"m.text"},"ts":1241901840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and it's usually conventional to pass complex data types by reference (since it's more efficient than passing by value, and you don't have to worry about all the * syntax)","msgtype":"m.text"},"ts":1241901841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Parsing of media types is crazy.","msgtype":"m.text"},"ts":1241901960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I suggest building a lookup table for all media type strings","msgtype":"m.text"},"ts":1241902140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't quite understand what Gecko does","msgtype":"m.emote"},"ts":1241902440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm, there seems to be nothing to stop a media type containing multiple forward chars","msgtype":"m.text"},"ts":1241904120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"squints","msgtype":"m.emote"},"ts":1241913480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"A tourist page about Switzerland referencing Lac Léman, and not Lac de Genevè","msgtype":"m.text"},"ts":1241913481000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"* Genève","msgtype":"m.text"},"ts":1241913482000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]