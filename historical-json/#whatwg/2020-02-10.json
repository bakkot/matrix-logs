[
{"content":{"body":"JakeA: https://github.com/annevk/orb/pull/1","msgtype":"m.text"},"ts":1581352384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ohhh will take a look","msgtype":"m.text"},"ts":1581352465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Like your new Twitter bio. :)","msgtype":"m.text"},"ts":1581355643000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1581356255000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: heya","msgtype":"m.text"},"ts":1581356286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hey, wondering if you got an opinion on [Unforgeable]","msgtype":"m.text"},"ts":1581356306000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: is it a generally useful thing for the host to be able to do? i feel like it is, though outside of some legacy properties (document, etc) and trusted types i don't see much use","msgtype":"m.text"},"ts":1581356339000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: we only have it for plugins, basically, to avoid them being lied to","msgtype":"m.text"},"ts":1581356364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: and I guess for Location it might also simplify some of the proxy setup since everything becomes an own property iirc","msgtype":"m.text"},"ts":1581356403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah ok","msgtype":"m.text"},"ts":1581356410000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: so tl;dr: narrow scope, but still definitely useful for hosts to be able to express","msgtype":"m.text"},"ts":1581356433000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: I don't see us getting rid of it before plugins and even after that it might be tricky","msgtype":"m.text"},"ts":1581356460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: expand a bit on why it might be tricky afterwards?","msgtype":"m.text"},"ts":1581356503000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: also, it ought to be renamed to LegacyUnforgeable, we don't want new things using it","msgtype":"m.text"},"ts":1581356517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/heycam/webidl/issues/350#issuecomment-335454404","msgtype":"m.text"},"ts":1581356542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: well, we'd need something to express it being an own property I suspect for compat reasons","msgtype":"m.text"},"ts":1581356561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: makes sense, ok","msgtype":"m.text"},"ts":1581356582000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: definitely Location would need something special","msgtype":"m.text"},"ts":1581356583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why is Unforgeable legacy btw? non-configurable own props are just not how web apis are done?","msgtype":"m.text"},"ts":1581356772000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: yeah, all the ones we have are rather out of place","msgtype":"m.text"},"ts":1581356832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: great, thanks a lot for the info","msgtype":"m.text"},"ts":1581356857000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: and I think there were a few occasions where people wanted to use it to match some idea of precedent without that being okay","msgtype":"m.text"},"ts":1581356896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so best to discourage and then if it's really needed enshrine more legacy","msgtype":"m.text"},"ts":1581356923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1581356930000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"if you do `() => { new ReadableStream(...) }` why does that return undefined?","msgtype":"m.text"},"ts":1581358213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Domenic: Hi. May I poke you guys about https://github.com/whatwg/infra/pull/289 for a second?","msgtype":"m.text"},"ts":1581361845000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Seems like both of you agree that, rather than defining code unit prefix and less-than as JS-string algorithms, their use of \"length\" should be changed and made clear.","msgtype":"m.text"},"ts":1581361893000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Since that goes in quite a different direction than the PR, it'd be best to close it and open another for the same issue, right?","msgtype":"m.text"},"ts":1581361902000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: that sounds reasonable to me!","msgtype":"m.text"},"ts":1581363263000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok, just wanted to make sure","msgtype":"m.text"},"ts":1581363477000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"annevk: if you use {} for the body of the arrow func, it's a normal function body and needs `return` to return a value.","msgtype":"m.text"},"ts":1581364568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thanks, yeah, bz pointed that out too","msgtype":"m.text"},"ts":1581367302000,"senderName":"annevk","senderId":"annevk@irc"}
]