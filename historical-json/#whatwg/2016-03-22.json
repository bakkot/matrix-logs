[
{"content":{"body":"rn... am now","msgtype":"m.text"},"ts":1458635039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: would love your input on whether or not to wait for cancellable promises for returning a promise from the start method of sensors.","msgtype":"m.text"},"ts":1458636032000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"or Domenic","msgtype":"m.text"},"ts":1458636310000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm worried about ending up with legacy APIs that use rejection to mean cancellation","msgtype":"m.text"},"ts":1458636346000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: right, so I have a start/stop pair. start returned a promise that stop could abort before the sensor was fully activated.","msgtype":"m.text"},"ts":1458636471000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: so yeah, rejected the promise.","msgtype":"m.text"},"ts":1458636506000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: given there are statechange events, the promise isn't strictly necessary (it's sugar really), it *can* wait until a v2 of the spec.","msgtype":"m.text"},"ts":1458636592000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: should it?","msgtype":"m.text"},"ts":1458636603000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: seems your answer is \"yes\" and that's what I've gone with so far, but I want to make sure, so I have a good answer for all the people that are going to complain for the lack of promise in that API.","msgtype":"m.text"},"ts":1458636651000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1458636656000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah, I think so, but will let Domenic have the final word","msgtype":"m.text"},"ts":1458636724000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: for reference: https://w3c.github.io/sensors/#sensorstart","msgtype":"m.text"},"ts":1458636775000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"The alternative is to add the promise, but when it's cancelled just never resolve the promise. That lets you add cancellation later. But it's a bit eww","msgtype":"m.text"},"ts":1458636777000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah--that sounds like even more explaining to do.","msgtype":"m.text"},"ts":1458636820000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: Thanks for the help.","msgtype":"m.text"},"ts":1458637008000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"how do i run the html5lib tests with html5lib-python? jgraham gsnedders","msgtype":"m.text"},"ts":1458638119000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i want to write new tests for <menuitem> parsing","msgtype":"m.text"},"ts":1458638137000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: They are in wpt. There is a script to generate new tests from html5lib source files in html/tools iirc","msgtype":"m.text"},"ts":1458638347000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Presumably that's not the optimal way to test html5lib-python though","msgtype":"m.text"},"ts":1458638411000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: yes, i found that but i figured if i want to write new tests it makes more sense to run the tests with html5lib than to run them in a browser?","msgtype":"m.text"},"ts":1458638608000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: it's not clear to me what the typical procedure is for writing a new test, and it's not clear to me how to run tests with html5lib-python from reading the READMEs","msgtype":"m.text"},"ts":1458638650000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(i have no idea what tox is)","msgtype":"m.text"},"ts":1458638678000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh I read \"with\" as \"without\"","msgtype":"m.text"},"ts":1458639002000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Makes a difference","msgtype":"m.text"},"ts":1458639009000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1458639032000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: tests/README sort of tells you","msgtype":"m.text"},"ts":1458639110000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Install nose","msgtype":"m.text"},"ts":1458639121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and type","msgtype":"m.text"},"ts":1458639126000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nose","msgtype":"m.text"},"ts":1458639129000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or","msgtype":"m.text"},"ts":1458639131000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"node path/to/test.py","msgtype":"m.text"},"ts":1458639136000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/nose/nosetests/","msgtype":"m.text"},"ts":1458639211000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and also not node","msgtype":"m.text"},"ts":1458639221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"pip install nosetests ?","msgtype":"m.text"},"ts":1458639231000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"such an unfortunate typo","msgtype":"m.text"},"ts":1458639232000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1458639236000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well I think pip install nose","msgtype":"m.text"},"ts":1458639245000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The package is nose but the command is nosetests","msgtype":"m.text"},"ts":1458639259000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Seems like pytest also works if that's less confusing)","msgtype":"m.text"},"ts":1458639326000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but maybe doesn't respect the skip annotations or something)","msgtype":"m.text"},"ts":1458639347000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Cleaning up...","msgtype":"m.text"},"ts":1458639452000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Exception:","msgtype":"m.text"},"ts":1458639453000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Traceback (most recent call last):","msgtype":"m.text"},"ts":1458639453000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"  File \"/Library/Python/2.7/site-packages/pip-1.5.6-py2.7.egg/pip/basecommand.py\", line 122, in main","msgtype":"m.text"},"ts":1458639454000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"    status = self.run(options, args)","msgtype":"m.text"},"ts":1458639456000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"installing pytest worked","msgtype":"m.text"},"ts":1458639580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"py.test runs now. lots of tests and quite a bit of \"F\"s :-)","msgtype":"m.text"},"ts":1458639787000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"676 failed, 25007 passed, 118 skipped, 2 pytest-warnings, 1 error in 168.03 seconds","msgtype":"m.text"},"ts":1458639881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though py.test tree_construction.py runs 0 tests. renaming the file to test_tree_construction.py gives: WC1 /Users/zcorpan/VCS/git/html5lib/html5lib-python/html5lib/tests/test_tree_construction.py cannot collect test class 'TestData' because it has a __init__ constructor","msgtype":"m.text"},"ts":1458640110000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok installed nose with easy_install instead","msgtype":"m.text"},"ts":1458640283000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"how do i run only the treebuilder tests?","msgtype":"m.text"},"ts":1458640484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nosetests test_treewalkers.py","msgtype":"m.text"},"ts":1458641195000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: can i restrict it more to only run a specific dat file? haven't figured it out by myself yet from nosetests --help","msgtype":"m.text"},"ts":1458641238000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: test_treewalkers isn't what you want, it's test_parser","msgtype":"m.text"},"ts":1458641365000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: test_parser2.py ?","msgtype":"m.text"},"ts":1458641415000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't actually know what the reason for test_parser and test_parser2 is","msgtype":"m.text"},"ts":1458641476000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i don't see any test_parser","msgtype":"m.text"},"ts":1458641493000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Looks like there isn't an easy way to run a specific .dat file, but you could hack get_data_files in support.py","msgtype":"m.text"},"ts":1458641514000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh?","msgtype":"m.text"},"ts":1458641531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Looking at test_parser2 it clearly isn't what you want","msgtype":"m.text"},"ts":1458641542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-python/tree/master/html5lib/tests no test_parser.py here","msgtype":"m.text"},"ts":1458641600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh wait, it looks like I had an old checkout and gsnedders changed something","msgtype":"m.text"},"ts":1458641612000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess these days you are supposed to use py.test and tree_construction.py","msgtype":"m.text"},"ts":1458641694000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-python/commit/9337b003fa4465e91c1d9b3271064e34e26d876b ?","msgtype":"m.text"},"ts":1458641783000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: help?","msgtype":"m.text"},"ts":1458641866000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"py.test testdata/tree-construction/main-element.dat seems to work?","msgtype":"m.text"},"ts":1458642218000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Neat","msgtype":"m.text"},"ts":1458642564000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok now i'm happy (for now). might need help again with the wpt import later :-)","msgtype":"m.text"},"ts":1458642622000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thx!","msgtype":"m.text"},"ts":1458642627000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: i get 502 for https://validator.nu/ and https://html5.validator.nu/","msgtype":"m.text"},"ts":1458643179000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'm running into https://www.w3.org/Bugs/Public/show_bug.cgi?id=25552 and co with <slot>","msgtype":"m.text"},"ts":1458643403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: <slot> needs to be as generic as <template> more or less","msgtype":"m.text"},"ts":1458643451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any opinions? i still think script and template should be allowed in as many places as possible, basically","msgtype":"m.text"},"ts":1458643484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I tend to agree, the parser already allows for it and implementations already deal, right?","msgtype":"m.text"},"ts":1458643513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I'll also need your help with <slot> since I don't really have a firm grasp on how all the details need to be filled in","msgtype":"m.text"},"ts":1458643574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right. iirc there's like one exception where the parser supports script but not template for some reason","msgtype":"m.text"},"ts":1458643586000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i still need to fix the <template> content model bug","msgtype":"m.text"},"ts":1458643652000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: does <slot> parse into a different tree like <template> does?","msgtype":"m.text"},"ts":1458643677000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no","msgtype":"m.text"},"ts":1458643783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that's the main difference","msgtype":"m.text"},"ts":1458643788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but you can do <slot><tr><td>x</slot> ?","msgtype":"m.text"},"ts":1458643810000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ideally, yes","msgtype":"m.text"},"ts":1458643824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and what should validators complain about? for <template> the latest thinking is to basically not validate the subtree (but still report parse errors)","msgtype":"m.text"},"ts":1458643915000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I should probably think through the parsing rules again though, to see if it actually makes sense to follow <template>","msgtype":"m.text"},"ts":1458643942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: not sure, technically <slot> contents are fallback content, so you could validate with respect to the surrounding tree perhaps","msgtype":"m.text"},"ts":1458643971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmmmm. ok. transparent content model maybe","msgtype":"m.text"},"ts":1458644105000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: ^","msgtype":"m.text"},"ts":1458644138000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: hsivonen: btw, i remember there being an online tool to dump only parse errors with the v.nu html parser. Is it still up somewhere?","msgtype":"m.text"},"ts":1458644206000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Defining a new element is hard","msgtype":"m.text"},"ts":1458645906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_ deserves much respect for figuring out over a 100","msgtype":"m.text"},"ts":1458645929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: are you around?","msgtype":"m.text"},"ts":1458647070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: I can't find the issue where we discuss the default rendering of <slot>","msgtype":"m.text"},"ts":1458647080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: so given that attachShadow() comes with restrictions you could come up with restrictions on <slot> too that match that, but it'll get complicated quick","msgtype":"m.text"},"ts":1458648277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: What's the <template> content model bug?","msgtype":"m.text"},"ts":1458649294000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: thanks. the watchdog has automatically brought the service back up, but I need a faster watchdog","msgtype":"m.text"},"ts":1458650317000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: I don't recall an error dumper, but there's https://parsetree.validator.nu/","msgtype":"m.text"},"ts":1458650367000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What should { elem.classList = \"foo bar foo\"; elem.classList.replace(\"foo\", \"qux\"); return elem.classList.value; } return?","msgtype":"m.text"},"ts":1458650776000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: suspect \"quz bar\"","msgtype":"m.text"},"ts":1458650941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Doesn't seem specified to me.","msgtype":"m.text"},"ts":1458650961000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"Replace token in tokens with newToken.\"","msgtype":"m.text"},"ts":1458650973000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: why isn't it specified?","msgtype":"m.text"},"ts":1458651042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean in the spec.","msgtype":"m.text"},"ts":1458651075000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I think it is","msgtype":"m.text"},"ts":1458651094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: When removing duplicate tokens in `remove`, we specify 'For each token in tokens, remove token from tokens.',","msgtype":"m.text"},"ts":1458651123000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"when replacing in `replace`, we specify 'Replace token in tokens with newToken.',","msgtype":"m.text"},"ts":1458651148000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"to me it sounds like it should become \"qux bar qux\".","msgtype":"m.text"},"ts":1458651157000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: there are no duplicate tokens though","msgtype":"m.text"},"ts":1458651159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What do you mean?","msgtype":"m.text"},"ts":1458651209000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: why would there be duplicate tokens after they are parsed?","msgtype":"m.text"},"ts":1458651239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe remove should not account for duplicates","msgtype":"m.text"},"ts":1458651292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh I see.","msgtype":"m.text"},"ts":1458651303000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"If the collected string is not in tokens, append the collected string to tokens.\" in the ordered set parser.","msgtype":"m.text"},"ts":1458651315000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/html/issues/541","msgtype":"m.text"},"ts":1458651717000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that seems reasonable for <template>","msgtype":"m.text"},"ts":1458651780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: the weird thing with <slot> that makes it trickier too is that it's actually non-conforming for it to appear in a normal document (except perhaps inside <template> contents)","msgtype":"m.text"},"ts":1458651817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it's only useful in a shadow tree","msgtype":"m.text"},"ts":1458651828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: so unless the validator is integrated in the browser, you cannot meaningfully check its conformance","msgtype":"m.text"},"ts":1458651858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: integrated in the browser is something i hope will happen","msgtype":"m.text"},"ts":1458651884000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: the first step of attachShadow could be made laxer if <slot> is parsed more like <template> though?","msgtype":"m.text"},"ts":1458651974000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: they're not tightly related","msgtype":"m.text"},"ts":1458652046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: thanks! i don't know if i caused the 502 but it started right after i tried to guess the URL to parsetree (with some unknown path for validator.nu)","msgtype":"m.text"},"ts":1458652085000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it's mostly about elements having complex requirements, perhaps builtin shadow tree, vs guaranteed to be simple without builtin shadow tree","msgtype":"m.text"},"ts":1458652109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. i think i need to take a day to read all the shadow specs to understand what's going on here :-)","msgtype":"m.text"},"ts":1458652251000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That'd help","msgtype":"m.text"},"ts":1458652306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if we make <slot><tr> work i think we should also make <foo-bar><tr> work, otherwise people will use <slot> all over the place to take advantage of the better parsing","msgtype":"m.text"},"ts":1458652616000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: add a longer form of that argument to https://github.com/w3c/webcomponents/issues/59?","msgtype":"m.text"},"ts":1458652915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: cProfile says that wpt/lint spends 32% of its time in html5lib’s detectEncoding. Would it be wrong for the lint to assume everything is UTF-8 ?","msgtype":"m.text"},"ts":1458653450000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yes","msgtype":"m.text"},"ts":1458653476000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"some things quite intentionally aren't","msgtype":"m.text"},"ts":1458653493000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although you could perhaps try making it assunme utf8 and fall back to not-utf8 if parsing fails","msgtype":"m.text"},"ts":1458653530000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For some definiton of \"fails\"","msgtype":"m.text"},"ts":1458653546000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok, that sounds uncertain enough that it’s not worth it. thanks","msgtype":"m.text"},"ts":1458653591000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Domenic: https://github.com/w3c/webcomponents/issues/59#issuecomment-199831277","msgtype":"m.text"},"ts":1458655999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah saw that. anything in particular for me to comment on?","msgtype":"m.text"},"ts":1458656031000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh i guess making custom elements parse like slot","msgtype":"m.text"},"ts":1458656037000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: exactly","msgtype":"m.text"},"ts":1458656049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let me check with the googlers...","msgtype":"m.text"},"ts":1458656108000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if logical properties exist now, I think we can remove a couple of those LTR-specific things","msgtype":"m.text"},"ts":1458656177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/heycam/webidl/pull/94 Is that blocked by something?","msgtype":"m.text"},"ts":1458656283000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: heycam|away might know","msgtype":"m.text"},"ts":1458656345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: unclear to what extent they fully exist... although I think Firefox has been shipping a versino of them (behind a flag??) for a while","msgtype":"m.text"},"ts":1458656407000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Gecko has had prefixed versions for ages","msgtype":"m.text"},"ts":1458656520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, so has chrome","msgtype":"m.text"},"ts":1458656532000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but not ones that match that spec","msgtype":"m.text"},"ts":1458656537000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: reading scrollback about the validator thing. Is https://parsetree.validator.nu/ the thing you had been thinking of?","msgtype":"m.text"},"ts":1458658162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes","msgtype":"m.text"},"ts":1458658205000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1458658209000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1458658210000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also yeah it would be nice to get the <template> document-conformance stuff in the spec updated","msgtype":"m.text"},"ts":1458658266000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"happy to make the validator changes to conform to whatever we end up with in the spec","msgtype":"m.text"},"ts":1458658333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm wonder if https://parsetree.validator.nu/?parser=html5&content=<%21DOCTYPE+html><option>&submit=Print+Tree is per spec and if it's intentional","msgtype":"m.text"},"ts":1458658382000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i mean that it's a parse error","msgtype":"m.text"},"ts":1458658390000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wish <dt>s in the spec had ids","msgtype":"m.text"},"ts":1458658567000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"If there is a node in the stack of open elements that is not either a dd element, a dt element, an li element, an optgroup element, an option element, a p element, an rb element, an rp element, an rt element, an rtc element, a tbody element, a td element, a tfoot element, a th element, a thead element, a tr element, the body element, or the html element, then this is a parse error.\"","msgtype":"m.text"},"ts":1458658579000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so a bug in v.nu. and i also need to add menuitem to this list","msgtype":"m.text"},"ts":1458658620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe factor it out","msgtype":"m.text"},"ts":1458658660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So, I landed something on master without review","msgtype":"m.text"},"ts":1458659404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: what to do?","msgtype":"m.text"},"ts":1458659416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"git diff --color-words ❤️ (when there's rewrap)","msgtype":"m.text"},"ts":1458659455000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"checks that he didn't leave the tree burning","msgtype":"m.emote"},"ts":1458659577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, that's all good","msgtype":"m.text"},"ts":1458659584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this seems like a case where you open an issue asking for review. In more drastic circumstances (like when I accidentally landed some script evaluation stuff) you could either push a revert commit, or you could un-protect master, force-push to a previous state, and re-protect it.","msgtype":"m.text"},"ts":1458659589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Will do and then I'm going to take a break for a bit 😃","msgtype":"m.text"},"ts":1458659628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Things started getting so repetitive I forgot the branch making step","msgtype":"m.text"},"ts":1458659658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: hsivonen: where should i file bugs about v.nu html parser? https://bugzilla.validator.nu/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&component=HTML%20parser ?","msgtype":"m.text"},"ts":1458661595000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: in the HTML: Parser component on bugzilla.mozilla.org","msgtype":"m.text"},"ts":1458662309000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: also if it's only about parse error vs. no parse error?","msgtype":"m.text"},"ts":1458662355000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: about.validator.nu says \"Bugs should be reported to Validator.nu Bugzilla.\" btw","msgtype":"m.text"},"ts":1458662412000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i meant https://about.validator.nu/htmlparser/ points to the link i gave above","msgtype":"m.text"},"ts":1458662476000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Domenic: the slow review wasn't meant as critique","msgtype":"m.text"},"ts":1458665743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it's just that I don't have a good system for landing a set of incremental changes","msgtype":"m.text"},"ts":1458665761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm ok","msgtype":"m.text"},"ts":1458665775000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: e.g., I want to revive how we do \"effective script origin\", but I first want to land the outstanding PRs","msgtype":"m.text"},"ts":1458665790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess I could create a new branch that also contains those commits, but then it becomes like a house of cards (and also I don't really know how to do that just yet)","msgtype":"m.text"},"ts":1458665822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: git checkout -b fix-1; /* PR for fix-1 */ git checkout -b fix-2; /* while on fix-1, so becomes on top of fix-1, then PR for fix-2 */ ... i think","msgtype":"m.text"},"ts":1458665946000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Chrome's depot-tools have some good tools for managing dependent branches: https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools.html","msgtype":"m.text"},"ts":1458665997000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: yeah you can just branch of a previous branch. But, I'll try to focus on the origin stuff after I work through the easy stuff.","msgtype":"m.text"},"ts":1458666080000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OTOH, depot is horrible in general :)","msgtype":"m.text"},"ts":1458666089000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: can you branch from two branches?","msgtype":"m.text"},"ts":1458666164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: anyway, seems icky, but maybe at some point","msgtype":"m.text"},"ts":1458666177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not quite. I would just create a linear history of all the changes in the order you think they should be applied.","msgtype":"m.text"},"ts":1458666191000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I broke https://github.com/whatwg/html/pull/920 by force-pushing my local checkout. Can you re-force-push your with the fixed title and merge?","msgtype":"m.text"},"ts":1458666247000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, if I knew what I was doing upfront that'd be easy, but it's often on the go","msgtype":"m.text"},"ts":1458666257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, that does mean you need to PR them sequentially, though","msgtype":"m.text"},"ts":1458666273000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: will unbreak","msgtype":"m.text"},"ts":1458666293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I figure we'll be sure to make it work while landing, but just for getting work up that people can critique, seems to be OK.","msgtype":"m.text"},"ts":1458666297000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1458666330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has http://krijnhoetmer.nl/irc-logs/ stopped working","msgtype":"m.text"},"ts":1458666853000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah","msgtype":"m.text"},"ts":1458666874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone want to review https://github.com/whatwg/html/pull/884 btw?","msgtype":"m.text"},"ts":1458667715000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that change looked fine to me, I thought the problem was finding implementers","msgtype":"m.text"},"ts":1458667777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it seems like a small enough bug we should just fix the spec and then file bugs on implementations (after doing some testing)","msgtype":"m.text"},"ts":1458667796000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: although looking at it again I think you should add the word \"exception\" after the class name","msgtype":"m.text"},"ts":1458667810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: maybe assign it to junov?","msgtype":"m.text"},"ts":1458667837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: origins are not mutable right?","msgtype":"m.text"},"ts":1458668747000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: ah i guess they are, that is how document.domain works","msgtype":"m.text"},"ts":1458668841000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: would it be possible to make them immutable and then document.domain changes the origin to a value that is a copy but modified?","msgtype":"m.text"},"ts":1458668869000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: my plan is to make a single field on origin mutable that document.domain can mutate","msgtype":"m.text"},"ts":1458668910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm I guess per https://github.com/whatwg/html/issues/794 implementations don't do that","msgtype":"m.text"},"ts":1458668914000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the PRs just make sure we don't contradict implementations","msgtype":"m.text"},"ts":1458668959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: after that I'll merge effective script origin into origin","msgtype":"m.text"},"ts":1458668983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: is https://github.com/whatwg/html/pull/915 good now?","msgtype":"m.text"},"ts":1458669128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no: \"It's very weird how this (and set and \"delete an existing named property\") are dfn'ed. Can you fix them to be xrefs to the appropriate Web IDL concepts while you're fixing this up?\"","msgtype":"m.text"},"ts":1458669152000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that comment is not in the PR?","msgtype":"m.text"},"ts":1458669378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \" domenic commented on an outdated diff an hour ago \" last one","msgtype":"m.text"},"ts":1458669396000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's also not immediately obvious to me what that means, guess I'll look tomorrow","msgtype":"m.text"},"ts":1458669400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1458669411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: wouldn't that remove the links from the IDL fragment?","msgtype":"m.text"},"ts":1458669458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmmm I see. But for Window and Document we don't do that.","msgtype":"m.text"},"ts":1458669548000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: hmm but we do for option and such","msgtype":"m.text"},"ts":1458669606000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I don't like this; these places aren't defining the term \"set\". But I guess we can keep it.","msgtype":"m.text"},"ts":1458669632000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: sounds like a follow up issue to clean things up","msgtype":"m.text"},"ts":1458669656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I can file one","msgtype":"m.text"},"ts":1458669691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool. I'll get back to merging your PRs","msgtype":"m.text"},"ts":1458669719000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: you should be able to merge https://github.com/whatwg/html/pull/870 now","msgtype":"m.text"},"ts":1458670422000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So close to a streak of 10, but my internet connection dropped","msgtype":"m.text"},"ts":1458673934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So now it's 12 commits today, with a streak of 9","msgtype":"m.text"},"ts":1458673945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For w3c/html","msgtype":"m.text"},"ts":1458673953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Euh, whatwg/html, lol","msgtype":"m.text"},"ts":1458673961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the latest css for w3c specs is super annoying. Takes ages to load, and when it finally loads, the spec layout changes radically. So, not worth to start reading anything before the css has been loaded.","msgtype":"m.text"},"ts":1458679194000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Takes ages to load? Shouldn't be any slower than it ever has been.","msgtype":"m.text"},"ts":1458680782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That said, avoiding relying on the w3c server for styles is why Bikeshed writes the styles in manually for EDs.)","msgtype":"m.text"},"ts":1458680804000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: for some reason has been slow here lately","msgtype":"m.text"},"ts":1458681333000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(in Helsinki)","msgtype":"m.text"},"ts":1458681335000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Also if you're experiencing slow loads *consistently* that implies they're not being reasonably cached, which is dumb.","msgtype":"m.text"},"ts":1458681375000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, the cache header only allows it to be cached for 6 hours.","msgtype":"m.text"},"ts":1458681741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nox: looking now","msgtype":"m.text"},"ts":1458688862000,"senderName":"heycam","senderId":"heycam@irc"}
]