[
{"content":{"body":"anyone on right now? i have an issue with iframes :(","msgtype":"m.text"},"ts":1586019298000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"i'll just go ahead and rant, then","msgtype":"m.text"},"ts":1586019384000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"i have a site with a page that is specifically intended for other sites to embed via iframe","msgtype":"m.text"},"ts":1586019407000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"for the user's convenience, if the user is already logged in to my site they should be able to access their logged-in account via the iframe","msgtype":"m.text"},"ts":1586019450000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"and this used to work but then browsers starting adding inconsistent/buggy support for 3rd party cookies","msgtype":"m.text"},"ts":1586019473000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"so i thought, ok I don't really need a cookie, I could just store a session id with localStorage since all the access is with javascript I can just add that token in a header","msgtype":"m.text"},"ts":1586019507000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"but the trouble is that localStorage seems to be blocked by browsers via the same setting that blocks 3rd party cookies","msgtype":"m.text"},"ts":1586019538000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"so site A loads an iframe with a page from site B, and the iframe tries to store foo=bar in localStorage, the browser interprets that as a request to store under site A's local storage and that's blocked if the user has \"block 3rd party cookies\"","msgtype":"m.text"},"ts":1586019609000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"Yes, I think browsers are generally moving away from letting iframes track people around the internet in that way","msgtype":"m.text"},"ts":1586019616000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"localStorage, cookies, whatever","msgtype":"m.text"},"ts":1586019623000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes but it's not about tracking users across sites","msgtype":"m.text"},"ts":1586019625000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"it's about communicating with users of my own site","msgtype":"m.text"},"ts":1586019642000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"Knowing who the user is (i.e., accessing their logged in account) is tracking them","msgtype":"m.text"},"ts":1586019643000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"in fact I don't want my localStorage associated to site A at all","msgtype":"m.text"},"ts":1586019652000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"I'd like a localStorage in an iframe that is associated only to the site the iframe came from","msgtype":"m.text"},"ts":1586019665000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"The difficulty there is that the browser would need some guarantee that the embedding site never tells the iframe \"I exist\"","msgtype":"m.text"},"ts":1586019703000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there could have been some iframe option to say, allow iframe-origin localStorage and block postMessage at the same time","msgtype":"m.text"},"ts":1586019759000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"It'd have to be stricter than that","msgtype":"m.text"},"ts":1586019777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No headers, no query params... actually, I can't think of anything that would work, because you can just use the URL path","msgtype":"m.text"},"ts":1586019808000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. <iframe src=\"https://tracking-widget.example/userID1234/\"></iframe>","msgtype":"m.text"},"ts":1586019833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if the parent site wants to leak the user's identity i don't think you can stop it","msgtype":"m.text"},"ts":1586019838000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1586019842000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Which is why browsers are doing this","msgtype":"m.text"},"ts":1586019846000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So that once it's leaked, there's no way to store it","msgtype":"m.text"},"ts":1586019853000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: using allow=\"\" as additional guard for SAB postMessage() doesn't seem unreasonable to me, how serious is this proposal? Mainly wondering if you thought through all the changes required already.","msgtype":"m.text"},"ts":1586019869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it is new and just something that came up. We have not thought it through very much but wanted to start a discussion earlier rather than later.","msgtype":"m.text"},"ts":1586019907000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: in particular, I'm wondering if it should influence the public crossOriginIsolated getter and perhaps availability of the SAB constructor","msgtype":"m.text"},"ts":1586019907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: kk","msgtype":"m.text"},"ts":1586019917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's a bit weirder for Chrome since this is all about a future move to lock up SAB, instead of about how to expose SAB.","msgtype":"m.text"},"ts":1586019952000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Influencing SAB constructor makes sense, unsure about the crossOriginIsolated getter","msgtype":"m.text"},"ts":1586019993000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If the meaning of crossOriginIsolated is \"powerful features available\" then that makes sense","msgtype":"m.text"},"ts":1586020010000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If the meaning is \"COOP+COEP enabled\" then maybe not","msgtype":"m.text"},"ts":1586020021000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably \"powerful features available\" is more useful","msgtype":"m.text"},"ts":1586020031000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"iframe with postMessage was a great solution to let a site integrate a feature from a second site, while protecting the javascript in both directions","msgtype":"m.text"},"ts":1586020436000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"so trying to do this in a way that respects user privacy, meaning it still works with all privacy settings enabled (but still allowing javascript)","msgtype":"m.text"},"ts":1586020477000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"can it still be done?  if the user has an account at parent site and also on the iframe site, it seems like now the iframe will also need to have a login form inside","msgtype":"m.text"},"ts":1586020552000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"definitely don't want the user to login through the parent site and reveal their credentials to some other site","msgtype":"m.text"},"ts":1586020608000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"and if we develop a plugin now we have to do it separately for every browsre","msgtype":"m.text"},"ts":1586020618000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"xalqor: I am not an expert, but my understanding is that yes, logging in a second time is the current direction browsers are heading.","msgtype":"m.text"},"ts":1586020620000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but it's not just a second time, it's also every time they visit the parent site -- because the iframe can't store the cookie or anything in localStorage to remember that session across reloads","msgtype":"m.text"},"ts":1586020677000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"Hmm, I thought the plan was just a second time, i.e. you'd get a different storage partition for when you're top level vs. when you're embedded in site A vs. when you're embedded in site B.","msgtype":"m.text"},"ts":1586020740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if 3rd party cookies & storage is blocked then it doesn't work","msgtype":"m.text"},"ts":1586020760000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"and i don't want to tell my users to disable that setting -- because it affects them on all sites","msgtype":"m.text"},"ts":1586020772000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"Well I guess that setting is basically saying \"don't allow embedded iframes to store any state\" so it makes sense that it would prevent use cases like that","msgtype":"m.text"},"ts":1586020792000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(embedded _third-party_ iframes, that is)","msgtype":"m.text"},"ts":1586020902000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1586020927000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"thanks for the chat, i will need to rethink how i'm doing this thing","msgtype":"m.text"},"ts":1586021043000,"senderName":"xalqor","senderId":"xalqor@irc"},
{"content":{"body":"Happy to help!","msgtype":"m.text"},"ts":1586021139000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I’d like to keep the number of (public) booleans down I think. It’s confusing enough as-is","msgtype":"m.text"},"ts":1586022126000,"senderName":"annevk","senderId":"annevk@irc"}
]