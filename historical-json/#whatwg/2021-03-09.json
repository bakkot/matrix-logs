[
{"content":{"body":"Does anyone know if there is a recommendation for html includes?  Eg to include html custom elements, or vue components, etc?","msgtype":"m.text"},"ts":1615249931000,"senderName":"br3nt","senderId":"br3nt@irc"},
{"content":{"body":"hi annevk! when you're back, https://github.com/whatwg/fetch/pull/1185 is ready for another look. it currently doesn't handle navigation-timing: that would require some adjustments, like integration with the HTML spec and updating the entry on-the-fly, but I wanted to start with RT before getting to that","msgtype":"m.text"},"ts":1615282108000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: do we have tests for these fields? E.g., that show implementations don't use Content-Length?","msgtype":"m.text"},"ts":1615282225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we have tests for the fields, though not to that particular case. Also writing tests for the connection-internal timestamps is a big undertaking (requires writing a custom TCP server in WPT)","msgtype":"m.text"},"ts":1615282307000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: I can add a test specifically for encodedSize with no content-length, it shouldn't be too difficult. also I'm OK with not including encodedSize in the first patch and adding it after we have a test. Added https://github.com/web-platform-tests/wpt/issues/27952 to track","msgtype":"m.text"},"ts":1615282542000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: yeah, I'm also curious what happens for WPT fetch/content-length/too-long.window.js","msgtype":"m.text"},"ts":1615282807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, interesting cases","msgtype":"m.text"},"ts":1615282866000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: do we just keep the timing info on fetch params the entire time or do we put it on response? because if the latter it'll also disappear when steps return a network error","msgtype":"m.text"},"ts":1615282999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, I guess I should do another review, just have a big backlog","msgtype":"m.text"},"ts":1615283013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: currently if there's a network error while the response is processed it's still reported","msgtype":"m.text"},"ts":1615283077000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"reporting happens after the response is either aborted or the body is fully read","msgtype":"m.text"},"ts":1615283113000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I guess I was also wondering when there was no response (just a network error)","msgtype":"m.text"},"ts":1615283413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it would be in the backlog to report it in certain cases. The implementations are quite messy about this.","msgtype":"m.text"},"ts":1615283446000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: testing current chromium, when Content-Length header is missing things work OK, otherwise encodedBodySize is equal to min(actualLength, headerLength) (cc yoav)","msgtype":"m.text"},"ts":1615287673000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: that means it's never looking at Content-Length, right? as per current steps","msgtype":"m.text"},"ts":1615287774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same in Firefox (Safari does not support encodedBodySize)","msgtype":"m.text"},"ts":1615287776000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: if Content-Length header is there, it truncates the actual size","msgtype":"m.text"},"ts":1615287809000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: well, but in that case you cannot actually observe more bytes so that's more a function of H/1 parsing","msgtype":"m.text"},"ts":1615287859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"RE \"encodedBodySize is equal to min(actualLength, headerLength)\" - that's a bug, right?","msgtype":"m.text"},"ts":1615287860000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1615287874000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"right, annevk. It's not a bug, it's H1","msgtype":"m.text"},"ts":1615287887000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Okay, that means we can ignore Content-Length here, thanks","msgtype":"m.text"},"ts":1615287921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, I'll PR the test to WPT","msgtype":"m.text"},"ts":1615287936000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Thanks! If you could also throw a crbug my way once the WPT is there, that'd be highly appreciated :)","msgtype":"m.text"},"ts":1615287970000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: I'd completely forgotten that you'd raised an objection on https://github.com/whatwg/html/pull/6287","msgtype":"m.text"},"ts":1615291199000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: I don't think that's an objection 🙂","msgtype":"m.text"},"ts":1615291351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unless I'm missing something","msgtype":"m.text"},"ts":1615291356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, a comment that expected an answer","msgtype":"m.text"},"ts":1615291377000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I'","msgtype":"m.text"},"ts":1615291530000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I'll be marking Firefox as interested, since at this point I don't think it makes sense to wait for jdai's approval","msgtype":"m.text"},"ts":1615291613000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: ah okay, I think given your comment I really like removing normalization from form submission though","msgtype":"m.text"},"ts":1615291625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I'll be filing a separate issue then","msgtype":"m.text"},"ts":1615291665000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: I guess one worry I have is that if we don't change that quickly and the tests don't expect that we'll end up with Firefox and Safari engineers just adding it","msgtype":"m.text"},"ts":1615291674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Now I remember that I filed a Webkit bug about it: https://bugs.webkit.org/show_bug.cgi?id=219086","msgtype":"m.text"},"ts":1615292388000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: I see, I guess add a comment there that it's still under consideration pointing to the new issue?","msgtype":"m.text"},"ts":1615293825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess the only way to peek at streams is to read from a stream and give the caller another stream upon which you enqueue whatever you read followed by the remainder?","msgtype":"m.text"},"ts":1615303030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: ORB has to do something similar to SRI, though not always with the full response body","msgtype":"m.text"},"ts":1615303071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, unless you want to reach into internal slots.","msgtype":"m.text"},"ts":1615303102000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: at some point this warrants an abstraction, but not quite there yet and maybe it can be limited to Fetch, dunno much about other cases","msgtype":"m.text"},"ts":1615303452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yoav: fixed a lot of the style & nits for fetch/RT... still a few open issues. Not sure how to describe the connection timing info as \"requirements\", and not sure how to handle response-end in the worker case. Could use some guidance on the first one, and thinking to leave the second one as a TODO","msgtype":"m.text"},"ts":1615306166000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I guess if a section doesn't suit you maybe a <ul> with an item for each time thingy","msgtype":"m.text"},"ts":1615306620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure, I can do that annevk.","msgtype":"m.text"},"ts":1615306652000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: so the second one (assuming service workers) was kinda handled with the \"done flag\" architecture you had initially, assuming implementations do create RT entries","msgtype":"m.text"},"ts":1615306801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but \"done flag\" itself is rather fraud :/","msgtype":"m.text"},"ts":1615306834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm so maybe it should move back there.","msgtype":"m.text"},"ts":1615306842000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"implementations do create RT entries, but not in fetch, rather in the clients of fetch, where \"done\" is about the resource and not about the request/response","msgtype":"m.text"},"ts":1615306886000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: yeah, I guess so","msgtype":"m.text"},"ts":1615306910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: you mean the callers of fetch?","msgtype":"m.text"},"ts":1615306919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1615306921000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: in chromium, img/script/etc create RT entries and not FETCH","msgtype":"m.text"},"ts":1615306939000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"the problem with fetch is that once it creates a response stream, it's pretty much done","msgtype":"m.text"},"ts":1615306950000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"and RT is created after responseEnd, which is after that point","msgtype":"m.text"},"ts":1615306966000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"That's kind of the beauty of it, but yes, agreed","msgtype":"m.text"},"ts":1615306970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The way that makes sense for me to think about it is an event to the response body, something like \"entire body retrieved\"","msgtype":"m.text"},"ts":1615307011000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"which would trigger the RT entry","msgtype":"m.text"},"ts":1615307039000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"It's interesting though timing-wise, is the RT entry added during the load event?","msgtype":"m.text"},"ts":1615307056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sometimes it is, sometimes it isn't","msgtype":"m.text"},"ts":1615307071000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"That might be hard to specify without actually updating each caller","msgtype":"m.text"},"ts":1615307073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in some cases it's enqueued after some timer","msgtype":"m.text"},"ts":1615307086000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"there is no definition or standard implementation of \"when is RT actually enqueued\", only of what the timestamps represent","msgtype":"m.text"},"ts":1615307113000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"it's clear that it needs to be enqueued after the entire response body is read, which in the case of video for example could be never","msgtype":"m.text"},"ts":1615307140000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"It only takes one implementation and a couple of high-profile sites to get a de facto definition","msgtype":"m.text"},"ts":1615307144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh yeah, video is interesting","msgtype":"m.text"},"ts":1615307173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, Fetch kinda wants to register a listener on the stream that's invoked at the right time","msgtype":"m.text"},"ts":1615307201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's no wonder responseEnd is tricky, when we talk about resource as something that is a \"stream\"","msgtype":"m.text"},"ts":1615307222000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Maybe what the implementations do is what should be spec'd - associate the fetch timing info to the response, and have the different clients enqueue it to RT. but that would require diving to HTML and several other specs. /cc yoav","msgtype":"m.text"},"ts":1615307292000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Perhaps we should have special read body operations that are tailored for responses, they use the ready body operations underneath, but can also handle RT","msgtype":"m.text"},"ts":1615307313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And yeah, that might still mean that the callers have to do something, but we could try to make it minimal","msgtype":"m.text"},"ts":1615307364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interesting, so the stream passed to body would be sort-of a decorated stream","msgtype":"m.text"},"ts":1615307364000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Let me see if I can spec something like that, I think it would make the most sense (and less of a headache than trying to patch every possible client of FETCH)","msgtype":"m.text"},"ts":1615307531000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: let's see what yoav says though","msgtype":"m.text"},"ts":1615307736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: I think there's still wrinkles unless we're sure callers always do the thing at EOF (though maybe they do, it'd be somewhat logical)","msgtype":"m.text"},"ts":1615307780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: SGTM, pending yoav","msgtype":"m.text"},"ts":1615308384000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"catching up..","msgtype":"m.emote"},"ts":1615308592000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'm in favor of trying to do as much as we can inside of Fetch and limit what callers need to do, as they are spread all over the place","msgtype":"m.text"},"ts":1615308948000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: the main tricky aspect is actions of callers vs creation of RT entry objects; if callers always read on the main thread I think we can require that RT objects are created in the EOF task (we'll even have access to a global!), but how realistic this is, is unclear","msgtype":"m.text"},"ts":1615309088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I guess some callers are special and might need more? E.g., media elements","msgtype":"m.text"},"ts":1615309143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not 100% sure callers always read on the main thread","msgtype":"m.text"},"ts":1615309191000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: in principle everything creates an RT object though, right? Aside from reports/navigations? E.g., background-image, CSS, etc.","msgtype":"m.text"},"ts":1615309200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Are we talking about spec or implementation?","msgtype":"m.text"},"ts":1615309209000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yeah, every renderer-based request creates an RT entry","msgtype":"m.text"},"ts":1615309236000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: this would be for the specs, though implementations might be impacted, depending","msgtype":"m.text"},"ts":1615309238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g., if an implementation does a load event and creates the RT later, they might become non-conforming","msgtype":"m.text"},"ts":1615309279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or if they create an RT and then tasks happen and then load, also a problem","msgtype":"m.text"},"ts":1615309302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I *think* all implementations currently create the entry before their load event","msgtype":"m.text"},"ts":1615309332000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"(but currently they're not required to)","msgtype":"m.text"},"ts":1615309343000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: this might also solve part of the problem of the fetch <> RT linking issue I saw","msgtype":"m.text"},"ts":1615309415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: though that would definitely require some caller integration","msgtype":"m.text"},"ts":1615309427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: e.g., the load event could point to the RT object","msgtype":"m.text"},"ts":1615309444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(in a meeting, back in ~30)","msgtype":"m.text"},"ts":1615309525000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk, yoav: implementations sometimes create the entry after the load event, e.g. after a timeout. And I doubt we can count on main-thread reading, e.g. a media decoder is not guaranteed to live on the main thread.","msgtype":"m.text"},"ts":1615309806000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"but they can enqueue a main-thread task to add that entry, no? as long as the timestamps are valid, I would expect implementations to do something similar to that.","msgtype":"m.text"},"ts":1615309880000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"The current responseEnd definition can expose strange timing information, like \"the time it took to decode an image\", also for cross-origin images. not sure if this is desirable/problematic/neutral.","msgtype":"m.text"},"ts":1615310184000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"that is definitely on the \"problematic\" side of that equation","msgtype":"m.text"},"ts":1615311021000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"noamr: do you have a sense of how many call sites we'd have to deal with if we hang the queueing e.g. as a task before the load event?","msgtype":"m.text"},"ts":1615311081000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Yoav: I think most of them are in the HTML spec, and the list is roughly equivalent to the “destination” list in fetch","msgtype":"m.text"},"ts":1615311300000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Going offline for a bit","msgtype":"m.text"},"ts":1615311313000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"HTML + CSS + fetch() + XHR should capture a lot of things","msgtype":"m.text"},"ts":1615311560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not reports, but they might be skipped anyway?","msgtype":"m.text"},"ts":1615311578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reports are skipped, I believe","msgtype":"m.text"},"ts":1615311746000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"my fear is that HTML has a *lot* of callers","msgtype":"m.text"},"ts":1615311766000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"It's not that bad, what's bad is that they are in a bad state","msgtype":"m.text"},"ts":1615311796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. only images has <img>, <video poster> and <input type=image>","msgtype":"m.text"},"ts":1615311796000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"and I'm probably forgetting some","msgtype":"m.text"},"ts":1615311802000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"but if that's the way to go, then 🤷","msgtype":"m.text"},"ts":1615311842000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"<link rel=icon> 🙂 (but we'd handle all <link> in one go)","msgtype":"m.text"},"ts":1615311844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1615311868000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: it seems hard to get a consistent task without it, but I need to think about it some more","msgtype":"m.text"},"ts":1615311934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1615311952000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I guess one question I have if you're still here is whether sometimes entires don't get created if you don't hit EOF","msgtype":"m.text"},"ts":1615312123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: or maybe they get created when the document is discarded and fetches are aborted?","msgtype":"m.text"},"ts":1615312144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(e.g., for EventSource)","msgtype":"m.text"},"ts":1615312152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The current spec doesn't require them to be created. I *think* implementations do create them, but not sure as this is not currently tested","msgtype":"m.text"},"ts":1615312247000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Naively , it would make sense to fire those entries, with missing attributes for the parts that never happened","msgtype":"m.text"},"ts":1615312280000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"(unless there are some security issues with that that I'm failing to think of)","msgtype":"m.text"},"ts":1615312305000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yeah, you could expose things the moment Fetch returns a response, but that would definitely be different and if it depends on the caller we'll need some caller integration","msgtype":"m.text"},"ts":1615312454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Can you point me to where Fetch sets request's client to an actual ESO? I can't seem to find it","msgtype":"m.text"},"ts":1615312521000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it wants that the caller sets it at the moment","msgtype":"m.text"},"ts":1615312746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: note that it doesn't have a default value (and yes, all this needs a guide and a better description, nearly there in terms of addressing that)","msgtype":"m.text"},"ts":1615312846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I probably shouldn't say that since I'm still some steps removed from that)","msgtype":"m.text"},"ts":1615312877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Gotcha, thanks for the info","msgtype":"m.text"},"ts":1615313352000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"https://stackoverflow.com/questions/66534759/chrome-cors-error-on-request-to-localhost-dev-server-from-remote-site","msgtype":"m.text"},"ts":1615333434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"first question on SO from somebody who ran into CORS+RFC1918 (Private Network Access) behavior","msgtype":"m.text"},"ts":1615333485000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]