[
{"content":{"body":"I tend to think of the schemes that I can't get resources from as URNs. mailto: excepted, for some reason.","msgtype":"m.text"},"ts":1396051222000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i call them all \"URLs\", because I don't find the distinction useful, and trying to distinguish them seems like trying to divide things artificially","msgtype":"m.text"},"ts":1396051311000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess things like XML namespaces make it feel particularly silly, where you have strings that look exactly like URLs to HTTP websites, but are really meaningless identifiers that don't point to any resource","msgtype":"m.text"},"ts":1396051537000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not that XML namespaces are anything to draw much information from; using URLs as opaque identifiers is a terrible idea)","msgtype":"m.text"},"ts":1396051584000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I dunno. I've just never got out of the habit. :P","msgtype":"m.text"},"ts":1396051927000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zewt: well, that's pretty much the ISBN scheme in a nutshell (opaque identifiers, I mean, not so much the terrible idea part)","msgtype":"m.text"},"ts":1396052019000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"eagerly awaits a proper URL implementation of that scheme","msgtype":"m.emote"},"ts":1396052135000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: URLs that don't point to a specific resource or software action are kinda pointless imho.","msgtype":"m.text"},"ts":1396052548000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: (this correlates well to the total lack of usage of such URLs)","msgtype":"m.text"},"ts":1396052563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think they get used in bibliographic data","msgtype":"m.text"},"ts":1396052596000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"though granted URLs that can be resolved seem preferred","msgtype":"m.text"},"ts":1396052627000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the MediaQueryList API is really silly, it reinvents event listeners :/","msgtype":"m.text"},"ts":1396054082000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"gsnedders: Yes, and so that does indeed imply that Futhark is an alphabet. Cool.","msgtype":"m.text"},"ts":1396054820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"esprehn: Agreed. :/","msgtype":"m.text"},"ts":1396054826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" TabAtkins As is Futhorc, FWIW. They're *relatively* similar.","msgtype":"m.text"},"ts":1396056002000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: phonetically Old Norse and Old English were mutually comprehensible, at least to some extent","msgtype":"m.text"},"ts":1396056021000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: The alphabets are probably similar enough to be understandable though not quite as far","msgtype":"m.text"},"ts":1396056072000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1396056084000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The differences in verb forms would be especially noticable written, and not quite as much phonetically)","msgtype":"m.text"},"ts":1396056307000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: find me users that click on links that do nothing, and i'll be impressed :-)","msgtype":"m.text"},"ts":1396057746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: (i've nothing against e.g. isbn: links, since they do do something if you have appropriate software.)","msgtype":"m.text"},"ts":1396057762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: a tel: link doesn't really do the same thing as any other link when clicked on, as an example","msgtype":"m.text"},"ts":1396059670000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(On a phone, say.)","msgtype":"m.text"},"ts":1396059678000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tel: is like mailto:","msgtype":"m.text"},"ts":1396059683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Which you wouldn't know about. :))","msgtype":"m.text"},"ts":1396059683000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"a simple URL","msgtype":"m.text"},"ts":1396059688000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to an action","msgtype":"m.text"},"ts":1396059692000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tel: and mailto: are just like any other url (they tend to load other apps, but so can ftp or anything else)","msgtype":"m.text"},"ts":1396059739000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'd argue it's not a location, and hence tel/mailto are different to ftp/http","msgtype":"m.text"},"ts":1396059775000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but, eh, idk really","msgtype":"m.text"},"ts":1396059782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, care more than know","msgtype":"m.text"},"ts":1396059791000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's not the same as http in that it indicates an action (make a phone call) rather than a resource location, but i think that's completely uninteresting as far as the \"what is a url\" question goes","msgtype":"m.text"},"ts":1396059808000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"how about we just go with a url is like porn: hard to define, but i know it when i see it","msgtype":"m.text"},"ts":1396059971000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I imagine tel: would actually have worked on the Windows 95 box I used to use ... if there was a phone plugged into the modem","msgtype":"m.text"},"ts":1396060609000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway I want software that has all the books","msgtype":"m.text"},"ts":1396060637000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"though some books seem to predate ISBNs, so it'd need to support more schemes than just that","msgtype":"m.text"},"ts":1396060665000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh, and then there's periodicals","msgtype":"m.text"},"ts":1396060695000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: my point is that a url is easy to define, it's whatever has the form foo:bar... like in url.spec.whatwg.org","msgtype":"m.text"},"ts":1396064032000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic_: what is the status with stream APIs","msgtype":"m.text"},"ts":1396101914000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"there is still the w3c draft and then there is your draft","msgtype":"m.text"},"ts":1396101958000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though, I guess http://anolis.hoppipolla.co.uk/aquarium.py/output?uri=http%3A%2F%2Frawgithub.com%2Fwhatwg%2Fstreams%2Fofficial-lookin%2Findex.html&process_filter=on&process_toc=on&process_xref=on&process_sub=on&process_annotate=on&filter=&annotation=&newline_char=LF&tab_char=SPACE&min_depth=2&max_depth=6&w3c_compat_xref_a_placement=on&parser=lxml.html&serializer=html5lib&output_encoding=ascii is n","msgtype":"m.text"},"ts":1396103264000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ot even a real draft yet","msgtype":"m.text"},"ts":1396103265000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess the readme isn't just converted to a spec format yet","msgtype":"m.text"},"ts":1396103350000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hi everybody. I'm reading WHATWG Encoding standard. And there is a 'encode' algorithm (http://encoding.spec.whatwg.org/#encode) . It says \"Let output be a code point stream.\" That seems wrong to me, because result of encoding is a byte stream. Not a code point stream. Am I right? Or I misunderstood something?","msgtype":"m.text"},"ts":1396110098000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"vmatva_: better to ask annevk about that spec","msgtype":"m.text"},"ts":1396111280000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is now away - Reason : Auto-Away after 30 minutes","msgtype":"m.emote"},"ts":1396111359000,"senderName":"sarsky11-hi","senderId":"sarsky11-hi@irc"},
{"content":{"body":"MikeSmith: Didn't you start spec'ing Console API ?","msgtype":"m.text"},"ts":1396111645000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"vmatva_: that does sound wrong, yes","msgtype":"m.text"},"ts":1396113646000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"smaug____: drafts are merging, using whatwg/streams as the base. Some of the stuff, e.g. Object URLs, may get ported over from the W3C draft, but the core primitives are the ones from whatwg/streams.","msgtype":"m.text"},"ts":1396120544000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hixie: http://whatwg.org/C#input-stream \"Any character that is a not a Unicode character, i.e. any isolated surrogate, is a parse error. (These can only find their way into the input stream via script APIs such as document.write().)\"","msgtype":"m.text"},"ts":1396121673000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Itâ€™s a parse errors, but UA still have to process it and can end up with surrogates in any string in the resulting tree?","msgtype":"m.text"},"ts":1396121699000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well, can you write a surrogate pair with two document.write() calls and have it work?","msgtype":"m.text"},"ts":1396121811000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(haven't tried but would guess yes)","msgtype":"m.text"},"ts":1396121841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I think yes, but Iâ€™m not interested in unpaired surrogates","msgtype":"m.text"},"ts":1396121880000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"s/not/more/, sorry","msgtype":"m.text"},"ts":1396121894000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i mean, you'd have a lone surrogate, but only temporarily","msgtype":"m.text"},"ts":1396121911000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what does temporarily mean?","msgtype":"m.text"},"ts":1396121923000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"document.write(\"\\ud800\"); document.write(\"\\udc00\"); would give you a lone surrogate for the period between the two calls","msgtype":"m.text"},"ts":1396121975000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"data:text/html,<script>document.write(\"a\\uD800b\")</script>","msgtype":"m.text"},"ts":1396121991000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"In firefox, I see D800 in a box, ie. \"missing glyph\"","msgtype":"m.text"},"ts":1396122020000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"that's what i'd expect","msgtype":"m.text"},"ts":1396122038000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"chrome gives just \"a\"","msgtype":"m.text"},"ts":1396122046000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so the surrogate made its way all the way up to the fonts subsystem","msgtype":"m.text"},"ts":1396122055000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"chrome's behavior is pretty surprising to me","msgtype":"m.text"},"ts":1396122095000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"more specifically: the whole string is in the DOM, but rendering stops (the \"b\" isn't rendered)","msgtype":"m.text"},"ts":1396122247000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(which means that writing UTF-16 codepoints one at a time still works)","msgtype":"m.text"},"ts":1396122320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Firefox is fine with it anywhere in the tree","msgtype":"m.text"},"ts":1396122472000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"data:text/html,<script>document.write(\"<a\\uD800b>\");document.write(document.body.firstChild.tagName)</script>","msgtype":"m.text"},"ts":1396122474000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"data:text/html,<script>document.write(\"<a a\\uD800b>\");document.write(document.body.firstChild.attributes[0].localName)</script>","msgtype":"m.text"},"ts":1396122478000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"For context: in Servo weâ€™re considering having the HTML tokenizer work on UTF-8 input rather than UTF-16. But UTF-8 can not encode surrogates.","msgtype":"m.text"},"ts":1396122633000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i think chrome and firefox are doing the same thing during parsing, firefox's renderer is just better at coping with it","msgtype":"m.text"},"ts":1396122649000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Iâ€™m trying to determine if we can get away with decoding surrogates to U+FFFD, or if weâ€™re constrained by web compat","msgtype":"m.text"},"ts":1396122667000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I have a hard time imagining real content relying on this, but this is the web","msgtype":"m.text"},"ts":1396122688000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hsivonen: any opinion?","msgtype":"m.text"},"ts":1396122704000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i couldn't say, but i'd suspect there are people for some reason doing things like (equivalent to) for(i=0;i<s.length;++i) document.write(s.charAt(i));","msgtype":"m.text"},"ts":1396122709000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or writing blocks of 1024 codepoints, or things that would otherwise split surrogates into two writes","msgtype":"m.text"},"ts":1396122753000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so, surrogate pairs in separate d.write calls. Yes, that seems plausible","msgtype":"m.text"},"ts":1396122857000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yes, lone surrogates can be introduced from document.write, so it is an issue","msgtype":"m.text"},"ts":1396122956000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I tried to convince Hixie to change this before to forbid lone surrogates to no avail, fwiw","msgtype":"m.text"},"ts":1396122972000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"trying to think of a real-life case where the above might happen, but it's hard to even think of legitimate uses for document.write itself...","msgtype":"m.text"},"ts":1396123077000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gsnedders: forbid as in replace them with U+FFFD?","msgtype":"m.text"},"ts":1396123129000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: aye","msgtype":"m.text"},"ts":1396123238000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Iâ€™d be in favor","msgtype":"m.text"},"ts":1396123261000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it's pretty weird that document.write allows it and (eg) createElement doesn't, since it means document.createElement(otherElement.tagName) can fail","msgtype":"m.text"},"ts":1396123271000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(at least in Chrome, didn't check the spec for that)","msgtype":"m.text"},"ts":1396123282000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: There are plenty of cases that can fail though","msgtype":"m.text"},"ts":1396123285000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah createElement has a lot of restrictions that HTML parsing doesn't","msgtype":"m.text"},"ts":1396123308000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"which is IMO quite weird.","msgtype":"m.text"},"ts":1396123316000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It has to match the Name production in XML 1.04e in every browser","msgtype":"m.text"},"ts":1396123328000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so you can create another element with the same tag via cloneNode, but not createElement","msgtype":"m.text"},"ts":1396123394000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"weird, but I guess I can't think of any case where it's harmful, and assuming document.write's leniency is web compat, I guess it's not necessarily better to make other APIs extra lenient just to be consistent with that","msgtype":"m.text"},"ts":1396123531000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: That sounds like a bad idea (trying to pretend that the input stream is UTF8)","msgtype":"m.text"},"ts":1396123630000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: explain?","msgtype":"m.text"},"ts":1396123647000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i'd be worried that it would result in different layering","msgtype":"m.text"},"ts":1396123665000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: Well it isn't soâ€¦","msgtype":"m.text"},"ts":1396123668000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"eg. different encodings (and therefore different error cases and representable concepts) at each place in the pipeline","msgtype":"m.text"},"ts":1396123694000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: Specifically it seems like the kind of assumption that would be embedded quite deeply in the code","msgtype":"m.text"},"ts":1396123708000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Then later we would find web compat issues","msgtype":"m.text"},"ts":1396123716000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"'and then it would be impossible to change without rewriting lots of things","msgtype":"m.text"},"ts":1396123732000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: existing implementations could keep using UTF-16 and still decode lone surrogates to U+FFFD","msgtype":"m.text"},"ts":1396123897000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Indeed, the spec used to require this","msgtype":"m.text"},"ts":1396123959000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And it wasn't compat reasons that changed it","msgtype":"m.text"},"ts":1396123968000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: If the implementations don't do it we have no idea what the compat restrictions are","msgtype":"m.text"},"ts":1396123997000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: what was the reason?","msgtype":"m.text"},"ts":1396124000000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"jgraham: Implementations did for a while.","msgtype":"m.text"},"ts":1396124005000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Citation needed","msgtype":"m.text"},"ts":1396124012000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SimonSapin: IIRC it was an accidental change in an editorial change that nobody noticed for about two years","msgtype":"m.text"},"ts":1396124026000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or at least nobody questioned for that long","msgtype":"m.text"},"ts":1396124039000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I think html5lib-tests still requires lone surrogates get replaced by U+FFFD!)","msgtype":"m.text"},"ts":1396124117000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(also doing UCS2 to UTF8 conversion in every document.write / innerHTML call seems rather performance-suboptimal)","msgtype":"m.text"},"ts":1396124193000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(especially for innerHTML which is tragically often in tight loops)","msgtype":"m.text"},"ts":1396124211000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(UTF-16)","msgtype":"m.text"},"ts":1396124226000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: No, UTF-16+lone-surrogates-passthrough","msgtype":"m.text"},"ts":1396124245000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"firefox still allows pasting lone surrogates into input fields, heh","msgtype":"m.text"},"ts":1396124753000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"looks like chrome does too (with the same rendering issues as elsewhere)","msgtype":"m.text"},"ts":1396124799000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"firefox will copy it out to the clipboard, chrome copies FFFD","msgtype":"m.text"},"ts":1396124899000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Man, running `git annotate` on the spec takesâ€¦ a while.","msgtype":"m.text"},"ts":1396124910000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's one of the slower git things in my experience","msgtype":"m.text"},"ts":1396124925000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Well, right. It's obviously slow. But doing it on a 6MB file is really horrible.","msgtype":"m.text"},"ts":1396124957000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"probably more to do with the number of revisions visible","msgtype":"m.text"},"ts":1396125009000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or how many revisions it has to go back or something, don't know how it's implemented","msgtype":"m.text"},"ts":1396125023000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, number of revisions and number of lines.","msgtype":"m.text"},"ts":1396125063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's number of lines that really kills it though","msgtype":"m.text"},"ts":1396125076000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(The fact it's almost entirely CPU bound and not IO bound should be telling)","msgtype":"m.text"},"ts":1396125216000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: thank you. I submitted a bug. Just needed any confirmation.","msgtype":"m.text"},"ts":1396125231000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"gsnedders: does html5lib-tests have tests for document.write()?","msgtype":"m.text"},"ts":1396130685000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: No. But it does have tests for the tokenizer given a specific input, which I think is where these things are.","msgtype":"m.text"},"ts":1396130746000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: i.e., the input stream prior to pre-processing","msgtype":"m.text"},"ts":1396130759000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Right. But normally thatâ€™s the output of the character encoding decoders, which never emit surrogates","msgtype":"m.text"},"ts":1396130813000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Indeed","msgtype":"m.text"},"ts":1396130870000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: There's three justifications for having it there: a) in implementations with scripting support have to cope with this case (as the input stream can through the second entry to the input stream); b) bugs in the encoding layer leading to it; c) the fact these tests were written before there was any definition about the encoding layer in general","msgtype":"m.text"},"ts":1396131129000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1396131157000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(wrt a, if the impl doesn't have scripting support they can just detect lone surrogates in the test and ignore that test)","msgtype":"m.text"},"ts":1396131260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: Do you, in webencodings, work around issue8271?","msgtype":"m.text"},"ts":1396131319000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: no. The actual codecs are Pythonâ€™s","msgtype":"m.text"},"ts":1396131381000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: This is what I thought","msgtype":"m.text"},"ts":1396131389000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hence html5lib-python has to deal with the fact it supports Python versions with broken encodings :)","msgtype":"m.text"},"ts":1396131402000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"python-webencodings is not doing much besides aliases","msgtype":"m.text"},"ts":1396131417000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"So it technically doesn't impl the spec :P","msgtype":"m.text"},"ts":1396131558000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"uh, Presto fails at data:text/html,<script>document.write(\"\\uD83D\");document.write(\"\\uDCA9\")</script>","msgtype":"m.text"},"ts":1396132879000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(not that itâ€™s very relevant anymore)","msgtype":"m.text"},"ts":1396132887000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"What does it do?","msgtype":"m.text"},"ts":1396133147000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Presto gives two empty rectangles (which seem to be the glyph for \"did not find a glyph\")","msgtype":"m.text"},"ts":1396133834000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"data:text/html,<script>document.write(\"\\uD83D\"); document.write(\"\\uDCA9\"); document.write(document.body.innerText.charCodeAt(0).toString(16));</script>","msgtype":"m.text"},"ts":1396133962000,"senderName":"zewt","senderId":"zewt@irc"}
]