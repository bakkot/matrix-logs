[
{"content":{"body":"I wonder what made Twitter show the trailing slash in profile URLs","msgtype":"m.text"},"ts":1433911662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, ping","msgtype":"m.text"},"ts":1433924041000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: here now","msgtype":"m.text"},"ts":1433924727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, hi! can you add someone to the right github group so they can push changes to the SVG spec?","msgtype":"m.text"},"ts":1433924803000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"MikeSmith, github username is boggydigital","msgtype":"m.text"},"ts":1433924813000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"MikeSmith, I think the group name is \"svgwg members\" or something","msgtype":"m.text"},"ts":1433924827000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"cool username","msgtype":"m.text"},"ts":1433924857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks now","msgtype":"m.emote"},"ts":1433924861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam: ok added just now","msgtype":"m.text"},"ts":1433924937000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: cheers!","msgtype":"m.text"},"ts":1433924953000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Domenic: beverloo: abarth: belated happy b-day!","msgtype":"m.text"},"ts":1433926676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"triplets","msgtype":"m.text"},"ts":1433927116000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"speaking of abarth I wonder where or where has our abarth gone these days","msgtype":"m.text"},"ts":1433927143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he seems to not be working on web-platform stuff as much these days","msgtype":"m.text"},"ts":1433927175000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least not publicly","msgtype":"m.text"},"ts":1433927181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the web platform misses him","msgtype":"m.text"},"ts":1433927210000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I'm wondering what level of implementor interest does the current draft at http://w3c.github.io/filesystem-api/ have","msgtype":"m.text"},"ts":1433927373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see that Domenic filed an issue against it a couple weeks ago https://github.com/w3c/filesystem-api/issues/4","msgtype":"m.text"},"ts":1433927436000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I would assume that means it's still a relevant spec with some promise","msgtype":"m.text"},"ts":1433927471000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hi MikeSmith: I’d say parts of it are relevant including figuring out directory upload stuff.","msgtype":"m.text"},"ts":1433927706000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"oh hey arunranga-afk !","msgtype":"m.text"},"ts":1433927795000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"long time no see","msgtype":"m.text"},"ts":1433927804000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh hai MikeSmith :)","msgtype":"m.text"},"ts":1433927820000,"senderName":"arunranga-afk","senderId":"arunranga-afk@irc"},
{"content":{"body":"arunranga-afk: I've not seen so much recent discussion about it but then I'm not on script-coord any more so maybe there's been some there","msgtype":"m.text"},"ts":1433927874000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I hope we can finally get this right and get some implementor momentum behind it","msgtype":"m.text"},"ts":1433927901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hopes","msgtype":"m.emote"},"ts":1433927911000,"senderName":"arunranga-afk","senderId":"arunranga-afk@irc"},
{"content":{"body":"I'm glad you're still on it","msgtype":"m.text"},"ts":1433927925000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, there’s been some public-script-coord discussion about having certain web platform types, including that old tin can, FileList, being converted to Array-types.","msgtype":"m.text"},"ts":1433927990000,"senderName":"arunranga-afk","senderId":"arunranga-afk@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1433928029000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess that's the right place now to have those discussions","msgtype":"m.text"},"ts":1433928046000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://twitter.com/ISOTC211/status/608567032506912768 \"The @W3C process is open|: drafts are published, mailing list available to public, etc... Quite different from @opengeospatial and #ISOTC221\"","msgtype":"m.text"},"ts":1433929213000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in https://developer.apple.com/videos/wwdc/2015/?id=501 Brent Fulgham talks about \"people coming to JavaScript from languages like Swift\" (in the context of saying those people find JS's \"prototype-based syntax has been somewhat less accessible\" to such people","msgtype":"m.text"},"ts":1433929498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://pbs.twimg.com/media/CGvdAOBUIAEQCUE.jpg:large","msgtype":"m.text"},"ts":1433930324000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"MikeSmith: what is open|: supposed to mean?","msgtype":"m.text"},"ts":1433930508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ondras: I don't get why he refers to the friend as crazy in the third panel after just saying he isn't","msgtype":"m.text"},"ts":1433930558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe that tweeter meant to type an explanation point instead of that pipe?","msgtype":"m.text"},"ts":1433931380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aren't they the same key on english keyboards","msgtype":"m.text"},"ts":1433931401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh I guess not","msgtype":"m.text"},"ts":1433931438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: yeah. well, I am not an author, just an twitter->irc proxy","msgtype":"m.text"},"ts":1433932370000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"*a","msgtype":"m.text"},"ts":1433932375000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"inconsistency is funny","msgtype":"m.text"},"ts":1433932523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"philipj: if you want to experiment with lowercasing createAttribute() input, that'd be great...","msgtype":"m.text"},"ts":1433934473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: but currently no browser does that so maybe that's a bridge too far?","msgtype":"m.text"},"ts":1433934485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know, would that be a big win if it would work out?","msgtype":"m.text"},"ts":1433934932000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: I'm not sure how to estimate the risk of it without extra bookkeeping","msgtype":"m.text"},"ts":1433934972000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: you can do atom comparison rather than string comparison","msgtype":"m.text"},"ts":1433934975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: also, seems like Chrome does not always use case-insensitive matching... e.g. removeAttribute does something else?","msgtype":"m.text"},"ts":1433935008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: per comments in the Gecko bug","msgtype":"m.text"},"ts":1433935016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but when you're doing lookup, you're not traversing the attributes and comparing","msgtype":"m.text"},"ts":1433935081000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"sorry, wasn't finishing typing that","msgtype":"m.text"},"ts":1433935092000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'm just guessing that there's a hash map, and that hash map could be case insensitive without storing the strings themselves in a normalized case","msgtype":"m.text"},"ts":1433935119000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"maybe?","msgtype":"m.text"},"ts":1433935122000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1433935137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess the more interesting thing is that not even case-insensitive will give us the same behavior, since Chrome does not share that algorithm across all methods","msgtype":"m.text"},"ts":1433935177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: oh also, createAttribute(\"test:test\") is different in Chrome/Safari vs Firefox/IE & DOM","msgtype":"m.text"},"ts":1433935205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and you're right, removeAttribute() does look different, it lowercases the value if it's an HTML Element and Document","msgtype":"m.text"},"ts":1433935213000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: and so does hasAttribute actually","msgtype":"m.text"},"ts":1433935253000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but not getAttribute()?","msgtype":"m.text"},"ts":1433935264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meh","msgtype":"m.text"},"ts":1433935266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a weird mix of lowercasing and case-insensitive comparison, this is","msgtype":"m.text"},"ts":1433935267000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1433935271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like we should do something consistent at least","msgtype":"m.text"},"ts":1433935282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, getAttribute() seems to set a |shouldIgnoreCase| which is used to do a case-insensitive compare when iterating over the attributes","msgtype":"m.text"},"ts":1433935377000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"so at least Blink doesn't do the hash table thing, I guess there are too few attributes on average for it to be worth it","msgtype":"m.text"},"ts":1433935411000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I agree this is pretty strange and inconsistent","msgtype":"m.text"},"ts":1433935430000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"how closely have you studied Gecko's and IE's black-box behavior? any hunch as to what state would be easiest to reach interop on?","msgtype":"m.text"},"ts":1433935531000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Gecko is problematic since we changed","msgtype":"m.text"},"ts":1433935561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE seemed to be mostly aligned with Chrome/Safari","msgtype":"m.text"},"ts":1433935575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"|shouldIgnoreCase| seems easiest","msgtype":"m.text"},"ts":1433935587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, did you just revert the change or is there now a old-Gecko vs. new-Gecko behavior to consider?","msgtype":"m.text"},"ts":1433935588000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"We haven't reverted the change yet","msgtype":"m.text"},"ts":1433935600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We need to decide on something though before we ship","msgtype":"m.text"},"ts":1433935611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did it reach stable and break stuff?","msgtype":"m.text"},"ts":1433935614000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"No, broke stuff earlier on","msgtype":"m.text"},"ts":1433935628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So now we need to figure out what to do","msgtype":"m.text"},"ts":1433935639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, that's a pretty good indication it's not going to fly. what was the attempted behavior? to lowercase like the spec says?","msgtype":"m.text"},"ts":1433935653000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Yeah, but we did not attempt lowercasing createAttribute()","msgtype":"m.text"},"ts":1433935690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The cases that surfaced would have worked if that lowercased, but there's probably other cases that would break","msgtype":"m.text"},"ts":1433935713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE seems to be more consistently case-insensitive","msgtype":"m.text"},"ts":1433935725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least given https://bugzilla.mozilla.org/show_bug.cgi?id=1165851#c32","msgtype":"m.text"},"ts":1433935738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So making everyone do that seems like the most trivial change","msgtype":"m.text"},"ts":1433935768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The prettiest change would be lowercasing createAttribute()","msgtype":"m.text"},"ts":1433935779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's really no way to measure the risk of lowercasing the input, as there's no way to track how the string returned by e.g. element.attributes[0].localName is used","msgtype":"m.text"},"ts":1433935780000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1433935786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1433935790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but wait, in an HTML document, should element.setAttribute('FOO', 'bar') result in an element with localName 'FOO'?","msgtype":"m.text"},"ts":1433935824000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"tries","msgtype":"m.emote"},"ts":1433935865000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1433935869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"different code path","msgtype":"m.text"},"ts":1433935878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so where should the lowercasing go in the hypothetical store-as-normalized go?","msgtype":"m.text"},"ts":1433935907000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: step 1.5 of https://dom.spec.whatwg.org/#dom-document-createattributelocalname would do that","msgtype":"m.text"},"ts":1433935952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, so the extent of the compat risk is just when you manually create attribute nodes?","msgtype":"m.text"},"ts":1433935992000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"(at which point we might introduce some kind of abstract \"create an attribute\" operation that does all the work)","msgtype":"m.text"},"ts":1433936002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: yeah","msgtype":"m.text"},"ts":1433936004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"afaict that's the only place that does not lowercase","msgtype":"m.text"},"ts":1433936025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, that actually doesn't sound too crazy","msgtype":"m.text"},"ts":1433936056000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"the relevant use counter is https://www.chromestatus.com/metrics/feature/timeline/popularity/111 at ~0.13%","msgtype":"m.text"},"ts":1433936456000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I left a comment in the bug suggesting this alternative path","msgtype":"m.text"},"ts":1433936487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, if the true justification for trying this is performance, perhaps someone should verify that it's really going to be faster to lowercase the input and do case-sensitive compares than to just do case-insensitive compares in the loop?","msgtype":"m.text"},"ts":1433936558000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I don't think perf is a great argument, it would mostly be consistency","msgtype":"m.text"},"ts":1433936789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what was Gecko's old behavior?","msgtype":"m.text"},"ts":1433936806000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: though perhaps perf is important for Selector matching","msgtype":"m.text"},"ts":1433936815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perf is pretty important in this context though, don't want Gecko implementing this new model and then we can't land it in Blink because there happens to be a perf test that regresses","msgtype":"m.text"},"ts":1433936842000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"oh wait, let me see what setAttribute does","msgtype":"m.text"},"ts":1433936882000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'm still a bit confused, clearly setAttribute already does the lowercasing, and that's the point where one should be careful","msgtype":"m.text"},"ts":1433936993000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I think per https://bugzilla.mozilla.org/show_bug.cgi?id=1075702 we might have lowercased for setNamedItem and friends","msgtype":"m.text"},"ts":1433936994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I link to think of all other APIs as aliases for setAttribute(NS) and getAttribute(NS), does that match your thinking?","msgtype":"m.text"},"ts":1433937025000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: but not createAttribute(), which would bem ore logical","msgtype":"m.text"},"ts":1433937027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/link/like/","msgtype":"m.text"},"ts":1433937029000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"not really","msgtype":"m.text"},"ts":1433937042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no? so instead all the web-exposed APIs are entry points into the same underlying algorithm?","msgtype":"m.text"},"ts":1433937086000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, they all share a bunch of logic","msgtype":"m.text"},"ts":1433937111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, anyway, the important point is that it's strange if say setAttribute() has different rules for case-folding than say setting Attr.value","msgtype":"m.text"},"ts":1433937149000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"as long as that's not the case, it's fine","msgtype":"m.text"},"ts":1433937162000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"setAttribute() has different rules from createAttribute()","msgtype":"m.text"},"ts":1433937185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the value is never normalized","msgtype":"m.text"},"ts":1433937191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the problem here is around attribute names","msgtype":"m.text"},"ts":1433937200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry, I was thinking about changing the attribute name, but obviously you can't do that via Attr","msgtype":"m.text"},"ts":1433937252000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"so are setAttribute(), setAttributeNS(), createAttribute() and createAttributeNS() the only entry points for scripts to create attributes, other than via the parser a la innerHTML?","msgtype":"m.text"},"ts":1433937328000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I believe that's correct","msgtype":"m.text"},"ts":1433937436000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, then since the parser already normalizes the case, then trying to close that last hole that is createAttribute() does sound pretty good","msgtype":"m.text"},"ts":1433937480000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"however, this does mean that for setAttributeNS(namespace, 'FOO', value) the resulting Attr would have localName 'FOO', correct? and getAttribute('FOO') would fail to return that value, where it would currently","msgtype":"m.text"},"ts":1433937586000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: in Gecko that has always failed to return a value","msgtype":"m.text"},"ts":1433937623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: not sure about other browsers","msgtype":"m.text"},"ts":1433937632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What Gecko did previously as far as I can tell is normalize case during setAttributeNode / setNamedItem... Ms2ger?","msgtype":"m.text"},"ts":1433937678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that does work in Blink currently","msgtype":"m.text"},"ts":1433937697000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I can look if you find me the bug that changed it...","msgtype":"m.text"},"ts":1433937714000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"philipj: yeah, and removeAttribute() does not","msgtype":"m.text"},"ts":1433937716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://bugzilla.mozilla.org/show_bug.cgi?id=1075702","msgtype":"m.text"},"ts":1433937727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: same in IE11","msgtype":"m.text"},"ts":1433937730000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"don't know, given that it never worked in Gecko it could work out","msgtype":"m.text"},"ts":1433937763000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I'm not worried about that though, seems like the smallest of all risks","msgtype":"m.text"},"ts":1433937776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what kind of code are you most worried about breaking?","msgtype":"m.text"},"ts":1433937810000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: attr.name == \"FOO\"","msgtype":"m.text"},"ts":1433937838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where \"FOO\" comes from document.createAttribute(\"FOO\")?","msgtype":"m.text"},"ts":1433937864000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1433937869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, would it be of any help to measure how often lowercasing the name in createAttribute() results in a different string?","msgtype":"m.text"},"ts":1433937904000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"as an upper limit of breakage","msgtype":"m.text"},"ts":1433937914000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"it would be a few months to get data, so if you're in a hurry it won't help you","msgtype":"m.text"},"ts":1433937940000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Maybe. I think given what Gecko did before lowercasing is probably sound","msgtype":"m.text"},"ts":1433937947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since the only code that would break is code that checked the name before appending the attribute","msgtype":"m.text"},"ts":1433937964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since appending it lowercased the name in Gecko","msgtype":"m.text"},"ts":1433937970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, so it was setAttribute that would change the case?","msgtype":"m.text"},"ts":1433938290000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"one difference if doing it in createAttribute is that you don't yet know if it'll be attached to an HTML element, so the conditions won't be exactly the same","msgtype":"m.text"},"ts":1433938496000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but that's probably fine","msgtype":"m.text"},"ts":1433938499000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"well, keep me posted on what you want to try in Gecko and if you change the spec for document.createAttribute(), in which case I'll add a use counter to gague if that'll be safe","msgtype":"m.text"},"ts":1433938575000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: setAttribute != setAttributeNode","msgtype":"m.text"},"ts":1433938589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I'll suggest to bz that we lowercase for createAttribute(), if he comes online again","msgtype":"m.text"},"ts":1433938625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: uh, yes, I mean setAttributeNode(document.createAttribute('FOO'))","msgtype":"m.text"},"ts":1433938632000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: I just now reverted that change I made to github/xrefs that added the IETF Origin spec","msgtype":"m.text"},"ts":1433939165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1433939181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=1165851#c36","msgtype":"m.text"},"ts":1433939835000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Where would be the best place for someone to make a suggestion like extending RegExp to include a RegExp.escape function ala http://discourse.specifiction.org/t/regexp-escape-str/832","msgtype":"m.text"},"ts":1433940926000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"It would seem useful to provide some direction, like contact so-and-so or write an email to such-list.","msgtype":"m.text"},"ts":1433940959000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"es-discuss","msgtype":"m.text"},"ts":1433940966000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Thanks, Ms2ger!","msgtype":"m.text"},"ts":1433942329000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: i think i dont get it, why would it return null?","msgtype":"m.text"},"ts":1433942397000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: read step 2 of https://url.spec.whatwg.org/#dom-urlutils-origin","msgtype":"m.text"},"ts":1433942479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohhh","msgtype":"m.text"},"ts":1433942518000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"so you serialize the GUID, which is not a scheme, host, port tuple","msgtype":"m.text"},"ts":1433942545000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1433942560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: I filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=28788 though to get HTML a little clearer on this","msgtype":"m.text"},"ts":1433942572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is the GUID ever public then?","msgtype":"m.text"},"ts":1433942583000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: it should just say \"if origin is an opaque identifier, return 'null'\"","msgtype":"m.text"},"ts":1433942591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: nope","msgtype":"m.text"},"ts":1433942596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: neither is the alias concept","msgtype":"m.text"},"ts":1433942603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what're aliases?","msgtype":"m.text"},"ts":1433942625000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"I havent read about those anywhere","msgtype":"m.text"},"ts":1433942630000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: read HTML's definition of what an origin can be","msgtype":"m.text"},"ts":1433942689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: you encounter alias in the DOM, with <iframe> and such","msgtype":"m.text"},"ts":1433942705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"huh, wow","msgtype":"m.text"},"ts":1433942730000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"there's so much we still have to get into jsdom :/","msgtype":"m.text"},"ts":1433942748000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Thanks, annevk","msgtype":"m.text"},"ts":1433942857000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: FWIW you're doing awesome work with jsdom, there's always more but keep it up :)","msgtype":"m.text"},"ts":1433946310000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: thanks!","msgtype":"m.text"},"ts":1433946562000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"mathiasbynens: thank you for that ticket. Good, someone solved this five years ago.","msgtype":"m.text"},"ts":1433946996000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: well, not really, it’s still not being standardized","msgtype":"m.text"},"ts":1433947017000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"baby steps though :P","msgtype":"m.text"},"ts":1433947021000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"“The tree of features must be refreshed from time to time with the blood of polyfills and new threads.”","msgtype":"m.text"},"ts":1433947062000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1433947328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: have you checked whether input methods in common use in Hong Kong and Taiwan produce astral characters and not PUA characters these days for the astral characters in Big5?","msgtype":"m.text"},"ts":1433948200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1433948247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it appears that Windows 8.1 comes with font coverage for the whole of Encoding Standard Big5 but Ubuntu does not (at least not by default in an en-US install)","msgtype":"m.text"},"ts":1433948249000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"philipj might have","msgtype":"m.text"},"ts":1433948253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. that's a possible source of risk, then","msgtype":"m.text"},"ts":1433948267000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"any amazon employees here?","msgtype":"m.text"},"ts":1433948513000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: hey!","msgtype":"m.text"},"ts":1433948530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: so about web components","msgtype":"m.text"},"ts":1433948536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, I pinged yesterday","msgtype":"m.text"},"ts":1433948549000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think the only thing that was discussed is instead of an imperative API move back to the slots proposal","msgtype":"m.text"},"ts":1433948561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(sorry, been offline/online unusual times because of uncle-duties)","msgtype":"m.text"},"ts":1433948574000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: since everyone but Google was okay with that, and now Google is too","msgtype":"m.text"},"ts":1433948576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1433948600000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but there isn't really a proper slots proposal yet, right?","msgtype":"m.text"},"ts":1433948610000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I mean something which truly explain what would be spec'ed","msgtype":"m.text"},"ts":1433948622000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"including when distribution happens (but I assume that it just sync)","msgtype":"m.text"},"ts":1433948655000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/it/is/","msgtype":"m.text"},"ts":1433948662000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Slots-Proposal.md","msgtype":"m.text"},"ts":1433948805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, new API that returns a NodeList...","msgtype":"m.text"},"ts":1433948912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah...","msgtype":"m.text"},"ts":1433949385000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"doesn't explain when distribution happens","msgtype":"m.text"},"ts":1433949392000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: right, that's still left up to the UA","msgtype":"m.text"},"ts":1433949424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have somewhat mixed feelings about this...","msgtype":"m.text"},"ts":1433949467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I didn't check any IMEs","msgtype":"m.text"},"ts":1433950910000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I would guess that the most common ones are Google pinyin and Sogou pinyin","msgtype":"m.text"},"ts":1433950997000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"gotta go","msgtype":"m.emote"},"ts":1433951002000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk, smaug____: going to hack on this with rniwa today. Hopefully, will flesh this out a bit more.","msgtype":"m.text"},"ts":1433956444000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: cool","msgtype":"m.text"},"ts":1433958917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: on NodeList, please patch it up the way you like it","msgtype":"m.text"},"ts":1433959032000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I was just copying stuff from the current spec","msgtype":"m.text"},"ts":1433959044000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1433959071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ping","msgtype":"m.text"},"ts":1433970172000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hey, winding down for the night, but can pick up whatever in the morning","msgtype":"m.text"},"ts":1433970302000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"np, I just realized I have to run in a minute as well","msgtype":"m.text"},"ts":1433970316000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"sorry for the late ping","msgtype":"m.text"},"ts":1433970321000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: Re the simpsons cartoon, that's because it's what Troy McClure said in the episode (modulo JS stuff, obvs)","msgtype":"m.text"},"ts":1433971660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]