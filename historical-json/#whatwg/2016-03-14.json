[
{"content":{"body":"FWIW, I informed the IETF of our forking of WebSocket: https://mailarchive.ietf.org/arch/msg/hybi/2OIyLSs5JjDfiFB_I_HGoSinsqc","msgtype":"m.text"},"ts":1457944344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reflecting as URL seems to have more issues. returns resolved URL when the attribute is absent... <a>.href seems to be better defined. looks like there might be an issue with blob: URLs also. annevk thoughts? should reflect as URL reuse <a>.href machinery?","msgtype":"m.text"},"ts":1457949505000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think technically reflecting a URL requires an internal slot for the URL","msgtype":"m.text"},"ts":1457949558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: this is a problem for most of the reflecting stuff though, that they require an internal slot","msgtype":"m.text"},"ts":1457949577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3994 - difference between gecko and chromium","msgtype":"m.text"},"ts":1457949605000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I filed a bug on IDL to automatically get internal slots for attributes, unless specified otherwise, but you know how well IDL is maintained","msgtype":"m.text"},"ts":1457949610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, i think i'll fix some low-hanging fruit today with resolve as url and revisit to do it \"properly\" some other day","msgtype":"m.text"},"ts":1457949784000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, I think we should fix IDL for the proper fix","msgtype":"m.text"},"ts":1457950015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would be nice to standardize [Reflect=URL] or some such too","msgtype":"m.text"},"ts":1457950060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1457950066000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh the spec does handle absent attribute actually","msgtype":"m.text"},"ts":1457950117000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is there any attribute that takes a URL and has a default value? I can't find any","msgtype":"m.text"},"ts":1457950390000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Seems unlikely","msgtype":"m.text"},"ts":1457950837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't know for sure though","msgtype":"m.text"},"ts":1457950850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: can the web-platform-tests server be used to transmit a response early?","msgtype":"m.text"},"ts":1457952537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What does that mean?","msgtype":"m.text"},"ts":1457952587000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: transmit a response before the entire request is in","msgtype":"m.text"},"ts":1457952606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1457952611000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"See https://github.com/whatwg/fetch/issues/229 for context","msgtype":"m.text"},"ts":1457952622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know, but I wouldn't be surprised if it couldn't","msgtype":"m.text"},"ts":1457952628000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I doubt it","msgtype":"m.text"},"ts":1457952700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: ping","msgtype":"m.text"},"ts":1457955677000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"glazou: pong","msgtype":"m.text"},"ts":1457955683000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1457955686000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"I have a question about DOM spec","msgtype":"m.text"},"ts":1457955698000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#dom-range-clonecontents is supposed to clone a Range but returns a DocumentFragment :-)","msgtype":"m.text"},"ts":1457955729000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"because of https://dom.spec.whatwg.org/#concept-range-clone that itself returns a DocumentFragment","msgtype":"m.text"},"ts":1457955745000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"  [NewObject] DocumentFragment cloneContents();","msgtype":"m.text"},"ts":1457955876000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Why would it return a Range?","msgtype":"m.text"},"ts":1457955885000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger was faster than me","msgtype":"m.text"},"ts":1457955889000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1457955890000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I really need to stop coffee and go back to beer","msgtype":"m.text"},"ts":1457955902000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"glazou: confused with [NewObject] Range cloneRange(); ?","msgtype":"m.text"},"ts":1457955902000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Now zcorpan beat me :)","msgtype":"m.text"},"ts":1457955911000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: I need vacation, that's all; nm and sorry for annoyance","msgtype":"m.text"},"ts":1457955925000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1457955976000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah probably a confusion because of \"clone\" ; a \"clone\" operation that does not return the same object type... hmmm...","msgtype":"m.text"},"ts":1457956005000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"it is confusing, agreed","msgtype":"m.text"},"ts":1457956059000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the concept should maybe be called \"clone the contents\"","msgtype":"m.text"},"ts":1457956075000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can PR","msgtype":"m.emote"},"ts":1457956126000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yes that would help","msgtype":"m.text"},"ts":1457956138000,"senderName":"glazou","senderId":"glazou@irc"},
{"content":{"body":"caitp, littledan__  : hey, I'd love your opinion on https://github.com/nodejs/node/issues/5691#issuecomment-196275629","msgtype":"m.text"},"ts":1457956229000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: as far as I can tell from api.cc, those api methods just call into the self hosted promise implementation anyways","msgtype":"m.text"},"ts":1457960696000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so I'm not sure why there would be any difference between them, at least on ToT","msgtype":"m.text"},"ts":1457960704000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so, Promise::Resolver::Resolve() will enqueue a microtask, so long as the promise wasn't already resolved","msgtype":"m.text"},"ts":1457961050000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1457961130000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25529 might be of interest (about cloning)","msgtype":"m.text"},"ts":1457961214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19962?","msgtype":"m.text"},"ts":1457962070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I guess we could add those, given that Gecko has now innerText too and insertAdjacentHTML()","msgtype":"m.text"},"ts":1457962499000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hsivonen might have some comment","msgtype":"m.text"},"ts":1457962506000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(is he back?)","msgtype":"m.text"},"ts":1457962510000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we need a bot to file browser engine bugs","msgtype":"m.text"},"ts":1457963413000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I didn't know he was gone","msgtype":"m.text"},"ts":1457963489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Looks like still away this week","msgtype":"m.text"},"ts":1457963599000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ms2ger: FYI: https://github.com/w3c/DOM-Parsing/issues/4","msgtype":"m.text"},"ts":1457966725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: harder to spec than I thought","msgtype":"m.text"},"ts":1457966742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj_: I found a bug in Blink, it says insertAdjacentElement returns \"Element\" in your IDL, but it's actually \"Element?\" per impl (and now spec)","msgtype":"m.text"},"ts":1457966777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't fix issues with that spec when I edited it, not going to start now :)","msgtype":"m.text"},"ts":1457966802000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmmm... http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3998 the spec says absent.href should return http://example.org/ afaict but webkit/chromium/gecko don't do that","msgtype":"m.text"},"ts":1457966823000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can someone check Edge?","msgtype":"m.text"},"ts":1457966842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: you didn't write that part? I thought you did","msgtype":"m.text"},"ts":1457966861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: anyway, never mind then","msgtype":"m.text"},"ts":1457966866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I probably did write it","msgtype":"m.text"},"ts":1457966872000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I should probably fold that whole spec into DOM at some point","msgtype":"m.text"},"ts":1457966883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No time to maintain, though","msgtype":"m.text"},"ts":1457966890000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Of course it's in licensing hell now","msgtype":"m.text"},"ts":1457966912000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: hmm yeah, I guess the additions are","msgtype":"m.text"},"ts":1457966951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1457966957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was about to add CDATASection back but then figured out he isn't 30 yet","msgtype":"m.emote"},"ts":1457967227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol annevk ","msgtype":"m.emote"},"ts":1457967390000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"philipj_: still not excited to remove CDATASection? still have a few months :-) https://www.w3.org/Bugs/Public/show_bug.cgi?id=27386","msgtype":"m.text"},"ts":1457967553000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/113 0.0048%","msgtype":"m.text"},"ts":1457967659000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So low and yet too high","msgtype":"m.text"},"ts":1457970719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm currently writing a white paper on the evolution of HTTP, and am wondering what i can include in there","msgtype":"m.text"},"ts":1457971440000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: that's a very generic question, anything specific?","msgtype":"m.text"},"ts":1457971595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm currently considering how every subsequent versions is trying to fix or improve upon previous versions","msgtype":"m.text"},"ts":1457971703000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"like how HTTP/0.9 is a really simple protocol designed to transfer HTML documents as-is without any metadata attached to responses and requests","msgtype":"m.text"},"ts":1457971739000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: I guess you could say that HTTP/1.0 obviated the need for <plaintext>","msgtype":"m.text"},"ts":1457971747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but we still have it because HTTP/0.9 was a real thing","msgtype":"m.text"},"ts":1457971786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: obviated?","msgtype":"m.text"},"ts":1457971789000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"as in, it assumes plaintext is used?","msgtype":"m.text"},"ts":1457971797000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: removed the need for","msgtype":"m.text"},"ts":1457971800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"KiChjang: HTTP/0.9 did content sniffing, afaik","msgtype":"m.text"},"ts":1457971819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: perhaps you know what we should do with https://www.w3.org/Bugs/Public/show_bug.cgi?id=28097?","msgtype":"m.text"},"ts":1457973031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I thought your custom element work resulted in an abstract operation for creating all elements","msgtype":"m.text"},"ts":1457973082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: which could then have some kind of \"element created steps\" associated with it, if specifications needed a hook","msgtype":"m.text"},"ts":1457973107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess it could. What does that help with though?","msgtype":"m.text"},"ts":1457973788000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: looking through HTML's existing \"when the element is created\" it's basically just specifying what the UA-callable-only constructor does","msgtype":"m.text"},"ts":1457973817000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think the main problem Hixie_ had was with attributes, where browsers assume that elements created by the parser are created with attributes, so the question I guess is what happens for cloning","msgtype":"m.text"},"ts":1457973937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://w3c.github.io/webcomponents/spec/custom/#clone-modifications-to-dom should hopefully cover it?","msgtype":"m.text"},"ts":1457973962000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't immediately know what the observables would be though","msgtype":"m.text"},"ts":1457973969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking","msgtype":"m.text"},"ts":1457974008000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: yeah, shouldn't typeExtension be an optional argument as well?","msgtype":"m.text"},"ts":1457974034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: my intention was you always supply null. I guess I messed that up in the cloning section.","msgtype":"m.text"},"ts":1457974062000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"philipj_: FWIW, I might actually add CDATASection back before August","msgtype":"m.text"},"ts":1457974390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1457974399000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wish someone would make the parser change","msgtype":"m.text"},"ts":1457974405000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"do you think it would make sense for browserland SVG to be specified in a living standard? all vendors seem to differ in at least a few ways from the snapshot editions","msgtype":"m.text"},"ts":1457974413000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"It seems plausible that using Text nodes would work","msgtype":"m.text"},"ts":1457974416000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"philipj_: ooh, maybe not, I was thinking it was required for Shadow DOM, but it's not, whatever Shadow DOM adds to Text ends up automatically on CDATASection","msgtype":"m.text"},"ts":1457974440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: I think it would make sense for everything to be specified in a living standard. But, it's up to the editors who have the bandwidth to work on those technologies, and I don't think the SVGWG is that excited about doing so.","msgtype":"m.text"},"ts":1457974459000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think philipj_ tried and it broke tests at least, e.g., some serialization expectations","msgtype":"m.text"},"ts":1457974464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: in the meantime we have https://html.spec.whatwg.org/#svg-0","msgtype":"m.text"},"ts":1457974478000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: yeah, i meant try for real","msgtype":"m.text"},"ts":1457974488000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"A long time ago (when vendor prefixes were still in fashion), I implemented mozSerializeAsCDATA","msgtype":"m.text"},"ts":1457974496000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Never landed)","msgtype":"m.text"},"ts":1457974507000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I have pondered about defining SVG, but it's quite a bit of work","msgtype":"m.text"},"ts":1457974530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As is it's quite a mess though, with nothing really well defined 😟","msgtype":"m.text"},"ts":1457974548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just meant some basic ways, was trying to figure out why we add @@iterator to SVGxxList interfaces, blink and geck give it a \"length\" attribute, but apparently webkit doesn't","msgtype":"m.text"},"ts":1457974564000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"gecko*","msgtype":"m.text"},"ts":1457974571000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there are probably other things","msgtype":"m.text"},"ts":1457974580000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: I was thinking basics too, e.g., how <svg:script> works","msgtype":"m.text"},"ts":1457974598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ooh caitp you're setting yourself up for a PhiStucK email with that \"no feature dashboard\" entry. Just wait for it...","msgtype":"m.text"},"ts":1457974604000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there are enough chromestatus pieces for real features that people consciously care about :x","msgtype":"m.text"},"ts":1457974643000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: at some point the complex stuff is hopefully all abstracted through CSS, and then the remaining complex stuff can be abstracted through HTML","msgtype":"m.text"},"ts":1457974663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: only if joe doesn't beat phistuck to it...","msgtype":"m.text"},"ts":1457975346000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Domenic: hayato: I think tomorrow I'm going to try to add attachShadow(), ShadowRoot and the ShadowRootOrDocument mixin to DOM, and update the various algorithms that need to account for them","msgtype":"m.text"},"ts":1457975401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: hayato: and then as exercise I'll try to update Fullscreen, if that's feasible without the flat tree","msgtype":"m.text"},"ts":1457975475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds ambitious, awesome!","msgtype":"m.text"},"ts":1457975503000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just the basic building blocks, but yeah, might end up being more than anticipated, we'll see","msgtype":"m.text"},"ts":1457975550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The alternative is probably working on outstanding Fullscreen/Storage issues","msgtype":"m.text"},"ts":1457975593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: https://github.com/whatwg/encoding/issues/18, do it?","msgtype":"m.text"},"ts":1457977846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep.","msgtype":"m.text"},"ts":1457978300000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: so exciting to get rid of that","msgtype":"m.text"},"ts":1457978864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: makes the constructor argument are a bit useless, but okay","msgtype":"m.text"},"ts":1457978888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/are//","msgtype":"m.text"},"ts":1457978897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can't you just remove the constructor argument?","msgtype":"m.text"},"ts":1457979267000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess we could, though it's probably impossible to introduce a different argument at a later stage","msgtype":"m.text"},"ts":1457979345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but I can make sure that doesn't happen by leaving some kind of note in the source","msgtype":"m.text"},"ts":1457979360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that makes sense","msgtype":"m.text"},"ts":1457979373000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"can also remove the encoding internal slot","msgtype":"m.text"},"ts":1457979385000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Actually, should probably keep the first argument, so that it keeps throwing for invalid values","msgtype":"m.text"},"ts":1457979414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, can simplify a couple of things","msgtype":"m.text"},"ts":1457979503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why though","msgtype":"m.text"},"ts":1457979513000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Next big change after this will probably be streams integration","msgtype":"m.text"},"ts":1457979517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't throw just ignore it","msgtype":"m.text"},"ts":1457979519000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I don't think anything else on the platform validates an argument it does nothing with.","msgtype":"m.text"},"ts":1457979544000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess that's true, I'm mostly worried what happens if we want to add that argument back, but maybe that's not going to be a thing","msgtype":"m.text"},"ts":1457979568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I don't think it will be. It'll all be fine...","msgtype":"m.text"},"ts":1457979598000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what's HTTPbis?","msgtype":"m.text"},"ts":1457979940000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: the set of RFCs that obsoleted RFC 2616","msgtype":"m.text"},"ts":1457979987000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"KiChjang: the revision to HTTP/1.1 specs","msgtype":"m.text"},"ts":1457979992000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i thought RFC2616 was the latest HTTP/1.1 spec","msgtype":"m.text"},"ts":1457980026000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"so there are others","msgtype":"m.text"},"ts":1457980030000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: RFC 7230–7235","msgtype":"m.text"},"ts":1457980072000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, ah, so SPDY stuff?","msgtype":"m.text"},"ts":1457980084000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: no","msgtype":"m.text"},"ts":1457980119000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"KiChjang: this is a simple revision of the HTTP/1.1 spec","msgtype":"m.text"},"ts":1457980127000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"KiChjang: SPDY became HTTP/2.0 which is RFC 7540","msgtype":"m.text"},"ts":1457980148000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is HTTP/2 stateful?","msgtype":"m.text"},"ts":1457980805000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"it looks like it is, since it has this concept of a stream","msgtype":"m.text"},"ts":1457980813000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"annevk: finally looked at https://www.w3.org/Bugs/Public/show_bug.cgi?id=28097 but couldn't immediately understand what it even is about. Why any of this stuff has anything to do with host-inclusiveness ?","msgtype":"m.text"},"ts":1457981636000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, hmm, is this about the cycle?","msgtype":"m.text"},"ts":1457981703000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"which isn't there...","msgtype":"m.text"},"ts":1457981806000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, don't really understand the bug","msgtype":"m.text"},"ts":1457981813000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"pre-insertion validity check shouldn't probably use \"host-including inclusive ancestor \"","msgtype":"m.text"},"ts":1457981894000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"KiChjang: what sort of statefulness do you mean?","msgtype":"m.text"},"ts":1457990379000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"KiChjang: there's no statefulness exposed at the request/response layer beyond what HTTP/1.1 has as the messaging semantics are unchanged","msgtype":"m.text"},"ts":1457990408000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: where did \"Document Object Model\" come from for https://storage.spec.whatwg.org/#normative ?","msgtype":"m.text"},"ts":1457992106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: nevermind, I guess that hasn't been recompiled in a long time","msgtype":"m.text"},"ts":1457992123000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Yeah, it used to be that SpecRef had the W3C version squatting on \"DOM\", and Shepherd named their ref (which points to the WHATWG copy) dom-ls, so you reffed that.  I've since fixed things - the Shepherd ref is now just \"DOM\", and Bikeshed has an explicit fixup for the squatted WHATWG specs, so biblio-reffing \"DOM\" will grab all the right data from","msgtype":"m.text"},"ts":1457992269000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SpecRef's WHATWG-DOM reference.","msgtype":"m.text"},"ts":1457992269000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but it will still show [WHATWG-DOM] as the name, IIRC? Kind of sad.","msgtype":"m.text"},"ts":1457992301000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's the result of me applying a lowest-cost fix, until SpecRef fixes itself properly.","msgtype":"m.text"},"ts":1457992322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I have little confidence in SpecRef fixes sadly","msgtype":"m.text"},"ts":1457992339000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Eh, I believe he'll fix it eventually.","msgtype":"m.text"},"ts":1457992355000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In the meantime, it only shows as [WHATWG-DOM] in the biblio index; any explicit `[[DOM]]` tags in your source stay that way.","msgtype":"m.text"},"ts":1457992382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which honestly just seems like a bug? A link text [DOM] going to a [WHATWG-DOM] in the index?","msgtype":"m.text"},"ts":1457992471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's like, no, I clicked on [DOM], not [WHATWG-DOM]... now I need to scroll up to find where [DOM] is defined... argh it isn't there, where did it go?","msgtype":"m.text"},"ts":1457992499000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like I said, lowest-effort fix.  Removing this when SpecRef is fixed will be a 2-line deletion commit.","msgtype":"m.text"},"ts":1457993134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Fwiw, I'm happy to accept a PR in Specref that fixes the problem. I just don't have time to look into it myself right now.","msgtype":"m.text"},"ts":1457997276000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I agree that this is a problem and want to fix it.","msgtype":"m.text"},"ts":1457997425000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But I also want to make sure it doesn't get overwritten with the next update and that we don't loose references to previous specs in the process.","msgtype":"m.text"},"ts":1457997487000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: is anyone working on new custom elements API in Blink?","msgtype":"m.text"},"ts":1457999150000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: kochi is","msgtype":"m.text"},"ts":1457999348000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: cool. is there an issue that I can follow?","msgtype":"m.text"},"ts":1457999367000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I will ask him","msgtype":"m.text"},"ts":1457999475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks","msgtype":"m.text"},"ts":1457999484000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: between late March and early April, which one do you prefer for a telecon?","msgtype":"m.text"},"ts":1457999500000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: probably early April; TC39 is the last week of March.","msgtype":"m.text"},"ts":1457999525000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: okay","msgtype":"m.text"},"ts":1457999531000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: alright, I just asked for one on public-webapps","msgtype":"m.text"},"ts":1457999713000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: btw, we really appreciate your work for the spec :)","msgtype":"m.text"},"ts":1457999720000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: so are you guys going to be fine with having an explicit method for upgrading custom elements?","msgtype":"m.text"},"ts":1457999770000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: and not upgrading any elements by default when there is no definition at the time of element construction?","msgtype":"m.text"},"ts":1457999796000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: or do you still want the HTML parser to set the flag for auto-upgrades?","msgtype":"m.text"},"ts":1457999809000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah we're having a meeting tomorrow to make sure everyone is on the same page but it looks like maybe a move to in-document-only upgrades is on the table","msgtype":"m.text"},"ts":1457999821000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"like you originally proposed","msgtype":"m.text"},"ts":1457999851000,"senderName":"Domenic","senderId":"Domenic@irc"}
]