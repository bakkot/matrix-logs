[
{"content":{"body":"Hixie: here now","msgtype":"m.text"},"ts":1343953046000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least I don't have to take responsibility for the CSS \"dpi\" unit","msgtype":"m.text"},"ts":1343955011000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Who *is* responsible for that?","msgtype":"m.text"},"ts":1343955068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't know","msgtype":"m.text"},"ts":1343955076000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"can we not implement it and then take it out of the spec?","msgtype":"m.text"},"ts":1343955083000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ddpx is a dumb name but at least it makes some sense","msgtype":"m.text"},"ts":1343955114000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"dppx. ^_^","msgtype":"m.text"},"ts":1343955166000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I reset my case","msgtype":"m.text"},"ts":1343955182000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I suspect it falls out of the image-resolution property, which is specced because CSS printers implemented it unprefixed.","msgtype":"m.text"},"ts":1343955195000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm just gonna define \"x\" to be a synonym for \"dppx\".","msgtype":"m.text"},"ts":1343955221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And we'll see who screams.","msgtype":"m.text"},"ts":1343955230000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, roc, while you're here, I had a question about your comments on element() to Birtles.","msgtype":"m.text"},"ts":1343955319000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In particular, what do you see as clashing about the use of element() as <image> and as a more generic element reference?","msgtype":"m.text"},"ts":1343955352000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mask:url(foo.svg#abc)","msgtype":"m.text"},"ts":1343955426000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"er wait","msgtype":"m.text"},"ts":1343955439000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's not what you were asking about","msgtype":"m.text"},"ts":1343955444000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"mask:element(#abc)","msgtype":"m.text"},"ts":1343955455000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and suppose the element with the mask style is not an ancestor of the #abc element","msgtype":"m.text"},"ts":1343955509000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"as currently specced I think that matches according to CSS Images and does not match according to the SVG proposal","msgtype":"m.text"},"ts":1343955533000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Ah, I see.  So it's valid as an <image>, but not as a mask reference.","msgtype":"m.text"},"ts":1343955561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, so then we probably do want a separate function for \"refer to an element\" that doesn't interpret it as an image.","msgtype":"m.text"},"ts":1343955580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like select() or something.","msgtype":"m.text"},"ts":1343955589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or","msgtype":"m.text"},"ts":1343955592000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1343955624000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yes, that's probably for the best","msgtype":"m.text"},"ts":1343955632000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"descendant() might be a better name","msgtype":"m.text"},"ts":1343955649000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"maybe we're not talking about the same thing","msgtype":"m.text"},"ts":1343955672000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I think basically you want a version of element() that matches only within the subtree of the styled element. Possibly that could be achieved with extended selector syntax,  but a different CSS value is probably better","msgtype":"m.text"},"ts":1343955702000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that could be a CSS image value and then SVG could just use it","msgtype":"m.text"},"ts":1343955719000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Or, wait, it's actually not a problem I think?","msgtype":"m.text"},"ts":1343955743000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if element(#abc) points to a non-child, or a child that's not a <mask>, it's an <image>.  If it points to a <mask> child, it's a mask reference.","msgtype":"m.text"},"ts":1343955780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The two should be mutually exclusive, since <mask> doesn't provide a paint source.","msgtype":"m.text"},"ts":1343955797000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that seems fragile","msgtype":"m.text"},"ts":1343955936000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Potentially, yeah.","msgtype":"m.text"},"ts":1343955979000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, back to select().  If you allow the same fragment thing that document.find() does, it would be easy.  \"mask: select(> .foo);\"","msgtype":"m.text"},"ts":1343956024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: Any opinion on what the interaction between image-set(\"foo\" 2x) and 'image-resolution' should be?","msgtype":"m.text"},"ts":1343957057000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: Right now, I have image-set() defined as setting the \"intrinsic resolution\" of the image, but that doesn't play well with the current initial value of \"image-resolution\".","msgtype":"m.text"},"ts":1343957367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It might make sense to change the initial value to \"auto\", which means \"1x, unless CSS says otherwise\".","msgtype":"m.text"},"ts":1343957432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: pong","msgtype":"m.text"},"ts":1343974939000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: your input on this thread would be helpful: http://lists.w3.org/Archives/Public/public-whatwg-archive/2012Aug/0004.html","msgtype":"m.text"},"ts":1343975400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So if window A opens window B opens window C and B closes before any script can run in C, how do I get a reference from C to A?","msgtype":"m.text"},"ts":1344002513000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ugh, \"please attach a minimal testcase\" -> a zip file containing for example jQuery :/","msgtype":"m.text"},"ts":1344003526000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: to too many people, jQuery is \"default\" :|","msgtype":"m.text"},"ts":1344003614000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: You know it isn't possible to write js without jQuery, right?","msgtype":"m.text"},"ts":1344003633000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: So... why does the spec use a combination of AmE and BrE?","msgtype":"m.text"},"ts":1344007446000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"It should be using en-US","msgtype":"m.text"},"ts":1344007559000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: 'organisation' is not en-US","msgtype":"m.text"},"ts":1344007892000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"-s- seems to be used only for autocomplete, all other occurrences use -z-","msgtype":"m.text"},"ts":1344007982000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: And that was the precise instance I was looking at :)","msgtype":"m.text"},"ts":1344008031000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"It's the only you could be looking at! ;)","msgtype":"m.text"},"ts":1344008046000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: At least I'm not seeing things!","msgtype":"m.text"},"ts":1344008059000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"is glad he svn up'd the repo before claiming there was no such spelling in the spec","msgtype":"m.emote"},"ts":1344008096000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1344008117000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: purely an oversight, please file bugs (if it's a keyword to be implemented, mark the bug \"blocker\")","msgtype":"m.text"},"ts":1344008341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or send mail","msgtype":"m.text"},"ts":1344008346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1344008351000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"should all be en-US","msgtype":"m.text"},"ts":1344008366000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem is that i speak en-GB and keep forgetting which is which","msgtype":"m.text"},"ts":1344008387000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"due to spending too much time in the US","msgtype":"m.text"},"ts":1344008397000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  I thought you spoke en-HIXIE?","msgtype":"m.text"},"ts":1344008466000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"or was that someone else here?","msgtype":"m.text"},"ts":1344008474000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"en-GB-x-Hixie :-)","msgtype":"m.text"},"ts":1344008478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's it! A custom dialect of english","msgtype":"m.text"},"ts":1344008497000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"Good morning dglazkov","msgtype":"m.text"},"ts":1344008501000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1344008502000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"Sure would be weird if someone else here spoke en-GB-x-Hixie","msgtype":"m.text"},"ts":1344008514000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1344008521000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Bug 18482","msgtype":"m.text"},"ts":1344008556000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"We request data from a servlet using ajax and parse the data as JSON, but when the JSON size is large, the UI hangs, can someone suggest any solution?","msgtype":"m.text"},"ts":1344008776000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"micheil: 'Tis an idiolect, indeed.","msgtype":"m.text"},"ts":1344008915000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"heh, I remember there being a similar discussion a few months back..","msgtype":"m.text"},"ts":1344008954000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"niloy: you may wish to ask that in, say, ##javascript (pretty sure these guys are doing spec stuff)","msgtype":"m.text"},"ts":1344009015000,"senderName":"micheil","senderId":"micheil@irc"},
{"content":{"body":"timeless: http://my.opera.com/desktopteam/blog/2012/08/03/summer-core-update << has updated websocket now. -- So then /that/ blocker for irccloud is removed at least :P","msgtype":"m.text"},"ts":1344010024000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Any examples of some popular super-early polyfills damaging out ability to change a feature?","msgtype":"m.text"},"ts":1344015124000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where are you going to use it? :]","msgtype":"m.text"},"ts":1344015308000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"(I don't know any examples, for the record)","msgtype":"m.text"},"ts":1344015331000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"var indexedbDB = window.indexedDB || window.webkitIndexedDB || window.moz .....?","msgtype":"m.text"},"ts":1344015338000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: What about it?","msgtype":"m.text"},"ts":1344015362000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=770844","msgtype":"m.text"},"ts":1344015368000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, that's a different type of issue.","msgtype":"m.text"},"ts":1344015499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#event-type-resize really the most up-to-date documentation of the resize event?","msgtype":"m.text"},"ts":1344019122000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Probably","msgtype":"m.text"},"ts":1344019297000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sadface","msgtype":"m.text"},"ts":1344019379000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"heycam|away: Is there any particular reason WebIDL doesn't let you nest constructors underneath another object?","msgtype":"m.text"},"ts":1344020798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: How does the spec for image-set() look to you? http://dev.w3.org/csswg/css4-images/#image-set-notation","msgtype":"m.text"},"ts":1344024791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"syntax nit: I think you mean * where you have +","msgtype":"m.text"},"ts":1344024887000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"No, that was intentional.  There doesn't seem to be any use for an image-set() with only a single argument, is there?","msgtype":"m.text"},"ts":1344024905000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1344024945000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"why [ <url> | <string> ] instead of <image>?","msgtype":"m.text"},"ts":1344024961000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I suppose maybe it could be useful if you *only* want to serve a 2x image...","msgtype":"m.text"},"ts":1344024965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because <image> covers things like gradients.","msgtype":"m.text"},"ts":1344024973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"image-set(image(......) 1x, image(....) 2x) should be fine, don't you think?","msgtype":"m.text"},"ts":1344025012000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Oh, right, yes.  Hmm.  Let me do some grammar hackery to make that work.","msgtype":"m.text"},"ts":1344025037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and of course you know my feelings on <resolution>","msgtype":"m.text"},"ts":1344025065000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"otherwise this all looks fine","msgtype":"m.text"},"ts":1344025073000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"And the reverse, too. image(image-set(...), image-set(...))","msgtype":"m.text"},"ts":1344025080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1344025083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right (the reverse should work)","msgtype":"m.text"},"ts":1344025090000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: what benefit is there to restricting to 2+? seems like it'd do nothing but be annoying, heh","msgtype":"m.text"},"ts":1344025094000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: The entire point of image-set() is to provide multiple versions of an image.","msgtype":"m.text"},"ts":1344025119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is your algorithm always going to pick the same asset that <img srcset=\"\"> would given the same arguments?","msgtype":"m.text"},"ts":1344025123000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: that's not an explanation for *requiring* it, unless there's something inherent to it that would make it not work at all","msgtype":"m.text"},"ts":1344025145000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hober: There's no requirement there, but I don't see why it wouldn't.  If HTML already defines something that I can hook, I'm willing to.","msgtype":"m.text"},"ts":1344025156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"eg. if I'm editing image-set in existing CSS and I want to remove or comment out an entry, why would you force me to rewrite it without image-set?","msgtype":"m.text"},"ts":1344025171000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(if it happens to reduce it to one item)","msgtype":"m.text"},"ts":1344025180000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Good point.  That tips me over the edge.  I'll change to *.","msgtype":"m.text"},"ts":1344025200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sounds sort of like something in Java that aggravated me to no end: unreachable code is a fatal error","msgtype":"m.text"},"ts":1344025204000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#attr-img-srcset","msgtype":"m.text"},"ts":1344025214000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"sorry, this is the relevant link","msgtype":"m.text"},"ts":1344025268000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#processing-the-image-candidates","msgtype":"m.text"},"ts":1344025269000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: Hm, that algorithm seems unnecessarily restrictive.","msgtype":"m.text"},"ts":1344025354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"By my reading, it prevents you from ever choosing a low-res image under low-speed connections.","msgtype":"m.text"},"ts":1344025373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"see step 16","msgtype":"m.text"},"ts":1344025385000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Oh, gotcha.","msgtype":"m.text"},"ts":1344025399000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, it appears that my algorithm and HTML's are functionally identical, actually.","msgtype":"m.text"},"ts":1344025507000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"However, a note that it should match <img srcset> would be appropriate.","msgtype":"m.text"},"ts":1344025533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: not to state the obvious or anything, but it's infinitely better to use the same algorithm than to declare it twice and assert that they're the same :)","msgtype":"m.text"},"ts":1344025577000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ooh, wait - it appears that HTML decides definitely on the candidate before trying to resolve the URL, and doesn't change its mind even if the URL is an invalid image.","msgtype":"m.text"},"ts":1344025597000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's what i would expect image-set() to do too","msgtype":"m.text"},"ts":1344025619000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"the whole idea is that asset selection happens without having to fetch any assets","msgtype":"m.text"},"ts":1344025634000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"personally i'd find it weird if it had magic multi-fetch recovery stuff","msgtype":"m.text"},"ts":1344025640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if you want magic multi-fetch fallback stuff, use image()","msgtype":"m.text"},"ts":1344025655000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Really?  I have it specced to have a similar behavior to image(), where the UA orders the resources as it wants, then gets the first one that successfully decodes as an image.","msgtype":"m.text"},"ts":1344025665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can't actually use image() here, since your fallback is \"use the next-best image\".","msgtype":"m.text"},"ts":1344025683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Rather, \"your desired fallback\".","msgtype":"m.text"},"ts":1344025695000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And you can't predict ahead of time how the UA will order the resources.","msgtype":"m.text"},"ts":1344025727000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"each image-set() should only ever result in one http request; if it turns out to be invalid, you get an invalid image","msgtype":"m.text"},"ts":1344025788000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"That seems quite suboptimal.","msgtype":"m.text"},"ts":1344025798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if that doesn't work, image(image-set(), image-set(),...)","msgtype":"m.text"},"ts":1344025801000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"...that wont' work.  It'll just request the same image again, presumably, unless you want to assume that \"I already tried this once\" is a factor in the resource selection algorithm.","msgtype":"m.text"},"ts":1344025830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: wouldn't that not work since there's no way for the second image-set to say \"everything in the first minus whatever was picked first\"?","msgtype":"m.text"},"ts":1344025830000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Plus it's very verbose.","msgtype":"m.text"},"ts":1344025835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Telling someone to repeat their entire image-set() N times, where N is the number of things in the image-set(), is just user-hostile.","msgtype":"m.text"},"ts":1344025865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I woudn't expect those two image-set()s to be the same","msgtype":"m.text"},"ts":1344025868000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"or you can do it with image-set(image() 1x, image() 2x)","msgtype":"m.text"},"ts":1344025884000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Again, that's something *different*.","msgtype":"m.text"},"ts":1344025903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"personally I find the idea of browsers trying to recover from being given bad urls unusual","msgtype":"m.text"},"ts":1344025908000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: right","msgtype":"m.text"},"ts":1344025916000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"zewt: it's the purpose of image(), but not of image-set(), so it would surprise me if image-set() was magic in that way","msgtype":"m.text"},"ts":1344025932000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"(i'd rather see an \"X\" or something, instead of have it silently \"recover\", at the expense of extra network requests and presumably a suboptimal image being shown)","msgtype":"m.text"},"ts":1344025944000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"does that happen with background-image: url(), url(), ...?","msgtype":"m.text"},"ts":1344025963000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Multiple bg images are stacked, not fallbacks.","msgtype":"m.text"},"ts":1344025976000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And an invalid image in CSS is just invisible.)","msgtype":"m.text"},"ts":1344025992000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"unrelatedly, anyone want to give me a reason not to put *[hidden] { display: none !important; } in my stylesheet? heh","msgtype":"m.text"},"ts":1344026209000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"No, go for it.","msgtype":"m.text"},"ts":1344026220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No need for the *, though.","msgtype":"m.text"},"ts":1344026227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Save a byte for your users. ^_^","msgtype":"m.text"},"ts":1344026234000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rather annoying that without it, every display: rule has to be in its own :not([hidden]) rule","msgtype":"m.text"},"ts":1344026235000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It's unfortunate that UA !important has become de-facto a more powerful level than author or user !important.","msgtype":"m.text"},"ts":1344026272000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(and a bit strange that I need to work around it at all; I wish there was a separate boolean CSS rule to hide things that takes precedence over display)","msgtype":"m.text"},"ts":1344026286000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yeah, that was clearly a mistake on our part early on.","msgtype":"m.text"},"ts":1344026301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Definitely one of the time-travel fixes in CSS.","msgtype":"m.text"},"ts":1344026313000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is there anything preventing adding something like that now?","msgtype":"m.text"},"ts":1344026315000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"No, not particularly.  Only inertia, plus possibly pushback from impls in the group who don't want to add something \"unnecessary\" because they have no authoring experience.","msgtype":"m.text"},"ts":1344026361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1344026373000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"@hidden is a big improvement, but everyone having to learn how it interacts with display is unfortunate","msgtype":"m.text"},"ts":1344026400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"But I'm off-and-on working on a 'display' spec, and might as well fit that into the same thing.","msgtype":"m.text"},"ts":1344026402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also the fact that webkit transitions became pretty much de-facto everywhere is ... annoying","msgtype":"m.text"},"ts":1344026495000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Velmont: thanks, why didn't the operaupdater.exe tell me about it?","msgtype":"m.text"},"ts":1344026512000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"hober: Want to start a thread about the fallback thing?  If we don't do any fallback within image-set(), then there's no real reason to include the color, except perhaps just avoiding the verbosity of a wrapping image().","msgtype":"m.text"},"ts":1344026515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"still can't figure out any way to synchronously skip transitions","msgtype":"m.text"},"ts":1344026521000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"was running 11.52","msgtype":"m.emote"},"ts":1344026531000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"transition-duration: 0 !important","msgtype":"m.text"},"ts":1344026533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: which is fine by me (not including the color)","msgtype":"m.text"},"ts":1344026534000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: Well, obviously, since you don't want to change your impl. ^_^","msgtype":"m.text"},"ts":1344026558000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1344026564000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"i've tried unsetting the transition while i make some change I don't want to transition, then setting it back, but it still does the transition","msgtype":"m.text"},"ts":1344026565000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Anyway, start a thread so we can discuss it, now that it's written up.","msgtype":"m.text"},"ts":1344026570000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'll probably start two or three threads","msgtype":"m.text"},"ts":1344026584000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"zewt: Do you flush style in between those?","msgtype":"m.text"},"ts":1344026586000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: Cool.","msgtype":"m.text"},"ts":1344026589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(the fallback thing, the <resolution> thing, the <color> thing)","msgtype":"m.text"},"ts":1344026594000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"only way i've found is something like clear transition, setTimeout(function() { make the change, restore the transtiion }, 0), which of course isn't synchronous","msgtype":"m.text"},"ts":1344026601000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: not sure what that means","msgtype":"m.text"},"ts":1344026615000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hober: I think the interesting use-case of providing printer-friendly versions justifies the <resolution>. ^_^","msgtype":"m.text"},"ts":1344026627000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Velmont: so... the updater gave me 12.01","msgtype":"m.text"},"ts":1344026629000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"... which isn't the same as 12.50","msgtype":"m.text"},"ts":1344026636000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"zewt: Browsers queue up style changes until they're forced to resolve them (or enough time passes that they need to resolve them for rendering).","msgtype":"m.text"},"ts":1344026658000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: So doing an operation that requires accurate style information flushes the style queue, which is required for some hackery around transitions/animations to work properly.","msgtype":"m.text"},"ts":1344026681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, 12.50 is a dev preview thing","msgtype":"m.text"},"ts":1344026696000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"TabAtkins: what's good for triggering that? will getComputedStyle do it?","msgtype":"m.text"},"ts":1344026724000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1344026740000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"man i need to revive that proposal","msgtype":"m.text"},"ts":1344026744000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"(well, I know it'll force a style update, but I don't know if it'll do the job with transitions in the mix)","msgtype":"m.text"},"ts":1344026747000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, I think so.  Tony Gentilcore put up a fairly comprehensive list of what works in WebKit, and the list should be pretty similar across browsers.","msgtype":"m.text"},"ts":1344026752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not 100% on that in gecko","msgtype":"m.text"},"ts":1344026761000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"in WebKit that'll flush it all out","msgtype":"m.text"},"ts":1344026776000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"oddly, firefox is the only browser I hit where the setTimeout() hack didn't work (on code that worked in chrome and opera)","msgtype":"m.text"},"ts":1344026813000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(the site is pretty mobile safari-centric so I couldn't spend much time poking at it, though)","msgtype":"m.text"},"ts":1344026836000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: the print case is more reasonably handled with the existing scale factor. image-set(foo.png 1x, bar.png 2x, baz.png 6x)","msgtype":"m.text"},"ts":1344026849000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Velmont: so, the irccloud app still renders wrong (it loads at least, which is nice)","msgtype":"m.text"},"ts":1344026883000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"hober: how? are you just going to provide an arbitrarily blown-up image and hope it's both big enough for printing and not unnecessarily big? heh","msgtype":"m.text"},"ts":1344026886000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"specifically, the bottom of irccloud is outside the window edge","msgtype":"m.text"},"ts":1344026893000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"afk a few","msgtype":"m.text"},"ts":1344026899000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and that's where the user input field is :(","msgtype":"m.text"},"ts":1344026900000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"zewt: It's weird that setTimeout() didn't work.  I thought everyone flushed style when they returned to the event queue.","msgtype":"m.text"},"ts":1344026946000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1344026977000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"we defer as much as possible","msgtype":"m.text"},"ts":1344026982000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"ideally we don't flush style until somebody asks via CSSOM or we go to paint","msgtype":"m.text"},"ts":1344026993000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Huh, okay.","msgtype":"m.text"},"ts":1344026996000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I clearly know nothing.","msgtype":"m.text"},"ts":1344027007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've made this gradually more deferred in WebKit over the past year+","msgtype":"m.text"},"ts":1344027010000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"it used to flush after every return from JS","msgtype":"m.text"},"ts":1344027016000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"gecko has a repeated style flush timer, i don't know if they also flush eagerly after returning from JS","msgtype":"m.text"},"ts":1344027058000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"of course, the problem is that this is script-visible (due to transitionend)","msgtype":"m.text"},"ts":1344027201000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"when this stuff breaks, i don't get the event and things break","msgtype":"m.text"},"ts":1344027210000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hey, anyone here familiar w/ the http portion of websocket initialization?","msgtype":"m.text"},"ts":1344027246000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"how much of `upgrade: websocket` is case sensitive?","msgtype":"m.text"},"ts":1344027261000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"and which document(s) specify that?","msgtype":"m.text"},"ts":1344027271000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"rfc6455?","msgtype":"m.text"},"ts":1344027328000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hober: I've added your two issues to the draft.","msgtype":"m.text"},"ts":1344027379000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: 4.2.1 point 3","msgtype":"m.text"},"ts":1344027678000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"specifically, which is what i needed","msgtype":"m.text"},"ts":1344027684000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"it's a long document ...","msgtype":"m.text"},"ts":1344027708000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"welcome to ietf specs","msgtype":"m.text"},"ts":1344027750000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hober: What do you think about the situation where you have image-set(image-set(foo 1x) 2x)?","msgtype":"m.text"},"ts":1344028203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what's the problem?","msgtype":"m.text"},"ts":1344028222000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Valid? And if so, what does it mean?","msgtype":"m.text"},"ts":1344028233000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And if not, is it okay to require impls to recurse down the tree of references to ensure that there's no image-set() anywhere inside of an image-set()?","msgtype":"m.text"},"ts":1344028262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foo gets selected for the inner image-set(), and its intrinsic width doesn't get scaled down. then the inner image-set() is selected for the outer image-set(), and its intrinsic size gets scaled by 0.5","msgtype":"m.text"},"ts":1344028266000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"...so if they were both 2x, it would get scaled twice?  That seems bad.","msgtype":"m.text"},"ts":1344028286000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't think it makes much sense for authors to do this, but i don't think it necessarily has to be made invalid.","msgtype":"m.text"},"ts":1344028320000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"it's like other valid-but-kinda-nonsensical things","msgtype":"m.text"},"ts":1344028328000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I'd like to make sure, as much as possible, that valid things are interpreted sanely.","msgtype":"m.text"},"ts":1344028357000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In other words, stupid results should be because of stupid actions, not unintentional stupid interactions on our side.","msgtype":"m.text"},"ts":1344028374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure. and in this case, stupid results are as a result of stupid actions; the interpretation on our side is totally reasonable given the input","msgtype":"m.text"},"ts":1344028398000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"gigo","msgtype":"m.text"},"ts":1344028405000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I don't particularly see how image-set(image-set('foo' 2x) 2x) meaning the same as image-set('foo' 4x) is reasonable on our part.","msgtype":"m.text"},"ts":1344028450000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how isn't it? it seems like the logical result","msgtype":"m.text"},"ts":1344028465000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Only if you interpret the \"2x\" as meaning \"halve the specified size\", rather than \"set the intrinsic resolution to 2 dots per px\".","msgtype":"m.text"},"ts":1344028494000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"again, we come back to the <resolution> craziness :)","msgtype":"m.text"},"ts":1344028546000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Your interpretation is just stilly, though. ^_^","msgtype":"m.text"},"ts":1344028560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this is clearly something on which we disagree. :)","msgtype":"m.text"},"ts":1344028574000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Anyway, if the effect is \"nonsensically stack the multipliers\", I'd rather just make it invalid.","msgtype":"m.text"},"ts":1344028771000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is it valid in html5 to have <ns:customel>text</ns:customel>? I know that declaring namespaces in the html element with @xmlns is unsupported, but what about actually using the elements themselves?","msgtype":"m.text"},"ts":1344031385000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"No, those are also invalid.","msgtype":"m.text"},"ts":1344031408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Because they can't be represented in the XML serialization.)","msgtype":"m.text"},"ts":1344031425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thanks. what do you mean by that?","msgtype":"m.text"},"ts":1344031440000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"<ns:customel> creates an element whose namespace is \"http://www.w3.org/1999/xhtml\" and whose local name is \"ns:customel\".","msgtype":"m.text"},"ts":1344031517000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Local names cannot contain colons.","msgtype":"m.text"},"ts":1344031523000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What I said. ^_^  If you parse as HTML, it knows nothing about namespaces, so it would just set the tagname to \"ns:customel\".  But this can't be exported back into XML - you can't have element names with : in them.  So, to maintain the DOM Consistency Principle, we make it invalid in HTML.","msgtype":"m.text"},"ts":1344031526000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: is there a spec for how this will be handled by UAs despite being invalid?","msgtype":"m.text"},"ts":1344031612000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"poop: Yes, the Parsing HTML Documents section.","msgtype":"m.text"},"ts":1344031629000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"poop: the HTML spec","msgtype":"m.text"},"ts":1344031630000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"(in HTML/HTML5)","msgtype":"m.text"},"ts":1344031632000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"poop: what's your specific use case? (what are you trying to do?)","msgtype":"m.text"},"ts":1344032876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh, hi there. :)","msgtype":"m.text"},"ts":1344033278000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"ummm, well i'm juust exploring possibilities for right now... I mean, I would like to have more semantic markup than what HTML natively provides.","msgtype":"m.text"},"ts":1344033306000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1344033346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tags like <x:comment> and <avatar> and stuff, so that i don't get to have such messy </div></div></div>","msgtype":"m.text"},"ts":1344033353000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"Semantics are a contract between you and the consumer.  Custom elements thus have zero semantics.","msgtype":"m.text"},"ts":1344033356000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's hard to work with.","msgtype":"m.text"},"ts":1344033358000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"(what do you mean by \"semantic\"?)","msgtype":"m.text"},"ts":1344033358000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Every custom element is semantically equivalent to a <div> or <span>.","msgtype":"m.text"},"ts":1344033377000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<x:comment> has an element in HTML, it's <article>","msgtype":"m.text"},"ts":1344033378000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well one it makes my markup easier and more maintainable and legible.","msgtype":"m.text"},"ts":1344033382000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"for <avatar> you mean like a version of <img>?","msgtype":"m.text"},"ts":1344033402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: shouldn't that be reserved for main centerpieces of webpages? I'm talking about for like a comment thread on a blog post","msgtype":"m.text"},"ts":1344033431000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"Hixie: yes, exactly.","msgtype":"m.text"},"ts":1344033437000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"poop: the \"semantic\" of an element is derived from what the spec says the element means, not from the tag name","msgtype":"m.text"},"ts":1344033469000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"poop: i recommend reading the spec's section on <article> :-)","msgtype":"m.text"},"ts":1344033477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in one sense it is a contract between me and the consumer.  on the other hand its a nicer and more elegant one between me and myself.  interacting with the dom in js willl be more concise and i could even modify the ua with a browser ext. and recommend thatmy users install it.","msgtype":"m.text"},"ts":1344033506000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"Hixie: okay, but what about <img>?","msgtype":"m.text"},"ts":1344033521000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"and <avatar>?","msgtype":"m.text"},"ts":1344033528000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"if you just want something for yourself, I recommend making up your own language, and then having a script that converts it to HTML","msgtype":"m.text"},"ts":1344033536000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what i do sometimes","msgtype":"m.text"},"ts":1344033543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you're worried about code naming, that's not semantics.  ^_^  Do what Hixie says - use a preprocessor to convert your private language into vanilla HTML.","msgtype":"m.text"},"ts":1344033558000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And paper over the differences in DOM with some helper functions.","msgtype":"m.text"},"ts":1344033569000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: oh really? have you ever written about it more extensively than you're likely to do here in IRC anywhere?","msgtype":"m.text"},"ts":1344033570000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"e.g. the HTML spec itself is written in a kind of frankenstein's monster variant of HTML that I pipe through half a dozen scripts","msgtype":"m.text"},"ts":1344033589000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i'm interested in the implementation details... :)","msgtype":"m.text"},"ts":1344033597000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"the implementation is embarassingly ugly","msgtype":"m.text"},"ts":1344033609000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ah, ok.","msgtype":"m.text"},"ts":1344033622000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"but the principle is sound :-)","msgtype":"m.text"},"ts":1344033681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but still, debugging isn't so easy when when you open your page in the browser for rendering the closing tags are a bunch of </div></div></div>s","msgtype":"m.text"},"ts":1344033684000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"Just use Python or something - it's got decent dom-style implementations.","msgtype":"m.text"},"ts":1344033690000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I've been reluctant to invest in larning python.","msgtype":"m.text"},"ts":1344033708000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"poop: we've mostly removed the need to use <div> these days","msgtype":"m.text"},"ts":1344033709000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"poop: i almost didn't include <div> in HTML actually","msgtype":"m.text"},"ts":1344033716000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but people threated to hit me","msgtype":"m.text"},"ts":1344033725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh really?","msgtype":"m.text"},"ts":1344033728000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"threatened","msgtype":"m.text"},"ts":1344033730000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thatwould've been awesome.","msgtype":"m.text"},"ts":1344033733000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"note that <avatar> vs <img> doesn't involve any </div>s :-P","msgtype":"m.text"},"ts":1344033747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TIL: web developers are sadists, willing to do anything to keep their elements.","msgtype":"m.text"},"ts":1344033795000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Reasonable layouts still generally require <div>s.  Particularly since there's no <content> element. ^_^","msgtype":"m.text"},"ts":1344033805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: Masochists, you mean?","msgtype":"m.text"},"ts":1344033818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah man, when's css gonna fix that :-P","msgtype":"m.text"},"ts":1344033825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, the hitting of Hixie.","msgtype":"m.text"},"ts":1344033827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Man, I don't know.  We gotta get this shit together.","msgtype":"m.text"},"ts":1344033838000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: no, but it is still more readable.","msgtype":"m.text"},"ts":1344033864000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"poop: In my experience as a webdev, if your page is broken up into components that are responsible for emitting their own HTML, you rarely have very much nesting in any single chunk of HTML.","msgtype":"m.text"},"ts":1344033904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Even if the generated output stacks </div>s like they're going out of style.)","msgtype":"m.text"},"ts":1344033918000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"poop: i seriously recommend making your own language and having a tool to convert from one to the other","msgtype":"m.text"},"ts":1344033920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, i gotta run. bbl.","msgtype":"m.text"},"ts":1344033924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i don't have to use <-i-m-g- -c-l-a-s-s-=-\"-a-v-a-t-a-r-\"- -/-> and i can just say <-a-v-a-t-a-r->","msgtype":"m.text"},"ts":1344033933000,"senderName":"poop","senderId":"poop@irc"},
{"content":{"body":"TabAtkins: Yeah, the hitting of Hixie was what I meant.","msgtype":"m.text"},"ts":1344034011000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"still would find it amusing to have <font> as a holder for @style, and it invalid everywhere else.","msgtype":"m.emote"},"ts":1344034060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: though I'll confess to having considered using a bogus element name just to have a generic inline-block container, heh","msgtype":"m.text"},"ts":1344034865000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"thus far I've resisted","msgtype":"m.text"},"ts":1344034883000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"<x-ib>","msgtype":"m.text"},"ts":1344034885000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(personally I have no idea how you'd write a webpage without <div>, unless it means using <span> and stuffing display:block on it, and I don't know that that actually improves anything)","msgtype":"m.text"},"ts":1344035065000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It doesn't, obviously. ^_^","msgtype":"m.text"},"ts":1344035082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I've done div-less development before.  You can get surprisingly far if you're lucky with the kinds of display you want.","msgtype":"m.text"},"ts":1344035108000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've briefly considered only using span (or div) for layout like that, and dismissed it as doing nothing but making me write more css rules","msgtype":"m.text"},"ts":1344035112000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, most of my pages are the sort that involve an artist handing me a PSD, heh","msgtype":"m.text"},"ts":1344035159000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(for work, anyway)","msgtype":"m.text"},"ts":1344035183000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, for that case you're almost certainly going to end up with <div>s immediately.","msgtype":"m.text"},"ts":1344035204000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But doing it with the minimum of junk was always a fun challenge to me.","msgtype":"m.text"},"ts":1344035220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"special thanks for random hover on gmail saying in big letters: Glenn Maynard (you)","msgtype":"m.text"},"ts":1344035295000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"apparently google thinks i need the reminder","msgtype":"m.text"},"ts":1344035302000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"We're not saying you're dumb, but...","msgtype":"m.text"},"ts":1344035327000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also gmail dropping the colored name thing is really annoying, since now I can't tell which Ian a post is from, from the message index","msgtype":"m.text"},"ts":1344035360000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"used to be all Hixies were the same color","msgtype":"m.text"},"ts":1344035368000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Man, I know.","msgtype":"m.text"},"ts":1344035369000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's the basic design flaw of web apps: when somebody decides it's time to \"upgrade\", you don't get any choice in the matter","msgtype":"m.text"},"ts":1344035393000,"senderName":"zewt","senderId":"zewt@irc"}
]