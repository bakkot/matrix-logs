[
{"content":{"body":":x|","msgtype":"m.text"},"ts":1357863046000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Hixie: where you at man?","msgtype":"m.text"},"ts":1357870350000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"dglazkov: you there?","msgtype":"m.text"},"ts":1357872865000,"senderName":"brian_","senderId":"brian_@irc"},
{"content":{"body":"...crickets...","msgtype":"m.text"},"ts":1357873330000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Hixie: It definitely seems like aside from the fact that it yields two elements, this covers a lot","msgtype":"m.text"},"ts":1357873508000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"and that two elements only has to be in legacy/script unsupported case","msgtype":"m.text"},"ts":1357873528000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"am I way off on that?","msgtype":"m.text"},"ts":1357873553000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"dglazkov: in theory this can provide a plan for both legacy and script not supported","msgtype":"m.text"},"ts":1357873623000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"you can parse them, they have semantic meaning - just a wrapper","msgtype":"m.text"},"ts":1357873637000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"if wrappers are a serious problem then the whole interwebs are borked","msgtype":"m.text"},"ts":1357873660000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"back","msgtype":"m.text"},"ts":1357878361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"My attempt at Data url's, starting with <img> turned out to be a flop.","msgtype":"m.text"},"ts":1357885685000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"Anyone have an example ?","msgtype":"m.text"},"ts":1357885715000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"actually, There's quite a few around, so I'm not sure what I did wrong","msgtype":"m.text"},"ts":1357885749000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/cgi/data/data might help a bit too.","msgtype":"m.text"},"ts":1357885829000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"The PHP examples look pretty darn easy.","msgtype":"m.text"},"ts":1357886032000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"I actually encoded with Java.  ReadIn the file with IOUtils  and encoded with the iHarder Base64","msgtype":"m.text"},"ts":1357886082000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"was originally trying on my work PC, with IE9 as the browser","msgtype":"m.text"},"ts":1357886130000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"did the same thing on another machine, and still the image does not show","msgtype":"m.text"},"ts":1357886239000,"senderName":"webguynow","senderId":"webguynow@irc"},
{"content":{"body":"That Hixie utility has a quite needlessy big html boilerplate.","msgtype":"m.text"},"ts":1357886265000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"which one?","msgtype":"m.text"},"ts":1357886280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh the data kitchen","msgtype":"m.text"},"ts":1357886291000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1357886291000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's old","msgtype":"m.text"},"ts":1357886293000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The one I pasted :-)","msgtype":"m.text"},"ts":1357886293000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Yeah, I figured :D","msgtype":"m.text"},"ts":1357886300000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hey, I like that data kitchen","msgtype":"m.text"},"ts":1357886305000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"it works, so why mess with it?","msgtype":"m.text"},"ts":1357886322000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"hence why it still has the boilerplate :-)","msgtype":"m.text"},"ts":1357886345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeaa, it does. Although smaller boilerplate brings nicer data uri's (if you're lazy and don't change it), data:text/html;charset=utf-8,%3C!DOCTYPE%20HTML%3E%0D%0A%3Ctitle%3ETest%3C%2Ftitle%3E%0D%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%3C%2Fstyle%3E%0D%0A%3Cp%3Ehelo","msgtype":"m.text"},"ts":1357886427000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"It was merely an observation, WeirdAl, not a break the world suggestion :P","msgtype":"m.text"},"ts":1357886446000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357886455000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"Clearly the data URI kitchen should be renamed","msgtype":"m.text"},"ts":1357894814000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Indeed what is up with that?","msgtype":"m.text"},"ts":1357898308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357898367000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: just a late reply","msgtype":"m.text"},"ts":1357898552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: not sure when I last disrupted myself (maybe during the summer), violated an Internet Standard quite recently, and I believe AWWW means Astronaut ;-)","msgtype":"m.text"},"ts":1357898701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I hope the TAG upholds data model compatibility: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-January/038632.html","msgtype":"m.text"},"ts":1357900663000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: now that annevk's on the TAG he won't be able to hang out with us anymore","msgtype":"m.text"},"ts":1357901056000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"they lock up the ivory tower to make sure of that","msgtype":"m.text"},"ts":1357901066000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"<object data=\"../images/blue.png\" type=\"image/gif\"","msgtype":"m.text"},"ts":1357901373000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It seems wrong that a lot of component use cases are design-orientated and would require changes to the markup.","msgtype":"m.text"},"ts":1357902078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is really quite backwards...","msgtype":"m.text"},"ts":1357902096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: from the newly elected I doubt many care about that strongly, if that's what you mean...","msgtype":"m.text"},"ts":1357902175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin, and next :)","msgtype":"m.text"},"ts":1357902518000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin, this one's smaller, though ;)","msgtype":"m.text"},"ts":1357902534000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: :)","msgtype":"m.text"},"ts":1357902539000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: some of the Mozilla tests I approved are not very good","msgtype":"m.text"},"ts":1357902550000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"they're correct, but not great as tests","msgtype":"m.text"},"ts":1357902559000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Which ones? :)","msgtype":"m.text"},"ts":1357902569000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: so is upholding XML stuff now completety off TAGâ€™s list of interests?","msgtype":"m.text"},"ts":1357902590000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm accepting them on the grounds that it's better to have a poor correct test that we can improve than nothing at all","msgtype":"m.text"},"ts":1357902591000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"the ol ones notably","msgtype":"m.text"},"ts":1357902598000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"And better or worse than Microsoft's average oles?","msgtype":"m.text"},"ts":1357902601000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ones?","msgtype":"m.text"},"ts":1357902603000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: I don't know what the TAG interests are :-)","msgtype":"m.text"},"ts":1357902609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1357902618000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"they test useful stuff like ol@reversed and all","msgtype":"m.text"},"ts":1357902619000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but they don't indicate what the pass condition is","msgtype":"m.text"},"ts":1357902627000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(and I wonder if they couldn't be more automated)","msgtype":"m.text"},"ts":1357902637000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Oh, those are reftests","msgtype":"m.text"},"ts":1357902643000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1357902654000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that wasn't clear","msgtype":"m.text"},"ts":1357902657000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but anyway, we can improve them","msgtype":"m.text"},"ts":1357902668000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1357902673000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: I personally care about consistency, but I'm not strictly opposed to changing XML, although that seems like a farfetched idea (and when I tried I failed)","msgtype":"m.text"},"ts":1357902695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the thing is that thereâ€™s code out there even if you change the XML spec","msgtype":"m.text"},"ts":1357902745000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"see 5th edition","msgtype":"m.text"},"ts":1357902748000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Is there a browser that even implements the 5th?","msgtype":"m.text"},"ts":1357903484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dunno. If you find one, please comment on https://bugzilla.mozilla.org/show_bug.cgi?id=501837","msgtype":"m.text"},"ts":1357903973000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"darobin, yt?","msgtype":"m.text"},"ts":1357907529000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: back now","msgtype":"m.text"},"ts":1357907755000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I've got a couple of tests for properties of the window object","msgtype":"m.text"},"ts":1357907785000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Can I just dump those in html/browsers/the-window-object?","msgtype":"m.text"},"ts":1357907803000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"None of the subdirs really make sense","msgtype":"m.text"},"ts":1357907811000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, I reckon that's good enough","msgtype":"m.text"},"ts":1357908053000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"we should strive for clarity rather than for being anal, methinks :)","msgtype":"m.text"},"ts":1357908078000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"And that's coming from a HTMLWG editor?","msgtype":"m.text"},"ts":1357908108000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gives Ms2ger a butterfly kiss","msgtype":"m.emote"},"ts":1357908134000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"gives darobin a pat on the back","msgtype":"m.emote"},"ts":1357908156000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"still waiting for http://mcc.id.au/2010/novel.html to be released","msgtype":"m.text"},"ts":1357908711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wah?","msgtype":"m.text"},"ts":1357908797000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Hixie: re: select/map discussion.  My question is - do you agree that has warts too?","msgtype":"m.text"},"ts":1357909327000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Your slash proposal I mean?","msgtype":"m.text"},"ts":1357909795000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: he won't be online for at least another four or so hours","msgtype":"m.text"},"ts":1357909894000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"You are following that... why no comment?","msgtype":"m.text"},"ts":1357909953000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I'd love to hear your thoughts","msgtype":"m.text"},"ts":1357909963000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Congrats btw!","msgtype":"m.text"},"ts":1357909974000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Because it's not really clear to me what problem we're solving","msgtype":"m.text"},"ts":1357910002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That statement alone would have been helpful imo","msgtype":"m.text"},"ts":1357910022000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I thought it was about components at first. But a lot of the use cases that keep coming up seem presentational in nature...","msgtype":"m.text"},"ts":1357910024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because I agree","msgtype":"m.text"},"ts":1357910028000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"And addressing presentational problems with changes in HTML markup...","msgtype":"m.text"},"ts":1357910054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah well, there's a lot of things to look at, can't be on top of all of them :-)","msgtype":"m.text"},"ts":1357910070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotta drop.. back in a few hours","msgtype":"m.text"},"ts":1357910109000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Hrm, I thought I had commit access to html5lib","msgtype":"m.text"},"ts":1357910442000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I can arrange that...","msgtype":"m.text"},"ts":1357912482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: you need it?","msgtype":"m.text"},"ts":1357912530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I found a test I apparently never pushed there","msgtype":"m.text"},"ts":1357912551000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So, I guess :)","msgtype":"m.text"},"ts":1357912557000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"check again","msgtype":"m.text"},"ts":1357912640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I finished updating the selectors api integration into dom http://lachy.id.au/temp/dom-core.html","msgtype":"m.text"},"ts":1357913290000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"full diff here https://github.com/lachlanhunt/dom/commit/453f2e2457202f49bd2743966a6f2f66f78a771a","msgtype":"m.text"},"ts":1357913304000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it's been rebased onto your latest commit, so it's should be ready to pull it in if there's no more problems with it.","msgtype":"m.text"},"ts":1357913363000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: need-to-resolve does not seem to point anywhere","msgtype":"m.text"},"ts":1357913632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in 5226","msgtype":"m.text"},"ts":1357913645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ta","msgtype":"m.text"},"ts":1357913651000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh, that definition was dropped. I must have missed the reference to it.","msgtype":"m.text"},"ts":1357913655000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"why is refNodes nullable?","msgtype":"m.text"},"ts":1357913681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and if it's nullable, it should default to null, but I'm not really sure that's the right approach","msgtype":"m.text"},"ts":1357913710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's nullable to handle a case where some library function calls it like find(selector, ref), without bothering to check if ref was set to anything","msgtype":"m.text"},"ts":1357913889000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"shouldn't it be Node... btw rather than sequence<Node>?","msgtype":"m.text"},"ts":1357913956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1357913960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1357913962000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1357913968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sequence<Node> allows for a NodeList to be passed for multiple reference nodes","msgtype":"m.text"},"ts":1357913979000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sure Node... allows for that too","msgtype":"m.text"},"ts":1357913991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think anyway","msgtype":"m.text"},"ts":1357913998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Huh?","msgtype":"m.text"},"ts":1357914013000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Eh?","msgtype":"m.text"},"ts":1357914028000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"if you pass the argument as ...nodelist","msgtype":"m.text"},"ts":1357914041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, hmm","msgtype":"m.text"},"ts":1357914045000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"checks webidl...","msgtype":"m.emote"},"ts":1357914054000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"would make sense anyway","msgtype":"m.text"},"ts":1357914060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's probably ES6","msgtype":"m.text"},"ts":1357914094000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1357914099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yeah, ...fds won't be in IDL yet","msgtype":"m.text"},"ts":1357914128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is fds?","msgtype":"m.text"},"ts":1357914155000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"annevk's canonical name for a nodelist","msgtype":"m.text"},"ts":1357914193000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Never seen var fds = document.getElementsByClassName(...?","msgtype":"m.text"},"ts":1357914207000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"never.","msgtype":"m.text"},"ts":1357914226000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"darobin, ping","msgtype":"m.text"},"ts":1357914248000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yes?","msgtype":"m.text"},"ts":1357914257000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Lachy: in any event, if we do nullable, it needs to be = null as well","msgtype":"m.text"},"ts":1357914266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: which means refNodes is always given, but might be null","msgtype":"m.text"},"ts":1357914297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin, I found a file that I need to turn into a test once CSS defines reversed counters, is there any place I can dump that? :)","msgtype":"m.text"},"ts":1357914326000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Lachy: the algorithms don't really seem to account for refNodes being null at the moment","msgtype":"m.text"},"ts":1357914328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: hmmm, is it a CSS test?","msgtype":"m.text"},"ts":1357914352000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk, that won't work. That would screw up the algorithm for determining refNodes, where null is treated as an explicit way to say there are no refNodes.","msgtype":"m.text"},"ts":1357914353000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Ms2ger: or an <ol> test? Or yet something else?","msgtype":"m.text"},"ts":1357914372000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin, it's for <ol> and <ol reversed>'s numbering","msgtype":"m.text"},"ts":1357914375000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so that might need to be fixed","msgtype":"m.text"},"ts":1357914376000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Ms2ger: well, if it's really ol then I'd put it with the tests for the ol element","msgtype":"m.text"},"ts":1357914390000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Alright","msgtype":"m.text"},"ts":1357914396000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but if it's CSS, talk to the CSS WG","msgtype":"m.text"},"ts":1357914398000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I try to avoid that :)","msgtype":"m.text"},"ts":1357914406000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"which I know is cruel and unusual punishment, but hey","msgtype":"m.text"},"ts":1357914412000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Lachy: not treating undefined and null the same is kinda icky","msgtype":"m.text"},"ts":1357914417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: some of your exceptions are missing \"\"","msgtype":"m.text"},"ts":1357914541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: all the stuff related to parsing should also move to Selectors","msgtype":"m.text"},"ts":1357914562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know.","msgtype":"m.text"},"ts":1357914570000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"But it hasn't been put in there yet.","msgtype":"m.text"},"ts":1357914578000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I can follow up with csswg to get that done, but it should at least be kept somewhere till it is","msgtype":"m.text"},"ts":1357914601000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"a lot of stuff under \"Processing selectors\" should be moved to that section that should eventually go away","msgtype":"m.text"},"ts":1357914615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1357914621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ideally we just define the thin API layer...","msgtype":"m.text"},"ts":1357914658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not that I'm opposed to putting it in the DOM","msgtype":"m.text"},"ts":1357914678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"next you'll be arguing for some modularity","msgtype":"m.text"},"ts":1357914712000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Lachy: use append rather than add","msgtype":"m.text"},"ts":1357914714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: I usually argue for that","msgtype":"m.text"},"ts":1357914743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: and I usually argue argainst those that suggest it without having actually explored the options","msgtype":"m.text"},"ts":1357914778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know, I've sort of met you before","msgtype":"m.text"},"ts":1357914811000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(was just teasing)","msgtype":"m.text"},"ts":1357914816000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"goes back to hating inter element whitespace with a vengeance","msgtype":"m.emote"},"ts":1357914843000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"firstElementChild :-)","msgtype":"m.text"},"ts":1357914864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin, you can also hate my pull requests instead?","msgtype":"m.text"},"ts":1357914884000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: doesn't help me here, sadly","msgtype":"m.text"},"ts":1357914948000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: in a minute, let me give the full of my hatred to IEWS first","msgtype":"m.text"},"ts":1357915011000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: those changes are they submissions or reviewed stuff?","msgtype":"m.text"},"ts":1357915144000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"in other words, do I need to go through each file to check them or rather is it stuff you've removed and are pushing into place","msgtype":"m.text"},"ts":1357915163000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk, if you find any more issues, post them as a comment on the diff page. I'll get to them later. And I'll see what I can do about shifting as much as I can out of here and into Selectors.","msgtype":"m.text"},"ts":1357915235000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"[2013-01-11 15:41:32] <Lachy>\t annevk, if you find any more issues, post them as a comment on the diff page. I'll get to them later. And I'll see what I can do about shifting as much as I can out of here and into Selectors.","msgtype":"m.text"},"ts":1357915317000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hopes Ms2ger can review a bit","msgtype":"m.emote"},"ts":1357915694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: thanks for the work","msgtype":"m.text"},"ts":1357915700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: added a bunch of comments","msgtype":"m.text"},"ts":1357917434000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1357917438000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"darobin, it's stuff from my submission dir, dunno how careful you want to review those","msgtype":"m.text"},"ts":1357917479000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll try to review some Selectors later","msgtype":"m.text"},"ts":1357917511000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ok, gotcha","msgtype":"m.text"},"ts":1357917687000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"SimonSapin, French Spacing means exactly what you think it means, no difference between space-after-full-stop and space-everywhere-else","msgtype":"m.text"},"ts":1357917992000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no mushrooms involved?","msgtype":"m.text"},"ts":1357918028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: oh I may have missed as step in the thread","msgtype":"m.text"},"ts":1357918054000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk, no, mushrooms are definitely Dutch","msgtype":"m.text"},"ts":1357918099000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i wonder if JS engines are able to optimize the \"make a native function call that returns an object, and discard the result\" case: it can know the object has no other references, and collect it immediately","msgtype":"m.text"},"ts":1357920254000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(well, if the native call declares that it returns a new object)","msgtype":"m.text"},"ts":1357920330000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hixie: ping","msgtype":"m.text"},"ts":1357920458000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1357921578000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"i think i've found a slight lingustic flaw in the HTML LS","msgtype":"m.text"},"ts":1357921610000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#dates-and-times","msgtype":"m.text"},"ts":1357921618000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"refers to months and dates as referring to a \"specific proleptic Gregorian date\"","msgtype":"m.text"},"ts":1357921656000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"\"proleptic\" is used as meaning that the Gregorian calendar is used regardless of whether it was actually used at the time; ie. you don't use the Julian calendar before 1582/1752/etc","msgtype":"m.text"},"ts":1357921700000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"but what it actually means is a date that *is* before its introduction","msgtype":"m.text"},"ts":1357921753000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"you could fix this by either changing it to say \"proleptic for dates before 1582\", or by introducing a definition of â€˜prolepticâ€™ just for the specification that says that","msgtype":"m.text"},"ts":1357921837000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1357922077000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"zewt: That'll be done as a result of inlining and dead-code elimination","msgtype":"m.text"},"ts":1357922266000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Anyhow, time for me to vanish for the weekend.","msgtype":"m.text"},"ts":1357922287000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1357922318000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dpk: best to file a bug","msgtype":"m.text"},"ts":1357922609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how do i do that?","msgtype":"m.text"},"ts":1357922665000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: whatwg.org/C has a form at the bottom of the screen which you can use","msgtype":"m.text"},"ts":1357922693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dpk: you could also email whatwgâŠ™wo or go directly to w3.org/Bugs/Public and file it on WHATWG / HTML","msgtype":"m.text"},"ts":1357922731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, do the W3C have a mailing list? i'll CC that, too","msgtype":"m.text"},"ts":1357922758000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"html-public, isn't it?","msgtype":"m.text"},"ts":1357922768000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"Don't crosspost","msgtype":"m.text"},"ts":1357922776000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: why?","msgtype":"m.text"},"ts":1357922832000,"senderName":"Noah","senderId":"Noah@irc"},
{"content":{"body":"Ms2ger: such level of integration between the two organisations which specify the same thing would be dangerous to society, i suppose","msgtype":"m.text"},"ts":1357922836000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: it's a problem because WHATWG requires subscription so you get broken threads","msgtype":"m.text"},"ts":1357922887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, i have to subscribe? â€“_â€“","msgtype":"m.text"},"ts":1357922916000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: not at all","msgtype":"m.text"},"ts":1357922931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait","msgtype":"m.text"},"ts":1357922935000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1357922936000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"dpk: you can file a bug instead","msgtype":"m.text"},"ts":1357922940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dpk: if you use the form in the spec you don't have to subscribe or give your email to anything","msgtype":"m.text"},"ts":1357922956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'd like to hear back about this, though","msgtype":"m.text"},"ts":1357922990000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"then you should either make a bug account or subscribe to the mailing list","msgtype":"m.text"},"ts":1357923032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"butâ€¦ *sigh*","msgtype":"m.text"},"ts":1357923184000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"makes a bug account","msgtype":"m.emote"},"ts":1357923189000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"jgraham: why do you only reply to part of the argument?","msgtype":"m.text"},"ts":1357923615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt did the same, it's not really helping getting anywhere","msgtype":"m.text"},"ts":1357923628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k, done: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20649","msgtype":"m.text"},"ts":1357924182000,"senderName":"dpk","senderId":"dpk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1357924224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: A few days ago I asked what the rationale was for the leading and trailing newlines being stripped in <pre> elements...","msgtype":"m.text"},"ts":1357924415000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"annevk: You gave me the appropriate reference here: http://www.w3.org/TR/html401/appendix/notes.html#notes-line-breaks","msgtype":"m.text"},"ts":1357924429000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"annevk: But I'm trying to relate this now to the case of a <pre> with a child <code>","msgtype":"m.text"},"ts":1357924475000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"yroc: it's just a legacy quirk","msgtype":"m.text"},"ts":1357924501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The leading and trailing newlines of a child <code> inside a parent <pre> are *not* stripped.","msgtype":"m.text"},"ts":1357924515000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Yep, because browsers never did that","msgtype":"m.text"},"ts":1357924532000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So nobody depends on that happening","msgtype":"m.text"},"ts":1357924545000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And it's more complicated","msgtype":"m.text"},"ts":1357924553000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Yes, I know -- the reference you gave me was good, like I said.","msgtype":"m.text"},"ts":1357924553000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"But why doesn't the line break principle in html 4.01 apply to the case of a child <code> in a parent <pre>?","msgtype":"m.text"},"ts":1357924608000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"annevk: i sure didn't do that","msgtype":"m.text"},"ts":1357924627000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yroc: again, it's a quirk","msgtype":"m.text"},"ts":1357924665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you make the same argument twice, replying to it in one place and deleting the other isn't ignoring the repeat, heh","msgtype":"m.text"},"ts":1357924665000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't think that's what happened","msgtype":"m.text"},"ts":1357924690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So by \"quirk\" you mean there's no rational reason why browsers strip leading and trailing newline of <pre> but they don't strip leading and trailing newlines of a <code> child of <pre>?","msgtype":"m.text"},"ts":1357924791000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1357924834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotta reboot, in trouble again :/","msgtype":"m.text"},"ts":1357924843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, there is one: stripping it from children is more work","msgtype":"m.text"},"ts":1357924853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: more work for who? UA implementors?","msgtype":"m.text"},"ts":1357924892000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1357924903000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it's so funny when you rack your brain to make sense of something, assuming that there's a well thought out intention to the why, when in some cases (like this one, apparently) there isn't","msgtype":"m.text"},"ts":1357924983000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"You must be new here ;)","msgtype":"m.text"},"ts":1357925010000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"How'd ya guess?!","msgtype":"m.text"},"ts":1357925031000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"New, but learning... slowly ;)","msgtype":"m.text"},"ts":1357925059000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"This is an important thing to learn, then... Not a lot has been well thought through before implementation :)","msgtype":"m.text"},"ts":1357925129000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes, exactly. I think that's going to be my working assumption from now on until proven otherwise :)","msgtype":"m.text"},"ts":1357925205000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Good idea :)","msgtype":"m.text"},"ts":1357925218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Lot less head banging that way...","msgtype":"m.text"},"ts":1357925229000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"dunno zewt, rather not introduce new objects without constructors","msgtype":"m.text"},"ts":1357925883000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"and a constructor here could make sense","msgtype":"m.text"},"ts":1357925892000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"Ms2ger: Reversed counters?  You mean, counters that you have to look forward in the document to see what value they should end up on?","msgtype":"m.text"},"ts":1357926921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean something to implement <ol reversed>","msgtype":"m.text"},"ts":1357926947000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So, I guess?","msgtype":"m.text"},"ts":1357926952000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm curious how that would even work, actually.","msgtype":"m.text"},"ts":1357927009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You still need to establish the counter's scope at the usual starting place.","msgtype":"m.text"},"ts":1357927020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe an end parameter on counter-reset?","msgtype":"m.text"},"ts":1357927039000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ask bz :)","msgtype":"m.text"},"ts":1357927075000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dglazkov: why on both <a> and <b>?","msgtype":"m.text"},"ts":1357927179000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"I see how it would work in my head, actually.  I was concerned temporarily about unreachable endpoints, but actually it's always fine - you just keep a running sum of the counter-increments until the scope ends, then reverse them to get your actual starting value.","msgtype":"m.text"},"ts":1357927198000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: that seems different from how <a> with a child <b> would normally behave without shadow trees","msgtype":"m.text"},"ts":1357927199000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"Argh, though, the syntax of coutner-* is *killer*.  Space-separated lists ftl.","msgtype":"m.text"},"ts":1357927223000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: also note that event listeners can set the target to display:none, can remove it from the tree, etc. so offsetX / offsetY will end up weird","msgtype":"m.text"},"ts":1357927393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: and what you're suggesting does not seem compatible with how they're computed today for elements that could reasonably have a shadow tree","msgtype":"m.text"},"ts":1357927435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: replied on the list","msgtype":"m.text"},"ts":1357927779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: me too! :)","msgtype":"m.text"},"ts":1357930592000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: btw, whatwg.org/newbug","msgtype":"m.text"},"ts":1357933438000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bkardell: here now","msgtype":"m.text"},"ts":1357933484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: yt?","msgtype":"m.text"},"ts":1357933639000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  you agree select/map thing is not without warts/right?","msgtype":"m.text"},"ts":1357933932000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Hixie: cool","msgtype":"m.text"},"ts":1357934246000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"bkardell: well it's certainly not as pretty as it would be if we could have the HMTL spec updated to have a true <geomap> element and so not need a component at all, sure","msgtype":"m.text"},"ts":1357934315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bkardell: and angle brackets are kind of pain","msgtype":"m.text"},"ts":1357934321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bkardell: but then i'm not a huge fan of HTML as a whole","msgtype":"m.text"},"ts":1357934329000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bkardell: so it's not hard for me to admit that something in HTML has warts :-)","msgtype":"m.text"},"ts":1357934339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No no... not what I mean","msgtype":"m.text"},"ts":1357934371000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"new Map(); // which element did that imperitive invocation just resolve to?","msgtype":"m.text"},"ts":1357934418000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: both plans have a number of good/bad implications... right?","msgtype":"m.text"},"ts":1357934441000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"if --> <element whitelist=\"input, textarea\">","msgtype":"m.text"},"ts":1357934444000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"then","msgtype":"m.text"},"ts":1357934446000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"new Foo(); gets which one?","msgtype":"m.text"},"ts":1357934461000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I am just curious if we can just agree to a list to benefits and drawbacks for each one","msgtype":"m.text"},"ts":1357934555000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: all options have good and bad points, but i think <select/map> is the only proposal i'm aware of that has no fatal problems currently. Why, are there problems I should know of that are fatal with <select/map>?","msgtype":"m.text"},"ts":1357934558000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do we start throwing parse errors then?","msgtype":"m.text"},"ts":1357934566000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"bkardell: i would be very happy to see such an analysis","msgtype":"m.text"},"ts":1357934568000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bkardell: and would be happy to review it and offer suggestions","msgtype":"m.text"},"ts":1357934577000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"feel free to use the whatwg wiki if you want","msgtype":"m.text"},"ts":1357934585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can create you an account","msgtype":"m.text"},"ts":1357934589000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<div/foo> ERROR: invalid application of a slash-hacked attribute to a tag","msgtype":"m.text"},"ts":1357934596000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357934597000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"do we extend doc.createElement to understand 'div/foo'?","msgtype":"m.text"},"ts":1357934647000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"personally i wouldn't, but that's up to dglazkov as far as i'm concerned","msgtype":"m.text"},"ts":1357934670000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I figured as much","msgtype":"m.text"},"ts":1357934696000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"throw YAOAA (Yet Another One-off API Asterisk) on the pile","msgtype":"m.text"},"ts":1357934751000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: sure... if we want.  I mean, I see a lot of drawbacks to / but only one benefit","msgtype":"m.text"},"ts":1357934794000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I feel like we're making swiss cheese, not a coherent API","msgtype":"m.text"},"ts":1357934798000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: i'd like someone to just list pro/con implications so we can agree wtf we are even talking abt","msgtype":"m.text"},"ts":1357934842000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1357934850000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"***goes to paste","msgtype":"m.text"},"ts":1357934856000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Dispassionately csuwldcat","msgtype":"m.text"},"ts":1357934865000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357934868000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Hixie: because I think we are on too many levels talking past each other...","msgtype":"m.text"},"ts":1357935098000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"https://etherpad.mozilla.org/custom-element-pro-con","msgtype":"m.text"},"ts":1357935228000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"bkardell: http://wiki.whatwg.org/wiki/Components","msgtype":"m.text"},"ts":1357935411000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, csuwldcat did one too","msgtype":"m.text"},"ts":1357935424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks at csuwldcat's","msgtype":"m.emote"},"ts":1357935427000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i disagree with most of csuwldcat's cons so far","msgtype":"m.text"},"ts":1357935469000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1357935471000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you can disagree all you want, those are the downstream effects","msgtype":"m.text"},"ts":1357935499000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"please, add your dispute under each one","msgtype":"m.text"},"ts":1357935508000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"show me how they are invalid","msgtype":"m.text"},"ts":1357935516000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Im not even half way done","msgtype":"m.text"},"ts":1357935526000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Sorry guys... phone and accessing irc through it :-/","msgtype":"m.text"},"ts":1357935585000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Can't we go back to use case discussion again? Yesterday quite a few people said they wanted decorators. Most of what web components is now is not decorators...","msgtype":"m.text"},"ts":1357935826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: both decorators and custom elements are part of web components.","msgtype":"m.text"},"ts":1357935867000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: how do decorators work?","msgtype":"m.text"},"ts":1357935883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: via CSS?","msgtype":"m.text"},"ts":1357935889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yup","msgtype":"m.text"},"ts":1357935895000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: where is that defined?","msgtype":"m.text"},"ts":1357935905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://www.w3.org/TR/components-intro/#decorator-section","msgtype":"m.text"},"ts":1357935921000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: intro does not sound like a definition","msgtype":"m.text"},"ts":1357935946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know what you mean by \"quite a few people\", but I am pretty sure most web devs want custom elements.","msgtype":"m.text"},"ts":1357935949000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: I haven't written the decorators spec yet.","msgtype":"m.text"},"ts":1357936043000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"e.g. http://www.w3.org/2008/webapps/wiki/Component_Model_Use_Cases","msgtype":"m.text"},"ts":1357936054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a lot of those are either extending an existing form control or a decorator","msgtype":"m.text"},"ts":1357936137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which kinda argues for the <.../...> design I'd think","msgtype":"m.text"},"ts":1357936167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, people posted pages of components yesterday that showed exactly that","msgtype":"m.text"},"ts":1357936278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the biggest complaint about slash-type is that it's verbose. The best analogy I heard is having to write out base type for every instance in a normal programming language.","msgtype":"m.text"},"ts":1357936292000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"wait, what? the slash-type thing is the least verbose it could possibly be","msgtype":"m.text"},"ts":1357936310000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it literally has exactly as few characters as you can use","msgtype":"m.text"},"ts":1357936317000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: it's not that verbose","msgtype":"m.text"},"ts":1357936320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i still prefer <select is=map> to <select/map>","msgtype":"m.text"},"ts":1357936327000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"you literally cannot get any less verbose without using gzip or something","msgtype":"m.text"},"ts":1357936332000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie <x-map> is less verbose in that regard. It has better developer egronomics.","msgtype":"m.text"},"ts":1357936367000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: that's a #Fact","msgtype":"m.text"},"ts":1357936421000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: sure but it doesn't meet the requirements so that's kind of moot","msgtype":"m.text"},"ts":1357936537000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: i mean, <map> is even less verbose","msgtype":"m.text"},"ts":1357936542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: as is <>","msgtype":"m.text"},"ts":1357936547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looking through backlog and comments, the main objections from Web developers boils down to ergonomics. So.. Standards guys want slash-type, Web devs want custom tags.","msgtype":"m.text"},"ts":1357936553000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i don't _want_ slash-type","msgtype":"m.text"},"ts":1357936577000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i want something that meets the requirements","msgtype":"m.text"},"ts":1357936582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foo/bar is the only one people have proposed that does","msgtype":"m.text"},"ts":1357936590000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm certainly open to other proposals","msgtype":"m.text"},"ts":1357936594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whatever the syntax, it needs to convey two pieces of information: the element you're extending, and the component that extends it. <x-map> doesn't do that.","msgtype":"m.text"},"ts":1357936602000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: i love the \"lead\" vs \"mislead\" in http://www.w3.org/mid/CAAWBYDCQ-dmUGJpehYsjZLH9RQbc3F-VFd_um=qGBmK0ws181gâŠ™mgc","msgtype":"m.text"},"ts":1357936652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: you should take that paragraph and put it in the whatwg faq somewhere :-)","msgtype":"m.text"},"ts":1357936669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: dglazkov: verbosity is a subconcern","msgtype":"m.text"},"ts":1357936720000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the biggest lame-ness here, is that tags are noun identities with specfic protos","msgtype":"m.text"},"ts":1357936741000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"tags and the HTMLElement constructors they are tied to have always had a strongly tied relationship","msgtype":"m.text"},"ts":1357936769000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"yeah ok that etherpad thing has just devolved into namecalling, i'm out","msgtype":"m.text"},"ts":1357936772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we are now obliterating that","msgtype":"m.text"},"ts":1357936775000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"where","msgtype":"m.text"},"ts":1357936783000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357936783000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: I... had no idea I was making such a great pun/parallel.","msgtype":"m.text"},"ts":1357936843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's wonderful.","msgtype":"m.text"},"ts":1357936846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1357936948000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: If you drop the requirement that \"requiring parsers to read linked HTML documents is bad\", then the current spec solution hits all the same points that <foo/bar> does, but better.","msgtype":"m.text"},"ts":1357936950000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: WORD","msgtype":"m.text"},"ts":1357936966000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: sure, if we require all UAs to implement Web Components. But we can't seriously do that. That's a huge amount of work on one of the most complicated aspects of the web platform.","msgtype":"m.text"},"ts":1357936993000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: cited some micro parser used by 4 guys in a basement in Siberia though","msgtype":"m.text"},"ts":1357937008000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: is even html5lib going to support web components natively?","msgtype":"m.text"},"ts":1357937008000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's an incorrect assertion.","msgtype":"m.text"},"ts":1357937009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I agree. I would like to understand whether 5 and 7 are actually requirements or nice-to-haves","msgtype":"m.text"},"ts":1357937009000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"The parser required to understand the fallback tag semantics is a tiny tiny subset of Web Components.  It's just \"use your HTML parser, and look for <element> elements in the linked document.\"","msgtype":"m.text"},"ts":1357937040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/.\"/\"./","msgtype":"m.text"},"ts":1357937047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: what is HTML5lib?","msgtype":"m.text"},"ts":1357937079000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Once you see the <element name=\"x-bar\" extends=\"foo\">, you can parse <x-bar> exactly as easily as <foo/bar>, with the same semantic fallback.","msgtype":"m.text"},"ts":1357937090000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwldcat: It's the de facto non-browser impl of the HTML parser.","msgtype":"m.text"},"ts":1357937102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i don't think that is a reasonable requirement. For example, you might not have network at that point.","msgtype":"m.text"},"ts":1357937108000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Written in Python 2/3.","msgtype":"m.text"},"ts":1357937110000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1357937115000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"WHAT? (12:46:02 PM) Hixie: TabAtkins: i don't think that is a reasonable requirement. For example, you might not have network at that point.","msgtype":"m.text"},"ts":1357937133000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"so you had a network to dl the page","msgtype":"m.text"},"ts":1357937137000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: \"Hixie: cited some micro parser used by 4 guys in a basement in Siberia\" is the kind of hyperbolic strawman construction that makes me not enjoy discussing this with you, fwiw.","msgtype":"m.text"},"ts":1357937139000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but not to get the linked rel?","msgtype":"m.text"},"ts":1357937149000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"oh gosh, that sounds absurd","msgtype":"m.text"},"ts":1357937160000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"re: div/x-foo and 'verbosity is a subconcern' => not for me. From my perspective verbosity is the primary issue.","msgtype":"m.text"},"ts":1357937179000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"Hixie: let me rephrase","msgtype":"m.text"},"ts":1357937184000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"most of the studies we do of HTML consist of big zipfiles of HTML files where none of the links have been followed, for instance.","msgtype":"m.text"},"ts":1357937190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what do you think the total usage rates of the cases you cite in relation to the lesser known parsers that are not used by any of today's modern browsers?","msgtype":"m.text"},"ts":1357937232000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles: I'm not concerned with relative verbosity either, just intent.  Having to restate your inheritance structure with every instantiation seems asinine. :/","msgtype":"m.text"},"ts":1357937235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: fwiw, i agree with that","msgtype":"m.text"},"ts":1357937254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"@tabatkins: yes, precisely ... it's a cost I have to pay over and over","msgtype":"m.text"},"ts":1357937264000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"TabAtkins: having said that, we had some interesting cases yesterday that came up where i think this would actually help","msgtype":"m.text"},"ts":1357937278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Then are you just biting the bullet? \\","msgtype":"m.text"},"ts":1357937284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: asinine, and asiten, and asieleven","msgtype":"m.text"},"ts":1357937287000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: Sorry, I skipped most of the discussion yesterday.","msgtype":"m.text"},"ts":1357937290000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: for instance, consider a component that wants to add an API for <h1>-<h6>","msgtype":"m.text"},"ts":1357937295000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see what I did there ;)","msgtype":"m.text"},"ts":1357937295000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: (some <h1>s to <h6>s, that is)","msgtype":"m.text"},"ts":1357937313000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: do you have to declare 6 components?","msgtype":"m.text"},"ts":1357937323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No Hixie","msgtype":"m.text"},"ts":1357937333000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that could be a decorator","msgtype":"m.text"},"ts":1357937340000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"not a decorator, it adds an api","msgtype":"m.text"},"ts":1357937344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you wanted to mimic the same hierarchy, then probably, yeah.","msgtype":"m.text"},"ts":1357937369000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"h1,h2,h3,h4,h5 { decorator: url(#HixieHeadings); }","msgtype":"m.text"},"ts":1357937374000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: API-adding via decorator is in the long future, if ever.","msgtype":"m.text"},"ts":1357937392000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwldcat: dude, he just said it wasn't a decorator","msgtype":"m.text"},"ts":1357937393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: he just added that after we said it","msgtype":"m.text"},"ts":1357937412000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: Yes, but he said it quickly.  ^_^","msgtype":"m.text"},"ts":1357937427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"he's tacking on reqs live, this is called moving the goal post","msgtype":"m.text"},"ts":1357937431000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1357937433000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"good point","msgtype":"m.text"},"ts":1357937437000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: Dude, don't be like that.  This is a fast, casual medium.","msgtype":"m.text"},"ts":1357937450000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i didn't move the goalpost, I said it added an API in the very first line that mentioned it!","msgtype":"m.text"},"ts":1357937457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jesus","msgtype":"m.text"},"ts":1357937460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: seems weird btw as h1-h6 implement the same interface","msgtype":"m.text"},"ts":1357937465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You can't work here if you require that everyone state their entire argument and all clarifications in a single line.","msgtype":"m.text"},"ts":1357937471000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: HTMLHeadingelement","msgtype":"m.text"},"ts":1357937472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: or alternatively, every phrasing element","msgtype":"m.text"},"ts":1357937479000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: <h1-6> are werid, yes.","msgtype":"m.text"},"ts":1357937480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but hixiem you did it to present your corner case specifically geared to achieve your narrative","msgtype":"m.text"},"ts":1357937490000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: or every sectioning element (that one in particular seems quite plausible)","msgtype":"m.text"},"ts":1357937494000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you not see that?","msgtype":"m.text"},"ts":1357937496000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: they're not the only elements with a non-unique interface","msgtype":"m.text"},"ts":1357937498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I realize I'm not getting any traction with the verbosity argument, but I expect web-devs are going to find it extremely off-putting (my team does)","msgtype":"m.text"},"ts":1357937518000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"Hixie: Hm, I see.  Yes, there are some plausible cases where you could want to apply the same API across several existing HTML elements.","msgtype":"m.text"},"ts":1357937527000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sjmiles: naw, they'll just rock the X","msgtype":"m.text"},"ts":1357937534000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"<x/hoodwinked>","msgtype":"m.text"},"ts":1357937549000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: Hixie: I admit as well, the case is valid","msgtype":"m.text"},"ts":1357937574000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: what we could do is have an in-page macro mechanism, i suppose","msgtype":"m.text"},"ts":1357937585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"csuwldcat: I refer to the notion that will require the extra tag semantic <div/x-whatever>","msgtype":"m.text"},"ts":1357937595000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"I would contend that it is fractional and not going to be the norm","msgtype":"m.text"},"ts":1357937600000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: I don't think that overrides in general the argument against restating your base on every element, though.  Perhaps argues for a way to address that case specifically.","msgtype":"m.text"},"ts":1357937603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so <foo/bar> is the regular syntax, but you can say <define element=\"bar\" extends=\"foo\" with=\"binding.html\"> and then use <bar>","msgtype":"m.text"},"ts":1357937624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Or pursuing something like slash-tag at the same time, as a way to manually override the extends=\"\" attribute.","msgtype":"m.text"},"ts":1357937633000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, that's what I'm thinking.","msgtype":"m.text"},"ts":1357937640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sjmiles: oh, but I think Hixie said the parser addition that will be required by this will add some magic that means when parsed, the name after the slash is not added as an attribute","msgtype":"m.text"},"ts":1357937655000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that would allow us to even drop the x-","msgtype":"m.text"},"ts":1357937656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: question - for tab too","msgtype":"m.text"},"ts":1357937661000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"that seems even better","msgtype":"m.text"},"ts":1357937664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait wait","msgtype":"m.text"},"ts":1357937668000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: I don't really want to repeat that macro on every page, though - I'd prefer to link it in once.","msgtype":"m.text"},"ts":1357937672000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"especially if the plan is to express native elements in terms of shadow trees too","msgtype":"m.text"},"ts":1357937676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so declare elements in the doc ahead of time?","msgtype":"m.text"},"ts":1357937677000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sorry guys you should have seen me trying to do this on my phone, it was something to behold","msgtype":"m.text"},"ts":1357937678000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"dglazkov: Forward declarations!","msgtype":"m.text"},"ts":1357937684000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"look, having to put <div/x-foo> instead of just <x-foo> at a very basic level is off-putting to web devs","msgtype":"m.text"},"ts":1357937690000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"yeah. it has terrible developer ergonomics, too","msgtype":"m.text"},"ts":1357937695000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: well, it has to be in-page because otherwise the parser will just be utterly lost","msgtype":"m.text"},"ts":1357937697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you do the slash thing - a LOT of tools break","msgtype":"m.text"},"ts":1357937699000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"dglazkov: like import in Python","msgtype":"m.text"},"ts":1357937702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen is going to hate this","msgtype":"m.text"},"ts":1357937703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Without an in-band signal that it's something special, sure.","msgtype":"m.text"},"ts":1357937712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sjmiles: not just that, it has HUGE downstream consequences","msgtype":"m.text"},"ts":1357937713000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles will hate the forward decls","msgtype":"m.text"},"ts":1357937720000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"with tag names, every API devs use today works","msgtype":"m.text"},"ts":1357937726000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"(Like the x- prefix.)","msgtype":"m.text"},"ts":1357937727000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"doc.createElement, querySelector, getElementsByTagName, el.nodeName, etc,","msgtype":"m.text"},"ts":1357937739000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the x- thing is _so_ ugly though","msgtype":"m.text"},"ts":1357937742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's reallyl not. ^_^","msgtype":"m.text"},"ts":1357937749000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"with this method, hixie is tossing all of that","msgtype":"m.text"},"ts":1357937751000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"i mean, uglier even than the slash thing","msgtype":"m.text"},"ts":1357937752000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"imho","msgtype":"m.text"},"ts":1357937753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, that's clearly subjective","msgtype":"m.text"},"ts":1357937760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless we patch that everywhere","msgtype":"m.text"},"ts":1357937761000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"at some point we discussed merely requiring '-' ... since devs will want to id their elts anyway (goog-map, yui-button) this I expect to not be alarming to web devs","msgtype":"m.text"},"ts":1357937776000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"hixie: amen... subjective :)","msgtype":"m.text"},"ts":1357937777000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"csuwldcat was right that if we have to do slash-type, most libraries will simply flow around with <x/foo>","msgtype":"m.text"},"ts":1357937780000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i suppose we could require a prefix, that would get around hsivonen's concerns","msgtype":"m.text"},"ts":1357937780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: I will, with x-tag","msgtype":"m.text"},"ts":1357937798000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dgazkov: and tools will break","msgtype":"m.text"},"ts":1357937801000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"that is one of the things hixie wans tot avoid","msgtype":"m.text"},"ts":1357937813000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"bkardell_: well, that","msgtype":"m.text"},"ts":1357937813000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bkardell_: such as?","msgtype":"m.text"},"ts":1357937813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can stamp a money back guarantee on that","msgtype":"m.text"},"ts":1357937820000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: <x-tag is=h1> ^_^","msgtype":"m.text"},"ts":1357937825000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ewwwwh","msgtype":"m.text"},"ts":1357937832000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"the other thing is what is the tag name of an extended element -- i guess y'all want it to be the component, but that means it'd be different for legacy UAs and new UAs in the <foo/bar> case","msgtype":"m.text"},"ts":1357937834000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: yeah but that fails 7","msgtype":"m.text"},"ts":1357937844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just go to your syntax highlighters for example or all of these poste things we use online and start playing","msgtype":"m.text"},"ts":1357937848000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Where were these numbered reqs?","msgtype":"m.text"},"ts":1357937853000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: people just won't bother with the is=\"\"","msgtype":"m.text"},"ts":1357937854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: oh you are a cunning fellow Tag, nay Ninja like","msgtype":"m.text"},"ts":1357937854000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Components","msgtype":"m.text"},"ts":1357937858000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... namespaces?","msgtype":"m.text"},"ts":1357937869000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Ah, kk.","msgtype":"m.text"},"ts":1357937871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the tag name of an element that happes to be bound to a component should be the same as if it weren't bound","msgtype":"m.text"},"ts":1357937873000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"<x-tag/h1>","msgtype":"m.text"},"ts":1357937876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwildcat and I accidentally were getting auto-completed closing tags, things that looked like errors or attributes that look like content","msgtype":"m.text"},"ts":1357937885000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"In legacy browsers, tagname is x-tag, like we want, and h1 is an attribute name.","msgtype":"m.text"},"ts":1357937892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: <h1/tag> is cleaner than <x-tag/h1>","msgtype":"m.text"},"ts":1357937900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, we also blast a ton of regexps out in the wild","msgtype":"m.text"},"ts":1357937905000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: if we're going there","msgtype":"m.text"},"ts":1357937906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can we give everyone your email for the support requests?","msgtype":"m.text"},"ts":1357937925000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: Marginally, yes, due tot he prefix loss, but we want to allow components to rely on their default extends (and thus be slash-less).","msgtype":"m.text"},"ts":1357937927000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean that's fair right?","msgtype":"m.text"},"ts":1357937933000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"this is what I was saying","msgtype":"m.text"},"ts":1357937952000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"doesn't that violate hixie's #7?","msgtype":"m.text"},"ts":1357937960000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"do we have any idea how many components we're expecting per page?","msgtype":"m.text"},"ts":1357937978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"csuwldcat: everyone already has his email address","msgtype":"m.text"},"ts":1357937982000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"bkardell_: not if we do the macro declaration thing","msgtype":"m.text"},"ts":1357937983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"haha hober: good point","msgtype":"m.text"},"ts":1357937993000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Often, a decent number.  sjmiles can probably give a good answer.","msgtype":"m.text"},"ts":1357937997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"like 10? 100?","msgtype":"m.text"},"ts":1357938003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in our experience, it all depends on the app","msgtype":"m.text"},"ts":1357938012000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"trying to work out if it's just out of the question to declare them ahead of time","msgtype":"m.text"},"ts":1357938013000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"100s","msgtype":"m.text"},"ts":1357938018000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"some it was as few as 10","msgtype":"m.text"},"ts":1357938020000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"ok yeah that won't work then","msgtype":"m.text"},"ts":1357938027000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bummer","msgtype":"m.text"},"ts":1357938028000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"others, that have iterated uses, it was 100s","msgtype":"m.text"},"ts":1357938031000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles: in one page?","msgtype":"m.text"},"ts":1357938035000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man","msgtype":"m.text"},"ts":1357938037000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"easily","msgtype":"m.text"},"ts":1357938041000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"x-responsive-img","msgtype":"m.text"},"ts":1357938052000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: I know that, just using jQuery components, I've sometimes written pages with *lots* of things.","msgtype":"m.text"},"ts":1357938055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Counting things that were practically components, just not packaged as such, that number goes up a lot more.","msgtype":"m.text"},"ts":1357938072000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe we should just abandon HTML and just have them all use XML... (not joking)","msgtype":"m.text"},"ts":1357938072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sjmiles: do you mean 100s of instances of a handful of components, or a handful of instances of 100s of components?","msgtype":"m.text"},"ts":1357938077000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"components support composition, the layering available there allows one to mitigate a complex application structure into numerous small pieces","msgtype":"m.text"},"ts":1357938082000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"100s of instances of a handful of components!!! :)","msgtype":"m.text"},"ts":1357938093000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"i mean, if there's 100s of these things, there's no way any software is going to make head or tail of it even if they have the fallback elements","msgtype":"m.text"},"ts":1357938096000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"100s of instances of a much smaller # of components","msgtype":"m.text"},"ts":1357938107000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1357938111000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1357938112000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1357938113000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"how many component types per page though?","msgtype":"m.text"},"ts":1357938122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my perspective is 'web apps' to be clear","msgtype":"m.text"},"ts":1357938122000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1357938126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so maybe 10-20 uniques","msgtype":"m.text"},"ts":1357938127000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"component types is more like dozens","msgtype":"m.text"},"ts":1357938130000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"with a few at high iteration","msgtype":"m.text"},"ts":1357938132000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"for serious apps","msgtype":"m.text"},"ts":1357938138000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1357938143000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"ok that's not so bad then","msgtype":"m.text"},"ts":1357938144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the only kind hehe","msgtype":"m.text"},"ts":1357938149000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"also important, in the cases where 100s of instances are present, the apps are built dynamically and more than likely HTML is only used as the UI configuration medium, not a public document.","msgtype":"m.text"},"ts":1357938170000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"we could do something like <script type=\"parser macro declaration\"> foo = <select/foo>; bar = <input/bar> </script>","msgtype":"m.text"},"ts":1357938180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in total though, over the whole of an app, across all pages/views, you could have many more","msgtype":"m.text"},"ts":1357938195000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"apologize if I'm repeating, but I'm concerned that rule #5 is more or less like insisting all ice-cream be served with peas on top","msgtype":"m.text"},"ts":1357938196000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"iow, you would load chunks of templates or fragments, and replace them as you work","msgtype":"m.text"},"ts":1357938198000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: yeah, in which case you don't even need to define that many macros","msgtype":"m.text"},"ts":1357938204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"im just saying there are like 10-20 uniques per view","msgtype":"m.text"},"ts":1357938205000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"ulimately, the ice-cream consumers will go to incredible lengths to build pea-removal machines","msgtype":"m.text"},"ts":1357938220000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"so the whole app may have 50-60","msgtype":"m.text"},"ts":1357938227000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: what I meant is that in this case requirements 5 and 7 are moot","msgtype":"m.text"},"ts":1357938237000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: think of it like jQuery plugins, some sides include like 50 js files, each a plugin","msgtype":"m.text"},"ts":1357938246000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: not entirely, but yes, to a large extent i agree","msgtype":"m.text"},"ts":1357938252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: it's the markup case i'm worried about","msgtype":"m.text"},"ts":1357938261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I understand.","msgtype":"m.text"},"ts":1357938272000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"mostly worried about, anyway","msgtype":"m.text"},"ts":1357938275000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I will mourn the loss of doc.createElement for many moons","msgtype":"m.text"},"ts":1357938281000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles: sure, just like today they use <div>s only","msgtype":"m.text"},"ts":1357938296000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and all the other DOM APIs we'll either lose or have to patch","msgtype":"m.text"},"ts":1357938299000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles: but i don't think that's most people","msgtype":"m.text"},"ts":1357938302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sjmiles: and it's widely understood to be poor style","msgtype":"m.text"},"ts":1357938308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is what developers will hunt us for","msgtype":"m.text"},"ts":1357938309000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: these two cases are in contradiction then","msgtype":"m.text"},"ts":1357938322000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I think both csuwldcat and sjmiles are mostly interested in the former and could care less about the latter","msgtype":"m.text"},"ts":1357938353000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1357938360000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the former = from script?","msgtype":"m.text"},"ts":1357938369000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the markup is low medium, all the downstream is heartbreaking","msgtype":"m.text"},"ts":1357938379000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"if so, they sure are arguing forcefully about the latter :-)","msgtype":"m.text"},"ts":1357938382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's call it the \"apps\" case vs. \"document\" case.","msgtype":"m.text"},"ts":1357938392000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i disagree with the premise that there's a difference or that apps only use scripts","msgtype":"m.text"},"ts":1357938409000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is why I wanted something optional","msgtype":"m.text"},"ts":1357938410000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"Im not sure I can sell a spec that requires patching every DOM interface that works off of a tag/selector","msgtype":"m.text"},"ts":1357938410000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Boris will probably go into a fit of nerd rage","msgtype":"m.text"},"ts":1357938425000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: okay let's see","msgtype":"m.text"},"ts":1357938431000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"are we editing a wiki with something new?","msgtype":"m.text"},"ts":1357938451000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Hixie: I've added my proposal to the wiki page.  Do you agree with my writeup?","msgtype":"m.text"},"ts":1357938453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: in \"apps\" case, the requirements 5 and 7 are uninteresting, since the app uses markup as purely UI config serialization/deserialization medium","msgtype":"m.text"},"ts":1357938463000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"hixie: that was creepy fast","msgtype":"m.text"},"ts":1357938472000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Hixie: in \"document\" case, the requirements 5 and 7 are serious, because the document's semantics are public","msgtype":"m.text"},"ts":1357938497000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"@dglazkov: yes, this is my belief also","msgtype":"m.text"},"ts":1357938502000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"TabAtkins: dglazkov: I think a hard req for us is that you can use existing DOM APIs to query/create elements","msgtype":"m.text"},"ts":1357938514000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"bkardell_: hm?","msgtype":"m.text"},"ts":1357938516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's when I ask for 'optional'","msgtype":"m.text"},"ts":1357938525000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"document.createElement('div/foo')","msgtype":"m.text"},"ts":1357938535000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"document.createElement *must* work","msgtype":"m.text"},"ts":1357938547000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"querySelector('div/foo')","msgtype":"m.text"},"ts":1357938547000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hixie: nm.. i just said 'can we edit the wiki' and a microsecond later you said 'i updated the wiki","msgtype":"m.text"},"ts":1357938549000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: failing any of those requirements imho is a blocker.","msgtype":"m.text"},"ts":1357938565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sjmiles: correct","msgtype":"m.text"},"ts":1357938570000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: The only thing you might need to change is createElement, I think.","msgtype":"m.text"},"ts":1357938581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: I said that, actually.","msgtype":"m.text"},"ts":1357938588000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"uhhh","msgtype":"m.text"},"ts":1357938592000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1357938592000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1357938594000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: what about all the others?","msgtype":"m.text"},"ts":1357938598000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: The tagname in any case would be the component's name.","msgtype":"m.text"},"ts":1357938603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do I use querySelector?","msgtype":"m.text"},"ts":1357938605000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: seems right though. It's basically the same as the earlier x-geomap proposal.","msgtype":"m.text"},"ts":1357938607000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what? how in the...","msgtype":"m.text"},"ts":1357938622000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"please explain","msgtype":"m.text"},"ts":1357938626000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: i disagree with the premise that apps are written entirely from script","msgtype":"m.text"},"ts":1357938629000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: but that doesn't seem to affect the argument","msgtype":"m.text"},"ts":1357938643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I would say the premise is that apps are very much less interested in semantic clarity or backward UA compat","msgtype":"m.text"},"ts":1357938659000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"Hixie, not entirely, but many recent ones are a panel shell with all other creation done in script","msgtype":"m.text"},"ts":1357938660000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"bkardell_: i wrote that page today, yes","msgtype":"m.text"},"ts":1357938661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"csuwldcat: <x-foo/h1> still creates an <x-foo> element.  It just changes the default extension, for the purpose of things that care about it, from whatever <element name=x-foo extends=\"???\"> said, to h1.","msgtype":"m.text"},"ts":1357938669000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: when the etherpad was started","msgtype":"m.text"},"ts":1357938676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I disagree with this premise, too! I did not say anything about them being written entirely from script","msgtype":"m.text"},"ts":1357938677000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"app frequently do not work at all without the proper requirements and trying to push them into that realm is flawed","msgtype":"m.text"},"ts":1357938689000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"dglazkov: i don't understand the point you are making then","msgtype":"m.text"},"ts":1357938693000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: can't we use another prefix? E.g. \"c-\" meaning component?","msgtype":"m.text"},"ts":1357938712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: As a meta-comment, I do find it troublesome to hold apps hostage to documents.  I've had to fight against this in CSS land for a long time.","msgtype":"m.text"},"ts":1357938715000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I don't care what the prefix is.","msgtype":"m.text"},"ts":1357938722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: x- is so overused and for something completely different to boot","msgtype":"m.text"},"ts":1357938723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: okay. When you are writing say, an game app.","msgtype":"m.text"},"ts":1357938726000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"you have several screens that appear during the game","msgtype":"m.text"},"ts":1357938743000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"these screens are implemented as <template> instances in your doc","msgtype":"m.text"},"ts":1357938760000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"all... did someone comment on my observation that <select/geomap actually does break things that dont have the exact quirks of today's parsers","msgtype":"m.text"},"ts":1357938769000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"you instantiate them and use them as necessary","msgtype":"m.text"},"ts":1357938777000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bkardell_: please elaborate","msgtype":"m.text"},"ts":1357938791000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I think it is a red-herring that it looks like that proposal meets all reqs","msgtype":"m.text"},"ts":1357938792000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"for anyone but the app, the markup content of these screens is completely uninteresting","msgtype":"m.text"},"ts":1357938798000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"which browsers, and where?","msgtype":"m.text"},"ts":1357938801000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"crawlers will hate this","msgtype":"m.text"},"ts":1357938804000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sorry correction","msgtype":"m.text"},"ts":1357938813000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"crawlers will want to ignore this content","msgtype":"m.text"},"ts":1357938820000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bkardell_: they're not quirks of today's browsers, today's browsers all implement the html parser spec which is pretty specific about how to parse this.","msgtype":"m.text"},"ts":1357938826000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if they don't, they will produce junk knowledge about this app as a document","msgtype":"m.text"},"ts":1357938850000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"hixie: I'm not sure I see the distinction","msgtype":"m.text"},"ts":1357938861000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"(re: wiki, my position is that <select/geomap> fails requirement 4)","msgtype":"m.text"},"ts":1357938867000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"just read the wiki","msgtype":"m.text"},"ts":1357938868000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: if your thesis is that we don't care about semantics for games, then i disagree","msgtype":"m.text"},"ts":1357938872000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lots of tools parse html that don't","msgtype":"m.text"},"ts":1357938872000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"and do really well","msgtype":"m.text"},"ts":1357938878000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"dglazkov: though i will grant you that many people will be of that opinion","msgtype":"m.text"},"ts":1357938883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<x-geomap> doesn't even fail the reqs by your own definitions","msgtype":"m.text"},"ts":1357938889000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: Arguably, <select/geomap> fails 7, due to our repeated assertions that it's likely to become common to just extend an <x> element.","msgtype":"m.text"},"ts":1357938895000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if #7 Needs to encourage authors to put a real semantic rather than just skipping that step.","msgtype":"m.text"},"ts":1357938902000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: by the logic of that assertion, people would just use <x class=\"\"> today, and they don't. They at worst use <div class=\"\">, and that is widely considered poor style.","msgtype":"m.text"},"ts":1357938937000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you might want to change this to \"Needs to strictly force authors to put a real semantic rather than just skipping that step, even when it doesn't apply to their use-case\"","msgtype":"m.text"},"ts":1357938943000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"then I can agree, it certainly would meet #7","msgtype":"m.text"},"ts":1357938962000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the reality of web devs, IMHO, is that you can only 'encourage' people by making things that feel good ... if being semantic has tangible benefits devs will do it, if you try to force it, they will revolt","msgtype":"m.text"},"ts":1357938985000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"Hixie: many devs don't know <x> would be evaluated as Unknow inline element","msgtype":"m.text"},"ts":1357938997000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"if they did, they might","msgtype":"m.text"},"ts":1357939001000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: It's really not considered poor style - quite a lot of app frameworks do precisely that (ask sjmiles).  There's a worrying number that also just straight-up use custom tagnames, without even a prefix to disambiguate.","msgtype":"m.text"},"ts":1357939005000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hell, most of our web devs didn't realize that","msgtype":"m.text"},"ts":1357939011000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"people understand the notion of semantic-goodness, but again, without a tangible benefit, the boss yelling at them to meet the deadline is massively more persuasive","msgtype":"m.text"},"ts":1357939057000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"I think maybe wycats_ has some experience there too :)","msgtype":"m.text"},"ts":1357939067000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"all wild generalizations by me are IMO :)","msgtype":"m.text"},"ts":1357939085000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"or, IME (in my experience)","msgtype":"m.text"},"ts":1357939107000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"dglazkov: Hixie: I have strong objections to the wording of 5 & 7","msgtype":"m.text"},"ts":1357939110000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"5 assumes there are even semantics applicable, a dubious assertion","msgtype":"m.text"},"ts":1357939123000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: it has an entry in wiktionary: http://en.wiktionary.org/wiki/divitis","msgtype":"m.text"},"ts":1357939128000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and 7 just askes that it encourges the use of fallback content","msgtype":"m.text"},"ts":1357939138000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"which all would, through our extensive developer evangelism networks","msgtype":"m.text"},"ts":1357939165000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"this is another good point. Restriction breeds perversion. Designing something that will not be palatable to devs, even if with good intentions (see reqs 5 and 7) will just result in more craziness.","msgtype":"m.text"},"ts":1357939192000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: I'm quite aware of the dislike of the pattern in semantic circles.  I'm also aware of the heavy and continuing use of it anyway within app frameworks.","msgtype":"m.text"},"ts":1357939199000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"when you have people like zeldman and allsopp who criticise it so much they have coined a term for it, i think it's \"considered poor style\"","msgtype":"m.text"},"ts":1357939202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I can't wait for the next entry after this is released: xitis","msgtype":"m.text"},"ts":1357939207000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: sure, just like layout tables are still widely used","msgtype":"m.text"},"ts":1357939218000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"@dglazkov: yes, thank you for again saying what's in my head, but much more clearly :)","msgtype":"m.text"},"ts":1357939226000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"TabAtkins: there's a difference between that and just embracing it and defining it as the best practice in the spec","msgtype":"m.text"},"ts":1357939251000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if you relent on the link document thing, I think you'll find devs will tie in the semantics anyway","msgtype":"m.text"},"ts":1357939265000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"layout tables used to be necessary to get the work done, what's left now are reverberations of that","msgtype":"m.text"},"ts":1357939268000,"senderName":"sjmiles","senderId":"sjmiles@irc"},
{"content":{"body":"because it actually benefits them to inherit the correct proto","msgtype":"m.text"},"ts":1357939276000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hixie: You know it's incorrect to say that we're just rubberstamping div-itis.","msgtype":"m.text"},"ts":1357939277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Due to the extends=\"\" attribute.","msgtype":"m.text"},"ts":1357939291000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And my proposal for optionally allowing slash-tag as well.","msgtype":"m.text"},"ts":1357939305000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but he is setting up the circular argument that you can't parse that, to the advantage of his narrative","msgtype":"m.text"},"ts":1357939321000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: where were you when I was trying to make this argument on the bug that re-opened this?","msgtype":"m.text"},"ts":1357939335000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Hixie, I don't mean anything against you, but that is the case","msgtype":"m.text"},"ts":1357939336000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"bkardell_: Ignoring the walls of text.  ^_^","msgtype":"m.text"},"ts":1357939350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: fair enough","msgtype":"m.text"},"ts":1357939357000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Are there any other non-alphanumeric characters allowed in Name productions besides dash and underscore?","msgtype":"m.text"},"ts":1357939392000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is too lazy to look it up.","msgtype":"m.emote"},"ts":1357939398000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: slash tags as optional, that's another good compromise","msgtype":"m.text"},"ts":1357939403000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"good thinking!","msgtype":"m.text"},"ts":1357939408000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I personally like forward defines. I would allow the browser to know which elements are going to be custom in advance.","msgtype":"m.text"},"ts":1357939426000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"(Though actually, keeping the slash-tag so that the actual tagname parses equivalently in all browsers is probably a good thing.)","msgtype":"m.text"},"ts":1357939428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I worry about this slash thing brothers","msgtype":"m.text"},"ts":1357939437000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"have you read my points on it?","msgtype":"m.text"},"ts":1357939447000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"are they all invalid?","msgtype":"m.text"},"ts":1357939452000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"but it's untenable in real life (the case where you have multiple libraries of components, one including another, etc.)","msgtype":"m.text"},"ts":1357939455000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bkardell_: Haven't read too much, no.","msgtype":"m.text"},"ts":1357939464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: not only that, but how are you going to throw late parse errors?","msgtype":"m.text"},"ts":1357939466000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I'd prefer btw if we could come up with something that's prefixless. Per that talk Hixie referenced the other day on G+ it might actually be nice if native elements could be minted. Of course, we'd have to do it in such a way that new HTML elements can still be created somehow...","msgtype":"m.text"},"ts":1357939466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if <input/foo> is invalid, because foo cannot be attached to input, then you have to throw, but you can't do it until the linked compontents file is parsed anyway","msgtype":"m.text"},"ts":1357939511000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: As far as I can tell, the only strategy that's ever worked for combining language-defined and author-defined is (1) prefixing the author-defined stuff, or (2) assuming that author-defined stuff won't happen that often anyway, and just stomping on them when you extend the language.","msgtype":"m.text"},"ts":1357939519000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"beccause you don't know it is invalid yet","msgtype":"m.text"},"ts":1357939522000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: in our use of the x- compontent tags, we generally have semeantic content as the payload","msgtype":"m.text"},"ts":1357939562000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: I guess otherwise you'd have to tell in advance somehow this is an author-binding...","msgtype":"m.text"},"ts":1357939563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: And be okay with author-bindings stomping language-bindings when the names collide.","msgtype":"m.text"},"ts":1357939585000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: right","msgtype":"m.text"},"ts":1357939594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Of course given HTML's silly parser it's not actually tenable","msgtype":"m.text"},"ts":1357939647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is, again, one of the reasons i prefer <select is=map> - there's no stomping of language-bindings and author-bindings :)","msgtype":"m.text"},"ts":1357939653000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"(still here)","msgtype":"m.text"},"ts":1357939654000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"hober: I don't entirely hate that","msgtype":"m.text"},"ts":1357939675000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"hober, other than the fact you just infered the prototype inheritance","msgtype":"m.text"},"ts":1357939680000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hober: I hate it.  ^_^","msgtype":"m.text"},"ts":1357939687000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: the main drawback is that you have to know the root element","msgtype":"m.text"},"ts":1357939692000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"and doing so will cause devs to think they can add is=\"map\" to non-selects","msgtype":"m.text"},"ts":1357939700000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"(For the reasons already stated - it looks mutable, it requires restating the inheritance in every instantiation, etc.)","msgtype":"m.text"},"ts":1357939703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"personally, I like my proposal better, but..","msgtype":"m.text"},"ts":1357939713000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"even if that would cause internal compontent logic to go haywire","msgtype":"m.text"},"ts":1357939717000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I'm unsure - does the extension of a tag change the prototype chain of the newly-constructed element, or just some other information accessible to a11y stuff and such?","msgtype":"m.text"},"ts":1357939757000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it changes it","msgtype":"m.text"},"ts":1357939774000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: the mutability thing is only bothersome until you realize that lots of things in html are like that","msgtype":"m.text"},"ts":1357939783000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"the div/x-foo solution is clever, is there anyway we can default to 'div/'? I realize this poses a moral hazard, but it makes my objections go away","msgtype":"m.text"},"ts":1357939784000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"emits a new proto","msgtype":"m.text"},"ts":1357939786000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: you can't change the type of a script tag, for example","msgtype":"m.text"},"ts":1357939797000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"I think people could overcome it if it really gave all the rest of the benefits right","msgtype":"m.text"},"ts":1357939820000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"sjmiles_: The last proposal on the wiki page now has that - it's the current spec (just <x-tag>, with <element extends=\"\"> defining the extension) + the ability to override the extension with slash-tag: http://wiki.whatwg.org/wiki/Components","msgtype":"m.text"},"ts":1357939830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: They're rare, though, and those attributes that act like that are little-used, I think.","msgtype":"m.text"},"ts":1357939850000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, @type isn't even a required attribute as long as you're using JS.","msgtype":"m.text"},"ts":1357939861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I've talked to several people who quickly changed their mind - that's all I'm saying","msgtype":"m.text"},"ts":1357939876000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: ah sorry, missed it, I'm +100 on that :)","msgtype":"m.text"},"ts":1357939881000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"if we dont have to - let's not","msgtype":"m.text"},"ts":1357939882000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"but... it's not as bad as / in my mind","msgtype":"m.text"},"ts":1357939895000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"you can change type=\"\" of <script> and API-wise that's observable","msgtype":"m.text"},"ts":1357939911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Weigh the pros and cons","msgtype":"m.text"},"ts":1357939914000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"all HTML attributes are mutable","msgtype":"m.text"},"ts":1357939918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but they don't necessarily have an effect - yeah?","msgtype":"m.text"},"ts":1357939937000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"couldnt that be the case here?","msgtype":"m.text"},"ts":1357939942000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"it's just that not all mutations have side effects beyond normal DOM changes, but most do","msgtype":"m.text"},"ts":1357939944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah - I'm not saying anything diff... I said that in the email thread I think","msgtype":"m.text"},"ts":1357939961000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"it has pros that / don't have","msgtype":"m.text"},"ts":1357939983000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"I saw someone suggesting <input type> was not mutable, but that certainly is, and will change the widget","msgtype":"m.text"},"ts":1357940006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1357940016000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"bkardell_: Definitely.","msgtype":"m.text"},"ts":1357940021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I swear I just tried that yesterday","msgtype":"m.text"},"ts":1357940024000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"regularly uses that mutability to change type=password to type=text.","msgtype":"m.emote"},"ts":1357940032000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hrm","msgtype":"m.text"},"ts":1357940043000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: we should maybe have some kind of API on type=password","msgtype":"m.text"},"ts":1357940051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: For?","msgtype":"m.text"},"ts":1357940062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: or get UAs to implement a checkbox like think to show the password","msgtype":"m.text"},"ts":1357940072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"attributes are non-starter","msgtype":"m.text"},"ts":1357940078000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: Ah, interesting.","msgtype":"m.text"},"ts":1357940080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: no, it won't","msgtype":"m.text"},"ts":1357940084000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: What are you contradicting?","msgtype":"m.text"},"ts":1357940102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"let's get everyone to agree on that.","msgtype":"m.text"},"ts":1357940105000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: it's all over the place in OS UI, I'd love to have it in browsers :)","msgtype":"m.text"},"ts":1357940108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Agreed!","msgtype":"m.text"},"ts":1357940114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the fact you can change the attribute","msgtype":"m.text"},"ts":1357940119000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"oh misread","msgtype":"m.text"},"ts":1357940126000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"it was type","msgtype":"m.text"},"ts":1357940129000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: Since the right side of inputs seems to be okay to place widgety things, maybe the button can just go there.","msgtype":"m.text"},"ts":1357940135000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thought it was a custom element attr","msgtype":"m.text"},"ts":1357940136000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: agreed","msgtype":"m.text"},"ts":1357940157000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1357940174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: slash is going to be a nightmare to polyfill as well","msgtype":"m.text"},"ts":1357940203000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hober: I highly recommend reading https://www.w3.org/Bugs/Public/show_bug.cgi?id=18669 for a good discussion on that. Sorry it's long :)","msgtype":"m.text"},"ts":1357940216000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"https://github.com/mozilla/web-components/blob/master/document.register.js","msgtype":"m.text"},"ts":1357940228000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: I think the key here is to examine requirement 5 and determine if it really is a show-stopper.","msgtype":"m.text"},"ts":1357940264000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"if it is, then we go back to drawing table","msgtype":"m.text"},"ts":1357940272000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so... for everyone here","msgtype":"m.text"},"ts":1357940283000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"if it isn't then we already have a proper solution with optional slash-type","msgtype":"m.text"},"ts":1357940286000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"does everyone realize that <select/map today parses with map as an attribute?","msgtype":"m.text"},"ts":1357940303000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"bkardell_: Yes, it's been repeatedly explained.","msgtype":"m.text"},"ts":1357940313000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"... unless TabAtkins added something new to http://wiki.whatwg.org/wiki/Components in the last secs","msgtype":"m.text"},"ts":1357940320000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357940321000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: I have not.","msgtype":"m.text"},"ts":1357940325000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: but brian's solution does that","msgtype":"m.text"},"ts":1357940333000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"not at the tag level, but via fallback contents","msgtype":"m.text"},"ts":1357940343000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"oh.","msgtype":"m.text"},"ts":1357940353000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"why is it not on http://wiki.whatwg.org/wiki/Components?","msgtype":"m.text"},"ts":1357940358000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins:  but the same thing without the / would not be a webcomponent","msgtype":"m.text"},"ts":1357940364000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"pokes bkardell","msgtype":"m.emote"},"ts":1357940376000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: http://paste.mootools.net/f305b18b7","msgtype":"m.text"},"ts":1357940390000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"why doesn't extends define an interface name rather than an element name?","msgtype":"m.text"},"ts":1357940395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes much more sense to extend HTMLHeadingElement than h1 or h2","msgtype":"m.text"},"ts":1357940411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: huh?","msgtype":"m.text"},"ts":1357940413000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"bkardell_: Correct, <select> by itself would not be, in that proposal.  In my proposal, <x-...> indicates a component, and the slash just indicates an override extension.","msgtype":"m.text"},"ts":1357940434000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or HTMLModElement or HTMLQuoteElement","msgtype":"m.text"},"ts":1357940436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it could just as easily map to that","msgtype":"m.text"},"ts":1357940449000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"fwiw, my notion of a default semantic type is not actually in the wiki","msgtype":"m.text"},"ts":1357940449000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"annevk: Would make sense, I suppose.  It does mean putting DOM stuff into HTML, which hasn't happened before.","msgtype":"m.text"},"ts":1357940465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the last one is close, but it requires a-priori access to element tag, which is no bueno","msgtype":"m.text"},"ts":1357940466000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sjmiles_: unknowns read as spans, right dglazkov?","msgtype":"m.text"},"ts":1357940474000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: More or less, yeah.","msgtype":"m.text"},"ts":1357940485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTMLUnknownElement I suppose (is that crazy?)","msgtype":"m.text"},"ts":1357940500000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sjimles_ not really","msgtype":"m.text"},"ts":1357940508000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"annevk: As csuwldcat suggests, having extends=\"h1\" just imply the actual DOM interface rather than the specific tag might work too.","msgtype":"m.text"},"ts":1357940525000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so dglazkov, if you look at that example, let's imagine my map, is a canvas map","msgtype":"m.text"},"ts":1357940525000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"wait wait, the last proposal http://wiki.whatwg.org/wiki/Components#Proposal:_.3Cx-geomap.3E_for_the_default_extension_.28specified_in_.3Celement.3E.29.2C_.3Cx-geomap.2Fselect.3E_to_override is not what I expected","msgtype":"m.text"},"ts":1357940534000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"that blows up this whole argument","msgtype":"m.text"},"ts":1357940542000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: That doesn't gain us much, though, as Hixie brings up further examples (all sectioning elements, all phrasing elements) which also make sense, and don't share a reasonable ancestor.","msgtype":"m.text"},"ts":1357940553000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought there was one more proposal about optional fallback, where <x-map> is same as <span/x-map>","msgtype":"m.text"},"ts":1357940561000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: at least it makes more sense from a JS perspective","msgtype":"m.text"},"ts":1357940573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I think that's a separate issue","msgtype":"m.text"},"ts":1357940598000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that can be solved with a repurposed is=\"\" on the <element> def","msgtype":"m.text"},"ts":1357940617000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"correct?","msgtype":"m.text"},"ts":1357940629000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"so Hixie, TabAtkins, dglazkov, what happens when my MAP element is a canvas map?","msgtype":"m.text"},"ts":1357940676000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"you still force me to <select/map> ???","msgtype":"m.text"},"ts":1357940694000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: big surprise; after reviewing that bug thread, i find i'm somewhere between Hixie & hsivonen's positions. :)","msgtype":"m.text"},"ts":1357940699000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: I think you might be lost, then :P","msgtype":"m.text"},"ts":1357940719000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"rofl","msgtype":"m.text"},"ts":1357940731000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1357940732000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: where are you?","msgtype":"m.text"},"ts":1357940734000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"csuwldcat: My proposal (last one in the wiki page) doesn't at all.  Your <x-map> declares whatever its default native semantics are, and author can override per-instance if necessary.","msgtype":"m.text"},"ts":1357940740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: I prefer <select is=map> to <select/map> for several reasons, and prefer <select/map> to anything that involves not saying both \"select\" and \"map\"","msgtype":"m.text"},"ts":1357940784000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: I like that","msgtype":"m.text"},"ts":1357940785000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hober: but attributes are a non-starter for a laundry list of reasons","msgtype":"m.text"},"ts":1357940810000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: my understanding is that some of the semantic meaning is intended for web-crawlers (search engines, and so on), so access to the element definitions can't be a requirement","msgtype":"m.text"},"ts":1357940829000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"one is select.setAttribute(\"is\", \"fun\");","msgtype":"m.text"},"ts":1357940832000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: i disagree","msgtype":"m.text"},"ts":1357940838000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"sjmiles_: not so, google can and does parse all sorts of stuff like that","msgtype":"m.text"},"ts":1357940853000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hober:  can I talk you out of select/map?","msgtype":"m.text"},"ts":1357940862000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357940872000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"talk to Matt Cutts","msgtype":"m.text"},"ts":1357940877000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: That's how Hixie states the requirement.  More specifically, he feels that guaranteed access to the semantics even when you can't follow links (because you're offline, you've archived the one page, etc.) is required.","msgtype":"m.text"},"ts":1357940885000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: select/map isn't my preferred solution, so yeah, you can! :)","msgtype":"m.text"},"ts":1357940887000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: ok","msgtype":"m.text"},"ts":1357940902000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"sjmiles_: I am not as hardline.  Requiring every page be self-contained seems a non-starter to me, because it means bloat in every page and more work for authors.","msgtype":"m.text"},"ts":1357940916000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: he likes is=\"\"","msgtype":"m.text"},"ts":1357940922000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"IMO: anything that requires me as a web dev to define 'x-foo' as a select, and then say 'select' again every time they employ x-foo will make devs batshit","msgtype":"m.text"},"ts":1357940923000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"hober: select is=map isn't my original/preferred, but I could likve","msgtype":"m.text"},"ts":1357940924000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"live*","msgtype":"m.text"},"ts":1357940934000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"he's one of *those* people...jk hober","msgtype":"m.text"},"ts":1357940940000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Also, many apps (what we really care about here) make no sense self-contained anyway - they often *need* the additional resources linked in to work at all.  This is in contrast to documents, which can often be reasonably self-contained without great effort.","msgtype":"m.text"},"ts":1357940951000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it has numerous advantages actually, only 2 downs I can see","msgtype":"m.text"},"ts":1357940957000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"hober: many will likely do <x is=\"select\"","msgtype":"m.text"},"ts":1357940987000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: that's tricky, if we really care about 'apps', the necessity of 5 and 7 is greatly reduced IMO","msgtype":"m.text"},"ts":1357940988000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"I think anyway","msgtype":"m.text"},"ts":1357940993000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: great distinction and point, this is of primary concern to us at Mozilla","msgtype":"m.text"},"ts":1357940994000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: I agree!","msgtype":"m.text"},"ts":1357940997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sjmiles_: I think that documents have little need of Components in the first place.","msgtype":"m.text"},"ts":1357941011000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we are trying to make the web a viable apps platform, and the competition is native platforms","msgtype":"m.text"},"ts":1357941012000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: Whether or not they end up *using* a lot of components is still up in the air, of course.","msgtype":"m.text"},"ts":1357941024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bkardell_: i don't think many people would do that who aren't already doing <x class=map>","msgtype":"m.text"},"ts":1357941025000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"if the web seems cumbersome and hard to deal with, we lose, we all lose","msgtype":"m.text"},"ts":1357941037000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: The hope is that the ugliness of the prefix prevents widespread use of API-free components solely to make \"more semantic\" names.","msgtype":"m.text"},"ts":1357941042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins:don't have to ignore them, but lower priority, right? I agree to that","msgtype":"m.text"},"ts":1357941044000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"While the terseness of the prefix doesn't put off apps that do need API-full components.","msgtype":"m.text"},"ts":1357941074000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwldcat: i don't think that's a universally-held position (that it's native v. web, yadda yadda)","msgtype":"m.text"},"ts":1357941074000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: I agree completely ... that's why I start at \"terseness trumps\" ... but to not completely remove 'documents' as a use case, I want something options","msgtype":"m.text"},"ts":1357941087000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"optional","msgtype":"m.text"},"ts":1357941091000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"hober: im in the trenches talking to all sorts of partner app companies daily bro, it is","msgtype":"m.text"},"ts":1357941104000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Thus, hopefully, the current language design means that documents use few components, and only really for app-like things, while the meaningful parts use native elements.","msgtype":"m.text"},"ts":1357941119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And for apps, the things that *do* map decently to native semantics will often just use them anyway.","msgtype":"m.text"},"ts":1357941140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"who put \"The \"x-\" prefix is ugly.\"","msgtype":"m.text"},"ts":1357941144000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"I call bs","msgtype":"m.text"},"ts":1357941150000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Hixie: another unsung benefit: x-tabbox will light a fire under the standardistas to standardize common tags sooner","msgtype":"m.text"},"ts":1357941157000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"another thought: _why_ would a non \"app\" use web components? what would be the motivation?","msgtype":"m.text"},"ts":1357941164000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"The optional slash-tag thing is actually useful there - I find that I agree with Hixie quite a bit in that if you have a component for phrasing-level elements, it'll probably apply for *all* of them.","msgtype":"m.text"},"ts":1357941176000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"with the hapless marass of is=\"\", we can go about coining useless document tags that do nothing interesting and simply carry on as usual","msgtype":"m.text"},"ts":1357941195000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Writing <x-foo/i> and <x-foo/b> instead of <x-foo-i> and <x-foo-b> (and having to double/triple/more up your <element> definitions) seems just fine.","msgtype":"m.text"},"ts":1357941202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the whole point of custom elements is to enable instantiate an object tree given markup","msgtype":"m.text"},"ts":1357941205000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"And means that the sematnics are self-contained.","msgtype":"m.text"},"ts":1357941208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you never use the object tree, what good will <x-foo> be?","msgtype":"m.text"},"ts":1357941221000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"yes, I've been trying to make these distinctions for a while now: app vs document, semantic HTML vs. application HTML, machine vs human semantics, and fallback vs semantic hinting ... seems like these are all conflated in this discussion","msgtype":"m.text"},"ts":1357941228000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sjmiles_: it's a hard line to draw though","msgtype":"m.text"},"ts":1357941339000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"for people that see a component for x-fancy-input, there is an obvious problem that it obscures the 'input-ness'","msgtype":"m.text"},"ts":1357941348000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"when does the small thing become big","msgtype":"m.text"},"ts":1357941350000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"dglazkov: \"non-app\" web pages often sprinkle widgety-things here and there; i assume we'd like such things to be built with components","msgtype":"m.text"},"ts":1357941358000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"bkardell_: it is ugly","msgtype":"m.text"},"ts":1357941360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would argue it's intent not size","msgtype":"m.text"},"ts":1357941361000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"or when does it become \"red\"","msgtype":"m.text"},"ts":1357941363000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"can I get at least an admittance from the is=\"\" foo/bar crowd, that the way fallback is done today in things like object could easily work here","msgtype":"m.text"},"ts":1357941380000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"when I make x-report-generator, I much less concerned with losing some obvious native semantic","msgtype":"m.text"},"ts":1357941387000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"hober: Yes, it's the \"here and there\" thing that I find important - most of the content *probably* won't be components.","msgtype":"m.text"},"ts":1357941393000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and that the only difference is that someone wants this to be forced on people from the top tag down","msgtype":"m.text"},"ts":1357941401000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: sure.","msgtype":"m.text"},"ts":1357941411000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: That's not taste?","msgtype":"m.text"},"ts":1357941414000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"csuwldcat: Where you nest the fallback into the element?  I don't admit that it could \"easily work\" here.","msgtype":"m.text"},"ts":1357941421000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: ... and today, this is already <script> document.write ... chunk, not anything semantic","msgtype":"m.text"},"ts":1357941429000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: Becauset he contents of a component are part of its API.","msgtype":"m.text"},"ts":1357941431000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: do tell?","msgtype":"m.text"},"ts":1357941434000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: please pick a better word so I can understand, or we should remove it from the wiki :)","msgtype":"m.text"},"ts":1357941435000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"for 'sprinkles' and highly seamantice overrides, we surely need some semantic hinting and perhaps fallback behavior","msgtype":"m.text"},"ts":1357941442000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"not if we include a fallback attribute","msgtype":"m.text"},"ts":1357941446000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: yeah, if we do this right we can improve on the status quo","msgtype":"m.text"},"ts":1357941446000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: need facts, not opinions","msgtype":"m.text"},"ts":1357941454000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"for giant apps that never will work in ancient browser, or without JS, and so on, the semantic hinting is burdensome","msgtype":"m.text"},"ts":1357941463000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"TabAtkins: dglazkov: that would specifically tell the WC code not to use it","msgtype":"m.text"},"ts":1357941468000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: too much of this is opinion already :)","msgtype":"m.text"},"ts":1357941470000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"IMO neither use case is invalid, so we need an OPTION","msgtype":"m.text"},"ts":1357941476000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"annevk: You'll have a hard time arguing that \"x-\" is particularly uglier than \"div/\".  ^_^","msgtype":"m.text"},"ts":1357941479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: yup. This is why we shouldn't have nasty hacks like magic attributes that never change.","msgtype":"m.text"},"ts":1357941482000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: Possible, sure, but ugly in its own way, imo.","msgtype":"m.text"},"ts":1357941499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: this is why we shouldn't have nasty hacks like sending custom element names over the wire :)","msgtype":"m.text"},"ts":1357941506000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: in use today","msgtype":"m.text"},"ts":1357941508000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"no developer ramp time","msgtype":"m.text"},"ts":1357941516000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"easy to understand and completely opt-in, maintaining the optimal interface we know is better","msgtype":"m.text"},"ts":1357941540000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: I don't think \"fallback as child element\" is in use today for component-type things.  Only native elements that already have it built in.","msgtype":"m.text"},"ts":1357941544000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<object>","msgtype":"m.text"},"ts":1357941552000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: <aside is=adsense> :)","msgtype":"m.text"},"ts":1357941555000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1357941557000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"same-ish","msgtype":"m.text"},"ts":1357941565000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: Another bad part of it is expressed on the wiki, too - if you don't really need to express fallback, just what it descends from, then it's just a silly talisman.","msgtype":"m.text"},"ts":1357941588000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: it's a nice idea. but it's an ugly hack: aside.setAttribute(\"is\", \"notAdsense\"); // still adsense","msgtype":"m.text"},"ts":1357941594000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: correct, as it will be for the majority of use-cases","msgtype":"m.text"},"ts":1357941626000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hober: custom element names, even select/map is better than that -- at least you're call things what they are","msgtype":"m.text"},"ts":1357941631000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: seems kinda similar to <script src> to me","msgtype":"m.text"},"ts":1357941642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but then you totally break parity between html and xhtml","msgtype":"m.text"},"ts":1357941645000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"dglazkov: that's not too ugly","msgtype":"m.text"},"ts":1357941648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we are letting one concern, that is still addressed via other proposals, dominate the API and the use-cases, when itself is not a majority use-case","msgtype":"m.text"},"ts":1357941665000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that is Unintuitive, Horse-Cart API Design 101","msgtype":"m.text"},"ts":1357941698000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"IMO, if HTML5 is ever going to battle native apps (particularly on mobile) we need to at least allow for streamlined syntax ... if you don't, devs will simply build something like it anyway, in Babel-Tower fashion","msgtype":"m.text"},"ts":1357941712000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"Cart-Horse, rather ;)","msgtype":"m.text"},"ts":1357941714000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"annevk: well, it's no kinda like src. script.setAttribute(\"src\") will still change the value","msgtype":"m.text"},"ts":1357941716000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"the whole element becomes numb.","msgtype":"m.text"},"ts":1357941726000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Annvk: script src, yes...I keep saying","msgtype":"m.text"},"ts":1357941749000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Gglazkov: I could live with that...easily learnable","msgtype":"m.text"},"ts":1357941794000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: but given there is only one use of script on the net today on 99.9% of sites, the argument is laced with obscurity and irrelevance","msgtype":"m.text"},"ts":1357941806000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: hrm? that doesn't sound right","msgtype":"m.text"},"ts":1357941844000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"dglazkov: did anyone seriously suggest changing setAttribute() semantics? doubt it","msgtype":"m.text"},"ts":1357941847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Csuwldcat: disagree.","msgtype":"m.text"},"ts":1357941854000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: could you live with people adding is=\"\" to elements that do nothing or throws errors, unless you meticulously inspect a linked document?","msgtype":"m.text"},"ts":1357941858000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"most sites have 9,000 scripts for +1 buttons and ad-servers and all kinds of gunk","msgtype":"m.text"},"ts":1357941865000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"annevk: indeed; i'm not suggesting that we should go anywhere near messing with setAttribute","msgtype":"m.text"},"ts":1357941876000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Csuwldcat: yes...if it is the best equibrium we can find","msgtype":"m.text"},"ts":1357941904000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"but can we think for a second about the word equilibrium?","msgtype":"m.text"},"ts":1357941943000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: I can conceed that hixie and annevk and all have a kind of a point there","msgtype":"m.text"},"ts":1357941945000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"csuwldcat:  I think it is all about prioritizing the \"requirements\"","msgtype":"m.text"},"ts":1357941974000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"bkardell: I 100% agree","msgtype":"m.text"},"ts":1357941993000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"and I would like to do it according to occurrence, relevance/use-case/total use-cases","msgtype":"m.text"},"ts":1357942030000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: I dont know for sure if I think they all are the same value, but if we weigh them out and find select is= yields the best equilbrium... I could learn to cope","msgtype":"m.text"},"ts":1357942034000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Can Hixie agree to rewrite the polyfill","msgtype":"m.text"},"ts":1357942098000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I think it would be a great exercise for him to get in touch with the pain points","msgtype":"m.text"},"ts":1357942113000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: if you can get an honest fact pro/con of the implications then we can take up prioritization discussion","msgtype":"m.text"},"ts":1357942115000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"Can anyone here just write a few of these? and them make their case?","msgtype":"m.text"},"ts":1357942140000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"The problem with developer ergonmics of \"is\" attribute become quite obvious once you have an app with 100s of components.","msgtype":"m.text"},"ts":1357942154000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I'm curious to see a show of hands as to who has A) read the full spec B) tried to polyfill is=\"\" C) written components with it","msgtype":"m.text"},"ts":1357942177000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"all 3","msgtype":"m.text"},"ts":1357942189000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"and years prior making custom component solutions","msgtype":"m.text"},"ts":1357942200000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"My spidy sense is telling me that the semanticists haven't","msgtype":"m.text"},"ts":1357942204000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I suspect the raised hands are two - you, and sjmiles_.","msgtype":"m.text"},"ts":1357942205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just got a feeling about it","msgtype":"m.text"},"ts":1357942210000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"lol :)","msgtype":"m.text"},"ts":1357942213000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"heey, I have 3 too","msgtype":"m.text"},"ts":1357942233000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so, I see both sides","msgtype":"m.text"},"ts":1357942234000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"the problem I have is the requirement to FORCE semantics","msgtype":"m.text"},"ts":1357942259000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"seems to me that's really important to Hixie","msgtype":"m.text"},"ts":1357942269000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"and is ultimately where we keep getting stuck","msgtype":"m.text"},"ts":1357942276000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"opining from an armchair, and telling of the truth from the trenches after putting some skin in the game are two very different things","msgtype":"m.text"},"ts":1357942282000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"well yes, but the 'armchair' is just actually a different set of gnarly blood-filled trenches","msgtype":"m.text"},"ts":1357942306000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"don't forget :)","msgtype":"m.text"},"ts":1357942310000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sjmiles_: that is squarely the issue, yes","msgtype":"m.text"},"ts":1357942315000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"forced vs elected","msgtype":"m.text"},"ts":1357942322000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"neither of the competing proposals fail to address the issue, there is only the difference between forced and elected","msgtype":"m.text"},"ts":1357942374000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"hober: btw, <aside><x-adsense> is probably better semantically anyway.","msgtype":"m.text"},"ts":1357942393000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"but I digress","msgtype":"m.text"},"ts":1357942426000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sjmiles_: Im not going to lie to people in the docs we write at mozilla, we're going to be very upfront about why the majority of the time they are playing in a mud pit","msgtype":"m.text"},"ts":1357942437000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I have edited the wiki - feel free to yell at me","msgtype":"m.text"},"ts":1357942452000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"if we go Vader on this, someone please own it, wear the mantle","msgtype":"m.text"},"ts":1357942466000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: I want to propose a slight alteration of your proposal","msgtype":"m.text"},"ts":1357942496000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: not \"override\", but \"indicate\".","msgtype":"m.text"},"ts":1357942510000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: we're not done yet, don't go nuclear too soon","msgtype":"m.text"},"ts":1357942533000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"you can't override <x-qux/h1> if x-quz is an HTMLDivElement. Thus, the slash-tag becomes the optional indicator of base semantic element","msgtype":"m.text"},"ts":1357942560000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: Same diff.  You're ignoring the one specified in <element>.","msgtype":"m.text"},"ts":1357942561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: Oh, no, I was supposing that you *could* do exactly that.","msgtype":"m.text"},"ts":1357942578000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay. Can you add this to wikeee","msgtype":"m.text"},"ts":1357942596000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"So, for example, a phrasing element component could default-extend <span>, but then you could do /b, /i, /u, whatever.","msgtype":"m.text"},"ts":1357942598000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: good point","msgtype":"m.text"},"ts":1357942606000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":" /em","msgtype":"m.text"},"ts":1357942607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just want this to be an option for specifying base semantics.","msgtype":"m.text"},"ts":1357942629000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: What needs to be added?  What I just said is exactly what the wiki indicates. ^_^","msgtype":"m.text"},"ts":1357942630000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: If you don't specify any base in <element>, I assume it extends <div> or somesuch.","msgtype":"m.text"},"ts":1357942649000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the word override has proto smashing implications","msgtype":"m.text"},"ts":1357942655000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"tabatkins: but not what the wiki overrides","msgtype":"m.text"},"ts":1357942658000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"he wants you to scope it tighter","msgtype":"m.text"},"ts":1357942662000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":":-p","msgtype":"m.text"},"ts":1357942662000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"indicates/overrides... see what I did there","msgtype":"m.text"},"ts":1357942683000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"csuwldcat: It should indeed proto-smash.  If the element you're extending shows up in your proto, then doing /em should make HTMLEmElement show up in your proto chain.","msgtype":"m.text"},"ts":1357942692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tabatkins: but only if it is more specific?","msgtype":"m.text"},"ts":1357942719000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"TabAtkins: what if the custom element expects a certain proto (like methods, props)?","msgtype":"m.text"},"ts":1357942733000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bkardell_: No need to care about that.  (Anyway, I think the HTML*Element set are all leaf nodes.)","msgtype":"m.text"},"ts":1357942740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: Then you break at runtime, presumably.","msgtype":"m.text"},"ts":1357942752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that seems bad?","msgtype":"m.text"},"ts":1357942760000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Don't do bad things?","msgtype":"m.text"},"ts":1357942765000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems like you suys are into something else now","msgtype":"m.text"},"ts":1357942765000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"I cant say \"an input is now an img'","msgtype":"m.text"},"ts":1357942775000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"why would I do that with custom elements?","msgtype":"m.text"},"ts":1357942781000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"TabAtkins: can't do that","msgtype":"m.text"},"ts":1357942799000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: native elements don't extend each other.  Components can.","msgtype":"m.text"},"ts":1357942800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, I see there are interesting possibilities there, but adding new abilities seems a bad idea at this point","msgtype":"m.text"},"ts":1357942802000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"yes, even more to the point","msgtype":"m.text"},"ts":1357942814000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"if I extend x-bar from x-foo, I can't then say \"shove x-zot\" prototype on it","msgtype":"m.text"},"ts":1357942828000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"Where do you get the information about what element you're extending if not from the proto chain?","msgtype":"m.text"},"ts":1357942832000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what if the original proto and the props/methods it offered were materially relied upon in the component logic?","msgtype":"m.text"},"ts":1357942842000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: You certainly can.  Just fiddle with __proto__.","msgtype":"m.text"},"ts":1357942845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwldcat: Then it breaks.  Again, don't do stupid things.","msgtype":"m.text"},"ts":1357942857000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you smash that, it literally could be a monkey wrench in the gears","msgtype":"m.text"},"ts":1357942863000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"yes, it utterly breaks","msgtype":"m.text"},"ts":1357942864000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"it's nonesensical","msgtype":"m.text"},"ts":1357942880000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"but with proper spelling","msgtype":"m.text"},"ts":1357942886000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"For the situations we've talked about (component for all headings, all phrasing elements, all sectioning elements), it doesn't break.","msgtype":"m.text"},"ts":1357942891000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the funny thing is, you don't know you're \"doing stupid things\"","msgtype":"m.text"},"ts":1357942891000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: that's a total foot gun","msgtype":"m.text"},"ts":1357942907000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"(Because the prototypes don't actually offer much of anything.)","msgtype":"m.text"},"ts":1357942907000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes, this is what I'm calling 'new interesting possibilities', which IMO is a mistake to add on","msgtype":"m.text"},"ts":1357942911000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sure, now let's get real about how developers will actually try to use these things","msgtype":"m.text"},"ts":1357942915000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"it will be a field of landmies","msgtype":"m.text"},"ts":1357942929000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"most of what I'm doing is entirely dependent on a deterministic proto chain","msgtype":"m.text"},"ts":1357942931000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"mines","msgtype":"m.text"},"ts":1357942932000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"In Javascript you cna already do things like constructor.call(anotherObject).","msgtype":"m.text"},"ts":1357942945000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you just traded a handknife for a footgun","msgtype":"m.text"},"ts":1357942952000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"yes, but if you just randomly do that, nothing will work","msgtype":"m.text"},"ts":1357942958000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1357942964000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"tabatkins: but you have to at least know significant details of js and dom to do it","msgtype":"m.text"},"ts":1357942967000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"sjmiles_: What are you doing that depends on a constant prototype chain?","msgtype":"m.text"},"ts":1357942975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just relied on the input's documentURI prop","msgtype":"m.text"},"ts":1357942978000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"oops, they just smashed it with /button","msgtype":"m.text"},"ts":1357942991000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"tabatkins: declarative is a little bigger space of people right?","msgtype":"m.text"},"ts":1357942994000,"senderName":"bkardell_","senderId":"bkardell_@irc"},
{"content":{"body":"no more documentURI","msgtype":"m.text"},"ts":1357942995000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"but shucks, they *looked* just like two buttons","msgtype":"m.text"},"ts":1357943008000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: when I inherit Bar from Foo, Bar expects to use Foo's prototypical implementation","msgtype":"m.text"},"ts":1357943008000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"TabAtkins: if it's not there, Bar will not work","msgtype":"m.text"},"ts":1357943016000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"devs will make phenotypical judgements on interop","msgtype":"m.text"},"ts":1357943033000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: Only some elements have non-trivial prototypes.  The examples so-far-given where you want to be able to extend multiple elements identically all ahve trivial prototypes.","msgtype":"m.text"},"ts":1357943059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: are you thinking of removing the optional indication of base semantics in <element> in favor of an optional indication in <x-component/base>?","msgtype":"m.text"},"ts":1357943060000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"TabAtkins: I'm confused about this dicussion. In general, although you can call \"Boat\" constructor on a \"Car\" object, it doesn't mean it will float. :)","msgtype":"m.text"},"ts":1357943062000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"to think that they are going to scan a hundred(s) lines long component definition for any use of a proto prop not to smash is a fairytale","msgtype":"m.text"},"ts":1357943075000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: No, I expect that authors usually won't use /foo at all.  When they can do so, hopefully it's documented.","msgtype":"m.text"},"ts":1357943106000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"astearns: all of these are proposals here: http://wiki.whatwg.org/wiki/Components","msgtype":"m.text"},"ts":1357943107000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sjmiles_: oh I like that","msgtype":"m.text"},"ts":1357943111000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"The cases being handled by the override thing are those that I think are minority in the first place, but still interesting enough to be worth addressing.","msgtype":"m.text"},"ts":1357943129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Hope and Change hasn't worked out hardly as well as advertised in the past...","msgtype":"m.text"},"ts":1357943140000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Ok, I suspect I missed some key bit here and am arguing Quixotically","msgtype":"m.text"},"ts":1357943153000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sjmiles_: no, you're right on","msgtype":"m.text"},"ts":1357943169000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"__proto__ setting will infact xfer props, but they will explode if you try to use them","msgtype":"m.text"},"ts":1357943192000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"thus your Car/Boat thing was apropreate","msgtype":"m.text"},"ts":1357943204000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"sjmiles_: The arguments I've heard so far for per-element base indication is, say, wanting a common API on all phrasing elements (<a>, <b>, <i>, <em>, <strong>, etc.).  In the current spec, you'd need to do this by defining a bunch of identical components.","msgtype":"m.text"},"ts":1357943216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"btw, I suck at spelling, ftr","msgtype":"m.text"},"ts":1357943221000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: right - I read into what you were saying above as option 6 *without* the default extension specified in <element> - removing the extends attribute of <element>","msgtype":"m.text"},"ts":1357943222000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"My optional /foo thing lets you address this in a more natural way, by defining the component once and then saying which element it's extending per use (with a default extension still available).","msgtype":"m.text"},"ts":1357943257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: will the rule of the day be defensive self-inspection code inside components?","msgtype":"m.text"},"ts":1357943287000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"It seems obviously silly to do something like <x-drawing-surface/select>, though.","msgtype":"m.text"},"ts":1357943290000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwldcat: Why do you assume that \"oh shit, the page doesn't work, maybe it's because I did something stupid by adding this extra /foo stuff\" is insufficient?","msgtype":"m.text"},"ts":1357943316000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"astearns: no, not that :)","msgtype":"m.text"},"ts":1357943321000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"<x-drawing-surface><select fallback></select></x-drawing-surface>","msgtype":"m.text"},"ts":1357943328000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"(Alternately, we could define a set of pre-existing categories that you can extend from, which limits you.","msgtype":"m.text"},"ts":1357943339000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I like that better","msgtype":"m.text"},"ts":1357943350000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: if I make 'x-sjmiles-cool' can I write <x-sjmiles-cool> in my html? that's what I want.","msgtype":"m.text"},"ts":1357943365000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"TabAtkins: I think the list is simply all tag names that have this prototype","msgtype":"m.text"},"ts":1357943377000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"For example, saying <element name=x-foo extends=span category=phrasing> allows <x-foo/b>, but throws an error somewhere if you do <x-foo/input>.","msgtype":"m.text"},"ts":1357943378000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"alternatives, options, and extensions are all fine by me","msgtype":"m.text"},"ts":1357943380000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"especially if we're already throwing out the canard requirement that you have to have it operate without the linked doc","msgtype":"m.text"},"ts":1357943384000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: Most tags are direct children of HTMLElement, though, so that's not a useful categorization scheme.","msgtype":"m.text"},"ts":1357943404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the use case where it's necessary is h1..h6 and what else?","msgtype":"m.text"},"ts":1357943424000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sjmiles_: Yes, once again, I've always been for that.  My proposal is the last entry in the wiki page, like I said before.","msgtype":"m.text"},"ts":1357943430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: Heading elements, phrasing elements, sectioning elements, maybe others?","msgtype":"m.text"},"ts":1357943442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: ol, ul","msgtype":"m.text"},"ts":1357943455000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: quote/blockquote ins/del share the interface too","msgtype":"m.text"},"ts":1357943457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah yeah, lists make sense.","msgtype":"m.text"},"ts":1357943463000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aha, all these guys.","msgtype":"m.text"},"ts":1357943472000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so, just to be clear","msgtype":"m.text"},"ts":1357943474000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: prolly a few others","msgtype":"m.text"},"ts":1357943476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is a need","msgtype":"m.text"},"ts":1357943477000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: great, but there is not general agreement on that core point. Once there is, I can go away. :)","msgtype":"m.text"},"ts":1357943479000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"but not a proto need","msgtype":"m.text"},"ts":1357943480000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: prototype never changes, correct.","msgtype":"m.text"},"ts":1357943493000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1357943495000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"well that's not exactely right","msgtype":"m.text"},"ts":1357943506000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"at least in my head :)","msgtype":"m.text"},"ts":1357943509000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sjmiles_: You dont' have to argue with me on that point, at least.","msgtype":"m.text"},"ts":1357943517000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"let's imagine for a sec that some day in the future, we add some thing that only works on a ol","msgtype":"m.text"},"ts":1357943527000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"some kind of sort or something","msgtype":"m.text"},"ts":1357943535000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: It seems weird if <x-coolspan/b> has HTMLSpanElement in its prototype, rather than HTMLBoldElement.","msgtype":"m.text"},"ts":1357943548000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and then we have the need to be strictly bound","msgtype":"m.text"},"ts":1357943551000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"<element extends=\"ol\" name=\"x-gar\">.. </element> usage: <x-gar/ul> or <x-gar/ol>","msgtype":"m.text"},"ts":1357943562000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"(Actually, <b> doesn't even ahve an interface of its own.)","msgtype":"m.text"},"ts":1357943573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: true enough","msgtype":"m.text"},"ts":1357943583000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: Now, how do you establish such a restriction, such that <x-gar/input> is not allowed?","msgtype":"m.text"},"ts":1357943613000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Also, what does \"not allowed\" mean?)","msgtype":"m.text"},"ts":1357943619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: how could you?","msgtype":"m.text"},"ts":1357943623000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: I don't understand the question.  State it more explicitly?","msgtype":"m.text"},"ts":1357943643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"look at slash-tag, and look at tag, if their base prototype is different, then throw away slash-tag","msgtype":"m.text"},"ts":1357943657000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: Once again, that doesn't work.  <ol> and <ul> have different prototypes.","msgtype":"m.text"},"ts":1357943676000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How could you other than an inferred blacklist based off the diff between an explicit whitelist?","msgtype":"m.text"},"ts":1357943678000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: ah, then my example is wrong","msgtype":"m.text"},"ts":1357943701000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"*Some* categories of elements have a nice prototype relationship.  Definitely not all.","msgtype":"m.text"},"ts":1357943705000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For example, a lot of phrasing element just use HTMLElement directly - they don't even ahve their own unique interface.","msgtype":"m.text"},"ts":1357943725000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where is the line between this whole debate and role=\"\" (hopefully that isn't a stupid question - ducks)","msgtype":"m.text"},"ts":1357943776000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"<element name=\"x-fart\"> (extends HTMLElement) usage: <x-fart/b> or any html tag that uses HTMLElement directly","msgtype":"m.text"},"ts":1357943783000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"<element name=\"x-burp\" extends=\"HTMLHeadingElement\"> usage <x-burp/h1>, <x-burp/h2>, etc.","msgtype":"m.text"},"ts":1357943815000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"whoa, me wrong","msgtype":"m.text"},"ts":1357943826000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: Now you can't use <x-foo/time>?","msgtype":"m.text"},"ts":1357943835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<element name=\"x-burp\" extends=\"h1\">","msgtype":"m.text"},"ts":1357943836000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"(Dude, please use standard metasyntactic variables.  It's annoying typing fart and burp.)","msgtype":"m.text"},"ts":1357943853000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sorry :)","msgtype":"m.text"},"ts":1357943860000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: buzzkill!","msgtype":"m.text"},"ts":1357943885000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Note that <time> is, for most intents and purposes, a standard phrasing element.  The only difference is that it additionally has a .datetime property.","msgtype":"m.text"},"ts":1357943887000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357943888000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"But your test (compare prototype grandparents) would fail it.","msgtype":"m.text"},"ts":1357943908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<element name=\"x-zoot\" extends=\"time\"> can only be <x-zoot> and <x-zoot/time>","msgtype":"m.text"},"ts":1357943914000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: yup.","msgtype":"m.text"},"ts":1357943924000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"we're not decorating here.","msgtype":"m.text"},"ts":1357943930000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: yes that makes sense","msgtype":"m.text"},"ts":1357943935000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"because if we're dling the linked doc","msgtype":"m.text"},"ts":1357943942000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"all types are deterministic. The optional notation is only to:","msgtype":"m.text"},"ts":1357943946000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"we know they are always time","msgtype":"m.text"},"ts":1357943949000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: I'm not decorating either.  I'm just saying that the difference between <b> and <time> isn't large enought to justify forever barring them from being used with the same component.","msgtype":"m.text"},"ts":1357943960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and why would anyone masquerade one truly accurate semantic as another?","msgtype":"m.text"},"ts":1357943971000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"other than the Heading case....","msgtype":"m.text"},"ts":1357943979000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"a) disambiguate tags have the same prototype","msgtype":"m.text"},"ts":1357943985000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"b) allow painting semantics on custom tags","msgtype":"m.text"},"ts":1357943997000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: You didn't answer my objection.","msgtype":"m.text"},"ts":1357944037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: because it stomps on proto and makes a foot gun. Take time element for example","msgtype":"m.text"},"ts":1357944052000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"The difference between <time> and <b>, or <data> and <b>, or perhaps others, isn't large enough to justify forever barring them from using the same component API.","msgtype":"m.text"},"ts":1357944070000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"suppose the component only uses datetime property on some condition (hover at a certain time)","msgtype":"m.text"},"ts":1357944071000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"the awesome author Bob takes this component (let's call it x-roo) and sticks it on a b","msgtype":"m.text"},"ts":1357944095000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"<x-roo/b>","msgtype":"m.text"},"ts":1357944099000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"everything looks great","msgtype":"m.text"},"ts":1357944103000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"then Bob ships the site","msgtype":"m.text"},"ts":1357944108000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"It means that I must write two identical components, the only difference being that one is defined with <element name=x-foo extends=span> and the other is <element name=x-foo-data extends=data>.","msgtype":"m.text"},"ts":1357944111000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and it breaks 3 hours later","msgtype":"m.text"},"ts":1357944112000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's a foot gun","msgtype":"m.text"},"ts":1357944128000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: sure. that's how you should do it.","msgtype":"m.text"},"ts":1357944141000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: You're misreading me.  If we're talking categories, and we care about possibly different protos, then I'm saying that *your categories are insufficient*, not *fuck categories, let people do whatever*.","msgtype":"m.text"},"ts":1357944160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree with the footgun eventuality, it will happen, and there will be blood (cinema reference...nvm)","msgtype":"m.text"},"ts":1357944172000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"For example, something like <element category=phrasing> could be used with /b and /time.","msgtype":"m.text"},"ts":1357944183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ohhh","msgtype":"m.text"},"ts":1357944191000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1357944193000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so the author of the component would have to build it knowingly for a category of elements","msgtype":"m.text"},"ts":1357944208000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: this is what I was saying earlier","msgtype":"m.text"},"ts":1357944217000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"(2:35:31 PM) csuwldcat: How could you other than an inferred blacklist based off the diff between an explicit whitelist?","msgtype":"m.text"},"ts":1357944230000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"category == that whitelist","msgtype":"m.text"},"ts":1357944244000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: but if Bob the author attempts to use a component that was not built for a specific category, the browser says no.","msgtype":"m.text"},"ts":1357944284000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1357944287000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: Since I had explicitly already introduced that as an option before you said that line, I was confused what you were trying to say.  ^_^","msgtype":"m.text"},"ts":1357944291000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: What does \"the browser says no\" mean?","msgtype":"m.text"},"ts":1357944299000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: fair -nough","msgtype":"m.text"},"ts":1357944305000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"throw error, ignore, whatevs","msgtype":"m.text"},"ts":1357944307000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TBD","msgtype":"m.text"},"ts":1357944317000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: but what does it do in the meantime?","msgtype":"m.text"},"ts":1357944330000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"and what does it do once it errors?","msgtype":"m.text"},"ts":1357944355000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"disapear the element from render or just leave it with the error thrown?","msgtype":"m.text"},"ts":1357944375000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"since the override is secondary, I think we could just ignore it","msgtype":"m.text"},"ts":1357944377000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Ignoring the override is an acceptable answer to me.","msgtype":"m.text"},"ts":1357944389000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1357944390000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that makes sense","msgtype":"m.text"},"ts":1357944396000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"This requires that we predefine some categories.","msgtype":"m.text"},"ts":1357944411000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so if Bob does <x-zoo/input> and x-zoo has category=\"phrasing\", it just defaults to <x-zoo>","msgtype":"m.text"},"ts":1357944412000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: yay work!","msgtype":"m.text"},"ts":1357944420000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"It also means we should consider whether this is actually worth this effort.","msgtype":"m.text"},"ts":1357944422000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ^ this","msgtype":"m.text"},"ts":1357944432000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"TabAtkins: also, this can be done later.","msgtype":"m.text"},"ts":1357944436000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: new feature","msgtype":"m.text"},"ts":1357944443000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: ^ yep +1","msgtype":"m.text"},"ts":1357944448000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"you are the heavy hitters, resolve [Bug 18669] first please","msgtype":"m.text"},"ts":1357944479000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"we can start with just making slash-tag an option to paint semantics","msgtype":"m.text"},"ts":1357944480000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I'd want to take a long hard look at the % of real use-cases we expect, and how much more it adds that can confuse","msgtype":"m.text"},"ts":1357944487000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"is stuck in a rut","msgtype":"m.emote"},"ts":1357944494000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"sorry, sjmiles_","msgtype":"m.text"},"ts":1357944526000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"look another TAG member!","msgtype":"m.text"},"ts":1357944540000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sjmiles_: Call a x-towtruck/winch...but only if the towtruck is compatible, no worries, you'll find out async after the two truck driver already arrives ;)","msgtype":"m.text"},"ts":1357944556000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"is easily distracted","msgtype":"m.emote"},"ts":1357944562000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: TabAtkins is particularly good at making things like that actually work, so dont' take it off the table!","msgtype":"m.text"},"ts":1357944594000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"we have people at various stages of acceptance. This is consensus-driven, so we need have them all","msgtype":"m.text"},"ts":1357944605000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"haha, ok, agreed","msgtype":"m.text"},"ts":1357944606000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"wellllll","msgtype":"m.text"},"ts":1357944617000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"1) Hixie I think is the closest to the finish line","msgtype":"m.text"},"ts":1357944631000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"we beat some of the stakeholders into silence (but not submission)","msgtype":"m.text"},"ts":1357944637000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"2) annevk is unknown","msgtype":"m.text"},"ts":1357944663000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: is the finish line a high precipice of some sort?","msgtype":"m.text"},"ts":1357944668000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"3) hober is just starting","msgtype":"m.text"},"ts":1357944669000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"csuwldcat: I think general understanding of the problem and seeing the spectrum of solutions","msgtype":"m.text"},"ts":1357944704000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: do you get the sense he will agree to an optional solution wrt semantics?","msgtype":"m.text"},"ts":1357944720000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"4) csuwldcat is way over finish line, far far beyond the horizon. We can only hear his screams","msgtype":"m.text"},"ts":1357944738000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I was not getting that feeling, just saying...","msgtype":"m.text"},"ts":1357944740000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"haha, I've already won 7 tour de frances","msgtype":"m.text"},"ts":1357944757000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"no doping either","msgtype":"m.text"},"ts":1357944767000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I don't take Hixie's opinion lightly. If he has a strong opinion, there's a good reason for it.","msgtype":"m.text"},"ts":1357944791000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: I agree it is a completely valid case/desire, never robbed him of that fact","msgtype":"m.text"},"ts":1357944818000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"just how product relevant it is to the world large and the on-the-ground rate of applicable occurrence","msgtype":"m.text"},"ts":1357944845000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"optional FTW","msgtype":"m.text"},"ts":1357945037000,"senderName":"sjmiles_","senderId":"sjmiles_@irc"},
{"content":{"body":"dglazkov: you have to be careful to not end up in \"consensus by exhaustion\" territory","msgtype":"m.text"},"ts":1357945176000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: I just want consensus.","msgtype":"m.text"},"ts":1357945341000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"exhaustion is optional.","msgtype":"m.text"},"ts":1357945350000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"heh. i predict that, whether or not we manage to get consensus, exhaustion will have turned out to be mandatory :)","msgtype":"m.text"},"ts":1357945432000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"well, it's likely. I'll grant you that.","msgtype":"m.text"},"ts":1357945748000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"awesome discussion everyone, by the way","msgtype":"m.text"},"ts":1357948580000,"senderName":"dglazkov","senderId":"dglazkov@irc"}
]