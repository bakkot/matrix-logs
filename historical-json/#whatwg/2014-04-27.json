[
{"content":{"body":"Hixie: hmm, can investigate tomorrow","msgtype":"m.text"},"ts":1398590369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip` reached a point of eventually autogenerating code for the tree constructor as well as the tokenizer, right?","msgtype":"m.text"},"ts":1398618205000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because some of the stuff (around doctype tokens esp.) looks pretty hidious to parse the text.","msgtype":"m.text"},"ts":1398618223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Pretty sure that at some point Philip`'s code became self aware","msgtype":"m.text"},"ts":1398618598000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But the government keeps it secret","msgtype":"m.text"},"ts":1398618628000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's why you never hear from him these days","msgtype":"m.text"},"ts":1398618636000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well that would explain that.","msgtype":"m.text"},"ts":1398618675000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i had big plans to parse the spec and turn it into code when i started this parser i'm doing","msgtype":"m.text"},"ts":1398619712000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then i ended up making it output things a bit different than the spec does","msgtype":"m.text"},"ts":1398619723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that went out of the window","msgtype":"m.text"},"ts":1398619726000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(e.g. the way i handle character tokens that are in the original input is to just return pointers to the original string to avoid string copies)","msgtype":"m.text"},"ts":1398619744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I may write such a thing over the summer","msgtype":"m.text"},"ts":1398620958000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: Where I'm really not interesting in performance or memory usage, provided it's \"usable\".","msgtype":"m.text"},"ts":1398620991000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"A natural language parser for en-US-x-hixie?","msgtype":"m.text"},"ts":1398621110000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The parser's spec text is deliberately regular so you can quite easily parse it.","msgtype":"m.text"},"ts":1398621233000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm not interested in general en-US-x-hixie","msgtype":"m.text"},"ts":1398621265000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1398621272000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: yeah. my goal is to make a really fast one since my use case is \"anolis is slow\"","msgtype":"m.text"},"ts":1398621288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and that's with anolis using libxml2 sometimes, iirc)","msgtype":"m.text"},"ts":1398621307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Essentially, I want to be able to: a) check html5lib tests for correctness v. current spec; b) generate more tests for paths not covered (so both tokenizer and tree constructor tests are complete); c) formal assertions of properties of the spec, as then merely the code to generate the model need be checked (instead of checking the whole model v. the spec).","msgtype":"m.text"},"ts":1398621375000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: honestly, I don't think the parser is *that* slow. the problem is the serializer and the passes --- you want to be able to merge the passes to operate over fewer loops over the document.","msgtype":"m.text"},"ts":1398621422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Really what you want is to use something with good loop fusion optimization","msgtype":"m.text"},"ts":1398622024000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is there WHATWG's version of CSS standard? Or do you agree with W3C about it?","msgtype":"m.text"},"ts":1398622860000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"We don't have the manpower to deal with it","msgtype":"m.text"},"ts":1398623031000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: But do you have your own vision of CSS3 or W3C's version is suitable for you?","msgtype":"m.text"},"ts":1398623343000,"senderName":"IZh","senderId":"IZh@irc"}
]