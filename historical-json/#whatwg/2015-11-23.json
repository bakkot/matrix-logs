[
{"content":{"body":"wanderview: it seems like there might be some problem with how that skip-servicer-worker flag gets set by the SW specification","msgtype":"m.text"},"ts":1448265502000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"philipj: rewriting DOM to not use \"name\" is a bit more involved than I thought, but getting there I think","msgtype":"m.text"},"ts":1448279326000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"annevk: sweet!","msgtype":"m.text"},"ts":1448279734000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: does look like it's worth it to keep a \"qualified name\" concept around that just computes to something","msgtype":"m.text"},"ts":1448280322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: the current diff has quite a few prefix is null and name is local name or prefix + \":\" + local name is name which is not great","msgtype":"m.text"},"ts":1448280363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sure, having it as a concept sounds fine, and in fact matches Blink. Doing it the otherway would make it more explicit where there could be a wasteful string being created, but the spec shouldn't micro-optimize at the expense of readability","msgtype":"m.text"},"ts":1448281566000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: the only change I haven't made yet is rename various arguments to qualifiedName","msgtype":"m.text"},"ts":1448281606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: that's probably worth doing too at some point","msgtype":"m.text"},"ts":1448281615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, some kind of clarity about when it's possible to use a colon in the input and not would be nice","msgtype":"m.text"},"ts":1448281647000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"    if (!isHTMLElement() && attrNode->document().isHTMLDocument() && attrNode->name() != attrNode->name().lower())","msgtype":"m.text"},"ts":1448281650000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"        UseCounter::count(document(), UseCounter::NonHTMLElementSetAttributeNodeFromHTMLDocumentNameNotLowercase);","msgtype":"m.text"},"ts":1448281653000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1448281656000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"that's some code I just removed and had in my clipboard :)","msgtype":"m.text"},"ts":1448281664000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: while I have you here, there's another issue, namely that setAttributeNode and setAttributeNodeNS are simply aliases in Blink, but not in the spec","msgtype":"m.text"},"ts":1448281702000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: what about createElement/createElementNS?","msgtype":"m.text"},"ts":1448281749000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"philipj: spec matches Gecko?","msgtype":"m.text"},"ts":1448281768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and when I try to align with the spec, I get a place where I potentially lowercast the localName of an Attr object","msgtype":"m.text"},"ts":1448281770000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: I think so, yes","msgtype":"m.text"},"ts":1448281775000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"gsnedders: those aren't aliases, thankfully :)","msgtype":"m.text"},"ts":1448281826000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: so it seems weird, to me, to lowercase an Attr's localName, because we're already normalizing case in createAttribute","msgtype":"m.text"},"ts":1448281852000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: so what would you think of simply using the namespaceURI and localName of the attr?","msgtype":"m.text"},"ts":1448281886000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I think that's called out in the spec as a weird case we don't care about","msgtype":"m.text"},"ts":1448281886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: hmm, open an issue and discuss with bz / Ms2ger?","msgtype":"m.text"},"ts":1448281915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is called out, but that was added before createAttribute lowercased its input, right?","msgtype":"m.text"},"ts":1448281916000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: true","msgtype":"m.text"},"ts":1448281929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, so I'll file a spec issue","msgtype":"m.text"},"ts":1448281935000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"is there any reasonable way to track a specific section of the HTML spec?","msgtype":"m.text"},"ts":1448286595000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: not really","msgtype":"m.text"},"ts":1448286850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi, are whatwg streams usable in node yet ?","msgtype":"m.text"},"ts":1448287817000,"senderName":"rom1504","senderId":"rom1504@irc"},
{"content":{"body":"gsnedders: I was just going to merge the travis update pr, especially if master is already failing tests","msgtype":"m.text"},"ts":1448291342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I still want to keep us having linear history. The lxml breakage looks like a small change in ihatexml is needed","msgtype":"m.text"},"ts":1448291478000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"OK, well if you're going to fix I'm not going to complain","msgtype":"m.text"},"ts":1448291523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's a three line fix :)","msgtype":"m.text"},"ts":1448291650000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"why isn't the up to date reference implementation there https://www.npmjs.com/package/whatwg-streams ?","msgtype":"m.text"},"ts":1448291719000,"senderName":"rom1504","senderId":"rom1504@irc"},
{"content":{"body":"rom1504: a) it isn't a reference implementation; b) the author AFAIK isn't here","msgtype":"m.text"},"ts":1448291788000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://github.com/whatwg/streams/tree/master/reference-implementation is not a reference implementation ?","msgtype":"m.text"},"ts":1448291825000,"senderName":"rom1504","senderId":"rom1504@irc"},
{"content":{"body":"my question is how can I use this https://github.com/whatwg/streams/tree/master/reference-implementation (and should I) ?","msgtype":"m.text"},"ts":1448291900000,"senderName":"rom1504","senderId":"rom1504@irc"},
{"content":{"body":"rom1504: maybe Domenic can help you out","msgtype":"m.text"},"ts":1448291938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure if he's around","msgtype":"m.text"},"ts":1448291944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have no idea whether this is supposed to work, but since this is unpublished and in a subdir, there's no way to use it from node","msgtype":"m.text"},"ts":1448291963000,"senderName":"rom1504","senderId":"rom1504@irc"},
{"content":{"body":"I'll open an issue on the repo","msgtype":"m.text"},"ts":1448291998000,"senderName":"rom1504","senderId":"rom1504@irc"},
{"content":{"body":"jgraham: https://github.com/html5lib/html5lib-python/pull/214 look good to you?","msgtype":"m.text"},"ts":1448292013000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: bah, still failing tests :\\","msgtype":"m.text"},"ts":1448292079000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well it looks like a reasonable change at least, but yeah since it alters the comment you can see that it might fail the tests","msgtype":"m.text"},"ts":1448292163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: coercion in principle shouldn't cause failing tests","msgtype":"m.text"},"ts":1448292207000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: the real problem is lxml is still throwing","msgtype":"m.text"},"ts":1448292218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1448292237000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"philipj: thank you for the review, fixing now","msgtype":"m.text"},"ts":1448292766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: plz look at https://github.com/html5lib/html5lib-python/pull/214 again","msgtype":"m.text"},"ts":1448293143000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: \"contain end\"","msgtype":"m.text"},"ts":1448293315000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: blargh. apart from that?","msgtype":"m.text"},"ts":1448293349000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Do you still need the += \" \" if it's going to throw anyway?","msgtype":"m.text"},"ts":1448293390000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it doesn't throw, it's a warning","msgtype":"m.text"},"ts":1448293473000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: see everything else in ihatexml","msgtype":"m.text"},"ts":1448293491000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Right, I guess that makes sense","msgtype":"m.text"},"ts":1448293620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway r+","msgtype":"m.text"},"ts":1448293624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: basically we ignore test results if datalosswarning is raised","msgtype":"m.text"},"ts":1448293739000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yeah, I remember that part","msgtype":"m.text"},"ts":1448293847000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/pull/71#issuecomment-158989019 if anyone can remember about how the list of character references was derived","msgtype":"m.text"},"ts":1448296696000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: it's part of the build script https://github.com/whatwg/html-build","msgtype":"m.text"},"ts":1448297093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's what I thought","msgtype":"m.text"},"ts":1448297103000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: which is odd, given it means the two things are divergent despite being based on the same source data","msgtype":"m.text"},"ts":1448297121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah not sure what is going on","msgtype":"m.text"},"ts":1448300990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1448300997000,"senderName":"annevk","senderId":"annevk@irc"}
]