[
{"content":{"body":"about rel=preload in Link headers, in Chrome is there a way to opt out of it? some user option/flag?","msgtype":"m.text"},"ts":1580873394000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"see https://stackoverflow.com/questions/60064866/for-fetch-request-from-chrome-extension-how-to-prevent-chrome-from-also-automat","msgtype":"m.text"},"ts":1580873397000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That seems like a bug, except perhaps if the site uses push, but why would that show up as requests? Surely the console knows","msgtype":"m.text"},"ts":1580877797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm happy to answer any questions for https://github.com/mikewest/corpp/pull/8.","msgtype":"m.text"},"ts":1580880552000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"annevk: The OP doesn’t cite any console error messages. In my experience with reading a lot of StackOverflow questions, it seems like a lot of devs don’t actually think to look at the console errors. Which suprises me (or used to...)","msgtype":"m.text"},"ts":1580881185000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: btw that site is using HTTP/2 so maybe it is actually also using push. Do you know of a way I can tell if it is using push?","msgtype":"m.text"},"ts":1580882003000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the site is https://victoryroadvgc.com/","msgtype":"m.text"},"ts":1580882012000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if I look at the requests in the Network pane, I see some where the Initiator is listed as \"Other\"... maybe that indicates they’re coming from push?","msgtype":"m.text"},"ts":1580882074000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/in the Network pane/in the Network pane in Chrome/","msgtype":"m.text"},"ts":1580882194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: there are CDNs that translate preload into push so that is certainly plausible","msgtype":"m.text"},"ts":1580889114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: no experience debugging personally","msgtype":"m.text"},"ts":1580889134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: will look more closely today I hope","msgtype":"m.text"},"ts":1580889204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: I think the problem with that approach is that it’s not future proof; at least, I think you want enforce value A, while getting a report for value B","msgtype":"m.text"},"ts":1580889711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Thanks for the extremely clear written summary!)","msgtype":"m.text"},"ts":1580889738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: if we’ll never expect to extend this header it seems fine, but other Googlers have suggested new values","msgtype":"m.text"},"ts":1580889923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we can introduce a new parameter, say report-as, when necessary.","msgtype":"m.text"},"ts":1580890160000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"annevk: at this moment report-as is fixed to \"require-corp\" so we don't need it","msgtype":"m.text"},"ts":1580890190000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: true, but it still limits us in ways; e.g., we couldn't add an optional parameter to require-corp","msgtype":"m.text"},"ts":1580890831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: but maybe that's okay","msgtype":"m.text"},"ts":1580890854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks. Would that be a problem for COOP?","msgtype":"m.text"},"ts":1580891919000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"annevk: we want to have a consistent syntax for COEP reporting and COOP reporting if possible","msgtype":"m.text"},"ts":1580892100000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: it's hard to say in advance","msgtype":"m.text"},"ts":1580892115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: if we're okay sticking with enums it's not a problem","msgtype":"m.text"},"ts":1580892123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: https://github.com/w3c/webappsec-feature-policy/issues/362 is somewhat related","msgtype":"m.text"},"ts":1580892191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: I added a comment there to express my overarching concern; last time some of us discussed this in person nobody had a really compelling take for one solution over another","msgtype":"m.text"},"ts":1580892556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm probably overthinking it though as most headers don't grow that many values","msgtype":"m.text"},"ts":1580892663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. I still think the simplest one is good for the current COOP&COEP proposal, and it will not be too bad to make the reporting syntax complex when they grow...","msgtype":"m.text"},"ts":1580892916000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"given an HTMLImageElement `img`, does img.src = \"/example.png\"; img.src = \"/example.jpg\"; cause one (1) network request? (given step 8 of the update the image data?)","msgtype":"m.text"},"ts":1580914006000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: should be 1","msgtype":"m.text"},"ts":1580914334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, far as I can see we have no tests for this","msgtype":"m.text"},"ts":1580914433000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(don't worry, I'm only writing tests along these lines which get progressively more evil, who knows what interop is like)","msgtype":"m.text"},"ts":1580914464000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: because that would be lovely","msgtype":"m.text"},"ts":1580914523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: someone contracted you to work on the img element?","msgtype":"m.text"},"ts":1580914526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(not sure why the first message didn't get send directly)","msgtype":"m.text"},"ts":1580914539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, just playing around with some kinda crazy ideas in my head and I feel like I should check browsers actually do the right underlying behaviour before I start relying on it","msgtype":"m.text"},"ts":1580914571000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so don't expect anything super-exhaustive, just the cases I care about for what I'm playing with :)","msgtype":"m.text"},"ts":1580914591000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Fair enough","msgtype":"m.text"},"ts":1580914606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Alternative plan: get super popular so browsers have to align around what you happen to do","msgtype":"m.text"},"ts":1580914636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: We don't have tests for a lot of the \"relevant mutations\" and intricacies in the #updating-the-image-data microtask-queueing logic, and there seems to be a decent interop gap. I talked with zcorpan about this a little recently, it would be great to get a lot of tests for this stuff written! I'm happy to help","msgtype":"m.text"},"ts":1580915965000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: do you recall why Worker.fromString(...) is not yet a thing? Writing a Blob wrapper is rather tedious","msgtype":"m.text"},"ts":1580921949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Similarly, we should have a way to load up a worklet from a string rather than a url; someone filed an issue about that a few days ago.","msgtype":"m.text"},"ts":1580922252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, the current setup is rather awkward. Having said, I'm sure this has been discussed before","msgtype":"m.text"},"ts":1580922420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that*","msgtype":"m.text"},"ts":1580922429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: I'll look once more tomorrow, but I think your change was fine","msgtype":"m.text"},"ts":1580923110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: from your checklist we're still awaiting a test though right?","msgtype":"m.text"},"ts":1580923121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: and I guess it'd be nice if ecobos (or hiikezoe) had a final skim","msgtype":"m.text"},"ts":1580923180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep hiikezoe’s test should be it if you’re ok with the spec","msgtype":"m.text"},"ts":1580942129000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Sure I’m happy waiting for a final skim","msgtype":"m.text"},"ts":1580942154000,"senderName":"domfarolino","senderId":"domfarolino@irc"}
]