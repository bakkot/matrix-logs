[
{"content":{"body":"zcorpan: if you're around, I'm wanted to ask a question about the script ABNF at http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#restrictions-for-contents-of-script-elements","msgtype":"m.text"},"ts":1293527580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or Hixie, if you're around","msgtype":"m.text"},"ts":1293527640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if websocket unmasking key is SHA-1(uuid, server nonce, client nonce, per-frame key)? how would you know what to use as per-frame key to get 0 as unmasking key?","msgtype":"m.text"},"ts":1293527700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: what about it?","msgtype":"m.text"},"ts":1293527701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so the need to check for is \"<!--\" without a later \"-->\" is clear, but I'm trying to remember what I need to do for the \"<script and \"</script\"","msgtype":"m.text"},"ts":1293527820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is it not sufficient to have a check for \"</script\" followed by space, \"/\", or \">\"?","msgtype":"m.text"},"ts":1293527880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't understand why the ABNF has the stuff about \"script-start  = lt       s c r i p t tag-end\"","msgtype":"m.text"},"ts":1293527940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"instead of just for script-end","msgtype":"m.text"},"ts":1293527941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so e.g. \"foobar(data1) <!--(escape) foobar(data2) <script>(script-start) foobar(data3) </script>(script-end) foobar(data2)  <script>(script-start) foobar(data3) --> foobar(data1)\" should be valid if i'm reading the abnf correctly","msgtype":"m.text"},"ts":1293528420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't understand why [ script-start data3 ] is in the first row","msgtype":"m.text"},"ts":1293528421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i also don't understand why it has [ escape ] at the end","msgtype":"m.text"},"ts":1293528600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1293528660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"even if I could implement that as spec'ed, I have no clue what kind of end-user-friendly error message I could report that would actually be useful","msgtype":"m.text"},"ts":1293528720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe i'm reading the abnf wrong, because it seems bogus to me :)","msgtype":"m.text"},"ts":1293528721000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm not sure those constraints are useful for the sake of document validation anyway","msgtype":"m.text"},"ts":1293528840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since you can't feed the validator a DOM","msgtype":"m.text"},"ts":1293529020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but instead a serialized document","msgtype":"m.text"},"ts":1293529021000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"a validator could be operating on the dom level if it's a browser extension","msgtype":"m.text"},"ts":1293529140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1293529141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's not going to be executing script hopefully","msgtype":"m.text"},"ts":1293529142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the browser executes script","msgtype":"m.text"},"ts":1293529200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1293529201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's already a problematic use case","msgtype":"m.text"},"ts":1293529380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for one thing, reporting the locations of any errors","msgtype":"m.text"},"ts":1293529440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you could point to the node and clicking it highlights the node in dragonfly","msgtype":"m.text"},"ts":1293529560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, could, potentially","msgtype":"m.text"},"ts":1293529680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the backend doesn't yet have any means for enabling that","msgtype":"m.text"},"ts":1293529740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sure, validator.nu isn't built for that environment in mind","msgtype":"m.text"},"ts":1293530160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/in mind//","msgtype":"m.text"},"ts":1293530220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"anyway, I implemented the core checks for \"/*\" without a later \"/*\" and \"//\", for the script/@src case, and \"<!--\" without a later \"-->\" for both the src-less script case and script/@src case","msgtype":"m.text"},"ts":1293530640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and got it up now at http://www.w3.org/html/check","msgtype":"m.text"},"ts":1293530700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1293530820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I hope hsivonen will have time soon for some reviewing","msgtype":"m.text"},"ts":1293530940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i think it'd be more useful if the spec had parse errors for bogus <!--<script> cases in the parser","msgtype":"m.text"},"ts":1293531000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: i can't test xhtml with http://www.w3.org/html/check ?","msgtype":"m.text"},"ts":1293531120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah you can","msgtype":"m.text"},"ts":1293531121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"under Options","msgtype":"m.text"},"ts":1293531122000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1293531123000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<script>&lt;/script></script> in xhtml is invalid according to the spec","msgtype":"m.text"},"ts":1293531300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i don't think that's particularly useful to check for, personally","msgtype":"m.text"},"ts":1293531301000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"!loltip","msgtype":"m.text"},"ts":1293535320000,"senderName":"Necra","senderId":"Necra@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1293535321000,"senderName":"Necra","senderId":"Necra@irc"},
{"content":{"body":"zcorpan: I can't check for that in the datatype-checking code anyway","msgtype":"m.text"},"ts":1293535740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because by the time it gets to that part of the code, \"<\" and \"&lt;\" are the same","msgtype":"m.text"},"ts":1293535800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so? the abnf bans the textContent \"</script>\"","msgtype":"m.text"},"ts":1293536280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i can not send mail to es-discussâŠ™mo :(","msgtype":"m.text"},"ts":1293545400000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"i have sended mail twice, but it do not displays in discuss tree","msgtype":"m.text"},"ts":1293545460000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"http://blog.mozilla.com/security/2010/12/27/addons-mozilla-org-disclosure/","msgtype":"m.text"},"ts":1293554640000,"senderName":"_bga","senderId":"_bga@irc"},
{"content":{"body":"Would it not make sense to allow microdata to take value from the .value property of form fields? http://www.w3.org/TR/microdata/#values","msgtype":"m.text"},"ts":1293555660000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hm, that's interesting.  The immediate problem I can see is that, in the course of normal web crawling, you'd often see the value as \"\".","msgtype":"m.text"},"ts":1293555720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suppose the use-case is to let the user fill out a form and then extract the Microdata from it automatically?","msgtype":"m.text"},"ts":1293555721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: That's a use.","msgtype":"m.text"},"ts":1293556020000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"TabAtkins: I was actually looking at it in the context of http://tech.groups.yahoo.com/group/rest-discuss/message/17135?threaded=1&var=1&l=1","msgtype":"m.text"},"ts":1293556080000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"TabAtkins: Which is discussing decorating HTML forms with RDFa semantics to decouple the domain vocabulary from the URL/form-encoding interface presented by the server and represented by @name","msgtype":"m.text"},"ts":1293556140000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"is reading.","msgtype":"m.emote"},"ts":1293556141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"<input id=\"case_title\" name=\"Case.Title\" property=\"dc:title\"/>\" does not work AFAICT","msgtype":"m.text"},"ts":1293556142000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"TabAtkins: Since RDFa designates that dc:title is @content or the concatenation of text nodes.","msgtype":"m.text"},"ts":1293556200000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"I thought maybe microdata could do this, but it doesn't look like it.","msgtype":"m.text"},"ts":1293556201000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"It seems like the linked use-case is exactly the use-case I described.","msgtype":"m.text"},"ts":1293556202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Well if your use-case includes a programmer building a client to use the form, then yes.","msgtype":"m.text"},"ts":1293556320000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Which appears to be the described use-case, yes.","msgtype":"m.text"},"ts":1293556321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1293556322000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Yeah, it seems to just be aiming for something that makes it easy to both extract the data client-side and server-side.  Presumably there's already a framework server-side to convert the received form data into a more useful format.","msgtype":"m.text"},"ts":1293556380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not really sure what the value is of making @name and @property be different things.","msgtype":"m.text"},"ts":1293556440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, it allows to use arbitrary @name's.","msgtype":"m.text"},"ts":1293556441000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Yes.  So what's the value of that?","msgtype":"m.text"},"ts":1293556500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, it allows you to present a consistent interface across different ways of processing name=value pairs.","msgtype":"m.text"},"ts":1293556501000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(For example, in PHP land, people tend to use foo[] for repeated values, but there's nothing baked into CGI about that.)","msgtype":"m.text"},"ts":1293556560000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"How?  There are only two ways I can see here - extracted as Microdata/RDFa on the client side, and received as name/value pairs on the server side.","msgtype":"m.text"},"ts":1293556561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Those don't seem consistent unless you go to efforts to make them consistent.","msgtype":"m.text"},"ts":1293556562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think the idea is the serverside processing and URLs could completely change, while clientside processing would persist.","msgtype":"m.text"},"ts":1293556620000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"So for example you could change the @names and types of form attributes, but the client would persistently look for dc:title","msgtype":"m.text"},"ts":1293556680000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"*of form fields","msgtype":"m.text"},"ts":1293556681000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Is there any good reason for this, though?  Surely you could add an interpretation layer on the serverside that translates the kv pairs to whatever you needed?","msgtype":"m.text"},"ts":1293556740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Sure. Additional layers of processing doesn't sound more efficient than a persistent client interaction though.","msgtype":"m.text"},"ts":1293556800000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Sure.  I'm just wondering about the utility of that.  Extra indirection (a single piece of data referred to through two names) needs to be justified.","msgtype":"m.text"},"ts":1293556860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Well, at least it offers the potential to use a specific name (e.g. dc:title) rather than what's basically an opaque string (@name)","msgtype":"m.text"},"ts":1293556920000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"s/specific/generically understood/","msgtype":"m.text"},"ts":1293556921000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"@property is an opaque string as well.  It has exactly as much meaning as @name, until you add meaning to it.","msgtype":"m.text"},"ts":1293556980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: You can't reference a specific vocabulary via @name can you?","msgtype":"m.text"},"ts":1293556981000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Sure.  I can put <input name=\"dc:title\"> in my page.","msgtype":"m.text"},"ts":1293557040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No current processor will recognize it as a curie, but I could do it.","msgtype":"m.text"},"ts":1293557041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: That's still an opaque name in the absence of rules like microdata or RDFa for extracting it.","msgtype":"m.text"},"ts":1293557042000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Sure.  Rules could be added if necessary, of course.","msgtype":"m.text"},"ts":1293557043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes. It /might/ be that at least part of this usage could be addressed by providing such rules.","msgtype":"m.text"},"ts":1293557100000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"I'm not sure there any standardizable way to map such vocabularies to a query string though.","msgtype":"m.text"},"ts":1293557160000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hm?  Of course there is.  ?dc:title=foo","msgtype":"m.text"},"ts":1293557161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: How about nested keys?","msgtype":"m.text"},"ts":1293557220000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"You can't express that in forms.","msgtype":"m.text"},"ts":1293557221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well, you can ... e.g. name=\"book[4]title\"","msgtype":"m.text"},"ts":1293557400000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Ah, yeah, sure, you can do server-side processing.","msgtype":"m.text"},"ts":1293557401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1293557402000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"providing an independent mapping of the HTML representation to a shared vocabulary allows you to decouple the details of that processing from the client code.","msgtype":"m.text"},"ts":1293557460000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hm, okay, I see your point.  Trying to automatically express the relationship in the key sent over the wire is probably a harder problem than just letting people express it twice themselves (once explicitly in the @name, once implicitly in the microdata structure).","msgtype":"m.text"},"ts":1293557520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suspect so.","msgtype":"m.text"},"ts":1293557521000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"TabAtkins: I think the point about value beginning in an invalid form (e.g. \"\" for a non-null data type) is a problem though.","msgtype":"m.text"},"ts":1293558000000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"TabAtkins: I guess in so far as HTML5 can express data types/validity without script, extraction of data rather than extraction of input points could be premised on validity.","msgtype":"m.text"},"ts":1293558060000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hm, that's true.","msgtype":"m.text"},"ts":1293558061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But that would mean that, for example, non-required inputs would still be included.","msgtype":"m.text"},"ts":1293558120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Excluding blank values might be possible; or including blank values might not be damaging - I'm not sure.","msgtype":"m.text"},"ts":1293558180000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"TabAtkins: [post] - [site] foâ€™ shoâ€™!","msgtype":"m.text"},"ts":1293561720000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: That's what I was thinking.  [site] - [post] is only for corporate branding - I find putting the post first is a lot more attractive for blogs.","msgtype":"m.text"},"ts":1293561780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: replied on Twitter as well, but [p] - [s] is definitely the most useful variant if you consider small tab sizes (like in Chrome)","msgtype":"m.text"},"ts":1293561840000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"why not just [title]","msgtype":"m.text"},"ts":1293562500000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"That makes it harder to, frex, remember where a bookmark came from.","msgtype":"m.text"},"ts":1293562620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, done.","msgtype":"m.text"},"ts":1293562621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yay!","msgtype":"m.text"},"ts":1293562622000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Also exposed a bug where I wasn't setting rel=canonical properly. I've rearchitected slightly to make future bugs of this sort less likely.","msgtype":"m.text"},"ts":1293562680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: heh, your site doesnâ€™t work without the www.","msgtype":"m.text"},"ts":1293564300000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Indeed.  That's the default for my provider - they seem to have a religious thing against it.  I haven't cared enough to set it up differently.","msgtype":"m.text"},"ts":1293564360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Any reason why the section on CSS pseudoclasses only mentions a restricted list of elements that can match :active, when in practice all browsers allow all elements to be :active while they are clicked?","msgtype":"m.text"},"ts":1293565380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: iirc it was based on a request of the csswg, but honestly i don't recall","msgtype":"m.text"},"ts":1293568200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1293568201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, wow, your provider is silly","msgtype":"m.text"},"ts":1293568320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, get DreamHost :)","msgtype":"m.text"},"ts":1293568321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dreamhost are pretty silly too","msgtype":"m.text"},"ts":1293568380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though maybe in a different way","msgtype":"m.text"},"ts":1293568381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I suspect it was a request from fantasai, since she dislikes the idea of arbitrary elements being activatable.","msgtype":"m.text"},"ts":1293570000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: In any case, all browsers allow all elements to be :active.","msgtype":"m.text"},"ts":1293570060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can file a bug if it would help.","msgtype":"m.text"},"ts":1293570061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, file a bug or send e-mail. IE didn't used to do this like the others.","msgtype":"m.text"},"ts":1293570240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, but they didn't use to do :hover on non-links either.","msgtype":"m.text"},"ts":1293570300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Will file.","msgtype":"m.text"},"ts":1293570301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1293570302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we're talking about :active, not :hover :-)","msgtype":"m.text"},"ts":1293570303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we do change this we'll have to define what :active means","msgtype":"m.text"},"ts":1293570304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Right, but they're done through similar events, and conceivably are handled similarly in the browser.","msgtype":"m.text"},"ts":1293570305000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and how to do it from the keyboard","msgtype":"m.text"},"ts":1293570306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You still can't activate arbitrary elements from the keyboard, unless they're tab-able or something.","msgtype":"m.text"},"ts":1293570360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that seems suboptimal","msgtype":"m.text"},"ts":1293570420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Huh.  IE8 & 9 let any element be activated, but only the target of the click gets :active, not everything up the chain.","msgtype":"m.text"},"ts":1293570600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://twitter.com/bga_/status/19863944524988416 :P","msgtype":"m.text"},"ts":1293570660000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"may be js not must know this. may be its security issue","msgtype":"m.text"},"ts":1293570720000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Bah, I can't be bothered to find the html bugzilla again.  I'll just email.  Same diff.","msgtype":"m.text"},"ts":1293570840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Aren't there already some slightly hacky ways to force the event loop to spin in the middle of code?  (Without breaking the code up and using setTimeout, that is.)","msgtype":"m.text"},"ts":1293571560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I'm thinking something involving databases has this effect.)","msgtype":"m.text"},"ts":1293572040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(fwiw, i use the same mechanism for e-mail and bugs now, so it really makes no difference to me)","msgtype":"m.text"},"ts":1293572100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Yeah, I know, that's why I did it.","msgtype":"m.text"},"ts":1293572160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this xml/html tf is baffling to me","msgtype":"m.text"},"ts":1293572161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they were created to figure out what problem they were created to figure out?","msgtype":"m.text"},"ts":1293572162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the w3c is getting dangerously close to poe's law","msgtype":"m.text"},"ts":1293572163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, they were created to make HTML act more like XML.  Nobody wants to admit it, though.","msgtype":"m.text"},"ts":1293572164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we already did that in the whatwg","msgtype":"m.text"},"ts":1293572165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"years ago","msgtype":"m.text"},"ts":1293572166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"html is closer to xml than it ever has been","msgtype":"m.text"},"ts":1293572220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But the namespaces, Hixie!  THE NAMESPACES!","msgtype":"m.text"},"ts":1293572221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the namespaces are issue 41","msgtype":"m.text"},"ts":1293572222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems premature to do anything while we're still waiting for teh chairs to decide on that","msgtype":"m.text"},"ts":1293572223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1293572224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I became insane, with long intervals of horrible sanity.","msgtype":"m.text"},"ts":1293572880000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: Looks like my provider added a one-click option for allowing bare domains since I last checked.  It automatically issues a 301 to the www. version, which is fine with me.","msgtype":"m.text"},"ts":1293574200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"prefers without redundant characters","msgtype":"m.emote"},"ts":1293574380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't particularly care either way, I just want a canonical url for the google juice.","msgtype":"m.text"},"ts":1293574381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that is, long ago I bought into http://no-www.org/","msgtype":"m.text"},"ts":1293574382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Doing what I just did (auto-redirect from bare to www) is compatible with no-www philosophy.","msgtype":"m.text"},"ts":1293574560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree that not allowing the bare name isn't ideal.  I only left it like that because I was lazy.","msgtype":"m.text"},"ts":1293574561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hehe, I love extra-www.org","msgtype":"m.text"},"ts":1293574620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess it is, yes, just seems like waste","msgtype":"m.text"},"ts":1293574800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what's being wasted.","msgtype":"m.text"},"ts":1293574801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"characters :)","msgtype":"m.text"},"ts":1293574802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"either characters or an additional request","msgtype":"m.text"},"ts":1293574860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand how chars are wasted - people can still type/link the bare domain name.","msgtype":"m.text"},"ts":1293574861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The additional request is required in one direction or the other, so I don't see much distinction about which direction it goes in.","msgtype":"m.text"},"ts":1293574862000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"huh. http://yes-www.org/ returns 403 while http://www.yes-www.org/ works","msgtype":"m.text"},"ts":1293574980000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Clearly they're doing the Hardcore option.","msgtype":"m.text"},"ts":1293574981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"one or the other it doesn't seem that important. How many type really type the letters of the domain name","msgtype":"m.text"},"ts":1293575040000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Yeah, I mean I just type \"FACEBOOK LOG ME IN\" into google.","msgtype":"m.text"},"ts":1293575041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"houla my usual dislexya","msgtype":"m.text"},"ts":1293575042000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"how many time","msgtype":"m.text"},"ts":1293575100000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"people","msgtype":"m.text"},"ts":1293575101000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"geeez","msgtype":"m.text"},"ts":1293575102000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"actually TabAtkins, your site is not correct per no-www","msgtype":"m.text"},"ts":1293575103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not that it matters","msgtype":"m.text"},"ts":1293575160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hm?","msgtype":"m.text"},"ts":1293575161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"check the validator","msgtype":"m.text"},"ts":1293575220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it won't work yet.  I just made the DNS change, like, ten minutes ago.","msgtype":"m.text"},"ts":1293575221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"surprised nobody proposed worldwideweb.example.org","msgtype":"m.text"},"ts":1293575280000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"another useless campaign http://www.antiifcampaign.com/","msgtype":"m.text"},"ts":1293576660000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Actually, that's not a bad campaign idea.","msgtype":"m.text"},"ts":1293576661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's poetic","msgtype":"m.text"},"ts":1293576720000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Seems a misleading name - it's not anti-if, it's just anti if-over-type-identifiers-as-a-cheap-substitute-for-polymorphism","msgtype":"m.text"},"ts":1293577260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hesitates to launch the goto-back-campaign.com :p","msgtype":"m.emote"},"ts":1293577620000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"but for now I guess I will do the less-have-a-wonderful-dinner.com","msgtype":"m.text"},"ts":1293577920000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: You're hopefully asleep by now, but could you respond to the \"What to include in a propdef\" thread on the csswg private list?","msgtype":"m.text"},"ts":1293579120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]