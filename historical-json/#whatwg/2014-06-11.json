[
{"content":{"body":"Hixie: glad you are deciphering this ES task/initialization stuff ... I think I got lost @_@","msgtype":"m.text"},"ts":1402448822000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I wonder what implementers will think","msgtype":"m.text"},"ts":1402469746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: any chance you can put a stop to people abusing mailing list addresses as Bugzilla accounts? https://www.w3.org/Bugs/Public/show_bug.cgi?id=25985#c27","msgtype":"m.text"},"ts":1402475866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: that's really confusing","msgtype":"m.text"},"ts":1402475886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: heh, I remember when we implemented that stuff I was similarly confused by the stacks and just assumed that bit was okay since we passed the tests","msgtype":"m.text"},"ts":1402477314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meow!","msgtype":"m.text"},"ts":1402483480000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"Removing author headers is proving to be a bit more invasive than expected, but it seems like it might play out well","msgtype":"m.text"},"ts":1402483665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What the WG?","msgtype":"m.text"},"ts":1402484464000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"That one's free.","msgtype":"m.text"},"ts":1402484471000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"I still don't know what \"What\" stands for.","msgtype":"m.text"},"ts":1402484496000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Or \"WHAT\".","msgtype":"m.text"},"ts":1402484499000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Web hypertext application technology","msgtype":"m.text"},"ts":1402484506000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I have never really grasped what your relation is to W3.","msgtype":"m.text"},"ts":1402484565000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"And the browser authors.","msgtype":"m.text"},"ts":1402484568000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"I just know W3/W3C started looking like a joke 10+ years ago.","msgtype":"m.text"},"ts":1402484577000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"coolbot95: http://wiki.whatwg.org/wiki/FAQ enjoy","msgtype":"m.text"},"ts":1402484637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1402485413000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Seems to match my \"10 years\" thing perfectly.","msgtype":"m.text"},"ts":1402485426000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Yeah, anniversary was a week ago","msgtype":"m.text"},"ts":1402485586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":S","msgtype":"m.text"},"ts":1402485659000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"annevk: with the no-proflight headers, do we need a \"cors-no-preflight\" mode that cannot be set on construction unless it's constructed by the UA?","msgtype":"m.text"},"ts":1402487102000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, that was an option I considered","msgtype":"m.text"},"ts":1402487130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I went with an \"unsafe request flag\" that will be set by XHR and fetch()","msgtype":"m.text"},"ts":1402487145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I haven't made this commit yet since it's pretty large and changes a bunch of things around","msgtype":"m.text"},"ts":1402487168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I really need to shower and get some food :p","msgtype":"m.text"},"ts":1402487189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1402487196000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: If I do myCache.put(request, response); event.respondWith(response); is that going to break? If we spec cache to tee response streams when storing, does it work around that?","msgtype":"m.text"},"ts":1402487454000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah we need to talk to Domenic about those streams","msgtype":"m.text"},"ts":1402487636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: maybe a structured clone of a stream should be a tee?","msgtype":"m.text"},"ts":1402487644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: to answer that we need to know how streams will work with structured cloning","msgtype":"m.text"},"ts":1402487672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which is hard since we don't even know how structured cloning works with promises","msgtype":"m.text"},"ts":1402487690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hah, thankfully we don't have to worry about that with request/response right?","msgtype":"m.text"},"ts":1402487726000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well storing is defined in terms of structured cloning...","msgtype":"m.text"},"ts":1402487764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but there are no promises on request/response. There are methods which return promises, but that's different right?","msgtype":"m.text"},"ts":1402487801000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, this is mostly about what should happen with the underlying stream","msgtype":"m.text"},"ts":1402487841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: there's no underlying promise, but a stream is basically a more complicated case of a promise I think when it comes to structured cloning","msgtype":"m.text"},"ts":1402487863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm still worried about how complicated cache.add(url, url, url) is when it comes to cross-origin stuff (on a CDN), having to change the mode for those. It's almost like no-cors is a better default for cache, although it'd be very weird to have a different default for fetch() where cors makes more sense","msgtype":"m.text"},"ts":1402488009000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Can't think of a simple answer there though. Will have a think","msgtype":"m.text"},"ts":1402488058000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: about that mailing-list bugzilla thing, I'll figure out who created that account and ask them to change the address to their actual address","msgtype":"m.text"},"ts":1402488241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: do you have any idea who it was that actually wrote that message?","msgtype":"m.text"},"ts":1402488280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder if maybe it was just that Harry created that account at some point and logged in with it so he could add it to the default Cc for webcrypto bugs, then forgot and stayed logged in with it and posted those bug comments","msgtype":"m.text"},"ts":1402488446000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I've actually done that myself before","msgtype":"m.text"},"ts":1402488461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't know how to completely prevent that happening occasionally, because as far as I know, the only way to get bugzilla to Cc a mailing list is to create a bugzilla account with the list address as the account name","msgtype":"m.text"},"ts":1402488557000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: you can always do cache.add(new Request(url, {mode:\"cors\"}), ...) but usability--","msgtype":"m.text"},"ts":1402488670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'll open an issue later on the structured clone and streams thing","msgtype":"m.text"},"ts":1402488688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that's hard :(","msgtype":"m.text"},"ts":1402488694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I suspect the chair","msgtype":"m.text"},"ts":1402488699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: oh Harry could be it I suppose","msgtype":"m.text"},"ts":1402488713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: ah ok","msgtype":"m.text"},"ts":1402488723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"streams probably want to require being transferred, like messageports","msgtype":"m.text"},"ts":1402489485000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so you don't end up with two endpoints","msgtype":"m.text"},"ts":1402489521000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: JakeA: if there are methods/properties that return promises, they likely return internal-slot promises... I don't really know how structured clone works with internal slots or other internal state.","msgtype":"m.text"},"ts":1402490527000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: The only promise-returning method on request/response is body.to","msgtype":"m.text"},"ts":1402490608000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, welp.","msgtype":"m.text"},"ts":1402490618000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"will dedicate more time to thinking about it when issue opens, but my first thought is that structured cloning should read a stream to the end into some sort of \"constant stream\" or \"snapshot stream\"","msgtype":"m.text"},"ts":1402490690000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"meanwhile i think i have admin rights on my computer today so i should hopefully be able to install git and sublime and get productive on streams...","msgtype":"m.text"},"ts":1402490754000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if you do that the super obvious cache.add(response); event.respondWith(response) would fail","msgtype":"m.text"},"ts":1402491023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess I meant teeing it before streaming","msgtype":"m.text"},"ts":1402491052000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"still think readToEnd is a better name than to because it makes the depletion obvious","msgtype":"m.text"},"ts":1402491065000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe body.readInto(\"blob\")?","msgtype":"m.text"},"ts":1402491127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ^^","msgtype":"m.text"},"ts":1402491135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm really happy with .to","msgtype":"m.text"},"ts":1402491136000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah actually, Domenic, the naming of to() doesn't matter here","msgtype":"m.text"},"ts":1402491171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"readInto is probably going to be used for binary streams: readInto(arrayBuffer, offset, length)","msgtype":"m.text"},"ts":1402491173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In my example above there was no invocation of to()","msgtype":"m.text"},"ts":1402491191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: shouldn't that be fill like how Array calls it?","msgtype":"m.text"},"ts":1402491218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1402491218000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no, I want read to be the verb that means \"read out of the queued data, making it unavailable for other consumers\"","msgtype":"m.text"},"ts":1402491240000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe readAndFill or something","msgtype":"m.text"},"ts":1402491248000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but yeah your example was not using to()/readToEnd(), which is why I was saying it's OK for it to tee","msgtype":"m.text"},"ts":1402491275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"whereas if we have all depleting things use the \"read\" verb, people can see that as the warning signal","msgtype":"m.text"},"ts":1402491290000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and other operations, like adding to cache, they can assume will not deplete","msgtype":"m.text"},"ts":1402491302000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm this tee-and-read-to-end approach for cloning makes sense for storing on disk, but not for cloning between realms. Maybe you transfer between realms?","msgtype":"m.text"},"ts":1402491479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: transfer makes sense","msgtype":"m.text"},"ts":1402491602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: note that if something can be transferred, you can clone it too, up to the user","msgtype":"m.text"},"ts":1402491627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what the hell? pressing escape isn't stopping animated gifs in firefox now","msgtype":"m.text"},"ts":1402492098000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=825486 stunning incompetence","msgtype":"m.text"},"ts":1402492229000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic: JakeA: https://github.com/slightlyoff/ServiceWorker/issues/313","msgtype":"m.text"},"ts":1402492528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: header commit made","msgtype":"m.text"},"ts":1402493385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this is great. I was showing some people the fetch api & related classes. Feedback very positive when compared to XHR","msgtype":"m.text"},"ts":1402493814000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"should write a blog post or something","msgtype":"m.text"},"ts":1402493828000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well","msgtype":"m.text"},"ts":1402493833000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: note that I also made it more clear what headers are exposed to SW now","msgtype":"m.text"},"ts":1402493844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's a bit like saying \"I told them about the flu. Feedback very positive when compared to cholera\"","msgtype":"m.text"},"ts":1402493857000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: basically only the things that are set by the API, nothing that would be set by the network","msgtype":"m.text"},"ts":1402493863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: haha","msgtype":"m.text"},"ts":1402493941000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Does that mean that there's a chance that Fetch will end up like Spanish Flu and kill millions of people across the world?","msgtype":"m.text"},"ts":1402493983000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: The CSP guys here are wanting SW responses to be treated as redirects so they can continue to deal with requests rather than responses","msgtype":"m.text"},"ts":1402493992000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I only ask because I might have to withdraw my endorsement of this technology in that case","msgtype":"m.text"},"ts":1402494007000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: explained to them why that doesn't really make sense without a boatload of hackery","msgtype":"m.text"},"ts":1402494019000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: hopefully that'll be the end of it, but expect resistance on having a CSP hook after SW provides a response","msgtype":"m.text"},"ts":1402494050000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: tell them to file a ticket","msgtype":"m.text"},"ts":1402494085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: seems bad to have that as Google-internal discussion","msgtype":"m.text"},"ts":1402494093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fair point, I'll encourage further discussion in the open","msgtype":"m.text"},"ts":1402494120000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: note that per CSP 1.1 if they treat them as redirects, SW would be blocked by default","msgtype":"m.text"},"ts":1402494177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: unless I don't understand the unsafe-redirect directive","msgtype":"m.text"},"ts":1402494197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, they were looking at all kinds of hackery to avoid just having a separate hook. I was happy with https://github.com/slightlyoff/ServiceWorker/issues/113#issuecomment-38908599 but I think they're looking at something different","msgtype":"m.text"},"ts":1402494236000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: are these different people than Mike West?","msgtype":"m.text"},"ts":1402494259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, still need to go through the whole Response story to make sure it's sane","msgtype":"m.text"},"ts":1402494299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: no, but if it does kill millions of people we'll blame you","msgtype":"m.text"},"ts":1402494358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, the initial proposal was used as a starting point :/","msgtype":"m.text"},"ts":1402494398000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Oh, in that case they might want to talk to Mike","msgtype":"m.text"},"ts":1402494489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The spec reflects discussions with him at BlinkOn and after","msgtype":"m.text"},"ts":1402494515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fetch(Request(\"http://secret.lab.gov/bio-terror/launch\", {method:POST}))","msgtype":"m.text"},"ts":1402494616000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Woo, renaming flexbox","msgtype":"m.text"},"ts":1402495031000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"blinks","msgtype":"m.emote"},"ts":1402495083000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hopes that was a temporal vortex causing 2012 Ms2ger to briefly appear in the present","msgtype":"m.emote"},"ts":1402495112000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Nah, just 2012 minutes, right folks? http://lists.w3.org/Archives/Public/www-style/2014Jun/0107.html","msgtype":"m.text"},"ts":1402495158000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: pretty sure POST has to be in quotes so that'd be fail :-)","msgtype":"m.text"},"ts":1402495449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"const POST = \"POST\";","msgtype":"m.text"},"ts":1402495488000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Dammit Ms2ger beat me to it","msgtype":"m.text"},"ts":1402495499000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: As always, only do renames when compatible. In this case, we're discussing only renaming the flex-basis value, but keeping \"auto\" in the flex shorthand.","msgtype":"m.text"},"ts":1402498085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It was a mistake to have a value that means completely different things as a computed and used value.","msgtype":"m.text"},"ts":1402498113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that does sound like a pretty dumb idea, yeah","msgtype":"m.text"},"ts":1402498170000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I no longer know what computed and used means :-(","msgtype":"m.text"},"ts":1402498189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just like not using <TABLE> for the tables in http://packages.qa.debian.org/s/systemd-shim.html","msgtype":"m.text"},"ts":1402498193000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: that's not a table, so seems legit","msgtype":"m.text"},"ts":1402498255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean the thing with the \"general\" header, and the one with the \"bugs\" header","msgtype":"m.text"},"ts":1402498284000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh also \"versions\"","msgtype":"m.text"},"ts":1402498291000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"... and \"patch-tracker\"","msgtype":"m.text"},"ts":1402498303000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I can see how using <dl> is fine there. Though CSS lacks a bit in the styling department","msgtype":"m.text"},"ts":1402498347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my issue is that the left and right columns are misaligned","msgtype":"m.text"},"ts":1402498370000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the bold font is like 1px taller here","msgtype":"m.text"},"ts":1402498394000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"huh, I guess a <dl> isn't as crazy as what I *expected* to find if I actually inspected","msgtype":"m.text"},"ts":1402498500000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"... so how the heck did they get it that screwed up?","msgtype":"m.text"},"ts":1402498512000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, would be saner with <di> though","msgtype":"m.text"},"ts":1402498579000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so basically they float these things","msgtype":"m.text"},"ts":1402498618000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"display: compact","msgtype":"m.text"},"ts":1402498687000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<di> does not exist","msgtype":"m.text"},"ts":1402498687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, I know","msgtype":"m.text"},"ts":1402498700000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"with <di>\" that was shorthand for \"with <di>, in an alternate universe where <di> actually existed\"","msgtype":"m.text"},"ts":1402498757000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Please leave your sense of alternate universes at the door, thanks!","msgtype":"m.text"},"ts":1402498889000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm getting pretty close to the point where I'm defining a generic multimap concept that FormData / URLSearchParams / Headers can use","msgtype":"m.text"},"ts":1402498898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Might not be that bad of an idea","msgtype":"m.text"},"ts":1402498913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe once I merge all the things","msgtype":"m.text"},"ts":1402498923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is the consensus that this is the right way to use promises? https://gist.github.com/mkruisselbrink/c5c5cd80f27f3158f451#file-gistfile1-pro-L23","msgtype":"m.text"},"ts":1402503062000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(Promise resolves to undefined on successful geofencing region registration, rejects otherwise).","msgtype":"m.text"},"ts":1402503247000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: LGTM. Remember to reject with Error instances (e.g. DOMExceptions, not DOMErrors)","msgtype":"m.text"},"ts":1402503510000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thanks! (Not working on this myself. Just bumped into Promise<void> and that just… felt weird.)","msgtype":"m.text"},"ts":1402503592000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: Just read the Cascade spec","msgtype":"m.text"},"ts":1402505061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: URLSearchParams, is that what I think it is?","msgtype":"m.text"},"ts":1402505081000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"(parsed map of location.search)","msgtype":"m.text"},"ts":1402505085000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I guess FormData's interface is similar to DOMTokenList (e.g. classList), with more type support of course and differentmethod names at the moment. It might be useful to have a getter on FormData instead of just append, too.","msgtype":"m.text"},"ts":1402505174000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"oh, have you guys what Emacs does with bytes that don't form part of a valid code sequence during character decoding?","msgtype":"m.text"},"ts":1402506096000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you can't do it with an API that forces UTF-16, though :-(","msgtype":"m.text"},"ts":1402506519000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"any programmer's editor will do that, vim handles it cleanly too","msgtype":"m.text"},"ts":1402508370000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"though i've never trusted it to actually save changes when that happens","msgtype":"m.text"},"ts":1402508401000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"probably best to figure out WTF went wrong first and fix it, certainly","msgtype":"m.text"},"ts":1402508427000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: I was referring to the manner in which it represents the incomprehensible bytes though ;-)","msgtype":"m.text"},"ts":1402508468000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402509439000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"suppose a group provided a web service that took HTML input, and did something to it","msgtype":"m.text"},"ts":1402509458000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"say, anolis. or a translator tool.","msgtype":"m.text"},"ts":1402509465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now suppose that that tool needs the markup annotated in some way","msgtype":"m.text"},"ts":1402509492000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. <code data-anolis-xref=\"attr-foo\">foo</code> or <span data-translation-hint=\"name\">Fred</span>","msgtype":"m.text"},"ts":1402509537000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"according to the spec, data-*=\"\" is inappropriate for this, because \"Custom data attributes are intended to store custom data private to the page or application, for which there are no more appropriate attributes or elements\" and \"These attributes are not intended for use by software that is independent of the site that uses the attributes\"","msgtype":"m.text"},"ts":1402509576000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what should we recommend to such tools?","msgtype":"m.text"},"ts":1402509591000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"data-?","msgtype":"m.text"},"ts":1402509605000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(i.e., change the spec)","msgtype":"m.text"},"ts":1402509610000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the author is adding these attributes for the express purpose of feeding their content to the web service?","msgtype":"m.text"},"ts":1402509626000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"yeah, that was the only idea other than having them define a spec that i could come up with","msgtype":"m.text"},"ts":1402509637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: yeah","msgtype":"m.text"},"ts":1402509641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oooh i know XML namespaces!!!","msgtype":"m.text"},"ts":1402509649000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"pushes Domenic off a bridge","msgtype":"m.emote"},"ts":1402509658000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"or ... custom DTDs!??!?!","msgtype":"m.text"},"ts":1402509659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: don't make me turn this channel around!","msgtype":"m.text"},"ts":1402509666000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, the CSSWG is the one that uses custom DTDs","msgtype":"m.text"},"ts":1402509675000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"given the author's intent, i think data-* is appropriate. they *are* storing custom data private to the application","msgtype":"m.text"},"ts":1402509708000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"yeah, i guess it could be read that way","msgtype":"m.text"},"ts":1402509737000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, doesn't matter, this isn't HTML ;)","msgtype":"m.text"},"ts":1402509739000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"this feels vaguely related to the way in which custom element users like to use custom attributes too...","msgtype":"m.text"},"ts":1402509740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's kinda borderline, but close enough","msgtype":"m.text"},"ts":1402509741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the attributes *aren't* being used by software independent of the site, because the author made things dependent by adding them with the intent of feeding the site to the service","msgtype":"m.text"},"ts":1402509741000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1402509753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll tweak the text","msgtype":"m.text"},"ts":1402509757000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: vim just shows <EC>, iirc","msgtype":"m.text"},"ts":1402518075000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"treated as a single \"character\"","msgtype":"m.text"},"ts":1402518086000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Emacs has special \"8-bit characters\" that it uses for incomprehensible high bytes in input","msgtype":"m.text"},"ts":1402518121000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"firefox uses magic glyphs that show the hex value inside","msgtype":"m.text"},"ts":1402518140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I thought firefox converted incomprehensible byte sequences to U+FFFD","msgtype":"m.text"},"ts":1402518173000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i mean when it has undisplayable things in utf-16 space","msgtype":"m.text"},"ts":1402518201000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"forget the particular cases, probably things like lone surrogates and control characters","msgtype":"m.text"},"ts":1402518214000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyway, Emacs uses codepoints past the end of current Unicode for high bytes that it can't decode from the coding system it's attempting to decode","msgtype":"m.text"},"ts":1402518258000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and it uses a fairly evil representation of them in buffer text ;-P","msgtype":"m.text"},"ts":1402518309000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: you know how it's forbidden to represent any codepoint using more bytes than necessary in UTF-8 now?","msgtype":"m.text"},"ts":1402518350000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"now\"? since the dawn of time","msgtype":"m.text"},"ts":1402518403000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, I don't remember what the original spec said, okay?","msgtype":"m.text"},"ts":1402518424000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"even if, for all I know, it's exactly like what my current manpage says","msgtype":"m.text"},"ts":1402518490000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway, Emacs uses the two-byte forms that are not permitted to be used to encode ASCII for its \"8-bit byte\" codepoints ;-)","msgtype":"m.text"},"ts":1402518559000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(mostly only internally, though it seems that you can write such things to a file if you really want)","msgtype":"m.text"},"ts":1402518583000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(mind you, I believe these codepoints are also used, e.g., for data that Emacs has made no attempt to decode using any particular coding-system)","msgtype":"m.text"},"ts":1402518704000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(otherwise, it probably wouldn't be all that important to use other than the dawn-of-time UTF-8 sequences for those codepoints)","msgtype":"m.text"},"ts":1402518744000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(since, as you know, dawn-of-time UTF-8 can encode up through 0x7FFFFFFF)","msgtype":"m.text"},"ts":1402518777000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1402519974000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"top(1) reckons my CPU is at about \"96.4%us\"","msgtype":"m.text"},"ts":1402519993000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but sorting processes by CPU usage, and showing everything, i can only account for about 20% CPU.","msgtype":"m.text"},"ts":1402520014000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf is the rest of it being used by?","msgtype":"m.text"},"ts":1402520021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and how can i find out?","msgtype":"m.text"},"ts":1402520027000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ps?","msgtype":"m.text"},"ts":1402520038000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"isn't that the same data as top?","msgtype":"m.text"},"ts":1402520063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"who knows, it sounds like top isn't using the same data as top","msgtype":"m.text"},"ts":1402520094000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or maybe it's averaged differently or something","msgtype":"m.text"},"ts":1402520116000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"depending on which version of top, it may be showing only your user processes and not including system threads","msgtype":"m.text"},"ts":1402520118000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"there is usually an option to turn that on","msgtype":"m.text"},"ts":1402520128000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"right now on a random machine I regularly see processing taing more CPU than the summary claims is in use","msgtype":"m.text"},"ts":1402520144000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i can see init, so i'm guessing it's showing all processes","msgtype":"m.text"},"ts":1402520156000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one confusion is sometimes cpu numbers are per-cpu, sometimes they're systemwide","msgtype":"m.text"},"ts":1402520164000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"init probably isn't quite the same as a kernel thread process","msgtype":"m.text"},"ts":1402520176000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"those are the ones that show up in brackets in ps","msgtype":"m.text"},"ts":1402520187000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(assuming linux)","msgtype":"m.text"},"ts":1402520190000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i've never seen those take any resources at all, and I wish ps wouldn't show them without a flag since it's just a ton of noise","msgtype":"m.text"},"ts":1402520261000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"ps -A -opcpu,pid,uname,args --sort=pcpu S -m\" blames apache","msgtype":"m.text"},"ts":1402520565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Krinkle: it has a getter","msgtype":"m.text"},"ts":1402524987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and so it does..","msgtype":"m.text"},"ts":1402525983000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"annevk: http://xhr.spec.whatwg.org/#interface-formdata","msgtype":"m.text"},"ts":1402525995000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"But not implemented yet (in Chrome anyway)","msgtype":"m.text"},"ts":1402526003000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"yes, I wrote that","msgtype":"m.text"},"ts":1402526010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know you did.","msgtype":"m.text"},"ts":1402526016000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1402526016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slaapse","msgtype":"m.text"},"ts":1402526022000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"(groetn uut enschede)","msgtype":"m.text"},"ts":1402526037000,"senderName":"Krinkle","senderId":"Krinkle@irc"}
]