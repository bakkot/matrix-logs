[
{"content":{"body":"tobie: could it be that there are changes to PR Preview that are not in GitHub?","msgtype":"m.text"},"ts":1605003959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: we no longer see the warnings with our specifications, but there's nothing that suggests we would have removed them","msgtype":"m.text"},"ts":1605003978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: although now that I ask you, I am starting to suspect Bikeshed as that is often a source of regressions","msgtype":"m.text"},"ts":1605003997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: could there have been a change in Bikeshed that would mean that warnings no longer show up everywhere?","msgtype":"m.text"},"ts":1605004856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"files https://github.com/tabatkins/bikeshed/issues/1818","msgtype":"m.emote"},"ts":1605006321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: JakeA: what's a good label for AbortController/AbortSignal? \"topic: aborting\"?","msgtype":"m.text"},"ts":1605026723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: works for me","msgtype":"m.text"},"ts":1605026752000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Is this a push or pull underlying source: https://www.typescriptlang.org/play?#code/DYUwLgBAlhC8EAYDcAoFBjA9gOwM6QCcQBDAE2ICNQBlMI4gWzgmxAHcIAlE8qkW+gwA82AK4MKIAgD4AFAG80ECPmIEwsrNjqZgoAgEoIi5cq35o2qQDdiwZrnABJKwVvBZso7GnGIWnT0pADoQbABHURAo2SgDJGgAakSEgF8AGggARgRc+KVTRzAAFSgGEExRDS84XxNTM1A1FzAbO1jXd3yGsxxA-WD0YExHL1QGjOzcvPGIVJRU-IwcC3pSKWY1yho6EgZggHNwbjIpMeW8XRBg4YPZNakDC9WeZhqfYxRey9AbzDuAORrKDYA4A7oQL4QB4EYJrLzBMAACzCsihylk7ii3","msgtype":"m.text"},"ts":1605042437000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"jq-hWVz+dyxIHi0AAZhBMXYosFSDgQHBYPAyXZHEZ5NCeGM5nMofl5vD4kA","msgtype":"m.text"},"ts":1605042437000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"https://jsfiddle.net/croraf/a8r9hojz/","msgtype":"m.text"},"ts":1605042698000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: https://streams.spec.whatwg.org/#creating-examples","msgtype":"m.text"},"ts":1605042731000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"compare some of the push examples with 10.4","msgtype":"m.text"},"ts":1605042776000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"this is the push underlying source?","msgtype":"m.text"},"ts":1605043113000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it generates data no matter if I listen or not","msgtype":"m.text"},"ts":1605043133000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I mean it enqueues no matter if I read it or not","msgtype":"m.text"},"ts":1605043153000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1605043163000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"hm, now I'm wondering what happens if you have a push source without backpressure but there's no one listening","msgtype":"m.text"},"ts":1605043400000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"for a user-created stream, it can't block because it'd deadlock the tab, so it must throw, I guess","msgtype":"m.text"},"ts":1605043430000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"to remove a chunk from the \"queue\" you must read it with the reader, any other way?","msgtype":"m.text"},"ts":1605043503000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I don't think there's any other way, but streams isn't my area of expertise","msgtype":"m.text"},"ts":1605043548000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"i thought you are an expert in streams :D","msgtype":"m.text"},"ts":1605043563000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I/O queues perhaps, readable/writable streams not so much :)","msgtype":"m.text"},"ts":1605043609000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"push ReadableStreams seem very simple, the set up underlying source enqueues and the reader reads.","msgtype":"m.text"},"ts":1605043956000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"until you add backpressure, that is","msgtype":"m.text"},"ts":1605043985000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"then it's not so simple anymore","msgtype":"m.text"},"ts":1605044003000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: the queue just keeps getting larger forever","msgtype":"m.text"},"ts":1605044289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"croraf: the queue can also get empty if the stream errors, or if the reader calls reader.cancel()","msgtype":"m.text"},"ts":1605044320000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Agreed that dealing with backpressure for push streams makes them harder","msgtype":"m.text"},"ts":1605044342000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And what about when you make a tee. And you keep consuming one stream, but not the other.","msgtype":"m.text"},"ts":1605044384000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Does it tee() make 2 buffers","msgtype":"m.text"},"ts":1605044422000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Domenic: the queue getting larger forever doesn't seem ideal, but I guess if no one's reading from the stream it's very likely that it was dropped, in which case the GC could collect the items","msgtype":"m.text"},"ts":1605044504000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"croraf: tee() makes two streams, each of which have their own queue, indeed.","msgtype":"m.text"},"ts":1605044555000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, thanks. What happens with the queue of the original stream then. Let's say the queue has 1000 items in it already, when you make a tee.","msgtype":"m.text"},"ts":1605044740000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: the chunks will generally stay in the original stream's queue. read() from either branch will pull an item from the original stream's queue into the two branches' queues (one of which will immediately be delivered to the caller of read()).","msgtype":"m.text"},"ts":1605044848000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So e.g. if you do 500 read()s on branch1 and 250 reads on branch2, the end result will be 500 chunks in originalStream, 0 chunks in branch1, and 250 chunks in branch2.","msgtype":"m.text"},"ts":1605044904000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why didnt the original stream get its chunks deleted?","msgtype":"m.text"},"ts":1605044953000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Oh, it had 1000 at first","msgtype":"m.text"},"ts":1605044963000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"as per my example","msgtype":"m.text"},"ts":1605044967000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Indeed, only the chunks which someone asked for got pulled into the branches","msgtype":"m.text"},"ts":1605044980000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Even after the tee has been created, the original source will still push on the originalStream's queue?","msgtype":"m.text"},"ts":1605045036000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1605045089000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1605045263000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Well, tee-ing a stream will consume data from its queue even though the original stream is not read with a reader.","msgtype":"m.text"},"ts":1605046592000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"So this is another way to remove chunks from the queue.","msgtype":"m.text"},"ts":1605046639000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Which also makes me wonder what happens if you pipe the original ReadableStream to a WriteableStream or through a TransformStream","msgtype":"m.text"},"ts":1605046705000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Both teeing and piping use readers internally","msgtype":"m.text"},"ts":1605047594000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That is step 3 in https://streams.spec.whatwg.org/#readable-stream-tee ?","msgtype":"m.text"},"ts":1605048043000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Correct","msgtype":"m.text"},"ts":1605048182000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm checking https://streams.spec.whatwg.org/#readable-stream-pipe-to 15, which describes how the pipeTo works.","msgtype":"m.text"},"ts":1605048470000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Basically pipeTo reads from ReadableStream (with push source) as soon as there is something available in the queue and writes to the WriteableStream.","msgtype":"m.text"},"ts":1605048553000,"senderName":"croraf","senderId":"croraf@irc"}
]