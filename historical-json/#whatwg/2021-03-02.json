[
{"content":{"body":"Domenic, I mean you cannot have complete control over the 3rd party libraries. This is a major vector of attack.","msgtype":"m.text"},"ts":1614654478000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This is the reason why HTTP only cookie exists, to prevent access to it from 3rd party library code.","msgtype":"m.text"},"ts":1614654506000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"That's not true; it's to prevent access from JS at all (including first party)","msgtype":"m.text"},"ts":1614654917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you do not trust the third party libraries, and do not have the resources to audit them, then you shouldn't use them.","msgtype":"m.text"},"ts":1614654934000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"HttpOnly cookies are defense-in-depth, so that in the case of XSS you still have a chance","msgtype":"m.text"},"ts":1614662471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/csswizardry/status/1366431849925476356 - can we make the html standard faster to paint? what's causing it to take 6.8 seconds?","msgtype":"m.text"},"ts":1614675730000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you should ask him a link to the webpagetest used. my bet is that this is capped to 3G","msgtype":"m.text"},"ts":1614675810000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"zcorpan: JakeA looked into this with that new CSS property","msgtype":"m.text"},"ts":1614675856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Rik`: good point. but testing locally with 500/500 connection it takes about the same amount of time to first paint","msgtype":"m.text"},"ts":1614675908000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: oh right, content-visibility: auto","msgtype":"m.text"},"ts":1614676110000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://www.webpagetest.org/video/compare.php?tests=210302_AiZT_414af020384b0e09012567cad3a12c67-r:1-c:0","msgtype":"m.text"},"ts":1614676635000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"first-step : use the same domain for HTML and CSS","msgtype":"m.text"},"ts":1614676662000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Rik`: are you telling us the subdomain scheme for each spec was a mistake? :P","msgtype":"m.text"},"ts":1614676755000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://html-spec-with-c-v.glitch.me/","msgtype":"m.text"},"ts":1614676912000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(using `content-visibility`)","msgtype":"m.text"},"ts":1614676923000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: nice! fast-fast","msgtype":"m.text"},"ts":1614676950000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess we're waiting for a second implementation","msgtype":"m.text"},"ts":1614677108000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If it's an accepted standard I think it's okay to add the property, but is that really all there is to it?","msgtype":"m.text"},"ts":1614677157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"need to add a bunch of <section>s (or <div>s would work too)","msgtype":"m.text"},"ts":1614677214000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Some folks don't like the scrollbar behaviour, although I think we tried to improve that though","msgtype":"m.text"},"ts":1614677227000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I know Domenic wasn't happy with it","msgtype":"m.text"},"ts":1614677241000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Also https://github.com/tc39/ecmarkup/pull/263","msgtype":"m.text"},"ts":1614677342000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do you know if webkit is interested in implementing? I don't see a bug for it","msgtype":"m.text"},"ts":1614677356000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://www.webpagetest.org/video/compare.php?tests=210302_Ai2F_d0f8e800e633104520f0dda99a7142bf-r%3A2-c%3A0&thumbSize=200&ival=100&end=visual seems like there are some inefficiencies in the TCP/TLS handshakes as well","msgtype":"m.text"},"ts":1614677533000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"this test is with a non-capped connection and TCP/TLS takes way more time than DNS","msgtype":"m.text"},"ts":1614677577000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"zcorpan: I'm not sure what webkit's position is","msgtype":"m.text"},"ts":1614677592000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it does not look like the spec servers are behind any kind of CDN so maybe that's why?","msgtype":"m.text"},"ts":1614677632000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Ooh right, I forgot about the scrollbar issue, that does seem bad","msgtype":"m.text"},"ts":1614677767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Rik`: they are not, we use DigitalOcean atm and that's it","msgtype":"m.text"},"ts":1614677837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in which region? US probably?","msgtype":"m.text"},"ts":1614677878000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Rik`: dunno","msgtype":"m.text"},"ts":1614677939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith might know and foolip would know, but he's off this week","msgtype":"m.text"},"ts":1614677986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"technical bikeshed question... trying to link from fetch to \"time origin\" which is exported from HR-TIME and it wouldn't catch... Tried all the different voodoo <a for=\"time origin\">time origin</a> [[!HR-TIME-2]] etc, what should I be looking for?","msgtype":"m.text"},"ts":1614678896000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: is HR-TIME indexed?","msgtype":"m.text"},"ts":1614679102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: it seems that <a for=/>time origin</a> should work","msgtype":"m.text"},"ts":1614679151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am not sure I know what that means (still new-ish to spec-land). It does catch HR-TIME, but it doesn't  catch \"time origin\". \"No 'dfn' refs found for 'time origin' that are marked for export\"","msgtype":"m.text"},"ts":1614679232000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: oh, weird, it's included in `bikeshed refs --spec=hr-time` and it even says it's exported there","msgtype":"m.text"},"ts":1614679278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: are you doing this locally? Is your bikeshed up-to-date?","msgtype":"m.text"},"ts":1614679329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes locally. maybe an old bikeshed thing. Let me check","msgtype":"m.text"},"ts":1614679345000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"(it works here)","msgtype":"m.text"},"ts":1614679373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea that was it. thanks annevk","msgtype":"m.text"},"ts":1614679528000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: another thought I want to run by you :) Currently HR-TIME defines timeOrigin, which may be different between different clients of fetch. I'm trying to decide between bookkeeping the time as relative to the client's timeOrigin, or as global monotonic time and diff`ing it with timeOrigin when it's reported. not sure which is cleaner. any preference?","msgtype":"m.text"},"ts":1614682894000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Seems like the implementations do the latter","msgtype":"m.text"},"ts":1614683207000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: when in doubt follow implementations; at least that's what I usually do","msgtype":"m.text"},"ts":1614683320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea learning that. thanks","msgtype":"m.text"},"ts":1614683338000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: maybe the fact that a request can come from a document and end up in a service worker also plays a role here","msgtype":"m.text"},"ts":1614683342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: exactly, the service worker has a different timeOrigin from the document, which means that I can't use something like \"current high resolution time\" and need either a given timeOrigin or to use the global monotonic time","msgtype":"m.text"},"ts":1614683403000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Rik`: our DigitalOcean servers are in New York","msgtype":"m.text"},"ts":1614683469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can investigate any details of the setup for them, as long as the DigitalOcean admin UI exposes the info","msgtype":"m.text"},"ts":1614683545000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as web servers and TLS, we’re just running nginx and using Let’s Encrypyt certs","msgtype":"m.text"},"ts":1614683589000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we’re not using any other CDN on top of that, as far as I can recall","msgtype":"m.text"},"ts":1614683787000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: each browser gives a different code point for https://hsivonen.com/test/moz/xml-decl/space-around-label.htm good times","msgtype":"m.text"},"ts":1614696484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why dont svg elements accept a title attribute?","msgtype":"m.text"},"ts":1614696901000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"(I mean handle and show the info)","msgtype":"m.text"},"ts":1614696933000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"probably because there is no such feature in the svg specification","msgtype":"m.text"},"ts":1614697181000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"svg uses the <title> element instead","msgtype":"m.text"},"ts":1614697191000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: https://github.com/w3c/csswg-drafts/pull/5838 has been merged but if you can still review it that would be great. I’m not confident I got it right, and can create a follow-up PR for any further fixes needed","msgtype":"m.text"},"ts":1614701620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you should use <a for=request>URL</a> and such","msgtype":"m.text"},"ts":1614701707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I think you also want to set <a for=request>mode</a> to \"cors\"","msgtype":"m.text"},"ts":1614701716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: it also doesn't seem to do anything with the request? Like it needs to be passed to fetch and then you need to handle the response","msgtype":"m.text"},"ts":1614701761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the prior text was also inadequate though :-)","msgtype":"m.text"},"ts":1614701784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah it was not really rigorously specified before","msgtype":"m.text"},"ts":1614701855000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm not sure how much work you want to be doing, but there's a *lot* missing when it comes to fetching and CSS","msgtype":"m.text"},"ts":1614701868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: also \"spec:fetch; type:dfn; for:/; text:request\" should not be needed ideally","msgtype":"m.text"},"ts":1614701908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1614701922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess they are needed unless you use <a for=/>request</a>","msgtype":"m.text"},"ts":1614701941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1614701951000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, will fix that","msgtype":"m.text"},"ts":1614701964000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about the other CSS fetch stuff, I think I don’t want to do any more of it than this","msgtype":"m.text"},"ts":1614701989000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because it’s just pulling at a thread","msgtype":"m.text"},"ts":1614702003000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the thing is, I can’t even remember now why I raised the original PR about this","msgtype":"m.text"},"ts":1614702041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the original PR I raised for HTML to expose a particular dfn","msgtype":"m.text"},"ts":1614702064000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it turned out we didn’t want to expose that, because that CSS spec was calling into the wrong thing anyway","msgtype":"m.text"},"ts":1614702109000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1614702112000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wish I could just remember what the original problem was that I had meant to solvelllllll","msgtype":"m.text"},"ts":1614702137000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1614702144000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno where those extra lllls came from","msgtype":"m.text"},"ts":1614702162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I will make a follow-up for that PR","msgtype":"m.text"},"ts":1614702202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ondras, OK, but svg root element is an HTML element, why is it unfeasible to handle \"title\"?","msgtype":"m.text"},"ts":1614712451000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"probably because its properties (attributes, IDL, ...) are defined within the SVG spec and not the HTML spec","msgtype":"m.text"},"ts":1614712843000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ok folks. updating html parser tests is way too painful","msgtype":"m.text"},"ts":1614717769000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"gsnedders: jgraham: does html5lib have a convenient way to rebaseline .pytest.expect?","msgtype":"m.text"},"ts":1614718031000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: honest answer: in WPT,  it should probably checkout a given revision of both html5lib-python and html5lib-tests, not necessarily the html5lib-tests that html5lib-python has","msgtype":"m.text"},"ts":1614718381000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah, I was thinking about that too. does wpt need html5lib-python at all?","msgtype":"m.text"},"ts":1614718428000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: it uses the parser for the test data format from html5lib-python","msgtype":"m.text"},"ts":1614718471000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: ah ok. but yeah, it could hardcode a specific revision of html5lib-tests","msgtype":"m.text"},"ts":1614718546000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"honestly I wish https://github.com/html5lib/html5lib-tests/pull/83 had landed five(!) years ago with some sort of linter and parser for the test format upstream, though I'd like to move more of html5lib-tests to wpt and preferably just use JS to parse the files in the brower, which does admittedly mean faffing aroudn with sha1 if we want to keep the test names the same (which I don't think we need to?)","msgtype":"m.text"},"ts":1614718658000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(like changing the test names to something meaningful would be a one-time pain)","msgtype":"m.text"},"ts":1614718675000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but like none of this has been a priority for my time in a very long timer","msgtype":"m.text"},"ts":1614718707000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*time","msgtype":"m.text"},"ts":1614718709000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Test name changes are fine for chromium I think, less sure about gecko and webkit","msgtype":"m.text"},"ts":1614719413000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and yeah, moving the test data into wpt and getting rid of html5lib dependency sounds good","msgtype":"m.text"},"ts":1614719504000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Sounds like a possible project for a contractor if we knew any","msgtype":"m.text"},"ts":1614719580000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"gsnedders: r? https://github.com/html5lib/html5lib-python/pull/531","msgtype":"m.text"},"ts":1614720504000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: FWIW about the CSS font-loading PR, I see now that https://stackoverflow.com/questions/65588439/unexpected-http-request-mode-while-fetching-font-file-from-same-origin#comment115965754_65588439 is what led me to it to begin with","msgtype":"m.text"},"ts":1614723946000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]