[
{"content":{"body":"annevk: Under the \"setter\" section of https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-idl-attributes, what type is the \"given value\" in the case elem.onclick = function(e) {...}...I imagine it is a callback object, not a raw uncompiled handler?","msgtype":"m.text"},"ts":1536640163000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: I believe it is, I'm just trying to find out when an event handler's value will ever be created as an internal raw uncompiled handler. That seems to be in the attribute change steps, but I expected to see these steps being called from the parser or something","msgtype":"m.text"},"ts":1536641784000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: setAttribute","msgtype":"m.text"},"ts":1536642326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hm, that's for when call from script right? How about when no script is running, and the browser is just parsing <link ... onload=\"whereDoesThisGetParsed?\"> I kinda expect something like DOM's set-attribute and set-an-attribute-value to be called at some point?","msgtype":"m.text"},"ts":1536642744000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: that will do so per the parser","msgtype":"m.text"},"ts":1536643134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: might not all be linked up","msgtype":"m.text"},"ts":1536643146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok thanks","msgtype":"m.text"},"ts":1536643462000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: One more (unrelated to event handlers) question: in https://html.spec.whatwg.org/multipage/semantics.html#interactions-of-styling-and-scripting, we have a list of conditions that, if met, make a style sheet one that \"blocks scripts\".","msgtype":"m.text"},"ts":1536643786000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk:  I'd expect after a script-blocking style sheet is obtained, one of those conditions would definitely not hold, so that we can effectively decrement the number of script-blocking ss's. Is that what the purpose of the `style sheet ready` flag is?","msgtype":"m.text"},"ts":1536643817000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":" Dunno offhand","msgtype":"m.text"},"ts":1536643879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can check in ~2h","msgtype":"m.text"},"ts":1536643898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Regardless, it seems that if those conditions are used to determine whether a style sheet is script-blocking, it's hard to distinguish a style sheet that has successfully loaded, and thus is no longer script-blocking, from one that is.","msgtype":"m.text"},"ts":1536643944000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Sure sure no worries, sorry to ping so early","msgtype":"m.text"},"ts":1536643952000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Hmm yeah, maybe; Emilio also mentioned (somewhat related) that matching the environment requires layout for iframes and such and is therefore more fuzzy than one might expect","msgtype":"m.text"},"ts":1536644545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll add a comment to https://github.com/whatwg/html/pull/3544 in the morning about maybe explicitly making a style sheet non-script-blocking after it has been obtained. Yeah it would be nice to have \"matching\" defined (is it?) somewhere...that's a good point. Should we file an issue to harden that?","msgtype":"m.text"},"ts":1536648501000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Oh, wait it is defined whoops. But yeah if that's more fuzzy than expected it might be nice to clean that up? Not sure how to though","msgtype":"m.text"},"ts":1536648594000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah, not sure either","msgtype":"m.text"},"ts":1536649791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://discourse.wicg.io/ <-- why was I not aware of this awesome place","msgtype":"m.text"},"ts":1536666191000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"Domenic: Oh sorry, didn't see your latest comment on https://github.com/whatwg/html/issues/3610 before posting mine :)","msgtype":"m.text"},"ts":1536681106000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"(Question in my comment may help me write a test under https://github.com/web-platform-tests/wpt/tree/master/html/semantics/document-metadata/interactions-of-styling-and-scripting testing that script-blocking style sheets have their events fired before script execution)","msgtype":"m.text"},"ts":1536681518000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":":disconnect chat.freenode.net","msgtype":"m.text"},"ts":1536681702000,"senderName":"hoishin","senderId":"hoishin@irc"},
{"content":{"body":"domfarolino: it seems it isn’t really defined when that flag gets set","msgtype":"m.text"},"ts":1536682041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: I’d expect it to be set as part of the task dispatching the load event","msgtype":"m.text"},"ts":1536682076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Forgot to look at it earlier, sorry)","msgtype":"m.text"},"ts":1536682123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Agreed, I think it could be (potentially renamed to \"style sheet resolved\" and) and used in https://html.spec.whatwg.org/multipage/semantics.html#obtaining-a-resource-from-a-link-element:critical-subresources to remove the given resource from the set of script-blocking resources","msgtype":"m.text"},"ts":1536682231000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: reason to rename?","msgtype":"m.text"},"ts":1536682278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"style sheet ready\" very much indicates that it obtained successfully (IMO). I think it'd be nice to be more general, since even resources that were failed to obtain are at least no longer script-blocking","msgtype":"m.text"},"ts":1536682318000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: ah, prefer “done” then due to promises","msgtype":"m.text"},"ts":1536682355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1536682363000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Also if you happen to have an answer for https://github.com/whatwg/html/issues/3610#issuecomment-420322487 that would help me file a chrome bug :)","msgtype":"m.text"},"ts":1536682444000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"If we make the setting of the “style sheet ready/done” flag part of the task that gets fired, then of course script execution will be blocked on both obtaining the resource _and_ firing the event. But since it isn’t entirely clear (to me) when a resource becomes non-script-blocking, I can’t tell if the ordering of the fired event and script script execution is well-specified (though IMO it should be)","msgtype":"m.text"},"ts":1536682867000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it depends on specifying that flag","msgtype":"m.text"},"ts":1536682901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: so once that is done it’ll be the first option","msgtype":"m.text"},"ts":1536682926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thank you very much!","msgtype":"m.text"},"ts":1536683001000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"anyone know how to get hard line wrapping to work well in Sublime Text?","msgtype":"m.text"},"ts":1536685028000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: You mean automatically inserting a hard line break when it auto-wraps at some column?","msgtype":"m.text"},"ts":1536686255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That would be nice, or just a keyboard shortcut to wrap the selection would be ok as well. The built-in one seems kinda broken; it doesn't collapse the indentation to a single space and it preserves existing newlines","msgtype":"m.text"},"ts":1536687179000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hard wrap in TextWrangler/BBEdit worked better","msgtype":"m.text"},"ts":1536687232000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: for HTML I always copy and paste text through https://output.jsbin.com/maferi . Should work on turning that logic into a Sublime plugin.","msgtype":"m.text"},"ts":1536687695000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks. I'll try making a plugin some day","msgtype":"m.text"},"ts":1536688369000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is there something that has replaced https://wiki.whatwg.org/wiki/sanitization_rules ?","msgtype":"m.text"},"ts":1536709412000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"alternatively, known-good html sanitizers that follows the spec for how to parse html","msgtype":"m.text"},"ts":1536709555000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think the canonical answer is https://github.com/cure53/DOMPurify","msgtype":"m.text"},"ts":1536709614000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1536709912000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]