[
{"content":{"body":"aho: by the way re: multiple range requests and reading multiple files out of a zip in one request, http://tools.ietf.org/html/draft-ietf-httpbis-p5-range-06#page-11","msgtype":"m.text"},"ts":1303865220000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1303865221000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(we were confused before since we were looking at Content-Range, the response header, rather than the request header)","msgtype":"m.text"},"ts":1303865222000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gonna stick with gzipped (simple index + concatinated data) for now though... well, for my games, that is","msgtype":"m.text"},"ts":1303865400000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"do you happen to know how to make xhr get cachable with opera?","msgtype":"m.text"},"ts":1303865460000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"don't know any workaround for that","msgtype":"m.text"},"ts":1303865461000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"far future expires headers do nothing","msgtype":"m.text"},"ts":1303865462000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"well... i could just stick all of that into local storage, but that looks kinda silly","msgtype":"m.text"},"ts":1303865463000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"you shouldn't have to reimplement http caching with web storage, heh","msgtype":"m.text"},"ts":1303865520000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also with a few games on one site that 5mb limit will be broken easily","msgtype":"m.text"},"ts":1303865521000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i probably should just ignore it for now","msgtype":"m.text"},"ts":1303865580000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i think some mobile versions of google sites, like images.google, cache javascript in localStorage","msgtype":"m.text"},"ts":1303865581000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"pretty... gross, heh","msgtype":"m.text"},"ts":1303865582000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it works in any other browser and opera's market share is kinda small","msgtype":"m.text"},"ts":1303865583000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"yea they pump js, css, and whatever into local storage in order to bypass awkward limitations of mobile browsers","msgtype":"m.text"},"ts":1303865584000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"eg the iphone won't cache anything >25kb","msgtype":"m.text"},"ts":1303865640000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(or >15kb... depends on the version of the os)","msgtype":"m.text"},"ts":1303865641000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"that's another strangeness--if you're on a cell connection caching is even more important than usual, so it's strange that they don't cache as aggressively as available storage allows","msgtype":"m.text"},"ts":1303865642000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, i can imagine why they did that","msgtype":"m.text"},"ts":1303865700000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"on early generation phones which had more limited storage, okay","msgtype":"m.text"},"ts":1303865701000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"latency is very high... so they rather try to cache as many of those tiny files as possible","msgtype":"m.text"},"ts":1303865702000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i don't know how much caching androidbrowser does, either","msgtype":"m.text"},"ts":1303865703000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"personally, i think they should have differenciated between images and js though","msgtype":"m.text"},"ts":1303865704000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"ah found it on reddit: http://www.reddit.com/r/javascript/comments/guj5m/the_mobile_version_of_bing_uses_localstorage_to","msgtype":"m.text"},"ts":1303865880000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"also this thing: http://www.phpied.com/iphone-caching/","msgtype":"m.text"},"ts":1303865940000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"mobile browsers are disgusting :)","msgtype":"m.text"},"ts":1303865941000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's pretty fundamentally nonsensical to stop caching based on size--it means that optimizing loads by combining scripts into one file can lead to it not being cached","msgtype":"m.text"},"ts":1303866000000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1303866120000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"or sprites... or merged css files","msgtype":"m.text"},"ts":1303866121000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(spritesheets) :>","msgtype":"m.text"},"ts":1303866122000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"speaking of optimizations, i'm really looking forward to webp with alpha","msgtype":"m.text"},"ts":1303866180000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"finally we will have some kind of lossy rgba image format on the web","msgtype":"m.text"},"ts":1303866181000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i'm pretty badly unimpressed with webp","msgtype":"m.text"},"ts":1303866182000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i still wish mozilla hadn't killed jng back then...)","msgtype":"m.text"},"ts":1303866183000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"http://my.opera.com/chooseopera/blog/on-a-horse-opera-turbo-to-the-rescue","msgtype":"m.text"},"ts":1303866240000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's somewhat smaller at usual quality and quit a lot smaller at somewhat acceptable quality","msgtype":"m.text"},"ts":1303866241000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"well, the key point for me is lossy+alpha","msgtype":"m.text"},"ts":1303866242000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's aggrevating that with google in a position to push a newer image format, they're pushing a half-baked, narrow-focus one that isn't actually a general replacement for jpeg","msgtype":"m.text"},"ts":1303866243000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's the only raison d'Ãªtre it needs","msgtype":"m.text"},"ts":1303866300000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"afaict it's at least as good as jpg","msgtype":"m.text"},"ts":1303866301000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i remember off-hand that it has smaller resolution limitations; recall there being some other limitations but don't recall them off-hand","msgtype":"m.text"},"ts":1303866360000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"16383x16383","msgtype":"m.text"},"ts":1303866420000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"big enough for the web","msgtype":"m.text"},"ts":1303866480000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"jpg is probably 64k x 64k","msgtype":"m.text"},"ts":1303866481000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(like png)","msgtype":"m.text"},"ts":1303866482000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"see, that's a narrow-minded focus, which is very different from the mindset of making a *general-purpose* image format","msgtype":"m.text"},"ts":1303866483000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1303866484000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't want to see an \"image format for the web\"; i want to see a general-purpose lossy image format, with one major use being the web","msgtype":"m.text"},"ts":1303866540000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"lots of png loaders break apart at 32k though :>","msgtype":"m.text"},"ts":1303866541000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"16k is enough for most things though","msgtype":"m.text"},"ts":1303866600000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"web, games, photos...","msgtype":"m.text"},"ts":1303866601000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"but it's smaller than jpeg, which means there are uses which jpeg handles and webp does not, which means jpeg isn't completely obsoleted","msgtype":"m.text"},"ts":1303866602000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"print (up to A4, i guess)","msgtype":"m.text"},"ts":1303866660000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1303866661000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i don't want to see \"use the new format, unless you need to do this list of uncommon but valid things:\"","msgtype":"m.text"},"ts":1303866662000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, you won't need to tell that anyone. webp simply won't be available as option if the dimensions are too big","msgtype":"m.text"},"ts":1303866720000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"or if the bitdepth is too high","msgtype":"m.text"},"ts":1303866780000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"and now they have to worry about the differences between the formats, instead of forgetting about the obsolete format; and they'll have to do this effectively forever","msgtype":"m.text"},"ts":1303866781000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which is the main problem--if webp gains traction we'll probably not see a new generation of lossy still image compression for 20+ years","msgtype":"m.text"},"ts":1303866840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, we can use jp2 in about 10 years :>","msgtype":"m.text"},"ts":1303866841000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(jpeg2000)","msgtype":"m.text"},"ts":1303866842000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"either way, this is my primary concern: http://kaioa.com/b/1011/jng_decision_matrix.svgz","msgtype":"m.text"},"ts":1303866960000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"thing is, people do it anyways and the pages get *amazingly* fat","msgtype":"m.text"},"ts":1303866961000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i wonder how it handles alpha-channel artifacting; if artifacts cause pixels to become partially opaque where they were originally fully transparent, it effectively displays undefined pixels in the color channels","msgtype":"m.text"},"ts":1303867020000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yes, but that doesn't really matter","msgtype":"m.text"},"ts":1303867080000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"there are wrong colors, but the opacity will be very low","msgtype":"m.text"},"ts":1303867140000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it matters if you jack the compression level up high enough to create nontrivial artifacts","msgtype":"m.text"},"ts":1303867141000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://kaioa.com/b/1102/svgjng/index.html <- take a look (with opera)","msgtype":"m.text"},"ts":1303867142000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"which is less of a problem with better compression, but it's always possible","msgtype":"m.text"},"ts":1303867143000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess it'd probably not look any more wrong than the other rgb compression artifacts that would also happen","msgtype":"m.text"},"ts":1303867200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"webp will most likely support two modes for alpha: lossy and lossless (similar to jng)","msgtype":"m.text"},"ts":1303867260000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"the quality of the alpha channel can be changed independently","msgtype":"m.text"},"ts":1303867320000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"so, you do have some control how broken the result will look","msgtype":"m.text"},"ts":1303867321000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"also, i assume webp doesn't address animations and sprites; animations aren't so important but they're logically identical to sprites, which are","msgtype":"m.text"},"ts":1303867560000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"foo.webp#bar foo.webp#baz etc would be cool","msgtype":"m.text"},"ts":1303867620000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"well... probably the wrong place ;)","msgtype":"m.text"},"ts":1303867680000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"well, less concerned about how it's exposed at the higher level as there being support for it within the file format--if it's supported by the format then web APIs using it will follow, if it's finalized and deployed without it, well...","msgtype":"m.text"},"ts":1303867681000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"feel free to discuss that with the people over at #vp8","msgtype":"m.text"},"ts":1303867800000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"skal is the dude who's working on alpha, by the way","msgtype":"m.text"},"ts":1303867801000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i for one don't really know if having multiple \"pages\" makes much sense with that format","msgtype":"m.text"},"ts":1303867860000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"on a somewhat related note, i wonder if i should write some canvas based jpg+jpg or jpg+png splicing thing, which uses localStorage to store the result","msgtype":"m.text"},"ts":1303868280000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"would be fun, i guess","msgtype":"m.text"},"ts":1303868281000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"but it also got some kind of passive-aggressive martyr taste to it :>","msgtype":"m.text"},"ts":1303868340000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"MikeSmith: let me know when you need me to regen the spec for publication","msgtype":"m.text"},"ts":1303870980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1303871100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i'll try to avoid having any big patches outstanding this time so i can actually do it unlike last time :-)","msgtype":"m.text"},"ts":1303871220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1303871340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so everything on the W3C cvs side is ready","msgtype":"m.text"},"ts":1303871400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the boilerplate","msgtype":"m.text"},"ts":1303871401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I have not made any changes since last time, so there should be no cvs conflicts","msgtype":"m.text"},"ts":1303871460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1303871461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there are use case for a nested <figure> ?","msgtype":"m.text"},"ts":1303872420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://i.imgur.com/DTJtA.jpg","msgtype":"m.text"},"ts":1303872720000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":":I","msgtype":"m.text"},"ts":1303872721000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"other than that... no","msgtype":"m.text"},"ts":1303872722000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"MikeSmith: there is http://1.bp.blogspot.com/_zuKg9DRLTjI/TE81sUrCcvI/AAAAAAAABBM/sM52ZHhhXFY/s1600/mise_en_abyme.jpg ;)","msgtype":"m.text"},"ts":1303872960000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1303872961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://arstechnica.com/web/news/2011/04/google-builds-webm-patent-pool-of-its-own-to-fight-back-against-mpeg-la.ars","msgtype":"m.text"},"ts":1303880880000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"MikeSmith: did you commit the new headers?","msgtype":"m.text"},"ts":1303883640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: i did cvs up but it didn't do anything","msgtype":"m.text"},"ts":1303883700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey dudes","msgtype":"m.text"},"ts":1303883760000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"Hixie: I didn't make any changes to the headers, because I thought the plan was just to regen a new ED","msgtype":"m.text"},"ts":1303884000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1303884001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should I be flipping it to WD?","msgtype":"m.text"},"ts":1303884002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sorry i thought they wanted a WD","msgtype":"m.text"},"ts":1303884003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i dunno","msgtype":"m.text"},"ts":1303884004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1303884005000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, I'm not sure either","msgtype":"m.text"},"ts":1303884006000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1303884007000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I don't think they want to do a new WD","msgtype":"m.text"},"ts":1303884008000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1303884009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the request was just to update the ED","msgtype":"m.text"},"ts":1303884010000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well then nevermind!","msgtype":"m.text"},"ts":1303884011000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1303884012000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since it was out of sync","msgtype":"m.text"},"ts":1303884013000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh right, it's still out of sync","msgtype":"m.text"},"ts":1303884060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm good at neverminding","msgtype":"m.text"},"ts":1303884061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"let me try regenning","msgtype":"m.text"},"ts":1303884062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I hope the changes I committed for the April 05 WD publication didn't bork up the regen process","msgtype":"m.text"},"ts":1303884063000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no, it's some xml problem with pms","msgtype":"m.text"},"ts":1303884120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but if it did, I would imagine you'd be seeing conflict messages from csv","msgtype":"m.text"},"ts":1303884121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nothing to do with the cvs stuff","msgtype":"m.text"},"ts":1303884122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"*cvs","msgtype":"m.text"},"ts":1303884123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1303884124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1303884125000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ben_h: hey Lads","msgtype":"m.text"},"ts":1303884180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ooh, it worked","msgtype":"m.text"},"ts":1303884181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1303884182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":) sup mike?","msgtype":"m.text"},"ts":1303884183000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"ben_h: too much excitement, I think I'm going to change careers and become a gardener","msgtype":"m.text"},"ts":1303884240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ha!","msgtype":"m.text"},"ts":1303884300000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"who's been causing all the ruckus?","msgtype":"m.text"},"ts":1303884301000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"the Web platform","msgtype":"m.text"},"ts":1303884360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if the Web platform could just be sensible and easier to work with, we'd all be much happier","msgtype":"m.text"},"ts":1303884361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ben_h: you guys making the pilgrimage to Japan again this summer?","msgtype":"m.text"},"ts":1303884420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"most definitely","msgtype":"m.text"},"ts":1303884540000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1303884541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i mean, nothing's organised or booked - but i'm going","msgtype":"m.text"},"ts":1303884542000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"i get this nostalgic feeling when i think of japan","msgtype":"m.text"},"ts":1303884600000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"me too","msgtype":"m.text"},"ts":1303884601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"something about it. what a place","msgtype":"m.text"},"ts":1303884602000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"and I live here!","msgtype":"m.text"},"ts":1303884603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1303884604000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"even though i've only spent a month there :)","msgtype":"m.text"},"ts":1303884605000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"you all should stay in my neighborhood again","msgtype":"m.text"},"ts":1303884606000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mmm, would love to","msgtype":"m.text"},"ts":1303884607000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"might get an apartment for during the conference, and then stay in a couple of ryokans","msgtype":"m.text"},"ts":1303884660000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"no hotels this time :)","msgtype":"m.text"},"ts":1303884661000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"yeah, hotels are boring","msgtype":"m.text"},"ts":1303884662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mmm","msgtype":"m.text"},"ts":1303884663000,"senderName":"ben_h","senderId":"ben_h@irc"},
{"content":{"body":"speaking of summer, Robert Frost once wrote a poem about the Web platform. he called it \"The Oven Bird\"","msgtype":"m.text"},"ts":1303884664000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The bird would cease and be as other birds / But that he knows in singing not to sing. / The question that he frames in all but word / Is what to make of a diminished thing.","msgtype":"m.text"},"ts":1303884720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Dammit, now I'm bleeding.","msgtype":"m.text"},"ts":1303884780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: did you fall upon the thorns of life again?","msgtype":"m.text"},"ts":1303884840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Fell off my bike on the way back to the office.","msgtype":"m.text"},"ts":1303884841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It'll teach me not to talk to rollerbladers while riding on the sidewalk.","msgtype":"m.text"},"ts":1303884842000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1303884900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you should claim it as a genuine crash, instead of a falling off","msgtype":"m.text"},"ts":1303884901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"crashing is cool, like Evel Kneivel","msgtype":"m.text"},"ts":1303884960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"True.","msgtype":"m.text"},"ts":1303884961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"he even looks like you!","msgtype":"m.text"},"ts":1303884962000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://upload.wikimedia.org/wikipedia/commons/5/5e/At_Home_With_Evel_Knievel.jpg","msgtype":"m.text"},"ts":1303884963000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...yes.  He looks exactly like me.","msgtype":"m.text"},"ts":1303884964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or maybe it's just the similar clothing","msgtype":"m.text"},"ts":1303884965000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thomas Hardy also once wrote about poem about the Web Platform","msgtype":"m.text"},"ts":1303885020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or more precisely I guess about that the work related to getting it standardized","msgtype":"m.text"},"ts":1303885080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he called his poem \"The Convergence of the Twain\"","msgtype":"m.text"},"ts":1303885081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and he used the term \"vaingloriousness\" in it","msgtype":"m.text"},"ts":1303885082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is one of the greatest words in the language","msgtype":"m.text"},"ts":1303885083000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The intimate welding of their later history\"","msgtype":"m.text"},"ts":1303885140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I remember that poem.  And that word.","msgtype":"m.text"},"ts":1303885141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, it is seriously great","msgtype":"m.text"},"ts":1303885142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"consummation comes, and jars two hemispheres\"","msgtype":"m.text"},"ts":1303885143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the even better thing about that word is that in the poem, the people who use it are fishes","msgtype":"m.text"},"ts":1303885200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so even fishes know the word \"vaingloriousness\"","msgtype":"m.text"},"ts":1303885201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the actual original line that Hardy wrote for the fishes was, \"WTF this vaingloriousness down here?\"","msgtype":"m.text"},"ts":1303885320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but his editor made him change it","msgtype":"m.text"},"ts":1303885321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's not clear why","msgtype":"m.text"},"ts":1303885322000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Fucking editors.","msgtype":"m.text"},"ts":1303885323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe he thought that fishes don't know about \"WTF\"","msgtype":"m.text"},"ts":1303885324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: amen","msgtype":"m.text"},"ts":1303885380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"edtors, as a class, are absolutely nothing but trouble and a massive PITA","msgtype":"m.text"},"ts":1303885381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: fine work tonight","msgtype":"m.text"},"ts":1303885382000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Can't live with 'em.","msgtype":"m.text"},"ts":1303885383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"paul_irish: Thanks!","msgtype":"m.text"},"ts":1303885384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"btw, I finished implementing http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#guidance-for-conformance-checkers in my validator.nu workspace today","msgtype":"m.text"},"ts":1303885560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and pushed it to http://www.w3.org/html/check for testing","msgtype":"m.text"},"ts":1303885561000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so if anybody has time and interest in helping to test it, please test it there","msgtype":"m.text"},"ts":1303885620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's pretty straightforward except for the stuff related to figure and figcaption","msgtype":"m.text"},"ts":1303885621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which I think I have right but not sure","msgtype":"m.text"},"ts":1303885680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"othermaciej: Hixie commit to http://dev.w3.org/html5/spec/ done","msgtype":"m.text"},"ts":1303887420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: is it publication time?","msgtype":"m.text"},"ts":1303897920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no, just getting W3C copy synced up","msgtype":"m.text"},"ts":1303897980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1303897981000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"lemme know when i should get html-differences up to speed; i don't always read public-html :)","msgtype":"m.text"},"ts":1303898040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1303898280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I don't think there will be another publication before LCWD, unless that gets dragged out","msgtype":"m.text"},"ts":1303898460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: ok","msgtype":"m.text"},"ts":1303898461000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which reminds me that I should raise the topic of CR exit criteria","msgtype":"m.text"},"ts":1303898520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe it would be good to write those before 1st LC","msgtype":"m.text"},"ts":1303898521000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wonders if \"CR exit criteria\" are \"criteria for reaching CR\" or \"criteria for reaching PR\"","msgtype":"m.emote"},"ts":1303899000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"traditionally CR exit criteria are the criteria to exit CR","msgtype":"m.text"},"ts":1303899001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the spec is supposed to fulfill them to exit CR","msgtype":"m.text"},"ts":1303899002000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"usually it's something about test suite, implementations, yada yada","msgtype":"m.text"},"ts":1303899060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"PR entrance criteria","msgtype":"m.text"},"ts":1303899061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"however I believe the spec has to contain (as opposed to fulfill) them before entering CR","msgtype":"m.text"},"ts":1303899062000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The process document doesn't really talk about exit criteria afaict","msgtype":"m.text"},"ts":1303899063000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it seems we do need to prepare a list of \"at risk\" features","msgtype":"m.text"},"ts":1303899540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and a \"a report of present and expected implementations\"","msgtype":"m.text"},"ts":1303899600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Also PR entrance criteria include:","msgtype":"m.text"},"ts":1303899601000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"2. Shown that each feature of the technical report has been implemented. Preferably, the Working Group should be able to demonstrate two interoperable implementations of each feature. If the Director believes that immediate Advisory Committee review is critical to the success of a technical report, the Director may accept to Call for Review of a Proposed Recommendation even without adequate implementation experience;","msgtype":"m.text"},"ts":1303899660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"3. Satisfied any other announced entrance criteria (e.g., any included in the request to advance to Candidate Recommendation, or announced at Last Call if the Working Group does not intend to issue a Call for Implementations).","msgtype":"m.text"},"ts":1303899661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"#3 is presumably what is often called CR exit criteria but which in the Process document are PR entrance criteria","msgtype":"m.text"},"ts":1303899662000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CSS specs seem to say \"Candidate Recommendation Exit Criteria\" but then \"For this specification to enter Proposed Recommendation, the following conditions must be met:\"","msgtype":"m.text"},"ts":1303899780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so it does seem to be a Process thing, though any requirement beyond the general one about interoperable implementations of each feature seems to be optional","msgtype":"m.text"},"ts":1303899781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That one is strictly optional too","msgtype":"m.text"},"ts":1303899782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since it starts \"preferably\"","msgtype":"m.text"},"ts":1303899840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems like a good idea however","msgtype":"m.text"},"ts":1303899841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or, rather, the other option there seems irrelevent","msgtype":"m.text"},"ts":1303899900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So CSS required two complete interoperable implementaions, not two per feature.","msgtype":"m.text"},"ts":1303900020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm, I was going to site the Selectors API CR exit criteria","msgtype":"m.text"},"ts":1303900021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which I believe are like the CSS ones","msgtype":"m.text"},"ts":1303900022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but they are not in the spec","msgtype":"m.text"},"ts":1303900023000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I like \"two complete interoperable implementations\" personally, even though for HTML5 that is a tall order","msgtype":"m.text"},"ts":1303900080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but it might be that the test suite is the hard part","msgtype":"m.text"},"ts":1303900081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"have we got any tests from selling t-shirts yet?","msgtype":"m.text"},"ts":1303900200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I like it in principle, but I think it could create a lot of negative pressure at the end to cut features or make worse tests","msgtype":"m.text"},"ts":1303900260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At the moment we don't even knoww what a complete implementation would look like","msgtype":"m.text"},"ts":1303900261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think every feature that doesn't yet have at least one reasonable implementation (maybe any that doesn't have two) should be marked \"at risk\"","msgtype":"m.text"},"ts":1303900320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"then future generations can make the tradeoff between finalizing HTML5 faster vs having more things in HTML5 rather than deferred to 5.1/6/whatever","msgtype":"m.text"},"ts":1303900321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That seems fair","msgtype":"m.text"},"ts":1303900322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I think there will be a lot of perfectly reasonable implementations of things that don't quite pass the testsuite","msgtype":"m.text"},"ts":1303900380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If the testsuite is any good","msgtype":"m.text"},"ts":1303900381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which it is mostly not so far","msgtype":"m.text"},"ts":1303900382000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this is why I think the test suite may be the hard part","msgtype":"m.text"},"ts":1303900383000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I fully agree that the testsuite will be the hard part","msgtype":"m.text"},"ts":1303900440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't even know how to reasonably express test suite adequacy in the exit criteria","msgtype":"m.text"},"ts":1303900441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I wonder how thorough something like the JCK is compared to the standard we might want for the HTML5 test suite","msgtype":"m.text"},"ts":1303900442000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Well ideally I would like to have some metric for spec coverage","msgtype":"m.text"},"ts":1303900443000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like percentage of assertions in the spec","msgtype":"m.text"},"ts":1303900444000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that have tests","msgtype":"m.text"},"ts":1303900500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ignoring cross dependencies","msgtype":"m.text"},"ts":1303900501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which would be something like a normal code coverage metric","msgtype":"m.text"},"ts":1303900502000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would guess you'd want 100% of testable assertions to have tests","msgtype":"m.text"},"ts":1303900503000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1303900504000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but then you have to sort out which MUSTs are relevant to the conformance class being tested, and which are in fact testable","msgtype":"m.text"},"ts":1303900505000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The problem is that making such a metric turns out to be highly non-trivial on its own","msgtype":"m.text"},"ts":1303900560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip` did it for the 2D API spec, but it is non trivial to scale","msgtype":"m.text"},"ts":1303900561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://philip.html5.org/tests/canvas/suite/tests/spec.html","msgtype":"m.text"},"ts":1303900620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Will we need to have two complete interoperable implementations of HTML5 validators too?","msgtype":"m.text"},"ts":1303900740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well that is another interesting question - which conformance classes are relevant?","msgtype":"m.text"},"ts":1303900800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Do we need two interoperable implementations of HTML authors?","msgtype":"m.text"},"ts":1303900860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because I have never seen two authors agree on correct usage :)","msgtype":"m.text"},"ts":1303900861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"Web browsers and other interactive user agents\" are an almost-superset of the requirements for many of the other conformance classes","msgtype":"m.text"},"ts":1303900920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"conformance checkers are the only other class that is even plausibly testable","msgtype":"m.text"},"ts":1303900921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Are there *any* existing tests for conformance checkers?","msgtype":"m.text"},"ts":1303901160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm sure I've seen some conformance tests for validator.nu","msgtype":"m.text"},"ts":1303901220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems hard to test the spec comprehensively when it doesn't distinguish between document conformance requirements that are mechanically verifiable and those that aren't","msgtype":"m.text"},"ts":1303901340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is that something that needs interpretation, or just something that can be mechanically deduced from the conformance requirment?","msgtype":"m.text"},"ts":1303901580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think it can be deduced by machine which document conformance requirements are machine-testable","msgtype":"m.text"},"ts":1303901700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there are some vaiidator/document-conformance test documents here:","msgtype":"m.text"},"ts":1303901820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://bitbucket.org/validator/syntax/src/tip/relaxng/tests/","msgtype":"m.text"},"ts":1303901821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and here: http://dev.w3.org/html5/tests/validation/full/","msgtype":"m.text"},"ts":1303901822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"speaking of validator testing, I have what I hope is complete support for the current alternative-text checking criteria in the current spec","msgtype":"m.text"},"ts":1303902000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at http://www.w3.org/html/check  for testing","msgtype":"m.text"},"ts":1303902001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#guidance-for-conformance-checkers <- this section","msgtype":"m.text"},"ts":1303902002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: â (if you have any time to try it)","msgtype":"m.text"},"ts":1303902060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hey david_carlisle","msgtype":"m.text"},"ts":1303902061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith:  hi","msgtype":"m.text"},"ts":1303902180000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"thanks for the help on the &#9001; thing","msgtype":"m.text"},"ts":1303902240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn't help much, just dumped it in bugziila for you to sort out:-)","msgtype":"m.text"},"ts":1303902300000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"I hope Hixie will sort it out upstream so that I don't have to hack around it","msgtype":"m.text"},"ts":1303902360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"someone has missed a memo: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12563","msgtype":"m.text"},"ts":1303902361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: btw, I tried running the splitter with --html5lib-parser","msgtype":"m.text"},"ts":1303902362000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I get:","msgtype":"m.text"},"ts":1303902420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"  File \"html5-tools/spec-splitter/spec-splitter.py\", line 82, in <module>","msgtype":"m.text"},"ts":1303902421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"    doctitle = doc.find('.//title').text","msgtype":"m.text"},"ts":1303902422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"AttributeError: 'NoneType' object has no attribute 'text'","msgtype":"m.text"},"ts":1303902423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I don't get that when I omit that switch","msgtype":"m.text"},"ts":1303902424000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith:  You know you should all have used xmlspec xml and tools to generate the specs, your lives would be so much happier, all this html and python will lead to tears","msgtype":"m.text"},"ts":1303902480000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1303902481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no thanks","msgtype":"m.text"},"ts":1303902482000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"If Google would prefer a patent pool approach, then we would also agree to join a patent pool for VP8 on reasonable licensing terms so long as Google joins the pool and is able to include all other major providers of playback software and devices.\" http://blogs.msdn.com/b/ie/archive/2011/02/02/html5-and-web-video-questions-for-the-industry-from-the-community.aspx","msgtype":"m.text"},"ts":1303902960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"$ wget -qO- http://www.webm-ccl.org/members/ | grep Microsoft; echo $?","msgtype":"m.text"},"ts":1303903020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"1","msgtype":"m.text"},"ts":1303903021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1303903022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess \"all other major providers of playback software and devices\" is a tall order.","msgtype":"m.text"},"ts":1303903023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen: the patch I sent you for review today is up to date with both the spec and the recent WG decision about conformance criteria for alternative text (I think)","msgtype":"m.text"},"ts":1303903024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Hmm, I'm sure --html5lib-parser worked at some point in the past","msgtype":"m.text"},"ts":1303903200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I don't know which point","msgtype":"m.text"},"ts":1303903201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I wonder how many of the companies on the list even have any video-related patents","msgtype":"m.text"},"ts":1303903260000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe still works, just not in my environment","msgtype":"m.text"},"ts":1303903261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1303903262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since you don't get told what patents are in the pool, I guess it is hard to find out","msgtype":"m.text"},"ts":1303903263000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The way the pool is set up, it seems like the companies themselves might not know which of their patents are in the pool, right?","msgtype":"m.text"},"ts":1303903264000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"MPEG LA needs you to list the exact patents because they don't want to give you royalties if you don't really have an applicable patent.","msgtype":"m.text"},"ts":1303903320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"MikeSmith: ok. Looking now.","msgtype":"m.text"},"ts":1303903321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"Persons joining the WebM Community Cross-License will not be required to identify Covered Patents. \"","msgtype":"m.text"},"ts":1303903322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"W3C also doesn't require you to list patents that you won't assert on a spec","msgtype":"m.text"},"ts":1303903380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MikeSmith: this is going to make schematron and SchematronEquiv diverge, right?","msgtype":"m.text"},"ts":1303903440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/SchematronEquiv/Assertions/","msgtype":"m.text"},"ts":1303903620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I have not tried to write it up in schematron yet","msgtype":"m.text"},"ts":1303903740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"are there parts of it that aren't implementable in schematron?","msgtype":"m.text"},"ts":1303903800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: dunno yet","msgtype":"m.text"},"ts":1303903860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1303903861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I think there is at least one other case of something I added to the Assertions checker that I did not add to the schematron stuff, because it was not practical (or maybe not even possible) to implement it in schematron/xpath as far as I could see","msgtype":"m.text"},"ts":1303903920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I can't remember right now what that was","msgtype":"m.text"},"ts":1303903921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I sent you email about the patch","msgtype":"m.text"},"ts":1303904400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1303904401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: So, should we go for blacklists or whitelists for register*Handler()? (c:","msgtype":"m.text"},"ts":1303912440000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Okay, back to work for me.","msgtype":"m.text"},"ts":1303918140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":". . . Google has disappeared from my search engine list in Firefox 5.0a2, and I can't see any way to get it back.","msgtype":"m.text"},"ts":1303919340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Plus Firebug disabled itself.","msgtype":"m.text"},"ts":1303919520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"switches back to Firefox 4","msgtype":"m.emote"},"ts":1303919521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Google seems to be in the search engine list for me (in 6)","msgtype":"m.text"},"ts":1303919940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Firefox 6?","msgtype":"m.text"},"ts":1303919941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I thought they were only up to 5, even in nightlies.","msgtype":"m.text"},"ts":1303920000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1303920001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No, 5 is Auora","msgtype":"m.text"},"ts":1303920002000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or is Aurora 5, and nightly is 6?","msgtype":"m.text"},"ts":1303920003000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1303920004000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I had to futz to get firebug working","msgtype":"m.text"},"ts":1303920005000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fb .18 should work in 5 it seems","msgtype":"m.text"},"ts":1303920006000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*1.8","msgtype":"m.text"},"ts":1303920060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But you have to disable the compat check in 6","msgtype":"m.text"},"ts":1303920061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Weird.  Why does surroundContents(docfrag) raise an INVALID_NODE_TYPE_ERR in all browsers?","msgtype":"m.text"},"ts":1303921200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Useless answer: Because a docfrag is an invalid node type?","msgtype":"m.text"},"ts":1303921260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, the insertNode() thing should fail somehow.","msgtype":"m.text"},"ts":1303921261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"When it calls insertBefore().","msgtype":"m.text"},"ts":1303921320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But that should be a HIERARCHY_REQUEST_ERR or something, not an INVALID_NODE_TYPE_ERR . . .","msgtype":"m.text"},"ts":1303921321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"will investigate further","msgtype":"m.emote"},"ts":1303921322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So http://mdv.googlecode.com/svn/trunk/docs/design_intro.html is effectively JS-fied XForms  :)","msgtype":"m.text"},"ts":1303921800000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The \"JSified\" is the important part!","msgtype":"m.text"},"ts":1303921801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not sure why","msgtype":"m.text"},"ts":1303921860000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Because it's what you actually want, given the common and appropriate paradigm of JS being your canonical source of data.","msgtype":"m.text"},"ts":1303921920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, DOM 2 Range says it should raise an INVALID_NODE_TYPE_ERR in that case . . .","msgtype":"m.text"},"ts":1303921921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have no idea why, but . . .","msgtype":"m.text"},"ts":1303921922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: huh? not RDF as the canonical source of data?","msgtype":"m.text"},"ts":1303921980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ::shudder::","msgtype":"m.text"},"ts":1303921981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, I meant in the context of a running application.  Your data storage can be RDF or SQL or whatever.","msgtype":"m.text"},"ts":1303921982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The point is that the data is canonical in the JS, not the DOM, so the DOM is just a view of the data.","msgtype":"m.text"},"ts":1303922040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if the {{ }} syntax will cause problems with common server-side templating langauges","msgtype":"m.emote"},"ts":1303923000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Do common server-side templating languages often use {{}}?  Other than wikitext . . .","msgtype":"m.text"},"ts":1303923180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Dunno. Some use ${} which is slightly uncomfortably close","msgtype":"m.text"},"ts":1303923240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Django uses {{...}}","msgtype":"m.text"},"ts":1303923600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://docs.djangoproject.com/en/dev/topics/templates/#variables","msgtype":"m.text"},"ts":1303923601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thinks http://blogs.msdn.com/b/ie/archive/2011/04/27/ie9-compat-inspector.aspx looks like a nice idea since it gives useful error messages (suggesting upgrading specific JS libraries etc, instead of just moaning that there's an error), and also it doesn't suggest x-ua-compatible or attempt to disparage other browsers","msgtype":"m.emote"},"ts":1303924740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I wonder if they change whether they list depending on libraries are loaded","msgtype":"m.text"},"ts":1303924800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Yes, indeed. Foregoing marketing-driven mudslinging and instead providing helpful technical insight ftw","msgtype":"m.text"},"ts":1303924980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: They don't (except for one test that's conditional on window.jQuery, reporting a bug in old jQuery versions)","msgtype":"m.text"},"ts":1303925040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I presume if you're maintaining a site then you probably already know what JS libraries it's using (or can easily find out)","msgtype":"m.text"},"ts":1303925100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Hm, okay. I guess that's reasonable (libraries bound to different variables, etc.).","msgtype":"m.text"},"ts":1303925160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and it seems to have a separate thing that tells you what libraries it detects anyway","msgtype":"m.text"},"ts":1303925161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but doesn't use that detection to alter any of the error messages)","msgtype":"m.text"},"ts":1303925162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"+        if (y !== y)","msgtype":"m.text"},"ts":1303926420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"+        {","msgtype":"m.text"},"ts":1303926421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"+            //NaN case","msgtype":"m.text"},"ts":1303926422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"+            return y !== y;","msgtype":"m.text"},"ts":1303926423000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"+        }","msgtype":"m.text"},"ts":1303926424000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, I guess you mean return x !== x there?","msgtype":"m.text"},"ts":1303926425000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll fix it.","msgtype":"m.text"},"ts":1303926426000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"x and y being expected and actual?","msgtype":"m.text"},"ts":1303926480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1303926481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Fix pushed.","msgtype":"m.text"},"ts":1303926540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ergh, can we not have one letter variables?","msgtype":"m.text"},"ts":1303926541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, it's actually a same_value(x, y) function.","msgtype":"m.text"},"ts":1303926542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So the two values are interchangeable, strictly.","msgtype":"m.text"},"ts":1303926543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It happens to be that it's primarily used for expected and actual, but it doesn't have to be.","msgtype":"m.text"},"ts":1303926600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So x and y are fairly appropriate here.","msgtype":"m.text"},"ts":1303926601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"for (var iterator = 0; iterator < 10; ++iterator) alert('I sometimes like short variable names');","msgtype":"m.text"},"ts":1303926660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor: Thanks","msgtype":"m.text"},"ts":1303926900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: As long as you don't use one letter variables in your programming-by-hand exams :p","msgtype":"m.text"},"ts":1303926960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(unless it is in Fortran. Then you are required to use one letter variables by the law of unreadable scientific code)","msgtype":"m.text"},"ts":1303927020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(you can use two letters when you run out of one letters)","msgtype":"m.text"},"ts":1303927021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I did only in lambdas, and where the questions gave arguments one-letter names.","msgtype":"m.text"},"ts":1303927022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Or do what GWT does and just vary case","msgtype":"m.text"},"ts":1303927080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That still only gives you 52 ascii letters to play with","msgtype":"m.text"},"ts":1303927200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Naming things pWz or similar is encouraged","msgtype":"m.text"},"ts":1303927201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, you know that instanceof appears to always return false in WebKit, in some cases?","msgtype":"m.text"},"ts":1303927260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Specifically, ones I keep hitting in my tests.","msgtype":"m.text"},"ts":1303927261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"investigates","msgtype":"m.emote"},"ts":1303927262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Things like e instanceof Object being false, where e is a DOMException.","msgtype":"m.text"},"ts":1303927320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham: 52 is loads - x86 only gives you about 8 'variables' you can use at once, and that works fine","msgtype":"m.text"},"ts":1303927321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Six, if you don't want to mess with the stack.","msgtype":"m.text"},"ts":1303927322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You just need a separate array to overflow your set of variables into","msgtype":"m.text"},"ts":1303927323000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Point","msgtype":"m.text"},"ts":1303927324000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: That sounds like a bug","msgtype":"m.text"},"ts":1303927380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In WebKit","msgtype":"m.text"},"ts":1303927381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, yeah, it does, doesn't it?","msgtype":"m.text"},"ts":1303927382000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"doesn't really want to make a reduced test case from several thousand lines of code, but it would be nice to be able to work around this better . . .","msgtype":"m.emote"},"ts":1303927383000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You might be able to work out what is going on it Web Inspector","msgtype":"m.text"},"ts":1303927440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wilhelm: You should file the Gecko bug you found btw","msgtype":"m.text"},"ts":1303927500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: If only jgraham's framework had something like QuickCheck's reduce functionality","msgtype":"m.text"},"ts":1303927501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What does that do?","msgtype":"m.text"},"ts":1303927502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm, yeah, let me try Web Inspector first.","msgtype":"m.text"},"ts":1303927503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although I think I tried it before and didn't get what was going on.","msgtype":"m.text"},"ts":1303927504000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: It's reduces the Haskell down to a minimal TC it can programmatically find that fails","msgtype":"m.text"},"ts":1303927505000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well you could use it with one of the tools for doing that to js","msgtype":"m.text"},"ts":1303927560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess it likely won't be as elegant as QuickCheck","msgtype":"m.text"},"ts":1303927561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Okay, so in the console I've got !(e instanceof Object) and typeof e == \"object\".","msgtype":"m.text"},"ts":1303927620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Any ideas on what to look at from here?","msgtype":"m.text"},"ts":1303927621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, hmm.","msgtype":"m.text"},"ts":1303927622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think the exception was thrown in a different window.","msgtype":"m.text"},"ts":1303927623000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In an iframe, specifically.","msgtype":"m.text"},"ts":1303927624000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe that's it?","msgtype":"m.text"},"ts":1303927625000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So the interface objects aren't equal on the different windows?","msgtype":"m.text"},"ts":1303927680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1303927681000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh yes, that is a known issue","msgtype":"m.text"},"ts":1303927682000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, e instanceof actualIframe.contentWindow.Object is true.","msgtype":"m.text"},"ts":1303927683000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So any way to work around that?","msgtype":"m.text"},"ts":1303927684000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Iâ¦ don't remember","msgtype":"m.text"},"ts":1303927740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ES doesn't interact well with multiple globals","msgtype":"m.text"},"ts":1303927741000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought I was going to provide a way to pass in a window object","msgtype":"m.text"},"ts":1303927742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Did I?","msgtype":"m.text"},"ts":1303927743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"presumes the interfaces couldn't be equal else you could do \"Object.foo = 1\" in one iframe and read it back in another and get cross-origin communication","msgtype":"m.emote"},"ts":1303927800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's not how instanceof is specced to work in WebIDL I think","msgtype":"m.text"},"ts":1303927801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Evil.","msgtype":"m.text"},"ts":1303927802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But... yeah","msgtype":"m.text"},"ts":1303927860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does WebIDL actually define instanceof?","msgtype":"m.text"},"ts":1303927980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"looks in ES5","msgtype":"m.emote"},"ts":1303927981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I hope so!","msgtype":"m.text"},"ts":1303927982000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, [[HasInstance]].","msgtype":"m.text"},"ts":1303928040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: [[HasInstance]]","msgtype":"m.text"},"ts":1303928041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"too slow :(","msgtype":"m.text"},"ts":1303928042000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"If V is a host object that implements the interface for which O is the interface prototype object, return true.\"","msgtype":"m.text"},"ts":1303928043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But \"If O and V refer to the same object, return true.\"","msgtype":"m.text"},"ts":1303928044000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It doesn't seem to have thought of this case.","msgtype":"m.text"},"ts":1303928100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think only heycam really understands what is going on ;)","msgtype":"m.text"},"ts":1303928101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But yeah, he said it hadn't considered this case","msgtype":"m.text"},"ts":1303928102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=12295","msgtype":"m.text"},"ts":1303928160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is it surprising the things that come upo really quickly when you start testing stuff that are otherwise quite obscure","msgtype":"m.text"},"ts":1303928280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/961","msgtype":"m.text"},"ts":1303928281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Only works in Firefox.","msgtype":"m.text"},"ts":1303928282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, logs \"true\" in Firefox, \"false\" in everyone else.","msgtype":"m.text"},"ts":1303928283000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't suppose objects are associated with a particular window that we can get, or anything like that?","msgtype":"m.text"},"ts":1303928340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, so for now we want to just remove all instanceof checks from testharness.js.","msgtype":"m.text"},"ts":1303928580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since the behavior isn't really defined.","msgtype":"m.text"},"ts":1303928581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Done","msgtype":"m.text"},"ts":1303928880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":".","msgtype":"m.text"},"ts":1303928881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, regarding r239, why did you remove the e.name === code_or_object check?  The spec does require it.","msgtype":"m.text"},"ts":1303929420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just because it makes all the assertions fail in some browsers?","msgtype":"m.text"},"ts":1303929421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham: Yes, will do.","msgtype":"m.text"},"ts":1303929720000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Hmm, every use of assert_throws in DOM Range tests is apparently wrong.","msgtype":"m.text"},"ts":1303930200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least, the ones that don't test DOMExceptions.","msgtype":"m.text"},"ts":1303930201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is a minority.","msgtype":"m.text"},"ts":1303930202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Because of sekrit backchannel information from annevk","msgtype":"m.text"},"ts":1303930440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(that the spec might change)","msgtype":"m.text"},"ts":1303930441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, more specifically?","msgtype":"m.text"},"ts":1303930442000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1303930443000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"To what?","msgtype":"m.text"},"ts":1303930444000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The current spec seems sane.","msgtype":"m.text"},"ts":1303930445000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, I like it","msgtype":"m.text"},"ts":1303930500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Saner than what any browser does, anyway.","msgtype":"m.text"},"ts":1303930501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, I just convinced some people in the Web Apps WG to copy it for their own exception types.","msgtype":"m.text"},"ts":1303930502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think it might be closer to what some browser does","msgtype":"m.text"},"ts":1303930503000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think approximately one browser actually implements it correctly.","msgtype":"m.text"},"ts":1303930504000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"WebKit, perhaps?","msgtype":"m.text"},"ts":1303930505000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well since annevk is not here, take it up with Ms2ger","msgtype":"m.text"},"ts":1303930506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1303930507000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1303930560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think we should actually test it, but only because it would make almost all browsers fail every assert_throws().","msgtype":"m.text"},"ts":1303930561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is obnoxious clutter.","msgtype":"m.text"},"ts":1303930562000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I agree","msgtype":"m.text"},"ts":1303930563000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But let's leave it commented out with a note to enable it once the latest version of everyone converges on it.","msgtype":"m.text"},"ts":1303930620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And not even because it's Gecko which fails :)","msgtype":"m.text"},"ts":1303930621000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It would be nice to put it back in if people start to get it right","msgtype":"m.text"},"ts":1303930622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I am sure if I do that someone will complain","msgtype":"m.text"},"ts":1303930623000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I already get hate mail for fixing bugs (not really)","msgtype":"m.text"},"ts":1303930680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but I did cause confusion by fixing a bug that the Web Performance people were relying on)","msgtype":"m.text"},"ts":1303930681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A harness bug?","msgtype":"m.text"},"ts":1303930682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1303930740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So, WebIDL claims e.name == \"DOMException\"","msgtype":"m.text"},"ts":1303930800000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think anyone does that.","msgtype":"m.text"},"ts":1303930860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"We seem to have interop on the .name of a TypeError being \"TypeError\".","msgtype":"m.text"},"ts":1303930920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Is that required by ES5? I forget","msgtype":"m.text"},"ts":1303930921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But no interop on the .names of DOMExceptions or RangeExceptions.","msgtype":"m.text"},"ts":1303930922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Really DOMExceptions should behave much like native Errors","msgtype":"m.text"},"ts":1303930923000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You know, assert_throws() really makes no sense.","msgtype":"m.text"},"ts":1303930980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The mode where you pass an object doesn't actually do anything except verify that the .name attribute matches.","msgtype":"m.text"},"ts":1303930981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is useless for anything but TypeErrors.","msgtype":"m.text"},"ts":1303930982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"DOM Range tests are littered with incorrect usages.","msgtype":"m.text"},"ts":1303931040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Could we make it more useful?  Like either allow only a string and special-case the error types we care about, or actually allow the passed object to do something useful?","msgtype":"m.text"},"ts":1303931041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like \"for each property of the passed object, the thrown exception must have that property with the same value\"?","msgtype":"m.text"},"ts":1303931100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, the error text right now is confusing, because it doesn't actually say what part of the assertion failed.","msgtype":"m.text"},"ts":1303931101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm, where does the platform throw non-ES-Errors or non-DOMExceptions?","msgtype":"m.text"},"ts":1303931102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DOM Range throws RangeExceptions.","msgtype":"m.text"},"ts":1303931160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm pretty sure IndexedDB throws its own exceptions too.","msgtype":"m.text"},"ts":1303931161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And maybe others.","msgtype":"m.text"},"ts":1303931162000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"A RangeException isn't an instanceof a DOMException?","msgtype":"m.text"},"ts":1303931163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or is there some basic Exception type?","msgtype":"m.text"},"ts":1303931220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1303931221000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh. Who designed this platform?","msgtype":"m.text"},"ts":1303931222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How about I kill RangeExceptions?","msgtype":"m.text"},"ts":1303931223000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do browsers already support them?","msgtype":"m.text"},"ts":1303931280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Gecko does, but I think I can convince sicking :)","msgtype":"m.text"},"ts":1303931340000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Can you convince him to kill IDBDatabaseException? :)","msgtype":"m.text"},"ts":1303931400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"actually","msgtype":"m.text"},"ts":1303931401000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the DOMException design is horrible, we need to abandon it","msgtype":"m.text"},"ts":1303931460000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Which part in particular?","msgtype":"m.text"},"ts":1303931461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So you agree less classes with that design is good? :)","msgtype":"m.text"},"ts":1303931462000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no, the opposite","msgtype":"m.text"},"ts":1303931463000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"first off DOMExceptions aren't very javascripty","msgtype":"m.text"},"ts":1303931520000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"The DOM isn't","msgtype":"m.text"},"ts":1303931521000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"we're trying to fix that though","msgtype":"m.text"},"ts":1303931522000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"normal javascript exceptions can be checked by just checking .type, or by using instanceof","msgtype":"m.text"},"ts":1303931523000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"they have one interface per exception type","msgtype":"m.text"},"ts":1303931524000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I don't mind many classes if there is some Exception type they all inherit from","msgtype":"m.text"},"ts":1303931580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yup, there should be","msgtype":"m.text"},"ts":1303931581000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"second, the fact that DOMException is code based means that authors have to check both interface name and code number","msgtype":"m.text"},"ts":1303931582000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"unless we somehow manage to never have two specs use overlapping codes. So far we've failed at this","msgtype":"m.text"},"ts":1303931640000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"webidl is getting better exception support, we should use it","msgtype":"m.text"},"ts":1303931700000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Not for existing exceptions","msgtype":"m.text"},"ts":1303931701000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So the proposal is what? Kep it basically the same but with non-sucky inheritance models?","msgtype":"m.text"},"ts":1303931702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Keep","msgtype":"m.text"},"ts":1303931703000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or add stuff to the existing API?","msgtype":"m.text"},"ts":1303931704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: why not? If we can do it in a backwards compat manner","msgtype":"m.text"},"ts":1303931705000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"We can't really subtract stuff...","msgtype":"m.text"},"ts":1303931706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think all we need is .code to remain backwards compat, and \"e instanceof DOMException\"","msgtype":"m.text"},"ts":1303931760000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so just define new exception interfaces which all inherit from DOMException","msgtype":"m.text"},"ts":1303931820000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and that have .code set to what DOMException uses now","msgtype":"m.text"},"ts":1303931821000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and do the same for other exception interfaces if we think it's needed","msgtype":"m.text"},"ts":1303931880000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"It sounds like it could work","msgtype":"m.text"},"ts":1303931940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That sounds good.","msgtype":"m.text"},"ts":1303932000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Except, what about if the exception was thrown in another window?","msgtype":"m.text"},"ts":1303932001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then instanceof breaks.","msgtype":"m.text"},"ts":1303932002000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: So I guess I need to fix up testharness.js in the meantime","msgtype":"m.text"},"ts":1303932003000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"any particular API you like?","msgtype":"m.text"},"ts":1303932004000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess sicking didn't see: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12295","msgtype":"m.text"},"ts":1303932005000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, one sec, I'm writing a patch.","msgtype":"m.text"},"ts":1303932006000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I doubt I will do it right now :)","msgtype":"m.text"},"ts":1303932060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: that's already the case. And you can still check .type","msgtype":"m.text"},"ts":1303932061000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hmm, right.","msgtype":"m.text"},"ts":1303932062000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But then .type is the only reliable piece of info, so why bother with the inheritance stuff?","msgtype":"m.text"},"ts":1303932120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham and Ms2ger, quick proposed patch: http://pastebin.com/TgX0YNyf","msgtype":"m.text"},"ts":1303932121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: You have to be sure to check against the interface object in the right global scope","msgtype":"m.text"},"ts":1303932180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"which is not *usually* a problem","msgtype":"m.text"},"ts":1303932240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How are you supposed to know what the right global scope is, in general-purpose code?","msgtype":"m.text"},"ts":1303932241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well that is an interesting question","msgtype":"m.text"},"ts":1303932242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's not usually a problem in the sense that it will very rarely come up, so nobody will code for it and they'll get inscrutable errors and assume browsers are crazy.","msgtype":"m.text"},"ts":1303932243000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"istr that a goal of ES5 was to make that hard :)","msgtype":"m.text"},"ts":1303932244000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(which is what I did)","msgtype":"m.text"},"ts":1303932245000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(although I'd have figured it out sooner if Firefox matched other browsers here)","msgtype":"m.text"},"ts":1303932246000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I don't think I like that approach","msgtype":"m.text"},"ts":1303932360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My patch?","msgtype":"m.text"},"ts":1303932420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1303932421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The error messages are slightly confusing because they no longer mention the expected interface.","msgtype":"m.text"},"ts":1303932422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That could be fixed easily, though.","msgtype":"m.text"},"ts":1303932423000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think it makes things more magic rather than less","msgtype":"m.text"},"ts":1303932424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Do you have a proposal for making things less magic without adding lots of verbosity to callers?","msgtype":"m.text"},"ts":1303932425000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Good question","msgtype":"m.text"},"ts":1303932426000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Do you think it's even possible to make things less magic?","msgtype":"m.text"},"ts":1303932427000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well sure","msgtype":"m.text"},"ts":1303932480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Especially if we want to be able to easily switch what we're testing in the future, if the spec for DOMException or such is changed?","msgtype":"m.text"},"ts":1303932481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"E.g., testing .name or .type or something.","msgtype":"m.text"},"ts":1303932482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"assert_throws_dom(\"code\", exception_obj, func) for example","msgtype":"m.text"},"ts":1303932483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like assert_throws(\"INVALID_REQUEST_ERR\", DOMException, func)","msgtype":"m.text"},"ts":1303932540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"+_dom","msgtype":"m.text"},"ts":1303932541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It is more verbose though","msgtype":"m.text"},"ts":1303932542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How would that work for RangeExceptions?","msgtype":"m.text"},"ts":1303932543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"My approach isn't extensible at all, it's true.","msgtype":"m.text"},"ts":1303932544000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"assert_throws_dom(\"SOME_CODE\", RangeException, func)","msgtype":"m.text"},"ts":1303932600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and it neatly solves the global problem by making the caller deal with it","msgtype":"m.text"},"ts":1303932601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1303932602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Now that's a thought.","msgtype":"m.text"},"ts":1303932603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Except, is it actually specced what global the thrown exception should be part of?","msgtype":"m.text"},"ts":1303932660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If I get a Node object from another window, and call a method on it in this window, is the thrown exception from that window or this one?","msgtype":"m.text"},"ts":1303932661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, I remember running into that too","msgtype":"m.text"},"ts":1303932662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Come to think of it, this must be why any non-Firefox browsers passed my tests.","msgtype":"m.text"},"ts":1303932663000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's all good fun this :)","msgtype":"m.text"},"ts":1303932664000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess WebKit throws from the Node's window, and IE from the current window.","msgtype":"m.text"},"ts":1303932720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So as a design goal, do we want users to be able to easily extend assert_throws() to support their own exceptions without forking the library?","msgtype":"m.text"},"ts":1303932780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If so, then we should have it accept a callback to determine if the exception is correct.","msgtype":"m.text"},"ts":1303932781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then third parties can write their own wrappers that pass in a callback.","msgtype":"m.text"},"ts":1303932782000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But the core library can provide some convenience wrappers for DOM exception types that need to be shared between specs.","msgtype":"m.text"},"ts":1303932840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why do we need a callback","msgtype":"m.text"},"ts":1303932841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1303932842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because the caller might want to verify arbitrary things about the exception.","msgtype":"m.text"},"ts":1303932843000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since no two specs agree on what properties exceptions have to have.","msgtype":"m.text"},"ts":1303932844000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No, I don't think that's needed","msgtype":"m.text"},"ts":1303932845000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think assert_throws should be about chacking that an exception of the right type was thrown","msgtype":"m.text"},"ts":1303932900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For what definition of \"type\"?","msgtype":"m.text"},"ts":1303932901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you want to do something more complex, use assert_equals","msgtype":"m.text"},"ts":1303932902000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Then you have to write your own boilerplate try/catch with multiple asserts.","msgtype":"m.text"},"ts":1303932960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Interface+code for dom exceptions, object type for ES Exceptions","msgtype":"m.text"},"ts":1303932961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, but only once per exception type or so","msgtype":"m.text"},"ts":1303932962000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You probably don't need to do that every time you test an exception is thrown","msgtype":"m.text"},"ts":1303932963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We can't test interface.  We could test that all the expected interface members are present and have the right types, I suppose.","msgtype":"m.text"},"ts":1303933020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyone want to write a WebIDL parser in JS?  :)","msgtype":"m.text"},"ts":1303933021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"instanceof tests interfaces","msgtype":"m.text"},"ts":1303933022000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not reliably, because of the cross-window problem.","msgtype":"m.text"},"ts":1303933023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"at least it tests what I meant when I said interafces","msgtype":"m.text"},"ts":1303933024000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The cross-window problem is a problem, I agree","msgtype":"m.text"},"ts":1303933080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I just removed instanceof checks from testharness.js because it was causing mass spurious test failures in WebKit.","msgtype":"m.text"},"ts":1303933081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But the solution is probably to fix the browsers to agree on the right behaviour","msgtype":"m.text"},"ts":1303933082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In the long term, maybe, but that doesn't help us for the present.","msgtype":"m.text"},"ts":1303933083000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I agree that testing instanceof is in principle ideal, but I don't think it's practical.","msgtype":"m.text"},"ts":1303933140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In the present I would like to keep using the interfaces until people complain louded","msgtype":"m.text"},"ts":1303933141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*louder","msgtype":"m.text"},"ts":1303933142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless we can figure out how to work around browser bugs.","msgtype":"m.text"},"ts":1303933143000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then maybe have some way to use the string representation","msgtype":"m.text"},"ts":1303933144000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's not standardized.","msgtype":"m.text"},"ts":1303933145000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Does it work? If it does then it ought to be standardised","msgtype":"m.text"},"ts":1303933200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and is good enough","msgtype":"m.text"},"ts":1303933201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No, every browser has a different string representation.","msgtype":"m.text"},"ts":1303933202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"My mockup tests that e[code] == myinterface[code] and e.code == myinterface[code].  That actually works reasonably reliably in all browsers.","msgtype":"m.text"},"ts":1303933203000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't think we have interop on anything more.","msgtype":"m.text"},"ts":1303933204000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(for DOMException and RangeException)","msgtype":"m.text"},"ts":1303933260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's also what assert_throws tests right now for DOMException, right?","msgtype":"m.text"},"ts":1303933261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although not RangeException.","msgtype":"m.text"},"ts":1303933262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The current implementation is totally broken, anyway.  The DOMException case generates confusing error messages, and the non-DOMException case makes no sense (object is passed and then only one hardcoded property is tested and this isn't documented anywhere).","msgtype":"m.text"},"ts":1303933320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Plus also generates confusing error messages.","msgtype":"m.text"},"ts":1303933380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"My proposed patch is backward-compatible, has succinct syntax for the caller, and generates better error messages, plus is already written.","msgtype":"m.text"},"ts":1303933381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Nevertheless","msgtype":"m.text"},"ts":1303933440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think it is the wrong approach","msgtype":"m.text"},"ts":1303933441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since it makes the unerlying problem (the methhod is too magic) worse rather than better","msgtype":"m.text"},"ts":1303933442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think the method being magic is a problem, and if it is, we can break out the magic parts into a separate convenience function and expose the non-magic parts separately.","msgtype":"m.text"},"ts":1303933500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What's wrong with the callback idea, then?","msgtype":"m.text"},"ts":1303933501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I also think it might be possible to hack around the frame bug. The stringification of the interface objects is quite standard I expect","msgtype":"m.text"},"ts":1303933560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm, that's a thought.","msgtype":"m.text"},"ts":1303933620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although it's orthogonal.","msgtype":"m.text"},"ts":1303933621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So one can say \"pass in the interface object in the frame that generates the caller\" and we can look up the same object in the local window","msgtype":"m.text"},"ts":1303933622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The string representation actually isn't very standard.","msgtype":"m.text"},"ts":1303933680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, you can just special-case it.","msgtype":"m.text"},"ts":1303933681000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"WebKit does function DOMException() { [native code] }, everyone else is [object DOMException].","msgtype":"m.text"},"ts":1303933740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I wish there were a better way to get the actual interface object, though.","msgtype":"m.text"},"ts":1303933800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/better //","msgtype":"m.text"},"ts":1303933801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":". . . still, that's orthogonal.","msgtype":"m.text"},"ts":1303933802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well that sucks","msgtype":"m.text"},"ts":1303933803000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Insofar as I would like to fix the DOM Range tests so that they actually work, and cannot do that with the current implementation of assert_throws(), what do you suggest I do?","msgtype":"m.text"},"ts":1303933804000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since you don't want me to special-case RangeException the way DOMException is special-cased.","msgtype":"m.text"},"ts":1303933860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, look at it this way.  If you rewrite it to some generalized form, you're going to have to support old callers anyway.","msgtype":"m.text"},"ts":1303933861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So is it really a big deal to support old callers using RangeException as well as DOMException?","msgtype":"m.text"},"ts":1303933862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd like to fix the DOM Range tests right now, and I can't without fixing assert_throws() to actually sanely accept non-DOMException inputs.","msgtype":"m.text"},"ts":1303933920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For now could you just add RangeException in the most non-invasive way posible whilse I think about it?","msgtype":"m.text"},"ts":1303933921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*possib;e","msgtype":"m.text"},"ts":1303933922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, if I'm allowed to refactor assert_throws() in unrelated ways at the same time to improve its error reporting, that would be my patch minus the TypeError stuff.  :)","msgtype":"m.text"},"ts":1303933980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Sure, but don't be too surprised if I change it again :)","msgtype":"m.text"},"ts":1303933981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"As long as you don't break back-compat without telling me.","msgtype":"m.text"},"ts":1303933982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, it just occurred to me:","msgtype":"m.text"},"ts":1303934040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In most cases, the exception will actually be from the current window.","msgtype":"m.text"},"ts":1303934041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So we can test that if e instanceof Object, e instanceof DOMException (or whatever) also.","msgtype":"m.text"},"ts":1303934042000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like assert(e instanceof DOMException || !(e instanceof Object), ...)","msgtype":"m.text"},"ts":1303934043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not perfect, but better than nothing.","msgtype":"m.text"},"ts":1303934044000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe","msgtype":"m.text"},"ts":1303934100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It is times like these that I hate the CaJa people","msgtype":"m.text"},"ts":1303934101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"CaJa?","msgtype":"m.text"},"ts":1303934280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Caja_project","msgtype":"m.text"},"ts":1303934340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":". . . why do you hate them?","msgtype":"m.text"},"ts":1303934400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They were the main drivers behind requirments on it being impossible to get at the global object","msgtype":"m.text"},"ts":1303934401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1303934402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"According to that page, they restrict themselves to a subset of JS anyway, so why do they care?  They can just leave out the way to get at the global object.","msgtype":"m.text"},"ts":1303934460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't really recall","msgtype":"m.text"},"ts":1303934461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Possibly they wanted the main lanuage to enforce more of their invariants for them","msgtype":"m.text"},"ts":1303934462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*language","msgtype":"m.text"},"ts":1303934520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or maybe it is hard to enforce by restricting features","msgtype":"m.text"},"ts":1303934521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh . . . Firefox breaks on the assumption that it will be an instanceof Object/DOMException on the same windows.","msgtype":"m.text"},"ts":1303934700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Sigh.","msgtype":"m.text"},"ts":1303934701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Basically nothing around the existance of multiple globals is speced","msgtype":"m.text"},"ts":1303934760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Check [[Class]] of the exception object?","msgtype":"m.text"},"ts":1303934940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham, okay, pushed.","msgtype":"m.text"},"ts":1303935300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Tell me if you want to break it.","msgtype":"m.text"},"ts":1303935360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(so I can fix the DOM Range tests)","msgtype":"m.text"},"ts":1303935361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ack.","msgtype":"m.text"},"ts":1303935660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger, you know that the RangeException removal breaks compat, right?","msgtype":"m.text"},"ts":1303935720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And tests?","msgtype":"m.text"},"ts":1303935780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What's the reasoning for that?","msgtype":"m.text"},"ts":1303935781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, granted that it shouldn't have existed in the first place, but it does, and everyone implements it.","msgtype":"m.text"},"ts":1303935840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think it's worth trying to kill it","msgtype":"m.text"},"ts":1303935900000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Why?  There are vastly more horrible things we don't bother trying to kill.","msgtype":"m.text"},"ts":1303935960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Do you think you have implementer buy-in?","msgtype":"m.text"},"ts":1303935961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I really don't see it as worth it.","msgtype":"m.text"},"ts":1303935962000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger, we should at least put an XXX in the spec.","msgtype":"m.text"},"ts":1303936440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you want to keep it this way, though, I'll update the tests.","msgtype":"m.text"},"ts":1303936441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger, AryehGregor: I think a better solution is to create two new exceptions which both inherit from RangeException. This would follow the better new WebIDL pattern and be backwards compatible","msgtype":"m.text"},"ts":1303936620000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"As far as my tests go, that would be the same as the status quo ante, and I'm fine with it.","msgtype":"m.text"},"ts":1303936680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"we *might* even be able to get away with making the new exceptions not inherit RangeException or have .code, but that would break backwards compat","msgtype":"m.text"},"ts":1303936681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Although that pattern does break confusingly in the presence of multiple globals.","msgtype":"m.text"},"ts":1303936682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: no more or less than current behavior","msgtype":"m.text"},"ts":1303936683000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Well, with the current behavior the only way to more-or-less reliably test that it's the right error code is something like e.code == e.INVALID_NODE_TYPE_ERR, which happens to sidestep the interface issue.","msgtype":"m.text"},"ts":1303936740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Your way would encourage authors to do e instanceof InvalidNodeTypeException or whatever the case may be, which will break in weird corner cases.","msgtype":"m.text"},"ts":1303936800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Currently there's no real reason to do e instanceof RangeException, it's not realistically going to pass e.code == e.INVALID_NODE_TYPE_ERR otherwise.","msgtype":"m.text"},"ts":1303936801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: And what do you do about the Object/Array case?","msgtype":"m.text"},"ts":1303936802000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, what?","msgtype":"m.text"},"ts":1303936803000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: {} instanceof otherglobal.Object returns false","msgtype":"m.text"},"ts":1303936860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: This behaviour is consistent with everything in JS varying on globals","msgtype":"m.text"},"ts":1303936861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"On an unrelated note: I guess there's no way in hg to just throw away my local commits, like git rebase --hard some_commit && git pull?","msgtype":"m.text"},"ts":1303936862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, well, yeah.  So I'm saying instanceof is broken and we shouldn't encourage authors to rely on it.","msgtype":"m.text"},"ts":1303936920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Actually, right now you should both check |e instanceof DOMException && e.code = e.INVALID_...|","msgtype":"m.text"},"ts":1303936921000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, you should, but the e instanceof DOMException part is superfluous in practice.","msgtype":"m.text"},"ts":1303936922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but we don't need to encourage people to use instanceof. We can just tell them to use .type","msgtype":"m.text"},"ts":1303936923000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"AryehGregor: it's not, there are multiple exception types floating around","msgtype":"m.text"},"ts":1303936924000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Yeah, but how many of them have an error code called INVALID_NODE_TYPE_ERR?","msgtype":"m.text"},"ts":1303936980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: SVGException, RangeException, DOMException, I'm sure there are more","msgtype":"m.text"},"ts":1303936981000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hmm...","msgtype":"m.text"},"ts":1303936982000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"AryehGregor: But it's not broken, they're fundementally different objects","msgtype":"m.text"},"ts":1303936983000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If authors should rely on .type, why define the extra interfaces at all?","msgtype":"m.text"},"ts":1303936984000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that is a good point actually","msgtype":"m.text"},"ts":1303936985000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"AryehGregor: Someone could've mutated the object in one global scope but not another","msgtype":"m.text"},"ts":1303936986000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: to follow javascript patterns","msgtype":"m.text"},"ts":1303936987000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Well, I guess that's a fair reason.","msgtype":"m.text"},"ts":1303936988000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: not all code crosses globals","msgtype":"m.text"},"ts":1303937040000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Yeah, very little does, which is why the bug will be extremely confusing when it happens.","msgtype":"m.text"},"ts":1303937041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: The point of instanceof is to tell whether something is in the prototype chain, and hence any property that exists on an object that instanceof returns true for exists on that object. You're violating that semantic with the behaviour you want.","msgtype":"m.text"},"ts":1303937042000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Okay, so is there any way in hg to just throw out some local commits, or do I have to reclone?","msgtype":"m.text"},"ts":1303937043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, I didn't say I wanted it to behave differently, I just said authors should avoid it.","msgtype":"m.text"},"ts":1303937100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i agree that instanceof is problematic. But the way we're heading now is bad too. And checking .type seems to solve all problems","msgtype":"m.text"},"ts":1303937101000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Yeah, a .type property would be great if everyone implemented it.","msgtype":"m.text"},"ts":1303937102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Of course, so would a .name property, or any other property, if everyone implemented it consistently . . .","msgtype":"m.text"},"ts":1303937103000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But I'm fine with ES5 compat.","msgtype":"m.text"},"ts":1303937104000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"err..","msgtype":"m.text"},"ts":1303937105000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sorry, it's called .name actually","msgtype":"m.text"},"ts":1303937106000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1303937107000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, that's convenient, isn't it?","msgtype":"m.text"},"ts":1303937108000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i don't know why i keep thinking it's .type","msgtype":"m.text"},"ts":1303937109000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"That's what the spec already says, then.","msgtype":"m.text"},"ts":1303937160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Other than the extra interfaces.","msgtype":"m.text"},"ts":1303937161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: http://stackoverflow.com/questions/4172753/how-to-get-rid-of-some-changeset-in-hg","msgtype":"m.text"},"ts":1303937162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sicking, what do you think about Ms2ger's change to get rid of RangeException entirely?  Do you think Gecko would do that?","msgtype":"m.text"},"ts":1303937163000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: what does the spec say .name should be on current exceptions?","msgtype":"m.text"},"ts":1303937164000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-name","msgtype":"m.text"},"ts":1303937220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: i'd be fine with trying to get rid of RangeException, but only if it's replaced with something better","msgtype":"m.text"},"ts":1303937221000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Well, actually that conflicts, right?","msgtype":"m.text"},"ts":1303937222000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so \"DOMException\" then?","msgtype":"m.text"},"ts":1303937223000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Because the ES way would have .name be IndexSizeErrException or something?","msgtype":"m.text"},"ts":1303937224000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that's not what i'm proposing","msgtype":"m.text"},"ts":1303937225000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"No, like \"INDEX_SIZE_ERR\".","msgtype":"m.text"},"ts":1303937226000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1303937227000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"IndexSizeException is what i'd propose","msgtype":"m.text"},"ts":1303937280000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"all exceptions are errors, no need to include \"Err\"","msgtype":"m.text"},"ts":1303937281000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Okay, so you're proposing that browsers change the meaning of .name on DOMException?  Because it already exists and has a different value from that.","msgtype":"m.text"},"ts":1303937282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yup, that's what i'm proposing","msgtype":"m.text"},"ts":1303937340000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Well, no two browsers currently agree on the meaning of .name for DOMException, so I guess it's not too bad . . .","msgtype":"m.text"},"ts":1303937400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Chrome gives \"HIERARCHY_REQUEST_ERR\", Gecko gives \"NS_ERROR_DOM_HIERARCHY_REQUEST_ERR\", Opera gives \"Error\", IE gives undefined.","msgtype":"m.text"},"ts":1303937401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It makes me a bit less enthusiastic about the proposal.","msgtype":"m.text"},"ts":1303937460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, yeah, so as I expected, it's not supported.  Yay hg, as usual.","msgtype":"m.text"},"ts":1303937461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So what I have to do is wipe out the whole repo and make a new one.  That's so much better than in git, where the commits would be accessible for the next few weeks until garbage-collected in case I wanted them.","msgtype":"m.text"},"ts":1303937520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And of course, the clone command also changes hgrc, and possibly other things that I'm not aware of.","msgtype":"m.text"},"ts":1303937580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems like there's no good bridge for git users who are forced to use Mercurial, only the other way around.","msgtype":"m.text"},"ts":1303937700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I think you can do waht you want with mq but that is deep magic to me","msgtype":"m.text"},"ts":1303938180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mq is a separate queue on top of hg, not a way of managing hg commits, right?","msgtype":"m.text"},"ts":1303938240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So it would only work if I didn't actually commit locally yet?","msgtype":"m.text"},"ts":1303938241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's a way to convert hg commits into mq patches, so you can edit them and re-commit them","msgtype":"m.text"},"ts":1303938300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(See hg qimport --help)","msgtype":"m.text"},"ts":1303938360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I think)","msgtype":"m.text"},"ts":1303938361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Personally, I'm still going to go with hating hg and wishing I could use git.","msgtype":"m.text"},"ts":1303938362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think in this case git is better","msgtype":"m.text"},"ts":1303938480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have yet to find any nontrivial case where I consider hg better.","msgtype":"m.text"},"ts":1303938540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And I've been using it for a few months now.","msgtype":"m.text"},"ts":1303938541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In general I have come over to the idea that git's more mutable history is better for team work than mercurial's desire to preserve everything","msgtype":"m.text"},"ts":1303938542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"likes Hg because it works better in trivial cases, and almost everything he does is trivial cases","msgtype":"m.emote"},"ts":1303938600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't find it works better in trivial cases.","msgtype":"m.text"},"ts":1303938601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"because the commits that you want to make locally are not usually the same as the ones you eant to share","msgtype":"m.text"},"ts":1303938602000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*want","msgtype":"m.text"},"ts":1303938603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, I should say that git has sometimes gotten me into some crazy state where I have no idea what it's doing, but on the other hand, hg has eaten my data, so it's more than equal.","msgtype":"m.text"},"ts":1303938604000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"git is certainly harder to understand.","msgtype":"m.text"},"ts":1303938605000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I wonder how easy it is to delete commits using the internal api","msgtype":"m.text"},"ts":1303938780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The mercurial internal API turns out to be quite easy to understand","msgtype":"m.text"},"ts":1303938781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heycam: yt?","msgtype":"m.text"},"ts":1303940880000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"hi jamesr","msgtype":"m.text"},"ts":1303941000000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"are you in the web perf call or planning to dial in to the second half?","msgtype":"m.text"},"ts":1303941060000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"I'm going to dial in for the second half","msgtype":"m.text"},"ts":1303941061000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k, me too. i want to propose that we try to keep technical discussions on the mailing list and not the telecon","msgtype":"m.text"},"ts":1303941062000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"but i'm not sure how that will go over","msgtype":"m.text"},"ts":1303941063000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"what's your preference?","msgtype":"m.text"},"ts":1303941064000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yes, I agree with that","msgtype":"m.text"},"ts":1303941065000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I also agree I'm not sure how it will go over :)","msgtype":"m.text"},"ts":1303941180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"there didn't seem to be too much push back when it was mentioned at the f2f","msgtype":"m.text"},"ts":1303941181000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"philippe seemed skeptical later on in email","msgtype":"m.text"},"ts":1303941182000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"I guess it is up to the chairs, anyway","msgtype":"m.text"},"ts":1303941183000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think we may need to demonstrate that we can make good progress without having technical discussion on the calls","msgtype":"m.text"},"ts":1303941240000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1303941241000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i.e. drive mailing list discussion of issues","msgtype":"m.text"},"ts":1303941242000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"guess the best thing is to lead by example","msgtype":"m.text"},"ts":1303941243000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1303941244000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if you just don't call in... :-)","msgtype":"m.text"},"ts":1303941245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1303941246000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"technical discussion in mail ++","msgtype":"m.text"},"ts":1303941840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(also I very occasionally read Web Perf. mail and I can't do that if it is hidden away)","msgtype":"m.text"},"ts":1303941960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(as telecon)","msgtype":"m.text"},"ts":1303941961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm, Opera has non-standard default styles for <blockquote>.","msgtype":"m.text"},"ts":1303942620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I should write some tests for HTML5's Rendering section.","msgtype":"m.text"},"ts":1303942621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That would be useful.","msgtype":"m.text"},"ts":1303942622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"heycam: i'd be a lot happier if this discussion started on the mailing list","msgtype":"m.text"},"ts":1303943040000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"and/or ended there","msgtype":"m.text"},"ts":1303943041000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i've just zoned uot","msgtype":"m.text"},"ts":1303943042000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"me too. this isn't being minuted very well either.","msgtype":"m.text"},"ts":1303943043000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"CSS question: why does a <br> immediately after a <div> take effect, while one immediately before a <div> does not?  http://software.hixie.ch/utilities/js/live-dom-viewer/saved/962","msgtype":"m.text"},"ts":1303943100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Is this specced somewhere?  IIRC, CSS doesn't have too much to say about <br>.","msgtype":"m.text"},"ts":1303943160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(in that link, there's extra whitespace between \"Foo\" and \"Bar\", but not \"Bar\" and \"Baz\", in the browsers I tested in)","msgtype":"m.text"},"ts":1303943161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"looks in CSS 2.1","msgtype":"m.emote"},"ts":1303943220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think it's because of whitespace collapsing.","msgtype":"m.text"},"ts":1303943221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That migh not make sense.","msgtype":"m.text"},"ts":1303943222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"here we go again","msgtype":"m.text"},"ts":1303943223000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"\"Line boxes that contain no text, no preserved white space, no inline elements with non-zero margins, padding, or borders, and no other in-flow content (such as images, inline blocks or inline tables), and do not end with a preserved newline must be treated as zero-height line boxes for the purposes of determining the positions of any elements inside of them, and must be treated as not existing for any other purpose.\"","msgtype":"m.text"},"ts":1303943280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's probably it, somehow.","msgtype":"m.text"},"ts":1303943340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although I don't know how.","msgtype":"m.text"},"ts":1303943341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So it seems like the last <br> in a block box is eaten, but not the first.","msgtype":"m.text"},"ts":1303943520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, that's it.  The first <br> creates an empty linebox, but the linebreak is preserved (due to being generated by a <br>).  The second <br>'s linebreak, though, is on the same line as \"Bar\".  The third line box which would otherwise be created has no preserved whitespace, so it's killed.","msgtype":"m.text"},"ts":1303943521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: I've always see it as <br> moves the insertion point from the current location to the next line (but takes up no space). So \"text<br><div></div>\" would move the insertion point from end of \"text\" to a new line, and the div would be inserted there. Since <br> takes up no space, the div remains on that new line. However, with \"<div></div><br>text\", the <br> is moved onto the next line automatically because <div> is a block element. The","msgtype":"m.text"},"ts":1303943522000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"n, it adds an additional lines... and the text follows that.","msgtype":"m.text"},"ts":1303943523000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"TabAtkins, ah -- that must be it.","msgtype":"m.text"},"ts":1303943524000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's kind of weird.  You wouldn't think of a newline as being part of any line box at all, really.","msgtype":"m.text"},"ts":1303943580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Thanks.","msgtype":"m.text"},"ts":1303943581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Np.","msgtype":"m.text"},"ts":1303943582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Characters aren't allowed to exist outside of lineboxes, and \\A is a character.","msgtype":"m.text"},"ts":1303943583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bfrohs, also makes sense, but not really precise in the sense of CSS 2.1.","msgtype":"m.text"},"ts":1303943584000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, either way is good enough for me.","msgtype":"m.text"},"ts":1303943585000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yeah, just how I've always made sense out of it in my head based on what browsers actually do ;)","msgtype":"m.text"},"ts":1303943640000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"heycam: do you use anolis?","msgtype":"m.text"},"ts":1303944120000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr, I do not, but many other people here do","msgtype":"m.text"},"ts":1303944180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"would you rather switch to that from my custom xslt thingo?","msgtype":"m.text"},"ts":1303944181000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah, or teach me how your xslt thing works","msgtype":"m.text"},"ts":1303944182000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"either way is fine with me","msgtype":"m.text"},"ts":1303944183000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"as long as the output looks nice :)","msgtype":"m.text"},"ts":1303944240000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if you are more familiar with anolis I'm happy to switch to that","msgtype":"m.text"},"ts":1303944300000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k, then i'll try to construct a version of your most recent draft minus the native animation stuff, get it into a format anolis likes, and then push that to HG once i figure out how that works","msgtype":"m.text"},"ts":1303944301000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"is the idea we'd check in the input and output to HG?","msgtype":"m.text"},"ts":1303944302000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"great, thanks!","msgtype":"m.text"},"ts":1303944303000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think so, so that we can view the final form document on http://dvcs.w3.org/","msgtype":"m.text"},"ts":1303944304000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jamesr, btw we'll probably be making some changes to align with the webkit version: https://bugzilla.mozilla.org/show_bug.cgi?id=647517 and https://bugzilla.mozilla.org/show_bug.cgi?id=647518","msgtype":"m.text"},"ts":1303944420000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1303944600000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i could add in my text for those too","msgtype":"m.text"},"ts":1303944660000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yeah, I think that's fine","msgtype":"m.text"},"ts":1303944720000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Plaintext e-mail has RTL in visual order, not logical?  Really?","msgtype":"m.text"},"ts":1303945680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Plaintext doesn't mean \"see the bytes in order\".  It just means no styling.  Bidi algorithms aren't styling.","msgtype":"m.text"},"ts":1303945740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess I have to test.","msgtype":"m.text"},"ts":1303945800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Testing turned out to be too tiresome, what with encoding issues, so I'll live in ignorance.","msgtype":"m.text"},"ts":1303945980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's such a thing as encoding RTL in visual order, although it makes no sense if you have to do line breaking.  I just saw someone say that the convention for plaintext e-mail is visual rather than logical.","msgtype":"m.text"},"ts":1303945981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, plaintext e-mail does predate the Unicode RTL algorithm by a wide margin.","msgtype":"m.text"},"ts":1303946040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Am I crazy, or is wikipedia completely unstyled now?","msgtype":"m.text"},"ts":1303946041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You're crazy.","msgtype":"m.text"},"ts":1303946100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hm.","msgtype":"m.text"},"ts":1303946101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(if it persists, #wikimedia-tech)","msgtype":"m.text"},"ts":1303946102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Let's check another browser.","msgtype":"m.text"},"ts":1303946103000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, my computer just went crazy and lost my network drive.","msgtype":"m.text"},"ts":1303946280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My computer has gone totally crazy.  Time to reboot, I guess.","msgtype":"m.text"},"ts":1303947720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]