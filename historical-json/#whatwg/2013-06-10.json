[
{"content":{"body":"hsivonen: bugzilla.validator.nu unresponsive","msgtype":"m.text"},"ts":1370824099000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or responding only very slowly","msgtype":"m.text"},"ts":1370824112000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Remote DOM Community Group\"?","msgtype":"m.text"},"ts":1370824158000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.w3.org/community/blog/2013/06/09/proposed-group-remote-dom-community-group/","msgtype":"m.text"},"ts":1370824180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"[[Similarly to how the Shadow DOM paved the way for custom elements using web technologies, a “Remote DOM” could allow display of portions of the web app to be displayed on “remote” (i.e. “external”) devices, such as screens, Smart TVs, etc.","msgtype":"m.text"},"ts":1370824196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"help me out here","msgtype":"m.text"},"ts":1370830619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html#entity-copy-legacy","msgtype":"m.text"},"ts":1370830623000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that means the spec requires \"&copy\" (without the semicolon) to be displayed as U+000A9 (the copyright symbol), right?","msgtype":"m.text"},"ts":1370830672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: might depend on the context","msgtype":"m.text"},"ts":1370830842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1370830854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: actually, testing <body title=&copy>test&copytest that seems to be what it means","msgtype":"m.text"},"ts":1370830884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, and in stuff like href='http://example.org/demo?id=hello&copy=1&world=fun' too","msgtype":"m.text"},"ts":1370830977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anywhere actually","msgtype":"m.text"},"ts":1370830985000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"regardless of the context, I think","msgtype":"m.text"},"ts":1370830992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as the parser behavior goes","msgtype":"m.text"},"ts":1370831001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so actually","msgtype":"m.text"},"ts":1370831118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: \"If the character reference is being consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next character is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be unconsumed, and nothing is returned.\"","msgtype":"m.text"},"ts":1370831156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: so <body title=&copys> has a title of \"&copys\"","msgtype":"m.text"},"ts":1370831190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not \"©s\"","msgtype":"m.text"},"ts":1370831202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm OK","msgtype":"m.text"},"ts":1370831226000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I missed the part about the equals sign","msgtype":"m.text"},"ts":1370831236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah yeah, \"alphanumeric ASCII character\" too","msgtype":"m.text"},"ts":1370831253000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"shit now I have to scribe","msgtype":"m.text"},"ts":1370831468000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"did you give the person asking a shit-bow?","msgtype":"m.text"},"ts":1370832884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man I didn't do a good job of scribing that","msgtype":"m.text"},"ts":1370833901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Do we have anything else besides WebSocket with regards to streaming?","msgtype":"m.text"},"ts":1370836123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh doh, EventSource","msgtype":"m.text"},"ts":1370836131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Streams ...","msgtype":"m.text"},"ts":1370836252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, <hn> elements section content by nature, correct?","msgtype":"m.text"},"ts":1370842136000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: yup","msgtype":"m.text"},"ts":1370848008000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"MikeSmith: seems to work now but slowly","msgtype":"m.text"},"ts":1370851448000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah very slowly","msgtype":"m.text"},"ts":1370851549000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it should now be better for a little while again","msgtype":"m.text"},"ts":1370852044000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the validator process would benefit from running on Heroku-like infrastructure","msgtype":"m.text"},"ts":1370852101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I don't want the DMCA exposure of hosting it in the U.S.","msgtype":"m.text"},"ts":1370852136000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and European companies seem to be too incompetent to come up with something like Heroku","msgtype":"m.text"},"ts":1370852164000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's already hosted on the NSA servers too","msgtype":"m.text"},"ts":1370852165000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: thanks I just tried again and it's better and I'll take advantage of it to update a few bugs :-)","msgtype":"m.text"},"ts":1370852184000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: I don't mean in terms of NSA exposure. I mean in terms of the public U.S. legal system.","msgtype":"m.text"},"ts":1370852208000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(Just joking about the NSA now, because everyone will have forgotten next month)","msgtype":"m.text"},"ts":1370852280000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If I decided to pay for a separate bugzilla server, what guide should I follow to set up bugzilla in such a way that getting security updates works?","msgtype":"m.text"},"ts":1370852791000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. awesome. We don't seem to fire DOMContentLoaded for XSLT-generated docs","msgtype":"m.text"},"ts":1370852960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"bug or feature?","msgtype":"m.text"},"ts":1370852977000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I would assume that no one knows :)","msgtype":"m.text"},"ts":1370853034000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hsivonen: run Debian stable on the server you use for bugzilla?","msgtype":"m.text"},"ts":1370853072000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my patch starts accidentally firing DOMFrameContentLoaded for the XSLT source docs","msgtype":"m.text"},"ts":1370853079000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: do they backport patches?","msgtype":"m.text"},"ts":1370853088000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: do I get an ancient Bugzilla?","msgtype":"m.text"},"ts":1370853103000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: current Debian stable has version 4.2.5 I think","msgtype":"m.text"},"ts":1370853160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Gecko also has a bug when it comes to sizing the view port for an XSLT-generated doc in an iframe","msgtype":"m.text"},"ts":1370853166000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yay, XSLT","msgtype":"m.text"},"ts":1370853169000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"my problem: I don't forget to test XSLT","msgtype":"m.text"},"ts":1370853187000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"No good deed goes unpunished","msgtype":"m.text"},"ts":1370853210000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"hsivonen: I don't know how Debian handles patches but I think stable gets regular security-patch updates","msgtype":"m.text"},"ts":1370853220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wait, you mean you've made it so that the xml-stylesheet PI fires DOMFrameContentLoaded?","msgtype":"m.text"},"ts":1370853231000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"somehow I find that very funny","msgtype":"m.text"},"ts":1370853244000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"not entirely sure why","msgtype":"m.text"},"ts":1370853247000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin, you're French, and drunk? I dunno","msgtype":"m.text"},"ts":1370853301000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"darobin: Not enough coffee? Too much coffee?","msgtype":"m.text"},"ts":1370853309000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I opt for jgraham's explanation","msgtype":"m.text"},"ts":1370853354000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"maybe the last shreds of sanity I had has finally evaporated","msgtype":"m.text"},"ts":1370853383000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"So since we have a pre-existing bug about XSLT not filing DOMContentLoaded, I think I'll take the EME approach and declare that fixing that bug is out of scope of the fix for the bug I'm trying to fix","msgtype":"m.text"},"ts":1370853460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when would XSLT fire DCL anyway? before or after transformation? (given that new resources are likely involved)","msgtype":"m.text"},"ts":1370853565000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I would assume after","msgtype":"m.text"},"ts":1370853672000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OTOH, as we previously discussed, Gecko's XSLT suffers from trying to do things too well","msgtype":"m.text"},"ts":1370853714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"darobin: after","msgtype":"m.text"},"ts":1370853715000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"https://github.com/Masterminds/html5-php \"This project initially began with the seemingly abandoned html5lib project original source. But after some initial refactoring work, we began a new parser.\"","msgtype":"m.text"},"ts":1370853914000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: have you opened a bug yet about abandoning the xslt code path (i.e. doing the wrong thing)?","msgtype":"m.text"},"ts":1370853978000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"The Tokenizer requests data off of the scanner, parses it, clasifies it, and sends it to an EventHandler. It is a recursive descent parser.\"","msgtype":"m.text"},"ts":1370854067000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't understand","msgtype":"m.text"},"ts":1370854074000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: I haven't","msgtype":"m.text"},"ts":1370854081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: are you going to? :-)","msgtype":"m.text"},"ts":1370854189000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Processor Instructions: The HTML5 spec does not allow processor instructions. We do. Since this is a server-side library, we think this is useful.\"","msgtype":"m.text"},"ts":1370854528000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not sure. I was planning on fixing XSLT as part of the planned but always deferred XML rewrite project","msgtype":"m.text"},"ts":1370854534000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Processor, eh","msgtype":"m.text"},"ts":1370854581000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: HTML5 bans your processor from running instructions","msgtype":"m.text"},"ts":1370854600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Unless Hollywood allow it","msgtype":"m.text"},"ts":1370854635000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: i think href=\"&copy=\" is an error currently. \"However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a parse error, because some legacy user agents will misinterpret the markup in those cases.\"","msgtype":"m.text"},"ts":1370855163000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#tokenizing-character-references","msgtype":"m.text"},"ts":1370855188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"anyone good with legalese? Just trying to write a phrase where I try explain: if you use my company's services without paying, we reserve the right to persue you for payment.","msgtype":"m.text"},"ts":1370855207000,"senderName":"hendry","senderId":"hendry@irc"},
{"content":{"body":"zcorpan: oh","msgtype":"m.text"},"ts":1370855245000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also, i don't have a strong opinion on the document conformance around ampersands. i have had strong opinions about how they should be parsed, though :-)","msgtype":"m.text"},"ts":1370855310000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://html5.org/r/7679 is the change","msgtype":"m.text"},"ts":1370855372000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"commented in the bug","msgtype":"m.emote"},"ts":1370855478000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh crap, wrong channel","msgtype":"m.text"},"ts":1370855721000,"senderName":"hendry","senderId":"hendry@irc"},
{"content":{"body":"Hello sleeping people and those that are awake. i'm seeking some answers regarding the new API for html5lib-python can anyone help?","msgtype":"m.text"},"ts":1370856080000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1370856128000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thanks jgraham.","msgtype":"m.text"},"ts":1370856146000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"I'm seeking to modify bleach for my own purposes, but I can't seem to understand one or 2 little things about the new API....","msgtype":"m.text"},"ts":1370856172000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"1. how would I access Element.type and ...","msgtype":"m.text"},"ts":1370856193000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"zcorpan: thanks fur the big comment","msgtype":"m.text"},"ts":1370856201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"marcdm: Which \"API\" do you mean? The one for the tree of elements that you get after parsing? Or something else?","msgtype":"m.text"},"ts":1370856269000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes jgraham","msgtype":"m.text"},"ts":1370856283000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"2. If I want to modify the tree, say I want to make changes to the list I get from .get_children(), which docs should I read for how i can make a new tree or modify it inplace","msgtype":"m.text"},"ts":1370856288000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"hmm, seems i messed up with the anolis .tail fix","msgtype":"m.text"},"ts":1370856300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"  File \"build/bdist.macosx-10.8-intel/egg/anolislib/processes/filter.py\", line 32, in filter","msgtype":"m.text"},"ts":1370856339000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'","msgtype":"m.text"},"ts":1370856340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the real problem is that in bleach they do an in-place modification using a while loop through tree.childNodes","msgtype":"m.text"},"ts":1370856349000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Right, so now html5lib itself doesn't actually have any built-in tree representation. It just outputs a tree in an existing format","msgtype":"m.text"},"ts":1370856358000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Before it had this built-in \"simpletree\" thing, that wasn't really supposed to be production-quality","msgtype":"m.text"},"ts":1370856386000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so I'm really just at the mercy of what I can get from ElementTree","msgtype":"m.text"},"ts":1370856394000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"So the new default is to use ElementTree","msgtype":"m.text"},"ts":1370856398000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is in the stdlib","msgtype":"m.text"},"ts":1370856405000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, and the bleach guys implemented their algorithm using the simpletree API","msgtype":"m.text"},"ts":1370856423000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Yes, I think they did","msgtype":"m.text"},"ts":1370856437000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"uphill task. changing into 2nd gear.","msgtype":"m.text"},"ts":1370856458000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"So, if I understand the situation with bleach right, they need to rework their use of html5lib to use ElementTree","msgtype":"m.text"},"ts":1370856515000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and I think the easiest thing might be to implement a fake simpletree over elementTree to provide those attributes they want","msgtype":"m.text"},"ts":1370856516000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"That might be simple, but it doesn't sound like a great fix.","msgtype":"m.text"},"ts":1370856538000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"totally agreed.","msgtype":"m.text"},"ts":1370856551000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"I'm looking at the faulty code now, wanting to run it in Py3.2 on Wheezy","msgtype":"m.text"},"ts":1370856571000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"I haven't looked closely at bleach, but I wouldn't have thought it was hard to make it work with ElementTree","msgtype":"m.text"},"ts":1370856572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, since I didn't quite understand how html5lib works, I wasn't quite sure what to expect from the code.","msgtype":"m.text"},"ts":1370856617000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"So it looks like it's just linkify that needs to be updated?","msgtype":"m.text"},"ts":1370856736000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, just to confirm, parser.parseFragment(text) produces a regular ElementTree.Element right?","msgtype":"m.text"},"ts":1370856736000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"yup.","msgtype":"m.text"},"ts":1370856743000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"I think it can return a list of elements","msgtype":"m.text"},"ts":1370856759000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"more specifically, linkify_nodes within linkify","msgtype":"m.text"},"ts":1370856765000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"For cases like \"<div>foo</div><div>bar</div>\"","msgtype":"m.text"},"ts":1370856783000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that is very much from memory","msgtype":"m.text"},"ts":1370856794000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"huh?","msgtype":"m.text"},"ts":1370856828000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"the tree is passed in and modified in-place... heading to the etree docs","msgtype":"m.text"},"ts":1370856865000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1370856909000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not a list, a custom element type","msgtype":"m.text"},"ts":1370856917000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In [1]: import html5lib","msgtype":"m.text"},"ts":1370856929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In [2]: p = html5lib.HTMLParser()","msgtype":"m.text"},"ts":1370856929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In [3]: p.parseFragment(\"<div>foo</div><div>bar</div>\")","msgtype":"m.text"},"ts":1370856929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Out[3]: <Element u'DOCUMENT_FRAGMENT' at 0x371c300>","msgtype":"m.text"},"ts":1370856929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1370856938000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"when I try to getchildren on that, which is what linkify_nodes wants to do, I get the 1st div tho","msgtype":"m.text"},"ts":1370856971000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"I mean I get the divs","msgtype":"m.text"},"ts":1370856979000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"how do i sync my anolis fork?","msgtype":"m.text"},"ts":1370857010000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, just doing list(p.parseFragment(\"<div>foo</div><div>bar</div>\")) works","msgtype":"m.text"},"ts":1370857028000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(facepalm)","msgtype":"m.text"},"ts":1370857041000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Ms2ger`: ^","msgtype":"m.text"},"ts":1370857061000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"switching trains","msgtype":"m.emote"},"ts":1370857069000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hg pull -u https://zcorpan⊙bo/ms2ger/anolis && hg push https://zcorpan⊙bo/zcorpan/anolis I guess","msgtype":"m.text"},"ts":1370857123000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"try this (p.parseFragment(\"http://foo.co and <div>bar</div> you⊙mu\")","msgtype":"m.text"},"ts":1370857136000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"syntax corrections where necessary","msgtype":"m.text"},"ts":1370857173000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Yeah, that is going to be harder I guess","msgtype":"m.text"},"ts":1370857223000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tree.text gives me the text before the div, but I haven't gotten at the text after the div yet","msgtype":"m.text"},"ts":1370857347000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"It is the .tail of the last element","msgtype":"m.text"},"ts":1370857366000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so I'd want t a list containing the .text of the parent, the children and the .tail of each child?","msgtype":"m.text"},"ts":1370857422000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"heading to look at simpletree code","msgtype":"m.text"},"ts":1370857450000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":".itertext?","msgtype":"m.text"},"ts":1370857495000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Iterates over all the text in a subtree","msgtype":"m.text"},"ts":1370857540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which might not be enough for you, since you also need to know what the parent element was","msgtype":"m.text"},"ts":1370857560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, the bleach code wraps all things in a div (I think), so we can control the parent that way","msgtype":"m.text"},"ts":1370857593000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Right, but I mean if you have <div>foo <span>bar <i>http://example.com</i></span> baz</div>, you need to know that the link should be a child of the <i>","msgtype":"m.text"},"ts":1370857672000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if I remember right, BeautifuSoup gives us some kind of \"node\" iterator that treats bits of text as TextNodes.... I need something like that","msgtype":"m.text"},"ts":1370857693000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"yeah, I know what you mean, I realized it wasn't a complete solution","msgtype":"m.text"},"ts":1370857715000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"Ms2ger`: thanks. new pr coming up","msgtype":"m.text"},"ts":1370858175000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1370858243000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"https://bitbucket.org/ms2ger/anolis/pull-request/9/turns-out-none-none-throws/diff","msgtype":"m.text"},"ts":1370858329000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, thanks","msgtype":"m.text"},"ts":1370858411000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"kicks .tail","msgtype":"m.emote"},"ts":1370858416000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah, seriously. it shouldn't be this hard to remove an element","msgtype":"m.text"},"ts":1370858445000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I kinda liked simpletree ;)","msgtype":"m.text"},"ts":1370858547000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"simpletree was nice for what we're trying to do here, _read_ html. etree is awesome when you trying to write x/html","msgtype":"m.text"},"ts":1370858822000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"I think I sufficiently understand etree api to reimplement the faulty parts of bleach. thanks for your help jgraham","msgtype":"m.text"},"ts":1370859762000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"hmm. --w3c-compat turns on lots of xref elements. but turning it off takes away features like [STATUS], <!--logo-->, etc. maybe we should just trim the list of xref elements for w3c mode as well","msgtype":"m.text"},"ts":1370860034000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"--w3c-compat-substitutions?","msgtype":"m.text"},"ts":1370860299000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah, that seems to do what i want","msgtype":"m.text"},"ts":1370860558000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":-( MDN says the load event is defined by DOM Level 3","msgtype":"m.text"},"ts":1370861002000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's a wiki, I know","msgtype":"m.text"},"ts":1370861008000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yeah, they aren't terribly up to date","msgtype":"m.text"},"ts":1370861279000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I have a fairly blonde question, does html5lib-python always return {http://www.w3.org/1999/xhtml} as the namespace for html files?","msgtype":"m.text"},"ts":1370861693000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"when using etree","msgtype":"m.text"},"ts":1370861706000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"marcdm: yes, for HTML elements. For SVG elements you will get the SVG namespace, etc. This is per the spec","msgtype":"m.text"},"ts":1370861769000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"what about the newer html elements like aside, section, audio and video?","msgtype":"m.text"},"ts":1370861807000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"why does anolis when not in --w3c-compat mode turn <code> into <a><code> but in --w3c-compat mode <code><a>?","msgtype":"m.text"},"ts":1370861847000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think there is a list of special cases like SVG and MathML that change the namespace, but everything else defaults to the XHTML namespace.","msgtype":"m.text"},"ts":1370861876000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"the former gives blue underlines :-(","msgtype":"m.text"},"ts":1370861877000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which isn't fixable with css afaict","msgtype":"m.text"},"ts":1370861891000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: thanks.","msgtype":"m.text"},"ts":1370861906000,"senderName":"marcdm","senderId":"marcdm@irc"},
{"content":{"body":"looking forward to UTF-16-encoded XSLT","msgtype":"m.text"},"ts":1370863101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan, there's an option for that :)","msgtype":"m.text"},"ts":1370863255000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"--w3c-compat-xref-a-placement","msgtype":"m.text"},"ts":1370863262000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, i noticed. but what's the point?","msgtype":"m.text"},"ts":1370863282000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"301 gsnedders","msgtype":"m.text"},"ts":1370863290000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what's the current thinking on exposing an interface object on the global object when speccing a new WebIDL interface?","msgtype":"m.text"},"ts":1370864016000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"In general, just expose it","msgtype":"m.text"},"ts":1370864061000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what's the mechanism in our code that makes an interface exposed?","msgtype":"m.text"},"ts":1370864138000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Somewhere in classinfo, I think. There's a few ways to get exposed","msgtype":"m.text"},"ts":1370864190000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"* webidl interface without [NoInterfaceObject]","msgtype":"m.text"},"ts":1370864192000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"* XPIDL interface that starts with nsIDOM","msgtype":"m.text"},"ts":1370864202000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"* XPIDL interface that starts with nsI and has classinfo for some reason","msgtype":"m.text"},"ts":1370864215000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1370864225000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I *think* that's all of them","msgtype":"m.text"},"ts":1370864244000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I have been tasked with zapping interface objects that shouldn't be exposed","msgtype":"m.text"},"ts":1370864255000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The fun part is that a lot of the b2g stuff uses xpidl + classinfo","msgtype":"m.text"},"ts":1370864316000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks like most items I need to zap are XUL or B2G","msgtype":"m.text"},"ts":1370864336000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yay B2G for moz prefix proliferation","msgtype":"m.text"},"ts":1370864353000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yeah, they want to ship :/","msgtype":"m.text"},"ts":1370864374000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"presto mostly had the opposite problem, we didn't expose enough","msgtype":"m.text"},"ts":1370864379000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: they could ship without prefixes...","msgtype":"m.text"},"ts":1370864404000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess my next step is taking the list from http://hg.mozilla.org/mozilla-central/annotate/tip/dom/tests/mochitest/general/test_interfaces.html and checking it against Blink, WebKit, Presto and Trident","msgtype":"m.text"},"ts":1370864450000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Note that it doesn't actually fail if there's interfaces in there that aren't exposed","msgtype":"m.text"},"ts":1370864629000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Say, if you forget to remove MozBlobBuilder","msgtype":"m.text"},"ts":1370864648000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"clearly, for a DOM peer, I know quite little about the DOM","msgtype":"m.text"},"ts":1370865320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"You know about XSLT ;)","msgtype":"m.text"},"ts":1370865348000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why doesn't for (var name in window) {...} not show any interface objects?","msgtype":"m.text"},"ts":1370865351000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/not//","msgtype":"m.text"},"ts":1370865386000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"w(Object.getOwnPropertyDescriptor(window, \"XMLHttpRequest\").enumerable)","msgtype":"m.text"},"ts":1370865444000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"log: false","msgtype":"m.text"},"ts":1370865448000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I suspected there was a concept like that","msgtype":"m.text"},"ts":1370865480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but of course it's useful that personalbar is enumerable, for instance","msgtype":"m.text"},"ts":1370865504000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"These BarProps are lovely","msgtype":"m.text"},"ts":1370865531000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe you want Object.getOwnPropertyNames(window)","msgtype":"m.text"},"ts":1370865657000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: indeed, the test case lists a number of names that aren't actually exposed on window","msgtype":"m.text"},"ts":1370865873000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in the sense that (foo in window) would be true","msgtype":"m.text"},"ts":1370865883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Any others than HTMLCommandElement and MozBlobBuilder?","msgtype":"m.text"},"ts":1370865920000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SVGStylable, SVGTransformable, MozMobileCellInfo, etc.","msgtype":"m.text"},"ts":1370866007000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"many others","msgtype":"m.text"},"ts":1370866010000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Mm","msgtype":"m.text"},"ts":1370866028000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: awesome. there are also interfaces that aren't exposed but aren't listed in the test case","msgtype":"m.text"},"ts":1370866483000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders what the test case is good for","msgtype":"m.emote"},"ts":1370866492000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1370866493000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hsivonen: exposed in which way?","msgtype":"m.text"},"ts":1370866505000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1370866508000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess we don't put WebIDL-only interfaces on Ci","msgtype":"m.text"},"ts":1370866525000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: I added the test to make it less likely to expose random stuff to web","msgtype":"m.text"},"ts":1370866535000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: listed by Object.getOwnPropertyNames(window)","msgtype":"m.text"},"ts":1370866536000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the test was added before we started to webidlfy stuff","msgtype":"m.text"},"ts":1370866562000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: so the test only cares about nsI stuff getting accidentally exposed, it seems","msgtype":"m.text"},"ts":1370866576000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and nsIDOM","msgtype":"m.text"},"ts":1370866583000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I'm not sure about Webidl stuff","msgtype":"m.text"},"ts":1370866612000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(nsI and nsIDOM are handled very differently in this kind of case)","msgtype":"m.text"},"ts":1370866640000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm. no Object.getOwnPropertyNames() in Chrome","msgtype":"m.text"},"ts":1370868735000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Really?!","msgtype":"m.text"},"ts":1370868841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, it's uneval that's missing","msgtype":"m.text"},"ts":1370868917000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thought everyone had uneval","msgtype":"m.emote"},"ts":1370868923000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do I really have to write my own array serializer?","msgtype":"m.text"},"ts":1370868938000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"JSON.stringify","msgtype":"m.text"},"ts":1370868946000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1370868952000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":".toString()?","msgtype":"m.text"},"ts":1370868956000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well if he wants something that will parse later with eval","msgtype":"m.text"},"ts":1370868987000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"... then that's probably a problem on its own","msgtype":"m.text"},"ts":1370868999000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fair","msgtype":"m.text"},"ts":1370869003000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(I thought only gecko had uneval)","msgtype":"m.text"},"ts":1370869052000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so it seems","msgtype":"m.text"},"ts":1370869060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"had never heard of uneval","msgtype":"m.emote"},"ts":1370869078000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but how am I supposed to know that we're the abnormal ones","msgtype":"m.text"},"ts":1370869079000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well to be fair with js, that's the common case :)","msgtype":"m.text"},"ts":1370869097000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The question is, is it an e4xism","msgtype":"m.text"},"ts":1370869143000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(you were the only ones with E4X and all the js 1.x stuff)","msgtype":"m.text"},"ts":1370869147000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(for various values of x)","msgtype":"m.text"},"ts":1370869158000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We're planning to move to 1js, though, I hear","msgtype":"m.text"},"ts":1370869182000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JSON.stringify doesn't work on everything, though, obviously","msgtype":"m.text"},"ts":1370869531000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"in some cases IIRC you still need toSource(), but I think that's mostly for old Geckos","msgtype":"m.text"},"ts":1370869553000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Mm, we're implementing WAP","msgtype":"m.text"},"ts":1370877270000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But in good news, I guess my time machine works","msgtype":"m.text"},"ts":1370877582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Bug or it didn't happen","msgtype":"m.text"},"ts":1370877706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=853715","msgtype":"m.text"},"ts":1370877718000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Does the fact that Opera has already done it make it hurt less?","msgtype":"m.text"},"ts":1370880995000,"senderName":"sangwhan_","senderId":"sangwhan_@irc"},
{"content":{"body":"Opera did it first, eh","msgtype":"m.text"},"ts":1370881020000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Wait till you have to implement OMA DRM","msgtype":"m.text"},"ts":1370881057000,"senderName":"sangwhan_","senderId":"sangwhan_@irc"},
{"content":{"body":"I don't think I want to know what that is","msgtype":"m.text"},"ts":1370881160000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think I want to know what that is","msgtype":"m.text"},"ts":1370881167000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Looking at the commit, it's not _that_ bad :)","msgtype":"m.text"},"ts":1370881572000,"senderName":"sangwhan_","senderId":"sangwhan_@irc"},
{"content":{"body":"thanks Yitro - I used it in http://techcrunch.com/2013/06/09/how-apples-ios-fragmentation-problems-distort-design-thinking/","msgtype":"m.text"},"ts":1370882638000,"senderName":"KevinMarks","senderId":"KevinMarks@irc"},
{"content":{"body":"Hixie: ping","msgtype":"m.text"},"ts":1370885817000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"was that an Exclusions demo in Safari?","msgtype":"m.text"},"ts":1370887621000,"senderName":"KevinMarks","senderId":"KevinMarks@irc"},
{"content":{"body":"zcorpan: can you look at bz's comment in https://bugzilla.mozilla.org/show_bug.cgi?id=880997 please?","msgtype":"m.text"},"ts":1370889802000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw: pong","msgtype":"m.text"},"ts":1370891216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can you read my last comment on https://www.w3.org/Bugs/Public/show_bug.cgi?id=22185","msgtype":"m.text"},"ts":1370892514000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: looking...","msgtype":"m.text"},"ts":1370895113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: as far as i can tell, your last comment and my last coment are orthogonal","msgtype":"m.text"},"ts":1370895300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok. can we take them one at a time?","msgtype":"m.text"},"ts":1370895332000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Am I mis-reading the spec, or is it incorrect?","msgtype":"m.text"},"ts":1370895347000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"i don't think those are mutually exclusive :-)","msgtype":"m.text"},"ts":1370895434000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think there's any doubt in anyone's mind that the  jump to a code entry-point  algorithm shouldn't call the mutation observers","msgtype":"m.text"},"ts":1370895449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(at least, not unless it's the last script)","msgtype":"m.text"},"ts":1370895457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the question is, should it even both calling it if it's the last script, and do you really want to remove the call to mutation observes in the parser","msgtype":"m.text"},"ts":1370895476000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I offered a proposal of a simple way to make the current spec accurate. Did my proposal remove the call to mutation observers from the parser?","msgtype":"m.text"},"ts":1370895574000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"your proposal and your suggested changes were contradictory, so i wasn't sure what you intended, hence my follow-up questions","msgtype":"m.text"},"ts":1370895659000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i don't have an opinion about what exactly should happen)","msgtype":"m.text"},"ts":1370895715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Can you explain the contradiction?","msgtype":"m.text"},"ts":1370896093000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"There's a step in the text insertion mode that says to run a microtask checkpoint open reaching a </script>.","msgtype":"m.text"},"ts":1370896121000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"If my proposal changed that, it wasn't intentional.","msgtype":"m.text"},"ts":1370896149000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"hixie: ^^","msgtype":"m.text"},"ts":1370896160000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"comment 18, right?","msgtype":"m.text"},"ts":1370896163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you say \"should happen at two times\", but neither of the times you list is the parser, but then your suggested chnanges don't change the parser","msgtype":"m.text"},"ts":1370896218000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this isn't a criticism or anything, i was (and am) just trying to make sure i do what you actually intended","msgtype":"m.text"},"ts":1370896233000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1370896234000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"You are correc.t","msgtype":"m.text"},"ts":1370896239000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"It should be \"three times\".","msgtype":"m.text"},"ts":1370896245000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"I can go back and clarify that.","msgtype":"m.text"},"ts":1370896249000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"here's fine :-)","msgtype":"m.text"},"ts":1370896254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about the other thing? are we sure we want to fire mutation observers twice per task if the task fires two scripts synchronously, rather than just once at the end of the task?","msgtype":"m.text"},"ts":1370896279000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This was debated at length when we designed mutation observers.","msgtype":"m.text"},"ts":1370896304000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"It was intentional.","msgtype":"m.text"},"ts":1370896316000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(as opposed to the example in comment 21, which is about firing them twice within a script (as per the spec now, which is bogus, we all agree) vs once at the end of a script)","msgtype":"m.text"},"ts":1370896319000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Take the case of a click. If there are multiple handlers, and mutation observers registered, then the observers should go after *each* event handler, so that the next event handler sees a \"stable\" state of the world.","msgtype":"m.text"},"ts":1370896371000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Is this the case you are referring to?","msgtype":"m.text"},"ts":1370896412000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"yeah, that's a good example of it","msgtype":"m.text"},"ts":1370896442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw, what's the change in your proposal regarding \"global script clean-up jobs\" to do with?","msgtype":"m.text"},"ts":1370896492000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I suppose you can look at that as orthogonal.","msgtype":"m.text"},"ts":1370896539000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1370896552000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It looked to me like that was added out of a misunderstanding of how microtask checkpoints should work.","msgtype":"m.text"},"ts":1370896556000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"global script clean-up jobs are unrelated to microtask checkpoints, iirc","msgtype":"m.text"},"ts":1370896570000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Mutation Observers *is* a script clean-up job.","msgtype":"m.text"},"ts":1370896611000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"My point is that there are now two mechanims doing exactly the same thing.","msgtype":"m.text"},"ts":1370896625000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"You can make them be seperate, but it seems silly to me.","msgtype":"m.text"},"ts":1370896651000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"you mean, they are in principle, or they are in concrete?","msgtype":"m.text"},"ts":1370896654000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Principle.","msgtype":"m.text"},"ts":1370896665000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"And there are going to be more.","msgtype":"m.text"},"ts":1370896670000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"ECMAScript Object.observe callbacks, Promises, etc...","msgtype":"m.text"},"ts":1370896684000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"the global script clean-up jobs only run at the end of a script (every script, though whether that means nested ones or not is not clear yet)","msgtype":"m.text"},"ts":1370896708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was hoping that we could end up with one \"period to run stuff that needs to put the world back in order\" thingie.","msgtype":"m.text"},"ts":1370896713000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"they don't run e.g. before scripts run in the parser","msgtype":"m.text"},"ts":1370896715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or after non-script tasks","msgtype":"m.text"},"ts":1370896726000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(like parsing)","msgtype":"m.text"},"ts":1370896738000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is their any client for end-of-script cleanup jobs other than FileURLs?","msgtype":"m.text"},"ts":1370896797000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"not as far as i know of, currently","msgtype":"m.text"},"ts":1370896834000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one key thing is that end-of-script cleanup jobs cannot run scripts of their own","msgtype":"m.text"},"ts":1370896848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since their ordering isn't defined","msgtype":"m.text"},"ts":1370896852000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I'm confused by your message of \"leave FileURL out of this\" vs \"How does script-clean-up fit into all of this\"","msgtype":"m.text"},"ts":1370896885000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"\"this\" in the first of those is the bug, \"this\" in the second is your specific proposal","msgtype":"m.text"},"ts":1370896928000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I see. Well the I propose we simply remove the script clean up language.","msgtype":"m.text"},"ts":1370896965000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Actually, I retract everything I said about script-clean-up.","msgtype":"m.text"},"ts":1370897026000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"k :-)","msgtype":"m.text"},"ts":1370897041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If it only has one client and the requirements aren't clean, then I guess I don't really care about it.","msgtype":"m.text"},"ts":1370897047000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(Although it seems odd to me to have language about it in that case)","msgtype":"m.text"},"ts":1370897061000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"the requirements are clean, they're just different than microtassks","msgtype":"m.text"},"ts":1370897076000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok, how about if I (on the bug):","msgtype":"m.text"},"ts":1370897076000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"1) Clarify that microtask checkpoint should be run at three times","msgtype":"m.text"},"ts":1370897106000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"2) Clarify my proposal to ignore the script clean-up.","msgtype":"m.text"},"ts":1370897123000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"don't worry about it, i've already edited the spec as you were suggesting","msgtype":"m.text"},"ts":1370897175000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm committing the change now","msgtype":"m.text"},"ts":1370897179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok. Thank you.","msgtype":"m.text"},"ts":1370897234000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1370897241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(unfortunately for my credibility, the change also includes some unrelated editorial fixes to the script clean-up job stuff. but we'll ignore that.)","msgtype":"m.text"},"ts":1370897248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least this is an easy one. the thing about the parser's namespace-sensitivity is distressingly less so.","msgtype":"m.text"},"ts":1370897306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Good topic.","msgtype":"m.text"},"ts":1370897352000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"So WebKit/blink already implemented what adam proposed.","msgtype":"m.text"},"ts":1370897376000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Aside from the conflict about what the author most likely meant,","msgtype":"m.text"},"ts":1370897400000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"One main motivation is that ambiguity like that in the parser as a source of crashers that the security folks found.","msgtype":"m.text"},"ts":1370897444000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"there's cases where i don't even understand what we can do. e.g. \"If the stack of open elements has a p element in button scope, then act as if an end tag with the tag name \"p\" had been seen.\" - what if there's a, <svg:p> on the stack, won't that close that instead?","msgtype":"m.text"},"ts":1370897450000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/as/was","msgtype":"m.text"},"ts":1370897450000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"i don't understand why it caused crashes","msgtype":"m.text"},"ts":1370897461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec wasn't ambiguous, it was (is) just weird in certain cases, as far as i can tell","msgtype":"m.text"},"ts":1370897477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The main problem is a conceptual one inside the implementation of the parser.","msgtype":"m.text"},"ts":1370897525000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"As I mentioned in the bug, when a token is encountered, it's namespace goes from abstract to concrete.","msgtype":"m.text"},"ts":1370897554000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"The parser code is written with the assumption that end tags match start tags of the same namespace.","msgtype":"m.text"},"ts":1370897632000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"ah, that's definitely not a good assumption","msgtype":"m.text"},"ts":1370897649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You are suggesting that they should be tolerant of this, but it's just not how the code was written.","msgtype":"m.text"},"ts":1370897658000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"in particular, end tags don't have a namespace","msgtype":"m.text"},"ts":1370897659000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tags in general don't have a namespace, in fact","msgtype":"m.text"},"ts":1370897671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think that matters.","msgtype":"m.text"},"ts":1370897904000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"It just is the case that we fixed a bunch of crashers related to invalid assumptions in the parser code which generally takes the view I'm describing.","msgtype":"m.text"},"ts":1370897938000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"And based on my discussions with Mozilla re:<template> parsing, I suspect their code is similarly structured.","msgtype":"m.text"},"ts":1370897968000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"My point is that even if I agreed with your view that <foreignObject></div> should match an <svg:div>, I'd have a hard time landing that patch.","msgtype":"m.text"},"ts":1370898024000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"i don't understand how you assign a namespace to a tag","msgtype":"m.text"},"ts":1370898252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GPHemsley: (btw, if you could avoid cc'ing other lists that'd be great, because it causes all kinds of confusing thread fragmentation. e.g. i can't make heads or tails of your subthread that got cc'ed to apps-discuss.)","msgtype":"m.text"},"ts":1370900296000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GPHemsley: (though that could just be because the other guy only replied to you each time?)","msgtype":"m.text"},"ts":1370900324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam|away: any feedback on https://www.w3.org/Bugs/Public/show_bug.cgi?id=22102 ?","msgtype":"m.text"},"ts":1370900610000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: this might be easier to discuss if the spec were fixed in the places where it _doesn't_ use a namespace for comparison. that is, where it says \"... with the same tag name as that of the token\" instead of \"... has a td element in whatever scope\"","msgtype":"m.text"},"ts":1370902645000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"it's not just that the spec was \"weird\", it was (as I think you said) \"inaccurate\"","msgtype":"m.text"},"ts":1370902668000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Hixie: those passages where the spec sees, e.g., a </tr> and then says to go look for a \"tr element\" are those places where a namespace is being \"assigned\", conceptually, to a tag (in the WebKit and Blink implementations anyway)","msgtype":"m.text"},"ts":1370902869000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"hm, interesting","msgtype":"m.text"},"ts":1370902944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not sure that's the right fix for that though","msgtype":"m.text"},"ts":1370902976000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with the foreign content stuff, i think we maybe need to stop acting as if we saw a tag","msgtype":"m.text"},"ts":1370902998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and just do what we think acting that way should do","msgtype":"m.text"},"ts":1370903006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so e.g. instead of \"if a <th> element is in scope, act as if you saw a </th> tag token\", we should just close the <th> (popping the stack, etc) directly","msgtype":"m.text"},"ts":1370903043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think that would allay a lot of my concerns; that'd be a new concept though, wouldn't it?","msgtype":"m.text"},"ts":1370903714000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"we do it in some places, i think","msgtype":"m.text"},"ts":1370904138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it would involve some normative changes, yes","msgtype":"m.text"},"ts":1370904161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think it'd probably make it easier to understand","msgtype":"m.text"},"ts":1370904166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which would be a win","msgtype":"m.text"},"ts":1370904178000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, that sort of change sounds good to me regardless of this whole conversation","msgtype":"m.text"},"ts":1370904218000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"just by being more direct","msgtype":"m.text"},"ts":1370904234000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"filed as https://www.w3.org/Bugs/Public/show_bug.cgi?id=22322","msgtype":"m.text"},"ts":1370904453000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'd like to discuss TextTrackCue API changes with you - want me to email WHATWG or what's your preference?","msgtype":"m.text"},"ts":1370905036000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Hixie: do you want me to elaborate on what you should say in the html spec for https://www.w3.org/Bugs/Public/show_bug.cgi?id=15588#c11 ?","msgtype":"m.text"},"ts":1370905057000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: Any CCing of other lists happened as a result of a reply-all. I'm not actually on any other lists.","msgtype":"m.text"},"ts":1370905225000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie: (So if you got multiple copies because you're on other lists, feel free to ignore anything not from the WHATWG list.)","msgtype":"m.text"},"ts":1370905325000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"nessy: i'm here now if you want to talk here","msgtype":"m.text"},"ts":1370906072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: i just need to use \"beginning of the document\" right?","msgtype":"m.text"},"ts":1370906124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well currently the html spec invokes \"scroll an element into view\" with \"top of the document\" which is bogus since that's not an element","msgtype":"m.text"},"ts":1370906160000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: if you have a specific wording you'd like the html spec to use, please do let me know in the bug. but i can probably work it out.","msgtype":"m.text"},"ts":1370906204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"FYI: http://tools.ietf.org/html/draft-ietf-appsawg-xml-mediatypes","msgtype":"m.text"},"ts":1370906208000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: ah","msgtype":"m.text"},"ts":1370906212000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GPHemsley: i don't get multiple copies (gmail dedupes and i filter all mail through gmail), but if there were e-mails sent to you and apps-discuss from people not on whatwg, they didn't make it to the whatwg list","msgtype":"m.text"},"ts":1370906245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GPHemsley: (but your replies would have)","msgtype":"m.text"},"ts":1370906250000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok. i'll comment in the bug while i have it paged in :-)","msgtype":"m.text"},"ts":1370906259000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: thanks :-)","msgtype":"m.text"},"ts":1370906267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: AFAIK, those threads were only me and Peter, and I thought he's on the WHATWG list. There was one time where he only replied to me, but I reintroduced the WHATWG list in my reply.","msgtype":"m.text"},"ts":1370906319000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1370906329000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's particularly about this bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21851","msgtype":"m.text"},"ts":1370906338000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"looking...","msgtype":"m.text"},"ts":1370906353000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm wondering if we should rename TextTrackCue to AbstractTextTrackCue, then inherit a TextTrackCue object from it that has .text in it","msgtype":"m.text"},"ts":1370906397000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Hixie: And it looks like my e-mails never even went through to apps-discuss because I'm not on that list.","msgtype":"m.text"},"ts":1370906401000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie: then WebVTTCue can inherit from that","msgtype":"m.text"},"ts":1370906417000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Hixie: (Nor is Peter, AFAICT.)","msgtype":"m.text"},"ts":1370906420000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie: then, TextTrackCue can have its constructor back, too","msgtype":"m.text"},"ts":1370906444000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: that's what i suggested in comment 2","msgtype":"m.text"},"ts":1370906448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: but it still makes no sense for TextTrackCue to have a constructor in this scenario","msgtype":"m.text"},"ts":1370906468000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: did you? … looking...","msgtype":"m.text"},"ts":1370906474000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"GPHemsley: good times","msgtype":"m.text"},"ts":1370906477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1370906485000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie: why would a constructor not make sense?","msgtype":"m.text"},"ts":1370906537000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: let's go back to first principles here for this API. stop me as soon as i say something you think is wrong.","msgtype":"m.text"},"ts":1370906568000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok","msgtype":"m.text"},"ts":1370906576000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Hixie: maybe i can provide a term \"scroll to the beginning of the document\" which would be less boilerplate for you","msgtype":"m.text"},"ts":1370906595000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nessy: first, each format (like WebVTT, TTML, DVD bitmap subtitles, etc) has an algorithm that defines how cues are rendered to the video frame","msgtype":"m.text"},"ts":1370906623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no, not all formats are rendered","msgtype":"m.text"},"ts":1370906647000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: so for example, WebVTT has the complicated algorithm for avoiding cue overlap. DVD bitmap subtitles just render an image over the video at an x,y coordinate. etc.","msgtype":"m.text"},"ts":1370906650000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: some of them are for metadata only and left to deal with by JS","msgtype":"m.text"},"ts":1370906666000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: there are subtitle/caption formats that are never rendered?","msgtype":"m.text"},"ts":1370906687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: like what?","msgtype":"m.text"},"ts":1370906690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: TextTrackCue also applies to @kind=metadata cues","msgtype":"m.text"},"ts":1370906722000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Hixie: that could be JSON or anything else","msgtype":"m.text"},"ts":1370906739000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"chapters as well","msgtype":"m.text"},"ts":1370906764000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"that's orthogonal","msgtype":"m.text"},"ts":1370906778000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: they would not be exposed in a TextTrackCue ???","msgtype":"m.text"},"ts":1370906790000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"let's start over","msgtype":"m.text"},"ts":1370906806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there are subtitle formats. these are formats for files that contain text cues. these formats can be separate files, or embedded in media resources. correct so far?","msgtype":"m.text"},"ts":1370906839000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is not sure what I'm missing...","msgtype":"m.emote"},"ts":1370906842000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"well, WebVTT and TTML are not just subtitle formats, but more generic","msgtype":"m.text"},"ts":1370906867000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"why are you restricting it to subtitle formats?","msgtype":"m.text"},"ts":1370906882000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"s/subtitle formats/text track formats/","msgtype":"m.text"},"ts":1370906883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah ok, agreed","msgtype":"m.text"},"ts":1370906895000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ok. each of these formats come with a set of rendering rules. these rules might not apply to any particular cue at any particular time, but each format nonetheless has a set of rules. correct so far?","msgtype":"m.text"},"ts":1370906925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: yeah, that'd be awesome","msgtype":"m.text"},"ts":1370906949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, there are only rendering rules for certain types of these files","msgtype":"m.text"},"ts":1370906952000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"for example only when they contain captions or subtitles","msgtype":"m.text"},"ts":1370906961000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"when they contain descriptions or metadata, there is no rendering","msgtype":"m.text"},"ts":1370906975000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"they just get exposed to JS","msgtype":"m.text"},"ts":1370906984000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"(well, you could say that \"descriptions\" have rendering - but definitely not \"metadata\")","msgtype":"m.text"},"ts":1370907002000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ok i see the problem.","msgtype":"m.text"},"ts":1370907041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or put in a different way: WebVTT can contain cues that contain just JSON","msgtype":"m.text"},"ts":1370907044000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"you are confusing the format's properties, with the properties of a specific instance of a text track in the HTML API","msgtype":"m.text"},"ts":1370907066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that could be exposed in a TextTrackCue with .text","msgtype":"m.text"},"ts":1370907067000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"where? when I say \"WebVTT can contain cues that contain just JSON\" ?","msgtype":"m.text"},"ts":1370907101000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Hixie: are you saying that if the cues don't display they need to have a separate type?","msgtype":"m.text"},"ts":1370907152000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"there's no such thing as a \"metadata WebVTT file\" or a \"chapters TTML file\" or a \"descriptions DVD subtitle file\"","msgtype":"m.text"},"ts":1370907157000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's a WebVTT file, and if it's imported as a kind=subtitles file, it renders","msgtype":"m.text"},"ts":1370907176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if it's imported as a kind=metadata file, it doesn't","msgtype":"m.text"},"ts":1370907182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but either way, WebVTT has a set of rules that say how it would render, if it were to be rendered","msgtype":"m.text"},"ts":1370907193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, but it still needs to expose its content to HTML","msgtype":"m.text"},"ts":1370907199000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"s/HTML/JS/ (more correctely)","msgtype":"m.text"},"ts":1370907218000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ok so let's go back to what i saw saying earlier","msgtype":"m.text"},"ts":1370907258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"each format has a set of rules for how it is rendered","msgtype":"m.text"},"ts":1370907264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok :-)","msgtype":"m.text"},"ts":1370907270000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"at any one time, the cue may or may not be rendered, but the cue, if it were to be rendered, has a set of rules to follow","msgtype":"m.text"},"ts":1370907289000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"these rules come from what format the cue was parsed from","msgtype":"m.text"},"ts":1370907310000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so e.g. a cue from a webvtt file uses the webvtt rules","msgtype":"m.text"},"ts":1370907322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a cue from a ttml file uses the ttml rules","msgtype":"m.text"},"ts":1370907327000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a cue from a DVD bitmap subtitle track uses the DVD bitmap subtitle rules","msgtype":"m.text"},"ts":1370907340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1370907342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1370907349000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"each cue has an object in the DOM","msgtype":"m.text"},"ts":1370907369000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so a cue that is rendered from a WebVTT file is exposed as a WebVTTCue object","msgtype":"m.text"},"ts":1370907381000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"that object is also associated with some rendering tules, the same rendering rules as the cue, derived from the file from which it was parsed","msgtype":"m.text"},"ts":1370907402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but some cues aren't parsed, they're created from JS","msgtype":"m.text"},"ts":1370907410000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"those cues need to know what rules they should use if they were suddenly to be rendered","msgtype":"m.text"},"ts":1370907422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1370907432000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yup, following this far","msgtype":"m.text"},"ts":1370907437000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"so each set of rules that the browser supports being created from JS -- TTML, WebVTT, DVD bitmaps, whatever -- needs its own constructor","msgtype":"m.text"},"ts":1370907478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or factory method, or argument to a factory method, or some other mechanism, but contructor is how WebVTTCue does it)","msgtype":"m.text"},"ts":1370907498000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1370907528000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yup, I think we're all good with cues that get rendered - we have the rendering rules associated with the particular objects etc","msgtype":"m.text"},"ts":1370907532000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"_all_ cues can get rendered","msgtype":"m.text"},"ts":1370907545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they _all_ have rendering rules just in case they are rendered","msgtype":"m.text"},"ts":1370907556000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right …. how can that work for cues that are part of a kind=metadata track and are not rendered? can you run me through such cues all the way, too?","msgtype":"m.text"},"ts":1370907620000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I'm a JS developer and have created a track with kind=metadata","msgtype":"m.text"},"ts":1370907653000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"how do I add cues?","msgtype":"m.text"},"ts":1370907657000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"the kind is irrelevant","msgtype":"m.text"},"ts":1370907681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you add it the same way you would if it was kind=anythingelse","msgtype":"m.text"},"ts":1370907688000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I want to add cues that contain JSON and I don't have rendering rules for them, because they are not meant to be displayed, but used by JS only","msgtype":"m.text"},"ts":1370907721000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"there's no such thing as a cue that doesn't have rendering rules","msgtype":"m.text"},"ts":1370907741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's a webvtt cue, it has webvtt rules. if it's a ttml cue, it has ttml rules.","msgtype":"m.text"},"ts":1370907757000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assume my rendering rules are \"don't display anything\"","msgtype":"m.text"},"ts":1370907766000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"yeah, I don't think that works","msgtype":"m.text"},"ts":1370907783000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"you don't get to pick the rendering rules, the rendering rules are those of the formats the browser supports","msgtype":"m.text"},"ts":1370907794000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand what is difficult about this","msgtype":"m.text"},"ts":1370907800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's exactly the same as a WebVTT file imported with kind=metadata","msgtype":"m.text"},"ts":1370907812000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are you saying, even if I have WebVTT cues that contain JSON, they will be exposed as WebVTTCue objects?","msgtype":"m.text"},"ts":1370907896000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1370907915000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because at any time you could change the .kind of the TextTrack object to \"subtitles\" and then they'd render","msgtype":"m.text"},"ts":1370907937000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's _nothing special_ about metadata tracks","msgtype":"m.text"},"ts":1370907951000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are you further saying that, given I want to do everything in JS, I am forced to pick a cue format that provides rendering, even if I know that I will never ever want to render it (and in fact some of the content that I may have would be really really bad when rendered)?","msgtype":"m.text"},"ts":1370907951000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"well you're nor \"forced to pick a cue format that provides rendering\", you just pick the only format browsers support, WebVTT","msgtype":"m.text"},"ts":1370907974000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, can't we introduce a cue object that has rendering rules that simply say not to render anything?","msgtype":"m.text"},"ts":1370908086000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"what's the point?","msgtype":"m.text"},"ts":1370908123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"note that right now, you can really easily debug these cues by just setting kind=subtitles instead of kind=metadata","msgtype":"m.text"},"ts":1370908165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it makes for simpler objects","msgtype":"m.text"},"ts":1370908169000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"it makes for more interfaces, that's not simpler","msgtype":"m.text"},"ts":1370908183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: done","msgtype":"m.text"},"ts":1370908191000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1370908194000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: you just explained how every cue type has associated rendering rules. Therefore metadata and chapter cues should have rendering rules saying nothing is drawn. :P","msgtype":"m.text"},"ts":1370908211000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"zcorpan_: nn","msgtype":"m.text"},"ts":1370908232000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: thanks","msgtype":"m.text"},"ts":1370908234000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rillian: \"metadata\" and \"chapter\" are not \"cue types\"","msgtype":"m.text"},"ts":1370908254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rillian: that's the whole point","msgtype":"m.text"},"ts":1370908261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rillian: they're text track kinds which every \"cue type\" can be set to","msgtype":"m.text"},"ts":1370908276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hrm","msgtype":"m.text"},"ts":1370908310000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"ok, then maybe we can create an object that does only simple bottom middle of video plain text rendering","msgtype":"m.text"},"ts":1370908323000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"(I also don't understand why we're breaking the old api if no one's going to implement anything but webvtt)","msgtype":"m.text"},"ts":1370908334000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"nessy: TextTrackCue? :)","msgtype":"m.text"},"ts":1370908349000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"no overlap avoidance, no complicated rendering","msgtype":"m.text"},"ts":1370908351000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: why?","msgtype":"m.text"},"ts":1370908364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rillian: Microsoft are implementing (and already support) TTML","msgtype":"m.text"},"ts":1370908375000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"rillian: because apparently people _are_ implementing other formats, in some weird places","msgtype":"m.text"},"ts":1370908379000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rillian: in general i agree that that's bad, mind you","msgtype":"m.text"},"ts":1370908386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: i don't understand what problem you are trying to solve","msgtype":"m.text"},"ts":1370908405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so we can create cues in JS that don't bear the heavy weight of WebVTT cues","msgtype":"m.text"},"ts":1370908422000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: what \"heavy weight\"?","msgtype":"m.text"},"ts":1370908438000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: WebVTT is a really light-weight format","msgtype":"m.text"},"ts":1370908445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you added all those positioning attributes","msgtype":"m.text"},"ts":1370908456000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"i think it's crazy that we're seriously debating whether to create yet another subtitling format for the web, personally","msgtype":"m.text"},"ts":1370908513000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but putting that aside, the way one would do it is the same way we have WebVTT or TTML in the web platform: just create a new spec that defines the new format.","msgtype":"m.text"},"ts":1370908537000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not a file format - just a cue format","msgtype":"m.text"},"ts":1370908538000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"an object in HTML","msgtype":"m.text"},"ts":1370908548000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"file format without a serialisation, it's still a file format","msgtype":"m.text"},"ts":1370908551000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for these purposes","msgtype":"m.text"},"ts":1370908556000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and i bet you'd shortly be asked \"can we have a serialisation\")","msgtype":"m.text"},"ts":1370908573000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's why I suggested no rendering rules","msgtype":"m.text"},"ts":1370908576000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"no, serialisation is already possible in TTML or WebVTT or SRT or anything else that does times plain text for that matter","msgtype":"m.text"},"ts":1370908606000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"no need for a new file format","msgtype":"m.text"},"ts":1370908609000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"all of this is already possible in WebVTT","msgtype":"m.text"},"ts":1370908618000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this literally adds nothing new","msgtype":"m.text"},"ts":1370908624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand the \"heavy weight WebVTT cues\" argument (you're already paying the cost of implementing WebVTT; are you suggesting WebVTT cues use a lot of memory or something?)","msgtype":"m.text"},"ts":1370908649000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"nessy: looking at it from the other side, what do the webvtt cue settings mean on a metadata track where the cue text is json?","msgtype":"m.text"},"ts":1370908655000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"what does \"heavy weight\" mean in this context?","msgtype":"m.text"},"ts":1370908660000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"instantiating a WebVTTCue object creates interfaces (vertical, snapToLines, line, position, size, align, text, getCueAsHTML() ) that are irrelevant for cues that are not rendered","msgtype":"m.text"},"ts":1370908725000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1370908732000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(putting aside whether they can be optimized out or whatever--who cares?)","msgtype":"m.text"},"ts":1370908750000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"man, you should see the HTMLElement interface if you think WebVTTCue is \"heavy\"","msgtype":"m.text"},"ts":1370908751000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1370908797000,"senderName":"Hixie","senderId":"Hixie@irc"}
]