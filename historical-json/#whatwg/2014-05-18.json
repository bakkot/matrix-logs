[
{"content":{"body":"seems to work for my use case (for anyone reading the log later on):","msgtype":"m.text"},"ts":1400371750000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"import unicodedata def remove_control_characters(html):     html = re.sub(ur\"&#(\\d+);\", ur\"\\x\\1\", html)     return \"\".join(ch for ch in html if unicodedata.category(ch)[0] != \"C\")","msgtype":"m.text"},"ts":1400371751000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"wait, that works?","msgtype":"m.text"},"ts":1400371803000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, wait, that's the raw string \\x\\1","msgtype":"m.text"},"ts":1400371821000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well, I could also be making a fool of myself, and messing up all the entities","msgtype":"m.text"},"ts":1400371881000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"I'm trying to remember what this does off-hand :)","msgtype":"m.text"},"ts":1400371897000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"let me actually make sure this works... ;)","msgtype":"m.text"},"ts":1400371919000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"import unicodedata def remove_control_characters(html):     html = re.sub(ur\"&#(\\d+);\", lambda c: unichr(int(c.group(1))), html)     return \"\".join(ch for ch in html if unicodedata.category(ch)[0] != \"C\")","msgtype":"m.text"},"ts":1400372256000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"that actually works, only for hex coded entities","msgtype":"m.text"},"ts":1400372271000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"That doesn't cause errors?","msgtype":"m.text"},"ts":1400372293000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Huh","msgtype":"m.text"},"ts":1400372294000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it seems to work with realworld html at least","msgtype":"m.text"},"ts":1400372354000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"As long as nobody uses &#x3;","msgtype":"m.text"},"ts":1400372570000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: you live!","msgtype":"m.text"},"ts":1400372579000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: thx, added: html = re.sub(ur\"&#x(\\d+);\", lambda c: unichr(int(c.group(1), 16)), html)","msgtype":"m.text"},"ts":1400372684000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Huvet: Might want &#x([0-9a-fA-F]+);","msgtype":"m.text"},"ts":1400372728000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or &#[xX]([0-9a-fA-F]+);","msgtype":"m.text"},"ts":1400372747000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what, you mean hex character can go to 16!? ;)","msgtype":"m.text"},"ts":1400372781000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Depending on how accurate you want to be, you might have to write an entire HTML parser in a regex","msgtype":"m.text"},"ts":1400372786000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah, I've read on stackoverflow that that is a great idea","msgtype":"m.text"},"ts":1400372806000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"You need to handle <script>, <textarea>, and a couple of others too.","msgtype":"m.text"},"ts":1400372814000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1400372815000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"this is just an ugly hack, until you fix it the non-hacky way","msgtype":"m.text"},"ts":1400372872000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"135 domains, so quite controlled environment","msgtype":"m.text"},"ts":1400372894000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"JonathanNeal: <object> is like <iframe> for SVG","msgtype":"m.text"},"ts":1400409172000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"JonathanNeal: you get a browsing context and such","msgtype":"m.text"},"ts":1400409186000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"JakeA: I expanded the list of request contexts somewhat: http://fetch.spec.whatwg.org/#concept-request-context","msgtype":"m.text"},"ts":1400429231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: at some point I should probably start maintaining the IDL enum","msgtype":"m.text"},"ts":1400429242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looks good. Where is the context set, thought the various specs when they call fetch?","msgtype":"m.text"},"ts":1400429705000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that's the idea","msgtype":"m.text"},"ts":1400429717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: specs migrating to Fetch is going to happen at some point","msgtype":"m.text"},"ts":1400429737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: when you implemented navigator.languages, did you ensure it returns a JavaScript Array object?","msgtype":"m.text"},"ts":1400430996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: the specification wants to return an IDL array, which seems broken","msgtype":"m.text"},"ts":1400431008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: https://gist.github.com/annevk/6bfa782752dde6acb379","msgtype":"m.text"},"ts":1400431196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed completely, but how to convince tc39?","msgtype":"m.text"},"ts":1400431307000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"i couldn’t even get es-discuss excited","msgtype":"m.text"},"ts":1400431314000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: I think to some extent it depends on putting it on the agenda and preparing a detailed proposal","msgtype":"m.text"},"ts":1400431345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: and then unfortunately getting someone to put it in their face when they have a meeting","msgtype":"m.text"},"ts":1400431364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you stopped attending?","msgtype":"m.text"},"ts":1400431377000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: hopefully that last step evolves to a more open process","msgtype":"m.text"},"ts":1400431379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: I attended twice to get to know everyone and tell them the platform guys mean no harm and we want better IDL and what not just as much as the next guy","msgtype":"m.text"},"ts":1400431419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So why would you ever want to put something into ES?","msgtype":"m.text"},"ts":1400431446000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mathiasbynens: I don't think there's much value in me attending more for now, maybe once we come to another impasse","msgtype":"m.text"},"ts":1400431452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: cause then it’s not just available in browsers","msgtype":"m.text"},"ts":1400431462000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"javascript is pretty irreelvant outside of browsers","msgtype":"m.text"},"ts":1400431480000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"irrelevant, even","msgtype":"m.text"},"ts":1400431511000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't see why that'd necessarily require having TC39 mess with it either","msgtype":"m.text"},"ts":1400431512000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: a) gets considered as part of the design of new objects (important for structured cloning) and maybe even get syntax support (might be interesting for workers some day) and b) someone else gets to maintain it and fix the bugs","msgtype":"m.text"},"ts":1400431536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a) seems somewhat more important, but b) is very nice too","msgtype":"m.text"},"ts":1400431568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: you’re funny :)","msgtype":"m.text"},"ts":1400431591000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens, you're unhelpful","msgtype":"m.text"},"ts":1400431608000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh, zewt wasn’t kidding?","msgtype":"m.text"},"ts":1400431626000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"So it's really just because TC39 ignores the rest of the platform, unless you put it in their spec?","msgtype":"m.text"},"ts":1400431655000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not just that, it would also mean that non-browser ES engines can stop making up their own stdlibs that do similar things than what’s already in browsers","msgtype":"m.text"},"ts":1400431741000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"They already can","msgtype":"m.text"},"ts":1400431802000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok then i guess the point is that not just tc39 ignores the rest of the platform","msgtype":"m.text"},"ts":1400431841000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Ms2ger: I don't think they ignore the rest of the platform; they didn't invent new byte types","msgtype":"m.text"},"ts":1400431863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: they did refactor them and make them work nicely with arrays and now build new things on top (value objects)","msgtype":"m.text"},"ts":1400431892000,"senderName":"annevk","senderId":"annevk@irc"}
]