[
{"content":{"body":"It's a little unclear to me whether https://github.com/whatwg/html/pull/1492 needs further review","msgtype":"m.text"},"ts":1467700037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess/hope Domenic is asleep already","msgtype":"m.text"},"ts":1467700049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: seems like you probably want to wait til Domenic is around","msgtype":"m.text"},"ts":1467701473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie, inform zcorpan rather than adding space around text only from the elements listed in https://github.com/validator/validator/issues/315#user-content-space-before-after why don’t I instead just always put space around it from any element regardless (with the exceptions for script, style, math, svg, template","msgtype":"m.text"},"ts":1467701951000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1467701951000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"zcorpan, at 2016-07-05 06:59 UTC, MikeSmith said: rather than adding space around text only from the elements listed in https://github.com/validator/validator/issues/315#user-content-space-before-after why don’t I instead just always put space around it from any element regardless (with the exceptions for","msgtype":"m.text"},"ts":1467702996000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"script, style, math, svg, template","msgtype":"m.text"},"ts":1467702996000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"MikeSmith: i figured sometimes the inlines are used without intending to break up words (like <a>, <wbr>, <em>...)","msgtype":"m.text"},"ts":1467703238000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ah true","msgtype":"m.text"},"ts":1467703269000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: looking at httparchive it seems to be a mixed bag of expectations; sometimes separate words appear across a tag boundary and sometimes a single word spans the tag boundary","msgtype":"m.text"},"ts":1467704649000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"probably more common with separate words","msgtype":"m.text"},"ts":1467704750000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1467705067000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: why does the \"encode\" spec concept start by asserting the _encoding_ isn't replacement, UTF-16BE or UTF-16LE instead of starting by setting _encoding_ to its _output encoding_?","msgtype":"m.text"},"ts":1467713265000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: probably because you need to do that ahead of time","msgtype":"m.text"},"ts":1467713622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: otherwise metadata elsewhere would get faulty","msgtype":"m.text"},"ts":1467713644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: good point. thanks.","msgtype":"m.text"},"ts":1467713654000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"encoding-rs now has \"decode\" and \"decode_with_replacement\" and similarly \"encode\" and \"encode_with_replacement\"","msgtype":"m.text"},"ts":1467713722000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if I should have \"decode_without_replacement\" and \"decode\" and \"encode_without_replacement\" and \"encode\" instead...","msgtype":"m.text"},"ts":1467713751000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"BOM handling works the other way round","msgtype":"m.text"},"ts":1467713854000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the short name gives you bom sniffirng and there are longer names to opt out","msgtype":"m.text"},"ts":1467713875000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. I suppose I should make the ones that can fail *_without_replacement and drop _with_replacement from the names","msgtype":"m.text"},"ts":1467714135000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annoying","msgtype":"m.text"},"ts":1467714139000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that'll affect a lot of code","msgtype":"m.text"},"ts":1467714149000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"But that's the logical conclusion if I want to make the short obvious names both obvious spec-wise and want to make the short names to steer the user to do what's most likely the right thing","msgtype":"m.text"},"ts":1467714221000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*sigh*","msgtype":"m.text"},"ts":1467714255000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"alwu: did you want to take a stab at fixing cue identifier in the spec, or should i?","msgtype":"m.text"},"ts":1467719169000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: re https://github.com/whatwg/html/pull/1500 what kinds of navigations are being excluded with the new text?","msgtype":"m.text"},"ts":1467720698000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: setting <object>.data to \"sameurl#test\"","msgtype":"m.text"},"ts":1467720747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: like this?  http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4300","msgtype":"m.text"},"ts":1467721624000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: is there a header for <link rel=\"preload\">?","msgtype":"m.text"},"ts":1467721681000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: or maybe thats just http2 push","msgtype":"m.text"},"ts":1467721695000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zcorpan: yeah, though I'm not sure what's going on there","msgtype":"m.text"},"ts":1467721706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: me either :-)","msgtype":"m.text"},"ts":1467721720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: the main thing with <object>.data and also embed is that they first fetch, and then navigate to the response of that fetch","msgtype":"m.text"},"ts":1467721747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: rather than navigating a request","msgtype":"m.text"},"ts":1467721754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it might be implemented, but preload is a bit different from http2 push. see https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/","msgtype":"m.text"},"ts":1467721820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I was asking specifically in the context of https://github.com/slightlyoff/ServiceWorker/issues/920","msgtype":"m.text"},"ts":1467721931000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hey there!","msgtype":"m.text"},"ts":1467727277000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"may I ask a little thing about URL standard design?","msgtype":"m.text"},"ts":1467727480000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"Alv-c: sure","msgtype":"m.text"},"ts":1467727523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm actually working on a C++ URL parser following the whatwg URL standards, and I noticed that url `query` is not `UTF-8 percent encode`d. But if I create a new URL instance in javascript it does. Is it related to `x-www-form-urlencoded`? Should I encode url `query` in my implementation","msgtype":"m.text"},"ts":1467727854000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"Sorry if it's inappropiate to ask questions here :P. This is my first time using irc","msgtype":"m.text"},"ts":1467727901000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"Alv-c: per https://url.spec.whatwg.org/#query-state the default is certainly UTF-8","msgtype":"m.text"},"ts":1467727987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Alv-c: but the encoding can also be coming from the document for certain APIs defined in HTML, such as <a>","msgtype":"m.text"},"ts":1467728017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Alv-c: since that's legacy it's a feature exposed through the URL API","msgtype":"m.text"},"ts":1467728041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Alv-c: it's *not* a feature exposed through the URL API, doh","msgtype":"m.text"},"ts":1467728058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(And IRC is a fine place to ask questions.)","msgtype":"m.text"},"ts":1467728121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: FYI https://github.com/validator/validator/commit/5ff6fe8331fff08bdb98301a360543e5149fdb43","msgtype":"m.text"},"ts":1467728130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: will only emit a warning if it ia 90% confident it found the right match","msgtype":"m.text"},"ts":1467728185000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh! I see. Thank you annevk","msgtype":"m.text"},"ts":1467728348000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"I hope it's not too bad to only support UTF-8 d:","msgtype":"m.text"},"ts":1467728475000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"Alv-c: really depends on your goals, probably mostly fine","msgtype":"m.text"},"ts":1467728518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm ashamed now, btw, because the reason why my implementation wasn't percent-encoding query parameters was because I misunderstood \"If byte is less than 0x21, greater than 0x7E, or (...)\" with \"if byte is less than 0x21 AND greater than 0x7E\". Like saying \"if is less than 2 and greater than 10\". Thanks god I didn't push to github yet","msgtype":"m.text"},"ts":1467728711000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"Again, thank you annevk.","msgtype":"m.text"},"ts":1467728719000,"senderName":"Alv-c","senderId":"Alv-c@irc"},
{"content":{"body":"MikeSmith: nice","msgtype":"m.text"},"ts":1467729349000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: it seems xml:lang in the code is xml:lang in no namespace. it should be lang in the XML namespace instead","msgtype":"m.text"},"ts":1467729682000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: https://github.com/validator/validator/blob/5ff6fe8331fff08bdb98301a360543e5149fdb43/src/nu/validator/servlet/LanguageDetectingXMLReaderWrapper.java#L157 - similarly this should also check if namespace is \"\"","msgtype":"m.text"},"ts":1467729856000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: actually there is another part of the validator code that seems to always put that lang into the http://www.w3.org/XML/1998/namespace namespace","msgtype":"m.text"},"ts":1467730115000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that caused me a lot of confusion when I was writing and testing that code","msgtype":"m.text"},"ts":1467730146000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah, yeah, i remember something about that","msgtype":"m.text"},"ts":1467730148000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah the current logic there matches what the rest of the validator backend actually exposes to that code at that point","msgtype":"m.text"},"ts":1467730250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: yeah, see example 2 at http://w3c.github.io/preload/#h-introduction","msgtype":"m.text"},"ts":1467731816000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, cool... seems PlzNavigate could boost the preload priority for things it sees during its own \"preflight\"","msgtype":"m.text"},"ts":1467731865000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"correct answer posted for https://twitter.com/zcorpan/status/749976380247605248","msgtype":"m.text"},"ts":1467731894000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: makes sense. Still trying to fit all the use-cases in my head","msgtype":"m.text"},"ts":1467731963000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But still not convinced on Alex's proposal. Seems to narrow and hacky.","msgtype":"m.text"},"ts":1467731976000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but it seems like maybe some of this is doable as H2 push? although I guess this POST might not end up in http cache?","msgtype":"m.text"},"ts":1467732001000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: there is something to be said for a narrow API change now that allows us to do a general purpose API change later when we have more data","msgtype":"m.text"},"ts":1467732025000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: how H2 push interacts with the cache are grossly underspeced as far as I know","msgtype":"m.text"},"ts":1467732099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"H2 push doesn't put SW in control of networking","msgtype":"m.text"},"ts":1467740415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why not? if its in the http cache you can access it via fetch(sameOriginURL, { cache: 'only-in-cache' }), no?","msgtype":"m.text"},"ts":1467741446000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it means a connection was established somehow without SW being in control","msgtype":"m.text"},"ts":1467742570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't that exactly what is being requested in this use case...","msgtype":"m.text"},"ts":1467743130000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yes, and without opt-in it's bad","msgtype":"m.text"},"ts":1467743462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: how does GetV(O, P) ever return with an abrupt completion in PromiseInvokeOrNoop() step 3?","msgtype":"m.text"},"ts":1467746911000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: FWIW, he might be away today, apparently a Google US holiday","msgtype":"m.text"},"ts":1467747130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks... I'll write an issue","msgtype":"m.text"},"ts":1467747164000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess if the O is null or undefined","msgtype":"m.text"},"ts":1467747312000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: PromiseInvokeOrNoop({ get foo() { throw new Error(\"boo\"); } }, \"foo\")?","msgtype":"m.text"},"ts":1467747344000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah, a throwing getter","msgtype":"m.text"},"ts":1467747360000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1467747361000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: why does ValidateAndNormalizeHighWaterMark() throw a TypeError for NaN?  seems like elsewhere we use RangeError for this","msgtype":"m.text"},"ts":1467747568000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: for NaN in particular? hmm.","msgtype":"m.text"},"ts":1467747582000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: step 2 here https://streams.spec.whatwg.org/#validate-and-normalize-high-water-mark","msgtype":"m.text"},"ts":1467747594000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1467747599000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It does seem like it would be cleaner to just use IsFiniteNonNegativeNumber everywhere and throw RangeErrors if not","msgtype":"m.text"},"ts":1467747626000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: seems like it should just use IsFiniteNonNegativeNumber() to me","msgtype":"m.text"},"ts":1467747627000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1467747632000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"File an issue?","msgtype":"m.text"},"ts":1467747654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: added a comment here: https://github.com/whatwg/streams/issues/475#issuecomment-230581097","msgtype":"m.text"},"ts":1467747699000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: finally made finished my first pass through the js for the refactored ReadableStream spec!","msgtype":"m.text"},"ts":1467747974000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"now to make it actually work","msgtype":"m.text"},"ts":1467747977000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/!!","msgtype":"m.text"},"ts":1467747982000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: have you guys done any work to figure out how streams should work across compartments?  like `new frame.contentWindow.ReadableStream({ start: frame2.contentWindow.streamStart })","msgtype":"m.text"},"ts":1467748174000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"added points for one or the other globals being privileged","msgtype":"m.text"},"ts":1467748200000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nothing special. I think it just falls out of JS semantics? :-/","msgtype":"m.text"},"ts":1467748216000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe its a spidermonkey issue... but I will probably have to write tests to exercise all these combinations","msgtype":"m.text"},"ts":1467748255000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"since we might need special unwrapping to see object types","msgtype":"m.text"},"ts":1467748280000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, dead pixel :-(","msgtype":"m.text"},"ts":1467752337000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rip","msgtype":"m.text"},"ts":1467752842000,"senderName":"miketaylr","senderId":"miketaylr@irc"}
]