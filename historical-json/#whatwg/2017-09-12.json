[
{"content":{"body":"When WHATWG recommends URL over URI, does that mean the specification is just for URLs, and they don't pay attention to URIs, or does it mean that they prefer everything is called URLs.","msgtype":"m.text"},"ts":1505179499000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1505179841000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"what is the difference between URL and URI to you?","msgtype":"m.text"},"ts":1505179853000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: to me?","msgtype":"m.text"},"ts":1505182742000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"tantek: whatever you tell me :P","msgtype":"m.text"},"ts":1505182754000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"tantek: I do understand the difference, but I'm curious what's the official position of WHATWG","msgtype":"m.text"},"ts":1505182774000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"cantom: everything should be called URLs","msgtype":"m.text"},"ts":1505183012000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"cantom: \"Standardize on the term URL. URI and IRI are just confusing. In practice a single algorithm is used for both so keeping them distinct is not helping anyone. URL also easily wins the search result popularity contest.\"","msgtype":"m.text"},"ts":1505183025000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"https://url.spec.whatwg.org/#goals","msgtype":"m.text"},"ts":1505183045000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: Thanks, thing is I quoted this exact sentence to someone and they're adamant that this means \"because browsers mostly need URLs they focus on URLs, and use the same parser for URLs and URIs, doesn't mean they call all URIs URLs\"","msgtype":"m.text"},"ts":1505183263000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"cantom: uh well, that's exactly what it says \"Standardize on the term URL\"","msgtype":"m.text"},"ts":1505183321000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: another thing \"this is just how WHATWG deals with it internally, it doesn't mean they want anyone else not calling it URIs\"","msgtype":"m.text"},"ts":1505183336000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"TimothyGu: I know but... Sigh.","msgtype":"m.text"},"ts":1505183381000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"TimothyGu: thanks.","msgtype":"m.text"},"ts":1505183385000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"this is written in a STANDARD, not a W3C working group note or TAG guide. those latter things are \"internal\", but standards are public standards","msgtype":"m.text"},"ts":1505183406000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"well, WG-NOTE isn't really internal","msgtype":"m.text"},"ts":1505183419000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: BTW what this guy says aside, it's interesting to me that it says \"this standard obsoletes the IETF RFCs\"","msgtype":"m.text"},"ts":1505183464000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"TimothyGu: it's curious to me how one organization obsoletes the standards of another ;-)","msgtype":"m.text"},"ts":1505183478000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"TML, I asked Timothy Gu and Tantek Çelik, and they said this is a published standard that intends to obsolete the IETF RFCs that call it URIs, and so they want everyone to use the URLs term for all link schemes.","msgtype":"m.text"},"ts":1505183620000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"Oops","msgtype":"m.text"},"ts":1505183635000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"Wrong place.","msgtype":"m.text"},"ts":1505183638000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"cantom: btw I don't really consider the RFCs *fully* obsoleted, just their normative requirements","msgtype":"m.text"},"ts":1505184414000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: all right :) thanks","msgtype":"m.text"},"ts":1505184452000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"they still have some information that's helpful, like explanations of each fields of a URL","msgtype":"m.text"},"ts":1505184470000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: last question, is there a good test suite for URL parsing WHATWG provides (or someone)?","msgtype":"m.text"},"ts":1505184481000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1505184486000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/tree/master/url","msgtype":"m.text"},"ts":1505184496000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Thanks!!","msgtype":"m.text"},"ts":1505184500000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"if you are only intersted in parsing: https://github.com/w3c/web-platform-tests/blob/master/url/urltestdata.json","msgtype":"m.text"},"ts":1505184515000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"(the others test URL() APIs too","msgtype":"m.text"},"ts":1505184541000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Beautiful, I'm so happy I asked, I was about to write this myself hehe (poorly)","msgtype":"m.text"},"ts":1505184633000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"cantom: oh, in case you are implementing the parsing algorithm, there's an unofficial JS reference implementation at https://github.com/jsdom/whatwg-url","msgtype":"m.text"},"ts":1505185015000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"and Node.js' implementation is kept up-to-date too, though it's written in C++: https://github.com/nodejs/node/blob/master/src/node_url.cc","msgtype":"m.text"},"ts":1505185067000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"(grep for url::parse)","msgtype":"m.text"},"ts":1505185076000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1505185080000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"URL::Parse()","msgtype":"m.text"},"ts":1505185084000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"zcorpan: as a sidenote I'd prefer unlessViewed to notIfViewed","msgtype":"m.text"},"ts":1505210344000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: thx","msgtype":"m.text"},"ts":1505212595000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.khronos.org/registry/webgl/specs/latest/2.0 is the very latest, right?","msgtype":"m.text"},"ts":1505215831000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: well maybe something newer in the GitHub repo","msgtype":"m.text"},"ts":1505215877000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ugh, apparently so","msgtype":"m.text"},"ts":1505216280000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but idk if that actually reflects consensus in any real sense","msgtype":"m.text"},"ts":1505216311000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, does anything?","msgtype":"m.text"},"ts":1505216409000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do we have a statement anywhere about how the web is supposed to be portable? E.g. how we don't generally expose hardware/OS capabilities directly and require feature testing to figure out what works, but instead we build a slightly higher-abstraction API that covers general situations","msgtype":"m.text"},"ts":1505216462000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: gsnedders: in my experience the delta from GitHub merge to publication was very low, possibly zero?","msgtype":"m.text"},"ts":1505216547000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://www.w3.org/TR/html-design-principles/#media-independence","msgtype":"m.text"},"ts":1505216631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That seems OKish I guess. It seems pretty small for something so foundational, and you have to squint to see how it would apply to e.g. the Notifications API","msgtype":"m.text"},"ts":1505216679000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Does chromium code search have blame?","msgtype":"m.text"},"ts":1505216701000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, and media is a little different from platforms arguably... Maybe at some point we should redo that document and makes it apply more generally","msgtype":"m.text"},"ts":1505216732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And bring it back home to the WHATWG...","msgtype":"m.text"},"ts":1505216747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: under layers","msgtype":"m.text"},"ts":1505217095000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thx","msgtype":"m.text"},"ts":1505217108000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"> blink-reformat⊙co","msgtype":"m.text"},"ts":1505217151000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<.<","msgtype":"m.text"},"ts":1505217154000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":">.>","msgtype":"m.text"},"ts":1505217156000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: service worker scripts can redirect same-origin, right?","msgtype":"m.text"},"ts":1505228310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, no... I guess it sets redirect mode to \"error\"","msgtype":"m.text"},"ts":1505228333000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, errors","msgtype":"m.text"},"ts":1505228736000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sorry, I should have checked the spec before pinging you","msgtype":"m.text"},"ts":1505228761000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"np :D","msgtype":"m.text"},"ts":1505228767000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder if we have a WPT for that","msgtype":"m.text"},"ts":1505228776000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, at least both browsers prevent install when redirected: https://sw-script-redirect.glitch.me/","msgtype":"m.text"},"ts":1505230930000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: but I guess imports can redirect","msgtype":"m.text"},"ts":1505231269000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, they can be cross-origin too","msgtype":"m.text"},"ts":1505231292000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'll add a WPT test for the importScripts() redirect... I don't think we test that today","msgtype":"m.text"},"ts":1505231949000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we had a bogus assertion that path was hitting","msgtype":"m.text"},"ts":1505231957000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: btw, I think we've made the call not to ship ReadableStream in FF57... doesn't look like the remaining issues will be fixed in time","msgtype":"m.text"},"ts":1505232411000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: more important for it to be right than early imo","msgtype":"m.text"},"ts":1505233149000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"well, it definitely won't be \"early\" :-)","msgtype":"m.text"},"ts":1505233183000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"In specs: If I'm going to resolve a promise with an object, say a Request, do I need to queue a task before creating that object?","msgtype":"m.text"},"ts":1505233683000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: are you already on the js thread?","msgtype":"m.text"},"ts":1505233786000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: if you use the shorthands from https://www.w3.org/2001/tag/doc/promises-guide#shorthand-manipulating, then \"If the algorithm using these shorthands is running in parallel, the shorthands queue a task on p’s relevant settings object’s responsible event loop to call the stored function.\"","msgtype":"m.text"},"ts":1505233790000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"but that doesn't help with creating the Request itself of course...","msgtype":"m.text"},"ts":1505233797000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"well, \"resolve with a newly created X object\" should be fine, while \"1) create a new Request object, 2) resolve with that object\" wouldn't","msgtype":"m.text"},"ts":1505233829000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"or maybe not","msgtype":"m.text"},"ts":1505233849000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: Makes sense, cheers. I guess if I need two steps I could propose something like \"Resolve p with the result of these steps:\"","msgtype":"m.text"},"ts":1505234010000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Did the delegatesFocus flag (mentioned in https://developers.google.com/web/fundamentals/architecture/building-components/shadowdom#focus but not in DOM) get replaced by anything, or is it just gone?","msgtype":"m.text"},"ts":1505239006000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"(I don't need to use it; I'm reviewing a spec that propagates it from one place to another.)","msgtype":"m.text"},"ts":1505239603000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Has there been any movement on declaratively attaching a shadow tree to an element? Someone gave me a proposal to attach <template shadowmode=\"...\"> as its parent's shadow root, but if there's another live proposal I'll encourage them to use that instead.","msgtype":"m.text"},"ts":1505246225000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: ^?","msgtype":"m.text"},"ts":1505246236000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: None yet, but I *really really really* want it.","msgtype":"m.text"},"ts":1505248950000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: I think delegatesFocus is still in shadow DOM, not yet moved over.","msgtype":"m.text"},"ts":1505249244000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Declarative shadow DOM is just <script>el.attachShadow(...)</script> :) https://github.com/w3c/webcomponents/issues/657#issuecomment-324417136","msgtype":"m.text"},"ts":1505249298000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Boooooooo","msgtype":"m.text"},"ts":1505249331000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In particular, big \"booooooo\" because that breaks syntax highlighting, and doesn't work well with anything that expects to be able to output HTML.  You can't include a <script> inside the shadow without remembering to do the string tricks to avoid a literal `</script>` showing up in the string. Etc.","msgtype":"m.text"},"ts":1505249470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's not a good answer. :(","msgtype":"m.text"},"ts":1505249476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What about allowing Shadow DOM on SVG elements?","msgtype":"m.text"},"ts":1505249563000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"What about them?","msgtype":"m.text"},"ts":1505249570000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This used to be in the v0 spec, but was removed in v1","msgtype":"m.text"},"ts":1505249577000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"IMHO features that were previously implemented by user agents should have the highest priority","msgtype":"m.text"},"ts":1505249600000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"The v0-to-v1 removals were mostly about getting something that Safari and others would actually implement.","msgtype":"m.text"},"ts":1505249624000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"v0 was implemented a single user agent (Chrome), so the plural isn't accurate. ^_^","msgtype":"m.text"},"ts":1505249643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That said, Shadow DOM should absolutely work on SVG.)","msgtype":"m.text"},"ts":1505249653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Chrome, Opera, Electron, NW.js, the list goes on...","msgtype":"m.text"},"ts":1505249675000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Those aren't separate user agents for this purpose.","msgtype":"m.text"},"ts":1505249689000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're all \"things using Blink\", which is what implemented it.","msgtype":"m.text"},"ts":1505249699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: https://w3c.github.io/webcomponents/spec/shadow/ is in really bad shape. For example, it refers to delegatesFocus without defining it.","msgtype":"m.text"},"ts":1505249818000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Indeed :(","msgtype":"m.text"},"ts":1505249827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So, are custom SVG elements a dead end like HTML imports?","msgtype":"m.text"},"ts":1505249839000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Domenic: <script>el.attachShadow(...)</script> doesn't work in sandboxed code (which is how we handle MHTML), and doesn't seem like it'd play well with CSP either.","msgtype":"m.text"},"ts":1505249883000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Use nonces","msgtype":"m.text"},"ts":1505249895000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, my real use case is MHTML, which disallows script, so ...","msgtype":"m.text"},"ts":1505249933000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: Deeper and deeper...","msgtype":"m.text"},"ts":1505249935000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"I'd like to just put this subtree into the shadow DOM for an element. / Use script, it's simple. / This causes X, Y, and Z problems. / Here's workarounds for each of those problems; oh yeah, and some of them require you to use crypto safely.\"","msgtype":"m.text"},"ts":1505250015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"notices work is more pleasant with the twitter tab closed.","msgtype":"m.emote"},"ts":1505250056000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Wow, this is a bold proposed change... https://s.codepen.io/cssgrid/debug/50554e6ae6f9a57e5d566b73edcbca37","msgtype":"m.text"},"ts":1505250160000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe it is time to shake things up a bit though","msgtype":"m.text"},"ts":1505250166000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh gosh, I really like it to (everything except the GitHub font; it's jarring surrounded by the normal-text buttons around it).","msgtype":"m.text"},"ts":1505250292000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/whatwg/whatwg.org/pull/90 for encouragement to the author :)","msgtype":"m.text"},"ts":1505250410000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: would you say a declarative (markup) approach to creating shadow dom roots is missing?","msgtype":"m.text"},"ts":1505250654000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"Yes, definitely.  Something like what jyasskin said - `<div><template shadow-mode=\"open\">...</template></div>` to add the template contents to the div as a shadow root would be great.","msgtype":"m.text"},"ts":1505250709000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am not nitpicky on the syntax but anything that is xhtml5-polyglot compatible and does not require a script block would be <3","msgtype":"m.text"},"ts":1505250758000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"(or any other kind of inline js)","msgtype":"m.text"},"ts":1505250782000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"inoas: Why can't you use inline js?","msgtype":"m.text"},"ts":1505250814000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"We long ago abandoned polyglot as a goal, so I dont' care about that, but yeah, inline scripting has so many frustrating downsides.","msgtype":"m.text"},"ts":1505250817000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: *Can* use it isn't the question.  *Want to* use it is, because of the reasons I gave above.","msgtype":"m.text"},"ts":1505250839000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well as long as you do not force people to use non-closing tags, stand-alone attributes its ok","msgtype":"m.text"},"ts":1505250862000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"we are still validating against xml wellformdness and it makes things lots easier","msgtype":"m.text"},"ts":1505250883000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"but thats beside the point, being tag based/declarative <3","msgtype":"m.text"},"ts":1505250897000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"TabAtkins: That's enough for me, but the more \"can't\"s we can find, the more likely we are to convince Domenic and rniwa.","msgtype":"m.text"},"ts":1505250905000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"the reason for us is that we can use it for sand-boxing css and we can forbid javascript to certain users but allow shadow doms for css","msgtype":"m.text"},"ts":1505250983000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"(other users than can build javascript that attaches on the same shadow dom)","msgtype":"m.text"},"ts":1505251011000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"Do you forbid JS to some-authors-but-not-others with a build step or something the browser enforces?","msgtype":"m.text"},"ts":1505251060000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"different privileges in our software","msgtype":"m.text"},"ts":1505251114000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"writing to the database, building documents/assets off that","msgtype":"m.text"},"ts":1505251145000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"inoas: 'k, thanks.","msgtype":"m.text"},"ts":1505251223000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: what's your use case?","msgtype":"m.text"},"ts":1505251386000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"inoas: Chrome supports saving MHTML snapshots of loaded web pages, but because of historical bugs, when those snapshots are loaded, they're not allowed to run script. If the web page had some shadow dom, how do we serialize it?","msgtype":"m.text"},"ts":1505251764000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"https://crbug.com/330663","msgtype":"m.text"},"ts":1505251829000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"so implementors using declarative shadow dom would allow serialization into mhtml snapshots?","msgtype":"m.text"},"ts":1505251919000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"inoas: Yeah, the implementation would write declarative shadow dom into the snapshot. This still works if we only allow declarative shadow dom during MHTML loads.","msgtype":"m.text"},"ts":1505252137000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin, inoas: https://github.com/whatwg/dom/issues/510","msgtype":"m.text"},"ts":1505254649000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: nonces are not related to crypto","msgtype":"m.text"},"ts":1505255769000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's 100% related to crypto? You have to send an unguessable nonce.","msgtype":"m.text"},"ts":1505255812000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, although they're a security feature that's hard to get right. e.g. No static HTML page can safely include a nonce.","msgtype":"m.text"},"ts":1505255813000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"TabAtkins: There's no encryption involved. There's a random number generator, but that's easier than crypto.","msgtype":"m.text"},"ts":1505255842000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Okay, sure, you could just use randomness.","msgtype":"m.text"},"ts":1505255873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But randomness is crypto. ^_^","msgtype":"m.text"},"ts":1505255882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, point is that authors can't reliably use nonces anyway (thus why Ian designed <iframe srcdoc> the way he did, rather than a <sandbox> element with nonces to mark the start/end), and they *require* server-side dynamic pages.","msgtype":"m.text"},"ts":1505256065000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TimothyGu: about https://github.com/whatwg/html/pull/3031 thing, thanks for caring enough about this (non-implementation-requirements) to take time to review and comment","msgtype":"m.text"},"ts":1505256291000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in hindsight, I realize your comment about “Nothing” being technically correct, that was spot on","msgtype":"m.text"},"ts":1505256326000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you were right, I was wrong to think we shouldn’t make it clear there (even for author/developer readers)","msgtype":"m.text"},"ts":1505256382000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s just messy to try figure out how to clearly explain the template case, as far as authoring/document-conformance requirements","msgtype":"m.text"},"ts":1505256442000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, to explain it without making it even more complicated and confusing to read about","msgtype":"m.text"},"ts":1505256470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s a pulling-threads case, where I find that the more details I consider including there, the more other explanation that requires pulling in","msgtype":"m.text"},"ts":1505256545000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I think (hope) we are getting close to the sweet spot, in the review iterations in https://github.com/whatwg/html/pull/3031","msgtype":"m.text"},"ts":1505256596000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]