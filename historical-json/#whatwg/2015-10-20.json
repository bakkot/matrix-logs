[
{"content":{"body":"heycam: http://stackoverflow.com/questions/33215722/how-to-use-w3c-svg-test-suite (if you can provide any help)","msgtype":"m.text"},"ts":1445304167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"awakens","msgtype":"m.emote"},"ts":1445321105000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug____: morning!","msgtype":"m.text"},"ts":1445321254000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: sorry, I missed your follow-up message, yeah, network timeout","msgtype":"m.text"},"ts":1445321414000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wow i have never reflected that whitelist/blacklist had anything to do with skin color","msgtype":"m.text"},"ts":1445327062000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: me neither","msgtype":"m.text"},"ts":1445327217000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zcorpan: what's a proper term we should all be using?","msgtype":"m.text"},"ts":1445327225000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/265","msgtype":"m.text"},"ts":1445327250000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"safelist/blocklist","msgtype":"m.text"},"ts":1445327257000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: how about blocklist/allowedlist?","msgtype":"m.text"},"ts":1445327300000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zcorpan: nice","msgtype":"m.text"},"ts":1445327366000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's not clear to me anyone is actually offended by these terms today, although it is slightly uncomfortable if they indeed originated from skin color","msgtype":"m.text"},"ts":1445327490000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: now that I think about it, it's very offensive.","msgtype":"m.text"},"ts":1445327553000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Just wait until you next hear someone use master/slave","msgtype":"m.text"},"ts":1445327578000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: same here, can't believe it never occurred to me before","msgtype":"m.text"},"ts":1445327581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: that too, geez","msgtype":"m.text"},"ts":1445327586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: hey","msgtype":"m.text"},"ts":1445327601000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: hello, what's up?","msgtype":"m.text"},"ts":1445327607000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"holy shit, never thought of white/blacklist in that way","msgtype":"m.text"},"ts":1445327616000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rewires brain","msgtype":"m.emote"},"ts":1445327626000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rniwa: who in webkit land would be a good person to talk to about domenic's promise rejection events proposal?","msgtype":"m.text"},"ts":1445327627000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Ms2ger: master/slave is okay because it doesn't discriminate against any race","msgtype":"m.text"},"ts":1445327643000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1445327659000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jochen__: probably weinig since he implemented promise in WebKit/JSC","msgtype":"m.text"},"ts":1445327672000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1445327690000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: probably the best way to get in touch with him will be to file a WebKit bug and cc him","msgtype":"m.text"},"ts":1445327701000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"he's a really busy guy these days","msgtype":"m.text"},"ts":1445327708000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"who isn't","msgtype":"m.text"},"ts":1445327715000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"filed https://bugs.webkit.org/show_bug.cgi?id=150358","msgtype":"m.text"},"ts":1445327946000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"some people in http://english.stackexchange.com/questions/51088/alternative-term-to-blacklist-and-whitelist claim that the origin isn't skin color","msgtype":"m.text"},"ts":1445328136000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't think that matters much","msgtype":"m.text"},"ts":1445328280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it's more that the use in this context suggests that black=bad, white=good, which is somewhat pervasive in Western society and not great","msgtype":"m.text"},"ts":1445328374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah sure","msgtype":"m.text"},"ts":1445328418000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"next up: white hat, black hat","msgtype":"m.text"},"ts":1445328506000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and white lies","msgtype":"m.text"},"ts":1445328747000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Writing ECMAScript stuff is rather fun","msgtype":"m.text"},"ts":1445331905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone have Edge nearby?","msgtype":"m.text"},"ts":1445333054000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I can. But I don't have a stable internet connection. :)","msgtype":"m.text"},"ts":1445333486000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Pah","msgtype":"m.text"},"ts":1445333916000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm interested in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3697","msgtype":"m.text"},"ts":1445333927000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"uh, for some reason can't copy/paste","msgtype":"m.text"},"ts":1445334070000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"log: function CSS() { [native code] }, log: undefined","msgtype":"m.text"},"ts":1445334086000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1445334099000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1445334100000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":" /msg NickServ identify wisdom20","msgtype":"m.text"},"ts":1445340461000,"senderName":"JeanCarloMachado","senderId":"JeanCarloMachado@irc"},
{"content":{"body":"d","msgtype":"m.text"},"ts":1445340469000,"senderName":"JeanCarloMachado","senderId":"JeanCarloMachado@irc"},
{"content":{"body":"Domenic: given https://github.com/annevk/html-cross-origin-objects/blob/master/Location.md I think it's very feasible to create some kind of generic %CrossOriginObject% thingie that Location and WindowProxy both use","msgtype":"m.text"},"ts":1445342535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if we want to list all the [[InternalMethod]] stuff only once","msgtype":"m.text"},"ts":1445342550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but maybe that is overkill","msgtype":"m.text"},"ts":1445342564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If anyone feels like being sad, r? https://github.com/w3c/web-platform-tests/pull/2266","msgtype":"m.text"},"ts":1445343502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I am on it","msgtype":"m.text"},"ts":1445343566000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In fact I was already","msgtype":"m.text"},"ts":1445343572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So obviously I naturally gravitate toward sadness","msgtype":"m.text"},"ts":1445343589000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You do live in the UK","msgtype":"m.text"},"ts":1445343600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Any special reason you created a new file rather than just running the same tests like [\"matches\", \"webkitMatchesSelector\"].each(function() {}) ?","msgtype":"m.text"},"ts":1445343960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, nothing particularly though out; just felt better this way","msgtype":"m.text"},"ts":1445344056000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It might be nice to share some more code, but I didn't really want to spend more time on it","msgtype":"m.text"},"ts":1445344079000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"how should openWindow work in SW?","msgtype":"m.text"},"ts":1445344155000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"how long should it actually wait before resolving the Promise on worker side","msgtype":"m.text"},"ts":1445344177000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"If I read the spec correctly, the promise is resolved ASAP we have a new document","msgtype":"m.text"},"ts":1445344240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but perhaps I'm missing something","msgtype":"m.text"},"ts":1445344244000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: annevk: ^ you might know","msgtype":"m.text"},"ts":1445344260000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, I think once a document is created it'll be resolved","msgtype":"m.text"},"ts":1445344301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fulfilled, I suppose","msgtype":"m.text"},"ts":1445344320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1445344340000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: so the Document might not actually have any content","msgtype":"m.text"},"ts":1445344346000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"like scripts loaded or anything","msgtype":"m.text"},"ts":1445344352000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and sw could already try to communicate with it?","msgtype":"m.text"},"ts":1445344368000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah... I think that was roughly the idea","msgtype":"m.text"},"ts":1445344386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: hasn't really been specified in detail","msgtype":"m.text"},"ts":1445344403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, rather racy setup","msgtype":"m.text"},"ts":1445344408000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hm, yeah. Although since it opened it, it could put init data in the fragment or search","msgtype":"m.text"},"ts":1445344425000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but perhaps that is fine. perhaps the idea is that the new Window sends something to sw when it thinks it is ready enough","msgtype":"m.text"},"ts":1445344428000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"browsers don't have built-in feed readers anymore, do they?","msgtype":"m.text"},"ts":1445344462000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If it becomes a pain, we could add a client.ready promise or something to that effect","msgtype":"m.text"},"ts":1445344468000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and visibility and focus states can be anything at the moment Promise is resolved","msgtype":"m.text"},"ts":1445344486000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zcorpan: FF has still","msgtype":"m.text"},"ts":1445344637000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if live bookmarks is a \"feed reader\"","msgtype":"m.text"},"ts":1445344659000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sure. ok i see \"subscribe to this page\" in firefox. but clicking it takes me to https://annevankesteren.nl/feeds/weblog which is mostly empty in Nightly and clicking \"subscribe now\" appears to do nothing","msgtype":"m.text"},"ts":1445344760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, I do use livebookmarks all the time","msgtype":"m.text"},"ts":1445344859000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but those were created long ago","msgtype":"m.text"},"ts":1445344865000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zcorpan: ah, you're using nightly?","msgtype":"m.text"},"ts":1445344920000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"with e10s?","msgtype":"m.text"},"ts":1445344922000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah. i don't know what e10s is but there is a \"new non-e10s window\" menu item","msgtype":"m.text"},"ts":1445344975000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it is an e10s issue","msgtype":"m.text"},"ts":1445344986000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Multiprocess Firefox","msgtype":"m.text"},"ts":1445344989000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1445345001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://bugzilla.mozilla.org/show_bug.cgi?id=1216513","msgtype":"m.text"},"ts":1445345169000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: JakeA: FWIW, I'm rather worried that openWindow setup is too fragile, and ends up causing issues where on slow network something doesn't work, but on fast network, which web devs probably use, things work just fine because data is transferred fast enough so that script etc are loaded before sw's message to client window is processed.","msgtype":"m.text"},"ts":1445345739000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and better to fix the API sooner than later)","msgtype":"m.text"},"ts":1445345764000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"explicit ready() call, or implicit ready at 'load' time might work quite well","msgtype":"m.text"},"ts":1445345836000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(explicit ready() before 'load' would override the implicit ready call)","msgtype":"m.text"},"ts":1445345905000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"files a bug","msgtype":"m.emote"},"ts":1445345967000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah, there is https://github.com/slightlyoff/ServiceWorker/issues/728","msgtype":"m.text"},"ts":1445346009000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: cheers, I've added this to our TPAC agenda","msgtype":"m.text"},"ts":1445346722000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug____: yeah, it seems better to wait for DOMContentLoaded or some such","msgtype":"m.text"},"ts":1445346765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess having the SW open a bit longer isn't a performance issue here, as the SW will likely be used for the new window's fetch. At the very least the browser needs to be running","msgtype":"m.text"},"ts":1445346861000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If anyone is interested in security of Window and Location: https://github.com/annevk/html-cross-origin-objects","msgtype":"m.text"},"ts":1445346985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Window is not yet covered, waiting on some feedback for Location first.)","msgtype":"m.text"},"ts":1445347003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Window and Location ... sounds complicated ;)","msgtype":"m.text"},"ts":1445347565000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: quite","msgtype":"m.text"},"ts":1445347585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why bound functions?","msgtype":"m.text"},"ts":1445358926000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that looked close to what I wanted...","msgtype":"m.text"},"ts":1445358938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what did you want?","msgtype":"m.text"},"ts":1445358948000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \"a wrapper function\" is that clear enough?","msgtype":"m.text"},"ts":1445358966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure... what is a wrapper function...","msgtype":"m.text"},"ts":1445358980000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: function() { actualFunction(); }","msgtype":"m.text"},"ts":1445358994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1445359000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1445359003000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh yeah, WeakMap is wrong","msgtype":"m.text"},"ts":1445359057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bummer","msgtype":"m.text"},"ts":1445359060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Separate question: so originalDesc.[[Get]] is a function from another realm, and crossOriginGet is supposed to be instantiated in the current realm?","msgtype":"m.text"},"ts":1445359083000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there a way to get the key removed if the value is GC'd?","msgtype":"m.text"},"ts":1445359102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think everything related to that is correct as-is, but it's quite implicit because of how ES is usually implicit about current realm","msgtype":"m.text"},"ts":1445359103000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or some pattern?","msgtype":"m.text"},"ts":1445359106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1445359137000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, I forgot about that, crossOriginGet needs to be from the current realm and have the correct Function.prototype thing","msgtype":"m.text"},"ts":1445359179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it does that automatically","msgtype":"m.text"},"ts":1445359192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that's why it's wrapping","msgtype":"m.text"},"ts":1445359196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But adding a NOTE might be helpful since it's implicit","msgtype":"m.text"},"ts":1445359200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I will file an issue for now","msgtype":"m.text"},"ts":1445359212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And probably replace bound function with something different","msgtype":"m.text"},"ts":1445359227000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bound functions are weird, they don't have a varying `this`","msgtype":"m.text"},"ts":1445359236000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so you want a tuple -> list map where if the list gets deleted the items in the tuple are not held by GC","msgtype":"m.text"},"ts":1445359265000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1445359271000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no, not the list gets deleted","msgtype":"m.text"},"ts":1445359302000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if all the items in the list get GCed","msgtype":"m.text"},"ts":1445359306000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's a tuple -> Property Descriptor Record map","msgtype":"m.text"},"ts":1445359568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and if everything in the Property Descriptor Record map is no longer used, the whole map entry can be GC'd","msgtype":"m.text"},"ts":1445359594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The map is keys -> propdescs? makes sense","msgtype":"m.text"},"ts":1445359608000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, since that is what GetOwnProperty returns that seemed easiest","msgtype":"m.text"},"ts":1445359626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wait, is it a map or is it just a single propdesc","msgtype":"m.text"},"ts":1445359662000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"[[GetOwnProperty]] seems to imply just a single propdesc","msgtype":"m.text"},"ts":1445359672000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The internal structure is a map of tuple -> propdesc","msgtype":"m.text"},"ts":1445359703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think i understand","msgtype":"m.text"},"ts":1445359717000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"[[GetOwnProperty]] returns one propdesc out of that map at most","msgtype":"m.text"},"ts":1445359725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is in the tuple? anything object-like we can use?","msgtype":"m.text"},"ts":1445359728000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1445359733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then i don't think we should worry about GCing the keys","msgtype":"m.text"},"ts":1445359752000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if they are just primitives then there is no notion of them being allocated or not","msgtype":"m.text"},"ts":1445359763000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"origin + effective script origin or maybe just effective script origin","msgtype":"m.text"},"ts":1445359784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1445359803000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but we ... still don't want to hold strong references to the propdescs?","msgtype":"m.text"},"ts":1445359816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(and more specifically to the functions)","msgtype":"m.text"},"ts":1445359830000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1445359840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, but that seems like it would expose GC:","msgtype":"m.text"},"ts":1445359851000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I do const x = Object.getOwnPropertyDescriptor(location, \"href\").get;","msgtype":"m.text"},"ts":1445359873000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. if I do document.domain = \"x.x.x.com\" and then later do document.domain = \"x.x.com\" it makes little sense for the Location object to keep functions alive I can never possibly access again","msgtype":"m.text"},"ts":1445359885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1445359898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sure, if you have a ref to them, they shouldn't be collected","msgtype":"m.text"},"ts":1445359914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is mostly about them getting stored once you access them and then there not being a way for them to get removed again","msgtype":"m.text"},"ts":1445359940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"other than GC, which I thought WeakMap would address but really doesn't","msgtype":"m.text"},"ts":1445359957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm tempted to go with something a bit handwavy about GC behavior instead of saying that we have found the perfect data structure","msgtype":"m.text"},"ts":1445359958000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Something like:","msgtype":"m.text"},"ts":1445359965000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I do see now why I was totally wrong about WeakMap","msgtype":"m.text"},"ts":1445360047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"The UA should allow the property descriptors their accessor functions stored in [[crossOriginPropertyDescriptorMap]] to be garbage collected if no references to them exist and it is not possible for them to be accessed.\" Then give 2+ examples, one where the author did window.x = Object.getOwnPropertyDescriptor(location, \"href\").get so it must stay alive,","msgtype":"m.text"},"ts":1445360075000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and one where they did document.domain so now it can be collected.","msgtype":"m.text"},"ts":1445360075000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Seems reasonable","msgtype":"m.text"},"ts":1445360131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so for Window, my thinking is that once Location.md is better I try to duplicate the text I have there first and create a WindowProxy.md based off it","msgtype":"m.text"},"ts":1445360510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: then we review that","msgtype":"m.text"},"ts":1445360515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: then we can attempt a potential %AllenWirfsBrockObjectMagicHappens% merger?","msgtype":"m.text"},"ts":1445360552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and even if we decide not to merge the objects (mostly to avoid duplicate [[PreventExtensions]] ( ) and friends), things like CrossOriginPropertyDescriptor will be reused of course","msgtype":"m.text"},"ts":1445360639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's all I got for today, more tomorrow, I'm sure","msgtype":"m.text"},"ts":1445360712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah that sounds like a good plan.","msgtype":"m.text"},"ts":1445361820000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins, is it possible to use `justify-content: center` for a multi-line flexbox, and have the last line left aligned to the edge of the previous line??","msgtype":"m.text"},"ts":1445363416000,"senderName":"Joseph__Silber","senderId":"Joseph__Silber@irc"},
{"content":{"body":"Joseph__Silber: Nope. Handling the \"last line problem\" will happen in Flexbox 2.","msgtype":"m.text"},"ts":1445363461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"K. Thanks.","msgtype":"m.text"},"ts":1445363478000,"senderName":"Joseph__Silber","senderId":"Joseph__Silber@irc"},
{"content":{"body":"Guess the only way to solve it now is with another wrapper.","msgtype":"m.text"},"ts":1445363497000,"senderName":"Joseph__Silber","senderId":"Joseph__Silber@irc"}
]