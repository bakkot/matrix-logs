[
{"content":{"body":"hi!","msgtype":"m.text"},"ts":1574434408000,"senderName":"Iarfen","senderId":"Iarfen@irc"},
{"content":{"body":"https://fetch.spec.whatwg.org/#data-url-processor looks like it makes MIME parameters with `,` in them split the MIME and the body of the data URL? e.g. data:fizz/buzz;lang=\"foo,bar\",hi => {mime: {type: 'fizz', subtype: 'buzz', params: {lang: 'foo'}}, body: 'bar\",hi' } . it seems there is some browser disagreement here though","msgtype":"m.text"},"ts":1574436341000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"maybe not, just confusing","msgtype":"m.text"},"ts":1574436514000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"mkwst: You don't happen to know why https://searchfox.org/mozilla-central/source/testing/web-platform/tests/common/security-features/resources/common.sub.js#1237-1238 is using document.write do you (it's used in upgrade-insecure-requests tests)? It seems like we never get a load event in Firefox in that case","msgtype":"m.text"},"ts":1574437068000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm, changing that seems like maybe it changes some results :/","msgtype":"m.text"},"ts":1574437896000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh no actually they're failing with the original setup too","msgtype":"m.text"},"ts":1574437989000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"HTMLTableElement.tFoot says \"If the new value is neither null nor a tfoot element, then a \"HierarchyRequestError\" DOMException must be thrown instead.\" and has said that since at least the DOM2 spec. But Safari, FF and Chrome all throw a TypeError, and the wpts check for that.","msgtype":"m.text"},"ts":1574440608000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/tables.html#the-table-element","msgtype":"m.text"},"ts":1574440610000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"I guess the browsers do the right thing and the spec's incorrect?","msgtype":"m.text"},"ts":1574440631000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"Or I've misunderstood, of course. I'm just doing: document.getElementById(\"mytableelement\").tFoot = mytableelement; (or a div element, or whatever)","msgtype":"m.text"},"ts":1574440755000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"Ah, browsers seem to throw a type error if it's not an HTMLTableSectionElement, and a HierarchyRequestError if it's not a tfoot.","msgtype":"m.text"},"ts":1574441767000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"That's probably what the IDL spec says, then. Ignore all this :-)","msgtype":"m.text"},"ts":1574441967000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"PiersW: it is, though it seems we could enforce all requirements in IDL if we wanted to and simplify a bit","msgtype":"m.text"},"ts":1574442947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Aah I see, they do not have their own class","msgtype":"m.text"},"ts":1574443022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the amount of browsing context “tree” traversal that happens per event loop loop is kinda ridiculous","msgtype":"m.text"},"ts":1574444161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hopefully nobody implements it as such","msgtype":"m.text"},"ts":1574444210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm thinking harder about this and I think it's important to remember browsing context tree traversal is fine in some circumstances. Namely, when you're not taking a reference to ancestors/descendants, and just traversing once, it's well-defined.","msgtype":"m.text"},"ts":1574452357000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bradleymeck: I think that's worth filing an issue on Fetch for to investigate. Might keep as-is, or might want to do special handling for quoted strings.","msgtype":"m.text"},"ts":1574452644000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i couldn't find any actual examples of MIME params with commas","msgtype":"m.text"},"ts":1574452671000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Yeah, but I think they are theoretically allowed","msgtype":"m.text"},"ts":1574452760000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don’t think that’s what we’re looking at here though. This looked like a lot of duplication and also lots of active document grabbing","msgtype":"m.text"},"ts":1574452767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it seems to work OK to me, although perhaps it could be simpler. It grabs a list of documents once and then does some filtering on it.","msgtype":"m.text"},"ts":1574452825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Once? It does so many times in the course of a loop","msgtype":"m.text"},"ts":1574452883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh well, some other time","msgtype":"m.text"},"ts":1574452898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic made an issue, though I won't be looking into it personally anytime soon https://github.com/whatwg/fetch/issues/970","msgtype":"m.text"},"ts":1574453263000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"annevk: Yeah, the lack of their own class was why I got confused. It's all clear now - I was just being thick.","msgtype":"m.text"},"ts":1574455064000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"Domenic: i guess it somewhat matters for serializing any JS MIME API now that I think about it as `data:${mime},${body}` wouldn't work if someone set a param value with a `,`","msgtype":"m.text"},"ts":1574456009000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"}
]