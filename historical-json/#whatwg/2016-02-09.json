[
{"content":{"body":"smaug____: I didn't know about Replaceable! I'll go look it up.","msgtype":"m.text"},"ts":1454976000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: looks like that's what Gecko does, cool. Let's do that instead","msgtype":"m.text"},"ts":1454976149000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I assume that part of Gecko's webidl was reviewed by bz, so it probably should be sane","msgtype":"m.text"},"ts":1454976495000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"tantek: I have experience with OASIS, years ago, working on the technical committee that created RelaxNG and also on the DocBook technical committee","msgtype":"m.text"},"ts":1454976591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: sure","msgtype":"m.text"},"ts":1454977753000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"Domenic: still a topic? sorry just reading through the highlights and using lastlog","msgtype":"m.text"},"ts":1454977782000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"ah cool! found the conversation :)","msgtype":"m.text"},"ts":1454977854000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"TabAtkins: another (nicer) FYI (in case you’re not already following the ServiceWorker repo) https://github.com/slightlyoff/ServiceWorker/issues/489#issuecomment-181654310","msgtype":"m.text"},"ts":1454992834000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/cure53/DOMPurify looks interesting","msgtype":"m.text"},"ts":1454996642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Thanks, I wasn't following it.","msgtype":"m.text"},"ts":1455001775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: about HTML Imports, I realize it seems like there’s no agreement to move ahead with it, but it’s worth remembering that it's actually one of the highest-votec “wants” at the Edge uservoice thing https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/filters/top","msgtype":"m.text"},"ts":1455006691000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"of course that doesn’t really mean that web devs necessarily really want HTML Imports as currently specced","msgtype":"m.text"},"ts":1455006730000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it seems clear they still really want *something*","msgtype":"m.text"},"ts":1455006750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The question is whether they still want it a decade from now","msgtype":"m.text"},"ts":1455006778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1455006794000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but also note that the Edge team has HTML Imports marked as ON THE BACKLOG https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6261318-html-imports","msgtype":"m.text"},"ts":1455006816000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it’s also interesting that 3 of the 5 top-voted wants there are Web Components things","msgtype":"m.text"},"ts":1455006904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unsubscribes from all mailing lists that enable GitHub mirroring","msgtype":"m.emote"},"ts":1455006948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"public-media-capture did this experiment, asked for feedback, I tried to give feedback, but I didn't even get a reply on that","msgtype":"m.text"},"ts":1455006974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and now public-geolocation is doing the same thing...","msgtype":"m.text"},"ts":1455006993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bterlson, so will [1, 2, 3].flatMap(i => [[\"a\", i], [\"b\", -i]]) == [\"a\", 1, ..., \"b\", -3] or [[\"a\", 1], ..., [\"b\", -3]]?","msgtype":"m.text"},"ts":1455007687000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: the other problem with mirroring of GitHub issues to a mailing list is pretty much just like the problem with old-fashioned mailing-list cross-posting, in that if somebody replies with a substantive comment on the mailing list, the people following the issue in GitHub will never see that comment","msgtype":"m.text"},"ts":1455011273000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tobie remarked about this somewhere recently","msgtype":"m.text"},"ts":1455011292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Make ssense, that definitely seems to happen","msgtype":"m.text"},"ts":1455011313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sublime Text not being able to highlight HTML without tweaks is funny","msgtype":"m.text"},"ts":1455011348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Definitely will take some getting used to","msgtype":"m.text"},"ts":1455011356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-device-apis/2016Feb/0030.html tobie speaks","msgtype":"m.text"},"ts":1455011480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"curses","msgtype":"m.emote"},"ts":1455014690000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Can we find someone to fix UIEvents already?","msgtype":"m.text"},"ts":1455014708000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"In a W3C meeting this is the moment where the chair laughs and you're it and then nothing happens","msgtype":"m.text"},"ts":1455014784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I also, we shouldn't think of them as a unit. There's hit testing on top of which mouse events, various APIs, touch events, pointer events, and :hover flow. And there's keyboard events which are totally separate. Scroll events are somewhat coupled with layout and hit testing, etc.","msgtype":"m.text"},"ts":1455014873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This probably would not be a good Outreachy project :)","msgtype":"m.text"},"ts":1455014978000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: I just found that in the HTML standard, both application/x-www-form-urlencoded and multipart/form-data can use the utf-16 encoder","msgtype":"m.text"},"ts":1455016935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I have no idea whether that is actually implemented that way though","msgtype":"m.text"},"ts":1455016944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: whoa. How?","msgtype":"m.text"},"ts":1455016984000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: actually I'm wrong","msgtype":"m.text"},"ts":1455017032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. :-)","msgtype":"m.text"},"ts":1455017053000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: \"pick an encoding for a form\" has a flag that is always unset although not each caller says that explicitly, only text/plain does","msgtype":"m.text"},"ts":1455017073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I will clarify that to make it less ambiguous by removing the flag","msgtype":"m.text"},"ts":1455017098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1455017532000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Is the URL standard going to cover handling of relative URLs for use in internal links?","msgtype":"m.text"},"ts":1455020442000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"I wish to use the URL standard instead of doing '/some_api/' + some_id","msgtype":"m.text"},"ts":1455020653000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"Just to be sure some_id gets encoded appropriately","msgtype":"m.text"},"ts":1455020699000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"cyberixae: you could create a fictional base URL and then set and extract the path","msgtype":"m.text"},"ts":1455021651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Correct me if I am wrong but I believe reading the path would give it to me without URL encoding, so I would then need to serialize the URL and invent a parser to extract the relevant part from the serialized URL.","msgtype":"m.text"},"ts":1455021886000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"So basically I need url.getRelativeTo(url2) and this is not part of the URL standard","msgtype":"m.text"},"ts":1455021952000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"So I need to implement this myself even if I use a fictional base URL","msgtype":"m.text"},"ts":1455021970000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"cyberixae: that sounds incorrect","msgtype":"m.text"},"ts":1455022101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cyberixae: e.g. if you set url.pathname to † or some such it will definitely percent-encode that","msgtype":"m.text"},"ts":1455022123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1455022283000,"senderName":"cyberixae","senderId":"cyberixae@irc"},
{"content":{"body":"hsivonen: have we changed the HTML parser in implementation to the point where determining the encoding is deterministic?","msgtype":"m.text"},"ts":1455022584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: the specification still pretends it can change","msgtype":"m.text"},"ts":1455022610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: IIRC, it's deterministic in Gecko","msgtype":"m.text"},"ts":1455022844000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: but Gecko can reload if it finds a late <meta>","msgtype":"m.text"},"ts":1455022908000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1455022922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not aware of the late meta reload being necessary for a successful browser","msgtype":"m.text"},"ts":1455022931000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: IIRC, Safari doesn't do that","msgtype":"m.text"},"ts":1455022937000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: IIRC, Chrome, neither","msgtype":"m.text"},"ts":1455022944000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: but I haven't checked in a long time","msgtype":"m.text"},"ts":1455022952000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: IIRC, our lack of a timeout for scanning the 1024 bytes has confused a couple of Web authors","msgtype":"m.text"},"ts":1455022988000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: but we've still gone with determinism over timeouts","msgtype":"m.text"},"ts":1455023001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I like it, I'd like to change the specification to require that","msgtype":"m.text"},"ts":1455023024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe I'll first change it to use the decode algorithm from Encoding rather than the custom setup it has now","msgtype":"m.text"},"ts":1455023045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(aside: after writing some trivial code that calls the encoding-rs API, I figured I want to [optionally] bake BOM sniffing directly into the behavior of encoding-rs's Decoder objects)","msgtype":"m.text"},"ts":1455023448000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(aside aside: luckily the Web doesn't sniff for GB18030 BOM even though such a thing could logically exist)","msgtype":"m.text"},"ts":1455023487000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. maybe I should shut up and not give anyone ideas about that","msgtype":"m.text"},"ts":1455023545000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think I did test for that once","msgtype":"m.text"},"ts":1455024044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: thanks again for recommending Sublime Text, much much much faster","msgtype":"m.text"},"ts":1455027868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: bit of a pain to learn the new configuration of all things, but well worth it thus far","msgtype":"m.text"},"ts":1455027890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1455029155000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"By Friday annevk will refuse to use anything other than straight-up vi","msgtype":"m.text"},"ts":1455029188000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: what were you using before sublime?","msgtype":"m.text"},"ts":1455029315000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nano ain't so bad...","msgtype":"m.text"},"ts":1455029315000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://whatwg.org/mailing-list#commits needs updating...","msgtype":"m.text"},"ts":1455029644000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: ^","msgtype":"m.text"},"ts":1455029660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mkwst: Do we already have tests for the secure contexts spec?","msgtype":"m.text"},"ts":1455030582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: TextWrangler","msgtype":"m.text"},"ts":1455031323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1455031364000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: I use nano over ssh mostly, although maybe I should learn the terminal to open Sublime Text... like I taught git","msgtype":"m.text"},"ts":1455031370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it was pretty much perfect until I had to regularly edit a 100k-line document","msgtype":"m.text"},"ts":1455031408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nano is properly horrible","msgtype":"m.text"},"ts":1455031427000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"By which I mean \"really upsets my emacs-fingers\"","msgtype":"m.text"},"ts":1455031439000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"could https://github.com/whatwg/html/issues/626#issuecomment-181370157 be a symptom of switching to https?","msgtype":"m.text"},"ts":1455033589000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: The second ([[\"a\", 1], ..., [\"b\", -3]]). Your flatMap callback has to return an array, which is merged into the result; the *contents* of the array are left as they are.","msgtype":"m.text"},"ts":1455033754000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am again surprised how few folks complained thus far about the two application/x-www-form-urlencoded algorithms and their divergence","msgtype":"m.text"},"ts":1455034063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: for URL bikeshed still cannot distinguish between encode and encoding?","msgtype":"m.text"},"ts":1455034452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's the problem that I fixed in the wrong way a few weeks back, and need to fix properly now.","msgtype":"m.text"},"ts":1455034496000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1455034512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bikeshed's too eager to \"correct\" your term into all its variations, and needs to do so only when the exact term fails.","msgtype":"m.text"},"ts":1455034524000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I \"fixed\" it by doing so only when the exact term has zero results, but that breaks if the exact term has a result that won't be chosen, like an unexported term, and you need the variants to get a correct link. So I had to revert.)","msgtype":"m.text"},"ts":1455034573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It's not hard to fix, I just couldn't spend time on it last month due to spec-hacking with fantasai the entire time.  But February is Bikeshed Month.)","msgtype":"m.text"},"ts":1455034598000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I also found that several WHATWG standards are still not imported","msgtype":"m.text"},"ts":1455034624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll fix that this morning.","msgtype":"m.text"},"ts":1455034653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I guess I should convert more to bikeshed at some point","msgtype":"m.text"},"ts":1455034671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I presume https://spec.whatwg.org/ is a fully updated list of specs, so I can just check which are Bikeshedded?","msgtype":"m.text"},"ts":1455034672000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: https://resources.whatwg.org/biblio.json is better","msgtype":"m.text"},"ts":1455034693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1455034704000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think Hixie_ updated spec.whatwg.org with the latest stuff yet","msgtype":"m.text"},"ts":1455034706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interesting how Firefox has a native JSON view these days","msgtype":"m.text"},"ts":1455034725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: so there was actually a comment in the HTML standard to the effect that text/plain would support ASCII-incompatible encodings (meaning utf-16), but implementations don't support that so I think we're all good","msgtype":"m.text"},"ts":1455036105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: the former, flatten recursively flattens, flatMap is like map().flatten()","msgtype":"m.text"},"ts":1455036517000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"TabAtkins, ha","msgtype":"m.text"},"ts":1455036548000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: having UTF-16 encode just for text/plain submissions would be very sad","msgtype":"m.text"},"ts":1455037080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so yay for implementations not supporting","msgtype":"m.text"},"ts":1455037096000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: Did you mean \"ta\"? Or was my answer funny for reasons that aren't clear from context?","msgtype":"m.text"},"ts":1455037290000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, the fact that the two of you gave opposite answers","msgtype":"m.text"},"ts":1455037320000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Does... does he know what flatmap does.","msgtype":"m.text"},"ts":1455037335000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Unless you're talking about a jank-ass \"just flatten everything lol who cares\" version of flatMap, it's a .map() followed by *one* level of flattening.","msgtype":"m.text"},"ts":1455037404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Or the algebraic equivalent of such.)","msgtype":"m.text"},"ts":1455037414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where is this flatMap thingie defined?","msgtype":"m.text"},"ts":1455037453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Haskell/Scala/everything that uses monads in some way.","msgtype":"m.text"},"ts":1455037468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I'm vaguely familiar with that thanks to you, but I wonder what the context was for the question","msgtype":"m.text"},"ts":1455037493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bterlson wrote a spec that was mentioned on twitter","msgtype":"m.text"},"ts":1455037507000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I agree that TabAtkins's answer makes sense, but I don't think it agrees with the spec","msgtype":"m.text"},"ts":1455037523000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"poofs","msgtype":"m.emote"},"ts":1455037526000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, I was wondering why I didn't see a prelude to your question in IRC. ^_^","msgtype":"m.text"},"ts":1455037531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, the Promise spec settled on a \"lol just flatten everything nothing matters\" version of near-monadic behavior.","msgtype":"m.text"},"ts":1455037559000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But that's no reason to poison the well for everyone else.","msgtype":"m.text"},"ts":1455037568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And anyway, it uses .then() for its near-monad operation, not .flatMap(). Some behavior differences can thus be allowed.)","msgtype":"m.text"},"ts":1455037590000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: TabAtkins: I think not flattening nested arrays for flatMap is a good idea. Just didn't have time to do it last night","msgtype":"m.text"},"ts":1455038020000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"I want flatten to take a parameter that says how many levels to flatten, once I have that flatMap can easily reuse the same machinery!","msgtype":"m.text"},"ts":1455038046000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"bterlson: Unless you're planning something really off-beat for flatMap, it's not just a good idea, it's a requirement. ^_^","msgtype":"m.text"},"ts":1455039479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is this meant solely for arrays, or are you planning to propose it generically?","msgtype":"m.text"},"ts":1455039510000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(If it's just for arrays, I'd rather not squat on a well-accepted name for the monad action unless it's going to act like the monad action.)","msgtype":"m.text"},"ts":1455039544000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: how can a blob URL be relative?","msgtype":"m.text"},"ts":1455042315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins, just for arrays considering it's on Array.prototype.","msgtype":"m.text"},"ts":1455042320000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"Okay. (I don't follow you on Twitter and haven't seen the spec.)","msgtype":"m.text"},"ts":1455042351000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, let's get flatMap (single level flattening) into Array.prototype, then we propose making it generic via double-dispatch. ^_^","msgtype":"m.text"},"ts":1455042395000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Everyone should follow bterlson on twitter","msgtype":"m.text"},"ts":1455042396000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, looks legit. Followed. ^_^","msgtype":"m.text"},"ts":1455042431000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll follow anyone that tweets about -0.","msgtype":"m.text"},"ts":1455042559000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"That was, in fact, the tweet that convinced me.","msgtype":"m.text"},"ts":1455042680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"On that note, what's the context of \"A use strict directive in a function whose outer context is already strict is not a no-op! Such functions cannot use default or rest params.\" - \"use strict\" disables those features???","msgtype":"m.text"},"ts":1455042726000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, I read replies. nm","msgtype":"m.text"},"ts":1455042746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jsbell: I loved that tweet too, but oddly it got few impressions. People generally don't share our love of -0 arcana. :-P","msgtype":"m.text"},"ts":1455042775000,"senderName":"bterlson","senderId":"bterlson@irc"}
]