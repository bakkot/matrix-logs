[
{"content":{"body":"rniwa: could you comment on https://github.com/whatwg/dom/pull/336 please?","msgtype":"m.text"},"ts":1476342637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, this is interesting","msgtype":"m.text"},"ts":1476343898000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"i always thought react's virtual DOM is something that they use on the standards","msgtype":"m.text"},"ts":1476343917000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"which brings up a question: should web standards support this virtual DOM concept in some way?","msgtype":"m.text"},"ts":1476343970000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: some parts of it might make sense to standardize","msgtype":"m.text"},"ts":1476344039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"KiChjang: e.g., the patch format: https://github.com/whatwg/dom/issues/270","msgtype":"m.text"},"ts":1476344062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's what i was thinking","msgtype":"m.text"},"ts":1476344069000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"the diff thing is quite intriguing","msgtype":"m.text"},"ts":1476344076000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"jgraham_: you need async_test even when the events are sync, right?","msgtype":"m.text"},"ts":1476362947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You need async_test when the js stack is reset (whatever the word is), approximately","msgtype":"m.text"},"ts":1476363019000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"it's not reset really, it's just nesting","msgtype":"m.text"},"ts":1476363043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm gonna take that as a yes","msgtype":"m.text"},"ts":1476363078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess a more precise answer is whenever you want to assert somewhere that won't allow the stack to unwind up to the test() function","msgtype":"m.text"},"ts":1476363129000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"when an exception is thrown","msgtype":"m.text"},"ts":1476363141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"right, whenever \"report an exception\" is used, that makes sense","msgtype":"m.text"},"ts":1476363192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1476363602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aghh no rniwa and no botie","msgtype":"m.text"},"ts":1476364045000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hang on will get botie back","msgtype":"m.text"},"ts":1476364164000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"voila","msgtype":"m.text"},"ts":1476364238000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1476365589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"botie: tell rniwa did you see my response to https://github.com/w3c/DOM-Parsing/issues/22 ? I'm not sure I got it right and would love your thoughts.","msgtype":"m.text"},"ts":1476365621000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1476365621000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Is Path2D intentionally still exposed in workers?","msgtype":"m.text"},"ts":1476366605000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Probably, given OffscreenCanvas","msgtype":"m.text"},"ts":1476366869000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think at the moment it's probably a mistake","msgtype":"m.text"},"ts":1476366922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: might be a good question for the OffscreenCanvas patch","msgtype":"m.text"},"ts":1476366950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I guess maybe it should have been un-exposed during the interim between CanvasProxy and OffscreenCanvas","msgtype":"m.text"},"ts":1476366966000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"CanvasPath is also exposed","msgtype":"m.text"},"ts":1476366987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<canvas> IDL would really benefit from mixin annotation","msgtype":"m.text"},"ts":1476367026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"NoInterfaceObject mess it has today is rather sad","msgtype":"m.text"},"ts":1476367039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm a little worried that ES might end up defining mixins differently","msgtype":"m.text"},"ts":1476367117000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's a pattern Dart and Ruby use where mixins create a class hierarchy","msgtype":"m.text"},"ts":1476367128000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And if Web IDL uses \"mixin\" as a word and then later ES uses it for something different, that's not great.","msgtype":"m.text"},"ts":1476367157000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"On the other hand ES might be constrained since \"mixin\" is not a keyword currently","msgtype":"m.text"},"ts":1476367168000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It might have to use e.g. \"mixin class\" or something.","msgtype":"m.text"},"ts":1476367178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Alternately Web IDL could use a more esoteric word","msgtype":"m.text"},"ts":1476367197000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm happy to use a different word in IDL","msgtype":"m.text"},"ts":1476367199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe ES should look at the DOM in some other way than \"our stuff should be as far removed from that as possible\", just this once","msgtype":"m.text"},"ts":1476367209000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"IDL could call them \"addon\"","msgtype":"m.text"},"ts":1476367236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: what we have isn't really a language feature or exposed in any way","msgtype":"m.text"},"ts":1476367309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so if they see value in some kind of mixin that is exposed in some way they should feel free to innovate a little bit there I think","msgtype":"m.text"},"ts":1476367330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: what we have is rather magical too in that it adds both public and private state to a class","msgtype":"m.text"},"ts":1476367352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah the thing is it's already easy to do the IDL/DOM pattern in ES (modulo magic private state business)","msgtype":"m.text"},"ts":1476367394000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Object.assign(X.prototype, Y.prototype)","msgtype":"m.text"},"ts":1476367403000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"basically","msgtype":"m.text"},"ts":1476367406000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"internal slots \\o/","msgtype":"m.text"},"ts":1476367407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No need for a syntactic pattern","msgtype":"m.text"},"ts":1476367409000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So if ES is going to have a first-class pattern with syntax, it'd do something more useful than that","msgtype":"m.text"},"ts":1476367431000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And Ruby and Dart and others (apparently both are based on an academic paper) have shown one path that people like","msgtype":"m.text"},"ts":1476367447000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I've been using mixin in prose here and there, but that's easily fixed","msgtype":"m.text"},"ts":1476367474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah it's a good word, I'm kind of loathe to lose it","msgtype":"m.text"},"ts":1476367609000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Might be worth having a small discussion at next TC39 about whether they see a potential keyword conflict in the future","msgtype":"m.text"},"ts":1476367626000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If ES has \"mixin classes\" and IDL has \"mixins\" that'd work OK for me","msgtype":"m.text"},"ts":1476367637000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't suppose there's some way to just get a tarball of chrom[e|ium] e.g. canary is there?","msgtype":"m.text"},"ts":1476368543000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Rather than a deb or whatever","msgtype":"m.text"},"ts":1476368561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html maybe","msgtype":"m.text"},"ts":1476368785000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though you have to wait for it load, and it loads slow","msgtype":"m.text"},"ts":1476368798000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html?prefix=Linux_x64/","msgtype":"m.text"},"ts":1476368809000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and you have to scroll to the bottom and the scroll control is conveniently a disappearing one","msgtype":"m.text"},"ts":1476368840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK, that seems like a thing to experiment with","msgtype":"m.text"},"ts":1476368963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1476368964000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html?prefix=Linux_x64/425016/ seems to be the current latest","msgtype":"m.text"},"ts":1476369015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: it seems the only way to know what subdir/path to get it from is to look in https://www.googleapis.com/download/storage/v1/b/chromium-browser-snapshots/o/Linux_x64%2FLAST_CHANGE?generation=1476368813774000&alt=media","msgtype":"m.text"},"ts":1476369131000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: https://github.com/w3c/web-platform-tests/pull/1381#issuecomment-222450124","msgtype":"m.text"},"ts":1476369406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, put it somewhere obvious maybe with a README","msgtype":"m.text"},"ts":1476369468000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you mean the current place is no good?","msgtype":"m.text"},"ts":1476369506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I can add a comment at the top","msgtype":"m.text"},"ts":1476369512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"adds a comment at the top","msgtype":"m.emote"},"ts":1476369710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess with a comment I don't have a strong opinion","msgtype":"m.text"},"ts":1476369714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"almost nearing 2 years that PR","msgtype":"m.text"},"ts":1476369762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"about time it lands","msgtype":"m.text"},"ts":1476369765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I think you might be missing that sendBeacon() doesn't take Request objects, but maybe I'm missing something obvious","msgtype":"m.text"},"ts":1476379102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... why are we exposing a keepalive attr on Request then?","msgtype":"m.text"},"ts":1476379129000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so you can do sendBeacon()-like things with fetch() and more?","msgtype":"m.text"},"ts":1476379150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it's a more powerful replacement, effectively","msgtype":"m.text"},"ts":1476379178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, back up... does \"keepalive\" mean keeping the Request object alive beyond the JS context?  thats what the title of the PR and spec text changes imply","msgtype":"m.text"},"ts":1476379204000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it means keeping the fetch alive, sure","msgtype":"m.text"},"ts":1476379223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: can't really keep the object around that long if its environment is gone out of the window","msgtype":"m.text"},"ts":1476379244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what is \"the fetch\"?  the PR references \"Request\"... capital R implies the JS object to me","msgtype":"m.text"},"ts":1476379253000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I wouldn't pay attention to the title of the PR","msgtype":"m.text"},"ts":1476379306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is this really saying don't cancel a fetch when the document goes away?","msgtype":"m.text"},"ts":1476379310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yes","msgtype":"m.text"},"ts":1476379315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, the spec text in the PR also says \"This can be used to allow the request to outlive the environment settings object\"... which doesn't necessarily mean an ongoing fetch operation... but ok","msgtype":"m.text"},"ts":1476379446000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: we could clarify the non-normative text, prolly best to open a new issue for that","msgtype":"m.text"},"ts":1476379491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: though it's also about requests of course, that's one part of a fetch","msgtype":"m.text"},"ts":1476379529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think tying the cancelation of the operation to the life of the request object is confusing to me","msgtype":"m.text"},"ts":1476379562000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and probably what I missed here","msgtype":"m.text"},"ts":1476379575000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the Request object isn't really involved with that, but the request is to some extent","msgtype":"m.text"},"ts":1476379616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: keepalive on Request is just some input  for the eventual request","msgtype":"m.text"},"ts":1476379650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1476379801000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"If I'm inserting some JSON.stringified text into a <script>, is there anything else I need to escape, other than </script>?","msgtype":"m.text"},"ts":1476379977000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Jake are you building pages via string concatenation again? Your mother and I raised you better than that, use a real DOM please.","msgtype":"m.text"},"ts":1476381469000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1476381485000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: I'm wanting to embed some JSON from the server for the JS to pick up when it runs","msgtype":"m.text"},"ts":1476381533000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"might be safest to stick it in a data-attribute, since HTML escaping is covered","msgtype":"m.text"},"ts":1476381554000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1476381578000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]