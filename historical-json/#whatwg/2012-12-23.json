[
{"content":{"body":"so no crypto-quality RNG, either?","msgtype":"m.text"},"ts":1356221331000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk: I made 'decode' a method of Encoding objects in my python implementation. It’s a bit weird when the object is actually ignored because of a BOM","msgtype":"m.text"},"ts":1356221984000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"the alternative is to have functions and Encoding objects as parameters, but it’s more stuff to import","msgtype":"m.text"},"ts":1356222026000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"gsnedders: oh absolutely, but the topic was exposing GC behaviour :-)","msgtype":"m.text"},"ts":1356222115000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: i completely agree that we expose all kinds of other crazy behaviour","msgtype":"m.text"},"ts":1356222124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not least of which, with anything that touches the network...","msgtype":"m.text"},"ts":1356222138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or most things that involve the IETF?","msgtype":"m.text"},"ts":1356222219000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"http://www.4dsolutions.net/ocn/cardinality.html","msgtype":"m.text"},"ts":1356239783000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Depends if you're referring to the collection as a value, like the length of keys, or the numbers themselves as things being ordered … sounds like you want the latter - so ordinality works.","msgtype":"m.text"},"ts":1356239913000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hixie: My point was mostly that caching behaviour does expose GC behaviour, and this is what everyone who's optimized like that has done.","msgtype":"m.text"},"ts":1356267482000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: crypto-quality RNG isn't exposing non-determinism in an API that should have none","msgtype":"m.text"},"ts":1356267524000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: so by \"expose\" do you mean something more like \"provide access to information that can be used for evil\", or \"uncover sharp corners for people to injure themselves upon\"?  (And does this mean you think explicit weak references would also be bad?)","msgtype":"m.text"},"ts":1356285896000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"gsnedders: yeah, true","msgtype":"m.text"},"ts":1356292546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: (that's why WeakMap isn't iterable)","msgtype":"m.text"},"ts":1356292606000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: my idea was to use any <th> elements in the first row","msgtype":"m.text"},"ts":1356295236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: I don't understand what you said above","msgtype":"m.text"},"ts":1356295371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, i guess we could use the <th> elements of the first row if there's no <thead>, and if you want something more complicated, you have to use <thead>","msgtype":"m.text"},"ts":1356295398000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: right, that would save me a bunch of typing :)","msgtype":"m.text"},"ts":1356295433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: get_encoding('label').decode(input) vs. decode(input, get_encoding('label'))","msgtype":"m.text"},"ts":1356295445000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: a whole 14 characters!","msgtype":"m.text"},"ts":1356295450000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: (i always use <thead> because it makes styling easier)","msgtype":"m.text"},"ts":1356295463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"although the latter can be abbreviated as decode(input, 'label')","msgtype":"m.text"},"ts":1356295463000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"with functions the parameter can be name fallback_encoding, which makes more sense because of BOM detection","msgtype":"m.text"},"ts":1356295529000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: oh I see, you can do that I suppose, but you should also have a way to implement the decode() from the spec if you want to implement CSS and such ;)","msgtype":"m.text"},"ts":1356295533000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the decode algorithm, I mean","msgtype":"m.text"},"ts":1356295547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, this is the decode algorithm","msgtype":"m.text"},"ts":1356295556000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"the question is where do I put it","msgtype":"m.text"},"ts":1356295562000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well there's a decoder per encoding and there's a more general algorithm that takes into account a bom and treats the label as a fallback in case there's no BOM","msgtype":"m.text"},"ts":1356295611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: seems you're right about the encoding's name thingie, guess I'll fix that now","msgtype":"m.text"},"ts":1356295636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it useful to expose the lower-level decoders?","msgtype":"m.text"},"ts":1356295641000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: there's a few times where other specs (at the moment) directly invoke the lower-level decoder","msgtype":"m.text"},"ts":1356295836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: I guess ideally we should clean that up in due course and document the entry points more clearly, but for now I'm still figuring out what the actual requirements are","msgtype":"m.text"},"ts":1356295879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I’ll keep this for now, and add the lower level decoders later if needed","msgtype":"m.text"},"ts":1356295913000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but they’re just python’s anyway","msgtype":"m.text"},"ts":1356295922000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"quotostrophes","msgtype":"m.text"},"ts":1356295947000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well it's still important, people will look at that code down the road and learn from it","msgtype":"m.text"},"ts":1356295961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you have example of other specs using the lower-level decoder?","msgtype":"m.text"},"ts":1356296038000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: URL","msgtype":"m.text"},"ts":1356296050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but maybe I should a \"bomless decode\" entry-point for that","msgtype":"m.text"},"ts":1356296121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: WIP: http://packages.python.org/webencodings/","msgtype":"m.text"},"ts":1356296271000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Hixie: I was wondering about that point you made the other day. Since \"notification\" has a plural it should be \"notifications\"... Should \"url.spec.whatwg.org\" become \"urls.spec.whatwg.org\" then? Maybe later?","msgtype":"m.text"},"ts":1356296315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: wow cool","msgtype":"m.text"},"ts":1356296376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: why is there get_encoding? seems redundant","msgtype":"m.text"},"ts":1356296461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I’ll probably remove lookup or make get_encoding internal/undocumented","msgtype":"m.text"},"ts":1356296510000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Hixie: same for Encoding...","msgtype":"m.text"},"ts":1356296649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: IETF apparently calls that \"charset\" these days, so weird","msgtype":"m.text"},"ts":1356296675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought there was only one :) http://encoding.spec.whatwg.org/#the-encoding","msgtype":"m.text"},"ts":1356296700000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: sssh don't tell anyone ;)","msgtype":"m.text"},"ts":1356296728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess that \"charset\" is from the days when different encodings always had a different set of supported charcters","msgtype":"m.text"},"ts":1356296774000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"which is still kind of true, but not with UTF-*","msgtype":"m.text"},"ts":1356296785000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah is, but see http://lists.w3.org/Archives/Public/public-html/2012Nov/0188.html","msgtype":"m.text"},"ts":1356296819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh well …","msgtype":"m.text"},"ts":1356296866000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and in particular http://tools.ietf.org/html/rfc6365 referenced later in that thread","msgtype":"m.text"},"ts":1356296870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that RFC actually has different definitions for \"character encoding scheme\" and \"charset\"","msgtype":"m.text"},"ts":1356297123000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"can we say that \"encoding\" is short for \"character encoding scheme\" and move on?","msgtype":"m.text"},"ts":1356297182000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Encoding defines its terms from primitives so it's fine I think","msgtype":"m.text"},"ts":1356297252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think \"encoding\" is fine personally, if we have to make it different at some point, I guess it would be \"text encoding\" because of the API","msgtype":"m.text"},"ts":1356297326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i wouldn't bother changing any of them at this point :-)","msgtype":"m.text"},"ts":1356297332000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sorting-enable table element -> sorting-enable*d* table element","msgtype":"m.text"},"ts":1356297634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1356297710000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: also, all the mutation stuff you want to define in terms of concept-node-append etc. so that mutation observers are well defined","msgtype":"m.text"},"ts":1356297713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1356297720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are parser notifications batched in any way?","msgtype":"m.text"},"ts":1356297729000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't want to have to resort the table with every token/character inserted by the parse...","msgtype":"m.text"},"ts":1356297746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"parser mutations are not defined to that extent as they depend on network latency and such...","msgtype":"m.text"},"ts":1356297821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they only depend on network latency if we do batch","msgtype":"m.text"},"ts":1356297836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i assume that means we batch","msgtype":"m.text"},"ts":1356297845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1356297920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shouldn't sorting start after </table>?","msgtype":"m.text"},"ts":1356297926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not if there's a render between the <Table> and the </table>","msgtype":"m.text"},"ts":1356297943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"otherwise you'll get flicker","msgtype":"m.text"},"ts":1356297946000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you'll get that either way no?","msgtype":"m.text"},"ts":1356297982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you sort before you render, no","msgtype":"m.text"},"ts":1356297999000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(if the table is so big you get multiple renders before it's parsed, then sure)","msgtype":"m.text"},"ts":1356298026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(but they'll look like insertions, not reordering)","msgtype":"m.text"},"ts":1356298038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so it's not so bad)","msgtype":"m.text"},"ts":1356298040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but they'll be insertions at random places, which might be worse than bad","msgtype":"m.text"},"ts":1356298071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not random at all","msgtype":"m.text"},"ts":1356298080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"insertions in the appropriate places to maintain order","msgtype":"m.text"},"ts":1356298087000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. stuff from the end might end up on top and if the table is very big you might have already scanned past that","msgtype":"m.text"},"ts":1356298097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems kinda weird","msgtype":"m.text"},"ts":1356298114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the table is so big as to have multiple renders, it'll be pretty obvious pretty quickly that it's still loading","msgtype":"m.text"},"ts":1356298129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whereas if you only sort once, you really might have read the top of the table before it sorts","msgtype":"m.text"},"ts":1356298158000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: anything else before I release python-webencodings 0.1?","msgtype":"m.text"},"ts":1356298176000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I don't like the web prefix, but that's aesthetics","msgtype":"m.text"},"ts":1356298202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the point is that python supports loads of labels, but for the web you want a specific set of labels","msgtype":"m.text"},"ts":1356298240000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Other encodings not listed could have their use in non-web context","msgtype":"m.text"},"ts":1356298262000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I know, but I want this to be used beyond the web","msgtype":"m.text"},"ts":1356298288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For the web it’s a feature not to have an API to add encodings. In other contexts maybe not","msgtype":"m.text"},"ts":1356298346000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Hixie: the current algorithm also doesn't seem to take into account there could be further parser changes","msgtype":"m.text"},"ts":1356298368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm?","msgtype":"m.text"},"ts":1356298394000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the current algorithm isn't close to complete","msgtype":"m.text"},"ts":1356298403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't even sort yet :-P","msgtype":"m.text"},"ts":1356298406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nor move any rows","msgtype":"m.text"},"ts":1356298412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: e.g. it seems like it might fail for <table sortable><thead><tr> { long wait } <th>","msgtype":"m.text"},"ts":1356298413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkay","msgtype":"m.text"},"ts":1356298420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why would it fail for that?","msgtype":"m.text"},"ts":1356298426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well I guess it depends on how often table sorting algorithm is invoked","msgtype":"m.text"},"ts":1356298491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll be patient :)","msgtype":"m.text"},"ts":1356298497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it shouldn't matter how often it's invoked","msgtype":"m.text"},"ts":1356298504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's observable via the sort event","msgtype":"m.text"},"ts":1356298543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same as mutation events, sure","msgtype":"m.text"},"ts":1356298559000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1356298562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"observers","msgtype":"m.text"},"ts":1356298563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I’m not against changing the name but now is the time :) At least for this python implementation, I think it’s only useful for legacy web content (hence the current name). Otherwise just use python’s stdlib","msgtype":"m.text"},"ts":1356298582000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: seems http://packages.python.org/encoding/ is available ;)","msgtype":"m.text"},"ts":1356298695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: I'd aim to become the stdlib","msgtype":"m.text"},"ts":1356298710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1356298718000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"one step at a time","msgtype":"m.text"},"ts":1356298723000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and they say \"python stdlib is where modules go to die\"","msgtype":"m.text"},"ts":1356298740000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"with multi-year update cycles","msgtype":"m.text"},"ts":1356298754000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"not great for a living standard","msgtype":"m.text"},"ts":1356298761000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1356298775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like web standards getting implemented by browsers","msgtype":"m.text"},"ts":1356298802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except given that Python is kinda centralized, that's not too great","msgtype":"m.text"},"ts":1356298820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some modules like json are great in the stdlib once they are basically \"done\", but most are better of outside of the stdlib","msgtype":"m.text"},"ts":1356298845000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"s/better of/better off/","msgtype":"m.text"},"ts":1356298857000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"plus, a good part of the ecosystem is stuck on python 2.7 because they have dependencies not ported to py3 yet; and 2.8 is not gonna happen","msgtype":"m.text"},"ts":1356298945000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: anyway, yes http://packages.python.org/encoding/ is available but I’m still not convinced this is useful outside of the web","msgtype":"m.text"},"ts":1356299069000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"is the iana charset registry useful outside the web?","msgtype":"m.text"},"ts":1356299093000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no idea. http://docs.python.org/2/library/codecs.html#standard-encodings does not refer to anything","msgtype":"m.text"},"ts":1356299146000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"is the iana charset registry useful on the web? heh","msgtype":"m.text"},"ts":1356299185000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Release time. I can always rename later.","msgtype":"m.text"},"ts":1356299541000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: dude, supporting <th> in first <tr> is a huge pain","msgtype":"m.text"},"ts":1356299623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1356299635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you sure you can't be bothered to put in 14 characters in your sortable tables?","msgtype":"m.text"},"ts":1356299637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(have to support things like figuring out rowspans in the first <tr> of the first <tbody> then sorting the cells after that tbody, etc","msgtype":"m.text"},"ts":1356299667000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1356299670000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"continues to try to make it work","msgtype":"m.emote"},"ts":1356299686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: shouldn't that row have the same restrictions as the row in <thead>?","msgtype":"m.text"},"ts":1356299748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in <thead> it's easy because i just skip the whole <thead>","msgtype":"m.text"},"ts":1356299766000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm I guess not","msgtype":"m.text"},"ts":1356299767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"without worrying about rowspans :-)","msgtype":"m.text"},"ts":1356299771000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1356299772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"adding <thead>/<tbody> is not too hard, it just seems like a weird requirement","msgtype":"m.text"},"ts":1356299798000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not quite as intuitive as <table sortable> makes you believe, so to say","msgtype":"m.text"},"ts":1356299820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'll make it work","msgtype":"m.text"},"ts":1356299831000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just a pain :-)","msgtype":"m.text"},"ts":1356299834000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"could you have <thead> and omit <tbody>?","msgtype":"m.text"},"ts":1356299877000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yes, though in practice <tbody> is implied when <thead> ends in text/html so that doesn't make much difference","msgtype":"m.text"},"ts":1356299911000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually it's one more character to do that (<thead></thead> vs <thead><tbody>)","msgtype":"m.text"},"ts":1356299923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"will somebody please think of the characters!","msgtype":"m.text"},"ts":1356299948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I’m still not used to having that much stuff close implicitly","msgtype":"m.text"},"ts":1356300018000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"there is a fine line between omitting optional stuff because you know the details of the parsing algorithm, and throwing tag soup at the wall and seeing what sticks","msgtype":"m.text"},"ts":1356300144000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I’m comfortable with `display: table-cell`, but only since I implemented the algorithm that generates the related anonymous boxes","msgtype":"m.text"},"ts":1356300271000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It seems the GitHub - Twitter bridge is broken","msgtype":"m.text"},"ts":1356300373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even though GitHub reports it as working :/","msgtype":"m.text"},"ts":1356300384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k, think i got it","msgtype":"m.text"},"ts":1356300652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also added support for ignoring rows with just <th>s","msgtype":"m.text"},"ts":1356300666000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at the top of row groups","msgtype":"m.text"},"ts":1356300671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as in the big input thing","msgtype":"m.text"},"ts":1356300690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw, did you come across any tables that wanted their rows sorted? not that I think we should support that, just curious","msgtype":"m.text"},"ts":1356300978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"euh, columns sorted, doh","msgtype":"m.text"},"ts":1356300987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have not heard any desire to do that from anyone except people like you and tab asking me if i should support it :-)","msgtype":"m.text"},"ts":1356301011000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hides in his ivory tower","msgtype":"m.emote"},"ts":1356301091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow, whoever's been messing with the address bar in opera doesn't really \"get\" it","msgtype":"m.text"},"ts":1356302360000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seems like it basically hides everything but the host and path, as if they've confused the address bar with the title bar","msgtype":"m.text"},"ts":1356302378000,"senderName":"zewt","senderId":"zewt@irc"}
]