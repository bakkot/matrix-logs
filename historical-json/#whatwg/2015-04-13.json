[
{"content":{"body":"MikeSmith: you around?","msgtype":"m.text"},"ts":1428909052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: are you okay with giving @dstorey access to platform.html5.org directly?","msgtype":"m.text"},"ts":1428909069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: here now","msgtype":"m.text"},"ts":1428910106000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah David should just have push access","msgtype":"m.text"},"ts":1428910119000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or even owner perms","msgtype":"m.text"},"ts":1428910138000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah but if we give somebody owner perms to one repo then we hit the issue that then have owner perms for everything else in the whole whatwg github org too","msgtype":"m.text"},"ts":1428910277000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least that's still the way the github ACLs worked last time I checked","msgtype":"m.text"},"ts":1428910303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I added a team","msgtype":"m.text"},"ts":1428910604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the new policy is that one of the owners creates a team for the repo and just adds people there","msgtype":"m.text"},"ts":1428910626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"add*","msgtype":"m.text"},"ts":1428910633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1428910635000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's the best way I think","msgtype":"m.text"},"ts":1428910656000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: your msdn quirks mode link appears broken. i found https://msdn.microsoft.com/en-us/library/gg558056(v=vs.85).aspx , not sure if it's the same as your original link","msgtype":"m.text"},"ts":1428914375000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: or maybe https://msdn.microsoft.com/en-us/library/ff406036(v=vs.85).aspx or https://msdn.microsoft.com/en-us/library/cc288325(VS.85).aspx","msgtype":"m.text"},"ts":1428914554000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"notes msdn has nice diagrams for this","msgtype":"m.emote"},"ts":1428914668000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"........ wat https://msdn.microsoft.com/en-us/library/hh834788(v=vs.85).aspx","msgtype":"m.text"},"ts":1428914743000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: I also opened issues for whatwg/platform.html5.org","msgtype":"m.text"},"ts":1428916759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've been looking at how to handle a click at a particular location on a canvas that has been translated and rotated.  It seems that Canvas's context is lacking a getCurrentTransform().  A bit of googling finds https://bugzilla.mozilla.org/show_bug.cgi?id=408804 then https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/currentTransform","msgtype":"m.text"},"ts":1428916869000,"senderName":"pi-","senderId":"pi-@irc"},
{"content":{"body":"It seems rather scary to me that such a basic thing still hasn't made its way in...","msgtype":"m.text"},"ts":1428916897000,"senderName":"pi-","senderId":"pi-@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/scripting.html#transformations <-- it seems to be in the living standard. But only Chrome has implemented it as far as I can see.","msgtype":"m.text"},"ts":1428917038000,"senderName":"pi-","senderId":"pi-@irc"},
{"content":{"body":"hsivonen: r? https://bugzilla.mozilla.org/attachment.cgi?id=8591559&action=edit","msgtype":"m.text"},"ts":1428917766000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: issues? /me looks","msgtype":"m.text"},"ts":1428917774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I guess you mean you enabled the issue tracker for the repo?","msgtype":"m.text"},"ts":1428917823000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you couldn't raise issues before, I don't think anyone has raised any yet though in the couple of minutes since I opened them ;-)","msgtype":"m.text"},"ts":1428917825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1428917829000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I didn't know we didn't have it enabled before","msgtype":"m.text"},"ts":1428917846000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah surprised me too","msgtype":"m.text"},"ts":1428917858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In general I'm moving towards GitHub issues for specifications","msgtype":"m.text"},"ts":1428917881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic was right","msgtype":"m.text"},"ts":1428917921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah Github has won","msgtype":"m.text"},"ts":1428918096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"speaking of Github I wish the http://hg.mozilla.org/projects/htmlparser/ sources had a real home in Github","msgtype":"m.text"},"ts":1428918299000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess mozilla-central is mirrored in Github","msgtype":"m.text"},"ts":1428918339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno why that projects tree isn't yet","msgtype":"m.text"},"ts":1428918359000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Because no one cares about it, I guess","msgtype":"m.text"},"ts":1428918420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well that's sad then","msgtype":"m.text"},"ts":1428918430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"someone should care","msgtype":"m.text"},"ts":1428918437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, I care","msgtype":"m.text"},"ts":1428918441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"others should care like I do","msgtype":"m.text"},"ts":1428918446000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess there are higher priority things to work on than mirroring little-used trees onto gh","msgtype":"m.text"},"ts":1428918495000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"christ","msgtype":"m.text"},"ts":1428918521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, that's the right attitude to have","msgtype":"m.text"},"ts":1428918537000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Honestly, you should be glad that no one has managed to get it moved into m-c yet","msgtype":"m.text"},"ts":1428918543000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1428918549000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"true I guess","msgtype":"m.text"},"ts":1428918556000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"point taken","msgtype":"m.text"},"ts":1428918569000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"counts his blessings","msgtype":"m.emote"},"ts":1428918583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"There's a group of people who believe that having a single repo with all Mozilla-related code in is a great idea because it solves versioning problems","msgtype":"m.text"},"ts":1428918592000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh boy","msgtype":"m.text"},"ts":1428918598000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The argument is \"it works for Facebook and Google, so it must be good\"","msgtype":"m.text"},"ts":1428918615000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure yeah it solves that one problem of course","msgtype":"m.text"},"ts":1428918616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1428918619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Seriously","msgtype":"m.text"},"ts":1428918624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah I hear that argument a lot","msgtype":"m.text"},"ts":1428918626000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jesus","msgtype":"m.text"},"ts":1428918628000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well those people should get re-educated","msgtype":"m.text"},"ts":1428918646000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Anyway, I'm hoping that pointing out that Facebook and Google have ~0 external contributers whereas Mozilla has many is enoeugh of a clue that we might have different needs","msgtype":"m.text"},"ts":1428918697000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"bingo","msgtype":"m.text"},"ts":1428918708000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you could start a GitHub mirror perhaps?","msgtype":"m.text"},"ts":1428918733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: well please continue to fight the good fight there","msgtype":"m.text"},"ts":1428918740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: did already https://github.com/validator/htmlparser/","msgtype":"m.text"},"ts":1428918758000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I just prefer to make other people do work for me whenever I can","msgtype":"m.text"},"ts":1428918774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not that it's a huge amount of work","msgtype":"m.text"},"ts":1428918824000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I just don't have it automated","msgtype":"m.text"},"ts":1428918834000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the mirroring I mean","msgtype":"m.text"},"ts":1428918861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I could automate more of it instead of complaining","msgtype":"m.text"},"ts":1428918865000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: It's possible that if you file a bug on releng they could add it to the list of repos mirrored on gh","msgtype":"m.text"},"ts":1428918886000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1428918894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1428918896000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do that","msgtype":"m.text"},"ts":1428918908000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: alternative API would be to expose client request contexts as a static on Request; might also be useful for other things; or we could have both, meh","msgtype":"m.text"},"ts":1428922801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Question about English, if you have \"the range 0x00 to 0xFF\" is that unambiguous or should I really start using \"the range 0x00 to 0xFF inclusive\"? Does the latter notation require a comma?","msgtype":"m.text"},"ts":1428922985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This affects the Encoding Standard the most, but also various other features elsewhere","msgtype":"m.text"},"ts":1428923032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think people assume inclusive unless otherwise stated, but a mathematician would be annoyed by the lack of specificity","msgtype":"m.text"},"ts":1428923089000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"English or American mathematician?","msgtype":"m.text"},"ts":1428923143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Either?","msgtype":"m.text"},"ts":1428923161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems ECMAScript uses both styles (with a comma for the latter)","msgtype":"m.text"},"ts":1428923217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, ECMAScript uses a number of styles...","msgtype":"m.text"},"ts":1428923338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I guess I should start adding \", inclusive\" then or use \"the inclusive range\"...","msgtype":"m.text"},"ts":1428923452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I prefer \", inclusive\" fwiw","msgtype":"m.text"},"ts":1428923490000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: any particular reason?","msgtype":"m.text"},"ts":1428923527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: so that the word is closer to the actual range?","msgtype":"m.text"},"ts":1428923560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It sounds better","msgtype":"m.text"},"ts":1428923563000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"As a mathematician, this isn't anywhere near the top of my specificity complaints :)","msgtype":"m.text"},"ts":1428923614000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Are we now talking CSS?","msgtype":"m.text"},"ts":1428923649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ha","msgtype":"m.text"},"ts":1428923674000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"As a non-mathematician, my top specificity complaint is Ms2ger's lack of specificity about his top specificity complaints","msgtype":"m.text"},"ts":1428923738000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Go look at dark matter :)","msgtype":"m.text"},"ts":1428923788000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The thing about dark matter, it's main distinguishing feature, is that it's dark.","msgtype":"m.text"},"ts":1428923851000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1428923878000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(with apologies to Red Dwarf)","msgtype":"m.text"},"ts":1428923896000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although they probably didn't put in a bogus apostrophy","msgtype":"m.text"},"ts":1428923925000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://twitter.com/robinberjon/status/587564856406122496 from darobin","msgtype":"m.text"},"ts":1428923925000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Have any of you tried https://reviewable.io/  for GitHub code reviews? I’d love to hear how you feel it compares to Critic for instance.\"","msgtype":"m.text"},"ts":1428923957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: So would I","msgtype":"m.text"},"ts":1428923994000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I imagine it's more polished, at least :)","msgtype":"m.text"},"ts":1428924011000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's not stretching your imagination much 😀","msgtype":"m.text"},"ts":1428924055000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"personally I guess I don't care so much about polish","msgtype":"m.text"},"ts":1428924087000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think Critic gets the job done pretty well","msgtype":"m.text"},"ts":1428924097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Seems like the sort of thing that is hoping to exit by being bought by Google and then shut down. Or, in the best case, GitHub and then shut down.","msgtype":"m.text"},"ts":1428924127000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the Critic UX quirks aren't too painful","msgtype":"m.text"},"ts":1428924130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah maybe so","msgtype":"m.text"},"ts":1428924138000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I guess I should take a look","msgtype":"m.text"},"ts":1428924178000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"might actually be good","msgtype":"m.text"},"ts":1428924189000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, yeah, I agree, it might be great!","msgtype":"m.text"},"ts":1428924210000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have to say I'm baffled by the UI at first glance though","msgtype":"m.text"},"ts":1428924226000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah?","msgtype":"m.text"},"ts":1428924236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I would think for $279 / month you shouldn't be initially baffled by the UI","msgtype":"m.text"},"ts":1428924283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well https://reviewable.io/reviews/Reviewable/demo/1 has a table with like 3 different barely-distinguishable colours and some eye icons and some brackets that move when you click","msgtype":"m.text"},"ts":1428924289000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1428924299000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And I don't know what any of that means :)","msgtype":"m.text"},"ts":1428924300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh man yeah","msgtype":"m.text"},"ts":1428924340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, the brackets seem to be a revision range, but I'm not sure where that applies","msgtype":"m.text"},"ts":1428924364000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah it lets you narrow to the range","msgtype":"m.text"},"ts":1428924418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what range I don't know","msgtype":"m.text"},"ts":1428924425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"are they revision numbers?","msgtype":"m.text"},"ts":1428924432000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what are r1-r4","msgtype":"m.text"},"ts":1428924449000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and what is that upside-down T thing","msgtype":"m.text"},"ts":1428924520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no tooltips on hover to provide clues","msgtype":"m.text"},"ts":1428924559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Anyway I would say set it up on some repo and try it out","msgtype":"m.text"},"ts":1428924663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think I will wait for darobin to do that","msgtype":"m.text"},"ts":1428924711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my initial reaction is that it's no less unintuitive than Critic is","msgtype":"m.text"},"ts":1428924749000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and wouldn't seem to have any less of a learning curve","msgtype":"m.text"},"ts":1428924760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: in terms of ranges, I think being specific is best. \"You can take between 3 and 5 sweets\", I assume taking 3 and 5 is acceptable. \"Drinks are cheaper between 15:00-17:00\", I assume drinks are more expensive at 17:00.","msgtype":"m.text"},"ts":1428924885000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: JakeA: here's Fetch using \", inclusive\": https://github.com/whatwg/fetch/commit/6bfbf2c55fe4991bb9b4b2f5c0377fdd626aa58f","msgtype":"m.text"},"ts":1428926970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1428927015000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Looks good.","msgtype":"m.text"},"ts":1428927284000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith, jgraham: part of my interest isn't just the UI (which seems to be more or less on par with Critic except with nicer colours) but also the ease of setting up for new repos","msgtype":"m.text"},"ts":1428928069000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: Weirdly (and I never thought I would say this), I dispute the nicer colours :p I acutally found the use of colour hard to understand.","msgtype":"m.text"},"ts":1428928177000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah, it's a matter of taste there, I fully agree","msgtype":"m.text"},"ts":1428928252000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"FWIW, if I were looking for alternatives to critic, \"easier to set up\" would not be a big deciding factor. I mean critic is not that hard to set up. \"Better supported\", \"more reliable\" and \"equally good workflow\" would be the deciding aspects for me","msgtype":"m.text"},"ts":1428928345000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My main concern with using it would be whether it's going to be Yet Another Shortlived-Sharecropping-Startup","msgtype":"m.text"},"ts":1428928490000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham++ # Galápagos Syndrome","msgtype":"m.text"},"ts":1428929904000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: yeah, I just wanted to put it out there as an option for people to experiment with","msgtype":"m.text"},"ts":1428929928000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"if it does get used, we'll need a way to back up the data","msgtype":"m.text"},"ts":1428929937000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Domenic: any reason streams expose a view rather than the buffer?","msgtype":"m.text"},"ts":1428930052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/yutakahirano/fetch-with-streams/pull/34","msgtype":"m.text"},"ts":1428930053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: my guess is its a convenience","msgtype":"m.text"},"ts":1428932636000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but an opinionated one","msgtype":"m.text"},"ts":1428932642000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, it seems you might get network data you want to read as int32 or some such","msgtype":"m.text"},"ts":1428932754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wrote in the issue... but you can use .buffer to convert to the other view","msgtype":"m.text"},"ts":1428932774000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I believe","msgtype":"m.text"},"ts":1428932777000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sure","msgtype":"m.text"},"ts":1428932781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: but that's still a layer of abstraction added that you might not need/want","msgtype":"m.text"},"ts":1428932793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think this is really people saying \"I don't like ArrayBuffer\" :-)","msgtype":"m.text"},"ts":1428932802000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: and an extra object allocation","msgtype":"m.text"},"ts":1428932802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: well, Typed Arrays happened and TC39 let it go","msgtype":"m.text"},"ts":1428932836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: do envision types like ReadableStream being DOM interfaces or being part of the js engine?","msgtype":"m.text"},"ts":1428934432000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: asking since streams is a whatwg spec... which I guess seems DOM related to me and less a language thing","msgtype":"m.text"},"ts":1428934461000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: he prefers that they are indistinguishable","msgtype":"m.text"},"ts":1428934465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: from content sure","msgtype":"m.text"},"ts":1428934562000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://github.com/servo/html5ever/pull/125","msgtype":"m.text"},"ts":1428935801000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wanderview: this is an area where my view of the world and what is differ enough that my opinion shouldn't be taken too seriously ... IMO I think URL, Encoding, and Streams should all be implemented as part of the JS engine. In reality, V8 at least says they'd rather only have one standards body to look to for consensus on what to implement.","msgtype":"m.text"},"ts":1428935874000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: a view gives the tuple (buffer, bytesRead, offset) https://esdiscuss.org/topic/idiomatic-representation-of-buffer-bytesread which is useful when re-using buffers","msgtype":"m.text"},"ts":1428935952000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I see, so we assume some kind of new transfer semantic to appear?","msgtype":"m.text"},"ts":1428936061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that we don't want developers to use themselves?","msgtype":"m.text"},"ts":1428936072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: in the long run I probably want the outer stream objects (ReadableStream/WritableStream) in spidermonkey so I can self-host and avoid js->c++->js penalties for pure js streams","msgtype":"m.text"},"ts":1428936081000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer","msgtype":"m.text"},"ts":1428936173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: yeah that's what Safari seems to be doing looking at their code","msgtype":"m.text"},"ts":1428936187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: sure, but your proposal is that streams invokes that API rather than the developer, right?","msgtype":"m.text"},"ts":1428936207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it hides it from them in general, since it needs to enforce that the buffers get detached.","msgtype":"m.text"},"ts":1428936238000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: and I'm going to Munich in a week to work on self-hosted streams as a \"V8 extension\"... would still live inside the Blink codebase though","msgtype":"m.text"},"ts":1428936296000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: you won't be in SF the week of April 20?","msgtype":"m.text"},"ts":1428936331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I think I'm going to try to get some kind of system level test running","msgtype":"m.text"},"ts":1428936335000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: only the 24th... regretting it now","msgtype":"m.text"},"ts":1428936341000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: say hi to Jochen and Mike :-)","msgtype":"m.text"},"ts":1428936375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh yeah don't you live nearby there now?","msgtype":"m.text"},"ts":1428936394000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: reasonably but still some mountains away","msgtype":"m.text"},"ts":1428936428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is trying to digest the ArrayBufferView vs ArrayBuffer arguments","msgtype":"m.emote"},"ts":1428936505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... is mootools broken by es6 again?","msgtype":"m.text"},"ts":1428936581000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it never ends :>","msgtype":"m.text"},"ts":1428936597000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we must make a pact to no longer implement any es6 features until jsfiddle stops using mootools","msgtype":"m.text"},"ts":1428936623000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"caitp: this happened with ES5 too","msgtype":"m.text"},"ts":1428936650000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1428936668000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: the test I am planning:  node server that constantly sends Message blocks containing a timestamp, fetch() body stream, Transform to parse Message blocks, WritableStream consumer that does fetch() PUT to send timestamp back to server, server compares current time to received timestamp","msgtype":"m.text"},"ts":1428936787000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: then I will measure throughput (messages per second) and latency (timestamp differences)","msgtype":"m.text"},"ts":1428936818000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: is that an adequate system test for you?","msgtype":"m.text"},"ts":1428936827000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It's sad that Mootools is still causing this much in way of problems and didn't fix all the problems when it first happened…","msgtype":"m.text"},"ts":1428936858000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"maybe an extra Transform in there to trigger .read() on the output of parse Transform","msgtype":"m.text"},"ts":1428936875000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yes, thank you :). Will you be doing tests of e.g. manually-scheduled microtasks to eliminate impl-specific promise overhead? (I haven't caught up on that thread yet.)","msgtype":"m.text"},"ts":1428936878000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or just a manual read loop","msgtype":"m.text"},"ts":1428936881000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I was not planning to do manually scheduled microtasks, no...","msgtype":"m.text"},"ts":1428936898000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I was just going to prototype fetch body streams to test possible implementations in the browser...  if I can do it in a day or two","msgtype":"m.text"},"ts":1428936932000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think that would be prudent. Unless we believe promises will be forever slow, we shouldn't necessarily draw conclusions from their current performance, but instead look at the performance of lower-level primitives like microtasks.","msgtype":"m.text"},"ts":1428936973000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the code trevnorris posted suggests to me its not the async schedule that was the problem, but instead the GC/CC","msgtype":"m.text"},"ts":1428936981000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: right, so the question is do we ever believe promises will get good GC support, or do we design against the current landscape?","msgtype":"m.text"},"ts":1428937019000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: its really hard to reason about possible future optimizations...","msgtype":"m.text"},"ts":1428937029000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: unless its a well known optimization as was the case with the \"generators make a function each time\" thing","msgtype":"m.text"},"ts":1428937044000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^function^objet","msgtype":"m.text"},"ts":1428937062000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"object","msgtype":"m.text"},"ts":1428937065000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, I'm no expert, but it seems like there are two well-known optimizations here that are not being applied (although they might be hard)","msgtype":"m.text"},"ts":1428937076000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"1) for p.then(), if the return value is not used, don't allocate it","msgtype":"m.text"},"ts":1428937083000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"2) for var q = p.then(f, r); var w = q.then(f2, r2), since q only lives for one turn, make sure it stays in the young generation","msgtype":"m.text"},"ts":1428937130000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I asked about (2) today... its unclear if we can do that in gecko any time soon","msgtype":"m.text"},"ts":1428937158000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Maybe ask Mark Miller? He's been doing research into this for a long time, no?","msgtype":"m.text"},"ts":1428937200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same in V8","msgtype":"m.text"},"ts":1428937201000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"just unclear we want to design an API to work around it, or we want to use the existence of an API that stress-tests promises to put pressure on the engines to compete on performance","msgtype":"m.text"},"ts":1428937230000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if we have a real system test we can also more easily profile to see what the bottle neck is... maybe reason about what possible optimizations would do","msgtype":"m.text"},"ts":1428937277000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"i wonder what chakra does...","msgtype":"m.text"},"ts":1428937280000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: yeah, that's a good point","msgtype":"m.text"},"ts":1428937286000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if its GC/CC, though... I guess thats hard to predict","msgtype":"m.text"},"ts":1428937293000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"e.g. sub in a promise implementation that is non-comformant and doesn't return anything from .then","msgtype":"m.text"},"ts":1428937303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: my gut is that we are unlikely to see 300% improvements... but maybe there is a tipping point for number of objects which would grant that kind of improvement","msgtype":"m.text"},"ts":1428937320000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: can you go into a bit more depth on #1 , it seems like it would need to know if the promise will eventually have a .then attached?","msgtype":"m.text"},"ts":1428937331000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: I meant in the case where it clearly does not, via escape analysis","msgtype":"m.text"},"ts":1428937345000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1428937355000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Domenic: also, I was going to implement sync, async-with-promise, and async-with-callback if I can","msgtype":"m.text"},"ts":1428937383000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if I can without clamping the callback","msgtype":"m.text"},"ts":1428937388000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bradleymeck: like the code literally `p.then(f, r)`, the return value is not used (equivalent to `{ let q = p.then(f, r); }`)","msgtype":"m.text"},"ts":1428937389000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I would love more escape analysis optimizations they are fancy and can do magical things","msgtype":"m.text"},"ts":1428937391000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I think I can expose an intrinsic which does that","msgtype":"m.text"},"ts":1428937399000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yea, that would be nice","msgtype":"m.text"},"ts":1428937401000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"wanderview: yeah makes sense, the general integration-test-framework seems like a great place to start with and then tweak the guts of.","msgtype":"m.text"},"ts":1428937419000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: also I think we should not trust benchmark.js and just do more manual looping... or at least make it optional... I think it is largely the source of our timer woes","msgtype":"m.text"},"ts":1428937447000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: my only fear is that this may take me a week or so... and the implementation of async read ship is sailing away","msgtype":"m.text"},"ts":1428937448000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: you brought benchmark.js to the party :-)","msgtype":"m.text"},"ts":1428937471000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but sure","msgtype":"m.text"},"ts":1428937477000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, well we needed something that would run the test more than once to get rid of the crazy variance, but little did i know...","msgtype":"m.text"},"ts":1428937494000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm just going to let this thing run open loop... stream data from server to browser and back to server as fast as possible... then dump latency and throughput number continuously","msgtype":"m.text"},"ts":1428937514000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: it seems like https://docs.google.com/document/d/1IGYl_rxnqEvzmdAP9AJQYY2i2Uy_sW-cg9QI9ICe-ww/edit should have some attribution","msgtype":"m.text"},"ts":1428937526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well... periodically","msgtype":"m.text"},"ts":1428937528000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: post it somewhere public? would like other people's benchmarks that aren't from me or trevor","msgtype":"m.text"},"ts":1428937549000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"annevk: somebody just browsing to that URL from somehwere may otherwise have no clue where it came from","msgtype":"m.text"},"ts":1428937572000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bradleymeck: of course!  it will be in the github issue once its working","msgtype":"m.text"},"ts":1428937598000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1428937605000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"MikeSmith: I recommend asking Richard Barnes directly, not sure I have editing rights","msgtype":"m.text"},"ts":1428937626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"steps away for a bit","msgtype":"m.emote"},"ts":1428937636000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1428937661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Is https://whatwg.org/style/specification in a repository somewhere?","msgtype":"m.text"},"ts":1428941878000,"senderName":"SamB_7","senderId":"SamB_7@irc"},
{"content":{"body":"I really wish it were","msgtype":"m.text"},"ts":1428941919000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1428942053000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Hixie: ^","msgtype":"m.text"},"ts":1428942079000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that should really go into https://github.com/whatwg/resources.whatwg.org","msgtype":"m.text"},"ts":1428942093000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"you'd think, yeah","msgtype":"m.text"},"ts":1428942109000,"senderName":"SamB_7","senderId":"SamB_7@irc"},
{"content":{"body":"I think Allen just adopted another piece of https://streams.spec.whatwg.org/#conventions ... ES spec is slowly becoming more readable. https://bugs.ecmascript.org/show_bug.cgi?id=4273","msgtype":"m.text"},"ts":1428942611000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Streams's \"call-with-rethrow\" => ES's new \"Perform\")","msgtype":"m.text"},"ts":1428942627000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe not: https://twitter.com/awbjs/status/587654507997167618","msgtype":"m.text"},"ts":1428943025000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"oh :(","msgtype":"m.text"},"ts":1428943039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think we have some of those, but honestly I'd rather do something like Assert-does-not-throw","msgtype":"m.text"},"ts":1428943071000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do you think it would be possible to make the ReadableStream lock a function of the underlying source?","msgtype":"m.text"},"ts":1428943216000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm say more...","msgtype":"m.text"},"ts":1428943225000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for the case where the underlying source is native... its really the place I want to lock instead of js outer object... for example, to prevent Response.text() which is also implemented in c++","msgtype":"m.text"},"ts":1428943264000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I can do this with equivalent magic, but doesn't need to be in the spec","msgtype":"m.text"},"ts":1428943300000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm does this have user-observable implications though?","msgtype":"m.text"},"ts":1428943303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1428943307000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean conceptually Response.text() does this.body.getReader()","msgtype":"m.text"},"ts":1428943315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And presumably will be specced that way?","msgtype":"m.text"},"ts":1428943324000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I'm open to ideas here if we can develop them a bit more.","msgtype":"m.text"},"ts":1428943352000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't remember what the fetch-with-streams thing says","msgtype":"m.text"},"ts":1428943354000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah yeah it does. They all indirect through \"Response's associated consume body algorithm\" which acquires a reader","msgtype":"m.text"},"ts":1428943432000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what is this \"lock\" of which you speak?","msgtype":"m.text"},"ts":1428943462000,"senderName":"SamB_7","senderId":"SamB_7@irc"},
{"content":{"body":"It then says \"Let chunks be the result of using implementation-specific mechanisms to repeatedly read from stream, using the exclusive access granted by reader, until stream becomes closed or errored.\" which IMO is a nice turn of phrase.","msgtype":"m.text"},"ts":1428943472000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"did JS get threading or something?","msgtype":"m.text"},"ts":1428943477000,"senderName":"SamB_7","senderId":"SamB_7@irc"},
{"content":{"body":"SamB_7: https://streams.spec.whatwg.org/#locking","msgtype":"m.text"},"ts":1428943481000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"SamB_7: its a lock on a stream","msgtype":"m.text"},"ts":1428943487000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I don't understand the reusing buffers argument and I'm having trouble finding a good reference for it","msgtype":"m.text"},"ts":1428944466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: let me update one of the old examples","msgtype":"m.text"},"ts":1428944477000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: btw, if you think you will have a self-hosted Transform next week, we could run my integration test in both firefox and chrome... that would help isolate implementation issues","msgtype":"m.text"},"ts":1428944629000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: tyoshino's patch to remove setTimeout from benchmark.js does help a lot, btw... even bluebird avoids the clamping now","msgtype":"m.text"},"ts":1428944771000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://gist.github.com/domenic/dab9e8da245cb4fe6027","msgtype":"m.text"},"ts":1428944971000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: hmm ok, I can try to do that... hmm.","msgtype":"m.text"},"ts":1428945009000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"lunches","msgtype":"m.emote"},"ts":1428945032000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: doesn't that reuse the view, not the buffer?","msgtype":"m.text"},"ts":1428945073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I sort of get it now","msgtype":"m.text"},"ts":1428945510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders why the underlying source wouldn't just be locked to the stream itself?","msgtype":"m.emote"},"ts":1428945617000,"senderName":"SamB_7","senderId":"SamB_7@irc"},
{"content":{"body":"annevk: each result.value is a distinct view, backed by the same buffer","msgtype":"m.text"},"ts":1428947330000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but different parts of that buffer?","msgtype":"m.text"},"ts":1428951024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nah same part, when you're passing it back in to .read() you're saying \"I don't want these bytes any more, please overwrite them.\"","msgtype":"m.text"},"ts":1428951057000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what happens to the old references of the buffer while you write to it asynchronously?","msgtype":"m.text"},"ts":1428951057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, I have to be more careful about what I mean by same \"buffer.\" Different array buffer, same backing memory","msgtype":"m.text"},"ts":1428951085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so how can that not work if you simply return an ArrayBuffer?","msgtype":"m.text"},"ts":1428951115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we'd need to return { buffer, bytesRead }","msgtype":"m.text"},"ts":1428951127000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: why can't you allocate an ArrayBuffer of the correct size?","msgtype":"m.text"},"ts":1428951162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because then it will continually shrink as you keep passing it through the funnel...","msgtype":"m.text"},"ts":1428951195000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(typing out a scenario here)","msgtype":"m.text"},"ts":1428951249000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I was imagining you'd have chunk size separate","msgtype":"m.text"},"ts":1428951256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and just allocate for whatever you read","msgtype":"m.text"},"ts":1428951304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Allocate 10 MiB ArrayBuffer ab. Pass it into read() which transfers it to a new 10 MiB ArrayBuffer ab2 and then passes that to read(2) or equivalent. read(2) only gets 2 MiB from the socket. So now we transfer the backing memory to a new ArrayBuffer ab3 of size 2 MiB, which we return the user. But what happened to the extra 8 MiB? It was released as free","msgtype":"m.text"},"ts":1428951329000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"since nobody has an ArrayBuffer that references it anymore.","msgtype":"m.text"},"ts":1428951329000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(so now you pass back in ab3 to another call to read(), but the most you can get is 2 MiB... maybe it gives you back 512 KiB, freeing the other 1.5 MiB ... sad times.)","msgtype":"m.text"},"ts":1428951410000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If we didn't have to do the transfer thing, we could just return Promise<number of bytes read> and modify the buffer in place","msgtype":"m.text"},"ts":1428951561000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Since we have to transfer it becomes Promise<{ newBufferWithSameBackingMemory, bytesRead }>, which we collapse into Promise<ABC>","msgtype":"m.text"},"ts":1428951596000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"*ABV","msgtype":"m.text"},"ts":1428951600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Thanks for going into detail","msgtype":"m.text"},"ts":1428951713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds reasonable, will probably have to review tomorrow","msgtype":"m.text"},"ts":1428951723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any time, thanks for the review","msgtype":"m.text"},"ts":1428951738000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: too speedy https://cloudup.com/cbFFdNafldu","msgtype":"m.text"},"ts":1428954041000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Domenic: I guess I would slice the buffer if the \"available bytes\" was something huge... cap it some value to avoid blowing up memory with a single contiguous buffer","msgtype":"m.text"},"ts":1428954109000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"miketaylr: ba dum tsss","msgtype":"m.text"},"ts":1428954136000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: any way to do appendices in Bikeshed?","msgtype":"m.text"},"ts":1428955078000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I mean, you can just add an appendix.  It's a section like any other.  What are you wanting, specifically?","msgtype":"m.text"},"ts":1428955134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: starting with A instead of a number, I guess.","msgtype":"m.text"},"ts":1428955186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Nothing special for that, no.","msgtype":"m.text"},"ts":1428955201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just put \"Appendix A: Foo\" in the title.","msgtype":"m.text"},"ts":1428955211000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh \"7: Appendix A: Foo\"","msgtype":"m.text"},"ts":1428955227000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<h2 class=\"no-num\">","msgtype":"m.text"},"ts":1428955236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right!","msgtype":"m.text"},"ts":1428955243000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what does \"These attributes are not intended for use by software that is not known to the administrators of the site that uses the attributes.\"","msgtype":"m.text"},"ts":1428957632000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"mean (from the HTML5 spec)","msgtype":"m.text"},"ts":1428957638000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"i think it means \"there are no standard data-* attributes that client software can depend on being there, if you need that, use microdata\"","msgtype":"m.text"},"ts":1428957828000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: so data-* should only be used by JS the client themselves write?","msgtype":"m.text"},"ts":1428957965000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"i guess","msgtype":"m.text"},"ts":1428957974000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"or whatever libraries they want to use","msgtype":"m.text"},"ts":1428957984000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"but not client software","msgtype":"m.text"},"ts":1428957992000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"or if they include my script, me using those data attributes are acceptable","msgtype":"m.text"},"ts":1428957994000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"cool. we had a small discussion with a customer about what it means","msgtype":"m.text"},"ts":1428958030000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"i'd ask hixie or someone for clarification, maybe they meant something else, but that's how it reads to me","msgtype":"m.text"},"ts":1428958053000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"like, google shouldn't be using data- attributes to help rank a site","msgtype":"m.text"},"ts":1428958092000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"right, that makes sense","msgtype":"m.text"},"ts":1428958163000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"That's correct.  data-* aren't meant to be used for standardized markup across unrelated documents.","msgtype":"m.text"},"ts":1428958309000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and i assume that using attributes that do no exist are bad (as they might have future specified manning, ala JavaScript prototype fun)","msgtype":"m.text"},"ts":1428958376000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"terinjokes: you can upgrade from dangerous prefixes to unprefixed (css prefix fiasco), the reverse is more difficult (ala js prototype madness)","msgtype":"m.text"},"ts":1428958473000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: yep, yep","msgtype":"m.text"},"ts":1428958544000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"spends 5 minutes fixing the bug","msgtype":"m.emote"},"ts":1428958551000,"senderName":"terinjokes","senderId":"terinjokes@irc"}
]