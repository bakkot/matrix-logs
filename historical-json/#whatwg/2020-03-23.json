[
{"content":{"body":"TabAtkins: so I experimented with replacing the urlib.urlopen calls in Bikeshed with requests.get — and updating the associated response-handling code — and it all worked fine... until I ran into the APIClient() calls, which it seems to run into the same problem that the urllib.urlopen do, if Python can’t find the certs","msgtype":"m.text"},"ts":1584930097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess that’s probably do to the APIClient() code in the json_home_client library being built on urllib.urlopen","msgtype":"m.text"},"ts":1584930154000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*due to","msgtype":"m.text"},"ts":1584930159000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess it’s not worth changing the code — since the only known environment it causes any real problem in is the XCode-installed Python one","msgtype":"m.text"},"ts":1584930245000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Is there an article on why we're not really changing the HTML parser?","msgtype":"m.text"},"ts":1584948211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if there were, I reckon hsivonen would know","msgtype":"m.text"},"ts":1584949205000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"self.SAB = new WebAssembly.Memory({ shared:true, initial:0, maximum:0 }).buffer.constructor;","msgtype":"m.text"},"ts":1584955031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(credit: Adam Rice)","msgtype":"m.text"},"ts":1584955045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@MikeSmith: thanks for the effort. You still got the code around? I'm amenable to switching anyway, and can ping plinss about switching json_home_client","msgtype":"m.text"},"ts":1584977550000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah I’ll make a patch and submit a PR ofr it","msgtype":"m.text"},"ts":1584982758000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"danek","msgtype":"m.text"},"ts":1584982843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hey by the way, I’m done futzing with https://github.com/tabatkins/bikeshed/pull/1564 (the MDN annotations PR) — so can be reviewed without worry about me changing anything out from underneath it during review","msgtype":"m.text"},"ts":1584982931000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: oh cool","msgtype":"m.text"},"ts":1584982986000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(the workaround)","msgtype":"m.text"},"ts":1584982994000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"MikeSmith: I'm reviewing it literally right now, so nice. ^_^","msgtype":"m.text"},"ts":1584983232000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh :)","msgtype":"m.text"},"ts":1584983314000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1584983315000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Something I never understood. Why do promise tasks have to run at a high priority than regular tasks (and hence be microtasks)?","msgtype":"m.text"},"ts":1584984291000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Chaining off a promise feels \"almost synchronous\", especially when `await` is used. Pumping the normal queue in between code split by a promise was seen as likely to result in bugs.","msgtype":"m.text"},"ts":1584985810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TimothyGu: initially we got mutation observers, which were a bit less sync than mutation events, but still sync enough to not let a lot of other code run in between","msgtype":"m.text"},"ts":1584985942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: and I think promises wanted similar timing as they used mutation observers and such as workarounds","msgtype":"m.text"},"ts":1584985979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: perhaps also because often a promise is resolved as the result of a task, if it would then take another task you'd get a lot of delay","msgtype":"m.text"},"ts":1584986010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is mutation event totally sync?","msgtype":"m.text"},"ts":1584986246000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: yeah, see also https://github.com/whatwg/dom/issues/305","msgtype":"m.text"},"ts":1584986291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, I see","msgtype":"m.text"},"ts":1584986476000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"My point of view is that chaining off a resolved promise should be zero-cost. I.e. a 1000-deep resolved promise chain should be as fast as a `for (let i = 0; i < 1000; ++i) { /* do nothing */ }`, modulo extra GC pressure. Microtasks allow this in theory, while tasks do not. This gets you close to \"zero-cost abstraction\".","msgtype":"m.text"},"ts":1584987428000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"However, implementations seem to be unable to achieve this, mostly because of JS/C++ transitions and difficulty inlining.","msgtype":"m.text"},"ts":1584987431000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And I suppose it doesn't help that I made promises unnecessarily complicated to support subclassing. Although implementations have done some heroic fast-paths to get around that, at least.","msgtype":"m.text"},"ts":1584987483000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Subclassing had a lot of hype but little payoff thus far","msgtype":"m.text"},"ts":1584989580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://chromium-review.googlesource.com/c/chromium/src/+/2116833 (should show up on WPT side soon) would welcome your review, either on WPT or Chromium repos. I also added you as an owner for the directory. (dtapuska fixed the message vs. messageerror bug so I can write WPTs now!)","msgtype":"m.text"},"ts":1585002382000,"senderName":"Domenic","senderId":"Domenic@irc"}
]