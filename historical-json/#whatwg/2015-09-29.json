[
{"content":{"body":"annevk: thanks for the reference, followed up on the thread: https://github.com/whatwg/fetch/issues/47#issuecomment-143948846","msgtype":"m.text"},"ts":1443504677000,"senderName":"igrigorik","senderId":"igrigorik@irc"},
{"content":{"body":"gsnedders: yeah, mkwst is investigating writing a standard for it","msgtype":"m.text"},"ts":1443507184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"igrigorik: you haven't really addressed the issue","msgtype":"m.text"},"ts":1443507226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders, annevk: Yeah. I had a spec for this, and the group got cold feet after some challenges popped up. I'd like to bring it back up, but I'm loath to do so until I know how to do the blocking in Chromium so that it's not just an empty document.","msgtype":"m.text"},"ts":1443509549000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: why does it have to be an empty document?","msgtype":"m.text"},"ts":1443509585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: is this related to Chromium making error pages same-origin?","msgtype":"m.text"},"ts":1443509604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hrm? No, sorry. Maybe I didn't understand the discussion.","msgtype":"m.text"},"ts":1443509627000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I mean that it's tough for our network stack to distinguish a priori an intranet address from an internet address before connection time.","msgtype":"m.text"},"ts":1443509662000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: And we don't have enough context at the time that we're making a connection to determine whether we should block the former or not.","msgtype":"m.text"},"ts":1443509684000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: oh","msgtype":"m.text"},"ts":1443509684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I need to do some work (or find someone to do some work).","msgtype":"m.text"},"ts":1443509698000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I don't really want to put up a doc that says \"DO X!\" if I don't know how to do X in the browser I'm responsible for. :)","msgtype":"m.text"},"ts":1443509716000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That's what I mean by \"empty document\". A spec without code is fairly worthless.","msgtype":"m.text"},"ts":1443509729000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: oh, I thought you meant the type of error handling","msgtype":"m.text"},"ts":1443510231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, sorry. I wasn't clear.","msgtype":"m.text"},"ts":1443510265000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"By the way, there's an intern spot to be filled for the HTML Standard: https://wiki.mozilla.org/Outreachy/2016/December_to_March#Contribute_to_the_HTML_Standard.21","msgtype":"m.text"},"ts":1443510584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And also somewhat relevant to the WHATWG, folks can work on implementing Fetch in Servo: https://wiki.mozilla.org/Outreachy/2016/December_to_March#Servo:_Complete_implementation_of_Fetch_standard","msgtype":"m.text"},"ts":1443510610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: there?","msgtype":"m.text"},"ts":1443515003000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Ms2ger: It looks like idlharness.js doesn't try to pass null or invalid types to methods in order to check if they'll throw TypeError, is that right or am I doing it wrong?","msgtype":"m.text"},"ts":1443516350000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"That sounds plausible","msgtype":"m.text"},"ts":1443516399000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"In general, \"invalid type\" is somewhat difficult to construct","msgtype":"m.text"},"ts":1443516428000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: for interface types that are not nullable, passing in null would be nice","msgtype":"m.text"},"ts":1443516636000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1443516649000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There's also overloads, unfortunately","msgtype":"m.text"},"ts":1443516668000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and I guess there are no types that are both instanceof Document and instanceof Window, so one could always use one of those?","msgtype":"m.text"},"ts":1443516669000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"oh, right","msgtype":"m.text"},"ts":1443516682000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, whatever the implementation of giveMeAnInvalidType() is, it should be possible to write an interface that defeats it","msgtype":"m.text"},"ts":1443516771000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Ms2ger: is there somewhere I could file an issue for the simple null case that has a non-zero chance of being fixed?","msgtype":"m.text"},"ts":1443516977000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'm trying to answer a question for someone else, so I'm not excited about fixing it myself today :)","msgtype":"m.text"},"ts":1443517015000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj, testharness.js repo, I sometimes look at it :0","msgtype":"m.text"},"ts":1443519921000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ok :)","msgtype":"m.text"},"ts":1443519942000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Domenic: pinged you on twitter (then realised I am persona non grata [wise move] in your twitterverse) so leaving here Script-Based Web Accessibility proposal https://github.com/cyns/wapa/blob/master/ScriptAccessibility.md#script-based-web-accessibility","msgtype":"m.text"},"ts":1443522070000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"mkwst: this whole modularizing CSP seems like a Process hack and I suspect will only cause you pain due to the shifting dependencies and requirements over time","msgtype":"m.text"},"ts":1443524735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: this is basically what's wrong with the way the W3C works, you start optimizing for producing RECs and as a result you create a disaster for everyone else trying to follow along","msgtype":"m.text"},"ts":1443525119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Eh. I understand that critique, and I agree to an extent.","msgtype":"m.text"},"ts":1443526647000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: However: 1. Beyond W3C process, I think separate documents will give folks like Microsoft the ability to say they implemented a thing without blocking on implementing everything.","msgtype":"m.text"},"ts":1443526688000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: 2. Directives are already modular to a great extent. There's no particular reason that `upgrade-insecure-requests` needs to be in the same document as `sandbox`. They do completely divergent things, and are only in the same document because of the delivery mechanism.","msgtype":"m.text"},"ts":1443526749000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: 3. Separate documents allow more explanation. I think the cookies feature is significantly clearer, both in justification and scope, in a separate, focused document.","msgtype":"m.text"},"ts":1443526799000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(In other words, CSP is a generic delivery mechanism for a bunch of stuff. Some of that stuff is similar to some other bits of that stuff, and grouping them together makes sense to me.)","msgtype":"m.text"},"ts":1443527155000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: did Microsoft actually say as much? It has never been a problem for them before","msgtype":"m.text"},"ts":1443528133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: see e.g., HTML or URL","msgtype":"m.text"},"ts":1443528151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No. They've said they aren't prioritizing \"CSP2\", and have been unresponsive to my (repeated) suggestions that there are important bits and not so important bits.","msgtype":"m.text"},"ts":1443528172000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: right, I don't think splitting will change that","msgtype":"m.text"},"ts":1443528205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not suggesting that it solves the problem. I think it makes the problem smaller.","msgtype":"m.text"},"ts":1443528325000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"It makes the problem bigger, because now they have a dozen specs they can ignore","msgtype":"m.text"},"ts":1443528410000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If the specs are smaller, implementing them is easier, which means they can tick a nice feature checkbox. That's appealing.","msgtype":"m.text"},"ts":1443528533000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(also, annevk: if you haven't already, tell me I'm an idiot on the mailing list. :) )","msgtype":"m.text"},"ts":1443528566000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'm unconvinced that smaller specs are easier to implement","msgtype":"m.text"},"ts":1443528669000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"depending on how they became \"smaller\"","msgtype":"m.text"},"ts":1443528687000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like, one way to make small specs is to specify features in isolation and conveniently ignore the interaction between that feature and other features","msgtype":"m.text"},"ts":1443528727000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So things look small but actually they aren't","msgtype":"m.text"},"ts":1443528743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: when merging PRs that need a new ack, do you think we should just change the commit, or do a separate \"ack for previous commit\" thing?","msgtype":"m.text"},"ts":1443528752000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"They're just underspecified","msgtype":"m.text"},"ts":1443528753000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: I've made the point that the W3C Process has detrimental effects on everyone but lawyers enough times","msgtype":"m.text"},"ts":1443528754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(*cough* web-performance *cough*)","msgtype":"m.text"},"ts":1443528764000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"philipj: I think we should change the commit and override with --author","msgtype":"m.text"},"ts":1443528769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If you can invent a world in which lawyers don't matter, I'm totally happy to join you there.","msgtype":"m.text"},"ts":1443528790000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: you mean preserve the original author, or to pretend that we are the authors of the fix too?","msgtype":"m.text"},"ts":1443528798000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: preserve","msgtype":"m.text"},"ts":1443528807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: you're already here","msgtype":"m.text"},"ts":1443528820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, that's what git commit --amend does by default","msgtype":"m.text"},"ts":1443528830000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1443528835000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1443528849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: so whenever I use git commit --amend I can modify the commit message, but not the commit itself","msgtype":"m.text"},"ts":1443528872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you need to git add -p first","msgtype":"m.text"},"ts":1443528885000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"or any kind of git add, -A would do as well","msgtype":"m.text"},"ts":1443528910000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: so make a change, use git add -p, then do git commit --amend?","msgtype":"m.text"},"ts":1443528920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep","msgtype":"m.text"},"ts":1443528924000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: thanks, that should make things easier","msgtype":"m.text"},"ts":1443528940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :)","msgtype":"m.text"},"ts":1443528946000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I usually fiddle around a bit with the GitHub GUI which is not really ideal, but I managed to get the same effect in the end","msgtype":"m.text"},"ts":1443528957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: So the flip side of the lawyer coin is that if no one had done HTML5 because W3C dropped it and WHATWG weren't lawyer-friendly then, well, that world would be a worse world than this one. So it's empirically true that it is possible to worry too much about the problems with doing work and not enough about the problems of not doing work.","msgtype":"m.text"},"ts":1443528964000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Put the lawyer stuff to the side. My problem at the moment is that the work I'm doing is helping Chrome users, and Firefox users to an extent, but isn't helping anyone else (and, due to that lag, isn't helping Chrome users as much as it should).","msgtype":"m.text"},"ts":1443529045000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"jgraham: I'm looking for solutions to that problem.","msgtype":"m.text"},"ts":1443529059000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Well, I don't know of a way to force Microsoft to implement something :|","msgtype":"m.text"},"ts":1443529088000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or Apple. Or Mozilla.","msgtype":"m.text"},"ts":1443529101000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Forcing is the wrong question, I think.","msgtype":"m.text"},"ts":1443529111000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I want to make things appealing to implement.","msgtype":"m.text"},"ts":1443529116000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I think things are appealing to implement if they solve real problems that users are percived to have","msgtype":"m.text"},"ts":1443529150000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I suspect the way the spec is structured is a correction to that","msgtype":"m.text"},"ts":1443529176000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think splitting things out makes individual improvements clearer, yes.","msgtype":"m.text"},"ts":1443529203000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://w3c.github.io/webappsec/specs/csp-cookies/ is a tiny spec that (tries to) identify a specific problem, and proposes a specific solution. It delivers that solution in terms of CSP. *shrug* That seems like a clear package.","msgtype":"m.text"},"ts":1443529260000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(With the usual strawman, rough draft, etc. caveats. Assume I spent time to polish things.)","msgtype":"m.text"},"ts":1443529282000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I've never know the presentation of a specification to be what convinces Apple and/or Microsoft","msgtype":"m.text"},"ts":1443529347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What matters is developers requesting the functionality and the popularity of the features","msgtype":"m.text"},"ts":1443529367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's why Microsoft eventually caved and implemented CORS for XMLHttpRequest, and dropped XDomainRequest","msgtype":"m.text"},"ts":1443529398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF_: oh cool, will take a look... and should probably unblock you, I just remember blocking you after you said something about cocks in response to one of my tweets","msgtype":"m.text"},"ts":1443529644000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, more magic in HTML","msgtype":"m.text"},"ts":1443534510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Discard tasks. If anything got discarded, do x.","msgtype":"m.text"},"ts":1443534525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: sorry can't remember tweeting \"about cocks in response to one of my tweets\", but will make an effort not to tweet such stuff to you in future.","msgtype":"m.text"},"ts":1443535066000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"Domenic: could you give https://github.com/whatwg/html/pull/203 a final pass?","msgtype":"m.text"},"ts":1443538342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: will do","msgtype":"m.text"},"ts":1443538384000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah thank you for catching that","msgtype":"m.text"},"ts":1443539369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it seems the parser does not choke on typos","msgtype":"m.text"},"ts":1443539375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I figured this one would need a review of the built product","msgtype":"m.text"},"ts":1443539452000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: pushed the changes you wanted","msgtype":"m.text"},"ts":1443542074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I think HTMLAllCollection should just become its own class","msgtype":"m.text"},"ts":1443542084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: reviewing built output now","msgtype":"m.text"},"ts":1443542097000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: that seems probably true, although we should investigate in a follow-up bug","msgtype":"m.text"},"ts":1443542108000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: although perhaps someone could quickly peek at the Chromium code for HTMLAllCollection whether that is true there too","msgtype":"m.text"},"ts":1443542118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: will file an issue","msgtype":"m.text"},"ts":1443542122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anybody else having a problem with gmail currently not loading in Canary (on OS X at least)?","msgtype":"m.text"},"ts":1443569451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and if so, know any workaround","msgtype":"m.text"},"ts":1443569460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it hasn't been working for me for days now","msgtype":"m.text"},"ts":1443569468000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]