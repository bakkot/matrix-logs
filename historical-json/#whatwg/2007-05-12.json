[
{"content":{"body":"24 <canvas> mails left","msgtype":"m.text"},"ts":1178928060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not counting text issues)","msgtype":"m.text"},"ts":1178928061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, what would be nice if .fillStyle returned a four-digit array instead","msgtype":"m.text"},"ts":1178958120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the same for .strokeStyle","msgtype":"m.text"},"ts":1178958180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that would be much more trivial to parse","msgtype":"m.text"},"ts":1178958181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would also make it impossible to do .fillStyle = .fillStyle","msgtype":"m.text"},"ts":1178958182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless we added yet another way of assigning colour","msgtype":"m.text"},"ts":1178958240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but anyway, who the heck is parsing these colours","msgtype":"m.text"},"ts":1178958241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you had to set them yourself","msgtype":"m.text"},"ts":1178958242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you KNOW what the colour is","msgtype":"m.text"},"ts":1178958243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"people parse it","msgtype":"m.text"},"ts":1178958780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apparently","msgtype":"m.text"},"ts":1178958781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and yes, it would mean assigning would have to accept a four-digit array","msgtype":"m.text"},"ts":1178958782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I raised some problems multiple times because I don't keep track of the e-mails I have already sent","msgtype":"m.text"},"ts":1178958960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1178959980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wasn't criticising","msgtype":"m.text"},"ts":1178959981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just thought it was amusing :-)","msgtype":"m.text"},"ts":1178959982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw, as for dropping features, did anyone implement shadows already?","msgtype":"m.text"},"ts":1178960040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"safari, i assume","msgtype":"m.text"},"ts":1178960700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that was in their initial description","msgtype":"m.text"},"ts":1178960701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1178960702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we do shadows?","msgtype":"m.text"},"ts":1178961000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1178961001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i haven't tested it","msgtype":"m.text"},"ts":1178961002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at l0east not recently","msgtype":"m.text"},"ts":1178961003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1178961060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the primary use case for having totally global id= is getting the requirement for xml:id out of SVG","msgtype":"m.text"},"ts":1178961120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1178961121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"svg already has id=\"\"","msgtype":"m.text"},"ts":1178961122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it only uses xml:id in svg 1.2, no? and svg 1.2 is a waste of time anyway.","msgtype":"m.text"},"ts":1178961123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"svg added xml:id on the theory that it would be play nicer with embedding markup in other languages","msgtype":"m.text"},"ts":1178961180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(apparently xhtml 1.0 and xhtml 1.1 were not considered among the important languages to embed)","msgtype":"m.text"},"ts":1178961181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"does MathML have any attributes of type ID?","msgtype":"m.text"},"ts":1178961182000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"RSS? Atom?","msgtype":"m.text"},"ts":1178961183000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"SVG Tiny 1.2 is happing at least for Opera","msgtype":"m.text"},"ts":1178961184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the way SVG 1.2 specs IDness assignment is crazy","msgtype":"m.text"},"ts":1178961185000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't have time to do SVG fights atm","msgtype":"m.emote"},"ts":1178961186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can be please get it repealed somehow?","msgtype":"m.text"},"ts":1178961240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: sorry to hear that","msgtype":"m.text"},"ts":1178961241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we probably won't implement SVG 1.2 in WebKit, maybe selected parts, but likely not the whole thing","msgtype":"m.text"},"ts":1178961242000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"isn't sure about SVG 1.2 though","msgtype":"m.emote"},"ts":1178961243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: who's doing the qa?","msgtype":"m.text"},"ts":1178961244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure","msgtype":"m.text"},"ts":1178961300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems Acid3 has some script issues btw which causes it not to run","msgtype":"m.text"},"ts":1178961420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be nice to have a spec for the subset of SVG that Opera, Apple and Mozilla implement","msgtype":"m.text"},"ts":1178961421000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That would be a tutorial","msgtype":"m.text"},"ts":1178961480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean SVG5","msgtype":"m.text"},"ts":1178961481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: something realistic you could check conformance against","msgtype":"m.text"},"ts":1178961540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: If I support SVG 1.1 but browsers support pieces of SVG 1.2, those pieces get flagged","msgtype":"m.text"},"ts":1178961541000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Someone just has to free up his time for the foreseeable future and do it... I suppose","msgtype":"m.text"},"ts":1178961600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If I supported SVG 1.2, I'd fail to flag stuff that authors should avoid","msgtype":"m.text"},"ts":1178961601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't know much about vector graphics and doesn't have much free time","msgtype":"m.emote"},"ts":1178961602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"acid3 isn't ready yet","msgtype":"m.text"},"ts":1178961780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maikmerten, hi, Opera's implementation of <video> is experimental","msgtype":"m.text"},"ts":1178961900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yup","msgtype":"m.text"},"ts":1178961960000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"as such, we don't support all members of HTMLMediaElement","msgtype":"m.text"},"ts":1178961961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, only a basic subset","msgtype":"m.text"},"ts":1178961962000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I expected nothing else - doing a full scale implementation only makes sense once the <video> part of the spec is considered stable","msgtype":"m.text"},"ts":1178962020000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"Our submission along with the work from Apple actually made Hixie draft that part of the spec as I understand it","msgtype":"m.text"},"ts":1178962080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, by the way, any plans to expose the Theora postprocessing options in Opera?","msgtype":"m.text"},"ts":1178962081000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"that could be a problem, since it won't be stable until there are at least two implementations :-)","msgtype":"m.text"},"ts":1178962082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And it basically consisted of .play() .pause() and .stop() if I remember correctly","msgtype":"m.text"},"ts":1178962083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I did write howcome and told him about the new Theora code (improved encoder, complete and safe decoder) but I guess that the mail was eaten by a spam filter ;)","msgtype":"m.text"},"ts":1178962140000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"yeah, and stop() more or less vanished, so it seems","msgtype":"m.text"},"ts":1178962141000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I believe .stop() is not part of the specification, not sure","msgtype":"m.text"},"ts":1178962142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1178962143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, also in the implementation?","msgtype":"m.text"},"ts":1178962144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1178962145000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"the experimental build has stop()","msgtype":"m.text"},"ts":1178962146000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"after finding out that the spec only has pause() the wikimedia player was altered to honor this","msgtype":"m.text"},"ts":1178962200000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1178962201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you guys would like a bit more than play() and pause() I suppose you could post that somewhere and I'll see what I can do","msgtype":"m.text"},"ts":1178962260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, a stop() would be cool ;) - but that can be mimicked with pause() and start set to zero, I guess","msgtype":"m.text"},"ts":1178962261000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"Hixie, any reason there's no stop()?","msgtype":"m.text"},"ts":1178962320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what would it do?","msgtype":"m.text"},"ts":1178962321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"stop playback and set the playback position to zero","msgtype":"m.text"},"ts":1178962322000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"(which can be achieved with the current draft in two steps already.... so...)","msgtype":"m.text"},"ts":1178962323000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"ah. then there is. it's just spelt a bit longer: m.pause(); m.duration = 0;","msgtype":"m.text"},"ts":1178962324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Although what I meant was features missing in Opera.)","msgtype":"m.text"},"ts":1178962325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you actually mean the more horrible currentTime","msgtype":"m.text"},"ts":1178962380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1178962381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"m.pause(); m.currentTime = 0;","msgtype":"m.text"},"ts":1178962382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would like to have stop() back","msgtype":"m.emote"},"ts":1178962440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It was also on Audio()","msgtype":"m.text"},"ts":1178962441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it did something that you couldn't otherwise do...","msgtype":"m.text"},"ts":1178962500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not a fan of adding shortcuts before we know if anyone will use them","msgtype":"m.text"},"ts":1178962501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, one thing: A reliable way to find out if <video> is supported would be nice. Currently I'm just embedding a <video> element without src, fetch that with getElementById and see if that has a play method","msgtype":"m.text"},"ts":1178962502000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"don't know if that is how it's supposed to be","msgtype":"m.text"},"ts":1178962560000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"and in the long term a way to query mime types supported by audio/video may be nice, too","msgtype":"m.text"},"ts":1178962561000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"if (video.play) is one way to find out","msgtype":"m.text"},"ts":1178962620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, i'm off hame","msgtype":"m.text"},"ts":1178962621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1178962622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"g'night","msgtype":"m.text"},"ts":1178962623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"night","msgtype":"m.text"},"ts":1178962624000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"Hixie, hmm, Wikipedia would use them :)","msgtype":"m.text"},"ts":1178962740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maikmerten: the intent is that you specify multiple sources with <source> elements instead of querying","msgtype":"m.text"},"ts":1178962800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"as for the mime type querying: Sooner or later as codec development goes on user agents may pick up new codecs (on the free side Ogg Ghost + Ogg Dirac or whatever, on the other side the future MPEG codecs) and content providers may want to be able to see what's supported. Plus as Ogg is a SHOULD some implementations may not implement it and then the either a fallback should be able to kick in or just tell the user","msgtype":"m.text"},"ts":1178962801000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"ah, k","msgtype":"m.text"},"ts":1178962802000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"that's an even better solution that's scripting independent","msgtype":"m.text"},"ts":1178962803000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"maikmerten: video codec support also is in general more fine-grained than mime types","msgtype":"m.text"},"ts":1178962804000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"fair point","msgtype":"m.text"},"ts":1178962805000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"currently e.g. the Wikimedia player queries the mime types and if it finds application/ogg (VLC plugin, totem plugin) it just assumes that Ogg plugin will also support video","msgtype":"m.text"},"ts":1178962860000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"and the <source> element supports that via the MIME type codecs parameter","msgtype":"m.text"},"ts":1178962861000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it would be hard for a plugin to report all combos of the codecs parameter it supports","msgtype":"m.text"},"ts":1178962862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1178962863000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"<annevk> Hixie, hmm, Wikipedia would use them :) <-- well, Wikipedia will adapt to whatever is specified here, it shouldn't be the other way round","msgtype":"m.text"},"ts":1178962920000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"the fact it's already having experimental <video> support is more to give a real-life testing ground for implementations and to voice support for the idea","msgtype":"m.text"},"ts":1178962980000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"was lobbying for less changes to Opera :)","msgtype":"m.emote"},"ts":1178962981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1178963040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha, right, standard procedure when several vendors come together... \"Why not adapt to what we already have?\" ;-)","msgtype":"m.text"},"ts":1178963041000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I nominate <layer> ;)","msgtype":"m.text"},"ts":1178963100000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I have now readjusted truthiness regarding the WHATWG and HTML5","msgtype":"m.text"},"ts":1178963101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"on wikipedia, that is","msgtype":"m.text"},"ts":1178963102000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I parse that as \"I edited the whatwg article on wikipedia\", correct?","msgtype":"m.text"},"ts":1178963160000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"maikmerten: and HTML5 and HTML","msgtype":"m.text"},"ts":1178963161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah, nice","msgtype":"m.text"},"ts":1178963162000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I like http://en.wikipedia.org/wiki/HTML5","msgtype":"m.text"},"ts":1178963220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"The HTML5 language is defined by a draft specification called “HTML 5” (note the space).\"","msgtype":"m.text"},"ts":1178963221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maikmerten: the article was called truthy last night, because it had some bogus stuff in it","msgtype":"m.text"},"ts":1178963222000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, as usual ;)","msgtype":"m.text"},"ts":1178963223000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"(I *like* Wikipedia, but at times the strangest conceptions make it into articles because no real expert monitors them)","msgtype":"m.text"},"ts":1178963280000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"It's also hard to get some articles changed, like HTML","msgtype":"m.text"},"ts":1178963281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although now HTML5 is done at the W3C it should be more easy I guess","msgtype":"m.text"},"ts":1178963340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I cited emails on lists.w3.org to avoid immediate reverts to the old accepted truth","msgtype":"m.text"},"ts":1178963341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(by the way: Is there a reliable way to see if Java is *working* apart from embedding an applet and seeing if JavaScript can interact with that?)","msgtype":"m.text"},"ts":1178963342000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"you might not have to embed it","msgtype":"m.text"},"ts":1178963400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could create the elements (such as <video> simply through script)","msgtype":"m.text"},"ts":1178963401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then do the check","msgtype":"m.text"},"ts":1178963402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"video = document.createElement('video'); if(video.play) { etc. }","msgtype":"m.text"},"ts":1178963460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, sweet","msgtype":"m.text"},"ts":1178963580000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"my JavaScript skills sorta cover whatever came with Netscape 3.0 ;-)","msgtype":"m.text"},"ts":1178963581000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1178963582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and with \"cover\" I mean \"I think I know 10% of that\") ;)","msgtype":"m.text"},"ts":1178963583000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"time to educate myself on the DOM","msgtype":"m.text"},"ts":1178963640000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"hmm, the WHATWG article still mentions microsoft","msgtype":"m.text"},"ts":1178963700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Whatwg","msgtype":"m.text"},"ts":1178963701000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: but now accurately, I hope","msgtype":"m.text"},"ts":1178963820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej, what it says there is correct though, right?","msgtype":"m.text"},"ts":1178963821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what I see is \"The key contributing groups in the WHATWG are Google, the Mozilla Foundation, Opera Software, Apple Inc. and Microsoft.\"","msgtype":"m.text"},"ts":1178963822000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: reload","msgtype":"m.text"},"ts":1178963823000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: I guess you have an old cached version","msgtype":"m.text"},"ts":1178963880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: either in your caches or in wikipedia's","msgtype":"m.text"},"ts":1178963881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: just did; perhaps I'm a victim of too aggressive caching somewhere","msgtype":"m.text"},"ts":1178963882000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: seems to be in my browser cache","msgtype":"m.text"},"ts":1178963940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wonders why Wikipedia doesn't do redirects \"better\"","msgtype":"m.emote"},"ts":1178964000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder why the description of the WHATWG membership in the Discuss page for that article says \"Maciej Stachowiak [ worked on Safari ]\"","msgtype":"m.text"},"ts":1178964060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"none of the others are in the past tense","msgtype":"m.text"},"ts":1178964061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1178964180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't consider the discuss pages to be \"canon\" information","msgtype":"m.text"},"ts":1178964181000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"(wow, I just sounded like a Star Trek fan)","msgtype":"m.text"},"ts":1178964240000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"whoever wrote the post saying that was confused I think","msgtype":"m.text"},"ts":1178964241000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"damn, I screwed up the comment threading","msgtype":"m.text"},"ts":1178964300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maikmerten: is it considered bad form for someone closely associated with a product / project to edit the articles about it a lot?","msgtype":"m.text"},"ts":1178964301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, good question - depends. Rule of thumb would say it's bad style","msgtype":"m.text"},"ts":1178964360000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"maikmerten: I really want to make a bunch of changes to the WebCore and WebKit articles (mainly merge most of the content into the WebKit one and change all the rendering engine list/comparison pages to point to WebKit instead of WebCore) but I'm worried this would be considered inappropriate","msgtype":"m.text"},"ts":1178964361000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, if the content is on a purely technical level I don't see why developers shouldn't be able to contribute","msgtype":"m.text"},"ts":1178964420000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"after all that is not the usual company propaganda thing that is controversial","msgtype":"m.text"},"ts":1178964421000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"err, semantics were wrong on the last sentence","msgtype":"m.text"},"ts":1178964480000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"I do have a lot of personal expert information which might not be based on published info","msgtype":"m.text"},"ts":1178964481000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"as long as it stays on a technical level it's okay, I'd guess. Problematic would be company propaganda","msgtype":"m.text"},"ts":1178964482000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"like what apps link to WebCore directly vs linking to WebKit","msgtype":"m.text"},"ts":1178964483000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but that is easily verifiable","msgtype":"m.text"},"ts":1178964540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(at least for people who have access to the app)","msgtype":"m.text"},"ts":1178964541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, and disclaimer: I'm not part of the Wikipedia project, just assist a bit with video technology related stuff","msgtype":"m.text"},"ts":1178964542000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"Are you part of the Theora project?","msgtype":"m.text"},"ts":1178964543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, yes and no. Not official member of xiph.org but I'm hanging around in the #theora channel and contributed a bit on the encoder","msgtype":"m.text"},"ts":1178964600000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1178964601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the border is a bit unclear as xiph.org isn't a real company but more a group of free media technology guys","msgtype":"m.text"},"ts":1178964660000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"(well, to be precise: It is a legal entity complete with a board etc. - but that doesn't mean you have to be \"member\" of some sort to contribute)","msgtype":"m.text"},"ts":1178964840000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"About accepting [r,g,b,a] as input to fillStyle/strokeStyle, that'd be kind of handy since normally I have to write a [r,g,b,a]-to-\"rgba(...)\" function every time I do anything with colours, and have to worry about silly things like r,g,b being 0-255 while a is 0-1. (Not exceptionally handy and maybe not worth the cost, though.)","msgtype":"m.text"},"ts":1178968980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is \"a\" in ImageData.data 0-225?","msgtype":"m.text"},"ts":1178969100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think you should mention the above on the list","msgtype":"m.text"},"ts":1178969101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It is","msgtype":"m.text"},"ts":1178969102000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1178969103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"currently it accepts CSS for ease of use, but if you actually need to convert to CSS first it's not really \"easy\" anymore and just adds to the processing cost","msgtype":"m.text"},"ts":1178969160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's possibly nice that you can do HSL the same way as RGB when it's through CSS, which would no longer be the same if you had [r,g,b(,a)] arrays, but I don't know if anybody actually wants to use HSL","msgtype":"m.text"},"ts":1178969220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you want ,a to be optional?","msgtype":"m.text"},"ts":1178969340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would still accept CSS I think","msgtype":"m.text"},"ts":1178969341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there any reason not to make it optional? People will want solid colours more than they want transparent colours, so it would seem nicer to simplify that case rather than requiring a redundant ',255' every time","msgtype":"m.text"},"ts":1178969460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"maybe functions to make and parse color strings would be more useful","msgtype":"m.text"},"ts":1178969461000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the array could only support a limited number of color formats","msgtype":"m.text"},"ts":1178969462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`, fair enough","msgtype":"m.text"},"ts":1178969520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej, thought about that... yet more global methods?","msgtype":"m.text"},"ts":1178969521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but makeRGB, makeRGBA, makeHSL, makeHSLA, etc could do it","msgtype":"m.text"},"ts":1178969522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"they don't necessarily need to be global","msgtype":"m.text"},"ts":1178969523000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"could be part of the CSSOM","msgtype":"m.text"},"ts":1178969524000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"method on CSSColorValue constructor maybe","msgtype":"m.text"},"ts":1178969525000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that might work","msgtype":"m.text"},"ts":1178969580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thought of having CSSColorValue.data[0,0,0,0] as opposed to .red, .green .blue and .alpha","msgtype":"m.emote"},"ts":1178969581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":".rgbaData might make more sense","msgtype":"m.text"},"ts":1178969700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I'm not sure it is more clear than named properties","msgtype":"m.text"},"ts":1178969701000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"me neither","msgtype":"m.text"},"ts":1178969760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nice Philip`","msgtype":"m.text"},"ts":1178972040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool. my HTML5 revisions to wikipedia are still standing after 4 hours","msgtype":"m.text"},"ts":1178977980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1178978100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ooh, those are pretty controversial","msgtype":"m.text"},"ts":1178978220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"had only seen the first","msgtype":"m.emote"},"ts":1178978280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what's controversial?","msgtype":"m.text"},"ts":1178978940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I tried to stick to stating facts","msgtype":"m.text"},"ts":1178978941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"controversial facts, if you wish","msgtype":"m.text"},"ts":1178979000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/XHTML might need updates as well","msgtype":"m.text"},"ts":1178984280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: feel free to edit :-)","msgtype":"m.text"},"ts":1178984880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's been said that I hate XHTML","msgtype":"m.text"},"ts":1178984940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Any edit would immediately be reverted","msgtype":"m.text"},"ts":1178984941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"edit it anonymously","msgtype":"m.text"},"ts":1178984942000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"ooh. they cite the Mozilla Web Author FAQ","msgtype":"m.text"},"ts":1178985060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm sure someone else will fix it in due course","msgtype":"m.text"},"ts":1178985120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://en.wikipedia.org/w/index.php?title=XHTML&oldid=129295550 - I prefer that version of the facts","msgtype":"m.text"},"ts":1178985180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1178985360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1178985420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: \"Namespace at-rules are supported.\" they are supported in HTML mode too","msgtype":"m.text"},"ts":1178985421000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(from the faq)","msgtype":"m.text"},"ts":1178985422000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: do you mean they work right if you introduce other namespaces via DOM manipulation?","msgtype":"m.text"},"ts":1178985480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes. or if you just declare a bogus namespace then it won't match html elements","msgtype":"m.text"},"ts":1178985481000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: OK. I take your word for it.","msgtype":"m.text"},"ts":1178985540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"html elements are in the xhtml namespace as far as css selectors are concerned","msgtype":"m.text"},"ts":1178985541000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"in mozilla and opera and safari too iirc","msgtype":"m.text"},"ts":1178985542000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(even though they are in the null namespace in the DOM)","msgtype":"m.text"},"ts":1178985543000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: fix checked in. should appear in the next site rebuild","msgtype":"m.text"},"ts":1178985720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan_: thanks for the report","msgtype":"m.text"},"ts":1178985721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"Other namespaces are supported.\" and \"xml:base is observed when following links.\" also are no different from HTML, except that you can't use them declaratively","msgtype":"m.text"},"ts":1178985722000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm. I wonder if the point is too subtle for the FAQ","msgtype":"m.text"},"ts":1178985780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"perhaps... i realise it's intended to say \"you can't use this\"","msgtype":"m.text"},"ts":1178985781000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"not useful to mention I think","msgtype":"m.text"},"ts":1178985840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can't use them in HTML, you can use them in the DOM","msgtype":"m.text"},"ts":1178985841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, fair enough","msgtype":"m.text"},"ts":1178985900000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wonders what should happen with var imagedata = { height:1, width:2, data=[...], example:3 }","msgtype":"m.emote"},"ts":1178985960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the other question is whether it's useful that you're able to create your own objects...","msgtype":"m.text"},"ts":1178986020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as <canvas> represents a grid that doesn't reflect device pixels","msgtype":"m.text"},"ts":1178986021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems extremely easy to get it wrong","msgtype":"m.text"},"ts":1178986080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It might make extensibility a bit harder too, if ImageData is modified in the future (e.g. to say how many device pixels per canvas pixel, or to indiciate a non-RGB colour space, or whatever) but people are passing in objects with those new attributes missing","msgtype":"m.text"},"ts":1178986140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/indiciate/indicate/","msgtype":"m.text"},"ts":1178986141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It doesn't seem unreasonable to have people write var d; with (document.createElement('canvas')) { width = 100; height = 100; d = getContext('2d').getImageData(0, 0, width, height); }","msgtype":"m.text"},"ts":1178986320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"...assuming every canvas has the same device pixel / canvas pixel mapping","msgtype":"m.text"},"ts":1178986321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1178986380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I guess there's already an assumption that that mapping doesn't change over time, e.g. if you do getImageData then the user changes their desktop resolution then you do putImageData)","msgtype":"m.text"},"ts":1178986381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Let's not encourage use of with too much","msgtype":"m.text"},"ts":1178986440000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"especially since people tend to test only one browser...","msgtype":"m.text"},"ts":1178986441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nothing wrong with with","msgtype":"m.text"},"ts":1178986442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Dashiva: I generally hate with because it seems confusing and error-prone, but I didn't want to bother declaring another variable :-)","msgtype":"m.text"},"ts":1178986443000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"this feature allows you to imlement filters and I suppose that in theory you don't really care about the canvas pixels then but authors will break stuff","msgtype":"m.text"},"ts":1178986500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For image filtering, it would be quite nice if the browser could JIT your JS code into optimised SIMD array operations...","msgtype":"m.text"},"ts":1178986560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Actually, I have no idea how fast it is with plain JS operating on arrays of integers)","msgtype":"m.text"},"ts":1178986620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, one problem with implementing filters...","msgtype":"m.text"},"ts":1178986800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Normally you want access to both the old and new arrays of pixels","msgtype":"m.text"},"ts":1178986801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(because you need all the old values in order to compute the new ones)","msgtype":"m.text"},"ts":1178986802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but that doesn't seem easy with ImageData - you have to somehow copy the .data array into a new array, then modify the values in .data","msgtype":"m.text"},"ts":1178986860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"whereas it'd seem more natural (and more efficient) to use the old values from .data and create a new array, then swap that new array back into the ImageData","msgtype":"m.text"},"ts":1178986920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but you can't because the array reference is readonly)","msgtype":"m.text"},"ts":1178986921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you could simply create a new object it seems","msgtype":"m.text"},"ts":1178987100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but given that you can do that it doesn't make much sense for .data to be readonly imo","msgtype":"m.text"},"ts":1178987101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although the design is quite clear I don't think I particularly like these methods","msgtype":"m.text"},"ts":1178987160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm pretty sure authors will almost directly rely on them returning specific results","msgtype":"m.text"},"ts":1178987161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, bbc guys will show up at XTech","msgtype":"m.text"},"ts":1178987400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hopes they can give some info on Dirac","msgtype":"m.emote"},"ts":1178987460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do they have a session?","msgtype":"m.text"},"ts":1178987580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno, just saw some guy from bbc commenting on molly.com","msgtype":"m.text"},"ts":1178987640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hope Dirac's bitstream specification will be declared stable in a foreseeable timeframe so useful implementation can be assembled","msgtype":"m.text"},"ts":1178987760000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"(that'd be schrodinger.sf.net - dirac's real-life implementation)","msgtype":"m.text"},"ts":1178987761000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"annevk: Oh, oops, I forgot you could create a new one","msgtype":"m.text"},"ts":1178987820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://canvex.lazyilluminati.com/misc/filter.html - takes about 1.5 seconds to do the simplest useful filter on 300x150 pixels","msgtype":"m.text"},"ts":1178987880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(...in FF3)","msgtype":"m.text"},"ts":1178987940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I didn't know crashing my opera was a useful filter, but okay","msgtype":"m.text"},"ts":1178988120000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"will file the bug","msgtype":"m.emote"},"ts":1178988121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, that's not quite the intent","msgtype":"m.text"},"ts":1178988122000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's good","msgtype":"m.text"},"ts":1178988180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera 9.20 avoids crashing, which is good :-)","msgtype":"m.text"},"ts":1178988181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"better to discover it now","msgtype":"m.text"},"ts":1178988182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still forgot about imgdata.width != canvas.width when he first wrote this code","msgtype":"m.emote"},"ts":1178988300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1178988301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(At least the filter algorithm doesn't care about that issue, but I was looping over the wrong array range)","msgtype":"m.text"},"ts":1178988420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"e-mails the list","msgtype":"m.emote"},"ts":1178988540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would be alright if imgdata.width != canvas.width all the time in every browser, because then everybody would notice when they first tried testing","msgtype":"m.text"},"ts":1178988720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or simply assume it's 2*","msgtype":"m.text"},"ts":1178988721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(but that would be silly for implementations which have one canvas pixel per device pixel)","msgtype":"m.text"},"ts":1178988722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the thing is that can paint on half a pixel in theory","msgtype":"m.text"},"ts":1178988780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because everything is float (ugh! thanks Apple) based","msgtype":"m.text"},"ts":1178988781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if that wasn't the case you could just force 1 = 1 i suppose","msgtype":"m.text"},"ts":1178988840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://canvaspaint.org/paint.js - their getPixel assumes imgd.width == canvas.width","msgtype":"m.text"},"ts":1178988900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Not sure why they commented out that code, though...)","msgtype":"m.text"},"ts":1178988901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(unless it was just because nobody had implemented getImageData when they wrote that page)","msgtype":"m.text"},"ts":1178988960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"didn't work maybe?","msgtype":"m.text"},"ts":1178988961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera getPixel() actually assumes 1=1 as well in some way though I suppose it returns slightly weird things if you painted half a pixel before invoking it or something","msgtype":"m.text"},"ts":1178989020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if anybody actually uses the floats","msgtype":"m.emote"},"ts":1178989080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://svn.sourceforge.net/viewvc/*checkout*/jsmsx/trunk/msx.js?revision=20 - they get it wrong too","msgtype":"m.text"},"ts":1178989140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can you maybe cite those on the list?","msgtype":"m.text"},"ts":1178989141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"otherwise I'm willing to do it","msgtype":"m.text"},"ts":1178989142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I will do - I'll just see if I can find anybody doing it right first :-)","msgtype":"m.text"},"ts":1178989200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(i really like that people are doing MS Paint in <canvas> btw, really nice :) )","msgtype":"m.text"},"ts":1178989201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"next: photoshop :)","msgtype":"m.text"},"ts":1178989202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I noticed there was some new Adobe application where they're written most of the code in Lua, and that kind of thing could work just as well in JS. But I guess they cheated and wrote optimised image-processing code in C++ instead :-(","msgtype":"m.text"},"ts":1178989320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(drawing rectangles seems kind of messed up)","msgtype":"m.text"},"ts":1178989321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<canvas> + XMLHttpRequest could do that :)","msgtype":"m.text"},"ts":1178989380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, once it supports sending bytes over the wire better","msgtype":"m.text"},"ts":1178989381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is reminded of ajax <blink>","msgtype":"m.emote"},"ts":1178989440000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Ooh, I found one using it correctly","msgtype":"m.text"},"ts":1178989860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh cool","msgtype":"m.text"},"ts":1178989861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which one?","msgtype":"m.text"},"ts":1178989980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://tech.groups.yahoo.com/group/canvas-developers/files/buttons.html - might need to register/login to access that, though","msgtype":"m.text"},"ts":1178990220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hmm, it would be easier to find people use canvas getImageData if it didn't use horribly common terms like \"canvas\" and \"getImageData\" so searches find people using dozens of other graphics libraries instead","msgtype":"m.text"},"ts":1178990280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, perhaps http://f1.grp.yahoofs.com/v1/gORFRoOLlxuXtJddXwdSyravD-aFfgNuYoSzjI8vUevuBxus3V1sXs5xckiHKd1osiUpDE_bku-vtGMFPV_M-2JZkLKXTqc/buttons.html works without logging in","msgtype":"m.text"},"ts":1178990400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1178990460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what the expected rendering is...","msgtype":"m.text"},"ts":1178990640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The last one and a half button should be blue?","msgtype":"m.text"},"ts":1178990700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yep, it switches the red and blue components for the square (2000,0)-(3000,500)","msgtype":"m.text"},"ts":1178990701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I've no idea why it does that)","msgtype":"m.text"},"ts":1178990760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(More precisely, I've no idea why the author decided to make it do that)","msgtype":"m.text"},"ts":1178990761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"maybe just a test","msgtype":"m.text"},"ts":1178991120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"realises that drawImage(toDataURL) won't work as expected because it'll convert device pixels into image pixels, then draw image pixels as canvas pixels","msgtype":"m.emote"},"ts":1178998560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, images are drawn as CSS pixels","msgtype":"m.text"},"ts":1179002280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually, isn't that defined?","msgtype":"m.text"},"ts":1179002281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"treat an image pixel as a canvas pixel or something?","msgtype":"m.text"},"ts":1179002282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's defined","msgtype":"m.text"},"ts":1179002283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"interpreted such that one CSS pixel in the image is treated as one unit in the canvas coordinate space\"","msgtype":"m.text"},"ts":1179002284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, right","msgtype":"m.text"},"ts":1179002340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's quite confusing - I expected it was equivalent to drawImage(img, 0, 0, img.width, img.height) because anything else is weird","msgtype":"m.text"},"ts":1179002341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That also means sw,sh and dw,dh are different units, which is confusing","msgtype":"m.text"},"ts":1179002400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"huh?","msgtype":"m.text"},"ts":1179002460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Actually, not sure what I mean","msgtype":"m.text"},"ts":1179002461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it should be equivalent to that...","msgtype":"m.text"},"ts":1179002462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is confused more now","msgtype":"m.emote"},"ts":1179002520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"one image pixel is mapped to a canvas pixel","msgtype":"m.text"},"ts":1179002521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If I have <canvas width=100 height=100> and want to draw img to fill it, would I say ctx.drawImage(img, 0, 0, 100, 100)?","msgtype":"m.text"},"ts":1179002522000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and img is a 100x100 PNG or something)","msgtype":"m.text"},"ts":1179002580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1179002581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but img.width is in CSS pixels too, not real pixels","msgtype":"m.text"},"ts":1179002582000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that should work","msgtype":"m.text"},"ts":1179002583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so img.width is not necessarily 100","msgtype":"m.text"},"ts":1179002584000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it is","msgtype":"m.text"},"ts":1179002585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one image pixel is one CSS pixel","msgtype":"m.text"},"ts":1179002640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still confused :-)","msgtype":"m.text"},"ts":1179002641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you have device pixels, CSS pixels, canvas pixels and image pixels","msgtype":"m.text"},"ts":1179002700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the latter is really equivalent to CSS pixels for the purposes of visual browsers aiui","msgtype":"m.text"},"ts":1179002701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"drawImage() takes one CSS pixel and makes it a canvas pixel","msgtype":"m.text"},"ts":1179002702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so a 100x100 PNG would fill a 100x100 canvas","msgtype":"m.text"},"ts":1179002760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and styling an image using CSS with 'width:200px' would also not modify a 200px width image (ever)","msgtype":"m.text"},"ts":1179002761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/width image/wide image/","msgtype":"m.text"},"ts":1179002762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think what I expect is that <img src=\"some-100x100-image.png\"><canvas width=100 height=100>...ctx.drawImage(img, 0, 0, img.width, img.height) would fill the canvas, and ctx.drawImage(img, 0, 0) would do exactly the same, regardless of whatever the browser decides to do","msgtype":"m.text"},"ts":1179002820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"...which seems to be what is specified, so that's alright, unless I'm wrong","msgtype":"m.text"},"ts":1179002821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that's what the spec says","msgtype":"m.text"},"ts":1179002822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay - then it still leaves the problem of converting device pixels to image pixels in toDataURL (which doesn't seem specified), and then treating image pixels = CSS pixels = canvas pixels when drawImaging again","msgtype":"m.text"},"ts":1179002880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I'd assume toDataURL isn't meant to lose all the high-res data if you've got >1 device pixel per canvas pixel, because that wouldn't be nice, so it has to map device pixels onto image pixels)","msgtype":"m.text"},"ts":1179002940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"toDataURL makes a PNG","msgtype":"m.text"},"ts":1179002941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh you mean that 1 canvas pixel must become 1 image pixel?","msgtype":"m.text"},"ts":1179002942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Will toDataURL on a <canvas width=100 height=100> always make a 100x100 PNG? Or does that depend on how many device pixels are in the canvas?","msgtype":"m.text"},"ts":1179002943000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"1 canvas pixel becomes 1 image pixel imo","msgtype":"m.text"},"ts":1179003000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So toDataURL/drawImage will lose data?","msgtype":"m.text"},"ts":1179003001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"might","msgtype":"m.text"},"ts":1179003002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That would seem quite annoying if you're trying to use toDataURL to implement a 'save image' button","msgtype":"m.text"},"ts":1179003003000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"make a high res <canvas>","msgtype":"m.text"},"ts":1179003060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and scale it down using CSS","msgtype":"m.text"},"ts":1179003061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm actually all for going completely in that direction","msgtype":"m.text"},"ts":1179003062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and have getImageData and putImageData do the same","msgtype":"m.text"},"ts":1179003063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"far more predictable","msgtype":"m.text"},"ts":1179003064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Have the author explicitly make a high-res canvas when they want to support users with high-res displays?","msgtype":"m.text"},"ts":1179003120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"no, when they want to support high-res output","msgtype":"m.text"},"ts":1179003121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<canvas height=\"1000\" width=\"1000\" style=\"height:100px;width:100px\">","msgtype":"m.text"},"ts":1179003180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then toDataURL would give a 1000x1000 image","msgtype":"m.text"},"ts":1179003181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179003240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it does now","msgtype":"m.text"},"ts":1179003241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What if the user already has a clever browser and a really high-res display, so it puts 10x10 device pixels per canvas pixel?","msgtype":"m.text"},"ts":1179003242000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1179003243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then it ends up with 10000x10000 device pixels for that canvas","msgtype":"m.text"},"ts":1179003244000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1179003245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, maybe if it does some clever subpixel rendering...","msgtype":"m.text"},"ts":1179003300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Otherwise it would have to depend on the CSS computed size","msgtype":"m.text"},"ts":1179003301000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Or it would have to always have 1 device pixel = 1 canvas pixel","msgtype":"m.text"},"ts":1179003302000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(where the latter case makes everything easy, as far as I can see :-) )","msgtype":"m.text"},"ts":1179003303000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"no it wouldn't","msgtype":"m.text"},"ts":1179003304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSS pixel != device pixel","msgtype":"m.text"},"ts":1179003360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you'd get weird styling effects and such","msgtype":"m.text"},"ts":1179003361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If I have <canvas width=1000 height=1000> and a browser with 10x10 device pixels per canvas pixels, then the \"size of the coordinate space\" is 1000x1000, so that would give 10000x10000 device pixels?","msgtype":"m.text"},"ts":1179003420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it depends on display","msgtype":"m.text"},"ts":1179003421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on the device, really","msgtype":"m.text"},"ts":1179003422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"device pixels = actual rendering","msgtype":"m.text"},"ts":1179003480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it's not really about the browser","msgtype":"m.text"},"ts":1179003481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However many device pixels it gives, does <canvas width=1000 height=1000 style=\"width:100px; height:100px\"> give the same number?","msgtype":"m.text"},"ts":1179003482000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"unlikely","msgtype":"m.text"},"ts":1179003540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually, no","msgtype":"m.text"},"ts":1179003541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it depends on the computed CSS size, what would happen with <canvas style=\"width:100%\"> when the user resizes their browser and the computed CSS size changes?","msgtype":"m.text"},"ts":1179003542000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the canvas pixel to CSS pixel ratio would change?","msgtype":"m.text"},"ts":1179003600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(amount of canvas pixels is always fixed)","msgtype":"m.text"},"ts":1179003601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But the number of device pixels in the canvas would stay the same?","msgtype":"m.text"},"ts":1179003602000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(as in, unsigned integer)","msgtype":"m.text"},"ts":1179003660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, no, device pixels is the amount of pixels used to render the canvas on the screen (= device)","msgtype":"m.text"},"ts":1179003661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How can the browser change the number of device pixels being used to store the image in the canvas, without making a mess of the canvas's contents?","msgtype":"m.text"},"ts":1179003720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, I would think the browser stores the data internally and eventually scales it based on CSS provided and puts it on the screen","msgtype":"m.text"},"ts":1179003780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's sort of what happens with scaled images iirc","msgtype":"m.text"},"ts":1179003840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"With things like getImageData, \"device pixels\" is used for the underlying pixel data that's stored internally","msgtype":"m.text"},"ts":1179003841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's all a bit confusing","msgtype":"m.text"},"ts":1179003900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would tend to agree ;-)","msgtype":"m.text"},"ts":1179003901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but if that's your point I agree with your earlier suggestion about 1 device pixel = 1 canvas pixel","msgtype":"m.text"},"ts":1179003902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and by default 1 canvas pixel would be 1 css pixel","msgtype":"m.text"},"ts":1179003960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only way that seems to make sense to me is if the underlying pixel data stores exactly one pixel of data per canvas pixel, and getImageData/putImageData/toDataURL/drawImage act on that pixel data, and then that bitmap just gets rescaled by CSS or whatever at the final render-to-screen stage","msgtype":"m.text"},"ts":1179004020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://twitter.com/annevk/statuses/61777592","msgtype":"m.text"},"ts":1179004080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179004081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what other implementors would think","msgtype":"m.text"},"ts":1179004082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would also allow us to get rid of all the floats...","msgtype":"m.text"},"ts":1179004140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so a browser never has a higher-resolution bitmap to store the canvas data - it just scales up and looks a bit blurry","msgtype":"m.text"},"ts":1179004141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(or the author makes canvas.width/height larger so there's more canvas pixels per monitor pixel)","msgtype":"m.text"},"ts":1179004142000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(if the author cares enough and makes sure they're not doing it all wrong)","msgtype":"m.text"},"ts":1179004143000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and if the author has some way of determining that a certain user would benefit from a bigger canvas)","msgtype":"m.text"},"ts":1179004200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"not sure if you can forbid UAs to do anti-alias","msgtype":"m.text"},"ts":1179004201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but getting the basics more consistent would be good","msgtype":"m.text"},"ts":1179004260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure why they'd be forbidden to anti-alias...","msgtype":"m.text"},"ts":1179004261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, if you don't allow \"subpixel\" rendering","msgtype":"m.text"},"ts":1179004262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it might be tricky to smooth things now and then","msgtype":"m.text"},"ts":1179004263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(given that UAs actually do that now, dunno)","msgtype":"m.text"},"ts":1179004320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They could do subpixel rendering inside a function, but the result would just be four bytes in a bitmap somewhere, so you could always retrieve and save and redraw the pixels without losing any information","msgtype":"m.text"},"ts":1179004321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose that would disallow supersampling antialiasing, where you just render to a big bitmap then scale down, but I didn't think anyone does that since it uses far too much memory","msgtype":"m.text"},"ts":1179004380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah, an email - I think I agree with that, assuming I'm not mixing the terminology up again :-)","msgtype":"m.text"},"ts":1179004620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders if Apple guys would agree to getting rid of floats","msgtype":"m.emote"},"ts":1179004740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which floats do you mean?","msgtype":"m.text"},"ts":1179004800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's still useful being able to draw to subpixel locations, because antialiasing does the right thing","msgtype":"m.text"},"ts":1179004801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's only really getImageData/putImageData where you want actual real pixels, not subpixels","msgtype":"m.text"},"ts":1179004802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm ok","msgtype":"m.text"},"ts":1179004803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but what if you put four different color subpixels into one pixel","msgtype":"m.text"},"ts":1179004860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what would getImageData do?","msgtype":"m.text"},"ts":1179004861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1179004862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you draw a solid 0.5x0.5 green rectangle inside one pixel, it will modify the internal bitmap to have a rgba(0, 255, 0, 0.25) value there","msgtype":"m.text"},"ts":1179004920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(because the antialiasing algorithm decides that pixel has 25% coverage by what you're drawing, which it approximates by giving 25% alpha across the whole pixel)","msgtype":"m.text"},"ts":1179004921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"feel free to follow-up there with that","msgtype":"m.text"},"ts":1179004922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose your idea might make it more acceptable","msgtype":"m.text"},"ts":1179005100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://canvex.lazyilluminati.com/misc/subpixel.html - 0.5x0.5 rectangles are drawn the same as 1x1 alpha=0.25 rectangles","msgtype":"m.text"},"ts":1179005520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you get vastly different results in Firefox and Opera","msgtype":"m.text"},"ts":1179005580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think Opera does indeed do what you suggest","msgtype":"m.text"},"ts":1179005760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Firefox doesn't","msgtype":"m.text"},"ts":1179005761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's the effects of their CSS image resizing - Opera seems to be just repeating each pixel 100x100 times, Firefox 3 is doing smooth scaling (like Opera normally does with resized images), but in both cases the actual canvas is just a 3x3 array of pixels (which is what I want)","msgtype":"m.text"},"ts":1179005820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1179005940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so the actual back end does indeed do 1 <canvas> device pixel = 1 canvas pixel","msgtype":"m.text"},"ts":1179005941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose that makes sense","msgtype":"m.text"},"ts":1179006000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some people actually think the HTML4 spec is more clear","msgtype":"m.text"},"ts":1179006660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see http://www.456bereastreet.com/archive/200705/is_html_5_a_slippery_slope/#comment17","msgtype":"m.text"},"ts":1179006661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hopes he will give some suggestions on how to improve the text","msgtype":"m.emote"},"ts":1179006662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is totally fine with the current text","msgtype":"m.emote"},"ts":1179006720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, the reading bit of it","msgtype":"m.text"},"ts":1179006721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I was quite confused above. Confusing the internal <canvas> with the output on screen...)","msgtype":"m.text"},"ts":1179006900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(It just hit my why the difference in rendering is hardly an indicator of what's going on in this case :) )","msgtype":"m.text"},"ts":1179006901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, can't the anti-aliasing algorithm differ per browser though?","msgtype":"m.text"},"ts":1179007260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In theory it could, but in practice everyone seems to implement it in the standard way - a pixel of which a fraction 'n' is covered by (r,g,b,a) is just treated the same as a pixel entirely covered by (r,g,b,a*n)","msgtype":"m.text"},"ts":1179007560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't know of any other ways to do it, without storing extra data (e.g. lots of subpixels) per pixel","msgtype":"m.text"},"ts":1179007620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and people don't really do the latter, in my experience)","msgtype":"m.text"},"ts":1179007621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(*limited experience)","msgtype":"m.text"},"ts":1179007622000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1179007623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nice follow-up e-mail","msgtype":"m.text"},"ts":1179007680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There are differences in how you decide how much of a pixel is covered by whatever's being drawn if you're e.g. drawing a gradient or a smoothly-filtered image (so it's not a single colour covering some fraction of the pixel), but still the output is a single (r,g,b,a) per pixel, and those differences don't matter much","msgtype":"m.text"},"ts":1179007740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose height and width are still useful on ImageData","msgtype":"m.text"},"ts":1179007741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think they're still useful since otherwise you'd usually have to remember the width and height in extra variables somewhere, because you're going to be looping over them or multiplying by them","msgtype":"m.text"},"ts":1179007800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"do you have tests on imagedata = {} not matching the actual definition?","msgtype":"m.text"},"ts":1179007860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(In that button-drawing site I found where they actually used ImageData.width/height correctly, I think that was probably accidental and they just used width/height because they were convenient ways to access the numbers)","msgtype":"m.text"},"ts":1179007920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I've not done any tests with ImageData","msgtype":"m.text"},"ts":1179007980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1179007981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just have to catch a Hixie to update the spec","msgtype":"m.text"},"ts":1179007982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/TR/html401/present/graphics.html#edef-B - I think the list there (TT/I/B/...) makes HTML4 far more readable, compared to HTML5 where the definitions are spread all over the place","msgtype":"m.text"},"ts":1179008160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Elements could supposedly have an introduction chapter with such informative descriptions...","msgtype":"m.text"},"ts":1179008340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only thing it says is that they must be properly nested","msgtype":"m.text"},"ts":1179008400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no other requirements...","msgtype":"m.text"},"ts":1179008401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The lack of requirements and of precision is probably what makes it readable :-)","msgtype":"m.text"},"ts":1179008460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"id and class have no user agent requirements either","msgtype":"m.text"},"ts":1179008461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose :)","msgtype":"m.text"},"ts":1179008520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's a tutorial for authors :)","msgtype":"m.text"},"ts":1179008521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with a spec sticker on top and some DTD grammar here and there","msgtype":"m.text"},"ts":1179008522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I also believe that authors are better served with more interoperability than with a spec. Some vocal authors seem to disagree though","msgtype":"m.text"},"ts":1179008880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They are somehow under the impression that a clearer specification will improve authoring practices...","msgtype":"m.text"},"ts":1179008940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Let me hit you with the specification-clue-stick\"","msgtype":"m.text"},"ts":1179008941000,"senderName":"annevk","senderId":"annevk@irc"}
]