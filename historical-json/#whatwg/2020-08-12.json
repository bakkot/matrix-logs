[
{"content":{"body":"I had gotten a bit confused. I was reading #the-style-element, which linked to #associated-css-style-sheet, and I noticed it required `HTMLStyleElement` to implement `linkStyle`. I hadn't realized that Web IDL put includes at the bottom, so I was like \"where is linkStyle implemented\". Eventually, I figured it out.","msgtype":"m.text"},"ts":1597193965000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"annevk: Domenic: gsnedders: Turns out it's used on >30% of page loads, so I guess sync IPC is a no-go (https://www.chromestatus.com/metrics/feature/timeline/popularity/2719). I pitched some ideas about what 'approximate' values we could use here https://github.com/whatwg/html/issues/2018#issuecomment-671887516","msgtype":"m.text"},"ts":1597224086000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: annevk: so it turns out that Firefox is actually failing that html5lib test I mentioned here about a week ago","msgtype":"m.text"},"ts":1597224761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://freenode.logbot.info/whatwg/20200805#c4645508","msgtype":"m.text"},"ts":1597224771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when I mentioned it last week I hadn’t realized it’s a testing fragment parsing, not normal parsing","msgtype":"m.text"},"ts":1597224809000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so the actual test that’s failing is, parsing of <math><tr><td><mo><tr> with <tr> as the context","msgtype":"m.text"},"ts":1597224858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/blob/master/tree-construction/math.dat#L12","msgtype":"m.text"},"ts":1597224899000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually, that test and 3 other <math> fragment-parsing tests","msgtype":"m.text"},"ts":1597224933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://wpt.live/html/syntax/parsing/html5lib_innerHTML_math.html","msgtype":"m.text"},"ts":1597224944000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://wpt.fyi/results/html/syntax/parsing/html5lib_innerHTML_math.html?label=master&label=experimental&aligned","msgtype":"m.text"},"ts":1597225000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1597225290000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so now I wonder why those failures hadn’t been noticed","msgtype":"m.text"},"ts":1597225311000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or else if they had been noticed, why there’s not an open Firefox bug about fixing them","msgtype":"m.text"},"ts":1597225337000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I wonder if for Firefox CI, they’re flagged as expected failures (and if so, why)","msgtype":"m.text"},"ts":1597225383000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://searchfox.org/mozilla-central/source/testing/web-platform/meta/html/syntax/parsing/html5lib_innerHTML_math.html.ini","msgtype":"m.text"},"ts":1597225919000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Looks like we added expected: FAIL on a sync in 2018","msgtype":"m.text"},"ts":1597225964000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's hard to get people to look at all the expected failures, although we're getting better (layout team in particular are doing a great job)","msgtype":"m.text"},"ts":1597226014000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ah thanks","msgtype":"m.text"},"ts":1597226200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well as far as looking at the failures, I’m checking the source now","msgtype":"m.text"},"ts":1597226250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it has to be some problem with the code not putting the tree builder into the right insertion mode for the context node","msgtype":"m.text"},"ts":1597226359000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...because it’s getting the same test right if it’s run with a different context node","msgtype":"m.text"},"ts":1597226420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"specifically, that test works if the context element is td, but fails if the context element is tr","msgtype":"m.text"},"ts":1597226466000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: ^","msgtype":"m.text"},"ts":1597226586000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I try to use BroadcastChannel in a test. Find that it is still not implemented in WebKit. Find https://bugs.webkit.org/show_bug.cgi?id=161472#c4","msgtype":"m.text"},"ts":1597226937000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think Ryosuke mentitioned the same thing in an issue-tracker discussion yesterday","msgtype":"m.text"},"ts":1597227158000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe that was another feature, in which case it’s a general issue blocking multiple features","msgtype":"m.text"},"ts":1597227283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think hsivonen is going to merge some changes from the validator to Gecko, to ensure the behavior is the same","msgtype":"m.text"},"ts":1597235431000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think I know the ones he’s planning to merge (they’re changes I wrote), but for this math fragment-parsing case, there’s no change yet — the Java (validator) parser also has the same bug, unfixed","msgtype":"m.text"},"ts":1597235778000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1597236220000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"where in the HTML spec is the meaning of \"resolve a promise\" defined?","msgtype":"m.text"},"ts":1597264744000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"ah, is it using the one in webidl? https://heycam.github.io/webidl/#resolve","msgtype":"m.text"},"ts":1597264866000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: https://heycam.github.io/webidl/#resolve","msgtype":"m.text"},"ts":1597264876000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1597264883000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Ah you found it","msgtype":"m.text"},"ts":1597264883000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah I think that's it","msgtype":"m.text"},"ts":1597264903000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"ah dang y'all beat me","msgtype":"m.text"},"ts":1597264923000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i am glad irccloud doesn't autolink repo pictures","msgtype":"m.text"},"ts":1597264959000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1597265016000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/iqADohBo/","msgtype":"m.text"},"ts":1597267194000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"Oof, accidentally posted as snippet","msgtype":"m.text"},"ts":1597267207000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"If you abandon back-compat, you can indeed get a much simpler parser","msgtype":"m.text"},"ts":1597267616000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://ygg01.github.io/xml5_draft/ is one such example, especially if you subtract all the DOCTYPE states.","msgtype":"m.text"},"ts":1597267649000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, that's cool","msgtype":"m.text"},"ts":1597267857000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"Huh, Processing Instruction state? That must be something from XML that is not in HTML","msgtype":"m.text"},"ts":1597268024000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"Tbh I think that, as far as parsing HTML5, the complexity is in the Insertion Modes","msgtype":"m.text"},"ts":1597268731000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"Yes, there are more Tokenization states than Insertion Modes","msgtype":"m.text"},"ts":1597268731000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"But the Insertion modes have large branches for different tokens","msgtype":"m.text"},"ts":1597268731000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"And also, the logic used in Insertion Modes is much more complex than that of Tokenization States,  and can even call into other algorithims","msgtype":"m.text"},"ts":1597268731000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"https://usercontent.irccloud-cdn.com/file/OruABbaj/image.png","msgtype":"m.text"},"ts":1597268971000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"The blue boxes are TODO statements","msgtype":"m.text"},"ts":1597268979000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"I have many more in the insertion state point than my tokenization point","msgtype":"m.text"},"ts":1597268996000,"senderName":"EveryOS","senderId":"EveryOS@irc"},
{"content":{"body":"Good point, if you have a less complex language, then tree construction becomes trivial once you've tokenized.","msgtype":"m.text"},"ts":1597269253000,"senderName":"Domenic","senderId":"Domenic@irc"}
]