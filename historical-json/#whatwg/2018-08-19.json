[
{"content":{"body":"Yeah, the working copy is still duplicated, but you can at least avoid duplicating the *rest* of history.","msgtype":"m.text"},"ts":1534681686000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think GH does anything fancy, it just has all forks share a single repository AFAICT.","msgtype":"m.text"},"ts":1534682275000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(For example you can access any upstream commits that are not yet supposed to be in your fork, from the fork's page on GH.)","msgtype":"m.text"},"ts":1534682359000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"is there any way to entangle an existing readable and writable into a transform","msgtype":"m.text"},"ts":1534715821000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: can you give a use case?","msgtype":"m.text"},"ts":1534718133000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: i'm working on interop with node streams","msgtype":"m.text"},"ts":1534718323000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i have a method to get a readable stream and a method to get a writable stream","msgtype":"m.text"},"ts":1534718333000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'd like to just entangle them","msgtype":"m.text"},"ts":1534718337000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the transform stream constructor doesn't let you specify stuff like the pull method of readable etc","msgtype":"m.text"},"ts":1534718358000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"well you have to assign semantics to how they are entangled no?","msgtype":"m.text"},"ts":1534718429000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"its kinda just readable.read().then(transform).then(writable.write) right?","msgtype":"m.text"},"ts":1534718486000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh, isn’t that pipeTo then?","msgtype":"m.text"},"ts":1534718510000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"there's no way to pipeThrough without a transform stream","msgtype":"m.text"},"ts":1534718540000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i was just trying to describe the semantics of a transform stream","msgtype":"m.text"},"ts":1534718548000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"pipeTo, not pipeThrough","msgtype":"m.text"},"ts":1534718569000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"can you give me an example of what the “methods to return a readable stream and a writable stream”","msgtype":"m.text"},"ts":1534718625000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"(also on a train so spotty internet)","msgtype":"m.text"},"ts":1534718636000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"readable https://github.com/nodejs/node/pull/22352/files#diff-ba6a0df0f5212f5cba5ca5179e209a17R991","msgtype":"m.text"},"ts":1534718706000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"writable https://github.com/nodejs/node/pull/22352/files#diff-1915a7b992a3012b177dd855fa3477e0R594","msgtype":"m.text"},"ts":1534718708000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"here's my current impl of transform but i think its missing the proper support with node's impl of  backpressure https://github.com/nodejs/node/pull/22352/files#diff-9d52ef7e808de6b37f6f25d758fe99d3R206","msgtype":"m.text"},"ts":1534718744000,"senderName":"devsnek","senderId":"devsnek@irc"}
]