[
{"content":{"body":"jgraham: parse it and see if the serialized result is the same as the input","msgtype":"m.text"},"ts":1424932327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr___: ah, but what it's called?","msgtype":"m.text"},"ts":1424932359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1137079","msgtype":"m.text"},"ts":1424932993000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Bug 1137079 - https://whatwg.org/ Secure Connection Failed (Error code: ssl_error_no_cypher_overlap)","msgtype":"m.text"},"ts":1424933002000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: can you reproduce it?","msgtype":"m.text"},"ts":1424935547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is switching to Firefox 39.0a1 (2015-02-25)","msgtype":"m.emote"},"ts":1424935871000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"is going to https://bugzilla.mozilla.org/show_bug.cgi?id=1137079","msgtype":"m.emote"},"ts":1424935881000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"failing on https://forums.whatwg.org/","msgtype":"m.text"},"ts":1424936032000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: yeah, multiple subdomains are not on the whitelist, I left a comment on the whitelist bug emk pointed out","msgtype":"m.text"},"ts":1424936065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sees https://hg.mozilla.org/releases/mozilla-aurora/file/2e3aaa26bca4/security/manager/ssl/src/IntolerantFallbackList.inc","msgtype":"m.emote"},"ts":1424936069000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: euh, emk did point that out, someone else did","msgtype":"m.text"},"ts":1424936076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"karlcow: e.g. images.w.o spec.w.o validator.w.o all fail too","msgtype":"m.text"},"ts":1424936095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yes.","msgtype":"m.text"},"ts":1424936112000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1137079#c6","msgtype":"m.text"},"ts":1424936112000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"hopes the whitelist is serverside and not included in the client.","msgtype":"m.emote"},"ts":1424936136000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: it's included in the client","msgtype":"m.text"},"ts":1424936221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"karlcow: not sure why it matters","msgtype":"m.text"},"ts":1424936246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for updates.","msgtype":"m.text"},"ts":1424936422000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"When it's included in the client you create a delay","msgtype":"m.text"},"ts":1424936441000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"it's becoming an acute issue when it's on Mobile.","msgtype":"m.text"},"ts":1424936462000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"because not all operators decide to update the OS.","msgtype":"m.text"},"ts":1424936482000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"(for FIrefox OS)","msgtype":"m.text"},"ts":1424936488000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"so you keep having a whitelist which is not accurate anymore.","msgtype":"m.text"},"ts":1424936501000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"And domains get bought by other people, etc.","msgtype":"m.text"},"ts":1424936513000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"We had the issue for UA override on Firefox OS 1.0.","msgtype":"m.text"},"ts":1424936574000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"So we decided to switch to server-side for the next version.","msgtype":"m.text"},"ts":1424936596000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"So we could remove (or add) at will a UA override without having to wait for the operator to cherry pick the update, or waiting that it will never update. :)","msgtype":"m.text"},"ts":1424936642000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"That depends on what the update logic is. If operators decide to remove the update logic...","msgtype":"m.text"},"ts":1424936896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: yeah, kill it","msgtype":"m.text"},"ts":1424939705000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I've removed it from the spec. I forgot it was still there. I think there are uses, but we'll properly think it through before adding it back","msgtype":"m.text"},"ts":1424940780000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: looks like there are a few markup errors in your source that darobin fixed in https://github.com/w3c/spork/commits/master (like x-data)","msgtype":"m.text"},"ts":1424941680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Release the storage mutex!\" is my favourite thing to shout in an evil voice","msgtype":"m.text"},"ts":1424943598000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: why is default() still in the spec?","msgtype":"m.text"},"ts":1424945266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also, nobody implements the storage mutex :-(","msgtype":"m.text"},"ts":1424945292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm working through issues now. Will get to that one :)","msgtype":"m.text"},"ts":1424945317000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA++","msgtype":"m.text"},"ts":1424945324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I like to think that gives you extra speed.)","msgtype":"m.text"},"ts":1424945347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1424945522000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: https://github.com/slightlyoff/ServiceWorker/issues/631#issuecomment-75740946 are you saying the client may have gone before the beacon initiates its request?","msgtype":"m.text"},"ts":1424951889000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: So, without event.default(), how would I fetch a resource (say, CSS) in a way that makes relative urls in the CSS relative to finalURL","msgtype":"m.text"},"ts":1424952931000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1424952933000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes, the client may have gone","msgtype":"m.text"},"ts":1424957604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ping=\"\" and such are required to be done at some point, but usually after the user has navigated away, the whole point is that they're a replacement for synchronous beforeunload tricks","msgtype":"m.text"},"ts":1424957644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: might still not be a problem I suppose, depends a bit on the definitions","msgtype":"m.text"},"ts":1424957659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's a good case for it being clientless, or perhaps even not using the SW at all","msgtype":"m.text"},"ts":1424957667000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think it should use the SW just like it should be subject to CSP, we don't really want special cases","msgtype":"m.text"},"ts":1424957689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's fair, as long as they don't hold up a waiting SW promoting to active","msgtype":"m.text"},"ts":1424957722000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: people are going to want to be able to catch all networking activity","msgtype":"m.text"},"ts":1424957728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I think that's fine","msgtype":"m.text"},"ts":1424957729000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://fetch.spec.whatwg.org/#dom-response-finalurl was the answer we designed together for base URLs","msgtype":"m.text"},"ts":1424957746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if I use fetch('/static/fallback.html') as a response to a navigation, does it effect base urls or the url bar?","msgtype":"m.text"},"ts":1424957840000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not unless you set finalURL","msgtype":"m.text"},"ts":1424957959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm not sure we fully considered the case of contexts that set the manual redirect flag though... Hmm","msgtype":"m.text"},"ts":1424958006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahhh ok, so it's not automatically set. So fetch('/blah.css') will swallow redirects by default, if I want the base url to reflect that I have to set finalURL manually (but, I can't observe the redirects)","msgtype":"m.text"},"ts":1424958042000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes","msgtype":"m.text"},"ts":1424958063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: for navigation and other contexts that don't follow redirects finalURL should probably be either be ignored or be cause for a network error or a really special synthetic redirect that I'm sure of how it would work","msgtype":"m.text"},"ts":1424958163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ignore seems good","msgtype":"m.text"},"ts":1424958203000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: So if I wanted to fetch(someCSS) & have potential redirects reflected in the base url, is there a way to do that?","msgtype":"m.text"},"ts":1424958232000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, but it's cumbersome I see now","msgtype":"m.text"},"ts":1424958364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: once you get hold of res, you'd do res.finalURL = true","msgtype":"m.text"},"ts":1424958380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohhhhhhhhh, it's a boolean!","msgtype":"m.text"},"ts":1424958394000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That was the missing bit","msgtype":"m.text"},"ts":1424958399000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"nah, that's not cumbersome that's fine","msgtype":"m.text"},"ts":1424958405000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but it seems like you want something like fetch(someCSS, {finalURL:true }) maybe... hmm","msgtype":"m.text"},"ts":1424958417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1424958421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It feels a bit better to expose it only on response","msgtype":"m.text"},"ts":1424958430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fetch(url).then(r => r.finalURL = true && r)","msgtype":"m.text"},"ts":1424958454000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"fetch(url).then(r => (r.finalURL = true) && r)","msgtype":"m.text"},"ts":1424958468000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Willing to bikeshed on the name? I totally assumed finalURL would be a string url","msgtype":"m.text"},"ts":1424958591000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, though I would prefer a ticket someplace then","msgtype":"m.text"},"ts":1424958672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/slightlyoff/ServiceWorker/issues/607#issuecomment-76181254","msgtype":"m.text"},"ts":1424958930000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah that seems good, and yeah, it's supposed to be stored as part of transfering the response","msgtype":"m.text"},"ts":1424959077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: otherwise it wouldn't make it into the Fetch process either","msgtype":"m.text"},"ts":1424959090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Intent to Remove showModalDialog\" exciting day","msgtype":"m.text"},"ts":1424959322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: renamed finalURL btw","msgtype":"m.text"},"ts":1424960281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1424960315000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Lemmie remove event.default()","msgtype":"m.text"},"ts":1424960322000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm going to enjoy this","msgtype":"m.text"},"ts":1424960326000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"is there any proposals for a 'force incognito' API","msgtype":"m.text"},"ts":1424961362000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":"for sites that say domestic abuse victims","msgtype":"m.text"},"ts":1424961374000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":"or something would use","msgtype":"m.text"},"ts":1424961378000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":"It'd be nice if a browser could take a tab incognito. Undoing history should be ok, tougher to deal with cookie/idb/ls changes","msgtype":"m.text"},"ts":1424961725000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: try opera 12","msgtype":"m.text"},"ts":1424961799000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: did it do that?","msgtype":"m.text"},"ts":1424961811000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"those guys thought of everything","msgtype":"m.text"},"ts":1424961818000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1424961821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Opera did it first\"","msgtype":"m.text"},"ts":1424961854000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well you could open a new private tab, you couldn't make an existing tab private","msgtype":"m.text"},"ts":1424961878000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, I meant taking an existing tab private","msgtype":"m.text"},"ts":1424961906000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"*everyone* can open private tabs","msgtype":"m.text"},"ts":1424961913000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"um... how?","msgtype":"m.text"},"ts":1424961957000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"incognito… or are you going to be pedantic and say that's a new window not tab? :P","msgtype":"m.text"},"ts":1424961989000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes? of course a window is not a tab :-)","msgtype":"m.text"},"ts":1424962009000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"*fert*","msgtype":"m.text"},"ts":1424962016000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that's a fart sound for your pedantry","msgtype":"m.text"},"ts":1424962029000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah ok, i never knew it was pedantry that came out of my ass :-D","msgtype":"m.text"},"ts":1424962094000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"But the idea of a forcing incognito is interesting. It'd need to be done as a header. I imagine banks would all do it for \"security\" reasons, so the user would need a way to opt out, and if that opt out is \"remembered\" you kinda lose the original use-case","msgtype":"m.text"},"ts":1424962145000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so going back, what would you expect to happen when you make an existing tab private?","msgtype":"m.text"},"ts":1424962154000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it to \"undo\" any non-private stuff it did, and reload in private mode. I realise the undo part is not really possible","msgtype":"m.text"},"ts":1424962203000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"r4vi: is this just a sudden idea or is a group lobbying for this?","msgtype":"m.text"},"ts":1424962294000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm actually working on a site that would find this useful","msgtype":"m.text"},"ts":1424962382000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":"so sudden idea","msgtype":"m.text"},"ts":1424962387000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":"It should be noted that it doesn't offer any \"meaningful\" security e.g. someone could set up the router to log all outbound DNS","msgtype":"m.text"},"ts":1424962389000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's true. Could even be false security.","msgtype":"m.text"},"ts":1424962415000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Of course the population of people who would do that is smaller than the population of people that can look through browser history","msgtype":"m.text"},"ts":1424962431000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: we're currently linking them to this guide http://www.youandco.org.uk/node/240","msgtype":"m.text"},"ts":1424962448000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":"but wish there was a more user-friendly way","msgtype":"m.text"},"ts":1424962462000,"senderName":"r4vi","senderId":"r4vi@irc"},
{"content":{"body":":( https://bugzilla.mozilla.org/show_bug.cgi?id=1107378","msgtype":"m.text"},"ts":1424971179000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not that surprising","msgtype":"m.text"},"ts":1424971756000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So who supports before/afterscriptexecute now? Gecko/Servo/Presto?","msgtype":"m.text"},"ts":1424974173000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: if a ServiceWorker script does \"new Worker('nested_worker.js')\"... is that something we support? should the nested worker script be automatically cached like importScript()?","msgtype":"m.text"},"ts":1424975257000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't see why we wouldn't support it, but I don't think it should be importScript cached.","msgtype":"m.text"},"ts":1424977878000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But it wouldn't be a lot of use","msgtype":"m.text"},"ts":1424977919000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But if devs find a use for it, they can store the script text in idb or a cache","msgtype":"m.text"},"ts":1424977976000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think we're going to disallow it for now in gecko... another problem is life cycle... if the SW gets killed at any time... it should stop the dedicated worker... (right?)  seems like it will be very difficult to use","msgtype":"m.text"},"ts":1424978917000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: if they store the script text manually... then they are using a data URI worker, right?","msgtype":"m.text"},"ts":1424978932000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it was my impressions blink didn't support nested workers at all yet, anyway... so this may just be a gecko thing","msgtype":"m.text"},"ts":1424978989000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, and yeah it'll get killed when the SW does. I can't think of many use cases for wanting a dedicated worker in a SW.","msgtype":"m.text"},"ts":1424979676000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the nested SharedWorker, though... that could be useful","msgtype":"m.text"},"ts":1424979696000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: an interesting question I guess is whether the request for the worker/sharedworker goes through the SW","msgtype":"m.text"},"ts":1424979739000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if it originates from a ServiceWorker, I thought the skip serviceworker flag was set","msgtype":"m.text"},"ts":1424979785000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: so if the sharedworker was first created from the document... then intercepted by SW... if first created from SW, then no interception... so dead simple for devs!","msgtype":"m.text"},"ts":1424979972000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^so dead simple^sounds dead simple","msgtype":"m.text"},"ts":1424979988000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"of course no one supports this case currently as far I know","msgtype":"m.text"},"ts":1424980011000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we only expose SharedWorker on the main thread","msgtype":"m.text"},"ts":1424980019000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"longdesc is a rec","msgtype":"m.text"},"ts":1424983011000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Good job everyone","msgtype":"m.text"},"ts":1424983016000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Can we now finally go back to something useful?","msgtype":"m.text"},"ts":1424983026000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"like reviewing perf wg's specs? Sounds like a good idea","msgtype":"m.text"},"ts":1424983481000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hears Ms2ger just volunteered","msgtype":"m.emote"},"ts":1424983495000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I was thinking more shutting them down on the next rechartering","msgtype":"m.text"},"ts":1424983521000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sgtm","msgtype":"m.text"},"ts":1424983536000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"like most things in w3c it was created to work around other badness in w3c process","msgtype":"m.text"},"ts":1424983559000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"now that all vendors have official joined the WG there's no point in having it be separate","msgtype":"m.text"},"ts":1424983573000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"(before they joined there was the possibility of moving things through that WG faster than others like public-webapps due to membership differences)","msgtype":"m.text"},"ts":1424983602000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"(perf wg's issues aren't w3c process issues)","msgtype":"m.text"},"ts":1424983611000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"goes back to reviewing","msgtype":"m.emote"},"ts":1424983623000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Perf wg is more \"eh, whatever\"","msgtype":"m.text"},"ts":1424983625000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"You got comments? Ain't nobody got time for that!\"","msgtype":"m.text"},"ts":1424983645000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: \"But we can measure exactly how much time ain't nobody got!\"","msgtype":"m.text"},"ts":1424984143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can't wait for longdesc2","msgtype":"m.text"},"ts":1424984304000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"smaug____: i'm just talking about why it was created and used, not how it functions in practice","msgtype":"m.text"},"ts":1424985674000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"i agree it's pretty terrible","msgtype":"m.text"},"ts":1424985688000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"ah, I don't even recall why it was created (and why the specs aren't written in webapps wg)","msgtype":"m.text"},"ts":1424986232000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"concerns about charter or velocity or both in the webapps wg","msgtype":"m.text"},"ts":1424987127000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"in w3c if you make a new wg you get to pick the members and charter and you can pick a set of members that will agree to the charter you want","msgtype":"m.text"},"ts":1424987162000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"whereas to spec a new thing in an existing WG you have to make sure it's within charter and if not get all existing members of the WG to agree to that charter","msgtype":"m.text"},"ts":1424987184000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"In whatwg, you can write a spec :)","msgtype":"m.text"},"ts":1424987185000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"who is going to stop you from writing a spec","msgtype":"m.text"},"ts":1424987518000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"the tzar of the internet?","msgtype":"m.text"},"ts":1424987527000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"if you want to publish it as a w3c spec (which some people find important, not that i find all that much value in that personally) then the w3c will","msgtype":"m.text"},"ts":1424988745000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"Sure, every monkey can get a spec published at w3c","msgtype":"m.text"},"ts":1424988793000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Case in point: me","msgtype":"m.text"},"ts":1424988796000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Wait, which spec did you write?","msgtype":"m.text"},"ts":1424988888000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DOM","msgtype":"m.text"},"ts":1424988926000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Under various names","msgtype":"m.text"},"ts":1424988932000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jsbell: hi!  do you know about how blink offlines the ServiceWorker script itself and its importScript() scripts?","msgtype":"m.text"},"ts":1424988933000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: just curious how blink handles a delayed importScript() call...  like if the script does setTimeout(function() { importScript('annoying.js'); }, 5000)","msgtype":"m.text"},"ts":1424988984000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess we just don't guarantee that any delayed script loads will be cached?","msgtype":"m.text"},"ts":1424989029000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"just makes it difficult to ensure we have a coherent set of scripts cached for offline use","msgtype":"m.text"},"ts":1424989045000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ServiceWorkers that last too long just get killed; nothing gets preserved across.","msgtype":"m.text"},"ts":1424989072000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you want to cache scripts with better guarantees, do a standard fetch and put it in a cache, then import it.","msgtype":"m.text"},"ts":1424989099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: with importScript(datauri) or something?  I wasn't clear how someone could take a fetch Response and get it into importScript()","msgtype":"m.text"},"ts":1424989181000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Given the current API, yeah, a data: url.","msgtype":"m.text"},"ts":1424989197000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so you think this is a dev evangelism issue?  people should just use importScripts() synchronously with the top line SW script or not at all?","msgtype":"m.text"},"ts":1424989260000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I suspect so, yeah.","msgtype":"m.text"},"ts":1424989271000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Standard SW wisdom: don't count on anything sticking around, you'll be disappointed eventually.","msgtype":"m.text"},"ts":1424989298000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yea... I know... but as an implementer, I'd like to be able to say \"we've successfully offlined this SW and its dependent scripts\"... but basically we can't ever know when its done","msgtype":"m.text"},"ts":1424989337000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Well, yeah, you have no idea when a SW is going to request more things off the network.","msgtype":"m.text"},"ts":1424989373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess thats why this is still open:  https://github.com/slightlyoff/ServiceWorker/issues/106","msgtype":"m.text"},"ts":1424989466000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hrm, I'm not sure that still needs to be open","msgtype":"m.text"},"ts":1424989547000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"TabAtkins: also, that's pretty BS","msgtype":"m.text"},"ts":1424989572000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Bikeshed?","msgtype":"m.text"},"ts":1424989581000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"slightlyoff: ?","msgtype":"m.text"},"ts":1424989586000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"requesting more things off the network\" post-install-setup phase means you didn't really want 'em","msgtype":"m.text"},"ts":1424989599000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"TabAtkins: if you liked it, you should have put a top-level importScripts() on it","msgtype":"m.text"},"ts":1424989611000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Um, okay. I mean, sure, it's obviously not a *strict dependency*, but I fail to see the relevance.","msgtype":"m.text"},"ts":1424989631000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"slightlyoff: its unclear to me from #106 what the end result of this was...","msgtype":"m.text"},"ts":1424989663000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and searching the spec for importScript does not reveal anything","msgtype":"m.text"},"ts":1424989687000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1424989705000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"yeah, I'm not sure we spec'd it, so having it open does seem right","msgtype":"m.text"},"ts":1424989714000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"sorry if its obvious and I missed it","msgtype":"m.text"},"ts":1424989716000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it sounds like its just a best effort caching... when the ServiceWorker script loads something through importScript()... put it in the cache","msgtype":"m.text"},"ts":1424989754000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or behavior (Blink) is to cache resources requested at initial download time (via importScripts) alongside the SW script version","msgtype":"m.text"},"ts":1424989756000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and the dependencies are only updated when the SW script updates","msgtype":"m.text"},"ts":1424989775000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: for delayed importScripts... it does not cache?","msgtype":"m.text"},"ts":1424989780000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(e.g., you run through an upgrade)","msgtype":"m.text"},"ts":1424989787000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"or thats just best effort","msgtype":"m.text"},"ts":1424989787000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think we cache.","msgtype":"m.text"},"ts":1424989793000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1424989801000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: at least not more than the HTTP cache provides","msgtype":"m.text"},"ts":1424989807000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: and that's the intended behavior","msgtype":"m.text"},"ts":1424989819000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: you can do more eval()-ing cache'd content if you want to","msgtype":"m.text"},"ts":1424989851000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: but that's all very explicit, which is what we were going for in the design","msgtype":"m.text"},"ts":1424989872000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: in gecko, I'm not sure we have an easy way to tell the difference between top level importScripts() and delayed importScripts()","msgtype":"m.text"},"ts":1424989881000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"you don't have some marker for the SW script that you're caching?","msgtype":"m.text"},"ts":1424989909000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"i.e., do you have a way of storing the SW script that opts it out of HTTP cache eviction?","msgtype":"m.text"},"ts":1424989930000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I don't know it's a problem to cache other importScripts more aggressively","msgtype":"m.text"},"ts":1424989966000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: we definitely know which one is the SW script","msgtype":"m.text"},"ts":1424989967000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I think we want to keep devs from depending on that","msgtype":"m.text"},"ts":1424989983000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I'm not 100% sure... but I think the importScripts all just come out of the js engine as \"something called importScripts!\"... we don't know which parent script called it","msgtype":"m.text"},"ts":1424990001000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"otherwise it becomes nearly impossible to reason about what's going to work in your SW as a download error in an importScript can screw you entirely","msgtype":"m.text"},"ts":1424990013000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"traces more code.","msgtype":"m.emote"},"ts":1424990024000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"how do you keep them with the same durability as the SW script? That's the only invariant we NEED to preserve","msgtype":"m.text"},"ts":1424990042000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: we are internally using the Cache API","msgtype":"m.text"},"ts":1424990070000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"would be fatal to a site if it importscripts started failing but the main SW script were there","msgtype":"m.text"},"ts":1424990077000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: seems legit. Don't think you've got a problem here then.","msgtype":"m.text"},"ts":1424990091000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: right... we are keeping the importScripts as persistent as the SW script...","msgtype":"m.text"},"ts":1424990097000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"slightlyoff: its just we may over-cache compared to blink","msgtype":"m.text"},"ts":1424990104000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"for delayed importScripts","msgtype":"m.text"},"ts":1424990109000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"its a subtle compatibility difference... hopefully it doesn't bite too many people","msgtype":"m.text"},"ts":1424990143000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think that's fine; contra TabAtkins, we're going to understand install-time vs. post-install-time requests for imported scripts","msgtype":"m.text"},"ts":1424990166000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I guess the http cache being there also muddies the water... people may think its fully offlined, but its just an aging http cache","msgtype":"m.text"},"ts":1424990172000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: I don't think this is really that bad, though...do you?","msgtype":"m.text"},"ts":1424990180000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: I think our long-term solution will be devtools warnings about dynamic importScripts() calls","msgtype":"m.text"},"ts":1424990210000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I'm pretty sure everything you said agrees with what I said, so no, I don't think it's bad. ^_^","msgtype":"m.text"},"ts":1424990221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ah, right, then I misunderstood you. Sorry!","msgtype":"m.text"},"ts":1424990232000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"thanks for the help","msgtype":"m.text"},"ts":1424990234000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(I said that dynamic/delayed importScript() calls should instead be fetch()/cache, then import them when you're sure they've arrived.)","msgtype":"m.text"},"ts":1424990251000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, that's totally true","msgtype":"m.text"},"ts":1424990290000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"will ping jungkees about getting this squred away. I think we only need to say that importScripts post-initial-download MAY be discarded by the UA","msgtype":"m.text"},"ts":1424990329000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: using the Cache API should prevent the real compat worry (in my mind), which is the scripts getting updated at different rates by UAs","msgtype":"m.text"},"ts":1424990366000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: I've been corrected by baku and nsm... we do have a way to implement the same \"cache only top importScript() calls\"","msgtype":"m.text"},"ts":1424990614000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we're going to do that","msgtype":"m.text"},"ts":1424990620000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rad!","msgtype":"m.text"},"ts":1424990630000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"does happy compatibility dance","msgtype":"m.emote"},"ts":1424990640000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"yea, good to be compatible and I like knowing when we are done caching","msgtype":"m.text"},"ts":1424990657000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"slightlyoff: so I guess formalize that behavior in the spec?","msgtype":"m.text"},"ts":1424990673000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yep!","msgtype":"m.text"},"ts":1424990680000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"awesome, thanks!","msgtype":"m.text"},"ts":1424990689000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1424990935000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]