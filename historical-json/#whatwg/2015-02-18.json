[
{"content":{"body":"HTML parsers have to all be taught about the `integrity` attribute? https://bugzilla.mozilla.org/show_bug.cgi?id=1100206","msgtype":"m.text"},"ts":1424230885000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think that's just an optimization.","msgtype":"m.text"},"ts":1424231362000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: ah ok","msgtype":"m.text"},"ts":1424231574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: minor FYI https://github.com/validator/validator/commit/4fed5654f831bd9b4135cf157997c8413aaededa","msgtype":"m.text"},"ts":1424240148000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: was doing housekeeping just now (removing executable bit on files per fantasai's e-mail ping) and remembered that VerifierServlet.policy file was still hanging around. Of course feel free to restore it if you actually need it in the repo.","msgtype":"m.text"},"ts":1424240266000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: another minor housekeeping thing when you have a chance - https://github.com/validator/validator/issues/36","msgtype":"m.text"},"ts":1424240679000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about whether it's ok to `git rm -r research-src` at this point","msgtype":"m.text"},"ts":1424240718000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: Robin and I may be visiting Lund May 3-4 or May 8-9","msgtype":"m.text"},"ts":1424246016000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I see now that's not terrifically close to where you are","msgtype":"m.text"},"ts":1424246032000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: cool. yeah it's 5h car ride","msgtype":"m.text"},"ts":1424246137000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: how realistic is the podcast service worker example if you can't actually fetch episode information from the target domain?","msgtype":"m.text"},"ts":1424248948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I'm starting to really like this FetchPromise idea","msgtype":"m.text"},"ts":1424264220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: currently https://fetch.spec.whatwg.org/#concept-request has some bookkeeping details such as \"redirect count\" and \"response tainting\"","msgtype":"m.text"},"ts":1424264257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: they would fit much better on a \"fetch status object\"","msgtype":"m.text"},"ts":1424264271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: could probably also use that to maintain the current URL, rather than mutate request's url as we go...","msgtype":"m.text"},"ts":1424264332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds good to me","msgtype":"m.text"},"ts":1424271050000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think its great the promise extension is a feasible approach to take","msgtype":"m.text"},"ts":1424271085000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: what's the plan for cancellation/abort/terminate? Just come up with ad-hoc fetch-only semantics under the name terminate(), then maybe insert CancellablePromise in between the prototype chain later and get a cancel() method?","msgtype":"m.text"},"ts":1424276592000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that's a plan I had if we don't want to wait for CancelablePromise","msgtype":"m.text"},"ts":1424276628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, seems OK","msgtype":"m.text"},"ts":1424276641000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and might make sense given that terminate() is really about terminating the network connection (which also affects the eventual stream)","msgtype":"m.text"},"ts":1424276651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, so it would have an effect on fulfilled FetchPromises too","msgtype":"m.text"},"ts":1424276678000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still unsure whether it should leave the promise forever-pending, or should reject it","msgtype":"m.text"},"ts":1424276700000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I was going for reject","msgtype":"m.text"},"ts":1424276789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that happens when something is wrong with the network now","msgtype":"m.text"},"ts":1424276840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: also, forever-pending would require a timeout wrapper which seems unfortunate","msgtype":"m.text"},"ts":1424276875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right. some of the feedback we've gotten on promise-cancellation = rejection has been that that forces people to insert `if (e instanceof Cancellation) { return; }` into the top of every failure handler","msgtype":"m.text"},"ts":1424276878000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't follow on the timeout wrapper?","msgtype":"m.text"},"ts":1424276888000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: forever pending means that callbacks are never invoked","msgtype":"m.text"},"ts":1424276920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: oh, that's interesting","msgtype":"m.text"},"ts":1424276932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, which is often what is desired","msgtype":"m.text"},"ts":1424276952000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks, that makes it indeed not so clear cut","msgtype":"m.text"},"ts":1424276954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. error handler = show error dialog to user, or do a retry","msgtype":"m.text"},"ts":1424276974000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what if we offer terminate({rejectWith:...})","msgtype":"m.text"},"ts":1424276998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"when omitted doesn't reject","msgtype":"m.text"},"ts":1424277011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm very interesting","msgtype":"m.text"},"ts":1424277013000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"any particular reason why fetch() doesn't support some form of aborting a network request?","msgtype":"m.text"},"ts":1424280600000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: see logs, not sure about exact API yet","msgtype":"m.text"},"ts":1424280641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, so I see","msgtype":"m.text"},"ts":1424280759000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"tyvm","msgtype":"m.text"},"ts":1424280762000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"annevk, Domenic: I like the idea of terminating a promise with an option to keep it pending or rejected.  Nicely separates out the concerns.","msgtype":"m.text"},"ts":1424281895000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah it is nice and flexible. Trying to think of when I would use the rejectWith option though","msgtype":"m.text"},"ts":1424281926000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In a promise combinator?","msgtype":"m.text"},"ts":1424281943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm yeah maybe","msgtype":"m.text"},"ts":1424281958000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Admittedly it is fairly hard to imagine a scenario where network failure and intentionally causing network failure require the same code path","msgtype":"m.text"},"ts":1424282058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So far all I've come up with is showing some generic error message \"Your network connections are not up to par!\"","msgtype":"m.text"},"ts":1424282096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the use case for terminating network-related promises that is most evident is \"user hits the cancel button\"","msgtype":"m.text"},"ts":1424282716000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"potentially there's clean-up related actions","msgtype":"m.text"},"ts":1424282741000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"but the ultimate .catch() is likely to be some sort of error dialog which you'd want to supress","msgtype":"m.text"},"ts":1424282769000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"I think another compelling argument for forever-pending is that in the case of the promise already being resolved and the stream being canceled due to lack of network activity you cannot use the promise rejection code path either.","msgtype":"m.text"},"ts":1424283517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reads through https://github.com/kriskowal/q/issues/64","msgtype":"m.emote"},"ts":1424283970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So Q doesn't have it due to multiple clients of a single promise potentially getting confused","msgtype":"m.text"},"ts":1424284257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds https://github.com/promises-aplus/cancellation-spec/issues/6 next","msgtype":"m.emote"},"ts":1424284381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like the uncancellable idea","msgtype":"m.text"},"ts":1424284419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm surprised with the double l usage","msgtype":"m.text"},"ts":1424284726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bugs Kris https://twitter.com/annevk/status/568120153306734592","msgtype":"m.emote"},"ts":1424285547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fwiw, my motivation towards thinking about cancelling fetch was coming across this monstrosity of a pre-promise code:","msgtype":"m.text"},"ts":1424285832000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"https://dxr.mozilla.org/comm-central/source/mailnews/base/prefs/content/accountcreation/fetchConfig.js","msgtype":"m.text"},"ts":1424285835000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"Kris replies! https://github.com/kriskowal/gtor/blob/master/cancelation.md","msgtype":"m.text"},"ts":1424285911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also https://twitter.com/kriskowal/status/568120887112675328","msgtype":"m.text"},"ts":1424285917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jtcranmer: heh","msgtype":"m.text"},"ts":1424285947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if an abortable promise concept were available, I would not have been able to resist the urge to refactor the entire bloody mess","msgtype":"m.text"},"ts":1424285982000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"well, that and the Fetch API isn't quite implemented in Gecko yet","msgtype":"m.text"},"ts":1424286010000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: see dev-platform, we might be shipping in Fx 38","msgtype":"m.text"},"ts":1424286051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I did see that","msgtype":"m.text"},"ts":1424286070000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"I was poking at it last night, though","msgtype":"m.text"},"ts":1424286080000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"but I've got other code using XHR that I'm more minded to switch to Fetch now","msgtype":"m.text"},"ts":1424286104000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"(assuming Fetch is exposed in JS modules)","msgtype":"m.text"},"ts":1424286135000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"Hixie: Structured Clone question, you about?","msgtype":"m.text"},"ts":1424290136000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: curious","msgtype":"m.text"},"ts":1424290208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the text of how to set values on objects says \"Add a new property to output having the name name, and having the value cloned value.\"","msgtype":"m.text"},"ts":1424290231000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"(8.4 of https://html.spec.whatwg.org/multipage/infrastructure.html#internal-structured-cloning-algorithm)","msgtype":"m.text"},"ts":1424290260000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I'm guessing that's intended to call [[DefineOwnProperty]] in ES","msgtype":"m.text"},"ts":1424290280000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"but it would be nice for it to be more explicit","msgtype":"m.text"},"ts":1424290285000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"(Chrome calls [[Set]], which can cause some surprising behavior)","msgtype":"m.text"},"ts":1424290306000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: https://github.com/dslomov-chromium/ecmascript-structured-clone","msgtype":"m.text"},"ts":1424290323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aklein: I recommend continuing to petition TC39 to embrace and extend it","msgtype":"m.text"},"ts":1424290350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I agree that that would help","msgtype":"m.text"},"ts":1424290363000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: that has [[Set]] but might be due to Chrome doing that, not sure what Firefox does","msgtype":"m.text"},"ts":1424290380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Firefox appears to create own properties","msgtype":"m.text"},"ts":1424290392000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"don't have anything else handy at the moment","msgtype":"m.text"},"ts":1424290406000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"HTML already refers to [[Get]]","msgtype":"m.text"},"ts":1424290429000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"so I don't see any reason why it couldn't use [[DefineOwnProperty]]","msgtype":"m.text"},"ts":1424290439000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"(or [[Set]], if that's actually intended)","msgtype":"m.text"},"ts":1424290454000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: I don't think there's any particular reason, no","msgtype":"m.text"},"ts":1424290466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aklein: might be worth filing a bug, though I would not expect priority to be particularly high","msgtype":"m.text"},"ts":1424290499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aklein: especially with that GitHub repository going on to take it out of HTML","msgtype":"m.text"},"ts":1424290515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a meeting tomorrow with dslomov, will ask him if he has background on the status","msgtype":"m.text"},"ts":1424290549000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"thanks for the pointer to that repo","msgtype":"m.text"},"ts":1424290583000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: let me know if he's no longer pushing it, might try to get HTML clarified instead then","msgtype":"m.text"},"ts":1424290586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know it's not at the top of his priority queue","msgtype":"m.text"},"ts":1424290602000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=28052","msgtype":"m.text"},"ts":1424291023000,"senderName":"aklein","senderId":"aklein@irc"}
]