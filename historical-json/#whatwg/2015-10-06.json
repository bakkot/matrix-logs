[
{"content":{"body":"yhirano_: hey, do you want me to rebase and all that?","msgtype":"m.text"},"ts":1444113513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano_: cause it looks good now, apart from that","msgtype":"m.text"},"ts":1444113569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah,  I'll do","msgtype":"m.text"},"ts":1444113991000,"senderName":"yhirano_","senderId":"yhirano_@irc"},
{"content":{"body":"yhirano_: thank you","msgtype":"m.text"},"ts":1444113999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano_: all good now?","msgtype":"m.text"},"ts":1444114649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm reading through now, so please wait for a minute.","msgtype":"m.text"},"ts":1444115091000,"senderName":"yhirano_","senderId":"yhirano_@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1444115105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano_: can you remove the \".\" from the commit title?","msgtype":"m.text"},"ts":1444116265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano_: perhaps make the title \"Fix #118: add Response.prototype.body\"","msgtype":"m.text"},"ts":1444116304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: got it >> \".\"","msgtype":"m.text"},"ts":1444116423000,"senderName":"yhirano_","senderId":"yhirano_@irc"},
{"content":{"body":"annevk: I plan to add example (https://github.com/yutakahirano/fetch-with-streams/#fetch-api) as a separate commit so i planned to close the issue after that","msgtype":"m.text"},"ts":1444116475000,"senderName":"yhirano_","senderId":"yhirano_@irc"},
{"content":{"body":"annevk: though it is possible to include the example change in this commit","msgtype":"m.text"},"ts":1444116505000,"senderName":"yhirano_","senderId":"yhirano_@irc"},
{"content":{"body":"yhirano_: new PR is fine","msgtype":"m.text"},"ts":1444116529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fixed the commit title and message","msgtype":"m.text"},"ts":1444116958000,"senderName":"yhirano_","senderId":"yhirano_@irc"},
{"content":{"body":"annevk, JakeA: I'm around if you two still have concerns about the Fetch handling proposed in the CSP3 draft.","msgtype":"m.text"},"ts":1444117276000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Or we can chat later today. Whatever works.","msgtype":"m.text"},"ts":1444117292000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: working on something else at the moment, but have you thought through whether it makes sense for the service worker to be able to set the policy of a synthetic response (or perhaps a non-opaque response it got from somewhere) similar to how a server can?","msgtype":"m.text"},"ts":1444117403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'd like to get this bit hammered out this week, but no rush to get it done today. If you're busy, we can chat later.","msgtype":"m.text"},"ts":1444117518000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: To the specific question, the SW is the network, right? I don't see why it wouldn't be able to set headers on a response. There are particular headers that must take effect before the SW has a chance to screw with them (`clear-site-data` comes to mind), but I guess if the SW can create an entirely synthetic response, there's no real value in","msgtype":"m.text"},"ts":1444117660000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"restricting its access to the CSP header.","msgtype":"m.text"},"ts":1444117660000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: given that you patched HTTP-network fetch, it wouldn't have any effect","msgtype":"m.text"},"ts":1444117707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, I see the concern. Yeah. It makes sense that we'd need to parse the headers somewhere further down for that case.","msgtype":"m.text"},"ts":1444117747000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Not sure how to do that and preserve the option to effect `set-cookie` behavior, but I'll hack something together and ask you to take a look at it later.","msgtype":"m.text"},"ts":1444117794000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"n:1","msgtype":"m.text"},"ts":1444117828000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Affecting the set-cookie header sounds intriguing, I guess I should review that","msgtype":"m.text"},"ts":1444117978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess I should write it up. Will eventually live in https://w3c.github.io/webappsec-csp/cookies/, which modifies cookies currently, but also needs to poke at Fetch.","msgtype":"m.text"},"ts":1444118552000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: interesting","msgtype":"m.text"},"ts":1444118779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: https://w3c.github.io/webappsec-csp/cookies/#monkey-patching-rfc6264 should be a patch to Fetch afaict","msgtype":"m.text"},"ts":1444118861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: although I guess if you're going to do this on a per-cookie basis... hmm","msgtype":"m.text"},"ts":1444118882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I guess in that case you'd have to do that","msgtype":"m.text"},"ts":1444118905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: although \"none\" could still be handled at the Fetch level","msgtype":"m.text"},"ts":1444118925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We need to do that for `document.cookie = 'x=y';`. I guess we could do more granular `set-cookie` handling in Fetch, but if we're already doing it here for the JS interface, there's not much advantage in doing it twice.","msgtype":"m.text"},"ts":1444118950000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"'none' could certainly be handled in Fetch.","msgtype":"m.text"},"ts":1444118963000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'll try to spell it out in more detail today and send it over for you to skim.","msgtype":"m.text"},"ts":1444119061000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I would really prefer we just give an API to block document.cookie/domain","msgtype":"m.text"},"ts":1444119097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: HTTP-based API","msgtype":"m.text"},"ts":1444119104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: instead of granular control over what can be set","msgtype":"m.text"},"ts":1444119115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Why?","msgtype":"m.text"},"ts":1444119120000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: even with granular control you can still exhaust the store through XSS","msgtype":"m.text"},"ts":1444119135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: because both are bad APIs and should be avoided","msgtype":"m.text"},"ts":1444119184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes. Both should be avoided. And we should give folks the ability to turn them off (and I plan to).","msgtype":"m.text"},"ts":1444119217000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: But apps use them, for better or worse. Allowing them to lock down the usage to their specific needs seems like a way of allowing those apps to harden themselves, and doesn't seem like it adds substantial complexity.","msgtype":"m.text"},"ts":1444119262000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'll write it up one way or the other, and we can argue about whether or not it makes sense. :)","msgtype":"m.text"},"ts":1444119283000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I'd rather always block those two and offer a new asynchronous API where you would get more granular access","msgtype":"m.text"},"ts":1444119326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but okay, will wait","msgtype":"m.text"},"ts":1444119346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*shrug* I think it's better to spend our time getting CSP's integrations into shape, and then we can argue about what kind of new stuff to add on top. :)","msgtype":"m.text"},"ts":1444119384000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"So when I said \"today\", I think I was lying. :)","msgtype":"m.text"},"ts":1444119402000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"> Symbol.iterator is undefined for document.all","msgtype":"m.text"},"ts":1444120312000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"._.","msgtype":"m.text"},"ts":1444120314000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hi, I am wondering `Error: Bad value Content-Security-Policy for attribute http-equiv on element meta.` which I get when validating my site. From what I have understood it's w3 standard, so why would it cause validation error? Or was that just invented by caniuse.com or Chrome? http://caniuse.com/#feat=upgradeinsecurerequests Validation results in question:","msgtype":"m.text"},"ts":1444124249000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"https://validator.w3.org/nu/?doc=https%3A%2F%2Fmikaela.info%2F","msgtype":"m.text"},"ts":1444124249000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"http-equiv doesn't support all headers","msgtype":"m.text"},"ts":1444124365000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"However, I seem to recall ongoing work to support CSP there","msgtype":"m.text"},"ts":1444124381000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I see, so I can just safely ignore it for now?","msgtype":"m.text"},"ts":1444124443000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"I don't think it'll do anything right now, so you can ignore it unless you actually want CSP to apply","msgtype":"m.text"},"ts":1444124517000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thanks, It does apply on Chrome, no idea on the others","msgtype":"m.text"},"ts":1444124561000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"mkwst, ^","msgtype":"m.text"},"ts":1444124589000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ask MikeSmith.","msgtype":"m.text"},"ts":1444124609000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I added it to HTML, but I don't think the validator is updated yet.","msgtype":"m.text"},"ts":1444124629000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://html.spec.whatwg.org/#attr-meta-http-equiv-content-security-policy","msgtype":"m.text"},"ts":1444124660000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Mikaela: That directive in particular works in Chrome today, and will work in Firefox 42+.","msgtype":"m.text"},"ts":1444124827000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"and is valid?","msgtype":"m.text"},"ts":1444124885000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"(that link seems to be loading forever here)","msgtype":"m.text"},"ts":1444124910000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"Mikaela: Yes. The HTML spec is monstrous. It'll take forever to load, but once it does, you'll see that the `http-equiv` value is indeed specified.","msgtype":"m.text"},"ts":1444124957000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"thanks :)","msgtype":"m.text"},"ts":1444124968000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"Mikaela: The validator hasn't been updated, which is reasonable, since the value just got added to the spec ~weeks ago.","msgtype":"m.text"},"ts":1444124979000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/#attr-meta-http-equiv-content-security-policy is less monstrous","msgtype":"m.text"},"ts":1444125038000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Mikaela: yeah, sorry I've just not made time to update the sources of the HTML checker yet","msgtype":"m.text"},"ts":1444125052000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"On an unrelated note, is there a way to write a css rule that's overridden by a preshint?","msgtype":"m.text"},"ts":1444125085000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no problem, I was just curious as I was quite sure that it's valid","msgtype":"m.text"},"ts":1444125086000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"that less monstrous version works, thanks","msgtype":"m.text"},"ts":1444125098000,"senderName":"Mikaela","senderId":"Mikaela@irc"},
{"content":{"body":"zcorpan, surely you'd know that ^ :)","msgtype":"m.text"},"ts":1444125163000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: write it in your user stylesheet without !important","msgtype":"m.text"},"ts":1444125211000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not very test-friendly","msgtype":"m.text"},"ts":1444125222000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hey guys, any nice WYSIWYG editor you can recommend?","msgtype":"m.text"},"ts":1444125252000,"senderName":"raintrap_","senderId":"raintrap_@irc"},
{"content":{"body":"zcorpan, yeah, no :)","msgtype":"m.text"},"ts":1444125345000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't want this test that badly","msgtype":"m.text"},"ts":1444125357000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"preshint vs UA style is not material to interop anyway","msgtype":"m.text"},"ts":1444125513000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I was trying to test whether ol type=decimal is supported","msgtype":"m.text"},"ts":1444125541000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But if it only affects people with weird user styles.. Meh","msgtype":"m.text"},"ts":1444125571000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: http://dev.w3.org/html5/html4-differences/ redirects to a 404","msgtype":"m.text"},"ts":1444125627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is that bad? :)","msgtype":"m.text"},"ts":1444125639000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you can test <ul><li type=decimal> though","msgtype":"m.text"},"ts":1444125694000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: someone emailed me and suggest I replace a link from my site to that location with some spam","msgtype":"m.text"},"ts":1444125700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sorry for the useless issue. :)","msgtype":"m.text"},"ts":1444126523000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"it's cool, I think I mistakenly reported that one too once","msgtype":"m.text"},"ts":1444126555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm yeah lemme fix that","msgtype":"m.text"},"ts":1444127848000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah good after upgrading to El Capitan it seems there's no longer an Apple-provided cvs command","msgtype":"m.text"},"ts":1444127958000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is as things should be","msgtype":"m.text"},"ts":1444127971000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"homebrews is","msgtype":"m.emote"},"ts":1444127977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: fixed that redirect","msgtype":"m.text"},"ts":1444128184000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks for the heads-up","msgtype":"m.text"},"ts":1444128194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: brave new era of useful spam","msgtype":"m.text"},"ts":1444128235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1444128526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"achievement unlocked, found a valid use case for spam","msgtype":"m.text"},"ts":1444128560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in similar news, we found somebody actually prefers the IETF for something https://twitter.com/mikewest/status/651342403962601473","msgtype":"m.text"},"ts":1444128733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will wonders never cease","msgtype":"m.text"},"ts":1444128743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"lol, creating a new IANA registry","msgtype":"m.text"},"ts":1444128851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, the exciting life of me.","msgtype":"m.text"},"ts":1444128994000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"The IETF's publication system is so simple. It puts the W3C's to shame.","msgtype":"m.text"},"ts":1444129012000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I think I've mentioned this before.","msgtype":"m.text"},"ts":1444129026000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"yeah among other things, the result is  great for weeding out the people who might ever want try to read some part a spec on a smartphone","msgtype":"m.text"},"ts":1444129225000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the lack of ability to include useful internal cross-reference also frees up editors from the nuisance of trying to fill their documents with them","msgtype":"m.text"},"ts":1444129294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"remembers when Hixie was told to stop publishing so often, because the publishmonkey couldn't keep up","msgtype":"m.emote"},"ts":1444129998000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, the W3C is averse to change, but the IETF is worse","msgtype":"m.text"},"ts":1444131872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: hmm, now I'm thinking that perhaps navigation doesn't always discard","msgtype":"m.text"},"ts":1444134146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://html.spec.whatwg.org/#navigate calls \"unload a document\" which calls \"discard the document\", but I didn't check for early returns or conditions or anything","msgtype":"m.text"},"ts":1444134481000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: only when it cannot be salvaged","msgtype":"m.text"},"ts":1444134569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: so my patch probably breaks Mozilla's bfcache","msgtype":"m.text"},"ts":1444134581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1444134592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm?","msgtype":"m.text"},"ts":1444134624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, the spec actually doesn't just pretend that every navigation loads the URL from scratch?","msgtype":"m.text"},"ts":1444134639000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1444134648000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because that's observably different","msgtype":"m.text"},"ts":1444134660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't know the context btw","msgtype":"m.emote"},"ts":1444134684000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Right, but I have pretty low expectations in the area of navigation :)","msgtype":"m.text"},"ts":1444134687000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Well fair enough but it *tries* to be right","msgtype":"m.text"},"ts":1444134705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fascinating","msgtype":"m.text"},"ts":1444134715000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"So it gets things right like pageshow being different for actual loads vs history navigations","msgtype":"m.text"},"ts":1444134732000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess that means annevk needs to understand how this works, and then I need to pretend to have understood the change :P","msgtype":"m.text"},"ts":1444134736000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"What is \"this\"?","msgtype":"m.text"},"ts":1444134751000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: when to exit fullscreen during navigation","msgtype":"m.text"},"ts":1444134760000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1444134766000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is that supposed to be always?","msgtype":"m.text"},"ts":1444134792000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for top-level documents, yes, but not when navigating an iframe","msgtype":"m.text"},"ts":1444134826000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'm actually not sure what these restrictions achieve, though.","msgtype":"m.text"},"ts":1444134864000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Seems like it might be right to exit fullscreen after firing pagehide if the document is in a tlbc, or something?","msgtype":"m.text"},"ts":1444134919000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hasn't thought about it too much","msgtype":"m.emote"},"ts":1444134926000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah maybe, though we also need to tackle browsing contexts closing","msgtype":"m.text"},"ts":1444135451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if you close a browsing context, I guess history is not preserved?","msgtype":"m.text"},"ts":1444135463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well if you close a child browsing context, the join session history doesn't change. If you close a tlbc I think it all goes through the same steps to fire pagehide+unload+etc.","msgtype":"m.text"},"ts":1444135659000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"philipj: are you sure we shouldn't fire the event btw?","msgtype":"m.text"},"ts":1444136751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: wouldn't it be better if the site could still perform animations and such before being navigated","msgtype":"m.text"},"ts":1444136766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi, guys! What is the status of the multipart responses in http 1.*, http 2.0 and current browsers?","msgtype":"m.text"},"ts":1444136820000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"I mean, how well is it supported in browsers as well as in protocols..&","msgtype":"m.text"},"ts":1444136847000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1444136849000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"annevk: I would think it's too late to do anything at that point, or how long could the animation be?","msgtype":"m.text"},"ts":1444138138000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: dunno, but there's other events firing at that point","msgtype":"m.text"},"ts":1444138161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: an easy way to find out is to just use the incantations that will result in events being fired and see if implementors complain that it doesn't make any sense.","msgtype":"m.text"},"ts":1444138224000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"or more likely, if it doesn't make sense, the events just won't be fired anyway","msgtype":"m.text"},"ts":1444138238000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1444138272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should actually know","msgtype":"m.text"},"ts":1444138288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, for documents that aren't salvageable and are being discarded, it doesn't make much sense to fire any events I think","msgtype":"m.text"},"ts":1444138438000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but if you can navigate away from a fullscreen page and then back without a full reload, it would be very strange if the page still thinks it's fullscreen because no event has been fired","msgtype":"m.text"},"ts":1444138480000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"finds \"If any event listeners were triggered by the earlier unload event step\" and wonders how that is explained","msgtype":"m.emote"},"ts":1444140268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not","msgtype":"m.text"},"ts":1444140409000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, did we ever have dom explain the IDB \"if any event listener threw an exception\" pattern?","msgtype":"m.text"},"ts":1444140450000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: nope","msgtype":"m.text"},"ts":1444140467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how many fricking hacks did people add?","msgtype":"m.text"},"ts":1444140482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IDB no less, I though there was no real theoretical reason to dislike that API","msgtype":"m.text"},"ts":1444140522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"time for 😓","msgtype":"m.text"},"ts":1444140564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or maybe 😭 since it seems the floodgates on event listener hacks are open","msgtype":"m.text"},"ts":1444140588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"> Call for Review: W3C DOM4 Proposed Recommendation Published","msgtype":"m.text"},"ts":1444140672000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1444140673000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1444140962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"This branch is 209 commits ahead, 120 commits behind whatwg:master.\"","msgtype":"m.text"},"ts":1444140974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, uh, how many tests did they have to get to PR?","msgtype":"m.text"},"ts":1444141000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: another interesting data point for https://github.com/w3c/charter-html/issues/112#issuecomment-141880890 though I doubt anyone really cares","msgtype":"m.text"},"ts":1444141058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"plh is on his solo mission to replicate all things WHATWG","msgtype":"m.text"},"ts":1444141148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not doing a great job of it for the couple of things I checked","msgtype":"m.text"},"ts":1444141200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can stylesheet @imports be cross-origin?","msgtype":"m.text"},"ts":1444141294000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that opens a potential xss vector, as you can verify whether a certain css rule was applied and thus if that rule has been defined, right?","msgtype":"m.text"},"ts":1444141392000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: I don't know... I would be happy to hear its spec'd as same-origin only","msgtype":"m.text"},"ts":1444141421000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah, here it is: \"The origin of an imported style sheet is the same as the origin of the style sheet that imported it.\"","msgtype":"m.text"},"ts":1444141592000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"although maybe that means its just changing the origin of the imported stylesheet? hmm","msgtype":"m.text"},"ts":1444141609000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, thats some css origin concept","msgtype":"m.text"},"ts":1444141633000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"http://jsfiddle.net/m4drt18k/","msgtype":"m.text"},"ts":1444141726000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"loading cross origin css apparently works","msgtype":"m.text"},"ts":1444141736000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and the followup... http://jsfiddle.net/m4drt18k/1/","msgtype":"m.text"},"ts":1444141847000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"wanderview: yes they can","msgtype":"m.text"},"ts":1444142046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea... nice way to start the morning :-\\","msgtype":"m.text"},"ts":1444142065000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: CSS is full of SOP fail","msgtype":"m.text"},"ts":1444142090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my easy bug fix is turning into a month-long endeavor","msgtype":"m.text"},"ts":1444142116000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"isn't that just the worst?","msgtype":"m.text"},"ts":1444143185000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"is it deliberate the Acid tests don't have any clear license on them?","msgtype":"m.text"},"ts":1444143917000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm, stable links to html spec would be nice","msgtype":"m.text"},"ts":1444149793000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: what link broke?","msgtype":"m.text"},"ts":1444152135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://html.spec.whatwg.org/multipage/webappapis.html#processing-model-9:run-the-animation-frame-callbacks","msgtype":"m.text"},"ts":1444152458000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: so, I do have plans for this","msgtype":"m.text"},"ts":1444152623000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You'll be able to press \"y\" on your keyboard and your URL will mutate to something like https://streams.spec.whatwg.org/commit-snapshots/02e0a6431731da258d0dcad8b813c216c9f16d7c/#queuing-strategies (but for HTML of course)","msgtype":"m.text"},"ts":1444152670000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, what I'd like to see is to avoid removing fragment identifiers from the spec if just possible","msgtype":"m.text"},"ts":1444152768000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but of course that isn't always possible","msgtype":"m.text"},"ts":1444152785000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1444152826000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: I'm guessing that fragment identifier was generated by dfn.js","msgtype":"m.text"},"ts":1444154111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or maybe Wattsi, not sure what's up","msgtype":"m.text"},"ts":1444154135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay URL!","msgtype":"m.text"},"ts":1444155512000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Can you not CC people by email on W3C bugzilla","msgtype":"m.text"},"ts":1444160241000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"one needs to have a bugzilla account","msgtype":"m.text"},"ts":1444160466000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or perhaps you meant something else","msgtype":"m.text"},"ts":1444160503000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1444160566000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that is annoying","msgtype":"m.text"},"ts":1444160571000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: how is that different to github or chromium's bug tracker?","msgtype":"m.text"},"ts":1444160601000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: neither of those have CC fields which list email addresses, inviting you to simply add another email address","msgtype":"m.text"},"ts":1444160626000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh. Never seen it that way","msgtype":"m.text"},"ts":1444160673000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is annoyed by chromium's bug tracker requiring a Google account","msgtype":"m.emote"},"ts":1444160710000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is pretty bullshit :-/","msgtype":"m.text"},"ts":1444160729000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, it in practice reduces the likelihood I'd file blink bugs","msgtype":"m.text"},"ts":1444160819000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I do have google accounts but try to not use them","msgtype":"m.text"},"ts":1444160850000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(since google tends to track me so well)","msgtype":"m.text"},"ts":1444160858000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1444160869000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I heard there was a header you could send </troll>","msgtype":"m.text"},"ts":1444160904000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heycam|away: we need (undefined or type) stuff in IDL","msgtype":"m.text"},"ts":1444161299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: on the input side it exists as optional type, but there's nothing for the return side","msgtype":"m.text"},"ts":1444161316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if someone wants to file a bug on that, be my guest, I'll get to it eventually otherwise)","msgtype":"m.text"},"ts":1444161343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: feel free to file them through IRC proxy","msgtype":"m.text"},"ts":1444161681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: blink bugs?","msgtype":"m.text"},"ts":1444161807000,"senderName":"smaug____","senderId":"smaug____@irc"}
]