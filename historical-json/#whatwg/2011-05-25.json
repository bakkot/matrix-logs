[
{"content":{"body":"casts around for abarth","msgtype":"m.emote"},"ts":1306281660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"finds that it's pretty trivial to circumvent cross-origin font canvas tainting via timing attacks","msgtype":"m.emote"},"ts":1306282800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: for the \"find which characters are in the font\" attack?","msgtype":"m.text"},"ts":1306283100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Finding the shapes of the glyphs","msgtype":"m.text"},"ts":1306283340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"in that case you should be able to get data from any cross-origin image too, no?","msgtype":"m.text"},"ts":1306283400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"When filling text, if the glyph is outside the clipping area then it doesn't even attempt drawing any pixels","msgtype":"m.text"},"ts":1306283580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which affects the timing significantly","msgtype":"m.text"},"ts":1306283581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, interesting.","msgtype":"m.text"},"ts":1306283582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, apply 1px clipping area, and profit.","msgtype":"m.text"},"ts":1306283583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"With images it'll draw every pixel regardless of the value, so any differences would be far more subtle","msgtype":"m.text"},"ts":1306283640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is there an expensive composite mode or shadow or something that can make it different enough?","msgtype":"m.text"},"ts":1306283641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Given the current canvas operations, I doubt it.","msgtype":"m.text"},"ts":1306283700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"None of the mechanics should operate significantly differently based on the color of the canvas.","msgtype":"m.text"},"ts":1306283701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://philip.html5.org/demos/canvas/font-timing.html - very rough prototype","msgtype":"m.text"},"ts":1306283940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In Chromium 9.0 I get a very clear \"A\" shape after the first iteration","msgtype":"m.text"},"ts":1306283941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(on Linux)","msgtype":"m.text"},"ts":1306284000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Opera 11.10 gives a sort of triangle shape that improves over time","msgtype":"m.text"},"ts":1306284001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't seem to work on Firefox","msgtype":"m.text"},"ts":1306284060000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i don't really understand what we're protecting against here, personally","msgtype":"m.text"},"ts":1306284061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wfm on firefox on mac","msgtype":"m.text"},"ts":1306284062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Firefox just seems to hang my windowing system for tens of seconds until I get impatient and click X and then it closes a minute later","msgtype":"m.text"},"ts":1306284063000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"on windows I mean","msgtype":"m.text"},"ts":1306284180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it depends on the font backend I guess","msgtype":"m.text"},"ts":1306284181000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"means on Linux and hasn't tested elsewhere","msgtype":"m.emote"},"ts":1306284182000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"chrome and firefox on mac seem to very quickly give an A","msgtype":"m.text"},"ts":1306284183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on Mac we fall back to explicit path filling for large font sizes and I'm not surprised that that triggers optimizations when the path doesn't intersect the clip","msgtype":"m.text"},"ts":1306284240000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"on Windows we don't do that ourselves, who knows what GDI and D2D do","msgtype":"m.text"},"ts":1306284241000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"anyway, neat demo!","msgtype":"m.text"},"ts":1306284300000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1306284301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<3 timing channel attacks","msgtype":"m.text"},"ts":1306284302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can't","msgtype":"m.text"},"ts":1306284303000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"TabAtkins: I'm sure there's more than 3","msgtype":"m.text"},"ts":1306284360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aw man, now you've surely gotten him going through the unicode pages","msgtype":"m.text"},"ts":1306284361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In Chromium on Linux it seems mostly fill-rate dependent, rather than being dependent on clipping - the difference is much smaller with non-'lighter' compositing","msgtype":"m.text"},"ts":1306284420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"roc: the font size is 10px, there's just a large scale applied","msgtype":"m.text"},"ts":1306284421000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"TabAtkins: U+2665, U+2764, or the U+1F491-U+1F49F range","msgtype":"m.text"},"ts":1306284422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: try with a large font size","msgtype":"m.text"},"ts":1306284423000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i dunno if we consider the scale when deciding whether to use GDI to raster or grab a path and fill the path","msgtype":"m.text"},"ts":1306284424000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: I mean the post-resize scale factor","msgtype":"m.text"},"ts":1306284425000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we probably _should_ be using the post-resize scale factor","msgtype":"m.text"},"ts":1306284480000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: Browsers seem to care about fontsize * scalefactor, e.g. in Chromium it stops drawing the text if that's more than 12K or something","msgtype":"m.text"},"ts":1306284481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and in Firefox it seems to clamp the post-scale font size","msgtype":"m.text"},"ts":1306284482000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in 4.0, on Linux)","msgtype":"m.text"},"ts":1306284483000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(That \"12K\" isn't a precise figure, I just think it broke after about 12px with scale 1024)","msgtype":"m.text"},"ts":1306284540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: try applying a very slight skew","msgtype":"m.text"},"ts":1306284600000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"might force you down the path case in more cases","msgtype":"m.text"},"ts":1306284660000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"http://philip.html5.org/demos/canvas/img-timing-1.html - works for me in Chromium","msgtype":"m.text"},"ts":1306285860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://philip.html5.org/demos/canvas/img-timing-2.html - works for me in Opera","msgtype":"m.text"},"ts":1306285861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Warning: artwork may be disturbing)","msgtype":"m.text"},"ts":1306285920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i'm just getting noise","msgtype":"m.text"},"ts":1306286040000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1306286041000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hm, works better on linux","msgtype":"m.text"},"ts":1306286042000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"so it's testing blend time?","msgtype":"m.text"},"ts":1306286043000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"((This is just drawImageing one pixel of an image at a time, and transparent vs solid makes a difference))","msgtype":"m.text"},"ts":1306286100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"their compositing code has special cases for zero alpha?","msgtype":"m.text"},"ts":1306286101000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'm surprised that wins","msgtype":"m.text"},"ts":1306286102000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i wonder what layer is doing that","msgtype":"m.text"},"ts":1306286103000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"we have some special case code for 1x1 transparent images in various bits of the codebase (mostly for spacer.gif)","msgtype":"m.text"},"ts":1306286160000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"My Chromium is faster for alpha=255 than for alpha=0","msgtype":"m.text"},"ts":1306286161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in default source-over compositing)","msgtype":"m.text"},"ts":1306286162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but is alpha=254 different from alpha=255?","msgtype":"m.text"},"ts":1306286163000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"and what platform are you on? chrome/mac=coregraphics, chrome/win or linux=skia","msgtype":"m.text"},"ts":1306286164000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Firefox/Linux would be XRender, that would be interesting to test","msgtype":"m.text"},"ts":1306286220000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i have firefox on linux, what should i test?","msgtype":"m.text"},"ts":1306286221000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"getting noise in Mozilla/5.0 (X11; Linux i686 on x86_64; rv:6.0a1) Gecko/20110523 Firefox/6.0a1","msgtype":"m.text"},"ts":1306286222000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Philip`, am i right with the interpretation that you attempt to read cross origin resources via timing attacks?","msgtype":"m.text"},"ts":1306286223000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Chromium seems to be slow for alpha=0, alpha=1ish, alpha=254ish, fast for alpha=255","msgtype":"m.text"},"ts":1306286224000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the values are pretty low - 1/2","msgtype":"m.text"},"ts":1306286225000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Philip`, yeah then it's probably a check for full transparent that skips blending","msgtype":"m.text"},"ts":1306286280000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"(I'm using Chromium 9.0 on Linux)","msgtype":"m.text"},"ts":1306286281000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"9.0? wtf","msgtype":"m.text"},"ts":1306286282000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"what museum did you steal chromium 9.0 from?","msgtype":"m.text"},"ts":1306286283000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"It's probably the default version on Debian or something.","msgtype":"m.text"},"ts":1306286340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They like years-old software.","msgtype":"m.text"},"ts":1306286341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I installed chromium-bin on Gentoo some time ago, and they stopped updating it","msgtype":"m.text"},"ts":1306286342000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"debian is 6.0","msgtype":"m.text"},"ts":1306286343000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Nice.","msgtype":"m.text"},"ts":1306286344000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"and I haven't cared enough to find a new version","msgtype":"m.text"},"ts":1306286345000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'll p0wn your system and update you to something reasonable","msgtype":"m.text"},"ts":1306286400000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I use Chromium 6.0","msgtype":"m.text"},"ts":1306286401000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"In before owned.","msgtype":"m.text"},"ts":1306286402000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Of course, I could easily get some ancient version of Chrome too, on Linux, if the package repository got uninstalled or something.","msgtype":"m.text"},"ts":1306286403000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not just Chromium.","msgtype":"m.text"},"ts":1306286404000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Opera with 'lighter' compositing seems to be fast for alpha=0, slow for everything else","msgtype":"m.text"},"ts":1306286405000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1306286460000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"hasn't tried other modes","msgtype":"m.emote"},"ts":1306286520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://code.google.com/p/skia/source/browse/trunk/src/core/SkDraw.cpp#1113","msgtype":"m.text"},"ts":1306286521000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"erlehmann: Yes, it's trying to extract image data without using getImageData/toDataURL (thus avoiding the cross-origin-information-leakage checks)","msgtype":"m.text"},"ts":1306286522000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i think that's the early out in question here","msgtype":"m.text"},"ts":1306286523000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"erlehmann: and you should get a rough smiley face in the table if it's working (possibly after waiting a while for it to do multiple iterations)","msgtype":"m.text"},"ts":1306286580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"only useful for fully transparent vs not, though, which is way less useful than the webgl case","msgtype":"m.text"},"ts":1306286581000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"where you can get arbitrary bits from arbitrary color channels","msgtype":"m.text"},"ts":1306286582000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Philip`, *very* rough. but i see it. hopefully we can all use your timing attacks instead of JSONP now ;P","msgtype":"m.text"},"ts":1306286583000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"hm, if you could somehow apply a color mask before doing this attack then you could get more info out","msgtype":"m.text"},"ts":1306286640000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"roc is probably chuckling evilly about http://weblogs.mozillazine.org/roc/archives/2011/02/distinguishing.html :)","msgtype":"m.text"},"ts":1306286700000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1306286701000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jamesr_: I think you can get arbitrary bits from the alpha channel - draw the image to a temporary canvas with globalAlpha=0.5, then if a pixel was previously non-transparent and is now transparent then you know it must have alpha=1, etc","msgtype":"m.text"},"ts":1306286702000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I'm assuming drawImage of canvas is the same as drawImage of img, which is false, but anyway)","msgtype":"m.text"},"ts":1306286760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jamesr_: I would be chuckling if I wasn't one of the people who are going to be on the hook for solving the problem...","msgtype":"m.text"},"ts":1306286820000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so I feel more like a deep sigh","msgtype":"m.text"},"ts":1306286821000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jamesr: is that really your early-exit path here?","msgtype":"m.text"},"ts":1306286880000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I sort of doubt t","msgtype":"m.text"},"ts":1306286940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Do any browsers have high-resolution timers yet?","msgtype":"m.text"},"ts":1306286941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(That'd probably make this much easier than with Date.now())","msgtype":"m.text"},"ts":1306286942000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"roc, i dunno, i'm just completely guessing","msgtype":"m.text"},"ts":1306287000000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"async rendering, like pretty much any GPU-accelerated canvas, should make these timing attacks much more difficult","msgtype":"m.text"},"ts":1306287180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so it'd be interesting to try on FF4/Windows, or IE9, or Chrome with acceleration enabled","msgtype":"m.text"},"ts":1306287181000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the webgl demos work fine with readback","msgtype":"m.text"},"ts":1306287182000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"or glFinish()","msgtype":"m.text"},"ts":1306287240000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"async is no help","msgtype":"m.text"},"ts":1306287241000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"you can force readback with canvas by doing getImageData","msgtype":"m.text"},"ts":1306287242000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"You can't do getImageData if you've drawn cross-origin images","msgtype":"m.text"},"ts":1306287243000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"true, it's tainted","msgtype":"m.text"},"ts":1306287244000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"but you can just repeat the draw a bunch of times and observe throughput","msgtype":"m.text"},"ts":1306287245000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Would doing a drawImage of one canvas onto another cause a readback?","msgtype":"m.text"},"ts":1306287246000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"might add noise but it doesn't stop the fundamental issue","msgtype":"m.text"},"ts":1306287247000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Philip`, it shouldn't","msgtype":"m.text"},"ts":1306287300000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"in our gpu impl it doesn't, modulo some weird bugs","msgtype":"m.text"},"ts":1306287301000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Is there anything you can do to a canvas to make it impossible to hardware-accelerate so it falls back to software?","msgtype":"m.text"},"ts":1306287302000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"like we have a lower size limit for gpu-backed canvas than for software-backed canvas","msgtype":"m.text"},"ts":1306287303000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1306287304000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"make it big but not too big","msgtype":"m.text"},"ts":1306287305000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"we'll probably also have to add some guards so if you make 20,000 canvas contexts some of them go software or something","msgtype":"m.text"},"ts":1306287306000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"i'm pretty sure you can get arbitrary color channels out through svg images somehow","msgtype":"m.text"},"ts":1306287360000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"will add \"var c = []; for (var i = 0; i < 20000; ++i) c.push(document.createElement('canvas').getContext('2d'))\" to his script, then :-)","msgtype":"m.emote"},"ts":1306287361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, in chromium today that is more likely to just crash or something","msgtype":"m.text"},"ts":1306287420000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"we haven't implemented ctx limiting like that","msgtype":"m.text"},"ts":1306287421000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hmm, so use SVG in <img> which applies filters to an external image, then drawImage that into the canvas?","msgtype":"m.text"},"ts":1306287422000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"guesses that shouldn't be too hard","msgtype":"m.emote"},"ts":1306287480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"assuming that svg allows you to map color channels to transparency somehow","msgtype":"m.text"},"ts":1306287481000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"which i'm sure it must, given that svg specifies everything under the sun","msgtype":"m.text"},"ts":1306287482000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"greetings. has anyone proposed <input type=\"identity-url\"> in addition to <input type=\"url\"> for use in login forms (possibly with <input type=\"password\"> )","msgtype":"m.text"},"ts":1306287540000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"use cases: all the sites out there that have login forms","msgtype":"m.text"},"ts":1306287541000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: hello. regarding your tweet last night. Like this? http://pastebin.com/index/3gMc8EPY","msgtype":"m.text"},"ts":1306287542000,"senderName":"cgcardona","senderId":"cgcardona@irc"},
{"content":{"body":"heycam might know a way to magick this up in svg","msgtype":"m.text"},"ts":1306287543000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement looks slightly powerful","msgtype":"m.text"},"ts":1306287544000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh good god","msgtype":"m.text"},"ts":1306287600000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yup, gg","msgtype":"m.text"},"ts":1306287601000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"and enabling browsers to autodetect such forms for more reliable identity/password/URL remembering and auto-fill","msgtype":"m.text"},"ts":1306287602000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Philip`, now i dunno if anyone implements that correctly such that it works (svg <img> in WebKit is super super buggy in general)","msgtype":"m.text"},"ts":1306287603000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"but it seems possible","msgtype":"m.text"},"ts":1306287604000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yeah, feColorMatrix probably can do what you want there","msgtype":"m.text"},"ts":1306287605000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I'm thinking of writing up a proposal for adding <input type=\"identity-url\"> and wanted to first see if anything similar has already been proposed / rejected, and or if there is any earlier work I should look at and possibly cite.","msgtype":"m.text"},"ts":1306287606000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I suppose there's the possibility of timing attacks on SVG rendering directly, too","msgtype":"m.text"},"ts":1306287660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"in Gecko we disallow external resource loading in SVG <img> for exactly this reason","msgtype":"m.text"},"ts":1306287720000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, for other reasons too","msgtype":"m.text"},"ts":1306287721000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"tantek: just curious, what is an identity-url (and shouldn't it be uri?)? and where does user get it?","msgtype":"m.text"},"ts":1306287722000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but this is one of them","msgtype":"m.text"},"ts":1306287723000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Presumably that wouldn't help if you can time non-canvas non-img SVG rendering sufficiently, though","msgtype":"m.text"},"ts":1306287780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"smaug____: in short, identity-url could be an OpenID, could be a RelMeAuth URL, or could be a mailto URL that is paired with a password for email/password login","msgtype":"m.text"},"ts":1306287781000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Philip`: well, yeah","msgtype":"m.text"},"ts":1306287840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"...and if any part of SVG rendering is sufficiently sensitive to pixel values","msgtype":"m.text"},"ts":1306287841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't really care enough about SVG to see if that's feasible in practice, though","msgtype":"m.emote"},"ts":1306287842000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and in answer to \"shouldn't it be uri?\" - the short/easy answer is no, because <input type=\"url\"> already exists in HTML5 (i.e. that bikeshed fight has already been fought - so let's just re-use the existing pattern/decision.","msgtype":"m.text"},"ts":1306287843000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"has never heard of RelMeAuth :)","msgtype":"m.emote"},"ts":1306287844000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1306287845000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"LMGTFY","msgtype":"m.text"},"ts":1306287846000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but apparently someone called tantek has written about it :)","msgtype":"m.text"},"ts":1306287900000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://microformats.org/wiki/RelMeAuth","msgtype":"m.text"},"ts":1306287901000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"what's the downside of making canvas drawing always async, anyway? seems like it'd be a perf win in general.","msgtype":"m.text"},"ts":1306287902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i mean, other than implementation complexity, obviously)","msgtype":"m.text"},"ts":1306287960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in some cases, overhead","msgtype":"m.text"},"ts":1306288200000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"james suggests that it doesn't really help because you can observe throughput","msgtype":"m.text"},"ts":1306288320000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"which I sort of buy, although it increases the cost of the attack considerably","msgtype":"m.text"},"ts":1306288321000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie, roc: yeah. it is async in our accelerated canvas 2d implementation","msgtype":"m.text"},"ts":1306289760000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"might cut down on the bandwidth of the attack","msgtype":"m.text"},"ts":1306289761000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"any gpu-backed canvas drawing implementation will be async to one degree or another","msgtype":"m.text"},"ts":1306289820000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"observe throughput?","msgtype":"m.text"},"ts":1306289821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do a bunch of draws instead of just one, see how long it takes","msgtype":"m.text"},"ts":1306289822000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"no matter how much buffering the system does at some point it'll have to actually evaluate the draws","msgtype":"m.text"},"ts":1306289823000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"how can you tell?","msgtype":"m.text"},"ts":1306289824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's async, you can't read it back, right?","msgtype":"m.text"},"ts":1306289825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lots of ways. force the draw to complete through some indirect method, or just wait until your call is blocked because all the buffers are full","msgtype":"m.text"},"ts":1306289880000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"or let it go to screen (which will force it to evaluate) and observe the screen repaint time","msgtype":"m.text"},"ts":1306289881000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"which you can get indirectly in a number of ways","msgtype":"m.text"},"ts":1306289882000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"huh. will have to think about that. bbiab","msgtype":"m.text"},"ts":1306289940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can't defer the draw forever","msgtype":"m.text"},"ts":1306289941000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1306289942000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"So it seems that ICU4J has a bug when it comes to determining if a year has 53 ISO weeks","msgtype":"m.text"},"ts":1306303320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder where I could find the math to independently verify/generate the list of 53-week years that is available on Wikipedia: http://en.wikipedia.org/wiki/ISO_week_date#Weeks_per_year","msgtype":"m.text"},"ts":1306303380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does the JS Date object implement the proleptic Gregorian calendar all the way back to Year 1 CE?","msgtype":"m.text"},"ts":1306306920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so we still haven't published","msgtype":"m.text"},"ts":1306311420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the date and time-related input types are still implemented in only Opera, right?","msgtype":"m.text"},"ts":1306320000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"properly, that is","msgtype":"m.text"},"ts":1306320001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Bogus WebKit impls don't count as implemented","msgtype":"m.text"},"ts":1306320060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Sounds right","msgtype":"m.text"},"ts":1306320180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ok","msgtype":"m.text"},"ts":1306320480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm a bit unhappy about caniuse.com overstating support in Chrome","msgtype":"m.text"},"ts":1306320481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I have to actually check stuff myself instead of trusting caniuse","msgtype":"m.text"},"ts":1306320482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ping him about it on twitter","msgtype":"m.text"},"ts":1306321320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I really wish the spec would drop callers on HTMLCollection","msgtype":"m.text"},"ts":1306322100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AIUI Gecko doesn't implement them","msgtype":"m.text"},"ts":1306322101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and the behaviour is undefined in edge cases","msgtype":"m.text"},"ts":1306322160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and there is no good reason to use them","msgtype":"m.text"},"ts":1306322161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, implement DOM Core instead? :)","msgtype":"m.text"},"ts":1306323240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, it seems that Opera, IE and WebKit all implement callers","msgtype":"m.text"},"ts":1306323480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Yes. They still suck though","msgtype":"m.text"},"ts":1306323660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And they're not interoperable in edge cases","msgtype":"m.text"},"ts":1306323720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. my_html_collection(-1)","msgtype":"m.text"},"ts":1306323721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"interop on edge cases can be fixed. The issue is whether the behaviour is needed at all for the common cases.","msgtype":"m.text"},"ts":1306323780000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Well since gecko doesn't implement it it seems like it might well not be needed","msgtype":"m.text"},"ts":1306323781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We certainly shouldn't add new interfaces with this legacy gunk on","msgtype":"m.text"},"ts":1306323840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Even if it is more consustent","msgtype":"m.text"},"ts":1306323841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*consistent","msgtype":"m.text"},"ts":1306323842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"also, it seems the spec definition of HTMLCollection.item() is wrong. Implementations accept either an unsigned long index or DOMString name","msgtype":"m.text"},"ts":1306323843000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Allowing people to be consistently stupid isn't a win","msgtype":"m.text"},"ts":1306323844000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Isn't the DOMString a differnt method?","msgtype":"m.text"},"ts":1306323900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes, .namedItem(DOMString) works, but so does .item(DOMString)","msgtype":"m.text"},"ts":1306323901000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Oh ffs","msgtype":"m.text"},"ts":1306323960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"goes to file a bug","msgtype":"m.emote"},"ts":1306323961000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"oh, wait. No, my test was incorrect. .item(\"test\") was simply returning the first control, like .item(0).","msgtype":"m.text"},"ts":1306324200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"same as .item() I guess","msgtype":"m.text"},"ts":1306324260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1306324261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm, no. IE does what I originally thought.","msgtype":"m.text"},"ts":1306324262000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"other browsers don't. I guess we don't need that behaviour after all. I'll resolve my bug invalid","msgtype":"m.text"},"ts":1306324320000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"zcorpan: I pinged Fyrc on Twitter","msgtype":"m.text"},"ts":1306324380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: regarding http://bugzilla.validator.nu/show_bug.cgi?id=817 , should I warn about more stuff than <style scoped>, date and time-related input, <input type=color>, <bdi>, <track>, <details>, <command> and <menu>?","msgtype":"m.text"},"ts":1306324680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should I warn about <mark> and <time>?","msgtype":"m.text"},"ts":1306324681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"meter?","msgtype":"m.text"},"ts":1306325040000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: thanks","msgtype":"m.text"},"ts":1306325280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: if you are interested in working on http://bugzilla.validator.nu/show_bug.cgi?id=589 feel free to reassign it","msgtype":"m.text"},"ts":1306325760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I had assigned it to myself when I was working a patch but I'm not going to be able to get back it to it til next week at the earliest","msgtype":"m.text"},"ts":1306325820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm not in so much hurry that I couldn't wait for your patch :-)","msgtype":"m.text"},"ts":1306325940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1306325941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1306325942000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: type=color is supported by opera too","msgtype":"m.text"},"ts":1306329780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: whoa. Thanks. (I should always test everything *again* instead of relying on my previous testing.)","msgtype":"m.text"},"ts":1306329900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i think <link sizes> is not supported anywhere","msgtype":"m.text"},"ts":1306329901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Apple's documentation suggests rel=\"apple-touch-icon\" sizes=\"...\" is supported","msgtype":"m.text"},"ts":1306329902000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: though apple-touch-icon is currently unregistered","msgtype":"m.text"},"ts":1306329960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, didn't know that","msgtype":"m.text"},"ts":1306329961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<blockquote cite>? ;)","msgtype":"m.text"},"ts":1306330020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hah. that's a good one.","msgtype":"m.text"},"ts":1306330021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"<ol reversed>","msgtype":"m.text"},"ts":1306330022000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<a ping>? what's the status on that?","msgtype":"m.text"},"ts":1306330080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Mozilla has a broken, preffed off implementation since Fx3, I think that's it","msgtype":"m.text"},"ts":1306330081000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"IIRC, <a ping> is disabled in Firefox","msgtype":"m.text"},"ts":1306330082000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does Chrome support <a ping>?","msgtype":"m.text"},"ts":1306330083000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: what's broken about the Firefox impl (apart from being preffed off)?","msgtype":"m.text"},"ts":1306330140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: fwiw <meter> is supported in opera","msgtype":"m.text"},"ts":1306330141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The spec changed under us","msgtype":"m.text"},"ts":1306330142000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1306330143000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"crossorigin on img, video, audio","msgtype":"m.text"},"ts":1306330200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what's the status on <iframe srcdoc sandbox seamless>?","msgtype":"m.text"},"ts":1306330201000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<video mediagroup>","msgtype":"m.text"},"ts":1306330260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(also on audio)","msgtype":"m.text"},"ts":1306330261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(ping is also on area)","msgtype":"m.text"},"ts":1306330262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<input dirname> <textarea dirname>","msgtype":"m.text"},"ts":1306330320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what's dirname?","msgtype":"m.text"},"ts":1306330380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should start reviewing the patch for <meter>","msgtype":"m.emote"},"ts":1306330381000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I have a vague recollection of Chrome having one or two of the new iframe attributes","msgtype":"m.text"},"ts":1306330382000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not that really understand the reason for progress *and* meter","msgtype":"m.text"},"ts":1306330383000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"contextmenu=\"\"","msgtype":"m.text"},"ts":1306330384000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"dropzone=\"\"?","msgtype":"m.text"},"ts":1306330440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"itemid","msgtype":"m.text"},"ts":1306330441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"itemprop","msgtype":"m.text"},"ts":1306330442000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"itemref","msgtype":"m.text"},"ts":1306330443000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"itemscope","msgtype":"m.text"},"ts":1306330444000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"itemtype","msgtype":"m.text"},"ts":1306330445000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: it's a new bidi thing","msgtype":"m.text"},"ts":1306330500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think I'm not going to warn on microdata, since it's not particularly dangerous to use it ahead of browser impls","msgtype":"m.text"},"ts":1306330501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that's fair enough","msgtype":"m.text"},"ts":1306330560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I didn't add warning for stuff like <footer> for that reason","msgtype":"m.text"},"ts":1306330561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"<footer> is also implemented these days","msgtype":"m.text"},"ts":1306330562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though using <section><h1> might be a bit dangerous, but that ship has sailed so it's not worthwhile to warn about it","msgtype":"m.text"},"ts":1306330563000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm not familiar with the threat scenarios with premature use of dropzone","msgtype":"m.text"},"ts":1306330620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1306330740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe it's not so much of a treat, but would still be helpful to know why it doesn't work","msgtype":"m.text"},"ts":1306330860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s//h/","msgtype":"m.text"},"ts":1306330861000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug____: progress is for progress bars. meter is for things like disk space usage indicators","msgtype":"m.text"},"ts":1306331820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"smaug____: different widgets e.g. on Mac","msgtype":"m.text"},"ts":1306331821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, there is a different widget on some system","msgtype":"m.text"},"ts":1306331822000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"has given up with mac","msgtype":"m.emote"},"ts":1306331880000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it seems that Chrome doesn't support <iframe srcdoc> or <iframe seamless>","msgtype":"m.text"},"ts":1306332000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"<iframe sandbox> can't be verified visually","msgtype":"m.text"},"ts":1306332001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. I guess I should add validation of the text/html-sandboxed MIME type, too","msgtype":"m.text"},"ts":1306332060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://blog.chromium.org/2010/05/security-in-depth-html5s-sandbox.html","msgtype":"m.text"},"ts":1306332120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks like they have support","msgtype":"m.text"},"ts":1306332121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. nice. Opera Mini has a hidden pref for turning off phone number linkification","msgtype":"m.text"},"ts":1306332600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(that almost always ends up linkifying something that isn't a phone number)","msgtype":"m.text"},"ts":1306332601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"chrome/linux seems to have different rendering for meter and progress, Opera/linux has the same","msgtype":"m.text"},"ts":1306332780000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's sad that CSP uses an X- header","msgtype":"m.text"},"ts":1306333620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"did Chrome implement CSP with the X- syntax?","msgtype":"m.text"},"ts":1306333680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that is, is CSP now more than a product-specific thing_","msgtype":"m.text"},"ts":1306333681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1306333682000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. bitbucket is down :-(","msgtype":"m.text"},"ts":1306334640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Their web site looks okay to me","msgtype":"m.text"},"ts":1306334760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: https://bitbucket.org/validator/syntax/changesets fails for me","msgtype":"m.text"},"ts":1306335000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"Oops! An error occurred\"","msgtype":"m.text"},"ts":1306335001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"Someone kicked over the bucket, sadface\"","msgtype":"m.text"},"ts":1306335060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. now it loaded","msgtype":"m.text"},"ts":1306335061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wow. provisionally-registered HTTP headers that start with X- http://www.iana.org/assignments/message-headers/prov-headers.html","msgtype":"m.text"},"ts":1306336560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"my sympathies to whoever fought the fight with the Designated Experts on those ones","msgtype":"m.text"},"ts":1306336561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"discovers http://tools.ietf.org/html/draft-mutz-http-attributes-01","msgtype":"m.emote"},"ts":1306336800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: do you have any plans to import X-Content-Security-Policy and X-Frame-Options to HTML without invoking the \"applicable specs\" clause?","msgtype":"m.text"},"ts":1306338420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"FWIW, I investigated doing HTTP header validation today","msgtype":"m.text"},"ts":1306338780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but decided against it, because real Web content uses unregistered headers too often to make it practical to whine about all unregistered headers","msgtype":"m.text"},"ts":1306338840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I did, however, add a warning about X-UA-Compatible as an HTTP header","msgtype":"m.text"},"ts":1306338841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: what about validating headers without whining about unregistered ones?","msgtype":"m.text"},"ts":1306338900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I guess validating their contents would be a possibility","msgtype":"m.text"},"ts":1306338901000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: do you show the headers in Show Source?","msgtype":"m.text"},"ts":1306338960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't, but showing them would make sense","msgtype":"m.text"},"ts":1306339020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Apache has made API-breaking changes to HttpClient","msgtype":"m.text"},"ts":1306339200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if I should continue to use the old version and write more code with that API or migrate existing code to the new API and then add more code...","msgtype":"m.text"},"ts":1306339201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Jeezus, we have to deal with @longdesc *again*?","msgtype":"m.text"},"ts":1306343040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Of course","msgtype":"m.text"},"ts":1306343100000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: longdesc is like the apocalypse. Every time it fails to get in the spec the believers will announce that there was a mistake and it will be delayed a few months","msgtype":"m.text"},"ts":1306343280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway this time it will probably get in. The politics of the situation make it increasingly unlikely that it will be rejected","msgtype":"m.text"},"ts":1306343400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The politics being \"they won't shut up about it\"?","msgtype":"m.text"},"ts":1306343460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Microsoft have supported it all along and are generally pro anything that gets specs along the Rec. track so I doubt Paul will object","msgtype":"m.text"},"ts":1306343461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I expect Sam to be swayed by the work Laura did","msgtype":"m.text"},"ts":1306343462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Did they actually produce any good reasoning for why it should go in?","msgtype":"m.text"},"ts":1306343520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"By the standards the chairs gave in their last decision?","msgtype":"m.text"},"ts":1306343580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They found a handful of sites that used it","msgtype":"m.text"},"ts":1306343581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Used it usefully?","msgtype":"m.text"},"ts":1306343582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Dunno","msgtype":"m.text"},"ts":1306343640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"They also made a list of things that supposedly require longdesc","msgtype":"m.text"},"ts":1306343641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which were basically \"describing\" plus any type of image they could think of","msgtype":"m.text"},"ts":1306343700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This didn't seem like \"new\" information in any meaningful sense of the word \"new\", but the WG operates in mysterious ways","msgtype":"m.text"},"ts":1306343760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My personal plan is to ignore it and hope that if I ever go blind the people working in a11y have become more interested in solutions that work in the real world and less interested in dogmatically clinging to every failed idea","msgtype":"m.text"},"ts":1306344000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, in that case, I'd try to avoid going blind ;)","msgtype":"m.text"},"ts":1306344600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"myakura: There's not.","msgtype":"m.text"},"ts":1306344660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: I'd have thought you'd try to avoid that in any case","msgtype":"m.text"},"ts":1306344840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm. even if html5 gets longdesc but no other vendor's willing to support it, it needs to be dropped otherwise the spec won't proceed.","msgtype":"m.text"},"ts":1306345260000,"senderName":"myakura","senderId":"myakura@irc"},
{"content":{"body":"hmm is it correct that if an input field is set to disabled it's value doesn't get posted?","msgtype":"m.text"},"ts":1306345380000,"senderName":"twisted`","senderId":"twisted`@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1306345440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool then I just use readonly","msgtype":"m.text"},"ts":1306345620000,"senderName":"twisted`","senderId":"twisted`@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1306345621000,"senderName":"twisted`","senderId":"twisted`@irc"},
{"content":{"body":"Is foo.innerHTML = foo.innerHTML; foo.innerHTML = foo.innerHTML guaranteed to be the same as foo.innerHTML = foo.innerHTML?","msgtype":"m.text"},"ts":1306347240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"doesn't have any real reason to know, is just curious","msgtype":"m.emote"},"ts":1306347241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or rather than \"guaranteed to be\", I should say \"supposed to always be\".","msgtype":"m.text"},"ts":1306347242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"As in, should fragmentparse(fragmentserialize(x)) be idempotent?","msgtype":"m.text"},"ts":1306347480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Basically, yeah.","msgtype":"m.text"},"ts":1306347540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There is some complexity around line breaks in <pre> I think. I seem to recall that the algorithm is such that the above holds though","msgtype":"m.text"},"ts":1306348020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh is it possible to prevent {if(window !== top )top.location = '' + location}?","msgtype":"m.text"},"ts":1306351500000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"tried overwrite location setter","msgtype":"m.text"},"ts":1306351560000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"top getter","msgtype":"m.text"},"ts":1306351561000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Disable scripting? :)","msgtype":"m.text"},"ts":1306351562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You mean, can you stop sites you put in frames from breaking out?  Not really, no.","msgtype":"m.text"},"ts":1306351563000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Nor should you be able to.","msgtype":"m.text"},"ts":1306351564000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since some sites don't want to be framed for security reasons.","msgtype":"m.text"},"ts":1306351620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"location is magic for security reasons","msgtype":"m.text"},"ts":1306351621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Even before this it had to be because flash used it or something","msgtype":"m.text"},"ts":1306351622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1306351623000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"=> only iframe's sandbox  attribute","msgtype":"m.text"},"ts":1306351800000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"I had a javascript-related question about selections, and someone suggested I pop in here and ask about it.","msgtype":"m.text"},"ts":1306352280000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I'm trying to get the raw HTML of the selected content on a page. For the sake of simplicity, I'm sticking with browsers supporting window.getSelection.","msgtype":"m.text"},"ts":1306352340000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"AryehGregor: are you speccing this stuff?","msgtype":"m.text"},"ts":1306352341000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal, yes.","msgtype":"m.text"},"ts":1306352342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"getSelection().getRangeAt(0).cloneContents() should get you something like what you want.","msgtype":"m.text"},"ts":1306352400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If the Selection has only a single Range, it will return a DocumentFragment that clones that range's contents.","msgtype":"m.text"},"ts":1306352401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've been looking over the MDC docs for days.  I know how to get the normalized HTML, but the raw HTML seems to be much more difficult.","msgtype":"m.text"},"ts":1306352402000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"What does \"raw\" mean here?","msgtype":"m.text"},"ts":1306352460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In your example, the contents would collapse any trailing elements.  Say, for example, I had `<p>The <em>quick brown f|ox</em> jumps over the lazy <strong>d|og</strong>.</p> and the area between both | was my selection.  I'd be looking to return `ox</em> jumps over the lazy <strong>d`.","msgtype":"m.text"},"ts":1306352461000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Not possible, all this stuff is DOM-based.","msgtype":"m.text"},"ts":1306352462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why do you want it?","msgtype":"m.text"},"ts":1306352463000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In general, keep in mind that the input HTML might bear little resemblance to the DOM.","msgtype":"m.text"},"ts":1306352520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For instance, scripts might have changed the DOM, or various HTML parser quirks might have rearranged things.","msgtype":"m.text"},"ts":1306352521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So conceptually, browsers convert the HTML input into a DOM and then throw it away.","msgtype":"m.text"},"ts":1306352522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, I guess you answered my question with \"not possible\".","msgtype":"m.text"},"ts":1306352523000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"He had a capital \"N\", but yes :)","msgtype":"m.text"},"ts":1306352580000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"E.g., if the raw HTML input is <table><td>foo</td>bar<td>baz</td><table>, the resulting DOM is the same as for bar<table><td>foo</td><td>baz</td></table>.  If the user selects \"foobar\", what would you expect to get back?","msgtype":"m.text"},"ts":1306352581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, as I said, why do you want it?","msgtype":"m.text"},"ts":1306352582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've considered cloning the range into a start and end point, adding an anchor, then reading the common ancestor's HTML and string parsing for the anchors.","msgtype":"m.text"},"ts":1306352640000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"AryehGregor, oh you know, the usual, it's a Wednesday, I think I could write a better WYSIWYG.","msgtype":"m.text"},"ts":1306352641000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal, how do you read the common ancestor's HTML?","msgtype":"m.text"},"ts":1306352642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I had this going for a while http://sandbox.thewikies.com/content-editable/","msgtype":"m.text"},"ts":1306352643000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"innerHTML?  That doesn't return the original HTML either.","msgtype":"m.text"},"ts":1306352644000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It returns a serialization of the DOM.","msgtype":"m.text"},"ts":1306352645000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I read the common ancestor's HTML with innerHTML","msgtype":"m.text"},"ts":1306352646000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Okay, so you don't actually want the original HTML that was given to the browser.","msgtype":"m.text"},"ts":1306352700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(because innerHTML is not that)","msgtype":"m.text"},"ts":1306352701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's no API to create partial fragments of HTML like that, with mismatched tags and all.","msgtype":"m.text"},"ts":1306352702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1306352703000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"cloneContents() will get you \"<em>ox</em> jumps over the lazy <strong>d</strong>\", in your example.","msgtype":"m.text"},"ts":1306352760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"JonathanNeal, is that good enough for your purposes?","msgtype":"m.text"},"ts":1306352761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No, I'm looking for the partial fragment.  It's okay, you're made it clear that there is nothing in the API to get this.","msgtype":"m.text"},"ts":1306352820000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"When I use the approach I mentioned earlier with the injected anchors, I notice that it messes with the appearance of the selection until I press a key or refocus the window.  Lemme see if I can post an example --- I'm not sure if it's a browser bug or a \"feature\" that is supposed to be happening.","msgtype":"m.text"},"ts":1306352880000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hmm.  Is there a way to serialize the HTML of a DocumentFragment?","msgtype":"m.text"},"ts":1306352881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That would be awesome, though I've been assuming that the fragment was already normalized.","msgtype":"m.text"},"ts":1306352940000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"dumps it into a div","msgtype":"m.emote"},"ts":1306352941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If by \"normalized\" you mean \"opening and closing tags are paired up\", yes, the DOM is always \"normalized\".","msgtype":"m.text"},"ts":1306353000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"JonathanNeal, see the log at the bottom here: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1005","msgtype":"m.text"},"ts":1306353001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It has the extra opening/closing tags.","msgtype":"m.text"},"ts":1306353002000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But you might be able to strip them off more easily than whatever you're doing now.","msgtype":"m.text"},"ts":1306353060000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, feel free to tell me about the injected anchors thing you're talking about.","msgtype":"m.text"},"ts":1306353061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm looking at what you mentioned.","msgtype":"m.text"},"ts":1306353240000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I don't get what I was supposed to learn from the log, I guess.","msgtype":"m.text"},"ts":1306353300000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"hsivonen: no current plans to spec those two headers, but if everyone implements them then i guess someone's gonna have to spec them","msgtype":"m.text"},"ts":1306353360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal, the code I gave does what you asked for, just with extra opening tags at the start and closing tags at the end.","msgtype":"m.text"},"ts":1306353361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You should be able to use that code and strip the leading/trailing tags you don't want much more easily than trying to parse innerHTML or whatnot.","msgtype":"m.text"},"ts":1306353362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I'm still not sure why you want such fragments; I suspect you don't)","msgtype":"m.text"},"ts":1306353420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, I want to write a WYSIWYG editor that inspects the HTML more like selectionStart for a textarea.","msgtype":"m.text"},"ts":1306353480000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"As opposed to using the DOM?  Why?","msgtype":"m.text"},"ts":1306353540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It might look simpler, but it will cause all sorts of headaches if you try fiddling with innerHTML instead of the DOM.","msgtype":"m.text"},"ts":1306353541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, look at the example @ http://sandbox.thewikies.com/content-editable/ and use some of the buttons.  It's just an idea.","msgtype":"m.text"},"ts":1306353542000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"So when you do \"bold source selection\" it just sticks <b> at the start point and </b> at the endpoint in the HTML source.","msgtype":"m.text"},"ts":1306353660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's going to have unpredictable results.","msgtype":"m.text"},"ts":1306353661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yea, and I understand how big of a problem that might be.","msgtype":"m.text"},"ts":1306353662000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Well, as long as you realize.","msgtype":"m.text"},"ts":1306353663000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I do realize, and I was thinking of creating fake ranges and taking advantage of that \"normalizing\" to generate the proper HTML.","msgtype":"m.text"},"ts":1306353720000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"what's that law about how the more groups you have working on technologies the more the techs are going to have friction points?","msgtype":"m.text"},"ts":1306353721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie's Law?","msgtype":"m.text"},"ts":1306353780000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no someone else came up with it","msgtype":"m.text"},"ts":1306353781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen quotes it often","msgtype":"m.text"},"ts":1306353782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Conway's Law?","msgtype":"m.text"},"ts":1306353840000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"AryehGregor: here's the weird selection \"bug\" I've been seeing @ http://sandbox.thewikies.com/selection/","msgtype":"m.text"},"ts":1306353841000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"conway! thanks","msgtype":"m.text"},"ts":1306353842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal, I'm not seeing anything.  Do I need to do something special?  What browser are you using?","msgtype":"m.text"},"ts":1306353900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Select \"ick brown fox jumps over the la\" and it will suddenly change the selection to look like you selected something different, like \" jumps over the la\"","msgtype":"m.text"},"ts":1306353901000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Firefox 4.","msgtype":"m.text"},"ts":1306353902000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hixie: the good thing is the X-Content-Security-Policy already has a spec","msgtype":"m.text"},"ts":1306353903000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yea, it must be a Firefox bug.]","msgtype":"m.text"},"ts":1306353904000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hixie: X-Frame-Options might have some near-spec-worthy docs","msgtype":"m.text"},"ts":1306353905000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I suspect I know what's happening.  Just a sec.","msgtype":"m.text"},"ts":1306353906000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"JonathanNeal, you're doing splitText() implicitly here somewhere, probably by calling insertNode().","msgtype":"m.text"},"ts":1306353960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"DOM 2 Range mandates the behavior you're seeing.","msgtype":"m.text"},"ts":1306353961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen: cool","msgtype":"m.text"},"ts":1306353962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The definition I gave for range mutation follows WebKit, which is smarter about it.","msgtype":"m.text"},"ts":1306354020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":D Well thanks for using the smart one.","msgtype":"m.text"},"ts":1306354021000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Is there a way to patch Firefox back into happiness and unsplit?","msgtype":"m.text"},"ts":1306354022000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"AryehGregor: is there a way I can clone the range to a cloned element?","msgtype":"m.text"},"ts":1306354200000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal, what do you mean, clone the range to a cloned element?","msgtype":"m.text"},"ts":1306354201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Here's a more minimal test-case of the effect you're seeing, BTW: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%20%0A%3Cp%3EAbc%3C%2Fp%3E%0A%3Cscript%3E%0AgetSelection().collapse(document.querySelector(%22p%22).firstChild%2C%201)%3B%0AgetSelection().extend(document.querySelector(%22p%22).firstChild%2C%203)%3B%0Adocument.querySelector(%22p%22).firstChild.splitText(2)%3B%0A%3C%2Fscript%3E","msgtype":"m.text"},"ts":1306354202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"`<p>The <em>quick brown f|ox</em> jumps over the lazy <strong>d|og</strong>.</p>` and I clone the common ancestor, and then re-create the range on that clone.","msgtype":"m.text"},"ts":1306354260000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"No, no simple way to do that.","msgtype":"m.text"},"ts":1306354320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The clone has no relationship to the original nodes.","msgtype":"m.text"},"ts":1306354321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yea.","msgtype":"m.text"},"ts":1306354322000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"You'd have to do it manually, by figuring out the correct start and end points and setting the range to those.","msgtype":"m.text"},"ts":1306354323000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: Does it sound at all plausible to kill the getters on new HTML*Collections?","msgtype":"m.text"},"ts":1306354324000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i assume you mean the callers","msgtype":"m.text"},"ts":1306354380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In the content-editable example you saw earlier, I map the way to the selection from the common ancestor and then reverse the mapping to recreate the selection.  It's way complicated.  I'd rather just inject nodes.","msgtype":"m.text"},"ts":1306354381000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"not the fetters","msgtype":"m.text"},"ts":1306354382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"getters","msgtype":"m.text"},"ts":1306354383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, callers","msgtype":"m.text"},"ts":1306354384000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sorry","msgtype":"m.text"},"ts":1306354385000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"because killing the getters doesn't sound even remotely plausible :-P","msgtype":"m.text"},"ts":1306354386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i dunno, don't pages depend on this? IE does it right?","msgtype":"m.text"},"ts":1306354387000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, that would be stupid and insane :)","msgtype":"m.text"},"ts":1306354388000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"IE does it for the ones it implements yeah","msgtype":"m.text"},"ts":1306354389000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I was hoping that at least for the new ones we could do better","msgtype":"m.text"},"ts":1306354440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well it seems pretty harmless to me, so consistency seems worth it","msgtype":"m.text"},"ts":1306354441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It would be inconsistent but the best thing would be to never use them anywhere","msgtype":"m.text"},"ts":1306354442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but injecting nodes makes Firefox hate the selection.","msgtype":"m.text"},"ts":1306354443000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"but you know the drill, i'll follow the browsers, basically","msgtype":"m.text"},"ts":1306354444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if browsers don't do it, i'll remove it","msgtype":"m.text"},"ts":1306354445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's not really harmless, there's a ton of undefined edge cases","msgtype":"m.text"},"ts":1306354446000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1306354447000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like what?","msgtype":"m.text"},"ts":1306354500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's in the spec purely for back compat, it's not an intentional api design, so really the only consideration for me is how it affects implementations","msgtype":"m.text"},"ts":1306354501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Like if you have callers for multiple types and pass in an object that can be coerced to more than one type","msgtype":"m.text"},"ts":1306354502000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. {valueOf:2, toString:\"foo\"}","msgtype":"m.text"},"ts":1306354560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's not clear which order you should try the callers in","msgtype":"m.text"},"ts":1306354561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't webidl define that?","msgtype":"m.text"},"ts":1306354562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, it leaves it explicitly undefined afaict","msgtype":"m.text"},"ts":1306354620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"surely we need to define that for overloading in general","msgtype":"m.text"},"ts":1306354621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In this case it is totally differnet underlying functions that get called","msgtype":"m.text"},"ts":1306354622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so it's not like normal overloading where it is one function with multipleargument types","msgtype":"m.text"},"ts":1306354680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"even if it's one function with multiple argument types, the order has to be defines","msgtype":"m.text"},"ts":1306354681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since |2| and \"foo\" aren't the same thing","msgtype":"m.text"},"ts":1306354682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it is in that case","msgtype":"m.text"},"ts":1306354683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh well why is this different?","msgtype":"m.text"},"ts":1306354684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But not for the case where it is multiple functions","msgtype":"m.text"},"ts":1306354685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we should use the same overloading algorithm","msgtype":"m.text"},"ts":1306354686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It *could* be defined by WebIDL","msgtype":"m.text"},"ts":1306354740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But in any case it seems sad to keep propogating the bad pattern into new APIs","msgtype":"m.text"},"ts":1306354741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where indexing and calling are synonyms","msgtype":"m.text"},"ts":1306354800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/indexing/getting properties/","msgtype":"m.text"},"ts":1306354801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(it also makes QAs sad because they end up having to test everything three times, once for the function one for the index and once for the call)","msgtype":"m.text"},"ts":1306354860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: thanks so much for your input and help so far.","msgtype":"m.text"},"ts":1306354861000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"(which is not such a great argument)","msgtype":"m.text"},"ts":1306354862000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but still)","msgtype":"m.text"},"ts":1306354863000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well like i said","msgtype":"m.text"},"ts":1306354864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"back compat is the motivation","msgtype":"m.text"},"ts":1306354920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal, no problem.","msgtype":"m.text"},"ts":1306354921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"OK. I doubt I will get any buy-in for not doing this for old APIs (though Gecko doesn't). But for new ones maybe","msgtype":"m.text"},"ts":1306354922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How about you drop support :)","msgtype":"m.text"},"ts":1306354980000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: That's the buy-in I won't get for old APIs :)","msgtype":"m.text"},"ts":1306355040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: do file a bug on webidl or html if there are undefined bits though. we shouldn't have undefined stuff.","msgtype":"m.text"},"ts":1306355041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Pff, I've removed enough stuff without waiting or buy-in","msgtype":"m.text"},"ts":1306355042000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: this one sounds pretty straightforward though","msgtype":"m.text"},"ts":1306355100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: Well I could probably change the code, but I wouldn't get it through review :)","msgtype":"m.text"},"ts":1306355101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How about you hire sicking? :)","msgtype":"m.text"},"ts":1306355102000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor: does getSelection support a reverse selection?","msgtype":"m.text"},"ts":1306355103000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal, what do you mean by reverse?","msgtype":"m.text"},"ts":1306355160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"what WebIDL type is an interface object?","msgtype":"m.text"},"ts":1306355161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Object?","msgtype":"m.text"},"ts":1306355162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: Seems like quite the roundabout solution :)","msgtype":"m.text"},"ts":1306355163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: where the carest finished at the earlier point.","msgtype":"m.text"},"ts":1306355164000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"*caret","msgtype":"m.text"},"ts":1306355165000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Either Object or Function I guess","msgtype":"m.text"},"ts":1306355166000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't remember which way that went","msgtype":"m.text"},"ts":1306355167000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JonathanNeal, in Firefox and WebKit, yes.  In IE9, no.","msgtype":"m.text"},"ts":1306355168000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Check whether the focusNode/focusOffset matches the start or end of the first range.","msgtype":"m.text"},"ts":1306355220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"`ipsu|2|m dolar si|1|t` where |1| was the starting point and |2| was the ending point.","msgtype":"m.text"},"ts":1306355221000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ah, that's good to know that I can check.  I tried just saving and restoring a selection, and noticed that it forgot which way it was going.","msgtype":"m.text"},"ts":1306355280000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Oi, I hope it's not a lot of code just to check which way my selection is going.","msgtype":"m.text"},"ts":1306355460000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I guess it is as easy as `ltr = selection.anchorNode == selectionRange.startContainer && selection.anchorOffset == selectionRange.startOffset;`","msgtype":"m.text"},"ts":1306355940000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ms2ger: ping, did you take over the canvas test suite?","msgtype":"m.text"},"ts":1306356840000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"Still Philip`","msgtype":"m.text"},"ts":1306356841000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"righto :)","msgtype":"m.text"},"ts":1306356842000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"Anything in particular?","msgtype":"m.text"},"ts":1306356900000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: was wondering about createPattern tests wrt TYPE_MISMATCH_ERR, IIUC there's a conflict between WebIDL and HTML5, in that no overload should match, leading to TypeError","msgtype":"m.text"},"ts":1306356960000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"Ms2ger: when passing a string or null as the first argument to createPattern()","msgtype":"m.text"},"ts":1306357020000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"Which test?","msgtype":"m.text"},"ts":1306357021000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: 2d.pattern.image.null.html","msgtype":"m.text"},"ts":1306357080000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"Ms2ger: nevermind the string part, i see philip already fixed that in 56:465ada6e6262, so just null :)","msgtype":"m.text"},"ts":1306357200000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"Actually, WebIDL just changed, and we do want a TypeError there","msgtype":"m.text"},"ts":1306357260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Care to file a bug?","msgtype":"m.text"},"ts":1306357261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: sure. for html5, you mean?","msgtype":"m.text"},"ts":1306357262000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"On the test suite","msgtype":"m.text"},"ts":1306357320000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: TYPE_MISMATCH_ERR is explicitly specified in html5, though. that's the confusing part","msgtype":"m.text"},"ts":1306357321000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"i can change the html spec if it's wrong","msgtype":"m.text"},"ts":1306357322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, that's the bug you called the definition of not urgent :)","msgtype":"m.text"},"ts":1306357380000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1306357381000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"yeah i was about to say, looks like the only problem is that you want null to throw TypeError instead of TYPE_MISMATCH_ERR","msgtype":"m.text"},"ts":1306357382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now the spec that's wrong is webidl :-P","msgtype":"m.text"},"ts":1306357383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because it changed the meaning of all the idl in the html spec :-P","msgtype":"m.text"},"ts":1306357384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you should assume every single object type in idls in HTML has a \"?\" after it until webidl is fixed","msgtype":"m.text"},"ts":1306357440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's what you get for normatively referencing unstable drafts :)","msgtype":"m.text"},"ts":1306357441000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ain't no such thing as a \"stable\" draft","msgtype":"m.text"},"ts":1306357500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"q.v. SVG referencing CSS2 REC","msgtype":"m.text"},"ts":1306357501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"where is the webidl version control? :$","msgtype":"m.text"},"ts":1306357502000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"dev.w3.org","msgtype":"m.text"},"ts":1306357503000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"righto. i'll file a bug for the test suite, then. thank you gentlemen","msgtype":"m.text"},"ts":1306357560000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"does IE support ArrayBuffer?","msgtype":"m.text"},"ts":1306357740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1007 - Chrome/Mac gives me 0:0:192:255, Firefox/Mac gives me 0:0:192:127","msgtype":"m.text"},"ts":1306357800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: btw, if ArrayBuffers are de facto becoming little-endian, wy annoy people by making Web Socket ArrayBuffers big endian?","msgtype":"m.text"},"ts":1306357801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can anyone find any other results?","msgtype":"m.text"},"ts":1306357802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: websocket data comes from the network, which is big endian","msgtype":"m.text"},"ts":1306357860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: also, arraybuffers aren't defacto little endian, they're whatever the platform gpu uses","msgtype":"m.text"},"ts":1306357861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not if the other end sends little-endian","msgtype":"m.text"},"ts":1306357862000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so big endian on arm, little endian on intel","msgtype":"m.text"},"ts":1306357863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as i understand it","msgtype":"m.text"},"ts":1306357864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I thought ARM was little-endian as well","msgtype":"m.text"},"ts":1306357865000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's configurable","msgtype":"m.text"},"ts":1306357920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but as i understand it it is usually big-endian","msgtype":"m.text"},"ts":1306357921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could be wrong","msgtype":"m.text"},"ts":1306357922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ARM is usually little-endian, AFAIK.","msgtype":"m.text"},"ts":1306357923000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"in any case, the webgl api only works if it matches the gpu","msgtype":"m.text"},"ts":1306357924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I remember looking it up once and finding out that the iPhone is little-endian.","msgtype":"m.text"},"ts":1306357925000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, a while back someone here said that ARM is de facto little-endian these days.","msgtype":"m.text"},"ts":1306357926000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(the test above has nothing to do with endianness, btw)","msgtype":"m.text"},"ts":1306357980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I believe Maemo on ARM is little-endian","msgtype":"m.text"},"ts":1306358040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: I'd be very surprised if Android was big-endian","msgtype":"m.text"},"ts":1306358041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"... websocket data is big-endian? why? heh","msgtype":"m.text"},"ts":1306358042000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i would assume android is endianness-neutral","msgtype":"m.text"},"ts":1306358043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tcp headers, yeah, but payloads?","msgtype":"m.text"},"ts":1306358044000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(sorry, not familiar with the websocket protocol)","msgtype":"m.text"},"ts":1306358100000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: everything over the network is big-endian by convention. in practice it's up to the author, obviously","msgtype":"m.text"},"ts":1306358101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"low-level network stack headers are big-endian by convention; i've never seen any such convention for anything higher up the stack","msgtype":"m.text"},"ts":1306358102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, is that still the case if we restrict ourselves to things visible to web authors?","msgtype":"m.text"},"ts":1306358160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"As opposed to implementers?","msgtype":"m.text"},"ts":1306358161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"granted, most higher-level, standard protocols aren't binary protocols, so the sample set is smaller","msgtype":"m.text"},"ts":1306358162000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AryehGregor: not sure what you mean","msgtype":"m.text"},"ts":1306358163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I mean, for our purposes it doesn't matter if TCP headers are big- or little-endian, say.  Because we're talking about something visible to web authors, and web authors don't get direct access to TCP headers, so those don't affect their expectations.","msgtype":"m.text"},"ts":1306358220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh this is all moot anyway, it seems. The typed array spec lets the author pick the endianess when using DataView.","msgtype":"m.text"},"ts":1306358221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think people have android running on MIPS, so i imagine android the platform can go either way","msgtype":"m.text"},"ts":1306358222000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AryehGregor: i don't think i've mentioned tcp headers","msgtype":"m.text"},"ts":1306358223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What do you mean by \"everything over the network\"?","msgtype":"m.text"},"ts":1306358280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"wonders how many CPU cycles the world has wasted by having every x86 CPU do loads of ntohl calls for every network packet","msgtype":"m.emote"},"ts":1306358281000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh i was just thinking the same thing (and concluded: probably not much, at least in recent times)","msgtype":"m.text"},"ts":1306358340000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AryehGregor: it seems pretty self-explanatory?","msgtype":"m.text"},"ts":1306358400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Not really?","msgtype":"m.text"},"ts":1306358401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"which part is confusing? everything, or network?","msgtype":"m.text"},"ts":1306358460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, people can send whatever they want over the network.  If I send a file over HTTP whose format specifies that it's little-endian, it doesn't get transformed to big-endian and then back when I send it.","msgtype":"m.text"},"ts":1306358520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1306358521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I guess I want to know what \"everything\" is supposed to mean, yeah.","msgtype":"m.text"},"ts":1306358522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since it apparently doesn't actually mean \"everything\".","msgtype":"m.text"},"ts":1306358523000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: you could avoid endianness altogether in the API by giving people ArrayBuffers of bytes","msgtype":"m.text"},"ts":1306358524000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i mean that the convention is that binary network protocols use big-endianness regardless of the endianness of the platforms involved.","msgtype":"m.text"},"ts":1306358525000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and making it the app programmer's problem to convert the bytes to wider types","msgtype":"m.text"},"ts":1306358526000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: that's not how ArrayBuffer works","msgtype":"m.text"},"ts":1306358527000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: how do they work? why would a buffer of bytes have endianness?","msgtype":"m.text"},"ts":1306358580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ArrayBuffer is opaque","msgtype":"m.text"},"ts":1306358581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: you then create readers of different widths from the ArrayBuffer","msgtype":"m.text"},"ts":1306358582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, okay, but web authors aren't exposed to that convention, right?  So shouldn't we be going for whatever will make the most sense for authors, even if that violates some convention?","msgtype":"m.text"},"ts":1306358640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And if there are some things that we already expose to authors that are the same endianness as the CPU, that means de facto little-endian, so we should stick to little-endian.","msgtype":"m.text"},"ts":1306358641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Before gsnedders points it out I will point out that ARM is almost always LE but can theoretially be either and MIPS os almost always BE but can theoretically be either","msgtype":"m.text"},"ts":1306358700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or is this endianness not directly exposed to authors?","msgtype":"m.text"},"ts":1306358701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"isn't quite sure what's being discussed . . .","msgtype":"m.emote"},"ts":1306358702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right now, the typed array spec, when used to read a wide integer from an ArrayBuffer, uses the platform convention for endianness. This obviously is a non-starter on a platform-neutral metaplatform like the web, since it would mean that if you happened to be on a system that didn't match the author's test system, your data would be corrupted.","msgtype":"m.text"},"ts":1306358760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1306358820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: I personally expect that problem to be solved by everyone converging on LE hardware","msgtype":"m.text"},"ts":1306358880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Looks like internet traffic is roughly 30EB/month, and if each of those is a 1500 byte packet and it takes (wild guess) a hundred x86 CPU cycles to do all the byte flipping on send/receive for all the layers of protocols, that's like 400 CPU-months per month","msgtype":"m.text"},"ts":1306358881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which I suppose isn't that bad","msgtype":"m.text"},"ts":1306358882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i'd say it's closer to zero CPU cycles--when you take into account modern CPU pipelining and so on","msgtype":"m.text"},"ts":1306358883000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"lunch, bbl","msgtype":"m.text"},"ts":1306358940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and people that don't use LE hardware will have to be careful to fake it to look like they are which will be slow so there will be a good incentive for convergence)","msgtype":"m.text"},"ts":1306359000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"personally I'm happy if big-endian people get to waste lots of time, because right now we're all wasting our time bending over backwards making things work for them, the needlessly incompatible rare variant","msgtype":"m.text"},"ts":1306359060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if they won't get along with the rest of the civilized world, let them figure out how to deal with it. heh","msgtype":"m.text"},"ts":1306359061000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: MIPS is mostly LE nowadays, apart from products from one major vendor, AFAIK","msgtype":"m.text"},"ts":1306359120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders what happened to Blefuscu in the end, and whether it provides useful insight into resolving these problems","msgtype":"m.emote"},"ts":1306359240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Itanium is almost all LE, PPC (and hence also POWER nowadays) is almost all BE","msgtype":"m.text"},"ts":1306359300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SuperH I have no idea about in actual usage — it is almost bi-endian","msgtype":"m.text"},"ts":1306359360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: quick question: are you sure HTMLImageElement::crossOrigin should have a capitalized \"O\" ?","msgtype":"m.text"},"ts":1306363320000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#the-img-element","msgtype":"m.text"},"ts":1306363380000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I suspect that's a legacy of when it was called cross-origin.","msgtype":"m.text"},"ts":1306363381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"its consistent iwth useMap and isMap","msgtype":"m.text"},"ts":1306363382000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but seems slightly odd","msgtype":"m.text"},"ts":1306363383000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"https://bugs.webkit.org/show_bug.cgi?id=61015","msgtype":"m.text"},"ts":1306363384000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"now's the time to fix it if he wants it changed :)","msgtype":"m.text"},"ts":1306363385000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"notes it's also consistent with formNoValidate","msgtype":"m.emote"},"ts":1306363680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1306363740000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"then it's probably right","msgtype":"m.text"},"ts":1306363741000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"sorry for the noise","msgtype":"m.text"},"ts":1306363742000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"heycam: yo","msgtype":"m.text"},"ts":1306366500000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"heycam: what's ISSUE-6?","msgtype":"m.text"},"ts":1306366501000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"abarth: it's intentional","msgtype":"m.text"},"ts":1306366920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr, that's asking to define what happens when you call requestAnimationFrame twice with the same callback before the next animation tick","msgtype":"m.text"},"ts":1306367100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"should be just like settimeout","msgtype":"m.text"},"ts":1306367160000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"the callback is invoked twice","msgtype":"m.text"},"ts":1306367161000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"why's that ambiguous?","msgtype":"m.text"},"ts":1306367162000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"well i guess since we haven't defined a processing model, it's unclear from the spec","msgtype":"m.text"},"ts":1306367163000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"but seems pretty obvious","msgtype":"m.text"},"ts":1306367164000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"right, I think Jatinder just wants it to be clear whether it's invoked once or twice","msgtype":"m.text"},"ts":1306367165000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1306367220000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"processing model is on my todo list for this week","msgtype":"m.text"},"ts":1306367221000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"great!","msgtype":"m.text"},"ts":1306367222000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"we talked in the call today about publication","msgtype":"m.text"},"ts":1306367223000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"plh and jatinder would like to publish the FPWD on thursday next week. they (and I) don't mind if not all of the issues have been resolved before publication.","msgtype":"m.text"},"ts":1306367224000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but it would be good to get as many of them knocked down as possible","msgtype":"m.text"},"ts":1306367280000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i think the microsoft folks care a lot more about publication, etc than i do","msgtype":"m.text"},"ts":1306367340000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1306367341000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so if they feel strongly that something should or shouldn't be published then i'm generally not gonna want to fight about it","msgtype":"m.text"},"ts":1306367342000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1306367343000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well currently it isn't really a specification of anything","msgtype":"m.text"},"ts":1306367400000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"I think it's good to get something published so that the spec gets more attention","msgtype":"m.text"},"ts":1306367401000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"because it doesn't say how anything works","msgtype":"m.text"},"ts":1306367402000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"well, sure","msgtype":"m.text"},"ts":1306367403000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but i'm not opposed to publishing at any time","msgtype":"m.text"},"ts":1306367404000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"right, neither am I","msgtype":"m.text"},"ts":1306367405000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i think ost of the feedback will probably be \"hey, you didn't specify anything!\"","msgtype":"m.text"},"ts":1306367406000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"which we can then fix :)","msgtype":"m.text"},"ts":1306367407000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yep. I think it's reasonably common in W3C land for first public working drafts not to be terribly complete, anyway.","msgtype":"m.text"},"ts":1306367520000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so I'll take a look early next week after you've worked on the processing model and see if I can resolve any of the other open issues","msgtype":"m.text"},"ts":1306367580000,"senderName":"heycam","senderId":"heycam@irc"}
]