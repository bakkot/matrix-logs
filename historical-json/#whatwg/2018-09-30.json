[
{"content":{"body":"MikeSmith: thanks :)","msgtype":"m.text"},"ts":1538268838000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I don't generally have an established setup for wpt tests like I suspect a lot of people do, so having submissions available on the web makes it easier for me to do drive-by testing","msgtype":"m.text"},"ts":1538268888000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"and for url stuff in particular, it's very convenient to be able to point my code at a JSON URL to run the tests against it","msgtype":"m.text"},"ts":1538268923000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"which then makes it easy for me to review","msgtype":"m.text"},"ts":1538268937000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: yup, understood","msgtype":"m.text"},"ts":1538272572000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: please review the paragraphs about default request mode https://developer.mozilla.org/en-US/docs/Web/API/Request/mode#Default_mode and let me know if any of it’s inaccurate","msgtype":"m.text"},"ts":1538272752000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: fwiw it checks out to me","msgtype":"m.text"},"ts":1538273533000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"MikeSmith: I think not all those markup cases are always no-cors","msgtype":"m.text"},"ts":1538273681000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. <script type=module> and <link rel=modulepreload> are cors. Also I think <track> is cors, although you didn't list that and I'm only 60% sure.","msgtype":"m.text"},"ts":1538273731000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"domfarolino: thanks!","msgtype":"m.text"},"ts":1538274351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: ah OK, as far a script and link, maybe if I qualify it by adding “except when used with modules”?","msgtype":"m.text"},"ts":1538274368000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"^ good distinction","msgtype":"m.text"},"ts":1538274369000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah. Oh and also all the others if you use the crossorigin=\"\" attribute, I think?","msgtype":"m.text"},"ts":1538274406000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"^ true, however since the para is under the \"Default\" section wonder if its worth enumerating all of the possibilities","msgtype":"m.text"},"ts":1538274485000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"yeah it starts to be a bit of a case of pulling at at thread","msgtype":"m.text"},"ts":1538274540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it should at least also mention crossorigin=\"\"","msgtype":"m.text"},"ts":1538274572000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I’ll at dd that","msgtype":"m.text"},"ts":1538274579000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah I dunno, or just soften to \"usually\" or \"by default\" or similar","msgtype":"m.text"},"ts":1538274816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1538275595000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: as far a <track> I can’t find anything in https://html.spec.whatwg.org/multipage/media.html#the-track-element nor in the WebVTT about fetches for text tracks being made with cors mode","msgtype":"m.text"},"ts":1538275640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks further","msgtype":"m.emote"},"ts":1538275645000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm yeah I think they are fetched in https://html.spec.whatwg.org/multipage/media.html#start-the-track-processing-model and I am wrong","msgtype":"m.text"},"ts":1538275753000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah actually in there I find https://html.spec.whatwg.org/multipage/media.html#sourcing-out-of-band-text-tracks:attr-media-crossorigin","msgtype":"m.text"},"ts":1538275796000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Although https://html.spec.whatwg.org/multipage/media.html#security-and-privacy-considerations is something","msgtype":"m.text"},"ts":1538275803000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":">  If the track element's parent is a media element then let corsAttributeState be the state of the parent media element's crossorigin content attribute. Otherwise, let corsAttributeState be No CORS.","msgtype":"m.text"},"ts":1538275805000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reads https://html.spec.whatwg.org/multipage/media.html#security-and-privacy-considerations","msgtype":"m.emote"},"ts":1538275835000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So no impact on your docs, just slightly more interesting processing model if you do opt in to cors mode with crossorigin=\"\", is my reading","msgtype":"m.text"},"ts":1538275860000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1538275885000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"'tis also what I gather","msgtype":"m.text"},"ts":1538276809000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I think track is same-origin restricted, so could have defaulted to CORS","msgtype":"m.text"},"ts":1538277575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks I added some language to https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track to indicate it’s same-origin-restricted unless the parent has the crossorigin attribute","msgtype":"m.text"},"ts":1538279841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: For CSP is there any guidance somewhere which states that nonces should be used when possible, rather than hashes? And if so, which explains what the rationale is for preferring the use of nonces?","msgtype":"m.text"},"ts":1538290206000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I vaguely recall reading an explanation somewhere, but can’t find it now","msgtype":"m.text"},"ts":1538290240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"neither https://csp.withgoogle.com/docs/strict-csp.html nor https://csp.withgoogle.com/docs/faq.html says it explicitly at least","msgtype":"m.text"},"ts":1538290276000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I’ve read the “CSP Is Dead, Long Live CSP! On the Insecurity of Whitelists and the Future of Content Security Policy” paper too ー which recommends nonces ー but nowhere in it does it directly state what properties of nonces make them a better solution than hashes","msgtype":"m.text"},"ts":1538290446000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: as for submissions/ I'm thinking if it would be a good idea to spin up a subdomain and separate wptserve instance for each PR","msgtype":"m.text"},"ts":1538295638000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and maybe only provide the syncing on request in a github comment","msgtype":"m.text"},"ts":1538295738000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: please talk to jugglinmike :)","msgtype":"m.text"},"ts":1538295832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he wrote down some ideas about it already somewhere","msgtype":"m.text"},"ts":1538295850000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1538295857000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think it was in a github issue but I can’t remember","msgtype":"m.text"},"ts":1538295869000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: TabAtkins: two reasons. it's not implemented using shadow DOM anywhere today (AFAIK), and the ::before issue.","msgtype":"m.text"},"ts":1538296062000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and I guess that the rendering is so special that it needs CSS magic anyway","msgtype":"m.text"},"ts":1538296104000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"when uses <details> and <summary>, there’s no way to control the spacing after the disclosure triangle and before the summary text, right?","msgtype":"m.text"},"ts":1538296924000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nm figure out a way","msgtype":"m.text"},"ts":1538297175000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*figured","msgtype":"m.text"},"ts":1538297181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I’d think hashes are better?","msgtype":"m.text"},"ts":1538315966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Yeah, afaict fieldset doesn't *need* to use Shadow Dom for anything, it's just a messy CSS layout thing.","msgtype":"m.text"},"ts":1538316139000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But also: what ::before issue?","msgtype":"m.text"},"ts":1538316222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I would think so too, but https://csp.withgoogle.com/docs/strict-csp.html seems to imply  otherwise","msgtype":"m.text"},"ts":1538316417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: if it used shadow dom, i think ::before would appear before the legend","msgtype":"m.text"},"ts":1538328863000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"HOw?","msgtype":"m.text"},"ts":1538328872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or in other words: if you're thinking of fieldset's *entire functionality* being implemented via shadow DOM... how?","msgtype":"m.text"},"ts":1538328892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The \"render in the border of another element\" seem to clearly point to this being a CSSish thing, not a DOMish thing.)","msgtype":"m.text"},"ts":1538328938000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't really know, I thought that was a thing for details/summary?","msgtype":"m.text"},"ts":1538328950000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yes, because you can actually implement details/summary purely with shadow dom (and existing CSS). And then the result is that details::before is before the summary. Shadow DOM is a non-sequitur with fieldset, tho; you can't reproduce its functionality by just rearranging children.","msgtype":"m.text"},"ts":1538329005000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1538329028000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If fieldset's rendering was *just* \"first legend gets pulled up to be first child\", then yeah, we could do it with shadow dom, and ::before would go before the legend. But the functionality as it exists works on a totally different level, with no meaningful interaction with ::before.","msgtype":"m.text"},"ts":1538329177000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So I guess the main reason it doesn't use shadow dom is just that it doesn't help with anything 🙂","msgtype":"m.text"},"ts":1538329267000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"My flight is about to takeoff. See you in A Coruña","msgtype":"m.text"},"ts":1538329402000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(You being whoever is also there)","msgtype":"m.text"},"ts":1538329456000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"botie: inform zcorpan https://github.com/bocoup/web-platform-tests.live/issues/2 is the issue about a /submissions replacement","msgtype":"m.text"},"ts":1538335185000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1538335186000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"GPHemsley: see https://github.com/bocoup/web-platform-tests.live/issues/2 for discussion about a /submissions equivalent for web-platform-tests.live","msgtype":"m.text"},"ts":1538335265000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]