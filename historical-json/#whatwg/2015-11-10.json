[
{"content":{"body":"annevk: will look at https://github.com/whatwg/html-build/pull/39","msgtype":"m.text"},"ts":1447117457000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: oh, merged already","msgtype":"m.text"},"ts":1447117474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: What's the policy on merging things in the test suite repos? Their CONTRIBUTING files are just licensing legalese.","msgtype":"m.text"},"ts":1447127193000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"reads http://homepages.cwi.nl/~steven/Talks/2015/11-06-xml-amsterdam/","msgtype":"m.emote"},"ts":1447130232000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1447130241000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i guess they aren't fans of js?","msgtype":"m.text"},"ts":1447130553000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I suspect he isn't a fan of anything that happened on the Web this century","msgtype":"m.text"},"ts":1447130814000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"this talk is great","msgtype":"m.text"},"ts":1447131763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"You can tell by reading the HTML5 spec that it was written by programmers\"","msgtype":"m.text"},"ts":1447131771000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"meanwhile programmers whine that html is unimplementable and obviously written by theorists","msgtype":"m.text"},"ts":1447131794000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"CSS is another example of a successful declarative approach\" LOL","msgtype":"m.text"},"ts":1447131878000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"this talk is so naive it's hilarious","msgtype":"m.text"},"ts":1447131912000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example, where are the \"Advantages of the Procedural Approach\"? or the \"Disadvantages of the Declarative Approach\"?","msgtype":"m.text"},"ts":1447131945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's been 10 years now. you'd think they'd understand what went wrong with xforms.","msgtype":"m.text"},"ts":1447131966000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plus his \"declarative\" and \"procedural\" examples aren't even nearly specifying equivalent behavior","msgtype":"m.text"},"ts":1447132016000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"plus his procedural example is padded by specifying non-negative integers, which aren't covered by the declarative example at all","msgtype":"m.text"},"ts":1447132054000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i think the best part of this talk is that it fails to address any of HTML's actual failings or any of the actual risks to the Web platform.","msgtype":"m.text"},"ts":1447132240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it literally could have been given almost verbatim 10 years ago","msgtype":"m.text"},"ts":1447132256000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the \"100 year web\" slide in particular","msgtype":"m.text"},"ts":1447132298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe steven doesn't know that i wrote the HTML spec specifically to address that problem (though i was thinking more on the 1000-year timeframe)","msgtype":"m.text"},"ts":1447132321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that that is why the text looks like his \"Procedural numbers: HTML5\" slide","msgtype":"m.text"},"ts":1447132344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i don't understand the internal inconsistencies he's referring to in the \"Inflation\" slide. Is it the bolded text on the previous slide?)","msgtype":"m.text"},"ts":1447132408000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(maybe he subscribes to the \"everything should be conforming\" camp or the \"anything not conforming must be left undefined\" camp, but in that case, his \"100 year web\" slide misses the point even more)","msgtype":"m.text"},"ts":1447132445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That set of slides captures the nuance of Fox News","msgtype":"m.text"},"ts":1447139143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: finally got around to filing https://github.com/w3c/beacon/issues/14","msgtype":"m.text"},"ts":1447141286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: would you expect backgroundSync to have the same restrictions? It doesn't right now","msgtype":"m.text"},"ts":1447141875000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: of course","msgtype":"m.text"},"ts":1447141884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that's what we talked about, how that would be broken","msgtype":"m.text"},"ts":1447141897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: your argument was sendBeacon() throw the first stone, but I don't think that's true in contemporary implementations and we better prevent it from happening","msgtype":"m.text"},"ts":1447141930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this makes backgroundSync kinda useless. Eg, I send an email in the elevator when leaving work, put phone in pocket, phone switches from wifi to cell, my message isn't sent","msgtype":"m.text"},"ts":1447142080000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, needs to be optin","msgtype":"m.text"},"ts":1447142101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I gave this feedback when we started out too, I'm pretty sure","msgtype":"m.text"},"ts":1447142132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But then you decided amongst yourself on a different UX model without taking that into account","msgtype":"m.text"},"ts":1447142154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also don't browsers prefetch pages as they're typed into the address bar? Typing into the address bar can make requests to sites you weren't intending to visit. Isn't this the kind of thing we invented private browsing modes for?","msgtype":"m.text"},"ts":1447142222000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It was taken into account","msgtype":"m.text"},"ts":1447142233000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't think all browsers do that","msgtype":"m.text"},"ts":1447142253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the only way I can see of making background sync opt-in is to prompt on browser/tab close","msgtype":"m.text"},"ts":1447142443000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Which gets complicated on mobile in terms of when a tab is closed","msgtype":"m.text"},"ts":1447142472000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah I was thinking something like that too","msgtype":"m.text"},"ts":1447143269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it's not ideal to be sure","msgtype":"m.text"},"ts":1447143274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we should have a somewhat larger debate about this","msgtype":"m.text"},"ts":1447143294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: whether it's okay for closed tabs to continue to have some insight into user behavior","msgtype":"m.text"},"ts":1447143316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where's good? Background sync github?","msgtype":"m.text"},"ts":1447143327000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: maybe public-webappsec?","msgtype":"m.text"},"ts":1447143339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that's the only list I know with security minded folks already subscribed","msgtype":"m.text"},"ts":1447143356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: makes sense. I'm filming this morning, but can draft something up this afternoon","msgtype":"m.text"},"ts":1447143540000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"how does assignments on github work? i can't assign jungkees in https://github.com/whatwg/html/issues/321#issuecomment-155357371","msgtype":"m.text"},"ts":1447146768000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It only works for people who have push access","msgtype":"m.text"},"ts":1447146866000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Other people can't fix issues, obviously","msgtype":"m.text"},"ts":1447146876000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Servo uses an \"assigned\" label","msgtype":"m.text"},"ts":1447146886000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"fwiw I was considering using a bot to create one label per reviewer for wpt. You could do something similar with assignments","msgtype":"m.text"},"ts":1447147400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/isaacs/github/issues/100","msgtype":"m.text"},"ts":1447147434000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"(i.e. r?jgraham would set a label reviewer:jgraham a=jgraham would set a label assigned:jgraham)","msgtype":"m.text"},"ts":1447147457000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(or something)","msgtype":"m.text"},"ts":1447147465000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the point being that then people could see their review queue/assignment queue)","msgtype":"m.text"},"ts":1447147487000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We should add jungkees to the non-push access group","msgtype":"m.text"},"ts":1447148052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll do that","msgtype":"m.text"},"ts":1447148056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1447148230000,"senderName":"abreton","senderId":"abreton@irc"},
{"content":{"body":"salut, abreton","msgtype":"m.text"},"ts":1447148230000,"senderName":"botie1","senderId":"botie1@irc"},
{"content":{"body":"I am wondering if there is a way to make a worker inherit the CSP from the calling document?","msgtype":"m.text"},"ts":1447148255000,"senderName":"abreton","senderId":"abreton@irc"},
{"content":{"body":"abreton: not currently, as far as I know","msgtype":"m.text"},"ts":1447148514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok thanks","msgtype":"m.text"},"ts":1447148574000,"senderName":"abreton","senderId":"abreton@irc"},
{"content":{"body":"cvrebert: whose CONTRIBUTING files?","msgtype":"m.text"},"ts":1447149351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: web-platform-tests , csswg-tesy","msgtype":"m.text"},"ts":1447149381000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"*csswg-test","msgtype":"m.text"},"ts":1447149402000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"the policy is basically that we don't merge things in that are unnecessary or redundant, so if there's anything in that class, we shouldn't merge it","msgtype":"m.text"},"ts":1447149409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or should revert it if it's already been merged","msgtype":"m.text"},"ts":1447149423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: What about review requirements?","msgtype":"m.text"},"ts":1447149458000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"Hixie: I guess it is pretty much the same talk he's been giving for 10 years now","msgtype":"m.text"},"ts":1447149498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cvrebert: the review requirements are, it's a the discretion of the owners / core reviewers in the end","msgtype":"m.text"},"ts":1447149733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cvrebert: which for wpt amounts to Ms2ger and jgraham","msgtype":"m.text"},"ts":1447149744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for csswg-test I don't really know what the review requirements are","msgtype":"m.text"},"ts":1447149768000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but for wpt a good rule is that if you have any doubt, ask Ms2ger or jgraham","msgtype":"m.text"},"ts":1447149789000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Noted.","msgtype":"m.text"},"ts":1447150050000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"sup?","msgtype":"m.text"},"ts":1447150434000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Nothing specific.","msgtype":"m.text"},"ts":1447150684000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"annevk: you mentioned a web components meetup that we might want to combine with a serviceworker f2f, any details on the components meetup?","msgtype":"m.text"},"ts":1447155456000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't think anything's been decided yet","msgtype":"m.text"},"ts":1447156363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: there was a poll of sorts started on public-webapps","msgtype":"m.text"},"ts":1447156377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahh ok. I'll see if it's coming together in a month or so, if not I'll take MS up on their offer of hosting","msgtype":"m.text"},"ts":1447156553000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"i wonder if https://github.com/whatwg/html-build should say to fork html, clone the fork, and then clone html-build. i know build.sh will clone html itself, but if you want to submit a PR for html you have to fork it","msgtype":"m.text"},"ts":1447159450000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: ^","msgtype":"m.text"},"ts":1447159540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is there any reason why it isn't a submodule of html?","msgtype":"m.text"},"ts":1447159629000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i dunno","msgtype":"m.text"},"ts":1447159908000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the html-build script will clone the html repo if it doesn't find an existing clone in the local environment or you don't point it at one","msgtype":"m.text"},"ts":1447160432000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least that is the intent, though there's an open html-build PR that I need to finish work on","msgtype":"m.text"},"ts":1447160515000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah i see https://github.com/whatwg/html-build/pull/29 now","msgtype":"m.text"},"ts":1447160523000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i still think our READMEs should instruct to fork html. iirc there was some contributor that got confused about this and we needed to start over with forking html","msgtype":"m.text"},"ts":1447160671000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i suppose this is https://github.com/whatwg/html-build/issues/26","msgtype":"m.text"},"ts":1447160775000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1447160785000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1447160813000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sorry, I was working on this stuff pretty actively til roughly one month ago","msgtype":"m.text"},"ts":1447160879000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"getting back to working again on making it right as soon as possible is a high(est) priority for me personally","msgtype":"m.text"},"ts":1447160945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as why we've not set it up at as submodule already, I guess that's because none of us who worked on it initially are big fans of submodules","msgtype":"m.text"},"ts":1447161181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i can PR the html-build readme to add a first step saying to fork html if the goal is to PR html","msgtype":"m.text"},"ts":1447161932000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: annevk: so are we intending to allow service workers to be registered for file:// documents (or event wss:// somehow?)","msgtype":"m.text"},"ts":1447163190000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: registered? No. Intercepting file:// is more interesting though. I can see us intercepting wss in future too, but it'd be a different event","msgtype":"m.text"},"ts":1447163267000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't see where we block file:// in the spec any more","msgtype":"m.text"},"ts":1447163284000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: it seems to just use the \"Is origin potentially trustworthy\" check, which allows file://, wss://","msgtype":"m.text"},"ts":1447163330000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohhh, we should specifically prevent file I think. Having a SW running in someone's file system sounds really unsafe","msgtype":"m.text"},"ts":1447163373000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ok, I will file a separate issue for that... I had commented in the big \"secure context\" issue, but I think we should fix this sooner","msgtype":"m.text"},"ts":1447163400000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1447163411000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if we want to allow file:// and wss:// to be intercepted, we also need to relax the restrictions in cache API","msgtype":"m.text"},"ts":1447163473000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: file:// maybe, but not sure what it means to put a wss:// in a cache. Will those be represented by request/response or something else?","msgtype":"m.text"},"ts":1447163589000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not sure... I was just thinking the usual cache patterns in SW should work with FetchEvent.request even if its a wss: scheme...","msgtype":"m.text"},"ts":1447163622000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or at least not explode","msgtype":"m.text"},"ts":1447163675000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess we already have some things that conditionally fail... like cache.add() with a POST","msgtype":"m.text"},"ts":1447163697000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't know enough about the wss protocol to know if request/response makes sense or if it'd need its own event","msgtype":"m.text"},"ts":1447163813000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1447163822000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"neither do I... lets burn that bridge later :-)","msgtype":"m.text"},"ts":1447163835000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: what about an https://foo.com window, that has an iframe with a data:// URI.. I believe the iframe inherits the parents origin there... should the iframe be allowed to register a SW for https://foo.com?","msgtype":"m.text"},"ts":1447164500000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: or for a javascript:// window that inherits the origin of its opener... shoudl that be allowed to register using its opener's origin?","msgtype":"m.text"},"ts":1447164660000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess the origins should just be compared and if the origins are set properly, then it shoudl work","msgtype":"m.text"},"ts":1447165392000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: JakeA: intercepting anything but http/https URLs doesn't work per Fetch","msgtype":"m.text"},"ts":1447165519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: JakeA: nothing for those URLs gets even close to checking a service worker for a response","msgtype":"m.text"},"ts":1447165592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure... but I don't see anything in .register() currently that would prevent the service worker from registering and controlling such a page","msgtype":"m.text"},"ts":1447165647000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yes to both your questions - I think this is how it works already","msgtype":"m.text"},"ts":1447165874000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1447165880000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zcorpan: a constructor cannot return a promise","msgtype":"m.text"},"ts":1447166903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. why not?","msgtype":"m.text"},"ts":1447166930000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though since we need some opt-in mechanism, we can make it be a static method on Worker or so instead","msgtype":"m.text"},"ts":1447166993000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Presumably because a construtor is supposed to construct an instance?","msgtype":"m.text"},"ts":1447166993000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: well, I guess technically it probably can, but a constructor is expected to return an instance","msgtype":"m.text"},"ts":1447167017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1447167051000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the Promise() constructor can return a promise :-)","msgtype":"m.text"},"ts":1447168416000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: sorry for more dumb questions... do we intentionally let https://foo.com window to execute .register('javascript://...')?  where the service worker script inherits the origin from the window?","msgtype":"m.text"},"ts":1447168587000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the SW cannot be a blob/data url, so I guess javascript should be out too","msgtype":"m.text"},"ts":1447168762000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Otherwise you're not proving you can put script on that origin","msgtype":"m.text"},"ts":1447168777000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Wouldn't javascript:// fail the same origin check?","msgtype":"m.text"},"ts":1447168798000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no... because I thought javascript:// URIs were supposed to inherit the origin","msgtype":"m.text"},"ts":1447168824000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: what blocks blob: and data: URLs for the script?  I didn't see that last time I looked","msgtype":"m.text"},"ts":1447168846000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: oh, hmm... I guess the URL spec does not do the origin inherit for data: or javascript:... but it seems it might give you a real origin for a blob:","msgtype":"m.text"},"ts":1447168947000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: maybe we need to explicitly fail for non http or https schemes","msgtype":"m.text"},"ts":1447168985000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, I'll add it to the issue I wrote","msgtype":"m.text"},"ts":1447168999000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm sure we used to explicitly restrict those","msgtype":"m.text"},"ts":1447169022000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, it got lost at some point","msgtype":"m.text"},"ts":1447169033000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Thanks for spotting those!","msgtype":"m.text"},"ts":1447169203000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Being able to use a non-network resource as a service worker is a big security issue and footgun","msgtype":"m.text"},"ts":1447169235000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: np!  we are trying to implement the secure context thing which made me start to wonder... we are only blocking file:// right now because we store the SW script in Cache API which rejects it","msgtype":"m.text"},"ts":1447169257000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: are you suggesting Worker should be a promise subclass? :-P","msgtype":"m.text"},"ts":1447178636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't know we were talking about Worker, but if you say so","msgtype":"m.text"},"ts":1447178674000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I mean, if you think it should be a subclass, ok","msgtype":"m.text"},"ts":1447178693000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1447178695000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Well, I'm joking","msgtype":"m.text"},"ts":1447178701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if conceptually it makes sense for a worker to be an asynchronous iterable","msgtype":"m.text"},"ts":1447178811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since it's really just a sequence of message events","msgtype":"m.text"},"ts":1447178825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"clearly it should be a subclass of Observable<T>","msgtype":"m.text"},"ts":1447179311000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins, sounds like you fly too much","msgtype":"m.text"},"ts":1447179702000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That was my problem, actually. I *always* fly American out of SFO, so I didn't even check the airport this time.","msgtype":"m.text"},"ts":1447179775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And thank you for https://pbs.twimg.com/media/CTc9sbTUYAAYhar.png","msgtype":"m.text"},"ts":1447179817000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Rolled into SFO this morning and checked my terminal, went \"lol SFO doesn't have an A terminOH FUCK\"","msgtype":"m.text"},"ts":1447179837000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Can confirm that list is accurate, have received live scorpions.","msgtype":"m.text"},"ts":1447179871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]