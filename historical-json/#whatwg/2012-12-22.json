[
{"content":{"body":"( in the event you had a table in a table )","msgtype":"m.text"},"ts":1356134585000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Also, \"style\" won't take when defineProperty'd on Node, Element, or HTMLElement.","msgtype":"m.text"},"ts":1356134681000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hm. If I hadn't used both odinho and Velmont as nick, I'd be on the list and not have two entries on the \"didn't really make the cut\". :-)","msgtype":"m.text"},"ts":1356134818000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"makes me wonder about creating a .css that returns the computedStyle but also accepts being overwritten.","msgtype":"m.text"},"ts":1356135040000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"if a <table> has a <thead> with some <th>s in it, and then has some <tr>s and <tbody>s interspaced (as in, tr, tr, tbody-with-tr-tr-tr, tr, tr, another tbody-with-tr-tr, etc), and you try to sort a column","msgtype":"m.text"},"ts":1356135621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the trs in each tbody need to be sorted within the tbody","msgtype":"m.text"},"ts":1356135630000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the tbodies don't move themselves","msgtype":"m.text"},"ts":1356135639000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but what about the trs that are children of the table itself?","msgtype":"m.text"},"ts":1356135648000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do they sort all together and end up above the tbodies?","msgtype":"m.text"},"ts":1356135656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do they sort only within the sequence they're in?","msgtype":"m.text"},"ts":1356135669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so first we sort the first two trs, then the tbody's three trs, then the two trs, then the next tbody's trs, etc?","msgtype":"m.text"},"ts":1356135689000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh man, you actually care about which tbody the tr is in?","msgtype":"m.text"},"ts":1356138205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1356138210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"only because it's the easiest solution so far, i'm wide open to being convinced we should do otherwise","msgtype":"m.text"},"ts":1356138232000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I have no opinion on whether you should sort the naked trs all together or per-sequence.","msgtype":"m.text"},"ts":1356138234000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right solution is to rewrite the dom into a single tbody containing all the sorted rows. ^_^","msgtype":"m.text"},"ts":1356138252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't think i've ever used more than one tbody, so i have no idea what makes sense for sorting","msgtype":"m.text"},"ts":1356138257000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I've only used them for styling purposes.","msgtype":"m.text"},"ts":1356138267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: why would the author bother to use two <tbody>s in that case?","msgtype":"m.text"},"ts":1356138268000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Man, I dunno.","msgtype":"m.text"},"ts":1356138277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"consider the table at http://www.whatwg.org/specs/web-apps/current-work/#the-input-element","msgtype":"m.text"},"ts":1356138315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems vaguely weird to move tr's between tbody's, since you're changing the tree structure (eg. events propagate up a different list of parents)","msgtype":"m.text"},"ts":1356138317000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh god i loaded that in firefox again","msgtype":"m.text"},"ts":1356138332000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(note, i have no answer for how you keep the tbody headings in the right place on that table)","msgtype":"m.text"},"ts":1356138418000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that table does seem to argue for supporting each tbody as being its own sorting domain","msgtype":"m.text"},"ts":1356138434000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i'd force the headings to the top by giving it a sort key of \"\")","msgtype":"m.text"},"ts":1356138498000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what if the user reverses the sort order?","msgtype":"m.text"},"ts":1356138512000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mm","msgtype":"m.text"},"ts":1356138516000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"make them separate tbody's?","msgtype":"m.text"},"ts":1356138535000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that seems dubious","msgtype":"m.text"},"ts":1356138543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think something about the spanning should probably suffice","msgtype":"m.text"},"ts":1356138563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or the scope","msgtype":"m.text"},"ts":1356138568000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but anyway","msgtype":"m.text"},"ts":1356138591000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not worried about that for now","msgtype":"m.text"},"ts":1356138594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, sorting the tbodys separately does seem the right idea.","msgtype":"m.text"},"ts":1356138647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I still have no clue about sorting the naked trs separately or together.","msgtype":"m.text"},"ts":1356138664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"unrelated: is the default text sort case-insensitive?","msgtype":"m.text"},"ts":1356138671000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'll just sort sequences of them","msgtype":"m.text"},"ts":1356138684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: currently that's my plan but again, that's just cos nobody has argued otherwise","msgtype":"m.text"},"ts":1356138697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(for most regular-user stuff it's probably best)","msgtype":"m.text"},"ts":1356138741000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It probably makes the most sense, yeah.","msgtype":"m.text"},"ts":1356138745000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"turn on sorting for all tables on random pages that use tables for layout, just for entertainment","msgtype":"m.text"},"ts":1356138813000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"welcome to the picassoweb","msgtype":"m.text"},"ts":1356138854000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Haha, nice.","msgtype":"m.text"},"ts":1356138880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They'd all end up sorting by string, generally, I assume.","msgtype":"m.text"},"ts":1356138891000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Signing off for 2 weeks.  See you all on Jan 8th!","msgtype":"m.text"},"ts":1356139894000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No more Tab.","msgtype":"m.text"},"ts":1356149939000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"http://secure.codepen.io/joe/fulldetails/KIgFx Hixie console.log(document.body.css) I think it's exactly what you wanted (but under the wrong namespace).","msgtype":"m.text"},"ts":1356152503000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ms2ger: refixed http://w3c-test.org/html/","msgtype":"m.text"},"ts":1356167783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the fix will take this time","msgtype":"m.text"},"ts":1356167793000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"problem yesterday was, it turned out the cause was something that got rsynced over from dvcs.w3.org","msgtype":"m.text"},"ts":1356167876000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I had made the change locally, so the next rsync just ended up clobbering it","msgtype":"m.text"},"ts":1356167908000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I think Robin has removed it now from dvcs.w3.org, so should not show up again","msgtype":"m.text"},"ts":1356167991000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah, fun","msgtype":"m.text"},"ts":1356170238000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, thanks!","msgtype":"m.text"},"ts":1356170241000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, sortable is being drafted already","msgtype":"m.text"},"ts":1356171946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: requiring <thead> seems overkill for simple tables","msgtype":"m.text"},"ts":1356174961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: also, there's a number of xref problems and some missing <dfn> around the new members","msgtype":"m.text"},"ts":1356174992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone feel like reviewing some bug fixes? https://github.com/w3c/html-testsuite/pull/12","msgtype":"m.text"},"ts":1356181265000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"your bug fix seems to remove the original test","msgtype":"m.text"},"ts":1356181578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in particular you no longer test the relation between the content and IDL attribute","msgtype":"m.text"},"ts":1356181645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh you do, but the reverse","msgtype":"m.text"},"ts":1356181669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1356181674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I removed a part that just wasn't backed by the spec","msgtype":"m.text"},"ts":1356182084000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, re your question about testharness.js tests for SVG","msgtype":"m.text"},"ts":1356182572000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger, we are just starting to get our SVG 2 test suite together","msgtype":"m.text"},"ts":1356182582000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I asked something about that?","msgtype":"m.text"},"ts":1356182603000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(I think so?)","msgtype":"m.text"},"ts":1356182609000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger, and I haven't written any testharness.js tests before; do they relate to the Shepherd-run reftests?","msgtype":"m.text"},"ts":1356182613000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or are they completely separate/","msgtype":"m.text"},"ts":1356182618000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"testharness.js is for JS tests, reftests are rendering tests :):","msgtype":"m.text"},"ts":1356182637000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok :)","msgtype":"m.text"},"ts":1356182649000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but they don't use the reftest harness at all","msgtype":"m.text"},"ts":1356182657000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1356182660000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"does the shepherd harness do automatic reftest testing yet?","msgtype":"m.text"},"ts":1356182668000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Automatic? No","msgtype":"m.text"},"ts":1356182696000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, here it is","msgtype":"m.text"},"ts":1356182713000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do you have a repository set up?","msgtype":"m.text"},"ts":1356182726000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, you asked here https://bugzilla.mozilla.org/show_bug.cgi?id=816778#c47","msgtype":"m.text"},"ts":1356182730000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, just found that","msgtype":"m.text"},"ts":1356182735000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh that's like already a week ago","msgtype":"m.text"},"ts":1356182753000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"my how time (and email inbox buildup) passes","msgtype":"m.text"},"ts":1356182764000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger, so we have http://svgwg.org/hg/svg2-tests/","msgtype":"m.text"},"ts":1356182796000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger, which I think has the right directory structure for shepherd","msgtype":"m.text"},"ts":1356182807000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ugh","msgtype":"m.text"},"ts":1356182820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"though we don't have sheperd configured to present our tests anywhere","msgtype":"m.text"},"ts":1356182821000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(and we haven't started importing our SVG 1.1 tests there yet)","msgtype":"m.text"},"ts":1356182831000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I don't think shepherd actually requires such a silly directory structure, and if it did, it'd have to be changed for html/webapps anyway","msgtype":"m.text"},"ts":1356182863000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"for testharness.js tests?","msgtype":"m.text"},"ts":1356182883000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(I'm assuming webapps tests don't have any reftests?)","msgtype":"m.text"},"ts":1356182892000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"HTML has some","msgtype":"m.text"},"ts":1356182905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1356182912000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"do you have link?","msgtype":"m.text"},"ts":1356182915000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"https://github.com/w3c/html-testsuite","msgtype":"m.text"},"ts":1356182926000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll just copy the location/directory structure","msgtype":"m.text"},"ts":1356182927000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"nice unicorn","msgtype":"m.text"},"ts":1356182941000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"We just got rid of the approved/contributors stuff","msgtype":"m.text"},"ts":1356182947000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah it's loaded now","msgtype":"m.text"},"ts":1356182949000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1356182962000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think we'll see how we go in terms of WG approval/review of tests for us","msgtype":"m.text"},"ts":1356182988000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Instead, pull requests","msgtype":"m.text"},"ts":1356182993000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"seems easiest just to copy CSS for the moment","msgtype":"m.text"},"ts":1356182997000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1356183004000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Fwiw, I tend to think we should just throw everything in one repo","msgtype":"m.text"},"ts":1356183012000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(though we aren't using github of course)","msgtype":"m.text"},"ts":1356183013000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Anyway, want to submit dzbarsky's test?","msgtype":"m.text"},"ts":1356183057000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah I will","msgtype":"m.text"},"ts":1356183087000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"once I sort out our repo","msgtype":"m.text"},"ts":1356183092000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but I guess we don't have a syncing script like the one for reftests/w3c-css/","msgtype":"m.text"},"ts":1356183106000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1356183108000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger, do you use the same format for these js tests too? I see like <link rel=author>, <link rel=help>, etc.","msgtype":"m.text"},"ts":1356183152000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"We have a syncing script under dom/imptests","msgtype":"m.text"},"ts":1356183173000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"links are optional, because they're not terribly useful","msgtype":"m.text"},"ts":1356183195000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah I'm kind of skeptical about manually maintained metadata","msgtype":"m.text"},"ts":1356183210000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"perhaps I should just read the code in there, but do the importing scripts require a particular directory structure or anything?","msgtype":"m.text"},"ts":1356183255000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1356183263000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Just a MANIFEST file","msgtype":"m.text"},"ts":1356183273000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1356183318000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and it just copies those files","msgtype":"m.text"},"ts":1356183321000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1356183330000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok cool, sounds easy :)","msgtype":"m.text"},"ts":1356183335000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"will look into that","msgtype":"m.emote"},"ts":1356183343000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"It should be easy, I'm lazy :)","msgtype":"m.text"},"ts":1356183394000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is three glasses of wine in at at 12:30am so is not going to try now","msgtype":"m.emote"},"ts":1356183423000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Oh, AM, that makes more sense :)","msgtype":"m.text"},"ts":1356183502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: all tests in one repo?","msgtype":"m.text"},"ts":1356183743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1356183749000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I tend to agree","msgtype":"m.text"},"ts":1356183749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I haven't done much with tests...","msgtype":"m.text"},"ts":1356183763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe you should ;)","msgtype":"m.text"},"ts":1356183783000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah one day. I should do a set of tests for Encoding and URL...","msgtype":"m.text"},"ts":1356184748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In other news, this prototype stuff... What does document.open() do with that? If you keep the document, but the global object is replaced, are the prototypes weird?","msgtype":"m.text"},"ts":1356184784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, running out of time...","msgtype":"m.text"},"ts":1356184837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bz can tell you stories about that, I'm sure :)","msgtype":"m.text"},"ts":1356185201000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: pretty sure the people editing the w3c spec don't know either (Re your tweet)","msgtype":"m.text"},"ts":1356194265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: requiring <thead> is because otherwise you have to handle <th>s in weird places","msgtype":"m.text"},"ts":1356194320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: e.g. if you have <tr><th><td> <tr><td<td> <tr><td><th> <tr><td><td>","msgtype":"m.text"},"ts":1356194362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure what should happen in that case","msgtype":"m.text"},"ts":1356194375000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: (in particular, i'm almost certain none of them have read the spec cover to cover in the first place; the CR has all kinds of weird stuff that makes no sense e.g. parts of ping=\"\")","msgtype":"m.text"},"ts":1356194426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, I'd rather got that impression.","msgtype":"m.text"},"ts":1356194579000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh well, time for me to work out how I'm getting to my parents. Flooding and landslides makes this... interesting.","msgtype":"m.text"},"ts":1356194603000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"enjoy","msgtype":"m.text"},"ts":1356194649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"On the whole I expect I'll just stay here another day, but currently trying to figure out diversions of trains to work out how late they'll be running.","msgtype":"m.text"},"ts":1356194698000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And maybe take a coach. Easier to divert them. :)","msgtype":"m.text"},"ts":1356194734000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh, around the water","msgtype":"m.text"},"ts":1356195030000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought you meant you wanted to hijack one or something","msgtype":"m.text"},"ts":1356195044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm sure my lack of any practical experience driving would help with that :)","msgtype":"m.text"},"ts":1356195075000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"according to the specs, what should happen if I do: input.valueAsNumber=NaN (for a type='number' and type='date')","msgtype":"m.text"},"ts":1356197328000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"setting seems to always assume the new value is valid","msgtype":"m.text"},"ts":1356197351000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"yeah, that's bogus","msgtype":"m.text"},"ts":1356197545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam|away: here's another example of wanting a different setter type than getter type","msgtype":"m.text"},"ts":1356197555000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam|away: i want to return NaN sometimes (unrestricted double), but the setter needs to just be double","msgtype":"m.text"},"ts":1356197578000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"NaN is a double by most defintiions.","msgtype":"m.text"},"ts":1356197594000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"not WebIDL's","msgtype":"m.text"},"ts":1356197602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Shows what I know :)","msgtype":"m.text"},"ts":1356197625000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"volkmar: i filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=20496","msgtype":"m.text"},"ts":1356197639000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"volkmar: if you're implementing, assume it will be fixed to treat NaN/Infinity the same way as a WebIDL \"double\" would","msgtype":"m.text"},"ts":1356197660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(which i think means TypeError is thrown)","msgtype":"m.text"},"ts":1356197668000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, ok","msgtype":"m.text"},"ts":1356197753000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"right now our implementation is setting the empty string if NaN is passed","msgtype":"m.text"},"ts":1356197767000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"i could see an argument for that behaviour","msgtype":"m.text"},"ts":1356197806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about Infinity?","msgtype":"m.text"},"ts":1356197819000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me check","msgtype":"m.text"},"ts":1356197863000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"(i added a comment to the bug)","msgtype":"m.text"},"ts":1356197879000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: seems like we handle Infinity like NaN","msgtype":"m.text"},"ts":1356198266000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"that seems a bit less justifiable","msgtype":"m.text"},"ts":1356198284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1356198317000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"but I don't really not what would make sense","msgtype":"m.text"},"ts":1356198336000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"i think Infinity should just throw TypeError","msgtype":"m.text"},"ts":1356198344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could buy NaN setting the value to \"\" though, that seems somewhat useful","msgtype":"m.text"},"ts":1356198358000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that'd be my recommendation, anyway","msgtype":"m.text"},"ts":1356198377000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's your call really :-)","msgtype":"m.text"},"ts":1356198384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"eh","msgtype":"m.text"},"ts":1356198411000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"if you do something other than Infinity=>TypeError, NaN=>\"\", please do comment on the bug so i make sure to make the spec match implementations","msgtype":"m.text"},"ts":1356198420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think I will do that","msgtype":"m.text"},"ts":1356198432000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"will try to update the bug","msgtype":"m.text"},"ts":1356198435000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"excellent","msgtype":"m.text"},"ts":1356198442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thank you sir","msgtype":"m.text"},"ts":1356198444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yw","msgtype":"m.text"},"ts":1356198464000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"is there some name for the level of a key in a sort? i.e. a secondary key's ___ is 2, a primary key's ___ is 1, a tertiary key's ___ is 3, etc","msgtype":"m.text"},"ts":1356200176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the key's ordinality, maybe?","msgtype":"m.text"},"ts":1356200218000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should  <tr><th sorted=\"1\">A <th sorted=\"3\"> B</tr>  be valid? (i.e. skipping ordinalities)","msgtype":"m.text"},"ts":1356200547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"huh, autocomplete is case-insensitive","msgtype":"m.text"},"ts":1356200889000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"was that intentional, i wonder","msgtype":"m.text"},"ts":1356200893000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, yes.","msgtype":"m.text"},"ts":1356200954000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1356200955000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we sort the following table: <table>....<tbody><tr><td rowspan=2>B</tr><!----><tr></tr><tr><td>A</table>","msgtype":"m.text"},"ts":1356202575000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...what should the resulting DOM look like?","msgtype":"m.text"},"ts":1356202580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the B row and the next row are kept together, but are they kept together along with the comment between them?","msgtype":"m.text"},"ts":1356202621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm thinking no.","msgtype":"m.text"},"ts":1356202624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders, hey, bz's latest email on www-dom sounds like something you'd know about","msgtype":"m.text"},"ts":1356203741000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: If you say so.","msgtype":"m.text"},"ts":1356204081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I did :)","msgtype":"m.text"},"ts":1356204093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or at least find someone who does :)","msgtype":"m.text"},"ts":1356204111000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Or I don't know and can look :)","msgtype":"m.text"},"ts":1356204346000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thanks :)","msgtype":"m.text"},"ts":1356204378000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(I believe we never change, off hand)","msgtype":"m.text"},"ts":1356204441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(In case I vanish)","msgtype":"m.text"},"ts":1356204446000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That would be unfortunate","msgtype":"m.text"},"ts":1356204666000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Emailed, if you so care.","msgtype":"m.text"},"ts":1356205334000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1356205449000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: \"The encoding attribute must return the encoding.\" That’s the encoding *name*, right?","msgtype":"m.text"},"ts":1356213122000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"In http://encoding.spec.whatwg.org/#dom-textdecoder-encoding","msgtype":"m.text"},"ts":1356213225000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wonders about the point of this step in the font type pattern matching algorithm: Let the byte sequence to be matched be the byte sequence to be matched.","msgtype":"m.emote"},"ts":1356213958000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: is part of that a variable name or something? (e.g. in italics, if using a graphical browser?)","msgtype":"m.text"},"ts":1356214530000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, I didn't *spot* anything formatted differently on one side than the other ...","msgtype":"m.text"},"ts":1356214597000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"dunno then","msgtype":"m.text"},"ts":1356214604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't get why I-Ds expire so quickly ...","msgtype":"m.emote"},"ts":1356218348000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"gsnedders: where do we expose GC behaviour?","msgtype":"m.text"},"ts":1356219141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought we'd worked pretty hard to not expose it at all","msgtype":"m.text"},"ts":1356219149000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: getElementsByTagName NodeList","msgtype":"m.text"},"ts":1356219208000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that's more exposing caching behaviour than GC behaviour","msgtype":"m.text"},"ts":1356219412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1356219452000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean i guess they might be correlated","msgtype":"m.text"},"ts":1356219461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But you can observe when GCs happen due to cache invalidation happening at the same time, no?","msgtype":"m.text"},"ts":1356219464000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i guess if you put a property on the object, then keep no references, then keep asking for the object and checking if there is a property on it...","msgtype":"m.text"},"ts":1356219636000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but there doesn't have to be a correlation between GC and caching there","msgtype":"m.text"},"ts":1356219648000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the UA could start returning a new object even when the other isn't GCed, and could have a strong reference from the cache to the object","msgtype":"m.text"},"ts":1356219671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm going to claim that either way exposing caching behaviour in such a way is bad.","msgtype":"m.text"},"ts":1356219694000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i'd call those basically equivalent problems","msgtype":"m.text"},"ts":1356220227000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that is, exposing nondeterministic, implementation-specific behavior is bad (and GC just happens to be the most common manifestation of that)","msgtype":"m.text"},"ts":1356220250000,"senderName":"zewt","senderId":"zewt@irc"}
]