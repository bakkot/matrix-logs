[
{"content":{"body":"about github webhoooks, does anybody here know if there is some way to get github to retry a webhook it if times out or fails?","msgtype":"m.text"},"ts":1495592867000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't think it's possible. (I assume you meant when the POST from gitHub to your server has failed, because your server had a broken leg)","msgtype":"m.text"},"ts":1495593446000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"payloads have also a max size of 5 MB. Above that the webhook will not happen.","msgtype":"m.text"},"ts":1495593579000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"https://developer.github.com/webhooks/","msgtype":"m.text"},"ts":1495593586000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Oh let me fix one thing","msgtype":"m.text"},"ts":1495593779000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"There is a manual retrigger","msgtype":"m.text"},"ts":1495593786000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: thanks","msgtype":"m.text"},"ts":1495593810000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I can manually re-run it from the github UI","msgtype":"m.text"},"ts":1495593822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/[owner_name]/[repo_name]/settings/hooks/unique_id","msgtype":"m.text"},"ts":1495593825000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"under Recent Deliveries","msgtype":"m.text"},"ts":1495593840000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1495593844000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is what I use","msgtype":"m.text"},"ts":1495593851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"every day","msgtype":"m.text"},"ts":1495593857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ouch","msgtype":"m.text"},"ts":1495593863000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"for https://github.com/w3c/web-platform-tests/","msgtype":"m.text"},"ts":1495593867000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah the thing is, for web-platform-tests it generates a *ton* of webhook requests every day","msgtype":"m.text"},"ts":1495593899000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dozens every day","msgtype":"m.text"},"ts":1495593908000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"You are listening to \"*\" or specific events.","msgtype":"m.text"},"ts":1495593921000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"well one thing is, github unfortunately does not give much granularity on what you can listen for","msgtype":"m.text"},"ts":1495593957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"on github.com/webcompat/web-bugs. We probably only generate 100 issues event a day.","msgtype":"m.text"},"ts":1495593965000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"yeah most of the events are useless and you never want to do anything for them","msgtype":"m.text"},"ts":1495593990000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but for pull requests the important ones are ‚Äúopened‚Äù and ‚Äúclosed‚Äù and ‚Äúsyncronized‚Äù","msgtype":"m.text"},"ts":1495594021000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"For us it helps us to do labelling automagically depending on a couple of criteria","msgtype":"m.text"},"ts":1495594028000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1495594035000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but we are using it to mirror the PR branches","msgtype":"m.text"},"ts":1495594053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so for that all we care about is opened/closed/syncronized","msgtype":"m.text"},"ts":1495594072000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1495594082000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"and not things like ‚Äúedited‚Äù or ‚Äúreview requested‚Äù etc etc","msgtype":"m.text"},"ts":1495594097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so if those fail I don‚Äôt care","msgtype":"m.text"},"ts":1495594109000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if an opened/closed/syncronized fails I care a lot","msgtype":"m.text"},"ts":1495594122000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so what I do is, I have some bookmarklets I wrote to filter out all the noise from the Recent Deliveries logs","msgtype":"m.text"},"ts":1495594154000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I can find just the opened/closed/syncronized fails","msgtype":"m.text"},"ts":1495594165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1495594173000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"yeah :(","msgtype":"m.text"},"ts":1495594181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have to just manually click the Redeliver button for those","msgtype":"m.text"},"ts":1495594202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe a good bug report for GitHub on having a URI with a list of all recent fails with a JSON format and a way to retrigger those.","msgtype":"m.text"},"ts":1495594227000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"so... would much rather that Github just retried them some number of times if they fail","msgtype":"m.text"},"ts":1495594230000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1495594234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway it‚Äôs not a huge hardship","msgtype":"m.text"},"ts":1495594321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just annoying","msgtype":"m.text"},"ts":1495594324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"add another point of failure by automating with webdriver api and selenium :)","msgtype":"m.text"},"ts":1495594421000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1495594553000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah but since I don‚Äôt know how to automate with webdriver I would ask somebody else to set it up and so they after that they would be responsible for dealing with the failures instead of me","msgtype":"m.text"},"ts":1495594607000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other words, great plan","msgtype":"m.text"},"ts":1495594614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good brainstorming!","msgtype":"m.text"},"ts":1495594630000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1495594730000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"mathiasbynens: üç∞üéâ","msgtype":"m.text"},"ts":1495607848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: does XUL require external DTDs?","msgtype":"m.text"},"ts":1495610474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes :-(","msgtype":"m.text"},"ts":1495610714000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: that's the whole point. the DTD varies by localization, so the DTDs come from the language pack","msgtype":"m.text"},"ts":1495610733000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I'm on board with parsing the internal subset, I don't know how much the external subset varies from that, it might be that an implementation could reuse quite a bit of code and we'd just never expose it to the web","msgtype":"m.text"},"ts":1495610803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but it sounds like there's not a real interest in addressing that issue","msgtype":"m.text"},"ts":1495610823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: addressing XML5, I mean","msgtype":"m.text"},"ts":1495610834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it seems like this isn't the time for XML5. I can sympathize with not wishing to take on the scope creep of switching to XML5 if the goal is just to get memory-safety for XML 1.0 4th ed.","msgtype":"m.text"},"ts":1495611168000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"WebIDL style opinion: I have a set of subclasses that all share an attribute. *One* of them wants to treat the attribute as readonly; the rest treat it as mutable.  Should I do the technically-correct thing, and mark it as \"readonly attribute\" on the superclass, then \"inherit attribute\" on all but one of the subclasses; or do the easy thing and just put","msgtype":"m.text"},"ts":1495611262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"attribute\" on the superclass, then describe in prose that the one subclass ignores writes?","msgtype":"m.text"},"ts":1495611263000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: yeah, makes sense","msgtype":"m.text"},"ts":1495611271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: given https://bugzilla.mozilla.org/show_bug.cgi?id=501837 I think we should consider XML 1.0 5th though","msgtype":"m.text"},"ts":1495611284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but meh","msgtype":"m.text"},"ts":1495611288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: did you ever discuss with the JavaScript folks changing the JavaScript String type to be UTF-8 or UCS-2?","msgtype":"m.text"},"ts":1495611324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I mean, supporting a UTF-8 string type","msgtype":"m.text"},"ts":1495611347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I tried to convince Waldo he should give it a shot or at least strongly consider it, but not much luck thus far","msgtype":"m.text"},"ts":1495611440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: changing JS string internals to UTF-8 was discussed at one point","msgtype":"m.text"},"ts":1495614062000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: quite a while ago","msgtype":"m.text"},"ts":1495614091000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: but in good news, script parsing directly from UTF-8 seems to be going ahead","msgtype":"m.text"},"ts":1495614117000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so I don't really mean breaking the API contract with the web, just to have an additional internal string type (or replace the ASCII-only one)","msgtype":"m.text"},"ts":1495614123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's not ASCII-only, it's Latin-1","msgtype":"m.text"},"ts":1495614138000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1495614143000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1495614152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't mean breaking the Web-visible API, either","msgtype":"m.text"},"ts":1495614156000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ah, parsing from UTF-8 sounds nice, hopefully we don't have the V8 bottleneck then if you hit an emoji in a comment","msgtype":"m.text"},"ts":1495614191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks for reviewing https://github.com/whatwg/fetch/pull/547 Test-wise, I think the best way to go is to use potential destination as part of https://github.com/whatwg/html/pull/2588 and then land it alongside a Chrome CL with the right tests","msgtype":"m.text"},"ts":1495614203000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: see also https://bugzilla.mozilla.org/show_bug.cgi?id=1355106","msgtype":"m.text"},"ts":1495614218000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I've been trying to promote not repeating that V8 design","msgtype":"m.text"},"ts":1495614243000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yoav: that's reasonable, I forgot this requires changes to the HTML Standard, that should ensure the relevant bugs get filed at least","msgtype":"m.text"},"ts":1495614243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: great, I wasn't aware you were on top of all that","msgtype":"m.text"},"ts":1495614268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: AFAICT, we aren't headed towards that V8 design","msgtype":"m.text"},"ts":1495614271000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: would you be interested in adding the \"potential destination\" bits to your PR? Or would you like me to do it?","msgtype":"m.text"},"ts":1495614390000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: \"we don't have the V8 bottleneck then if you hit an emoji in a comment\"","msgtype":"m.text"},"ts":1495614536000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"What a time to be alive!","msgtype":"m.text"},"ts":1495614543000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"do I want to ask what the V8 bottleneck is? does it convert everything to utf-16 codeunits when it hits a non-ASCII/latin1 byte?","msgtype":"m.text"},"ts":1495615099000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Emojis are so great at making people that otherwise wouldn't care put up the right i18n infrastructure","msgtype":"m.text"},"ts":1495615172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I think that's basically it, though I don't think it has to redo everything","msgtype":"m.text"},"ts":1495615201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: but it's a Unicode performance cliff effectively","msgtype":"m.text"},"ts":1495615236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: _requiring_ a user activation for permission prompt might be a bit agressive but I know there are some experiment in this direction in Chrome","msgtype":"m.text"},"ts":1495617151000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"tobie: if other browsers are okay with this, it might work","msgtype":"m.text"},"ts":1495617171000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"annevk/Domenic: Related tests and Chrome CL at https://codereview.chromium.org/2903653005","msgtype":"m.text"},"ts":1495618731000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I need to writeup an Intent to ship for this, as this modifies shipped behavior","msgtype":"m.text"},"ts":1495618768000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"It'll also require some HTTPArchive digging to see that there aren't many sites already using the \"onerror\" fallback","msgtype":"m.text"},"ts":1495618818000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yay","msgtype":"m.text"},"ts":1495618851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I suspect you know but Domenic isn't usually around until quite a bit later","msgtype":"m.text"},"ts":1495618866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I'm assuming he'll catch up later, as he's logged in","msgtype":"m.text"},"ts":1495618897000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Is drafts.fxtf.org down?","msgtype":"m.text"},"ts":1495620556000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: loads here","msgtype":"m.text"},"ts":1495620590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah it works again here.","msgtype":"m.text"},"ts":1495620602000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"mounir: thanks feel free to comment on the PR (https://github.com/w3c/sensors/pull/207), the issue (https://github.com/w3c/sensors/issues/196) and loop the relevant people in, if necessary.","msgtype":"m.text"},"ts":1495620881000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Is it a problem that request headers such as * and _ end up as HTTP__ in CGI and that if you use both you get only a single HTTP__ for the last header transmitted?","msgtype":"m.text"},"ts":1495626423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems there's at least some information loss","msgtype":"m.text"},"ts":1495626437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, I am not super surprised about CGI being a lossy translation of HTTP semantics","msgtype":"m.text"},"ts":1495632228000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"does CGI not pass everything through as envrionment variables?","msgtype":"m.text"},"ts":1495632361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"any hence is limited by what's a valid env?","msgtype":"m.text"},"ts":1495632373000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1495632380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I looked around and there is a document describing CGI but it doesn't cover this case: https://tools.ietf.org/html/rfc3875#section-4.1.18","msgtype":"m.text"},"ts":1495636924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm pretty much behind in github notifications. If something needs my attention, please @mention me or drop a link here","msgtype":"m.text"},"ts":1495637852000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: there's a parser open issue, besides the mega PR... https://github.com/whatwg/html/issues/2704","msgtype":"m.text"},"ts":1495638849000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks","msgtype":"m.text"},"ts":1495639441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: I tried to do some more digging on the namespaces front, https://lists.w3.org/Archives/Member/w3c-xml-wg/1997Aug/0088.html seems to suggest RDF was important enough to consider a special case for, without necessarily solving it generically","msgtype":"m.text"},"ts":1495639619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We'll see if anyone thinks this is important.. https://github.com/httpwg/http11bis/issues/26","msgtype":"m.text"},"ts":1495639826000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike++","msgtype":"m.text"},"ts":1495639997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1495640009000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"annevk: https://archive.mozilla.org/pub/firefox/try-builds/hsivonen‚äômc/ has builds for Windows and Mac in case you are interested in trying a browser with Encoding Standard-compliant converters","msgtype":"m.text"},"ts":1495641050000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(not 100% compliant integration, though. some old BOM and EOF handling bugs remain and need follow-ups to fix)","msgtype":"m.text"},"ts":1495641078000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: in any case, RDF has had the most committed to the \"identifiers are URIs\" meme and has been since before XMLNS and RDF/XML were final","msgtype":"m.text"},"ts":1495641237000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: hsivonen: https://github.com/validator/validator/blob/3530d33b339a64fb3dd76673257d1fb7b930b9ea/schema/svg11/svg-datatypes.rnc#L73 is sadness (and means <circle r=5/> doesn't get an error for the attribute value)","msgtype":"m.text"},"ts":1495641392000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: indeed, those datatypes could use a custom library","msgtype":"m.text"},"ts":1495641477000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"random thought: should the processing model section in the html spec somehow normatively suggest that user agents should not starve particular task queues? (case in hand, chrome currently has arguably a bug where posting messages to a messageport in the right way can cause chrome to starve all other task queues, which arguably is perfectly fine according to the spec...)","msgtype":"m.text"},"ts":1495648200000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"had a question come up in microformats parsing, what is the textContent of a self-closing tag","msgtype":"m.text"},"ts":1495649637000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#dom-node-textcontent says for Elements textCotent must be The concatenation of data of all the Text node descendants of the context object, in tree order.","msgtype":"m.text"},"ts":1495649645000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"but is it Null or \"\" if there are no text node descendants","msgtype":"m.text"},"ts":1495649660000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"full breakdown of what i am hitting is here https://github.com/indieweb/microformats-ruby/issues/72","msgtype":"m.text"},"ts":1495650519000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"ben_thatmustbeme: empty string","msgtype":"m.text"},"ts":1495650596000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1495650624000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"is there anywhere that is clear about that?","msgtype":"m.text"},"ts":1495650740000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"i feel like that should be more clear, just don't know if i'm missing something","msgtype":"m.text"},"ts":1495650762000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"ben_thatmustbeme: in general it's understood that the concatenation of an empty set of strings is the empty string; I guess we could eventually define that explicitly, but it's generally true in programming.","msgtype":"m.text"},"ts":1495650801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"guess i never thought about it.  both ruby and php agree on that","msgtype":"m.text"},"ts":1495651086000,"senderName":"ben_thatmustbeme","senderId":"ben_thatmustbeme@irc"},
{"content":{"body":"Mek: I'm not sure what you mean by starve","msgtype":"m.text"},"ts":1495654059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: maybe file a bug since I won't be able to follow-up properly for a while","msgtype":"m.text"},"ts":1495654073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: starve is the language the example used (\" The user agent could then give [...] events preference over other tasks [...], keeping the interface responsive but not starving other task queues,\"), but basically make sure that all task queues will eventually make progress","msgtype":"m.text"},"ts":1495654167000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: as long as there are tasks on one task source, not handling the others is acceptable, but yeah, maybe it should not be, but not sure what you could require there meaningfully","msgtype":"m.text"},"ts":1495654375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: not all user agents implement the same task sources either","msgtype":"m.text"},"ts":1495654393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: and a lot of UI events seem to move from task sources to the \"animation frame moment\"","msgtype":"m.text"},"ts":1495654419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: so nothing there really seems stable enough to me to clean up and figure out an ideal model","msgtype":"m.text"},"ts":1495654458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, it definitely doesn't seem like something that can have strong requirements","msgtype":"m.text"},"ts":1495654475000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"it just \"feels\" wrong that posting the \"right\" messages from an onmessage event can cause chrome to never get to any other tasks... but maybe that's just a quality-of-implementation thing","msgtype":"m.text"},"ts":1495654533000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"JakeA annevk as far as I can tell, service workers should intercept synchronous XHR requests in the same way they intercept asynchronous XHR requests. Is that correct?","msgtype":"m.text"},"ts":1495658650000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: yes, but we don't in Chrome right now. It created a sort of deadlock.","msgtype":"m.text"},"ts":1495659116000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'll have to research a bit more. Chromium has a test for this, but I don't think it's correct","msgtype":"m.text"},"ts":1495659341000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"not sure we have tested it, but i think sync xhr interception should work in FF","msgtype":"m.text"},"ts":1495659363000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"our sync xhr spins the event loop, so I don't think we will deadlock... but who knows","msgtype":"m.text"},"ts":1495659387000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"That's a bug in Fx though","msgtype":"m.text"},"ts":1495659410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why? we're not running javascript on the main thread here","msgtype":"m.text"},"ts":1495659438000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"But would be fun to test interaction with postMessage() and friends and such","msgtype":"m.text"},"ts":1495659445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: UI event handlers run iirc","msgtype":"m.text"},"ts":1495659460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Here's the test","msgtype":"m.text"},"ts":1495659462000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/LayoutTests/http/tests/serviceworker/sync-xhr-doesnt-deadlock.html","msgtype":"m.text"},"ts":1495659465000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"and https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/LayoutTests/http/tests/serviceworker/resources/sync-xhr-doesnt-deadlock-iframe.html","msgtype":"m.text"},"ts":1495659483000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"and https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/LayoutTests/http/tests/serviceworker/resources/sync-xhr-doesnt-deadlock.js","msgtype":"m.text"},"ts":1495659496000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"and finally https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/LayoutTests/http/tests/serviceworker/resources/sync-xhr-doesnt-deadlock.data","msgtype":"m.text"},"ts":1495659503000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Currently, Chrome passes this test because the Service Worker doesn't intercept the request, and the `.data` file is retrieved from the server directly","msgtype":"m.text"},"ts":1495659561000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"but I'm migrating this test to WPT, and Firefox fails it","msgtype":"m.text"},"ts":1495659575000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"because in Firefox, the worker correctly intercepts the request and response with the result of fetching \"404resource\"","msgtype":"m.text"},"ts":1495659624000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"So I'm removing the `.data` file, and having the worker respond to requests for it with a `new Response`","msgtype":"m.text"},"ts":1495659683000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"that way, Chrome fails the test (because the worker doesn't intercept the request), and Firefox passes (because the work does intercept, and the frame does not deadlock)","msgtype":"m.text"},"ts":1495659719000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I guess that works","msgtype":"m.text"},"ts":1495659743000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I wouldn't lose much sleep if we just said sync XHR wasn't intercepted, thoguh","msgtype":"m.text"},"ts":1495659756000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Neither would I, but I can't submit a test like that without a spec change","msgtype":"m.text"},"ts":1495659784000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Now normally, when modifying a test like this, I would persist some alternate Chromium version in order to maintain test coverage","msgtype":"m.text"},"ts":1495659821000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"but in this case, I don't think there is anything meaningful to maintain. As written, Chromium's version isn't really doing anything","msgtype":"m.text"},"ts":1495659855000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"}
]