[
{"content":{"body":"annevk: one of the benefits I see though is that it would prevent new APIs that cannot be expressed in JS without proxies","msgtype":"m.text"},"ts":1318464000000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"yeah, that is the biggest win","msgtype":"m.text"},"ts":1318464001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Clearly we should write idl in Dart.","msgtype":"m.text"},"ts":1318464120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"arv, I don't know what proxies are","msgtype":"m.text"},"ts":1318464121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arv, what APIs cannot be expressed in JS? Last time this came up Brendan discussed things such as document.all","msgtype":"m.text"},"ts":1318464180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Proxies are interceptors","msgtype":"m.text"},"ts":1318464181000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"(what's wrong with APIs not being implementable in JS? We don't want JS to implement them, we want browsers to implement them. They only need to be _usable_ from JS.)","msgtype":"m.text"},"ts":1318464182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv: Yah, things like HTMLCollection and all other collections in DOM","msgtype":"m.text"},"ts":1318464240000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: Other things include dataSet (I don't remember the interface name)","msgtype":"m.text"},"ts":1318464241000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I want JS to be able to host the DOM. I think the right thing to do is to fix JS in this case though","msgtype":"m.text"},"ts":1318464300000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"why on earth would you want JS to be able to host the DOM?","msgtype":"m.text"},"ts":1318464360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the requirements for doing that seem like a whole bunch of things that aren't useful for general purpose web authoring","msgtype":"m.text"},"ts":1318464361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that seems like a very odd thing to prioritise","msgtype":"m.text"},"ts":1318464362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://github.com/andreasgal/dom.js/","msgtype":"m.text"},"ts":1318464420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Consistency. No more alien behavior","msgtype":"m.text"},"ts":1318464421000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"consistency is not a goal","msgtype":"m.text"},"ts":1318464422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: Andreas uses proxies","msgtype":"m.text"},"ts":1318464423000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1318464424000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"for implementation","msgtype":"m.text"},"ts":1318464425000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Which we created for this purpose","msgtype":"m.text"},"ts":1318464426000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"smaug____: and other use cases of course","msgtype":"m.text"},"ts":1318464427000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"Being unable to write a library with functionality similar to the native DOM is bad.","msgtype":"m.text"},"ts":1318464480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(well, the interface of an API should always be implementable in JS; the underlying functionality not so much, of course)","msgtype":"m.text"},"ts":1318464481000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: you can write a library with functionality similar to the native DOM, but I disagree with the premise that if you couldn't that would be bad. Why would it be bad?","msgtype":"m.text"},"ts":1318464540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: You couldn't do so, before we added proxies.","msgtype":"m.text"},"ts":1318464600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure you could, for some value of \"similar\"","msgtype":"m.text"},"ts":1318464601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It's bad because it means that libraries are forever different and possibly substandard to the native version.","msgtype":"m.text"},"ts":1318464602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why is that bad","msgtype":"m.text"},"ts":1318464603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how is it not bad?","msgtype":"m.text"},"ts":1318464604000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1318464605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm also having a hard time seeing why it's bad.","msgtype":"m.text"},"ts":1318464660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for example, i should be able to implement standardized, drop-in-compatible APIs in JS, as far as is possible given their underlying functionality","msgtype":"m.text"},"ts":1318464661000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: why???","msgtype":"m.text"},"ts":1318464662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"has anyone actually got an argument here that explains why we would ever want proxies or all this \"self-hosting js dom\" stuff other than a flat assertion that we should?","msgtype":"m.text"},"ts":1318464720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(eg. implementing things like the hidden attribute on browsers that don't support it yet, as an obvious and simple example)","msgtype":"m.text"},"ts":1318464721000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"We don't apply that principle anywhere else. E.g. as we discussed earlier with CSS exposing access for any kind of property is not going to fly.","msgtype":"m.text"},"ts":1318464722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we don't make it possible for authors to implement http in a web browser","msgtype":"m.text"},"ts":1318464780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or implement css","msgtype":"m.text"},"ts":1318464781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I don't understand how you don't understand why having magical syntax capabilities that only the native platform can use is bad.","msgtype":"m.text"},"ts":1318464782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1318464783000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Um, neither of those are turing-complete languages.","msgtype":"m.text"},"ts":1318464784000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it seems to obvious to me that I don't know how to explain it further, heh","msgtype":"m.text"},"ts":1318464785000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Also, it turns out there may actually be a performance win from hosting the DOM in pure JS, since you're not having to call across FFI boundaries.","msgtype":"m.text"},"ts":1318464840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, what makes it being turing-complete relevant?","msgtype":"m.text"},"ts":1318464841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"APIs exposed to JS should be using the *same vocabulary as the language itself*","msgtype":"m.text"},"ts":1318464842000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: DSLs are not the same thing as full languages.","msgtype":"m.text"},"ts":1318464843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(imho proxies in js are a terrible idea, fwiw. they are massively complex and don't provide anything authors actually need. I'm all for providing things like getters and setters, and maybe syntax to make some members private or have \"real\" classes, but having an API that lets you fiddle with the low-level bits of objects is just asking for authors to shoot themselves in the feet.)","msgtype":"m.text"},"ts":1318464844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Things like proxies are useful for reimplementing the DOM.  They're also useful for other things.  Almost any feature that could be a magical native feature could be useful somewhere else too.","msgtype":"m.text"},"ts":1318464900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: every platform has capabilities only the native platform has. e.g. only the kernel can allocate memory to a process. What's wrong with that?","msgtype":"m.text"},"ts":1318464901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(don't know anything about proxies; I'm only talking at the JS language level)","msgtype":"m.text"},"ts":1318464902000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"from implementation point of view implementing DOM using a \"safe\" (!= C++) language would be good. JS is such a safe language, and browser devs happen to be familiar with it.","msgtype":"m.text"},"ts":1318464903000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"bu that is all just implementation detail","msgtype":"m.text"},"ts":1318464904000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The kernel isn't a programming language.  We're talking syntax.","msgtype":"m.text"},"ts":1318464960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but yes, performance can be also better when implemented in JS","msgtype":"m.text"},"ts":1318464961000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: anyone can implement a function with the same API as malloc/free or brk, though","msgtype":"m.text"},"ts":1318464962000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Functionality can be special and magical; by definition, some it has to be.  Syntax doesn't need to be, though.","msgtype":"m.text"},"ts":1318464963000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"syntax is basically irrelevant to anything, imho","msgtype":"m.text"},"ts":1318464964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, still not an argument","msgtype":"m.text"},"ts":1318464965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"who cares what the syntax is","msgtype":"m.text"},"ts":1318464966000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And that's fundamentally why you're wrong, Hixie.","msgtype":"m.text"},"ts":1318465020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, in reply to \"not the same\"","msgtype":"m.text"},"ts":1318465021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's like people who say that they prefer python to perl or whatever because it has spaces indenting or doesn't or whatever","msgtype":"m.text"},"ts":1318465022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"who cares","msgtype":"m.text"},"ts":1318465023000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what?","msgtype":"m.text"},"ts":1318465024000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: so far your argument has consistent of no more than an assertion, so i'm pretty confident that i'm not wrong :-)","msgtype":"m.text"},"ts":1318465025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"consisted","msgtype":"m.text"},"ts":1318465026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or at least, that you haven't in any way provided a reason why i should think that i'm wrong","msgtype":"m.text"},"ts":1318465080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: A DSL has a special, limited purpose.  It's not meant as a general-purpose computing language.  It does one thing and does it well.","msgtype":"m.text"},"ts":1318465081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JavaScript is not meant as a general-purpose computing language.","msgtype":"m.text"},"ts":1318465082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A general purpose computing language is, well, general-purpose.","msgtype":"m.text"},"ts":1318465083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's a language for writing Web apps.","msgtype":"m.text"},"ts":1318465084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, you are just explaining what a DSL is, you are not giving an argument","msgtype":"m.text"},"ts":1318465085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i should be able to implement a class with a drop-in-compatible interface to, say, IDB or Blob or any other API, and pass the object to something that expects that API, and make it work; if that's impossible because the API is something that can't be expressed in JS itself, that's a flaw","msgtype":"m.text"},"ts":1318465086000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: i strongly disagree with that","msgtype":"m.text"},"ts":1318465087000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why/","msgtype":"m.text"},"ts":1318465088000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also ?","msgtype":"m.text"},"ts":1318465140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I strongly agree with zewt, and think you're a bad person for disagreeing, Hixie.","msgtype":"m.text"},"ts":1318465141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Consider the desire to write a polyfill library","msgtype":"m.text"},"ts":1318465142000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1318465143000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1318465144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: you should absolutely _not_ be able to create an API that fakes a native, privileged object. That ways lies security nightmares.","msgtype":"m.text"},"ts":1318465145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1318465146000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you write the library in js and want it to be a drop-in replacement for the equivalent dom feature","msgtype":"m.text"},"ts":1318465147000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"if your security model depends on not being able to have the same interface as some native object, your security model is deeply broken","msgtype":"m.text"},"ts":1318465148000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that doesn't even make sense","msgtype":"m.text"},"ts":1318465200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: The security model does depend on people not being able to replace certain objects themselves, though.","msgtype":"m.text"},"ts":1318465201000,"senderName":"mkanat","senderId":"mkanat@irc"},
{"content":{"body":"annevk: People do not expect to be able to self-host DSLs.","msgtype":"m.text"},"ts":1318465202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this is simple duck typing (as it's called in Python, at least)","msgtype":"m.text"},"ts":1318465203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"caring about the interface and not the object type","msgtype":"m.text"},"ts":1318465204000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't even know where to begin in explaining why it's a bad idea to be able to replace native objects","msgtype":"m.text"},"ts":1318465205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"take Event for example","msgtype":"m.text"},"ts":1318465206000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: Largely because, since a DSL is designed for a specific domain by definition, self-hosting is virtually never that domain.","msgtype":"m.text"},"ts":1318465207000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dispatching an Event has all kinds of special infrastructure","msgtype":"m.text"},"ts":1318465208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like whether the event is trusted","msgtype":"m.text"},"ts":1318465209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what phase the event is in","msgtype":"m.text"},"ts":1318465260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1318465261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you are not making sense","msgtype":"m.text"},"ts":1318465262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins that is","msgtype":"m.text"},"ts":1318465263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a real (native) Event object implements all that machinery in a way that the UA knows it can trust","msgtype":"m.text"},"ts":1318465264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously we're not talking about passing reimplementations to native methods","msgtype":"m.text"},"ts":1318465265000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you can't just fake an Event and dispatch it","msgtype":"m.text"},"ts":1318465266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I don't know what else to say.  ;_;  You asked me why a DSL doesn't need to be able to self-host.  I explained why.","msgtype":"m.text"},"ts":1318465267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: \"obviously\" nothing","msgtype":"m.text"},"ts":1318465268000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: i have no idea what you're talking about!","msgtype":"m.text"},"ts":1318465269000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, obviously, we're talking about *within javascript*, not to native non-JS methods","msgtype":"m.text"},"ts":1318465270000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Pay attention to zewt's example.  Look at IDB, for example","msgtype":"m.text"},"ts":1318465320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: ok let's reset this conversation. what is it you want to do?","msgtype":"m.text"},"ts":1318465321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: that you can't do without JS being all kinds of more complicated?","msgtype":"m.text"},"ts":1318465322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Being able to fake idb via some other mechanism to polyfill older browsers is a Good Thing(tm).","msgtype":"m.text"},"ts":1318465323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i have no idea what \"idp\" and \"polyfill\" are","msgtype":"m.text"},"ts":1318465324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"idb\"","msgtype":"m.text"},"ts":1318465325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IndexedDB.","msgtype":"m.text"},"ts":1318465326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Polyfilling.  Shimming.  Whatever.","msgtype":"m.text"},"ts":1318465327000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"use case: this browser doesn't support the new form validation dom api. i want to have a drop-in replacement \"formvalidationapi.js\"","msgtype":"m.text"},"ts":1318465328000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"The fact that you don't know this word is a strong indicator that you're out of touch with webdev needs.  ^_^","msgtype":"m.text"},"ts":1318465329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1318465380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't know that word D:","msgtype":"m.text"},"ts":1318465381000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Polyfilling = using JS in an older browser to fake a feature that isn't implemented in the old browser yet.","msgtype":"m.text"},"ts":1318465382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Allowing you to pretend that the new feature exists everywhere.","msgtype":"m.text"},"ts":1318465440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if the use case we're talking about is \"i want to reimplement the API that the UA doesn't provide because it's an old API\" then the solution is IMHO not to reimplement the API but to provide an API of your own that abstracts away what background API exists","msgtype":"m.text"},"ts":1318465441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't just reimplement whatever shit i came up with","msgtype":"m.text"},"ts":1318465442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"strongly disagree","msgtype":"m.text"},"ts":1318465443000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"No, that's wrong.  That way means that we live with libraries forever, or someday make a painful migration back to native.","msgtype":"m.text"},"ts":1318465444000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(or even better, just wait til it's implemented everywhere)","msgtype":"m.text"},"ts":1318465445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We want to work with the native stuff.","msgtype":"m.text"},"ts":1318465446000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i want to implement the standard API (or as close as I can get) in a self-contained way that I can drop in on browsers that need it, and forget about it, and then other code (that other people may have to read) don't have to learn my new special wrapper API, it just uses the standard one that everyone knows","msgtype":"m.text"},"ts":1318465500000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"adding a whole bunch of complexity to the platform purely so that in the future, new APIs can be shimmed by script, seems like an incredible waste of time","msgtype":"m.text"},"ts":1318465501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(frankly, if we're creating APIs that you _can_ shim, then we're clearly not adding APIs that matter)","msgtype":"m.text"},"ts":1318465502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1318465503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't understand you at all, Hixie.","msgtype":"m.text"},"ts":1318465560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ditto :-)","msgtype":"m.text"},"ts":1318465620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That seems to argue that there's no reason to every make a convenience api, if it's at all possible for a library, no matter how complex, to implement the same functionality.","msgtype":"m.text"},"ts":1318465621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lots of APIs can be implemented in JS that you really don't want to if you can help it (obvious examples being performance-critical stuff, like SHA-1 and crypto)","msgtype":"m.text"},"ts":1318465622000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm strongly inclined to avoid adding convenience APIs and performance-critical stuff should just be implemented in JS and JS should be fast enough","msgtype":"m.text"},"ts":1318465680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wow, we just diverged from reality by about a light year :)","msgtype":"m.text"},"ts":1318465681000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hey, you're the one who wants JS to be able to fake native code!","msgtype":"m.text"},"ts":1318465682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Everything you  have just said is wrong-headed, Hixie.","msgtype":"m.text"},"ts":1318465683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'm eager to hear your arguments showing how that is the case","msgtype":"m.text"},"ts":1318465684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Take dataSet for example, it adds no new semantic value. Only convenience. But since it requires interceptors/proxie\u001cs it cannot be emulated in older browsers","msgtype":"m.text"},"ts":1318465740000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"TabAtkins: but so far all you've done is ad hominem and argument from assertion","msgtype":"m.text"},"ts":1318465741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm the one who wants to be able to implement APIs as fallbacks when I have to, for compatibility; i certainly do want to be able to use ones with decent native performance when they're available","msgtype":"m.text"},"ts":1318465742000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: i don't see why the shims have to implement the native APIs perfectly down to the last \"readonly\" or whatnot. JS today is quite close enough for shim purposes.","msgtype":"m.text"},"ts":1318465800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...and if you wrap it in another library all platforms, now and forever suffer the extra latency of downloading that library","msgtype":"m.text"},"ts":1318465801000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"not now and forever, only now and up to when the API is widely implemented","msgtype":"m.text"},"ts":1318465802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: es5 is not close enough","msgtype":"m.text"},"ts":1318465860000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"(it's not like that latency is that big a deal -- measure it)","msgtype":"m.text"},"ts":1318465861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv: do you have any examples of how it is not close enough?","msgtype":"m.text"},"ts":1318465862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i'm not saying it needs to be an exact implementation (i did say \"as close as I can get\"); I'm saying implementing the APIs is a generally useful thing to be able to do","msgtype":"m.text"},"ts":1318465863000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"arv: (i think es3 was close enough)","msgtype":"m.text"},"ts":1318465864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so you expect people to go back and update web pages?","msgtype":"m.text"},"ts":1318465865000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: ones that are still used? yeah. the web moves on.","msgtype":"m.text"},"ts":1318465866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"element.dataSet.newProperty = newValue; // try to emulate that","msgtype":"m.text"},"ts":1318465920000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: (apps aren't like docs in that regard)","msgtype":"m.text"},"ts":1318465921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: fair enough","msgtype":"m.text"},"ts":1318465922000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"(being able to implement them more closely is a good thing, and the bits where we can't I'd consider flaws, but whether they're enough of flaws to spend a lot of engineering fixing is a different question)","msgtype":"m.text"},"ts":1318465923000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"arv: just use setAttribute('data-new-property') until it's widely available. next?","msgtype":"m.text"},"ts":1318465924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but more and more docs have jQuery in them","msgtype":"m.text"},"ts":1318465925000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"Hixie: No, I haven't, but you dont' seem to be understanding me well enough.  So, let's try again.","msgtype":"m.text"},"ts":1318465926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: so why did we add dataSet then?","msgtype":"m.text"},"ts":1318465927000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: i thought we were talking about cases where people _weren't_ useing libraries?","msgtype":"m.text"},"ts":1318465980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv: for convenience in 10 years","msgtype":"m.text"},"ts":1318465981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"!_!","msgtype":"m.text"},"ts":1318465982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"same reason we add new CSS features","msgtype":"m.text"},"ts":1318465983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And with sufficient JS powers, we can achieve convenience *today*.","msgtype":"m.text"},"ts":1318465984000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: my point re jquery was that most content today are more than just static pages","msgtype":"m.text"},"ts":1318465985000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: that's _clearly_ not the case.","msgtype":"m.text"},"ts":1318466040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv: the vast majority of content is docs","msgtype":"m.text"},"ts":1318466041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv: without script at all","msgtype":"m.text"},"ts":1318466042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv: other than ads and analytics","msgtype":"m.text"},"ts":1318466043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: why does it matter if we get the convenience at t=-5y, t=0, or t=5y?","msgtype":"m.text"},"ts":1318466044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"t=5y is five years away!","msgtype":"m.text"},"ts":1318466100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1318466101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"5 years ago today was five years away","msgtype":"m.text"},"ts":1318466102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not all of us are vampires","msgtype":"m.text"},"ts":1318466103000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"We don't have infinite time to wait for things!  We often dont' even have moderate finite amounts of time!","msgtype":"m.text"},"ts":1318466104000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Got to love the IE blog \" WebVTT  originated from W3C discussions last year after a need for simple caption authoring was identified.\"","msgtype":"m.text"},"ts":1318466105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait do vampires age, i'm not a vampireologist","msgtype":"m.text"},"ts":1318466106000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"impatience is _certainly_ not the reason to add orders of magnitude of complexity to the platform","msgtype":"m.text"},"ts":1318466107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you characterize it as \"impatience\", you'll never see the value in it of course.","msgtype":"m.text"},"ts":1318466160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you're impatient, you'll never see the value in waiting? :-)","msgtype":"m.text"},"ts":1318466161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seriously, the web moves so fast these days compared to any point in the past, it's incredible that there are still people who want it to move faster","msgtype":"m.text"},"ts":1318466220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Now is always better than later.  The faster you can innovate in one area, the faster innovation happens everywhere else.","msgtype":"m.text"},"ts":1318466221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"patience doesn't enter into it; a page that I have to write today I have to write today, I don't get to tell my boss \"let's wait five years\"","msgtype":"m.text"},"ts":1318466222000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"we're probably the fastest moving industry there is","msgtype":"m.text"},"ts":1318466223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's such a thing as going _too_ fast, imho :-)","msgtype":"m.text"},"ts":1318466224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm trying to force the Singularity here, dammit!","msgtype":"m.text"},"ts":1318466225000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"now is _not_ always better than later. Later you have more experience, and waiting means you can fix things.","msgtype":"m.text"},"ts":1318466226000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: indeed","msgtype":"m.text"},"ts":1318466227000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"you don't have nearly as much experience if you never use a feature because you have to wait 5 years for it to become widely available :)","msgtype":"m.text"},"ts":1318466280000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Plus, some parts of the platform do *not* move quickly.  Mobile, for example.","msgtype":"m.text"},"ts":1318466281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just look at the issue rniwa raised earlier, where itemtype changed and rniwa wanted to use prefixes because of it","msgtype":"m.text"},"ts":1318466282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Or, you know, the ~40% of the web still on IE7 or lower.","msgtype":"m.text"},"ts":1318466283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus zewt's point, that adoption in JS means more experimentation and more experience.","msgtype":"m.text"},"ts":1318466340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It would have taken much longer to get querySelector if jQuery hadn't existed.","msgtype":"m.text"},"ts":1318466341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thinks mobile is moving pretty quickly actually","msgtype":"m.emote"},"ts":1318466400000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hixie: out of curiosity, since you said that you don't think convenience APIs should exist, do you think we shouldn't have done querySelector?","msgtype":"m.text"},"ts":1318466401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mobile is sort of crippled because phone manufacturers rarely update browsers","msgtype":"m.text"},"ts":1318466402000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hober: The edge is moving roughly as fast as the edge of the desktop.  The tail is still pretty slow, though.","msgtype":"m.text"},"ts":1318466403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because of what zewt just said.","msgtype":"m.text"},"ts":1318466404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(which is gross and embarrassing; all mobile platforms are *new* platforms, and there's no excuse that they don't all have well-built upgrade systems for browsers)","msgtype":"m.text"},"ts":1318466460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I can think of some phone manufacturers who are pretty good at updating their browsers :)","msgtype":"m.text"},"ts":1318466461000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Still not the majority.  ^_^","msgtype":"m.text"},"ts":1318466462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: tell me one. (I may actually change my phone reasonable soon)","msgtype":"m.text"},"ts":1318466520000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Presumably he was referring to iphone","msgtype":"m.text"},"ts":1318466521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no android phone does, since it pretty much takes a full OS update to update the browser","msgtype":"m.text"},"ts":1318466522000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"( though, I can just use Nightly and update the browser every day )","msgtype":"m.text"},"ts":1318466523000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"does iphone's Safari get updated often?","msgtype":"m.text"},"ts":1318466580000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: of course there are browsers available on the android platform that update much faster than the OS","msgtype":"m.text"},"ts":1318466640000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"It doesn't come out every six weeks, but then again, like Hixie said, there's such a thing as moving too fast. :)","msgtype":"m.text"},"ts":1318466641000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"un-derailing the conversation for a moment, I think both Hixie & TabAtkins are making reasonable points:","msgtype":"m.text"},"ts":1318467000000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I agree with Tab that it would be nice for JS authors to be able to write polyfills for features, and at least in some cases JS should be augmented to facilitate that.","msgtype":"m.text"},"ts":1318467001000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hixie's right, though, that if a new API is easily polyfillable, that's a smell that the API probably doesn't belong in the platform","msgtype":"m.text"},"ts":1318467002000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I still disagree with that.  We can produce high-value convenience APIs that are easily polyfillable.","msgtype":"m.text"},"ts":1318467060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They are still worthwhile to add to the platform.","msgtype":"m.text"},"ts":1318467061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For example, getting the mouse location relative to a target element is pretty easy.  I reinvent it every time I write anything using the mouse.","msgtype":"m.text"},"ts":1318467120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's still a high-value thing to provide natively, precisely *because* I have to reinvent it every single time I write anything using the mouse.","msgtype":"m.text"},"ts":1318467121000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Plus, something can be easy to polyfill the primary use-case for, but still offer additional value in providing corner-cases that are harder to polyfill.)","msgtype":"m.text"},"ts":1318467180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I have \"probably\" in my line above to give myself enough rhetorical wiggle room to agree with you in some cases and not in others. :) it's a judgement call","msgtype":"m.text"},"ts":1318467181000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Plus, it's still surprisingly easy to get the mouse thing wrong.","msgtype":"m.text"},"ts":1318467182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"miketaylr: but most people use the stock browser, and people should be able to do so","msgtype":"m.text"},"ts":1318467183000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(for sure)","msgtype":"m.text"},"ts":1318467240000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"TabAtkins: there's also a lot of value in standardizing basic stuff like that that's used a lot, instead of every page reinventing it slightly differently","msgtype":"m.text"},"ts":1318467241000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1318467242000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So whether or not it can be polyfilled easily is, I think, a useless signal when deciding whether to add it.","msgtype":"m.text"},"ts":1318467300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Whether it's useful and commonly-needed is really what you need to account for.","msgtype":"m.text"},"ts":1318467301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I suppose if something is rarely needed, but really useful when it is needed, whether or not it's easy to duplicate in JS can be a useful factor to consider.)","msgtype":"m.text"},"ts":1318467540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: (sorry, was afk)","msgtype":"m.text"},"ts":1318467541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's cool, I can talk enough for both of us.","msgtype":"m.text"},"ts":1318467600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i think querySelector() is fine, because the UA has all kinds of knowledge and ability to optimise that the script doesn't","msgtype":"m.text"},"ts":1318467601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: but equally, i think it doesn't make much sense to implement a JS version of it","msgtype":"m.text"},"ts":1318467602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, not *now* it doesn't.  It made all kinds of sense when jQuery did it.","msgtype":"m.text"},"ts":1318467660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: having said that, i think ES3 is quite capable of providing enough of a shim for it that we don't need more magical syntax features.","msgtype":"m.text"},"ts":1318467661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Actually, though, it does still make sense to implement it in JS, because there are still significant browsers that don't have it.","msgtype":"m.text"},"ts":1318467662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, querySelector requires nothing special on the syntax front to shim.  That was just a question about your general point that convenience features shouldn't be added.","msgtype":"m.text"},"ts":1318467720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what are examples of things that you think need shimming that can't be sufficiently shimmed with JS?","msgtype":"m.text"},"ts":1318467780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"arv gave an example in the form of dataSet.","msgtype":"m.text"},"ts":1318467840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It can be shimmed now, with Proxies.","msgtype":"m.text"},"ts":1318467841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"an example that isn't trivially dealt with by just using getAttribute","msgtype":"m.text"},"ts":1318467842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is, an example where the convenience provided is great enough to justify adding a bunch of features to support providing the convenience","msgtype":"m.text"},"ts":1318467900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No.  The syntax is the important part there.  dataSet is exactly equivalent in *functionality* to setAttribute.  It's more convenient to use because of syntax.","msgtype":"m.text"},"ts":1318467901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure but it's not important enough to matter","msgtype":"m.text"},"ts":1318467902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The fact that it was an obvious enough syntax win for you to add it should be a sufficient answer as to why outside JS libs would want it.","msgtype":"m.text"},"ts":1318467903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if it wasn't important enough to matter then why was it added in the first place?","msgtype":"m.text"},"ts":1318467904000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"given the choice between a bunch of syntax to allow authors to emulate dataSet and just using DOM Core, DOM Core is the obviously better choice.","msgtype":"m.text"},"ts":1318467905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to add a feature to the platform you have to compare the cost of not having it to the cost of implementing it. The cost of not having dataSet is minimal, the cost of implementing dataSet is even less so. The cost of not having dataSet is minimal, the cost of implementing a bunch of additions to JS to enable authors to fake it is comparatively huge.","msgtype":"m.text"},"ts":1318468020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"another one is classList","msgtype":"m.text"},"ts":1318468021000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"The cost of never having anything like dataSet is larger.","msgtype":"m.text"},"ts":1318468022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"same issues as dataSet but more useful (IMO)","msgtype":"m.text"},"ts":1318468023000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"you can surely fake enough of classList today","msgtype":"m.text"},"ts":1318468080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just a bunch of methods","msgtype":"m.text"},"ts":1318468140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"where's the problem?","msgtype":"m.text"},"ts":1318468141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's dataset not dataSet btw","msgtype":"m.text"},"ts":1318468142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I always forget.  arv said dataSet early, so I copied him.","msgtype":"m.text"},"ts":1318468200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"... by the way, what's so badly complex about proxies? google isn't finding much about them, but https://gist.github.com/1202328 looks fairly straightforward","msgtype":"m.text"},"ts":1318468320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not as nice as Python's __getattr__, but I assume performance is the problem with that interface)","msgtype":"m.text"},"ts":1318468380000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Decent tutorial at http://soft.vub.ac.be/~tvcutsem/proxies/","msgtype":"m.text"},"ts":1318468381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"classList[index] cannot be emulated","msgtype":"m.text"},"ts":1318468440000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"looks fairly self-contained","msgtype":"m.text"},"ts":1318468441000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"fwiw https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills lists basically every shim/polyfill for all newish features there is.","msgtype":"m.text"},"ts":1318468560000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"elem.classList[methodname]('classname') is unsupported in the polyfill listed.","msgtype":"m.text"},"ts":1318468561000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"arv: so just use classList.item(index)","msgtype":"m.text"},"ts":1318468620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh Video Timed Track (subtitles)","msgtype":"m.text"},"ts":1318468621000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"arv: you don't have to duplicate the entire API, only enough of the API for it to be usable","msgtype":"m.text"},"ts":1318468622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"an assured way of making sure nobody can find VTT: call it Video Timed Track","msgtype":"m.text"},"ts":1318468623000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: The fact that the platform has a nice convenient way of doing something, but libraries can't ever duplicate it, is a bug.","msgtype":"m.text"},"ts":1318468680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so you keep saying, but that doesn't follow from the use cases you describe","msgtype":"m.text"},"ts":1318468681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Again, if it was sufficiently obvious of a win to be included in the first place, it's clearly a useful thing for libraries to have as well.","msgtype":"m.text"},"ts":1318468682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: just updated so the abbv is present in the page","msgtype":"m.text"},"ts":1318468683000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"TabAtkins: you are assuming that something was added to the platform because it was a good idea and not just because i copied-and-pasted other parts of the platform that did it too","msgtype":"m.text"},"ts":1318468740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: there's plenty of stuff in the platform that isn't a win at all, let alone a \"sufficiently obvious win\"","msgtype":"m.text"},"ts":1318468741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Are you saying that relatively new APIs you've designed are mistakes?","msgtype":"m.text"},"ts":1318468742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'd suggest that one of the following must be true: 1: being able to write foo.bar and have bar looked up dynamically is a useful idiom in APIs, and it should be possible to do this in JS libraries; or 2: it's not very useful, and no new APIs should do that","msgtype":"m.text"},"ts":1318468743000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(speaking of getattr(foo, \"bar\"), not getters, of course)","msgtype":"m.text"},"ts":1318468800000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: many have plenty of mistakes or bits that are consistent merely for the sake of consistency, or have features that are made available because they can be but where if i was designing the API for an environment where they could not be i wouldn't blink at omitting it","msgtype":"m.text"},"ts":1318468801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: .item(n) vs [n] being a classic example of the latter","msgtype":"m.text"},"ts":1318468860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: (having said that, i've no objection to JS adding a neat syntax to support index getters in classes)","msgtype":"m.text"},"ts":1318468861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sigh.  It seems like every feature that we point out, you say wasn't necessary in the first place and doesn't need to be done in library code.","msgtype":"m.text"},"ts":1318468862000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes, it is my argument that everything you can't do in JS is stuff you needn't do in JS","msgtype":"m.text"},"ts":1318468920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think [n] is nice to have","msgtype":"m.text"},"ts":1318468921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"best browser ever http://vttynotes.blogspot.com/2011/10/cve-2011-3230-launch-any-file-path-from.html","msgtype":"m.text"},"ts":1318468922000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hixie: That's a stupid argument.  ^_^","msgtype":"m.text"},"ts":1318468923000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"emulating IDL [replaceable] and such however goes a bit far","msgtype":"m.text"},"ts":1318468924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm still not understanding what's so objectionable about this proxy interface; it looks self-contained and already implemented in FF","msgtype":"m.text"},"ts":1318468925000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: it's backed up by the fact that every concrete example you've given has in fact supported my argument","msgtype":"m.text"},"ts":1318468926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: if you have a counter-example i'm certainly open to it","msgtype":"m.text"},"ts":1318468927000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Only in your mind.  ;_;  Because you self-admitedly don't consider syntax important.","msgtype":"m.text"},"ts":1318468980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: also, note that i have no objection to specific features being added to JS, my objection is to the explicit goal of adding everything necessary to emulate DOM APIs in JS","msgtype":"m.text"},"ts":1318468981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: because i think that goal is sufficiently met already","msgtype":"m.text"},"ts":1318468982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I consider self-hosting a valuable property for a language to have.","msgtype":"m.text"},"ts":1318469040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a valuable feature for a turing-complete language and an API to have but not a language like CSS?","msgtype":"m.text"},"ts":1318469041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes?","msgtype":"m.text"},"ts":1318469100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Again, DSL is, by definition, domain-specific, not general-purpose.","msgtype":"m.text"},"ts":1318469160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the DOM API is not domain-specific?","msgtype":"m.text"},"ts":1318469220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"_JS_ is not domain-specific?","msgtype":"m.text"},"ts":1318469221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"js certainly is not","msgtype":"m.text"},"ts":1318469222000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Nobody's asking to be able to self-host the DOM API in the DOM API.  We want to host the DOM in JS.","msgtype":"m.text"},"ts":1318469280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JS is most certainly not domain-specific!  What possibly could possess you to think it is?","msgtype":"m.text"},"ts":1318469281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DOMain-specific!","msgtype":"m.text"},"ts":1318469282000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: :headdesk:","msgtype":"m.text"},"ts":1318469283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"eyes Unity editor open with a couple JS scripts that have nothing to do with the web","msgtype":"m.emote"},"ts":1318469284000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's the web's programming language, i can't imagine any other context in which i'd actually want to use it","msgtype":"m.text"},"ts":1318469285000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"careful, TabAtkins. or i shall make a new comic.","msgtype":"m.text"},"ts":1318469286000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"TabAtkins: (the important question: whose head)","msgtype":"m.text"},"ts":1318469287000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: You are operating under an incorrect definition of \"domain-specific\" and \"general purpose\".","msgtype":"m.text"},"ts":1318469340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: and you're mis-using \"self-hosting\" :-)","msgtype":"m.text"},"ts":1318469341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No I'm not.  ^_^","msgtype":"m.text"},"ts":1318469342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JS implementing DOM is not self-hosting","msgtype":"m.text"},"ts":1318469343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be JS implementing JS","msgtype":"m.text"},"ts":1318469344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if JS is \"general purpose\", why is CSS not \"general purpose\"?","msgtype":"m.text"},"ts":1318469400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.  DOM is a library built in JS.  By definition, if JS is self-hosting, it can host the DOM too.","msgtype":"m.text"},"ts":1318469401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DOM is _not_ a library build in JS!","msgtype":"m.text"},"ts":1318469402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's an API exposed to JS built typically in C++","msgtype":"m.text"},"ts":1318469403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Um, because CSS is a DSL.  It's nowhere near turing-complete, and not intended for generic computation.","msgtype":"m.text"},"ts":1318469404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1318469405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"...\" what?","msgtype":"m.text"},"ts":1318469406000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"we're going around in circles","msgtype":"m.text"},"ts":1318469460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't understand how!","msgtype":"m.text"},"ts":1318469461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"whether something is turing complete or not doesn't have any bearing on whether it's general purpose or not","msgtype":"m.text"},"ts":1318469462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How can you possibly think CSS is a general-purpose computer language?!?","msgtype":"m.text"},"ts":1318469463000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand the question--of course you can't implement CSS features in CSS; CSS isn't even a programming language","msgtype":"m.text"},"ts":1318469464000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Sure it is.  It's just a very limited one.","msgtype":"m.text"},"ts":1318469465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not, not by any definition of the term I've ever seen or used","msgtype":"m.text"},"ts":1318469466000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It's a styling and layout programming language.","msgtype":"m.text"},"ts":1318469520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You're probably just not very familiar with declarative languages.","msgtype":"m.text"},"ts":1318469521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's a layout language; it's not a layout *programming* language","msgtype":"m.text"},"ts":1318469522000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"CSS is a program that accepts a DOM as input and produces a laid-out page.","msgtype":"m.text"},"ts":1318469523000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"none of us seem to agree on terminology here","msgtype":"m.text"},"ts":1318469524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1318469525000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1318469580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have to go","msgtype":"m.text"},"ts":1318469581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: i disagree, but let's skip this debate :)","msgtype":"m.text"},"ts":1318469582000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Pretty sure everyone extra-disagrees with your terms, though, if you consider CSS a general-purpose alnguage and JS not.","msgtype":"m.text"},"ts":1318469583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(was: re: third-order tangent)","msgtype":"m.text"},"ts":1318469584000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but i must first say that i continue to see no intrinsic reason why a library that implements a DOM shim would need to support every last subtlty of the DOM","msgtype":"m.text"},"ts":1318469585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just has to be close enough","msgtype":"m.text"},"ts":1318469586000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: i consider both to be domain-specific","msgtype":"m.text"},"ts":1318469587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Is C domain-specific?","msgtype":"m.text"},"ts":1318469640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"extra-disagree lol","msgtype":"m.text"},"ts":1318469641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, C is general-purpose","msgtype":"m.text"},"ts":1318469642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Then your definition is broken.","msgtype":"m.text"},"ts":1318469643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ko","msgtype":"m.text"},"ts":1318469644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1318469645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in every other language I've used at any length, every API exposed to the language can be exposed by code written in the language itself; JS being the weird exception","msgtype":"m.text"},"ts":1318469646000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the point is moot, since i don't think whether something is general purpose or not should control whether it needs to have the syntactic ability to emulate its APIs or not","msgtype":"m.text"},"ts":1318469647000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: you haven't used many languages","msgtype":"m.text"},"ts":1318469700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Wikipedia sides with Hixie fwiw http://en.wikipedia.org/wiki/General-purpose_programming_language","msgtype":"m.text"},"ts":1318469701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: there are tons of languages that can't describe all their APIs","msgtype":"m.text"},"ts":1318469702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: How so?","msgtype":"m.text"},"ts":1318469703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"perhaps badly-designed languages, which I do try hard to avoid","msgtype":"m.text"},"ts":1318469760000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: e.g. Perl (some of its APIs are especially crazy), Pascal (normal Pascal can't implement its own Writeln function)","msgtype":"m.text"},"ts":1318469761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nice timing bringing up Perl :)","msgtype":"m.text"},"ts":1318469762000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JS is a perfectly fine general-purpose functional programming language.  It happens that in its most common implementations there are a couple of additional libraries built-in that are designed for easier writing of webapps, is all.","msgtype":"m.text"},"ts":1318469763000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(pascal is a toy language, as far as I'm concerned)","msgtype":"m.text"},"ts":1318469764000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(havn't touched it in ... 15 years?)","msgtype":"m.text"},"ts":1318469765000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i happen to be particularly familiar with those two so can comment authoratively off the top of my head","msgtype":"m.text"},"ts":1318469820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd be surprised if there weren't similar limitations in most languages","msgtype":"m.text"},"ts":1318469821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i really have to go","msgtype":"m.text"},"ts":1318469822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1318469823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: Yup, reading further, I'm quite certain that Wikipedia disagrees with Hixie.  There is no reasonable definition of \"domain-specific\" under which JS is one.","msgtype":"m.text"},"ts":1318469880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(C, C++, Python)","msgtype":"m.text"},"ts":1318469881000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"C is general purpose. I make music with a compiler. :3","msgtype":"m.text"},"ts":1318470420000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"TabAtkins, I meant for \"C\"","msgtype":"m.text"},"ts":1318470480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"#include <math.h>","msgtype":"m.text"},"ts":1318470481000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"#include <stdio.h>","msgtype":"m.text"},"ts":1318470482000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"main(){long int t;int sample;for(t=0;;t++){sample=(((t&512)>>(int)(3*sin(t*4&(int)(t/256))))>>(t>>18)|((t&512)>>(int)(4*sin(t*4&(int)(t/512))))>>(t>>27));fputc(sample, stdout);}}","msgtype":"m.text"},"ts":1318470483000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"just pipe this to /dev/audio :3","msgtype":"m.text"},"ts":1318470540000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"given that JavaScript is used on e.g. servers and elsewhere it does not really seem that domain specific to me","msgtype":"m.text"},"ts":1318470541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Did you think I was saying that C was domain-specific?","msgtype":"m.text"},"ts":1318470542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but I don't really care","msgtype":"m.text"},"ts":1318470543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"javascript ist used on servers … and desktops. doesn't gnome have javascript?","msgtype":"m.text"},"ts":1318470544000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"gnome3 - yes","msgtype":"m.text"},"ts":1318470600000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Even if JS was only ever used in webpages in browsers, it's still not domain-specific.  It is capable of (and designed for) arbitrary computation.","msgtype":"m.text"},"ts":1318470601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i concur.","msgtype":"m.text"},"ts":1318470602000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"This isn't like, I dunno, using XSLT to compute mandelbrots.","msgtype":"m.text"},"ts":1318470660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also qml","msgtype":"m.text"},"ts":1318470661000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"hey, i wrote a CMS abomination in XSLT once. i think everyone has to live through that, coming-of-age-story.","msgtype":"m.text"},"ts":1318470662000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"bga_: From wikipedia's description, it looks like QML is a DSL.","msgtype":"m.text"},"ts":1318470780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It looks like you can run arbitrary JS, but it's designed for designing UI.","msgtype":"m.text"},"ts":1318470781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And the syntax is clearly slanted towards that end.","msgtype":"m.text"},"ts":1318470840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"erlehmann: By the way, it would be great if you could put in a Kate Beaton credit in your comic.","msgtype":"m.text"},"ts":1318471860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, oh. i thought people knew that already.","msgtype":"m.text"},"ts":1318471920000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"after all, it was for and about you, i spotted the fat pony in your sig!","msgtype":"m.text"},"ts":1318471921000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Some of us do, sure.  It's always good manners to credit, though, for the people who aren't already aware of an awesomic comic.","msgtype":"m.text"},"ts":1318471922000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/sig/avatar/","msgtype":"m.text"},"ts":1318471923000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"okay.jpg","msgtype":"m.text"},"ts":1318471924000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"It gives you an opportunity to evangelize a bad-ass comic.  ^_^","msgtype":"m.text"},"ts":1318471980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i am actually right now reading through “hark, a vagrant”","msgtype":"m.text"},"ts":1318471981000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"and must admit i have no idea what the title says","msgtype":"m.text"},"ts":1318471982000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"The title?","msgtype":"m.text"},"ts":1318472040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, the phrase \"hark, a vagrant\"?","msgtype":"m.text"},"ts":1318472041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yesss","msgtype":"m.text"},"ts":1318472042000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"It's a phrase from an early bio comic.  Kate is walking past a homeless dude, who shouts for her.  She responds (to no one in particular), \"Hark, a vagrant!\".","msgtype":"m.text"},"ts":1318472043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where \"hark\" is an archaic term meaning \"Hey!\"","msgtype":"m.text"},"ts":1318472044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what is a vagrant","msgtype":"m.text"},"ts":1318472100000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"then","msgtype":"m.text"},"ts":1318472101000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"A homeless dude.","msgtype":"m.text"},"ts":1318472102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"intredasting.","msgtype":"m.text"},"ts":1318472103000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"so i learned something","msgtype":"m.text"},"ts":1318472160000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"thanks, tab atkins.","msgtype":"m.text"},"ts":1318472161000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i was just thinking that kate beaton could make erotic comics, but then i remembered the workings of jess fink.","msgtype":"m.text"},"ts":1318472220000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"screw that.","msgtype":"m.text"},"ts":1318472221000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hey, I kinda like Chester 5000.","msgtype":"m.text"},"ts":1318472280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i would like to draw that way. alas, i can only make icons and pixel graphics :/","msgtype":"m.text"},"ts":1318472340000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"in before over 9000 years of mastering","msgtype":"m.text"},"ts":1318472400000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"the skill of drawing","msgtype":"m.text"},"ts":1318472401000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"ooh, roc is at that conference today","msgtype":"m.text"},"ts":1318472940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's too bad","msgtype":"m.text"},"ts":1318472941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can someone else answer my fullscreen questions?","msgtype":"m.text"},"ts":1318472942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if so, see the WHATWG list)","msgtype":"m.text"},"ts":1318472943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"personally I don't understand the \"full screen without input\" idea--that's crippling to essentially every usage, i can't imagine anyone ever using it","msgtype":"m.text"},"ts":1318473540000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"even a trivial video player wants space to pause","msgtype":"m.text"},"ts":1318473541000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you get some keyboard always","msgtype":"m.text"},"ts":1318473600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but even then I fail to see the concern given the various things that are in place","msgtype":"m.text"},"ts":1318473601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the entire \"go fullscreen first and ask if that was okay\" model that it seems everyone is implementing is really worrisome","msgtype":"m.text"},"ts":1318473720000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't want sites taking my browser window fullscreen to show a gigantic interstitial ad (at which point the browser asking permission is basically going \"wow, that was annoying, wasn't it?\")","msgtype":"m.text"},"ts":1318473780000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm surprised i havn't seen sites do that with flash, though i guess i wouldn't since i flashblock by default","msgtype":"m.text"},"ts":1318473781000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's going to use the \"trusted click\" model for sure","msgtype":"m.text"},"ts":1318473782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that doesn't help, it just moves the annoyance to the first time you click anywhere","msgtype":"m.text"},"ts":1318473783000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess some sites do that with popups these days","msgtype":"m.text"},"ts":1318473840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lots of pages listen for clicks on document to open a popup yeah what you said","msgtype":"m.text"},"ts":1318473841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the only benefit, IMO, to the only-on-click model is preventing infinite recursion","msgtype":"m.text"},"ts":1318473842000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not so much preventing the annoyance itself, just keeping it from exploding","msgtype":"m.text"},"ts":1318473900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(and it's clearer than magic behind-the-scenes heuristics like \"has this site opened a popup/tried to go fullscreen already in the last few seconds\")","msgtype":"m.text"},"ts":1318473901000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so you prefer upfront confirmation?","msgtype":"m.text"},"ts":1318474080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as long as there's an easy \"always allow for this site\" option, yeah","msgtype":"m.text"},"ts":1318474140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1318474200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the API already allows it, but it seems like both FF and Chrome are going the ask-afterwards route","msgtype":"m.text"},"ts":1318474201000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seems better to just nuke it permanently for the few sites that abuse it","msgtype":"m.text"},"ts":1318474202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's the sort of thing that seems really tempting for low-grade advertisers to push sites to do","msgtype":"m.text"},"ts":1318474203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk, with geolocation, upfront notification is working.","msgtype":"m.text"},"ts":1318475520000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"also, what zewt said. madness.","msgtype":"m.text"},"ts":1318475521000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"what happens with ask-after notifications if a page goes fullscreen, shows an ad for 2-3 seconds, then exits before the user has a chance to click \"stop doing that\"? browsers would also need to keep the \"allow/block fullscreen\" question open after exiting fullscreen to prevent that","msgtype":"m.text"},"ts":1318475700000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, sure","msgtype":"m.text"},"ts":1318479180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"erlehmann, you want to optimize for the positive case","msgtype":"m.text"},"ts":1318479181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"these DOM Level 3 Events emails sure are entertaining","msgtype":"m.text"},"ts":1318479182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, too many asshats out there. let me be the first to abuse SUDDEN FULLSCREEN MADNESS.","msgtype":"m.text"},"ts":1318479480000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"just think: this, combined with shock sites.","msgtype":"m.text"},"ts":1318479481000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann, yeah I totally see myself browsing shock sites all day","msgtype":"m.text"},"ts":1318480260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away, hey","msgtype":"m.text"},"ts":1318482420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away, I guess we could reuse Error, but is it worth it?","msgtype":"m.text"},"ts":1318482480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is cpearce on IRC?","msgtype":"m.text"},"ts":1318483260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"synchronous calls waiting for an animation to complete? D:","msgtype":"m.text"},"ts":1318484580000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"s/may only be called/must be called/ is a \"worthy grammatical clarification\"? ok","msgtype":"m.text"},"ts":1318488120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if by \"worthy grammatical clarification\" you mean \"correction for bogus use of RFC2119 terms\" :-)","msgtype":"m.text"},"ts":1318489140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"d3e is full of it it seems","msgtype":"m.text"},"ts":1318489680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"d3e?","msgtype":"m.text"},"ts":1318489920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh dom events?","msgtype":"m.text"},"ts":1318489980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1318489981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the state of the art in terms of networking protocols to transfer responsibility for a token from one server on the Internet to another server?","msgtype":"m.text"},"ts":1318490280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is, is there an established solution, or is it a known unsolveable problem, or something else?","msgtype":"m.text"},"ts":1318490281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that is, say there are two servers A and B, and A currently has ownership/responsibility of a token X, and wants to transfer it to B, but wants B to only take it if B knows that A knows that B has taken it)","msgtype":"m.text"},"ts":1318490340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(abarth?)","msgtype":"m.text"},"ts":1318490400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sorry, playing bridge","msgtype":"m.text"},"ts":1318490401000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"send email","msgtype":"m.text"},"ts":1318490402000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"nothing important, just my question above","msgtype":"m.text"},"ts":1318490403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not a web standard thing","msgtype":"m.text"},"ts":1318490460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"enjoy your bridge :-)","msgtype":"m.text"},"ts":1318490461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I had this idea about the Component Model: if you allow to register existing tagNames without the x- prefix, web pages could reserve the privilege of creating scripts (against XSS). (function() { var script = HTMLScriptElement; var secretTagName = randomTagName(); Element.register(\"script\", function(){}); Element.register(secretTagName, HTMLScriptElement); })()","msgtype":"m.text"},"ts":1318492440000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"execute this in the <head> and no scripts after that will be evaluated.","msgtype":"m.text"},"ts":1318492500000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"zcorpan, good question","msgtype":"m.text"},"ts":1318498260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, sicking suggested we keep it because browsers keep the state around internally","msgtype":"m.text"},"ts":1318498261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the isWhiteSpace thing?","msgtype":"m.text"},"ts":1318498320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1318498321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, rniwa, Opera support document.getItems(), but not the spec changes that were made a few days ago of course","msgtype":"m.text"},"ts":1318498322000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'll add a comment to https://bugzilla.mozilla.org/show_bug.cgi?id=687422","msgtype":"m.text"},"ts":1318498380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I always though element content whitespace was a different thing","msgtype":"m.text"},"ts":1318499820000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"[","msgtype":"m.text"},"ts":1318499821000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"http://www.w3.org/TR/REC-xml/#dt-elemcontent says element content is content of elements that must contain only child elements","msgtype":"m.text"},"ts":1318499880000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"so the contents of a <ul> element for example","msgtype":"m.text"},"ts":1318499881000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"reads a little backscroll, finds js being described as a \"functional\" language, gives up","msgtype":"m.emote"},"ts":1318499882000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah it is a different thing, but browsers never implemented the attribute based on semantics of the language so it became to mean isWhiteSpace as far as implementations go","msgtype":"m.text"},"ts":1318499883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I figured for white-space text nodes between <ul> and <li> isElementContentWhitespace would be true","msgtype":"m.text"},"ts":1318499884000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"while for whitespace text nodes in <li> elements it would be false","msgtype":"m.text"},"ts":1318499940000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1318499941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I'd say: add isWhiteSpace to the DOM4 standard, rename the current implementations, and let isElementContentWhitespace return false as long as it isn't implemented","msgtype":"m.text"},"ts":1318500000000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"is the latter useful?","msgtype":"m.text"},"ts":1318500001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or the former for that matter, nobody brought up a use case yet :)","msgtype":"m.text"},"ts":1318500060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, it would fix implementations that depend on it's functionality","msgtype":"m.text"},"ts":1318500061000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"it's probably going to return undefined","msgtype":"m.text"},"ts":1318500120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as it already does in some browsers","msgtype":"m.text"},"ts":1318500121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Would you prefer it to be called a dysfunctional language?","msgtype":"m.text"},"ts":1318500180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Depends how annoyed I am with it at the time :)","msgtype":"m.text"},"ts":1318500240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"XML Information Set says on the subject of element content whitespace \"If there is no declaration for the containing element, …, this property has no value\", so I guess null or undefined is okay with me, although null is more like other DOM properties","msgtype":"m.text"},"ts":1318500241000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"RobbertAtWork, I mean we would remove it for now","msgtype":"m.text"},"ts":1318500360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fine","msgtype":"m.text"},"ts":1318500420000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"annevk: isWhiteSpace is quite useful for minifying, for scripts that know what whitespace is ignorable. Xopus uses it to minimize the amount of nodes in memory, removes the ignorable whitespace according to the current Schema","msgtype":"m.text"},"ts":1318500660000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"wouldn't you want to minify on the server side?","msgtype":"m.text"},"ts":1318500960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wouldn't you want to use the DOM for that?","msgtype":"m.text"},"ts":1318501140000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"using the DOM is the easiest approach for several minifying passes","msgtype":"m.text"},"ts":1318501200000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"using the DOM for that seems horrible","msgtype":"m.text"},"ts":1318501201000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"removing all type attributes from style elements is way easier using DOM than regexp","msgtype":"m.text"},"ts":1318501202000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"you're not limited to DOM and regexp on the server","msgtype":"m.text"},"ts":1318501260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"anyway, i think we shouldn't design the DOM around server-side use cases","msgtype":"m.text"},"ts":1318501380000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"doing so introduced a lot of bloat to the DOM that we're now trying to clean up in DOM4","msgtype":"m.text"},"ts":1318501381000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"then I want to minify on the client","msgtype":"m.text"},"ts":1318501382000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1318501440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'll get back to you on that, have to go now","msgtype":"m.text"},"ts":1318501980000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1318502100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: BTW one concreate reason to prefer DOM-in-JS is that it may provide performance wins. JS-C++ boundaries are generally bad for perf. especially as you can't JIT across them","msgtype":"m.text"},"ts":1318505820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(that argument was covered last night.)","msgtype":"m.text"},"ts":1318506180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and it is very valid one, although kind of implementation detail)","msgtype":"m.text"},"ts":1318506240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Oh, like I say hundreds of lines of argument were too much to read","msgtype":"m.text"},"ts":1318506241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1318506300000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm not sure dismissing it as an implementation detail is valid though; implementation details can be critical particularly if they are a fundamental characteristic of all sucessful implementations","msgtype":"m.text"},"ts":1318506420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Esp. with a tracing JIT DOM-in-JS should be able to provide good perf, because you'll simply cut out a lot of the complexity)","msgtype":"m.text"},"ts":1318510140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What's extra sensory perception got to do with anything?","msgtype":"m.text"},"ts":1318510320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"…","msgtype":"m.text"},"ts":1318510380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"  o","msgtype":"m.text"},"ts":1318510440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"^man with third eye","msgtype":"m.text"},"ts":1318510441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless you are using a proportionally spaced font for irc, in which case it sucks to be you","msgtype":"m.text"},"ts":1318510442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what’s the appropriate markup for stuff like “Note: foo bar baz” or “Update: foo bar baz” in blog posts? currently i just use <p> for both, with an extra <ins> for updates","msgtype":"m.text"},"ts":1318512900000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"perhaps <small> would be better?","msgtype":"m.text"},"ts":1318512901000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"<p> seems fine","msgtype":"m.text"},"ts":1318512960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in specs we use <p class=note>foo bar baz","msgtype":"m.text"},"ts":1318512961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we don't do updates","msgtype":"m.text"},"ts":1318512962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1318513020000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"oooooh yeeah","msgtype":"m.text"},"ts":1318513740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Xbox 360 is finally getting server-side storage for gamertags and such","msgtype":"m.text"},"ts":1318513741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"discussing standards on twitter sucks badly","msgtype":"m.text"},"ts":1318520460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can someone make it stop?","msgtype":"m.text"},"ts":1318520461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Google+ sort of works, but excludes Ms2ger; mailing lists really would be best","msgtype":"m.text"},"ts":1318520520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"echo '127.0.0.1 twitter.com' >> /etc/hosts","msgtype":"m.text"},"ts":1318520580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The W3C ought to develop a social network platform designed for discussing and developing specifications, rather than expecting people to use antiquated things like mailing lists or inappropriate things like Twitter","msgtype":"m.text"},"ts":1318520760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"tldr: gamily standards!","msgtype":"m.text"},"ts":1318520820000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"*gamify","msgtype":"m.text"},"ts":1318520821000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"annevk: yeah, I can't figure out how slightlyoff_afk wants node renames to behave or what the use case for node renames is","msgtype":"m.text"},"ts":1318520880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"he just wants everything to be a function","msgtype":"m.text"},"ts":1318520881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then since new Element() would be pointless, he suggested something about a writable local name, which of course would not work, but never mind that","msgtype":"m.text"},"ts":1318520940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be kinda unfortunate if the platform implementation couldn't be organized into classes the way it can be organized if a node can't change what element it represents","msgtype":"m.text"},"ts":1318521000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"node renaming is like every element being input type=foo","msgtype":"m.text"},"ts":1318521060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Making the interface of an Element immutable seems like an important invariant to preserve","msgtype":"m.text"},"ts":1318521120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway I doubt he really wants to change that","msgtype":"m.text"},"ts":1318521180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"he's just trying to make his vague case for constructors everywhere","msgtype":"m.text"},"ts":1318521240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"constructors everywhere\" isn't a use case. what's the motivation for constructors everywhere? is there a blog post about this?","msgtype":"m.text"},"ts":1318521360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes, but I didn't get it","msgtype":"m.text"},"ts":1318521900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it has something to do with the idea that the DOM has to be written in terms of ECMAScript","msgtype":"m.text"},"ts":1318521901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and ECMAScript does not know objects you cannot new?","msgtype":"m.text"},"ts":1318521902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but how this helps anyone...","msgtype":"m.text"},"ts":1318521960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/mid/CANr5HFU5PVs0ad_KDE+zVjKgrKFfpF_E0zFvVPx7BymJc9nedQ⊙mgc","msgtype":"m.text"},"ts":1318521961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well of course you can create objects that you cannot new using ES","msgtype":"m.text"},"ts":1318521962000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1186 is a trivial example","msgtype":"m.text"},"ts":1318522200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The problem seems to be a belief that not being able to do new HTMLFooElement() even where that doesn't make sense, is screwing over authors","msgtype":"m.text"},"ts":1318522260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In general having constructors where they make sense doesn't seem like a bad idea","msgtype":"m.text"},"ts":1318522320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"They don't really make sense on HTMLElement and \"subclasses\" though becase there isn't a 1:1 mapping between interface objects and instances","msgtype":"m.text"},"ts":1318522380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(that is, not every instance you might want to create has a corresponding interface object)","msgtype":"m.text"},"ts":1318522440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, I think we should add them for Text/Comment/Document","msgtype":"m.text"},"ts":1318522620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno about Element","msgtype":"m.text"},"ts":1318522621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1318524240000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"mornin'","msgtype":"m.text"},"ts":1318524241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hyvää iltaa","msgtype":"m.text"},"ts":1318524242000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anything with umlauts is cool by definition","msgtype":"m.text"},"ts":1318524300000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Finnish isn't a real language it's just a conspiracy to make the rest of the world feel stupid","msgtype":"m.text"},"ts":1318524360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":p","msgtype":"m.text"},"ts":1318524361000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what's vietnamese then? :-)","msgtype":"m.text"},"ts":1318524362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a conspiracy to prop up the diacritic industry","msgtype":"m.text"},"ts":1318524540000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"a purveyor of fine sandwiches","msgtype":"m.text"},"ts":1318524600000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Oh is that the basis you were comparing on? I was going to say that vietnamese didn't seem very gramatically complex","msgtype":"m.text"},"ts":1318524601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(although I only glanced at wikipedia, so maybe it is)","msgtype":"m.text"},"ts":1318524660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"whereas the dead giveaway that Finnish is a conspiracy is that they go around talking about 15 cases for nouns","msgtype":"m.text"},"ts":1318524661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"omniglot tells me that Vietnamese has six tones. that seems complex","msgtype":"m.text"},"ts":1318524662000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"To speak, sure","msgtype":"m.text"},"ts":1318524663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I rather suspect it would entirely exclude me from the set of potential vietnamese speakers, for example","msgtype":"m.text"},"ts":1318524720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: what was the rationale for conflatin type and vocabulary into @itemtype?","msgtype":"m.text"},"ts":1318524840000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"scor: i don't understand the question","msgtype":"m.text"},"ts":1318525320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the rules under \"If the element is a time element with a @datetime attribute\" in https://dvcs.w3.org/hg/htmldata/raw-file/24af1cde0da1/microdata-rdf/index.html illustrate what's wrong with RDF datatyping","msgtype":"m.text"},"ts":1318526340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hey, i'm an author on that document","msgtype":"m.text"},"ts":1318526400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"go figure","msgtype":"m.text"},"ts":1318526401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't even know it existed!","msgtype":"m.text"},"ts":1318526402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is part of the text copied and pasted from something you wrote?","msgtype":"m.text"},"ts":1318526460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i assume so","msgtype":"m.text"},"ts":1318526461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sorry, got side tracked. when you took RDFa and designed microdata, what drew you to combine the concepts of vocabulary namespace with the type (in @itmetype)?","msgtype":"m.text"},"ts":1318526580000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"Hixie: RDFa distinguishes the two, but afaik microdata conflates them (this is not a critizism, I just trying to understand what was the rational for combining them)","msgtype":"m.text"},"ts":1318526700000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"About @datetime data typing, I didn't invent this, but found it in a tracker bug I thought Hixie had agreed with; it makes sense to me anyway.","msgtype":"m.text"},"ts":1318526760000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"scor: i didn't take RDFa to design microdata","msgtype":"m.text"},"ts":1318526761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-html-xml/2011Oct/0022.html","msgtype":"m.text"},"ts":1318526820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"About the new Microdata-RDF doc, Jeni asked me to resurrect it, and of course, it borrows heavily from the previous Microdata spec","msgtype":"m.text"},"ts":1318526821000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"gkellogg: the text hsivonen mentions is the right way to map <time> to RDFa but it illustrates what's wrong with RDF datatyping nonetheless","msgtype":"m.text"},"ts":1318526822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gkellogg: (note, <time> is likely going away)","msgtype":"m.text"},"ts":1318526823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"scor: RDF doesn't really have a concept of a vocabulary at the syntax level","msgtype":"m.text"},"ts":1318526880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen, you posted that for entertainment I hope?","msgtype":"m.text"},"ts":1318526881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I heard that, to be replaced by <data> I suppose?","msgtype":"m.text"},"ts":1318526940000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"surprised nobody has replied with, \"Agreed, it's called XHTML5, you can use it today.\"","msgtype":"m.text"},"ts":1318526941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some such","msgtype":"m.text"},"ts":1318526942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gkellogg: yeah, something like that","msgtype":"m.text"},"ts":1318526943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gkellogg: wouldn't affect the spec you're writing much except you'd have to add more types to the list hsivonen mentioned (and rename the element and attribute names, of course)","msgtype":"m.text"},"ts":1318527000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Martin Heff has complained about the lack of data typing in Microdata, and would like to see a way to infer this from referenced vocabularies. We considered this for RDFa but rejected it.","msgtype":"m.text"},"ts":1318527001000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"Hixie: I intend to follow both HTML5 and Microdata specs as they continue to evolve. Your participation, direct or indirect would be welcome.","msgtype":"m.text"},"ts":1318527060000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"Hixie, I looked at the fullscreen stuff and integrating it directly into HTML might not be a bad idea","msgtype":"m.text"},"ts":1318527061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gkellogg: microdata has data typing, it's just in the vocabularies rather than in the data (since otherwise you have to repeat it with every property use, which seems silly)","msgtype":"m.text"},"ts":1318527062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, then again, I can probably define most methods as a separate thing and HTML would just define things such as <iframe allowfullscreen>","msgtype":"m.text"},"ts":1318527120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: let's do that (the split), i'd rather not have to start defining rendering if i can help it","msgtype":"m.text"},"ts":1318527121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: the rendering section is bad enough","msgtype":"m.text"},"ts":1318527122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: to be more specific, rules for creating RDF from Microdata with data typed literals. Vocabulary-based typing relies on the processor to do this on it's own, without it's being stated explicitly in the generated RDF. Otherwise, I agree that the way to do it is through datatype inference.","msgtype":"m.text"},"ts":1318527180000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"gkellogg: no i mean the microdata vocabulary, not the rdf vocalubary. The microdata to RDF convertor would have to know about the microdata vocabulary to add the data typing","msgtype":"m.text"},"ts":1318527360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about strongly deprecating?","msgtype":"m.emote"},"ts":1318527361000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"gkellogg: (there's not really much point in processing data for which you don't know the vocabulary, anyway, it's not like you can actually do anything with the type information in that case)","msgtype":"m.text"},"ts":1318527362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"</joking>","msgtype":"m.emote"},"ts":1318527363000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"is an idiot. wrong chat window","msgtype":"m.emote"},"ts":1318527420000,"senderName":"cygri","senderId":"cygri@irc"},
{"content":{"body":"In my spec, there's always a vocabulary as in every @itemprop results in a URI. If that URI can be dereferenced and it is an RDFS (or OWL) schema, you could use it to find range information that could be used for datatype inference, but this isn't the SWIG discussion list :)","msgtype":"m.text"},"ts":1318527480000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"Hixie: in microdata, is there any difference between a vocabulary and a type? it seems the type in @itemtype defines the vocabulary","msgtype":"m.text"},"ts":1318527540000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"scor: a vocabulary in microdata is a group of short names that are defined in a spec and grouped under one (or more) type(s)","msgtype":"m.text"},"ts":1318527541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"scor: it's not equivalent to the type concept in rdf","msgtype":"m.text"},"ts":1318527600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"scor: which is just another property value","msgtype":"m.text"},"ts":1318527601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so would you say that a microdata vocabulary has the same URI as the type or not?","msgtype":"m.text"},"ts":1318527602000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"scor: a vocabulary in microdata doesn't have a url","msgtype":"m.text"},"ts":1318527603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, so how is it defined? by its popular name?","msgtype":"m.text"},"ts":1318527660000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"the same way, e.g., HTML's vocabulary is defined. In a spec.","msgtype":"m.text"},"ts":1318527661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I posted it out of bewilderment about how XHTML5 connects to \"Obama Care\"","msgtype":"m.text"},"ts":1318527662000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I missed your discussion on mapping <time> datatypes, can you re-post?","msgtype":"m.text"},"ts":1318527840000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"gkellogg: http://krijnhoetmer.nl/irc-logs/whatwg/20111013#l-1181","msgtype":"m.text"},"ts":1318527900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sorry, I can't fix RDF data typing, it is what it is :)","msgtype":"m.text"},"ts":1318527960000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"hsivonen: He could have been honest and titled the email \"XHTML5: THINK OF THE CHILDREN!\"","msgtype":"m.text"},"ts":1318527961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gkellogg: i highly recommend ignoring RDF in general :-)","msgtype":"m.text"},"ts":1318527962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I gathered that :) Sadly, RDF tends to be a kind of addiction, perhaps we need a 12-step program :)","msgtype":"m.text"},"ts":1318528020000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"can't help you there :-)","msgtype":"m.text"},"ts":1318528140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gkellogg: Don't they ask about that at immigration? \"Are you now, or have you ever been, addicted to RDF? YES [ ] NO [ ]\"","msgtype":"m.text"},"ts":1318528141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"lol. is it a crime nowadays?","msgtype":"m.text"},"ts":1318528260000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"gkellogg: http://krijnhoetmer.nl/irc-logs/whatwg/20111013#l-1181 was all I said","msgtype":"m.text"},"ts":1318529400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: got it, thanks. The main problem here is that there's really no way, except if the property range can be narrowed, do do _any_ datatype inference without performing datatype inference from the corresponding vocabulary description. If there's another way to get better datatype information out of a doc without relying on external resources, I'd like to know.","msgtype":"m.text"},"ts":1318529520000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"gkellogg: I wasn't suggesting that the algorithm was wrong","msgtype":"m.text"},"ts":1318529700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gkellogg: I was suggesting that RDF could do without having datatyping in the first place","msgtype":"m.text"},"ts":1318529760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when i tell a group that use cases would be helpful if they want the spec changed, after three years of telling them this, they should not respond with \"ah, thanks, that's helpful, we'll look for use cases\" as if this was the first time they'd heard that use cases might be the best way to give feedback.","msgtype":"m.text"},"ts":1318529880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: W3C HTML Data TF is specifically chartered to identify such use cases.","msgtype":"m.text"},"ts":1318529940000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"jeni's reply suggested that the idea of getting use cases was a novel one","msgtype":"m.text"},"ts":1318530000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if you're right, apparently not everyone has read the charter","msgtype":"m.text"},"ts":1318530001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: http://www.w3.org/2011/htmldata/track/actions/7","msgtype":"m.text"},"ts":1318530120000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"gkellogg: http://lists.w3.org/Archives/Public/public-html-data-tf/2011Oct/0068.html \"OK, that's helpful\"","msgtype":"m.text"},"ts":1318530180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1318530181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not complaining or anything","msgtype":"m.text"},"ts":1318530182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"use cases are great","msgtype":"m.text"},"ts":1318530240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've been asking for them for forever now","msgtype":"m.text"},"ts":1318530241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: experience with other groups indicates that collecting use cases is always problematic; it seems like a chore. However, as you point out, you can't really derive requirements without use cases. But in their absence, you may need to draw on anecdotal evidence.","msgtype":"m.text"},"ts":1318530420000,"senderName":"gkellogg","senderId":"gkellogg@irc"},
{"content":{"body":"no, in their absence, you don't do anything. :-)","msgtype":"m.text"},"ts":1318530421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Why does MapsGL use WebGL for 2D vector graphics maps?","msgtype":"m.text"},"ts":1318530660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what does it use?","msgtype":"m.text"},"ts":1318530661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1318530662000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"instead of using SVG or Canvas 2D","msgtype":"m.text"},"ts":1318530663000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah, dunno","msgtype":"m.text"},"ts":1318530664000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: WebGL isn't a 2D graphics API","msgtype":"m.text"},"ts":1318530665000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sure it is","msgtype":"m.text"},"ts":1318530666000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"2d is a subset of 3d","msgtype":"m.text"},"ts":1318530667000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"probably easier to just code 2d as a special case of 3d?","msgtype":"m.text"},"ts":1318530720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"opengl is very good at 2d graphics","msgtype":"m.text"},"ts":1318530721000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i honestly have no idea","msgtype":"m.text"},"ts":1318530722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: well, MapsGL fails at anti-aliasing where SVG or Canvas 2D would give it \"for free\"","msgtype":"m.text"},"ts":1318530723000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: maybe the reason indeed is using the same thing for both streets and the buildings","msgtype":"m.text"},"ts":1318530724000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so the rendering tech doesn't change when zooming in to the building level","msgtype":"m.text"},"ts":1318530780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"you can open antialiased webgl contexts (may or may not actually be supported, of course)","msgtype":"m.text"},"ts":1318530781000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"drawing a map is quite a complicated problem, so i wouldn't be surprised if it was just a matter of wanting to only do it once","msgtype":"m.text"},"ts":1318530782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(easy to do 2d vector AA in software on anything; no so easy with OpenGL if the underlying hardware isn't good at it)","msgtype":"m.text"},"ts":1318530840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyway, great to see Maps features that previously required Android or Flash Player now supported on the Open Web Platform","msgtype":"m.text"},"ts":1318530841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1318530842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also if you already have GPU-based map rendering for some other platform, porting to WebGL is probably easier","msgtype":"m.text"},"ts":1318530960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"One of the reason to use WebGL over canvas/svg is performance","msgtype":"m.text"},"ts":1318531020000,"senderName":"arv__","senderId":"arv__@irc"},
{"content":{"body":"I wonder how long it will take for a WebGL version of Google Earth to emerge","msgtype":"m.text"},"ts":1318531021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Well, supported on the \"Open Web\" if your UA string is correct.","msgtype":"m.text"},"ts":1318533060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(which I'm not sure really counts as open web, thus the scare quotes)","msgtype":"m.text"},"ts":1318533120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen, dglazkov, Hixie: Any public feedback on http://convergence.io/ from browser manufacturers yet? (removing CAs via Network Perspectives and Notaries?)","msgtype":"m.text"},"ts":1318535340000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"gsnedders: indeed","msgtype":"m.text"},"ts":1318535820000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Philip`: http://www.w3.org/Bugs/Public/show_bug.cgi?id=14421","msgtype":"m.text"},"ts":1318538640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1318541520000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"I've got a question","msgtype":"m.text"},"ts":1318541521000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"sicking","msgtype":"m.text"},"ts":1318541640000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1318541641000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1318541642000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I have a question about javascript","msgtype":"m.text"},"ts":1318541643000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"I need to save an array of the image tags on a website (var images = document.getElementsByTagname(\"img\");) and I need it stored in another array","msgtype":"m.text"},"ts":1318541644000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"so that when all the images are changed, the copy of the images array is unchanged","msgtype":"m.text"},"ts":1318541700000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"irc is hard","msgtype":"m.text"},"ts":1318542060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dom has so many shortcuts. doc.images,  doc.links, window[id] etc","msgtype":"m.text"},"ts":1318542180000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"but ppl use long пУИЕТ","msgtype":"m.text"},"ts":1318542181000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"*gEBTN","msgtype":"m.text"},"ts":1318542240000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Ж.","msgtype":"m.text"},"ts":1318542241000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"*:/","msgtype":"m.text"},"ts":1318542242000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"stupid autoswitcher","msgtype":"m.text"},"ts":1318542243000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"window[id] works in general only in quirks mode","msgtype":"m.text"},"ts":1318543080000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and it should be actually removed since it is so error prone)","msgtype":"m.text"},"ts":1318543081000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but its handy :)","msgtype":"m.text"},"ts":1318543140000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"TabAtkins: do you know any of the editors of http://dev.w3.org/csswg/css3-writing-modes ?","msgtype":"m.text"},"ts":1318543680000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"TabAtkins: I'd like to see the spec change for http://lists.w3.org/Archives/Public/www-style/2011Sep/0375.html","msgtype":"m.text"},"ts":1318543681000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"TabAtkins: not sure who/how to nag about it","msgtype":"m.text"},"ts":1318543682000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: so you want fantasai","msgtype":"m.text"},"ts":1318545900000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: oh? is she one of the editors?","msgtype":"m.text"},"ts":1318546200000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"doesn't know her real name","msgtype":"m.emote"},"ts":1318546201000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: the spec says Elika","msgtype":"m.text"},"ts":1318546202000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: thx","msgtype":"m.text"},"ts":1318546260000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: anyway, I copy-pasted your comment to her (she is in  moznet)","msgtype":"m.text"},"ts":1318546261000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though, apparently afk","msgtype":"m.text"},"ts":1318546262000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: thanks! it's nothing urgent, but just wanted to make sure it doesn't get lost.","msgtype":"m.text"},"ts":1318546320000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"heycam: ping","msgtype":"m.text"},"ts":1318547520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: http://www.w3.org/Bugs/Public/show_bug.cgi?id=13093","msgtype":"m.text"},"ts":1318547521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man, my css-fu these days is week","msgtype":"m.text"},"ts":1318550280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weak even","msgtype":"m.text"},"ts":1318550281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the practical difference between a presentational attribute css rule and a UA stylesheet css rule? just that the user style sheet overrides the UA one but not the pres hints?","msgtype":"m.text"},"ts":1318550340000,"senderName":"Hixie","senderId":"Hixie@irc"}
]