[
{"content":{"body":"well bummer, i can't very well call the comparator function from within the sort algorithm, the comparator could do all kinds of crazy things to the DOM","msgtype":"m.text"},"ts":1356318346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: run the whole sort (leaving the DOM elements in-place--just figure out the order they'd end up being in), then apply the DOM changes at the end all at once only if the DOM order is the same?","msgtype":"m.text"},"ts":1356322571000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(precisely what \"the same\" means I'm not sure)","msgtype":"m.text"},"ts":1356322603000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the definiton of \"the same\" is what matters, really","msgtype":"m.text"},"ts":1356322658000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, with that definition, i could abort whenever","msgtype":"m.text"},"ts":1356322671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you're sorting nodes [a,b,c,d,e], only apply the result if at the end of the sort algorithm, the nodes would still produce the pre-sorted list [a,b,c,d,e]","msgtype":"m.text"},"ts":1356322785000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what does that mean?","msgtype":"m.text"},"ts":1356322836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean, do the node collection twice?","msgtype":"m.text"},"ts":1356322857000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what if the nodes change contents during the comparator?","msgtype":"m.text"},"ts":1356322879000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or the page is navigated?","msgtype":"m.text"},"ts":1356322890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, run the entire sort algorithm without applying any changes, just sorting the nodes out-of-band, then once that's complete, check if the nodes are still where they were and apply the changes atomically","msgtype":"m.text"},"ts":1356322940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"define \"where they were\". What if the table is now in a different document? Or the trs are still in the same tbodies but the tbodies are in different tables? or the <th>s that we're using to determine the sort order have all been moved around?","msgtype":"m.text"},"ts":1356323016000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what i mean by comparing the list of nodes you're sorting: if the table results in three groups that need to be sorted, check that the table still gives the same results before applying","msgtype":"m.text"},"ts":1356323083000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what if the <tr>s are still there but the cells have all changed?","msgtype":"m.text"},"ts":1356323117000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the cell contents we use to compare the rows, after all","msgtype":"m.text"},"ts":1356323128000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's a user comparison function, then it might make sense to not care about that","msgtype":"m.text"},"ts":1356323150000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's user comparison for one column, but the other column might not be","msgtype":"m.text"},"ts":1356323164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm fast reaching the conclusion that a comparator here is a terrible idea","msgtype":"m.text"},"ts":1356323167000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"js one, i mean","msgtype":"m.text"},"ts":1356323176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well i've said that explicit sort keys can handle most cases :)","msgtype":"m.text"},"ts":1356323228000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"are there any particular cases you have in mind where a function is needed and a sort key won't work?","msgtype":"m.text"},"ts":1356323498000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there are some cases where they work but are a bit awkward (like natural sorts)","msgtype":"m.text"},"ts":1356323519000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the main reason for having it is that the libs have them","msgtype":"m.text"},"ts":1356323667000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok. bye bye comparator.","msgtype":"m.text"},"ts":1356323752000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if people want to manually sort they can do so on onsort","msgtype":"m.text"},"ts":1356323762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: Hi again","msgtype":"m.text"},"ts":1356336950000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Ms2ger: annevk: For when either of you get back, I updated my implementation according to your updates to the spec. However it appears TreeWalker.nextNode is still broken / failing tests.","msgtype":"m.text"},"ts":1356336992000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"In this commit I update my implementation: https://github.com/Krinkle/dom-TreeWalker-polyfill/commit/7cc08f400bdc5bca405040e7ec3877ff668cae48","msgtype":"m.text"},"ts":1356337032000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Based on recent commits in https://github.com/whatwg/dom/commits","msgtype":"m.text"},"ts":1356337038000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"In particular there is a problem with 'result' not being assigned when filtering the \"following\" node.","msgtype":"m.text"},"ts":1356337074000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"causing the next iteration of the running the steps to use the old result again","msgtype":"m.text"},"ts":1356337088000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"If you clone my repo, and change the conditional block for \"nextNodeW3\" from if-false to if-true you'll see the failing test (the test fails when there is an accepted node inside a rejected parent that is following an accepted parent)","msgtype":"m.text"},"ts":1356337138000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"so the next iteration is looking in a child it shouldn't be looking into","msgtype":"m.text"},"ts":1356337156000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"files a bug","msgtype":"m.emote"},"ts":1356337241000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"nvm, it was fixed already (looking at an outdated version)","msgtype":"m.text"},"ts":1356338419000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1356339490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"notjasper, hi","msgtype":"m.text"},"ts":1356345510000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1356345543000,"senderName":"notjasper","senderId":"notjasper@irc"},
{"content":{"body":"are you jasper?","msgtype":"m.text"},"ts":1356345547000,"senderName":"notjasper","senderId":"notjasper@irc"},
{"content":{"body":"i am Jasper","msgtype":"m.text"},"ts":1356345554000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"I was trying to connect through mibbit a second ago, and it gave me the name jasper and then imediately asked me to change my name, and then booted me out","msgtype":"m.text"},"ts":1356345586000,"senderName":"notjasper","senderId":"notjasper@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1356345595000,"senderName":"notjasper","senderId":"notjasper@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1356345595000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"SamB: Expose sharp corners for people to injure themselves upon, basically. (Exposing behaviour where non-specified behaviour can become relied upon, basically.)","msgtype":"m.text"},"ts":1356388301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"exposing GC behavior isn't so much a sharp corner as a hidden blade","msgtype":"m.text"},"ts":1356388369000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Just found out that \"if x, do optimized code, else y\" is too expensive for compiled JS. TIL.","msgtype":"m.text"},"ts":1356389123000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh well, let's ignore that everyone has done that for years.","msgtype":"m.text"},"ts":1356389135000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TIL?","msgtype":"m.text"},"ts":1356389226000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Today I learned.","msgtype":"m.text"},"ts":1356389357000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Someone claimed this in an argument about the feasibility of JS optimizations with me.","msgtype":"m.text"},"ts":1356389373000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I should step away from the internet.","msgtype":"m.text"},"ts":1356389389000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: don't argue the Internet man, it's exhausting","msgtype":"m.text"},"ts":1356390544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know, I mostly ignore it.","msgtype":"m.text"},"ts":1356390883000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]