[
{"content":{"body":"Your first mistake was the argument of everything that optionally takes a path.","msgtype":"m.text"},"ts":1366934402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"for (x, y) it becomes (x, y. fillrule)","msgtype":"m.text"},"ts":1366934422000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"constraining this, is that implementations have already implemented (x, y) and (x, y, fillRule)","msgtype":"m.text"},"ts":1366934428000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1366934436000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"so (path, fillRule, x, y) would be ugly","msgtype":"m.text"},"ts":1366934439000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Position should, generally, be a unique identifier for the argument.  Overloading on argument list length to give different positions different meanings is a bad idea.","msgtype":"m.text"},"ts":1366934443000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but (path, x, y, fillRule) is even worse...","msgtype":"m.text"},"ts":1366934448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"optional arguments at the beginning are evil","msgtype":"m.text"},"ts":1366934454000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"You should have fallen down to options objects earlier.","msgtype":"m.text"},"ts":1366934454000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: too late for that now...","msgtype":"m.text"},"ts":1366934469000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: No, optional arguments have their place, when they're truly optional, and are chained-optional (that is, you never want to provide the second optional argument without specifying the first).","msgtype":"m.text"},"ts":1366934489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I hope those path methods will go away","msgtype":"m.text"},"ts":1366934498000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: Is it?  Do we have implementations?","msgtype":"m.text"},"ts":1366934501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"noone implemented them","msgtype":"m.text"},"ts":1366934504000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: Blink and WebKit use currentPath to share path objects","msgtype":"m.text"},"ts":1366934505000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"TabAtkins: ... that's optional arguments at the end","msgtype":"m.text"},"ts":1366934506000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(and i don't generally agree. the first argument of something like this should always be the main thing you're operating on, imho)","msgtype":"m.text"},"ts":1366934516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you can just set the currentPath with the path you want","msgtype":"m.text"},"ts":1366934520000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: and then ask the context","msgtype":"m.text"},"ts":1366934526000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: ew","msgtype":"m.text"},"ts":1366934546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: that's even worse :-)","msgtype":"m.text"},"ts":1366934553000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: at the moment it is not nice, that is where cabanier's proposal comes in","msgtype":"m.text"},"ts":1366934574000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"TabAtkins: qq about padding-bottom.  Is it supposed to be relative to the actual width of the element, or the available width around the element (in the case of max-width)?","msgtype":"m.text"},"ts":1366934590000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Hixie: for WebKit and Blink, Path is just a storage of Path segments","msgtype":"m.text"},"ts":1366934598000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"zewt: Yes, if you have optional arguments not at the end, you're doing things wrong.  ^_^","msgtype":"m.text"},"ts":1366934599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: nothing more","msgtype":"m.text"},"ts":1366934603000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"lecuyer: Whatever the spec says - I dont' remember off the top of my head.","msgtype":"m.text"},"ts":1366934612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"krit: right, same in the spec","msgtype":"m.text"},"ts":1366934614000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: ... but i said \"optional arguments at the beginning\". heh","msgtype":"m.text"},"ts":1366934616000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"krit: it's the \"currentPath\" thing that's ugly :-)","msgtype":"m.text"},"ts":1366934623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: ...I didn't see that part of your comment.  Apologies.","msgtype":"m.text"},"ts":1366934634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: option objects and language-level named arguments can complement each other nicely, eg. Python's **args","msgtype":"m.text"},"ts":1366934647000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yes, if you have it.","msgtype":"m.text"},"ts":1366934659000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: well, it is more than that","msgtype":"m.text"},"ts":1366934661000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: currentpath is just an opaque holder of a bunch of path operations","msgtype":"m.text"},"ts":1366934662000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: you have path . http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-path-addpathbystrokingpath","msgtype":"m.text"},"ts":1366934672000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"zewt: It would be nice to pursue, in a future ES version, Pythonic named arguments.","msgtype":"m.text"},"ts":1366934682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hates link replacing","msgtype":"m.emote"},"ts":1366934683000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I've found in implementation it's usually implemented as the latter, but it'd be nice if it wasn't.","msgtype":"m.text"},"ts":1366934685000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"(though you need a different syntax than Python, as that syntax is already allowed and means something different in JS)","msgtype":"m.text"},"ts":1366934698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"krit: addPathByStrokingPath is just a way to add more path segments","msgtype":"m.text"},"ts":1366934707000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lecuyer: Can't change it.","msgtype":"m.text"},"ts":1366934708000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: sure, but not always implementable","msgtype":"m.text"},"ts":1366934750000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: the output of that is undefined","msgtype":"m.text"},"ts":1366934755000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1366934760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how so","msgtype":"m.text"},"ts":1366934761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: probably not what you want","msgtype":"m.text"},"ts":1366934763000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: or better there just exist some propritary libs that can do that","msgtype":"m.text"},"ts":1366934766000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"the spec defines it in great detail...","msgtype":"m.text"},"ts":1366934769000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It says in the spec that it's relative to the width of the element, but given that everyone seems to have gotten it wrong I was wondering if they didn't :)","msgtype":"m.text"},"ts":1366934771000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Hixie: as currently defined, the path segments will overlap and caused all sort of drawing issues","msgtype":"m.text"},"ts":1366934790000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: you usually don't want to fullfill tasks of graphics libraries in browsers","msgtype":"m.text"},"ts":1366934808000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"well, depends what you want, obviously","msgtype":"m.text"},"ts":1366934816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1366934819000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"I'd expect it to render as if I stroked the path","msgtype":"m.text"},"ts":1366934831000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"krit: s/you/i/","msgtype":"m.text"},"ts":1366934844000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well that gets back to the thing we were talking about earlier","msgtype":"m.text"},"ts":1366934847000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which lacks a specification","msgtype":"m.text"},"ts":1366934853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and not get unpainted areas where the strokes meet","msgtype":"m.text"},"ts":1366934854000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"that one is actually spec-able","msgtype":"m.text"},"ts":1366934872000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"it's stroking of shapes/combined path which is hard","msgtype":"m.text"},"ts":1366934886000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"there's quite a lot of \"graphics library\" tasks in browsers, heh","msgtype":"m.text"},"ts":1366934888000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"lecuyer: I don't know where you're seeing that it's relative to the width of the element.  The CSS 2.1 spec defines percentages in padding to \"refer to the width of containing block\".","msgtype":"m.text"},"ts":1366934893000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"since they don't have a 'start' point any more","msgtype":"m.text"},"ts":1366934895000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"zewt: you as an content author may wish that. I am indeed talking as an implementer","msgtype":"m.text"},"ts":1366934904000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: everything is spec-able, it just needs to be specced","msgtype":"m.text"},"ts":1366934932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: you're a bit late (re: canvas, webgl, css filters)","msgtype":"m.text"},"ts":1366934938000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: sorry, I must have misread it","msgtype":"m.text"},"ts":1366934947000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"zewt: I don't see the context in your list","msgtype":"m.text"},"ts":1366934963000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: we *could* spec the planarization algorithm in detail","msgtype":"m.text"},"ts":1366934964000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"those are all things that overlap with graphics libraries, of course","msgtype":"m.text"},"ts":1366934990000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1366934998000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: gonna have to if we want it implemented interoperably","msgtype":"m.text"},"ts":1366935005000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there are things that are better done in script, of course, but that's a bit more specific than \"tasks of graphics libraries\"","msgtype":"m.text"},"ts":1366935019000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: that would be a massive undertaking though. the skia folks can likely provide the algorithm","msgtype":"m.text"},"ts":1366935020000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"zewt: and none of them need path planarization","msgtype":"m.text"},"ts":1366935021000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"lecuyer: No problem.","msgtype":"m.text"},"ts":1366935043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cabanier: massive undertakings are what we do","msgtype":"m.text"},"ts":1366935051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier: that's what distinguishes the web platform from other platforms","msgtype":"m.text"},"ts":1366935063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, not letting you stroke a union/intersect/xor path will make it a lot easier","msgtype":"m.text"},"ts":1366935070000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: I need to think a bit more about it","msgtype":"m.text"},"ts":1366935106000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: and things like addText require access to font data, which some browsers can't or are not willing to implement (independent of the path planarization discussion of cabanier)","msgtype":"m.text"},"ts":1366935152000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: Path planarization is not only very hard to specify, it is also very hard to implement","msgtype":"m.text"},"ts":1366935182000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: well, again... :-)","msgtype":"m.text"},"ts":1366935197000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"it","msgtype":"m.text"},"ts":1366935199000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: even harder to implement in a interopearable way","msgtype":"m.text"},"ts":1366935199000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1366935200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"it's hard\" is not a good argument against doing something :-)","msgtype":"m.text"},"ts":1366935210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: very true!","msgtype":"m.text"},"ts":1366935225000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: browsers also rely on the path data of the geraphic library","msgtype":"m.text"},"ts":1366935253000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: the path data does not reflect what you put into the lib usually","msgtype":"m.text"},"ts":1366935268000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: it needs to be done somehow. I think the *actual* algorithm doesn't need to be specified. Just how it supposed to work (find intersections, fix winding, remove shared lines, etc)","msgtype":"m.text"},"ts":1366935293000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: arc is not an arc in path data but cubic or quadratic curves","msgtype":"m.text"},"ts":1366935294000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: so long as it's unambiguous under all situations, whether it's defined imperatively or declaratively is just an editorial choice","msgtype":"m.text"},"ts":1366935341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier: it just is not really implementable in an interoperable way as long as browsers don't fundamentaly change the way they use Canvas paths","msgtype":"m.text"},"ts":1366935346000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: i usually do things imperatively because it's easier to reason about whether things are defined unambiguously","msgtype":"m.text"},"ts":1366935358000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and I don't see any need to lift up path representation to the browser from the graphic library","msgtype":"m.text"},"ts":1366935373000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hixie: yeah. That should be doable.","msgtype":"m.text"},"ts":1366935375000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"krit: noone can figure out that an arc became a set of bezier though. There's no access to that","msgtype":"m.text"},"ts":1366935400000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"(nor should there be)","msgtype":"m.text"},"ts":1366935407000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: that is correct, but this planarization requires it","msgtype":"m.text"},"ts":1366935422000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: a requirement from adding paths","msgtype":"m.text"},"ts":1366935436000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: don't think so","msgtype":"m.text"},"ts":1366935437000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: it does if you want to follow an algorithm","msgtype":"m.text"},"ts":1366935452000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: I am not even sure if all path segment primitives are supported by the canvas spec","msgtype":"m.text"},"ts":1366935473000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: the algorithms in specs aren't prescriptive of how you implement something","msgtype":"m.text"},"ts":1366935481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: they're all path segments that potentially intersect","msgtype":"m.text"},"ts":1366935482000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: that are used by graphics libraries","msgtype":"m.text"},"ts":1366935483000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: they're just sample algorithms of black boxes","msgtype":"m.text"},"ts":1366935493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: all that matters is that the inputs and outputs match","msgtype":"m.text"},"ts":1366935499000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: for all inputs","msgtype":"m.text"},"ts":1366935503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: true","msgtype":"m.text"},"ts":1366935522000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: I care more about performance and interoperability in this case","msgtype":"m.text"},"ts":1366935578000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: is performance an issue for the spec?","msgtype":"m.text"},"ts":1366935609000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: A different approach where you don't have the access to the path (implementation wise) seems to be less error prone","msgtype":"m.text"},"ts":1366935610000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: for sure not, but it is for implementations and authors","msgtype":"m.text"},"ts":1366935624000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yes","msgtype":"m.text"},"ts":1366935641000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"krit: not sure what you're arguing, we seem to be in agreement :-)","msgtype":"m.text"},"ts":1366935665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not when it comes to styled paths","msgtype":"m.text"},"ts":1366935710000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: I will update my proposal and send it out to the list again","msgtype":"m.text"},"ts":1366935726000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie: this is what addPathByStrokeingPath makes it cimplicated","msgtype":"m.text"},"ts":1366935727000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: that one should be fixed","msgtype":"m.text"},"ts":1366935748000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: fixed?","msgtype":"m.text"},"ts":1366935757000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"replaced with something else","msgtype":"m.text"},"ts":1366935768000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: if you want to have the path along a styled path, it mostly requires path access","msgtype":"m.text"},"ts":1366935807000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"cabanier: (of course not in all cases)","msgtype":"m.text"},"ts":1366935818000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: going to dinner now :-)","msgtype":"m.text"},"ts":1366935822000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"krit: we can talk about it later","msgtype":"m.text"},"ts":1366935835000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: but definitely with pointInPath for instance","msgtype":"m.text"},"ts":1366935838000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: i don't have any trouble saying the browsers should have path access","msgtype":"m.text"},"ts":1366935840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Yes, but this brings the implementation complexity up from the graphic library to the browser","msgtype":"m.text"},"ts":1366935875000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: (at least at the moment)","msgtype":"m.text"},"ts":1366935884000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: i don't see why we would distinguish between \"graphics library\" and \"browser\"","msgtype":"m.text"},"ts":1366935899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Because implementations (talking about WebKit, Blink and Gecko) build on top of the path handling of the graphic library","msgtype":"m.text"},"ts":1366935937000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so?","msgtype":"m.text"},"ts":1366935961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: the libraries can change...","msgtype":"m.text"},"ts":1366935967000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: especially dash array and things like that influence hit testing and all that needs to be integrated when you apply styled paths","msgtype":"m.text"},"ts":1366935985000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: sure, as long as they don't, you require browsers to do the job currently done by graphics libraries","msgtype":"m.text"},"ts":1366936019000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: again, i don't understand the distinction or why that would be a problem.","msgtype":"m.text"},"ts":1366936040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: that's like saying \"browsers will have to do the job of XML parsers\"","msgtype":"m.text"},"ts":1366936049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: or \"browsers will have to do the job of character encoding libraries\"","msgtype":"m.text"},"ts":1366936063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, yes","msgtype":"m.text"},"ts":1366936066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"welcome to being a browser","msgtype":"m.text"},"ts":1366936069000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: which they don't do either. They rely on libs for that","msgtype":"m.text"},"ts":1366936071000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah... no","msgtype":"m.text"},"ts":1366936076000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no for HMTL parser","msgtype":"m.text"},"ts":1366936085000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"at least, not off-the-shelf libraries","msgtype":"m.text"},"ts":1366936090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(then again, as far as i can tell, they all have their own graphics libraries these days too)","msgtype":"m.text"},"ts":1366936119000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the reason why I don't want the browser to do the job is redundancy (the represenation still needs to be done by the graphic library), performance (all the things need to match expectations of authors or they don't use it), interoperability (which is hard to reach on differen starting points the browsers are), implementation complexity (which is hard to maintain and extremely error prone, after all we are browser vendors and no algebra experts)","msgtype":"m.text"},"ts":1366936256000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you keep referring to the graphics library as a separate concept from the browser. it need not be. just view it as one unit of software.","msgtype":"m.text"},"ts":1366936300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: even if implemented in a modular reusable fashion, the graphics \"library\" can provide exactly the api the browser needs","msgtype":"m.text"},"ts":1366936326000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: to do whatever we want it to do","msgtype":"m.text"},"ts":1366936333000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes of course it doesn't need to be, but it is at the moment for very good reasons","msgtype":"m.text"},"ts":1366936343000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: as far as i can tell, all browsers have dedicated graphics libraries under the control of the same development team, not off-the-shelf libraries.","msgtype":"m.text"},"ts":1366936388000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krit: so i disagree","msgtype":"m.text"},"ts":1366936402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that is not true. So far it is JUST Google that has that","msgtype":"m.text"},"ts":1366936442000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"at least google, microsoft, and apple.","msgtype":"m.text"},"ts":1366936457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Mozilla relies on  Cairo/DirectX/maybe Skia, WebKit is based on a lot of graph libs where the browser team does not have influence on the grpahic lib teams.","msgtype":"m.text"},"ts":1366936484000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: MS and Apple just in theory :)","msgtype":"m.text"},"ts":1366936497000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"i have no problem with the idea that browsers will heavily influence how their graphics engine develops","msgtype":"m.text"},"ts":1366936561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Google's Chrome/Blink tool is the only team that has direct control on the development of their graphic library","msgtype":"m.text"},"ts":1366936569000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Hixie: That is ok from the spec author point of view. I am talking from the implementer point of view.","msgtype":"m.text"},"ts":1366936622000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"i am too","msgtype":"m.text"},"ts":1366936731000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as implementors, we've taken over the encoding libraries, parsing libraries, all kinds of stuff","msgtype":"m.text"},"ts":1366936747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"UI widget libraries","msgtype":"m.text"},"ts":1366936751000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we've reimplemented accessibility layers","msgtype":"m.text"},"ts":1366936766000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we hook into the OS input layer much higher than most apps","msgtype":"m.text"},"ts":1366936787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or lower, i guess","msgtype":"m.text"},"ts":1366936792000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"graphics is just the next obvious one that will need to be assimilated to get optimal performance","msgtype":"m.text"},"ts":1366936818000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we have our own scripting engines","msgtype":"m.text"},"ts":1366936832000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we have our own memory management routines","msgtype":"m.text"},"ts":1366936839000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we have our own string implementations","msgtype":"m.text"},"ts":1366936848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ugh, simple bash question.  I want to pass all bash function arguments to a python script.  How to do?","msgtype":"m.text"},"ts":1366939047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can easily pass *individual* arguments with $1 or whatever, but can't figure out how to do all of them.","msgtype":"m.text"},"ts":1366939073000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"$@\"","msgtype":"m.text"},"ts":1366939105000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hah, just now foudn that.","msgtype":"m.text"},"ts":1366939109000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Was hidden in one of the google results that didn't look helpful at first glance.","msgtype":"m.text"},"ts":1366939120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"searching for shell script syntax is… not an easy thing","msgtype":"m.text"},"ts":1366939135000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Indeed.","msgtype":"m.text"},"ts":1366939184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm trying to make a python script that can change the shell directory.  Looks like best way is to have the script echo the path, and have a bash function cd to that.","msgtype":"m.text"},"ts":1366939215000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I am sorry, I didn't see your reply. Each of these features have been checked for positive and negative effects. And this will continue, even with Paths. In WebKit we had to do this choices multiple times. For SVG we decided to cover the data in the browser to support certain features that are required by SVG 1.1. The Blink investigates in reverse this decision and use the capabilities of the graphic library instead again. (As you noted befor","msgtype":"m.text"},"ts":1366941525000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"are there any guidelines regarding throwing exceptions from constructors in Web APIs?","msgtype":"m.text"},"ts":1366942048000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"Hixie: I agree with your points about the browser vs graphics libraries.","msgtype":"m.text"},"ts":1366944430000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"I assume no NSS maintainers are in this chat?","msgtype":"m.text"},"ts":1366960658000,"senderName":"sangwhan_","senderId":"sangwhan_@irc"},
{"content":{"body":"takes that as a yes","msgtype":"m.emote"},"ts":1366960744000,"senderName":"sangwhan_","senderId":"sangwhan_@irc"},
{"content":{"body":"Doubt it","msgtype":"m.text"},"ts":1366960861000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://w3cmemes.tumblr.com/post/48861166006/does-anyone-want-to-put-their-hand-up-and-help","msgtype":"m.text"},"ts":1366961540000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: fwiw, https://wiki.mozilla.org/WebAPI/KeboardIME","msgtype":"m.text"},"ts":1366969828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1366974456000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1366974462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: interesting","msgtype":"m.text"},"ts":1366974488000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: my rough understanding is that we want an API that allows implementing an IME from scratch","msgtype":"m.text"},"ts":1366974492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1366974506000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so we talked here yesterday about that","msgtype":"m.text"},"ts":1366974523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with James Craig and Dominic Manzonni","msgtype":"m.text"},"ts":1366974537000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Dominic Mazzoni","msgtype":"m.text"},"ts":1366974557000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my understanding from talking with them is that you're not going to be able to make that accessible","msgtype":"m.text"},"ts":1366974588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they pointed out that e.g., CodeMirror and Cloud9/ACE etc. are not accessible to screen-reader/AT users","msgtype":"m.text"},"ts":1366974633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess that would depend on what primitives you expose no?","msgtype":"m.text"},"ts":1366974737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But this is not my area of expertise at all.","msgtype":"m.text"},"ts":1366974765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just know this is in the works...","msgtype":"m.text"},"ts":1366974799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1366974869000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see the history of that wiki page shows Yuan Xuleia","msgtype":"m.text"},"ts":1366974904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I would hope that whoever is working it would post feedback or an alternate proposal to public-webapps","msgtype":"m.text"},"ts":1366974960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"feedback on the existing IME API draft that's been published","msgtype":"m.text"},"ts":1366974981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah I suggested they do that somewhere","msgtype":"m.text"},"ts":1366975085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1366975118000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1366975607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The minutes mention dropping keyboard events from DOM3","msgtype":"m.text"},"ts":1366975623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which makes sense... but... at what point is someone going to step up and just define the user interaction model already?","msgtype":"m.text"},"ts":1366975652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there some kind of benefit to keeping the details and have everyone run in circles?","msgtype":"m.text"},"ts":1366975676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that stuff I've not been following","msgtype":"m.text"},"ts":1366975722000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I was actually sleeping during that discussion","msgtype":"m.text"},"ts":1366975732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It makes more sense to sleep, since we're not really any further than we were 10 years ago on that subject.","msgtype":"m.text"},"ts":1366975773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And a WebApps WG meeting full of people not interested in doing too much work is not going to change that.","msgtype":"m.text"},"ts":1366975802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One of the sad truths of life is that it is easy to get money for people to go to meetings and hard to get money for people to do actual work. PAying for 100 people to attend a four day meeting costs the same as employing someone like annevk or Hixie for a year.","msgtype":"m.text"},"ts":1366976076000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: keyevents will not be dropped from DOM3","msgtype":"m.text"},"ts":1366976157000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it was just discussed","msgtype":"m.text"},"ts":1366976168000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: So you’re worth 400 days of work a year :)","msgtype":"m.text"},"ts":1366976186000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and someone mentioned that then the same what happened with D2 would happen with D3","msgtype":"m.text"},"ts":1366976200000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: it is hard to find people to write specs","msgtype":"m.text"},"ts":1366976260000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and almost as hard to find people to review specs :)","msgtype":"m.text"},"ts":1366976276000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and someone should write tests too","msgtype":"m.text"},"ts":1366976292000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and someone should review tests :)","msgtype":"m.text"},"ts":1366976327000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fortunately people are happy to implement things","msgtype":"m.text"},"ts":1366976443000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it is easier to find people to implement things","msgtype":"m.text"},"ts":1366976469000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(people should review the specs when implementing them, but that doesn't always or usually happen)","msgtype":"m.text"},"ts":1366976509000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It's not just that","msgtype":"m.text"},"ts":1366976527000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's that people understand the model of employing people to implement stuff","msgtype":"m.text"},"ts":1366976545000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or, at least, the benefits of paying people to implement stuff are obvious and short-term","msgtype":"m.text"},"ts":1366976642000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You get more stuff, faster","msgtype":"m.text"},"ts":1366976650000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The benefits of paying people to work on writing specs or tests are less obvious, and suffer more from \"tragedy of the commons\" effects","msgtype":"m.text"},"ts":1366976688000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is annevk around?","msgtype":"m.text"},"ts":1366977208000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"so we have HTML defining HTMLElement#style, SVG defining SVGElement#style and CSSOM defining ElementCSSInlineStyle#style (which \"is implemented by Element objects\"), and they're all different","msgtype":"m.text"},"ts":1366977559000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Of course","msgtype":"m.text"},"ts":1366977605000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i guess i should fix ElementCSSInlineStyle#style and make the HTML and SVG specs say (HTML|SVG)Element implements ElementCSSInlineStyle","msgtype":"m.text"},"ts":1366977680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonder why SVG doesn't require CSS support","msgtype":"m.text"},"ts":1366977767000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what's the right thing when CSS isn't supported? Should .style be absent? or return null?","msgtype":"m.text"},"ts":1366977902000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"absent seems better","msgtype":"m.text"},"ts":1366977971000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In that case, I don't think any of the interfaces in cssom should exist","msgtype":"m.text"},"ts":1366977980000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1366978004000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Doesn’t SVG2 require CSS support? Or did I make that up?","msgtype":"m.text"},"ts":1366978347000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Does SVG2 exist in any meaningful sense?","msgtype":"m.text"},"ts":1366978652000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hallvors: am now","msgtype":"m.text"},"ts":1366979208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"great, have a question","msgtype":"m.text"},"ts":1366979251000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I'm looking over the XHR tests, fixing some bugs","msgtype":"m.text"},"ts":1366979269000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"main question is: has the spec changed to \"fire readystatechange only when readyState actually changes\" or not?","msgtype":"m.text"},"ts":1366979299000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I think it has.. and trying to read the processing steps, I can't find any place we don't..","msgtype":"m.text"},"ts":1366979323000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"but it's a bit hard to follow all the steps..","msgtype":"m.text"},"ts":1366979333000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"not if abort() sets it to UNSENT","msgtype":"m.text"},"ts":1366979369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah, I remember one event for send() has been removed","msgtype":"m.text"},"ts":1366979382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so expected outcome of http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/open-open-sync-send.htm and similar tests should be aligned..","msgtype":"m.text"},"ts":1366979454000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"https://github.com/whatwg/xhr/commit/15e86b74b03b9bb80186d6edfa8be091d2312522 was over a year ago it seems","msgtype":"m.text"},"ts":1366979486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera (Presto) and Chrome mostly agree with that new model, Firefox doesn't","msgtype":"m.text"},"ts":1366979492000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"yeah, so says my associated email","msgtype":"m.text"},"ts":1366979529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cool, will fix the tests. Only a year late :)","msgtype":"m.text"},"ts":1366979534000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Thanks for confirming ;)","msgtype":"m.text"},"ts":1366979546000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1366979551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if you're still here :) by my reading of the spec (in its current state), this test should do assert_throws : http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/open-url-multi-window-2.htm","msgtype":"m.text"},"ts":1366980111000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(creates XHR from IFRAME window, removes IFRAME from parent before open())","msgtype":"m.text"},"ts":1366980135000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"yeah, the document would not be fully active","msgtype":"m.text"},"ts":1366980280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same if you navigate the iframe","msgtype":"m.text"},"ts":1366980288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, I think that's how it's defined; navigation and multiple browsing contexts is unfortunately still somewhat hairy","msgtype":"m.text"},"ts":1366980363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why does http://www.w3.org/TR/SVG2/types.html#InterfaceSVGElement have xmlbase, xmllang, xmlspace? isn't that a bit of layering violation?","msgtype":"m.text"},"ts":1366981070000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Poke heycam :)","msgtype":"m.text"},"ts":1366981137000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SVG is full of those","msgtype":"m.text"},"ts":1366981151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: nah, please let him focus on IDL stuff","msgtype":"m.text"},"ts":1366981174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mm","msgtype":"m.text"},"ts":1366981181000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Find someone else to poke, then :)","msgtype":"m.text"},"ts":1366981205000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger?","msgtype":"m.text"},"ts":1366981222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pokes annevk back","msgtype":"m.emote"},"ts":1366981232000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"should've raised shield","msgtype":"m.text"},"ts":1366981271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So seems like request takes yet another fricking flag :(","msgtype":"m.text"},"ts":1366982937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The \"use URL credentials flag\"","msgtype":"m.text"},"ts":1366982945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i sent an email to www-svg","msgtype":"m.text"},"ts":1366983366000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I hope once I've defined all this sometime will point out a way to reduce the flags","msgtype":"m.text"},"ts":1366984273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sometime, someone, either way","msgtype":"m.text"},"ts":1366984315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm.. I have no idea what the pass condition for http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/open-url-multi-window-4.htm should be","msgtype":"m.text"},"ts":1366984685000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Firefox, Opera (Presto): terminate request with no further events when IFRAME is removed. Chrome: completes request to readyState=4 but responseText is \"\" so it's pretty much terminated with an extra event for \"DONE\" state","msgtype":"m.text"},"ts":1366984925000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: thoughts?","msgtype":"m.text"},"ts":1366984985000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: in a bit","msgtype":"m.text"},"ts":1366985254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like 40min","msgtype":"m.text"},"ts":1366985258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok have a nice weekend guys","msgtype":"m.text"},"ts":1366985266000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: probably won't  be here in 40min, could you just post your thoughts here anyway and paste the discussion that occurs in an E-mail to me? ;-)","msgtype":"m.text"},"ts":1366985317000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I found a picture for the fetch spec: http://bit.ly/13zyutD","msgtype":"m.text"},"ts":1366985557000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hallvors: so I think that should actually just work","msgtype":"m.text"},"ts":1366987315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: the base URL and everything is established, there's no reason for it to fail if implementations follow the spec (harhar)","msgtype":"m.text"},"ts":1366987341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i was looking at http://mimesniff.spec.whatwg.org/#determining-the-sniffed-media-type-of-a-resource and figured that Step 5 would apply there, no?","msgtype":"m.text"},"ts":1366993117000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"WebApps discussing licensing and c/p'ing specs again \\o/","msgtype":"m.text"},"ts":1366993146000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"matjas: yeah that's the culprit","msgtype":"m.text"},"ts":1366993169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so iOS Safari violates the spec, hence my tweet \\o/ glad i looked it up before tweeting (and glad i understood correctly)","msgtype":"m.text"},"ts":1366993279000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: I doubt many people got that subtlety though","msgtype":"m.text"},"ts":1366993320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the guy complaining didn't mention that document","msgtype":"m.text"},"ts":1366993327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so he might not have realized his exact byte sequence for \"Content-Type: text/plain\" is what causes other browsers not to sniff","msgtype":"m.text"},"ts":1366993350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah you did","msgtype":"m.text"},"ts":1366993461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober, divya - so I have a flight out tonight at 23:45 from SFO. So we could meet up from dinner if yall have time","msgtype":"m.text"},"ts":1366994574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith divya: that might work for me; i'll check with erin","msgtype":"m.text"},"ts":1366994721000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"MikeSmith: YA!","msgtype":"m.text"},"ts":1366994857000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"MikeSmith: hober what time?","msgtype":"m.text"},"ts":1366994871000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"i hav something at 7.30","msgtype":"m.text"},"ts":1366994880000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"MikeSmith divya: there's also an indieweb meetup of some kind, maybe tantek can fill us in","msgtype":"m.text"},"ts":1366994920000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: can you message me when you know better. i am on and off irc","msgtype":"m.text"},"ts":1366995200000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"MikeSmith: do you have us number?","msgtype":"m.text"},"ts":1366995213000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"MikeSmith: else DM me on twitters","msgtype":"m.text"},"ts":1366995220000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya: +81-80-2387-5995","msgtype":"m.text"},"ts":1366995276000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"people reading the logs, you can now bug MikeSmith day and night","msgtype":"m.text"},"ts":1366995329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: thnx!","msgtype":"m.text"},"ts":1366995332000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"ahahahahha","msgtype":"m.text"},"ts":1366995333000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"fires up his address book","msgtype":"m.emote"},"ts":1366995341000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hober, MikeSmith see indiewebcamp.com/events","msgtype":"m.text"},"ts":1366996386000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: thanks","msgtype":"m.text"},"ts":1366996922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: SVG requires CSS support in practice.  In 1.1 they were loathe to codify that, but if it's not already in SVG2, it's only because someone hasn't gotten to it yet.","msgtype":"m.text"},"ts":1366996950000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"morning tantek","msgtype":"m.text"},"ts":1366996967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and morning TabAtkins","msgtype":"m.text"},"ts":1366996975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yo.","msgtype":"m.text"},"ts":1366996980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I think you lied to me!","msgtype":"m.text"},"ts":1366996984000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"autocomplete...","msgtype":"m.text"},"ts":1366996985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I try","msgtype":"m.text"},"ts":1366996991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: did it work?","msgtype":"m.text"},"ts":1366996997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"About Futures not recursively unwrapping.","msgtype":"m.text"},"ts":1366996998000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ie Future.accept(Future.accept(5)).then(console.log) logging \"<object Future>\" rather than \"5\".","msgtype":"m.text"},"ts":1366997041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"pretty sure that if you do Future.accept(Future.accept(5)).then((x) => alert(x)) will alert a future","msgtype":"m.text"},"ts":1366997052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I find it really hard to follow the spec algorithm, but Domenic (from Promises/A+ standardization fame) asserts that you won't.","msgtype":"m.text"},"ts":1366997079000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think because you confuse Future.accept with Future.accept","msgtype":"m.text"},"ts":1366997118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1366997122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I... I see.","msgtype":"m.text"},"ts":1366997130000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Future.resolve with Future.accept","msgtype":"m.text"},"ts":1366997130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1366997133000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Not that I know of.  There's a bunch of \"use the resolver's resolve algorithm\" sprinkled about that I think means Domenic is right.","msgtype":"m.text"},"ts":1366997152000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh generally futures use resolve, but you can do accept if you want to","msgtype":"m.text"},"ts":1366997176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, of course.  The point is whether calling .then() recursively unwraps its calling value.  (Or its callback's return value.)","msgtype":"m.text"},"ts":1366997221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"then does nothing with the value it's passed","msgtype":"m.text"},"ts":1366997237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does something with the return value sure","msgtype":"m.text"},"ts":1366997250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but in that thread you guys were discussing Future.resolve","msgtype":"m.text"},"ts":1366997270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, wait, I see the problem.  There is one place where you're doing the wrong thing.","msgtype":"m.text"},"ts":1366997284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If the first callback to .then() is omitted, you use the resolver's resolve algorithm instead.  That should be the accept algorithm.","msgtype":"m.text"},"ts":1366997309000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The signature of the callback should be (a) => (a or Future<a>).  The resolve algorithm's signature is (Future<a>) => (Future<a>).  You want accept, which is (a) => (Future<a>).","msgtype":"m.text"},"ts":1366997354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ooh, if you omit callbacks","msgtype":"m.text"},"ts":1366997383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1366997384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Well, resolve is (a or Future<a>) => (Future<a>).)","msgtype":"m.text"},"ts":1366997386000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Coercing the (a) case into a Future<a>.)","msgtype":"m.text"},"ts":1366997406000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so yeah, I guess it makes sense to change that","msgtype":"m.text"},"ts":1366997572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"zero process copyright\" if I reorder some of my URL slugs, I hope that changes soon","msgtype":"m.text"},"ts":1366998034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hm?","msgtype":"m.text"},"ts":1366998046000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, someone just asked me about the W3C and URLs so I gave him http://annevankesteren.nl/2013/03/zero http://annevankesteren.nl/2012/11/copyright http://annevankesteren.nl/2012/11/process and then re-ordered the last words a bit","msgtype":"m.text"},"ts":1366998104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I swear, it all makes sense in my head :p","msgtype":"m.text"},"ts":1366998156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh. ^_^","msgtype":"m.text"},"ts":1366998190000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jsbell: not defining order of exceptions anno 2013 is sad","msgtype":"m.text"},"ts":1366998836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shame on ReSpec (and Indexed DB)","msgtype":"m.text"},"ts":1366998862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Don't blame ReSpec","msgtype":"m.text"},"ts":1366998873000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"blames jsbell ","msgtype":"m.emote"},"ts":1366998902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366998974000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: it was one of the reasons initially given, pretty sure if that limitation had not been there it would've been fixed a year ago","msgtype":"m.text"},"ts":1366998984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And the IE team","msgtype":"m.text"},"ts":1366998988000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jsbell: Microsoft stalling is of course not helping","msgtype":"m.text"},"ts":1366998994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: but that's a year later, and well, they always do that","msgtype":"m.text"},"ts":1366999007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have my opinions on this one, but it's not a sword I was willing to fall on.","msgtype":"m.text"},"ts":1366999044000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Implementing a given order would have taken an order of magnitude less time than the time that has been wasted by the stop energy","msgtype":"m.text"},"ts":1366999047000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no argument.","msgtype":"m.text"},"ts":1366999094000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Shame not all browsers ship so frequently. :P","msgtype":"m.text"},"ts":1366999107000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"And to make that even worse, I shall keep beating this dead horse for the rest of the evening!","msgtype":"m.text"},"ts":1366999132000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: make yourself useful and go add Futures to some random spec. ;-)","msgtype":"m.text"},"ts":1366999158000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"That's annevk's job","msgtype":"m.text"},"ts":1366999170000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: dude btw, how did they come to the conclusion DOM Parsing and Serialization was pretty much done?!","msgtype":"m.text"},"ts":1366999232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was too shocked to reply","msgtype":"m.text"},"ts":1366999248000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1366999267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder why tantek attends these support group meetings but refuses to engage in the much more productive support forum discussions.","msgtype":"m.text"},"ts":1366999355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahahaha","msgtype":"m.text"},"ts":1366999511000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk - in person human to human communications often have higher bandwidth than various support fora and are also a good source of serendipitous 1:1 conversations that can sometimes be orders of magnitude more time-efficient than text media.","msgtype":"m.text"},"ts":1367000466000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"also, fewer (like very few) crazy armchair-spec-commenters show up in in-person meetings, in contrast to online support fora which are often overwhelmed with them.","msgtype":"m.text"},"ts":1367000540000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"*forums","msgtype":"m.text"},"ts":1367000573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*fora","msgtype":"m.text"},"ts":1367000589000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"*This isn't Latin.","msgtype":"m.text"},"ts":1367000598000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*And if it was, you're doing it wrong.","msgtype":"m.text"},"ts":1367000610000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: I've read the minutes. It looks like a waste of time.","msgtype":"m.text"},"ts":1367000737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"XHR level 1 would be useful\" mahahaha","msgtype":"m.text"},"ts":1367000742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's even wasting my time now","msgtype":"m.text"},"ts":1367000753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - the minutes are, well, a rough approximation, like an outline","msgtype":"m.text"},"ts":1367001053000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so yeah - I wouldn't expect them to be much worth your time","msgtype":"m.text"},"ts":1367001071000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"a lot is communicated in subtle tone of voice, body language etc. that helps set context for the spoken words, only a subset of which are written into the minutes","msgtype":"m.text"},"ts":1367001097000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"interesting to see who really cares (doesn't care) about what","msgtype":"m.text"},"ts":1367001112000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I've attended the meetings as well in the past. They were generally not worth it. Having focused meetings with a few people works though.","msgtype":"m.text"},"ts":1367001131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"focused meetings with a few people do tend to be higher value, no disagreement there","msgtype":"m.text"},"ts":1367001146000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"interesting thing (which I think got minuted)","msgtype":"m.text"},"ts":1367001165000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"a set of editors have somewhat threatened to go on strike unless webapps switches to a liberal license","msgtype":"m.text"},"ts":1367001192000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so if I can help move that along, the attendance at the meeting will be worth it","msgtype":"m.text"},"ts":1367001215000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"same reason I'm (likely) running for the AB","msgtype":"m.text"},"ts":1367001226000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"They'd be welcome here I'm sure","msgtype":"m.text"},"ts":1367001309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I only saw the suggestion from darobin","msgtype":"m.text"},"ts":1367001321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that - from darobin","msgtype":"m.text"},"ts":1367001341000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"That was quickly followed by Chaals being happy to plagiarise the URL spec","msgtype":"m.text"},"ts":1367001513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - plagiarism is one of the problems I'd like to address at W3C","msgtype":"m.text"},"ts":1367001739000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: what part of the future spec would resolve(Future<Foo>) return Future<Foo>? It makes sense, I'm just not seeing it.  Is that the [[Call]] on `then`?","msgtype":"m.text"},"ts":1367002023000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"annevk: re: \"I've attended the meetings as well in the past. They were generally not worth it.\" not true at all, I mean just last year, if you hadn't attended HTML/WebApps f2f, we wouldn't have http://w3cmemes.tumblr.com/","msgtype":"m.text"},"ts":1367002213000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"lecuyer: if you use resolve it'll return Foo","msgtype":"m.text"},"ts":1367002230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lecuyer: but it seems like there's a bug at the moment","msgtype":"m.text"},"ts":1367002242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: baha :)","msgtype":"m.text"},"ts":1367002254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1367002262000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"This stuff is easy, why aren't we shipping it yet? ;-)","msgtype":"m.text"},"ts":1367002285000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: we're getting close to shipping","msgtype":"m.text"},"ts":1367002320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: implementation bugs or spec bugs?","msgtype":"m.text"},"ts":1367002349000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"spec","msgtype":"m.text"},"ts":1367002369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - shame that http://25.media.tumblr.com/avatar_420f39830dee_128.png is not the first post in w3cmemes","msgtype":"m.text"},"ts":1367002410000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: are additional prototype implementations welcome to the discussion?","msgtype":"m.text"},"ts":1367002472000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"lecuyer: don't see why not","msgtype":"m.text"},"ts":1367002509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: would your license not make plagarism valid?","msgtype":"m.text"},"ts":1367002518000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"i mean i am not sure why it is a concern if your want your content to be free","msgtype":"m.text"},"ts":1367002534000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya: you're confusing plagiarism with legality","msgtype":"m.text"},"ts":1367002545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no i am not talking legal terms at all.","msgtype":"m.text"},"ts":1367002566000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"i thought you want your content to be free.","msgtype":"m.text"},"ts":1367002573000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"but you want credit?","msgtype":"m.text"},"ts":1367002580000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"i dunno","msgtype":"m.text"},"ts":1367002582000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya, nobody's arguing that the W3C is doing something illegal","msgtype":"m.text"},"ts":1367002626000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: neither am i!","msgtype":"m.text"},"ts":1367002636000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"The problem with the forks the W3C has done to date is they are not kept up to date and confuse implementers. I'd rather that not happen. Also, forking my work without improving matters is not the reason it's under CC0.","msgtype":"m.text"},"ts":1367002636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"divya, only that it's hypocritical","msgtype":"m.text"},"ts":1367002639000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ah","msgtype":"m.text"},"ts":1367002645000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"got it.","msgtype":"m.text"},"ts":1367002647000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya, also, unproductive, confusing, and all that","msgtype":"m.text"},"ts":1367002660000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yaya got it now.","msgtype":"m.text"},"ts":1367002666000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"but i saw plagarism and got confused.","msgtype":"m.text"},"ts":1367002681000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"It's under CC0 to spur creativity, not to create confusion.","msgtype":"m.text"},"ts":1367002684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all other arguments seem sound to me.","msgtype":"m.text"},"ts":1367002687000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"Unfortunately I cannot both prevent the W3C from doing stupid stuff while allowing others to do the sane stuff at the same time. Given the choice I'd rather let the W3C do stupid stuff.","msgtype":"m.text"},"ts":1367002748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"exactly, just because something is CC0 doesn't make it right to plagiarize","msgtype":"m.text"},"ts":1367003064000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"plagiarism is unethical, regardless of any license or lack thereof","msgtype":"m.text"},"ts":1367003082000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: http://dom.spec.whatwg.org/#dom-future-any and friends - the append steps reference \"resolveCallback\" instead of \"resolve\" and \"rejectCallback\" instead of \"reject\"","msgtype":"m.text"},"ts":1367003280000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ethics is not something worth arguing about","msgtype":"m.text"},"ts":1367003552000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"It i true that the meetings are usually the least productive part of TPAC. Coffee breaks: productive. Meals: productive. Evenings in the bar: productive. Meetings: a good time to write tests.","msgtype":"m.text"},"ts":1367003581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(also the plenary day is typically quite reasonable now)","msgtype":"m.text"},"ts":1367003615000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"divya, you're not a philosopher? :)","msgtype":"m.text"},"ts":1367003706000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think the position that \"ethics are not something work arguing about\" is strongly philosophical","msgtype":"m.text"},"ts":1367003753000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Is the real question about whether or not ignoring ethics is itself unethical?","msgtype":"m.text"},"ts":1367003763000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"I think it makes divya a moral nihilist","msgtype":"m.text"},"ts":1367003822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: :)))))))))))","msgtype":"m.text"},"ts":1367004055000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"jgraham: you argue my position very well so i think you would be my best representative","msgtype":"m.text"},"ts":1367004075000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"yes i really dont care about morality in the absolute only in terms of the impact of said moral values","msgtype":"m.text"},"ts":1367004149000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"annevk: also, in Future.every/some, you might want to be explicit about the index variable being snapshotted for each Function","msgtype":"m.text"},"ts":1367004160000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: fixed","msgtype":"m.text"},"ts":1367006518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: any chance of explicit aspect ratios? :)","msgtype":"m.text"},"ts":1367009334000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"I have a (broken) proposal for it on my blog <http://www.xanthir.com/blog/b4810>, and I've seen your email, but haven't responded to it yet.","msgtype":"m.text"},"ts":1367009368000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I hadn't seen your post, but it's pretty much exactly what I asked for in my email","msgtype":"m.text"},"ts":1367009493000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"There are some things wrong with my proposal, but I know how to fix them.  I just haven't pursued it in a spec yet.","msgtype":"m.text"},"ts":1367009517000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I plan to probably put it into the Sizing spec.  Dunno whether it'll be this version or the next.","msgtype":"m.text"},"ts":1367009536000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Awesome, I'm looking forward to it.  Would that put it in css4 probably?","msgtype":"m.text"},"ts":1367009883000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"s/css4/sizing level 4/","msgtype":"m.text"},"ts":1367009905000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Yeah, either http://dev.w3.org/csswg/css-sizing/ or the next level of it.","msgtype":"m.text"},"ts":1367010212000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]