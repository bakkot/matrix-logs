[
{"content":{"body":"annevk: well, if Chrome uses V8's microtask queue, at least it seems like that would make it the odd one out: Both WebKit and Gecko seem to include microtask queues in their JS engines just for testing kinds of purposes, and swap that out for something provided by the renderer when it's there. (I hope this doesn't cause problems for people who hope that tests run in the JS shells match how things would work on the web! A lot","msgtype":"m.text"},"ts":1550452503000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"of testing is done in JS shells)","msgtype":"m.text"},"ts":1550452503000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: maybe that shows either setup can work","msgtype":"m.text"},"ts":1550477840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how would you implement microtasks in a spec compliant fashion if you don't share the queue with the ecmascript engine?","msgtype":"m.text"},"ts":1550484019000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: the engine could call something in the host and let the host deal with the queue","msgtype":"m.text"},"ts":1550484233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, but you still need one central queue","msgtype":"m.text"},"ts":1550484585000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"doesn't really matter where it lives","msgtype":"m.text"},"ts":1550484589000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: sure, as long as it meets the needs of both sides all is good","msgtype":"m.text"},"ts":1550484625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: the main issue is that the current spec setup between ES and HTML is broken (or at least not great)","msgtype":"m.text"},"ts":1550484642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is shocked","msgtype":"m.emote"},"ts":1550484657000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Uhuh, film at 11","msgtype":"m.text"},"ts":1550484693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can we go to the premiere?","msgtype":"m.text"},"ts":1550487499000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Doing some HTML tests this morning.","msgtype":"m.text"},"ts":1550487527000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Hah!","msgtype":"m.text"},"ts":1550489104000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: <script></script><iframe> <- Neither Safari nor Chrome can observe the iframe's content window when running the script.","msgtype":"m.text"},"ts":1550489142000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Only Firefox does that.","msgtype":"m.text"},"ts":1550489145000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1550493418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They actually create it from this queue? Madness","msgtype":"m.text"},"ts":1550493441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if that can be used somehow where something assumes that a frame being in the tree assumes that it has a bc","msgtype":"m.text"},"ts":1550493547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The various window getters for instance","msgtype":"m.text"},"ts":1550493566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Don't know","msgtype":"m.text"},"ts":1550493945000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://twitter.com/nokusu/status/1097477426995695616 🤡","msgtype":"m.text"},"ts":1550494006000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: The maddest part of it all,","msgtype":"m.text"},"ts":1550494023000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: is that jdm added the queue in Servo specifically for script/iframe issues.","msgtype":"m.text"},"ts":1550494035000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: we could probably create the nested browsing context from this queue, but it would require further tests","msgtype":"m.text"},"ts":1550503035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: would also be nice to understand why Chrome does that","msgtype":"m.text"},"ts":1550503050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: thanks for going down the rabbit hole though","msgtype":"m.text"},"ts":1550503070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: making a lot of progress over where we got to last time around","msgtype":"m.text"},"ts":1550503096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"♥️ yu guys for working on this","msgtype":"m.text"},"ts":1550503136000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: You are welcome! I just don’t want Servo to introduce yet another different behaviour. :)","msgtype":"m.text"},"ts":1550505097000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I meant that Servo introduced the queue to run scripts *because* it was causing issues that iframes could have their contentWindow be null","msgtype":"m.text"},"ts":1550505180000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That’s why Chrome not initialising they beforehand either surprised me.","msgtype":"m.text"},"ts":1550505198000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Them* sorry currently on my phone","msgtype":"m.text"},"ts":1550505211000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: did you run blame on that change and does it have any useful data?","msgtype":"m.text"},"ts":1550505298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: e.g., the code that somehow worked in Chrome yet did not in Servo","msgtype":"m.text"},"ts":1550505317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So I was on the Servo channel and I saw an issue about a refactoring for the \"deferred scripts\" in Servo,","msgtype":"m.text"},"ts":1550505360000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I didn't know \"deferred scripts\" were a thing because that was introduced last year when I was kidnapped to work on WebGL,","msgtype":"m.text"},"ts":1550505379000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I just assumed that the change was made to follow the behaviour of both Firefox and Chrome but clearly I was wrong about that.","msgtype":"m.text"},"ts":1550505403000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'll look up into it and ask jdm more details.","msgtype":"m.text"},"ts":1550505411000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I forgot who pointed me to Mode::Rfc2045 in WebKit's new MIME type parser (maybe Domenic?) but it seems like this is mostly harmless. It's considered deprecated and a way to find old callers that need yet to be migrated. Time will tell I suppose.","msgtype":"m.text"},"ts":1550505537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can't observe referrer policy without doing a request, right?","msgtype":"m.text"},"ts":1550509255000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: on vacation until Thursday, FYI. I'll merge the review draft things though.","msgtype":"m.text"},"ts":1550509342000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nox: think so","msgtype":"m.text"},"ts":1550509879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: thanks and good to know","msgtype":"m.text"},"ts":1550509890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So I can insert a script and a meta, and make a request from that script to observe referrer policy changes then.","msgtype":"m.text"},"ts":1550509933000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think so","msgtype":"m.text"},"ts":1550509964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: you might be able to reuse logic from referrer-policy/ tests btw","msgtype":"m.text"},"ts":1550510946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok!","msgtype":"m.text"},"ts":1550510961000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Found a bug in the spec I think.","msgtype":"m.text"},"ts":1550521158000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: \"If a source element is inserted as a child of a media element that has no src attribute and whose networkState has the value NETWORK_EMPTY, the user agent must invoke the media element's resource selection algorithm.\"","msgtype":"m.text"},"ts":1550521161000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"The resource selection algorithm for a media element is as follows. This algorithm is always invoked as part of a task,\"","msgtype":"m.text"},"ts":1550521174000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"First quote is not part of a task right?","msgtype":"m.text"},"ts":1550521189000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it is","msgtype":"m.text"},"ts":1550521614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh ok","msgtype":"m.text"},"ts":1550521634000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: queued by the parser or a task that runs some script","msgtype":"m.text"},"ts":1550521638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh right.","msgtype":"m.text"},"ts":1550521676000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: And should media.networkState ever be undefined?","msgtype":"m.text"},"ts":1550521678000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: perhaps we should remove that though as everything on the main thread is part of a task pretty much","msgtype":"m.text"},"ts":1550521683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: not sure, foolip would know","msgtype":"m.text"},"ts":1550521709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=6629","msgtype":"m.text"},"ts":1550521874000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: It'ss never the value undefined, always one of the enum integer values. But there may be cases where the spec doesn't make things unambiguously clear","msgtype":"m.text"},"ts":1550521881000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=6630 What am I doing wrong then?","msgtype":"m.text"},"ts":1550521926000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Err, without the confusing window named getter usage: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/6631","msgtype":"m.text"},"ts":1550521955000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"When working with HTML, it's easy to convert from HTML syntax to XML syntax by using DOMParser and XMLSerializer…but going from XML syntax to HTML syntax doesn't seem as straightforward. What's the correct way go about that? What should happen to namespaces?","msgtype":"m.text"},"ts":1550521960000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"nox: there is no <media> element, just <audio> and <video>","msgtype":"m.text"},"ts":1550527738000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I knew the explanation would be me extremely clueless about something 😂","msgtype":"m.text"},"ts":1550529939000,"senderName":"nox","senderId":"nox@irc"}
]