[
{"content":{"body":"TimothyGu: I see. Then I may attempt to do something similar for galimatias","msgtype":"m.text"},"ts":1620436920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Curious, has anyone suggested creating an API for getting a list of all html tag names a browser supports and the supported attributes of those built in tags?","msgtype":"m.text"},"ts":1620464485000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"You can have a <nonexistent-element with-non-existent=\"attribute\"> tag no problem. No browser will complain.","msgtype":"m.text"},"ts":1620464564000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"But that's not what people mean by \"supported\"","msgtype":"m.text"},"ts":1620464600000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I recently found the MDN compat data was saying Firefox supported textarea","msgtype":"m.text"},"ts":1620464636000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"textarea's wrap attribute, just because it had a getter/setter in the DOM","msgtype":"m.text"},"ts":1620464651000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"but the attribute did nothing","msgtype":"m.text"},"ts":1620464657000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Yeah, exactly. I wrote a small dom generation library a while ago and I essentially scraped the spec files and MDN for naive lists (of what I use more or less). That worked, but it's not that elegant. Looks like this: https://pastebin.com/t8yVHnPm (Ignore how naive it is, I know it can be written more robustly). Could imagine an API with tag names and attributes would simplify that of code. It's a rather niche use case though.","msgtype":"m.text"},"ts":1620465399000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"I get that it might be brittle on non-standard browsers.","msgtype":"m.text"},"ts":1620465399000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"What does it mean to support something, though?","msgtype":"m.text"},"ts":1620465503000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MDN compat tables are full of annotations like \"browser X supports this feature with so and so but not with so and so\"","msgtype":"m.text"},"ts":1620465504000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"If you want to overshoot (i.e. maybe count things as supported when they aren't), I'd check the class of an element when you construct it, and for attributes, check if they have DOM getters","msgtype":"m.text"},"ts":1620465815000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"but I believe there's some cases where you'll also undershoot","msgtype":"m.text"},"ts":1620465830000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I get what you mean. Maybe it would be better to specifically list out the tag names and their attributes in a static schema type format? This would stop browsers from having non-standard things listed when querying. I'm imagining a method on custom elements similar to observedAttributes that returned similar schema information.","msgtype":"m.text"},"ts":1620465835000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"I'm not only talking about non-standard things","msgtype":"m.text"},"ts":1620466019000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Even when the standard attempts to match the browsers as well as the browsers attempting to match the standards, there are differences.","msgtype":"m.text"},"ts":1620466066000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Firefox, for example, is taking many years to implement the standard's <dialog> element","msgtype":"m.text"},"ts":1620466082000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"or to ship it at least","msgtype":"m.text"},"ts":1620466092000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"and non-standard things can become standard, since WHATWG standards attempt to match browsers rather than \"writing fiction\"","msgtype":"m.text"},"ts":1620466155000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I don't see a static list of supported elements and attributes. But that's my two cents, someone else might disagree","msgtype":"m.text"},"ts":1620466249000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I wouldn't say it would be supported anymore. I'd go with a list defined in the spec only. The ones listed in the current element tables.","msgtype":"m.text"},"ts":1620466366000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"The element tables are for HTML authors, browsers don't care about them.","msgtype":"m.text"},"ts":1620466597000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"That doesn't mean they couldn't store and return them, of course, but why not get them from the spec if you need them?","msgtype":"m.text"},"ts":1620466598000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I fail to see a use case for this","msgtype":"m.text"},"ts":1620466605000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"yeah, this is seeming to be more niche than I thought. Even searching online only a handful of people have ever asked about this ever.","msgtype":"m.text"},"ts":1620466651000,"senderName":"Sirisian","senderId":"Sirisian@irc"},
{"content":{"body":"Again, if you need to know whether a browser supports an element or attribute, you can feature detect.","msgtype":"m.text"},"ts":1620466728000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Krinkle: Krinkle: Thanks for the useful information and the link. I'll ask MDN.","msgtype":"m.text"},"ts":1620477661000,"senderName":"harupiyo","senderId":"harupiyo@irc"}
]