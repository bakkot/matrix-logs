[
{"content":{"body":"Hixie, do you have any estimate for when you expect to complete acid 3?","msgtype":"m.text"},"ts":1198801080000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1198801081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still many tests to come up with","msgtype":"m.text"},"ts":1198801140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, I've noticed. I had a look at it last week to see how well Opera does","msgtype":"m.text"},"ts":1198801141000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"it's not too bad, but it certainly fails a lot","msgtype":"m.text"},"ts":1198801142000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"    String attrib = attribs.getQName(i);","msgtype":"m.text"},"ts":1198807440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"    if(attrib.startsWith(\"xmlns:\")) {","msgtype":"m.text"},"ts":1198807441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"        String space = attrib.substring(6);","msgtype":"m.text"},"ts":1198807442000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"        if(!space.equals(\"xsd\")) {","msgtype":"m.text"},"ts":1198807443000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"            ...","msgtype":"m.text"},"ts":1198807444000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Could I be forgiven for thinking that's not the optimal way to process XML namespaces?","msgtype":"m.text"},"ts":1198807445000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: that's some sad looking code","msgtype":"m.text"},"ts":1198807980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"As far as I can see, the code looks for <X3D xmlns:foo=\"[the X3D namespace URI]\"> (where <X3D> has exactly qname \"X3D\", assuming it's not nested inside another <X3D>, and where foo != \"xsd\") and after that point it converts <foo:bar> into <bar> before its normal element processing","msgtype":"m.text"},"ts":1198808280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which seems quite horrendously wrong","msgtype":"m.text"},"ts":1198808340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is xsd conventionally the prefix for something specific?","msgtype":"m.text"},"ts":1198809300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wondering why code would even check for that","msgtype":"m.text"},"ts":1198809301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"XML Schema","msgtype":"m.text"},"ts":1198809360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The code does 'if(attrib.equals(\"xsd:noNamespaceSchemaLocation\"))' to enable some extra processing or something","msgtype":"m.text"},"ts":1198809420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The X3D world seems unpleasantly confused about namespaces and DTDs and schemas and whatnot","msgtype":"m.text"},"ts":1198809540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"makes extra sure to remove font metric dependencies in Ahem3","msgtype":"m.emote"},"ts":1198825260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1198825261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Acid3","msgtype":"m.text"},"ts":1198825262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sigh, i still have so many tests to write and no idea what to do with them","msgtype":"m.text"},"ts":1198825800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"acid-style tests are overrated, imo. it's more meaningful to say \"Browser X passes the entire test suite for Y\" than \"Browser X passes Acid N\"","msgtype":"m.text"},"ts":1198825920000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"i agree","msgtype":"m.text"},"ts":1198826160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but try getting media attention for a test suite","msgtype":"m.text"},"ts":1198826220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1198828320000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"i can't believe that with basically no effort on my part, IE fails every test","msgtype":"m.text"},"ts":1198829160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i only targetted IE specifically for a couple of tests","msgtype":"m.text"},"ts":1198829220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders which tests","msgtype":"m.emote"},"ts":1198830060000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which test suite rather","msgtype":"m.text"},"ts":1198830061000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"acid3","msgtype":"m.text"},"ts":1198830240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.hixie.ch/tests/evil/acid/003/NOT_READY_PLEASE_DO_NOT_USE.html","msgtype":"m.text"},"ts":1198830300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you have any suggestions of what to test, btw, do let me know","msgtype":"m.text"},"ts":1198830301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, Safari seems to fail pretty hard","msgtype":"m.text"},"ts":1198830302000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i'm trying to make safari and moz fail","msgtype":"m.text"},"ts":1198830360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm especially interested in bugs that affect those browsers","msgtype":"m.text"},"ts":1198830361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well you already found the strange JS parsing forgiveness bug in FF","msgtype":"m.text"},"ts":1198830362000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"actually that's in the spec as far as i can tell","msgtype":"m.text"},"ts":1198830420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the fact that somehow it didn't barf at \"table.\" on a line by itself","msgtype":"m.text"},"ts":1198830421000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"oh that","msgtype":"m.text"},"ts":1198830422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah i need to add that back","msgtype":"m.text"},"ts":1198830423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"add that back!?","msgtype":"m.text"},"ts":1198830424000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"it's a bug in FF AFAICT","msgtype":"m.text"},"ts":1198830425000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1198830426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"need to catch it","msgtype":"m.text"},"ts":1198830427000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess.","msgtype":"m.text"},"ts":1198830428000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but are bugs in the js parser really relevant?","msgtype":"m.text"},"ts":1198830480000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"you'd have to load a separate JS file which you expected to fail to parse","msgtype":"m.text"},"ts":1198830481000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"eval baby","msgtype":"m.text"},"ts":1198830482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"G0k: Acid2 had all sorts of irrelevant stuff :)","msgtype":"m.text"},"ts":1198830483000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"G0k: yes, that's what i'm trying to test","msgtype":"m.text"},"ts":1198830484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"G0k: JS and DOM","msgtype":"m.text"},"ts":1198830485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mightn't you accidentally make the test incompatible with future ECMAScript version?","msgtype":"m.text"},"ts":1198830540000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"or extensions?","msgtype":"m.text"},"ts":1198830541000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1198830542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i try to avoid things i know will happen","msgtype":"m.text"},"ts":1198830600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"say so has anyone implemented the cross-document messaging thing?","msgtype":"m.text"},"ts":1198830660000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"you're using all sorts of CSS3 which we don't have yet :)","msgtype":"m.text"},"ts":1198830661000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"by \"all sorts\" I mean CSS3 selectors","msgtype":"m.text"},"ts":1198830662000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i'm only testing things that were in CR or better as of 2004","msgtype":"m.text"},"ts":1198830720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"G0k, Opera has","msgtype":"m.text"},"ts":1198830721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so at least 3 year old technologies","msgtype":"m.text"},"ts":1198830722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but Hixie changed the spec to make our impl incompatible with what's in the spec...","msgtype":"m.text"},"ts":1198830723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"everyone should have had time to implement them","msgtype":"m.text"},"ts":1198830724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: say i had an idea i wanted to discuss with you","msgtype":"m.text"},"ts":1198830780000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1198830781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so the dom event stream thing","msgtype":"m.text"},"ts":1198830782000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"just woke up, has time :)","msgtype":"m.emote"},"ts":1198830783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if Acid 3 will include SVG","msgtype":"m.emote"},"ts":1198830784000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"no, only DOM and JS stuff","msgtype":"m.text"},"ts":1198830785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so since there's been talk about throwing it out and most of the real suggested uses of the event stream stuff has been chat-style apps...","msgtype":"m.text"},"ts":1198830840000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"what about just specifying a DOM interface to XMPP or some other already existing messaging protocol?","msgtype":"m.text"},"ts":1198830841000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"xmpp would be particularly cool since it can be tunneled over HTTP and has a defined way of including XMLy stuff","msgtype":"m.text"},"ts":1198830900000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"good lord that would be obscenely complicated","msgtype":"m.text"},"ts":1198830901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"XMPP over HTTP","msgtype":"m.text"},"ts":1198830902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it already exists....","msgtype":"m.text"},"ts":1198830960000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"one of hte requirements is that you can implement this from scratch in perl or python with 10-20 lines of code","msgtype":"m.text"},"ts":1198830961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fully conforming","msgtype":"m.text"},"ts":1198830962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can implement an SQL database in 10-20 lines of perl or python, fully conforming?","msgtype":"m.text"},"ts":1198830963000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"by authors, i mean","msgtype":"m.text"},"ts":1198831020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for author technologies","msgtype":"m.text"},"ts":1198831021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"author-side, that is","msgtype":"m.text"},"ts":1198831022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yay for Acid3 crashing Safari :)","msgtype":"m.text"},"ts":1198831023000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1198831080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've been avoiding crash bugs","msgtype":"m.text"},"ts":1198831081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Doesn't crash Safari 3 on Windows","msgtype":"m.text"},"ts":1198831082000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"http://bugs.webkit.org/show_bug.cgi?id=16632","msgtype":"m.text"},"ts":1198831083000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"the inspector crashed","msgtype":"m.text"},"ts":1198831140000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i mean there's already lots of perl/python XMPP libs","msgtype":"m.text"},"ts":1198831141000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"by somehow causing us to go down an unsupported code path in our Image code","msgtype":"m.text"},"ts":1198831142000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"sending a message is easily a one liner","msgtype":"m.text"},"ts":1198831143000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"you are making the web dependent upon the XMPP protocol though, which does sound like overkill","msgtype":"m.text"},"ts":1198831200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess i just really really don't understand the point of inventing a new protocol here","msgtype":"m.text"},"ts":1198831320000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"there are so many network event style protocols....and instead we're taking the one that isn't (HTTP) and trying to beat it into submission","msgtype":"m.text"},"ts":1198831321000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"this one is over HTTP","msgtype":"m.text"},"ts":1198831380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and a lot simpler than XMPP","msgtype":"m.text"},"ts":1198831440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah but it has an installed base of very approximately zero, and basically no existing server-side APIs","msgtype":"m.text"},"ts":1198831500000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"i mean the beauty of it not \"needing\" an API because it's simple is cool","msgtype":"m.text"},"ts":1198831560000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"but how well is that going to scale?","msgtype":"m.text"},"ts":1198831561000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"other protocols are at least somewhat widely implemented","msgtype":"m.text"},"ts":1198831620000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"the main thing this needs for adoption is more client-side impl","msgtype":"m.text"},"ts":1198831680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but does it really do anything that, say, slow download XHR doesn't do already?","msgtype":"m.text"},"ts":1198831740000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"it requires less connections and is more convenient","msgtype":"m.text"},"ts":1198831860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can probably implement this on top of an <iframe> too, but it's not pretty","msgtype":"m.text"},"ts":1198831920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehe https://bugzilla.mozilla.org/show_bug.cgi?id=349255","msgtype":"m.text"},"ts":1198832100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, is acid3 affected at all if the user doesn't have Ahem installed?","msgtype":"m.text"},"ts":1198832160000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie, you could use Ahem as a downloadable font, using @fontface stuff from CSS2","msgtype":"m.text"},"ts":1198832280000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"that wasn't really a CR three years ago","msgtype":"m.text"},"ts":1198832340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok well my final argument is that XMPP can be implemented as a javascript library for non-supported UAs: http://zeank.in-berlin.de/jsjac/","msgtype":"m.text"},"ts":1198832700000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"which I think would be much harder for the event stream spec, at least as its written right now","msgtype":"m.text"},"ts":1198832701000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"Hixie: it would be nice if Acid3 would do a bit of logging :)","msgtype":"m.text"},"ts":1198832760000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"as in, if it displayed some sort of message for each failed test","msgtype":"m.text"},"ts":1198832761000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: Click the <h1>","msgtype":"m.text"},"ts":1198832762000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1198832763000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"*it's","msgtype":"m.text"},"ts":1198832820000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"is trying to figure out why buckets/result/intructions renders incorrect in WebKit","msgtype":"m.emote"},"ts":1198832880000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"thinks that somehow #result is supposed to be placing itself below <h1> and it's failign to do so correctly","msgtype":"m.emote"},"ts":1198833180000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"hmm, Hixie changed Acid3!","msgtype":"m.text"},"ts":1198833360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera renders it worse and fails more","msgtype":"m.text"},"ts":1198833361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, krijnh: yeah, but assertions with actual logs are much easier to debug. :)  I could point you towards our decent set of assertion functions for our JS tests if you like","msgtype":"m.text"},"ts":1198833600000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"is test 1 really fair? i mean isn't i possible that a DOM exists for PNG images that we just don't know about yet? :)","msgtype":"m.text"},"ts":1198833601000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"at least outputting the results to something other tan an alert would be more useful so the results could be copied and pasted","msgtype":"m.text"},"ts":1198833660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hmm, you can't copy alert text?","msgtype":"m.text"},"ts":1198833720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"btw, I dropped the advanced CSS value interfaces from the CSSOM","msgtype":"m.text"},"ts":1198833840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSS animations seem better suited than using ECMAScript, even with convenient APIs","msgtype":"m.text"},"ts":1198833841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, not in all browsers. Only in Opera.","msgtype":"m.text"},"ts":1198833900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"bah","msgtype":"m.text"},"ts":1198833901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"notes that the test URI is pretty clear about the state of the test, though","msgtype":"m.emote"},"ts":1198833902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You think so? :)","msgtype":"m.text"},"ts":1198833960000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"annevk: yeah, just hoping to provide some early feedback :)","msgtype":"m.text"},"ts":1198834020000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie, may I suggest that instead of a text/html MIME type you give that test a \"bogus\" MIME type?","msgtype":"m.text"},"ts":1198834021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, such as Content-Type:bogus","msgtype":"m.text"},"ts":1198834022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eeew","msgtype":"m.text"},"ts":1198834023000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie, because when we previously implemented proper support for MIME types and CSS loading it turned out Gecko didn't","msgtype":"m.text"},"ts":1198834080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and we broke a site","msgtype":"m.text"},"ts":1198834081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i mean.....DOM doesn't define how to not parse other documents","msgtype":"m.text"},"ts":1198834140000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"whereas recognizing an invalid mime type is indeed a good UA behavior","msgtype":"m.text"},"ts":1198834260000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"I mean this test: <link rel=\"stylesheet\" href=\"empty.css\"><!-- text/html file (should be ignored, <h1> will go red if it isn't) -->","msgtype":"m.text"},"ts":1198834261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohz","msgtype":"m.text"},"ts":1198834320000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"that is a tough one, since it's really bad behavior but i'm sure fixing that will break sites","msgtype":"m.text"},"ts":1198834380000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"well, Gecko does it in standards mode, but it only does it if the MIME type actually parses correctly","msgtype":"m.text"},"ts":1198834440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for some value of \"correctly\"","msgtype":"m.text"},"ts":1198834441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I believe it checks if \"/\" or \"\\\" occurs in the MIME type string...","msgtype":"m.text"},"ts":1198834442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if it were text/bogus, what would happen?","msgtype":"m.text"},"ts":1198834443000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"then it would not apply in Gecko","msgtype":"m.text"},"ts":1198834444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but if it was \"bogus\" it would","msgtype":"m.text"},"ts":1198834500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm. and what if it were omited?","msgtype":"m.text"},"ts":1198834501000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"if that...even makes snese","msgtype":"m.text"},"ts":1198834502000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"if Content-Type is not there it would also apply","msgtype":"m.text"},"ts":1198834503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in Gecko","msgtype":"m.text"},"ts":1198834504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we decided not to implement that and just ignore 404 URIs","msgtype":"m.text"},"ts":1198834560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which was the main problem","msgtype":"m.text"},"ts":1198834561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I'm not even sure if you want me filing these... :) but in case you wanted to know: http://bugs.webkit.org/show_bug.cgi?id=16636 http://bugs.webkit.org/show_bug.cgi?id=16637","msgtype":"m.text"},"ts":1198835220000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome, IE doesn't do proper DOM exceptions, Firefox does...","msgtype":"m.text"},"ts":1198835460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if so, then it seems that that test is in disagreement with the DOM Core 2 spec","msgtype":"m.text"},"ts":1198835520000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I think we emulated the e.SYNTAX_ERR stuff as well, but I'm not sure if it's supported by any spec","msgtype":"m.text"},"ts":1198835521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and since we auto-gen our dom interfaces from the IDLs, we just match the official IDL in this case","msgtype":"m.text"},"ts":1198835700000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I guess DOM Bindings / Web IDL should address this case","msgtype":"m.text"},"ts":1198835940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it doesn't already","msgtype":"m.text"},"ts":1198835941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grmbl, getComputedStyle and various other CSSOM APIs are really quite crap in terms of documentation, implementation, etc.","msgtype":"m.text"},"ts":1198839240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOM Level 2 Style is sort of like HTML4","msgtype":"m.text"},"ts":1198839241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lachy: in theory acid3 doesn't depend on fonts at all","msgtype":"m.text"},"ts":1198839300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i can't find a spec that defines how to handle Content-Type: bogus","msgtype":"m.text"},"ts":1198839600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I can't find a spec that defines that when <link rel=stylesheet href=test> returns Content-Type:text/html it can't be parsed as CSS","msgtype":"m.text"},"ts":1198839660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, I don't think it's acceptable for other browsers to fix that bug in a way that Firefox handles it","msgtype":"m.text"},"ts":1198839720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTTP section 7.2.1 paragraph 3 sentence 2 is what i'm basing the current test on","msgtype":"m.text"},"ts":1198839780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Content-Type: text/html is a given type, so sniffing is not allowed","msgtype":"m.text"},"ts":1198839840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but I can't see anything telling me whether Content-Type: bogus is a given type or not","msgtype":"m.text"},"ts":1198839841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so I could argue it both ways","msgtype":"m.text"},"ts":1198839842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it can't go in an acid test","msgtype":"m.text"},"ts":1198839843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, given that text Firefox behavior (apart form the quirky parsing) does make some sense, but still...","msgtype":"m.text"},"ts":1198839900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I rather ignore Content-Type algother and just honer 404 and such...","msgtype":"m.text"},"ts":1198839901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh i agree","msgtype":"m.text"},"ts":1198840020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1198840021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think we should ever treat a text/html file as a stylesheet","msgtype":"m.text"},"ts":1198840080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(except in quirks)","msgtype":"m.text"},"ts":1198840081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i agree that bogus should be treated like text/html","msgtype":"m.text"},"ts":1198840082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i just can't test it in the acid3 test","msgtype":"m.text"},"ts":1198840083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why would we want a quirks there?","msgtype":"m.text"},"ts":1198840140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not like we have any trouble doing this for <script> or <img>","msgtype":"m.text"},"ts":1198840141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there are lots of css files sent as not-text/css last i checked","msgtype":"m.text"},"ts":1198840142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have a lot of trouble, i just can't see any way to save it","msgtype":"m.text"},"ts":1198840200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with those two","msgtype":"m.text"},"ts":1198840201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem with css is that text/html files often end up containing CSS inline, and if you apply that to the other doc, it usually isn't what you meant to do","msgtype":"m.text"},"ts":1198840202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the only cases of that in wild are 404 docs","msgtype":"m.text"},"ts":1198840203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which you'd ignore anyway","msgtype":"m.text"},"ts":1198840260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Content-Type:bogus was actually used a on somewhat important website which is why Opera doesn't adhere to MIME types for CSS files","msgtype":"m.text"},"ts":1198840320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, 404 pages aren't always 404 Not Found","msgtype":"m.text"},"ts":1198840321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"witness the webstandards.org site recently","msgtype":"m.text"},"ts":1198840322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1198840323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd love to change the rules here","msgtype":"m.text"},"ts":1198840324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i just don't see that we can convince the httpwg to do so","msgtype":"m.text"},"ts":1198840380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and under that regime, the test is correct","msgtype":"m.text"},"ts":1198840381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i believe the HTTP WG doesn't care about \"error handling\"","msgtype":"m.text"},"ts":1198840382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that does seem to be the case","msgtype":"m.text"},"ts":1198840440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if we decide that the case of <link rel=stylesheet> pointing to a non text/css file is non-conforming but nevertheless must be treated as text/css they are probably happy","msgtype":"m.text"},"ts":1198840441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i doubt it very much","msgtype":"m.text"},"ts":1198840620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since that's not necessarily an error","msgtype":"m.text"},"ts":1198840621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"xslt, e.g.","msgtype":"m.text"},"ts":1198840622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"surely what's conforming for <link rel=stylesheet> is not up to them?","msgtype":"m.text"},"ts":1198840680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(this is probably stretching it)","msgtype":"m.text"},"ts":1198840681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not a matter of <link rel>","msgtype":"m.text"},"ts":1198840860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<link rel> is just one of several ways of including a stylesheet","msgtype":"m.text"},"ts":1198840861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"including @import, Link:, etc","msgtype":"m.text"},"ts":1198840862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as well as just direct access e.g. by an editor","msgtype":"m.text"},"ts":1198840863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone got IE?","msgtype":"m.text"},"ts":1198843140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3A%3Cscript%3Eif%20(true)%20function%20a()%20{%20document.write(%27FAIL%27)%20}%20a()%3B%3C%2Fscript%3E","msgtype":"m.text"},"ts":1198843141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does it say FAIL?","msgtype":"m.text"},"ts":1198843142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1198843260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, \":FAIL\"","msgtype":"m.text"},"ts":1198843320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, the test looks wrong to me. Why shouldn't it print \":FAIL\"?","msgtype":"m.text"},"ts":1198843440000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ES3 section 12.4","msgtype":"m.text"},"ts":1198843441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and 12.5","msgtype":"m.text"},"ts":1198843442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does that say you can't define functions within if() statements or something?","msgtype":"m.text"},"ts":1198843443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"somewhat","msgtype":"m.text"},"ts":1198843500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is it because function a() is out of scope when it's invoked?","msgtype":"m.text"},"ts":1198843501000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I don't think if/else blocks create a new scope","msgtype":"m.text"},"ts":1198843560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I think printing FAIL is correct behavior there","msgtype":"m.text"},"ts":1198843620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it's not, per spec. i think the spec should change though. (webkit is the only compliant browser at the moment)","msgtype":"m.text"},"ts":1198843680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually maybe not, due to lack of semicolon","msgtype":"m.text"},"ts":1198843740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"WebKit does something weird. It doesn't print \"FAIL\" for that test, but If you include the braces around the if block, then it does.","msgtype":"m.text"},"ts":1198843741000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"this should certainly print FAIL:","msgtype":"m.text"},"ts":1198843800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<!DOCTYPE html>:<script>if (true) { function a() { document.write('FAIL') }}; a();</script>","msgtype":"m.text"},"ts":1198843801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"function declarations are processed before execution","msgtype":"m.text"},"ts":1198843802000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Lachy: that's correct per spec","msgtype":"m.text"},"ts":1198843803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and have either function or global scope","msgtype":"m.text"},"ts":1198843804000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is the first version a syntax error?","msgtype":"m.text"},"ts":1198843805000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes, if you add braces it should parse","msgtype":"m.text"},"ts":1198843806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"without braces it's a syntax error per spec","msgtype":"m.text"},"ts":1198843807000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, I see","msgtype":"m.text"},"ts":1198843860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because of \"an ExpressionStatement cannot start with the function keyword because that might make it ambiguous with a FunctionDeclaration.\" ?","msgtype":"m.text"},"ts":1198843861000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"an if statement's condition is a statement, not a source element","msgtype":"m.text"},"ts":1198843862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a block is a valid statement","msgtype":"m.text"},"ts":1198843863000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but a function declaration is not","msgtype":"m.text"},"ts":1198843920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's a source element, but not a statement","msgtype":"m.text"},"ts":1198843921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, ok. now I understand","msgtype":"m.text"},"ts":1198843922000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so only webkit passes","msgtype":"m.text"},"ts":1198843923000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(and it's not an expression statement either, because that is disallowed)","msgtype":"m.text"},"ts":1198843924000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"good night all","msgtype":"m.text"},"ts":1198843925000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: How does adding braces change it? The contents of a BlockStatement are Statements, just like the tail of an if","msgtype":"m.text"},"ts":1198844820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hm, you are correct","msgtype":"m.text"},"ts":1198844940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But without the brackets it's an expressionstatement not a block isn't it?","msgtype":"m.text"},"ts":1198845060000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"No, it's invalid syntax in both cases","msgtype":"m.text"},"ts":1198845061000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"ExpressionStatement can't start with \"function\", and nothing else matches","msgtype":"m.text"},"ts":1198845120000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"sorry ... yes, I mean with brackets it would be a block.","msgtype":"m.text"},"ts":1198845180000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1198845181000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"and http://bclary.com/2004/11/07/#a-12.1 doesn't say blocks can't start with function declarations","msgtype":"m.text"},"ts":1198845240000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"It says a Block contains Statement, and that's the same place we were in with the if","msgtype":"m.text"},"ts":1198845241000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(well, StatementList)","msgtype":"m.text"},"ts":1198845242000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1198845300000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"It's not attractive code, though. As macie mentioned, function declarations are processed first, so it's either a) always add the function, regardless of if test failing or b) break with es3 behavior (this is more like let x = function(){})","msgtype":"m.text"},"ts":1198845360000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yeah what's sad is that the spec doesn't match realitty","msgtype":"m.text"},"ts":1198845420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so when http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Statements:function refers to function as a statement, is that a misnomer?","msgtype":"m.text"},"ts":1198845421000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1198845422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"webben: Yes and no","msgtype":"m.text"},"ts":1198845423000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"if any of you come up with anything for me to test, do let me know","msgtype":"m.text"},"ts":1198845424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1198845480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1198845481000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"webben: In spec terms, it's a SourceElement, which can be either a Statement or a function decl. But outside grammar parsing, calling it a statement makes for better text","msgtype":"m.text"},"ts":1198845482000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I'm curious what WebKit does, though. If they crash on the function statement, or on the function invocation","msgtype":"m.text"},"ts":1198845540000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: If it /can/ be a Statement, then can't it be the first statement in a block's statement list?","msgtype":"m.text"},"ts":1198846260000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"But it isn't a Statement in the grammar sense of the word","msgtype":"m.text"},"ts":1198846320000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"ah I see","msgtype":"m.text"},"ts":1198846380000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Dashiva: if (true) function a() {} is a parse error in webkit, so it fails at the declaration, not the invocation","msgtype":"m.text"},"ts":1198847700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"webkit accepts SourceElements in many places that technically require a StatementList, probably for compatibility reasons","msgtype":"m.text"},"ts":1198847820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm, is that fixed in ECMA4?","msgtype":"m.text"},"ts":1198847940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know","msgtype":"m.text"},"ts":1198848240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I can't find enough of a spec draft for ES4 to tell","msgtype":"m.text"},"ts":1198848300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess there is a grammar published so you can check that","msgtype":"m.text"},"ts":1198848301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The spec is still fragmented and wiki-dead and all that, I think","msgtype":"m.text"},"ts":1198848360000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"it doesn't really exist in a readable form; makes me wonder how they plan to finalize it next year","msgtype":"m.text"},"ts":1198848361000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1198848420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"crap, WebKit implemented getPropertyCSSValue","msgtype":"m.text"},"ts":1198848421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hope that's an internal API only","msgtype":"m.text"},"ts":1198848422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"someone sent me a link to an semi-officiall grammar though","msgtype":"m.text"},"ts":1198848423000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"./css/CSSStyleDeclaration.idl:        CSSValue           getPropertyCSSValue(in DOMString propertyName);","msgtype":"m.text"},"ts":1198848480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1198848481000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(is getPropertyCSSValue a bad thing?)","msgtype":"m.text"},"ts":1198848482000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://www.w3.org/mid/Pine.LNX.4.05.10310302134070.1173-100000⊙lif","msgtype":"m.text"},"ts":1198848483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grammar here: http://www.ecmascript.org/es4/spec/grammar.pdf","msgtype":"m.text"},"ts":1198848540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: is WebKit the only engine to implement the old CSSOM?","msgtype":"m.text"},"ts":1198848660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(that seems unlikely)","msgtype":"m.text"},"ts":1198848661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe Gecko has some bits of it","msgtype":"m.text"},"ts":1198848720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mozilla appears to have getPropertyCSSValue","msgtype":"m.text"},"ts":1198848721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and the CSSValue interface","msgtype":"m.text"},"ts":1198848722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(well, from searching their source code it seems that way)","msgtype":"m.text"},"ts":1198848780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"In Opera the method throws a NOT_IMPLEMENTED_ERR and in Gecko it always returns null","msgtype":"m.text"},"ts":1198848840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it won't be part of the next CSSOM if it's up to me","msgtype":"m.text"},"ts":1198848841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"div id=\"foo\" style=\"color: red\">x</div>","msgtype":"m.text"},"ts":1198848900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<script>","msgtype":"m.text"},"ts":1198848901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"var foo = document.getElementById(\"foo\");","msgtype":"m.text"},"ts":1198848902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"alert(document.defaultView.getComputedStyle(foo, \"\").getPropertyCSSValue(\"color\"));","msgtype":"m.text"},"ts":1198848903000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"</script>","msgtype":"m.text"},"ts":1198848904000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"does what I expect in Firefox 2","msgtype":"m.text"},"ts":1198848905000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(and Firefox 3 Beta 1)","msgtype":"m.text"},"ts":1198848960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's pretty likely some content depends on it, even more so that some content depends on the CSSValue interface and related interfaces","msgtype":"m.text"},"ts":1198849020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(it does return null in Firefox on foo.style though, which is certainly weird)","msgtype":"m.text"},"ts":1198849080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we haven't had a single bug report on not supporting it","msgtype":"m.text"},"ts":1198849140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and IE doesn't support it","msgtype":"m.text"},"ts":1198849141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does IE support getComputedStyle()?","msgtype":"m.text"},"ts":1198849142000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"fair point","msgtype":"m.text"},"ts":1198849143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we have had bug reports relating to getComputedStyle before (due to the fact that document.defaultView was originally not the same document as window)","msgtype":"m.text"},"ts":1198849200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, yeah, pages rely on getComputedStyle","msgtype":"m.text"},"ts":1198849201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess I can file a bug on WebKit and Gecko and see what happens","msgtype":"m.text"},"ts":1198849260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to remove getPropertyCSSValue?","msgtype":"m.text"},"ts":1198849261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1198849262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is CSSStyleDeclaration implemented on various objects btw that behave slightly different?","msgtype":"m.text"},"ts":1198849320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the reason to remove it?","msgtype":"m.text"},"ts":1198849321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that it has been obsoleted by the CSS WG","msgtype":"m.text"},"ts":1198849322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's not a good reason","msgtype":"m.text"},"ts":1198849323000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and that the API is awkward for the Web","msgtype":"m.text"},"ts":1198849324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that one, sadly, isn't either","msgtype":"m.text"},"ts":1198849325000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if anything we want something like .style.width.px","msgtype":"m.text"},"ts":1198849380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"neither of those is worth breaking content, even if it's Apple-only content like Dashboard widgets","msgtype":"m.text"},"ts":1198849381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"bloat would be another reason","msgtype":"m.text"},"ts":1198849382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd certainly be open to having a nicer CSS API in addition","msgtype":"m.text"},"ts":1198849383000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the CSSValue part of the API specifically is not a lot of code","msgtype":"m.text"},"ts":1198849440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i doubt anything relies on it, but you could be right","msgtype":"m.text"},"ts":1198849441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"getComputedStyle is the hard part, if anything","msgtype":"m.text"},"ts":1198849442000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(and CSS parsing)","msgtype":"m.text"},"ts":1198849443000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CSS parsing is madness","msgtype":"m.text"},"ts":1198849500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's better than HTML parsing :-)","msgtype":"m.text"},"ts":1198849501000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"always thought CSS was a simple language","msgtype":"m.emote"},"ts":1198849502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or JavaScript parsing","msgtype":"m.text"},"ts":1198849503000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"b\\000061ckground","msgtype":"m.text"},"ts":1198849560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or b\\061\\063kground","msgtype":"m.text"},"ts":1198849561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"escape sequences aren't particularly complicated to parse","msgtype":"m.text"},"ts":1198849680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(all handled by the lexer)","msgtype":"m.text"},"ts":1198849681000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1198849740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i probably don't get enough of the CSS grammar yet","msgtype":"m.text"},"ts":1198849800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not entirely clear to me what the intersection is of the appendix and the core grammar etc.","msgtype":"m.text"},"ts":1198849860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mozilla is not working anymore on getPropertyCSSValue per that CSS WG message","msgtype":"m.text"},"ts":1198850040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that's encouraging","msgtype":"m.text"},"ts":1198850041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(info from bugs in bugzilla)","msgtype":"m.text"},"ts":1198850042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it looks like ES4 does allow function definitions in blocks, but not in places that expect a single statement (as far as I can tell from the grammar)","msgtype":"m.text"},"ts":1198850100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(side note: we appear to have the UnknownRule interface too, but I dunno if that gets used by anything)","msgtype":"m.text"},"ts":1198850160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"UknownRule is incompatible with the CSS parser so that sounds interesting :)","msgtype":"m.text"},"ts":1198850280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the interface exists but nothing actually ever makes one","msgtype":"m.text"},"ts":1198850340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"to get back to my earlier question, to properly define CSSStyleDeclaration would I have to define two separate implementations of it?","msgtype":"m.text"},"ts":1198850520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one that is readonly and one that is read-write","msgtype":"m.text"},"ts":1198850521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and maybe there's also a computed / non-computed distinction?","msgtype":"m.text"},"ts":1198850522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably, yes","msgtype":"m.text"},"ts":1198850523000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we internally have CSSSMutableStyleDeclaration and CSSComputedStyleDeclaration classes","msgtype":"m.text"},"ts":1198850580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"they both implement the CSSStyleDeclaration interface but the Computed version either ignores or throws on all attempts at mutation (can't remember which)","msgtype":"m.text"},"ts":1198850640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Mozilla actually exposes the latter as interface name","msgtype":"m.text"},"ts":1198850641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it throws","msgtype":"m.text"},"ts":1198850642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"read bits of the source","msgtype":"m.emote"},"ts":1198850643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one of the larger problems with CSSValue and any kind of dedicated CSS API is that it's hard to make them scale","msgtype":"m.text"},"ts":1198850700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah, it would be nicer if there was a read-write interface inheriting from a read-only interface, not sure what the consequences of changing now would be","msgtype":"m.text"},"ts":1198850760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"at some point background-image could have returned CSSUrlValue","msgtype":"m.text"},"ts":1198850761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's probably not much risk of someone depending on existence of a method that always throws","msgtype":"m.text"},"ts":1198850762000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"now it needs to return a list","msgtype":"m.text"},"ts":1198850763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can I actually do that in IDL?","msgtype":"m.text"},"ts":1198850820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"inherit and modify members","msgtype":"m.text"},"ts":1198850821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"another option would to have separate interfaces where you simply don't have modifying stuff on one of them...","msgtype":"m.text"},"ts":1198850880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can inherit and add members","msgtype":"m.text"},"ts":1198850881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: peh! anyone on the HTTPbis mailing list is a member of the WG! Some people in the WG care about error handling :P","msgtype":"m.text"},"ts":1198850882000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but I dunno if it's praactically changeable at this point","msgtype":"m.text"},"ts":1198850883000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"probably easier to just spec computed styles as implementing the same interface but throwing on mutation","msgtype":"m.text"},"ts":1198850940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: SimplePie (another feed parser) has similar behaviour to UFP for text/xml as of the latest dev copy","msgtype":"m.text"},"ts":1198851000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it also uses content-type sniffing based on HTML 5.","msgtype":"m.text"},"ts":1198851060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Only real breakage is text/plain feeds","msgtype":"m.text"},"ts":1198851061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"othermaciej, yeah ok, it doesn't really matter either way I suppose","msgtype":"m.text"},"ts":1198851120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The other breakages have mainly been impl bugs","msgtype":"m.text"},"ts":1198851121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders how you're meant to deal with application/octet-stream","msgtype":"m.emote"},"ts":1198851240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the other annoying thing is that getComputedStyle does not return the computed style","msgtype":"m.text"},"ts":1198852200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<body style=width:20em> the computed style of 'width' is not 320px afaict","msgtype":"m.text"},"ts":1198852201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or without 'width' it should be auto","msgtype":"m.text"},"ts":1198852320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, I get back 1452px instead","msgtype":"m.text"},"ts":1198852321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"currentStyle in IE is much closer to giving back the computed style it seems","msgtype":"m.text"},"ts":1198852380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bah, updates to <style>.media.mediaText and presumably similar stuff has no effect","msgtype":"m.text"},"ts":1198858860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(for a normal persistent style sheet)","msgtype":"m.text"},"ts":1198858920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(haven't tested Safari)","msgtype":"m.text"},"ts":1198858980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually, IE7 does do updates but it does not have MediaList object...","msgtype":"m.text"},"ts":1198859040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in IE7 <style>.sheet.media is a simple string","msgtype":"m.text"},"ts":1198859041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(<style>.media above should've been <style>.sheet.media as well)","msgtype":"m.text"},"ts":1198859100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually, Opera seems to do dynamic updates too, but not always","msgtype":"m.text"},"ts":1198860300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and <style>.media is not updated after changes from <style>.sheet.media","msgtype":"m.text"},"ts":1198860360000,"senderName":"annevk","senderId":"annevk@irc"}
]