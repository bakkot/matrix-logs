[
{"content":{"body":"http://blog.mozilla.com/faaborg/2010/04/22/dont-talk-about-users/","msgtype":"m.text"},"ts":1277079120000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: we fought against the results of the 2004 workshop (and earlier decisions) as much as we could","msgtype":"m.text"},"ts":1277080440000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I hope you're not suggesting that no-one had the foresight to see that the W3C's detour down the XML road was a mistake","msgtype":"m.text"},"ts":1277080500000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i guess flock 3 beta can't play h.264","msgtype":"m.text"},"ts":1277090820000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"has anyone tested vp8 in flash 10.1?","msgtype":"m.text"},"ts":1277091480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"does flash 10.1 support vp*?","msgtype":"m.text"},"ts":1277092500000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"vp8?","msgtype":"m.text"},"ts":1277092501000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'd be surprised","msgtype":"m.text"},"ts":1277092502000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it was a \"will\" in May http://blogs.adobe.com/flashplatform/2010/05/adobe_support_for_vp8.html but I do not think it is the case now.","msgtype":"m.text"},"ts":1277092560000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"yay, minefield has -76","msgtype":"m.text"},"ts":1277093280000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"let's see how it fares on my tests","msgtype":"m.text"},"ts":1277093281000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm, they have .URL","msgtype":"m.text"},"ts":1277093460000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"websockets?","msgtype":"m.text"},"ts":1277093461000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1277093462000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"how does it fare on your tests?","msgtype":"m.text"},"ts":1277093520000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you should look over the handling of the opening handshake, most tests there fail","msgtype":"m.text"},"ts":1277093580000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"broken utf-8 in messages fail","msgtype":"m.text"},"ts":1277093581000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"87 passed out of 159","msgtype":"m.text"},"ts":1277093700000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"at least it doesn't crash like chrome","msgtype":"m.text"},"ts":1277093880000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/whatwg/20100603#l-706","msgtype":"m.text"},"ts":1277094060000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: hmm, so your tests aren't publish?","msgtype":"m.text"},"ts":1277094420000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"public?","msgtype":"m.text"},"ts":1277094421000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"not yet, no","msgtype":"m.text"},"ts":1277094480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i don't get any close event for invalid handshakes","msgtype":"m.text"},"ts":1277095080000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, hey that's exciting. not the missing close events, but -76 support","msgtype":"m.text"},"ts":1277095440000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim: yes","msgtype":"m.text"},"ts":1277095441000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"finds out about the lexical enviroment scope of event handlers","msgtype":"m.emote"},"ts":1277115000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wow, that's so much more screwed up than","msgtype":"m.text"},"ts":1277115001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought it was just the element's object.","msgtype":"m.text"},"ts":1277115002000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#event-handler-content-attributes  requires the form owner to be on the lexical scope","msgtype":"m.text"},"ts":1277121060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"WebKit does this, Gecko and Presto don't","msgtype":"m.text"},"ts":1277121061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders why it's needed","msgtype":"m.emote"},"ts":1277121062000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"WDIED?","msgtype":"m.text"},"ts":1277121120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dunno, don't have IE","msgtype":"m.text"},"ts":1277121121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"maybe we should allow xmlns:xlink on html elements?","msgtype":"m.text"},"ts":1277124060000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"SVG should just get native href/src already","msgtype":"m.text"},"ts":1277124180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's in the planning for quite a while now, at which point everything else will be moot","msgtype":"m.text"},"ts":1277124181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. so now what, the hybi decides to ignore all feedback that's sent to whatwg?","msgtype":"m.text"},"ts":1277124360000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I somewhat doubt Hixie agreed to all what that guy said","msgtype":"m.text"},"ts":1277124420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HyBi are moving so slowly they are in real danger of being irrelevant","msgtype":"m.text"},"ts":1277124421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"maybe the whatwg should declare that the hybi version is unofficial :)","msgtype":"m.text"},"ts":1277124480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"The best part about that email was how they declared that everyone had to move from the WHATWG mailing list to the IETF one but didn't actually CC the email to WHATWG","msgtype":"m.text"},"ts":1277124660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what's the upside of having hybi involved in Web Socket?","msgtype":"m.text"},"ts":1277124900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's somewhat unclear at this point","msgtype":"m.text"},"ts":1277124960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aiui","msgtype":"m.text"},"ts":1277124961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: sending emails to whatwg is counter productive","msgtype":"m.text"},"ts":1277125320000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham, yeah, noticed that too; wtf","msgtype":"m.text"},"ts":1277125380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: depends on the content of the emails :-)","msgtype":"m.text"},"ts":1277125680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: AFAICT the value proposition is that IETF has been around a long time. I'm not sure exactly what value that is bringing though","msgtype":"m.text"},"ts":1277125800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fails to see how having been around is a value proposition","msgtype":"m.emote"},"ts":1277125860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well that seems to be the major difference between IETF and WHATWG","msgtype":"m.text"},"ts":1277125861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I presume the value proposition that implies is having a preexisting concentration of expertise","msgtype":"m.text"},"ts":1277125980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not sure how that is panning out with websockets though","msgtype":"m.text"},"ts":1277125981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so far, I'm unimpressed by \"expertise\" value propositions around HTML5","msgtype":"m.text"},"ts":1277126040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan_, the IETF version already declares itself unoffical: \"NOTE!  THIS COPY OF THIS DOCUMENT IS OBSOLETE.\"","msgtype":"m.text"},"ts":1277127780000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"which i now see is mentioned in the latest email to HyBi","msgtype":"m.text"},"ts":1277127900000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"has any of the feedback from the HyBi working group been incorporated? some of it was quite good, in my opinion","msgtype":"m.text"},"ts":1277128020000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim: i see some hybi on the list of pending emails in http://www.whatwg.org/issues/#websocket","msgtype":"m.text"},"ts":1277128380000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"franksalim: i agree some feedback from hybi was good","msgtype":"m.text"},"ts":1277128440000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"bufferedAmount doesn't seem to work so well in chrome and firefox -- if i use variants of the bufferedAmount example in the spec, both chrome and firefox send lots of messages in the beginning while almost no messages at all after a short while","msgtype":"m.text"},"ts":1277131800000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"opera seems to more evenly send messages","msgtype":"m.text"},"ts":1277131860000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I think it's a bit sad there's been more time to consider the handshake feedback a little better","msgtype":"m.text"},"ts":1277132400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not having an HTTP-based handshake and integrating the handshake for TLS connections in the TLS layer would have been nicer I think","msgtype":"m.text"},"ts":1277132460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but getting there now seems rather hard","msgtype":"m.text"},"ts":1277132461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though I suppose yet one more change could be ok, if it happens quickly enough","msgtype":"m.text"},"ts":1277132462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, are you talking about next protocol negotiation in TLS?","msgtype":"m.text"},"ts":1277132880000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"the email from Adam Barth","msgtype":"m.text"},"ts":1277132940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think I would hate to write a server with that handshake","msgtype":"m.text"},"ts":1277132941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least I would expect it to be much harder","msgtype":"m.text"},"ts":1277132942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, there would be a far simpler handshake for non-TLS connections in my vision of how it ought to be...","msgtype":"m.text"},"ts":1277133000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, without all the HTTP crap","msgtype":"m.text"},"ts":1277133001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Different handshakes depending on the connection type? Sounds odd","msgtype":"m.text"},"ts":1277133002000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i think that is a good design, however http://tools.ietf.org/html/draft-agl-tls-nextprotoneg-00 is deployed almost precisely nowhere","msgtype":"m.text"},"ts":1277133003000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"and is in draft stage","msgtype":"m.text"},"ts":1277133004000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim, the \"it is in draft stage\" is how some W3C groups end up designing formats on top of XSL:FO rather than CSS","msgtype":"m.text"},"ts":1277133060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"franksalim, it's not really a compelling argument in my view :)","msgtype":"m.text"},"ts":1277133061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1277133062000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"\"it's deployed almost precisely nowhere\" is a good argument though","msgtype":"m.text"},"ts":1277133120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but one of the appeals of websocket, imho, is that it works with a lot of what we already have","msgtype":"m.text"},"ts":1277133121000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"we would need updated TLS libraries","msgtype":"m.text"},"ts":1277133122000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"and that means you wouldn't be able to do the nice little python/perl/* websocket servers","msgtype":"m.text"},"ts":1277133123000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"in a few dozen lines","msgtype":"m.text"},"ts":1277133124000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"but when nextprotoneg is everywhere, we can do websocket2 very easily","msgtype":"m.text"},"ts":1277133180000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"or not, since nextprotoneg everywhere probably implies SPDY","msgtype":"m.text"},"ts":1277133300000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"well, if TLS is going to be the dominant form as some people seem to indicate, it would be nice if it didn't require more roundtrips than needed","msgtype":"m.text"},"ts":1277133420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and for the real simple deployment scenario you can have a non-TLS handshake that is simpler than what we have now","msgtype":"m.text"},"ts":1277133480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: Where's your HTML5 default UA stylesheet?  Google isn't helpful right now.","msgtype":"m.text"},"ts":1277142180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Heyo","msgtype":"m.text"},"ts":1277142360000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"http://www.iecss.com/whatwg.css","msgtype":"m.text"},"ts":1277142361000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Excellent, thank you.","msgtype":"m.text"},"ts":1277142362000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm sure it could use some revisioning, but that's the one you guys reviewed most recently, based on our last conversations.","msgtype":"m.text"},"ts":1277142363000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Whatcha up to, TabAtkins?","msgtype":"m.text"},"ts":1277144160000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Someone on the CSS lists asked for an HTML5 UA stylesheet, is all.","msgtype":"m.text"},"ts":1277144161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, I was getting excited for new critisms and requests.","msgtype":"m.text"},"ts":1277144460000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Heh, nah.","msgtype":"m.text"},"ts":1277144461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*criticism","msgtype":"m.text"},"ts":1277144462000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yay, I'm glad the PDF announcement made its way to the chromium blog.  I hate not knowing what things are confidential and what things aren't.","msgtype":"m.text"},"ts":1277145900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"linky?","msgtype":"m.text"},"ts":1277145960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://blog.chromium.org/2010/06/bringing-improved-pdf-support-to-google.html","msgtype":"m.text"},"ts":1277145961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's awesome, TabAtkins.","msgtype":"m.text"},"ts":1277146260000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Does it actually use WebKit for rendering?","msgtype":"m.text"},"ts":1277146320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I dunno.","msgtype":"m.text"},"ts":1277146321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I somewhat doubt it, reasoning from some of the things I've heard about it.","msgtype":"m.text"},"ts":1277146380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yarr","msgtype":"m.text"},"ts":1277146440000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"Sock puppet!","msgtype":"m.text"},"ts":1277146441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can't see joins/quits/renames, and so doesn't know if this is a new Dashiva or the old one with a new name.","msgtype":"m.emote"},"ts":1277146442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's a new Dashiva","msgtype":"m.text"},"ts":1277146500000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"New and improved?","msgtype":"m.text"},"ts":1277146560000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"You tell us.","msgtype":"m.text"},"ts":1277146561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just thought I","msgtype":"m.text"},"ts":1277146620000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"would flag my new colors in the interest of openness and transparency","msgtype":"m.text"},"ts":1277146680000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"Does something like audio[controls] exist yet that would actually work, in Chrome or some other?","msgtype":"m.text"},"ts":1277146800000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"In terms of a selector, or a replacement, or what?","msgtype":"m.text"},"ts":1277146801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or an audio with controls?","msgtype":"m.text"},"ts":1277146802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I know <audio controls> works in Firefox, and I suspect in webkit and opera.","msgtype":"m.text"},"ts":1277146860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal, <audio controls=\"controls\"/> works.","msgtype":"m.text"},"ts":1277147520000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"HA HA, I AM USING THE XML SYNTHAX","msgtype":"m.text"},"ts":1277147580000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I meant in terms of the selector.","msgtype":"m.text"},"ts":1277147581000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"why shouldnt it ?","msgtype":"m.text"},"ts":1277147582000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Synthrax is like anthrax, only worse.","msgtype":"m.text"},"ts":1277147583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"afaik you can even make up selectors on the fly","msgtype":"m.text"},"ts":1277147584000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"attribute selectors, that is","msgtype":"m.text"},"ts":1277147585000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Indeed, you can.  You can select based on data-* attrs, fre.","msgtype":"m.text"},"ts":1277147640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<span lol=\"internet\">rofl</span> is matched by span[lol]","msgtype":"m.text"},"ts":1277147641000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Dashiva^2, new colors meaning Google?","msgtype":"m.text"},"ts":1277147642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, i am selecting based on RDFa","msgtype":"m.text"},"ts":1277147643000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"That works too.","msgtype":"m.text"},"ts":1277147644000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which is nice :3","msgtype":"m.text"},"ts":1277147645000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Okay, then our previous discussion this remains true, cool.","msgtype":"m.text"},"ts":1277147760000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk, yes","msgtype":"m.text"},"ts":1277147761000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"In the whatwg css file I had that.","msgtype":"m.text"},"ts":1277147762000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Dashiva^2, congrats","msgtype":"m.text"},"ts":1277147763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So if anything suddenly breaks, it","msgtype":"m.text"},"ts":1277147880000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"'s not my fault","msgtype":"m.text"},"ts":1277147881000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"Although I could blame it on this new and strange keyboard","msgtype":"m.text"},"ts":1277147882000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"Re: WYSIWYG editors using <em> instead of <i> at all times - \"That made me think of adopted foreign words, too, and how completely douchey your computer would sound reading out je nais c’est quoi or something with added emphasis, all like “Ooooh, look at me, I’m a computer and I speak French.”\"","msgtype":"m.text"},"ts":1277148300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1277148480000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I would be impressed","msgtype":"m.text"},"ts":1277148540000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"I was also using something like :section and :heading in that, not sure if that will ever be valid either.","msgtype":"m.text"},"ts":1277148541000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"http://github.com/wordpress/","msgtype":"m.text"},"ts":1277148720000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"this","msgtype":"m.text"},"ts":1277148721000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I WILL FORK NOW","msgtype":"m.text"},"ts":1277148722000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"and change all <em>s to <i>s.","msgtype":"m.text"},"ts":1277148723000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"If you liked it then you shoulda made a fork of it","msgtype":"m.text"},"ts":1277148724000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"THAT WILL TELL THEM.","msgtype":"m.text"},"ts":1277148725000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Dashiva^2, forking is the new poking.","msgtype":"m.text"},"ts":1277148780000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"hardcore forking action in progress.","msgtype":"m.text"},"ts":1277148840000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"HI I wanted to know that is there a javascript function that can read HTML as a binary safe string.... and dont say innerHTML that is not binary safe....","msgtype":"m.text"},"ts":1277148841000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"Are you sure binary safe is the phrase you mean?","msgtype":"m.text"},"ts":1277148900000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"trinary safe !","msgtype":"m.text"},"ts":1277148901000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"hey erlehmann, how about innerHTML!","msgtype":"m.text"},"ts":1277148960000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1277148961000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"i actually used that function.","msgtype":"m.text"},"ts":1277148962000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"once.","msgtype":"m.text"},"ts":1277148963000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I use it all the time, implicitly.","msgtype":"m.text"},"ts":1277148964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kpx: How is anything not binary safe? JS has no concept of binary data, only of Unicode.","msgtype":"m.text"},"ts":1277149020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well you are right, I meant \"Unicode\" safe actually.... ","msgtype":"m.text"},"ts":1277149140000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"kpx: In what way?","msgtype":"m.text"},"ts":1277149141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"kpx: Any string returned by DOM is nessisarily a Unicode string?","msgtype":"m.text"},"ts":1277149142000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: Yeah, I could totally write that America infobox without a table.  However, a table is the correct thing to use for the middle half of it.","msgtype":"m.text"},"ts":1277149143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: I was trying to save pages as in a data base as innerHTML and examining some of it... Turned out there was some data missing.... ","msgtype":"m.text"},"ts":1277149200000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"Receiving objects:   6% (4871/81182), 1.19 MiB | 4 KiB/s","msgtype":"m.text"},"ts":1277149201000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"How did data get from innerHTML to the database?","msgtype":"m.text"},"ts":1277149202000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"erlehmann: Hell yeah.","msgtype":"m.text"},"ts":1277149260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"this will take a while","msgtype":"m.text"},"ts":1277149261000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"gsnedders: web databases","msgtype":"m.text"},"ts":1277149262000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"gsnedders: Is that normal to actually loose some data? technically if you see it on the page and you save it it should be there....","msgtype":"m.text"},"ts":1277149320000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"I calculated a SHA1 of the data also","msgtype":"m.text"},"ts":1277149321000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"What exactly was missing?","msgtype":"m.text"},"ts":1277149380000,"senderName":"Dashiva^2","senderId":"Dashiva^2@irc"},
{"content":{"body":"Well some tags were entirely gone...Some chars were sometimes gone.... I think SQLite backend should store the Unicode data safely...","msgtype":"m.text"},"ts":1277149500000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"Weird...","msgtype":"m.text"},"ts":1277149501000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"That doesn't sound like an issue caused by unicode-related failures.","msgtype":"m.text"},"ts":1277149502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Well i am not processing the data at all","msgtype":"m.text"},"ts":1277149503000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"as in document.getElementsByTagName('HTML')[0].innerHTML and then insert that into a webdatabase BLOB column in a table...","msgtype":"m.text"},"ts":1277149560000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"Any ways if someone had such an issue and all then would appreciate if you let me know....","msgtype":"m.text"},"ts":1277149620000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"Shrug.  I dunno what the problem is, I'm just saying what I think the problem *isn't*.","msgtype":"m.text"},"ts":1277149621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1277149622000,"senderName":"kpx","senderId":"kpx@irc"},
{"content":{"body":"Try pushing the data into something else and seeing if the problem persists.","msgtype":"m.text"},"ts":1277149623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Try using TEXT and not BLOB?","msgtype":"m.text"},"ts":1277149680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"When defining classes in Python, do you really have to define a class before it can be used, even if it's defined later in the file?","msgtype":"m.text"},"ts":1277151120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, could you de-tablefy something like this?  http://en.wikipedia.org/wiki/Template:Protected_Areas_of_Colorado","msgtype":"m.text"},"ts":1277151540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, yes, of course you do.  In what language is that *not* the case?","msgtype":"m.text"},"ts":1277151541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Same with functions.","msgtype":"m.text"},"ts":1277151542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: You dont' need to in Lisp.  The object system is designed such that it will throw warning for unimplemented things, but then slot in the proper class references when you define them later.","msgtype":"m.text"},"ts":1277151780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: That looks like it should be a table too.","msgtype":"m.text"},"ts":1277151840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't get how that would work in a typical object-oriented language.  You might have a constructor, for instance, so how could you process $foo = new MyClass(); without knowing the definition for MyClass()?","msgtype":"m.text"},"ts":1277151841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Lisp is partly functional, and functional languages are weird like this.","msgtype":"m.text"},"ts":1277151842000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you try to *use* the class before it is defined, sure, it's a problem.","msgtype":"m.text"},"ts":1277151843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What are you trying to do?","msgtype":"m.text"},"ts":1277151844000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have a big batch of classes in a file.  I want to organize them in a particular logical order such that the more important classes are near the top, and the little helper classes are at the bottom.  But I can't do that, because the little classes are used by the important classes, and thus must come before them.","msgtype":"m.text"},"ts":1277151900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe it deliberately requires that earlier classes not use later classes, to avoid infinite loops?","msgtype":"m.text"},"ts":1277151960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's just as silly.  It's perfectly fine to have classes hold references to each other (other than the GC problems such causes).","msgtype":"m.text"},"ts":1277152020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do other totally-non-functional languages permit this kind of thing?","msgtype":"m.text"},"ts":1277152021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have no idea.  Lisp's object system *is* generally more advanced than most other languages'.","msgtype":"m.text"},"ts":1277152080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"discovers that he's supposed to spend like two hours going down to Courant and back to fill out some form . . . yay.","msgtype":"m.emote"},"ts":1277152081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Got to go, I guess.","msgtype":"m.text"},"ts":1277152082000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1277152083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, Lisp's object system is totally normal and not functional-polluted.  Lisp is a multi-paradigm language, and is perfectly happy integrating things like OO into it without having to do backflips to fit it into a functional mold.","msgtype":"m.text"},"ts":1277152260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Everyone else's object system is just weak and annoying, is all.","msgtype":"m.text"},"ts":1277152261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"grumps.","msgtype":"m.emote"},"ts":1277152262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You mean you don't love JS? :o","msgtype":"m.text"},"ts":1277153640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1277153641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Someone tweeted about my http://www.iecss.com/whatwg.css so I'd like to append some notes to it, especially about imaginary selectors that do not yet exist.  Anyone wanna help, chime in?","msgtype":"m.text"},"ts":1277154360000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"http://twitter.com/PageRankSEO/status/16710927231 is that you TabAtkins?","msgtype":"m.text"},"ts":1277154361000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: Javascript hoists the function definitions to the top of the scope so you don't have to define things in order there","msgtype":"m.text"},"ts":1277154420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But in python you can do all kinds of stuff like","msgtype":"m.text"},"ts":1277154421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"class Foo(Bar):","msgtype":"m.text"},"ts":1277154422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"  if baz:","msgtype":"m.text"},"ts":1277154480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    def __init__(self):","msgtype":"m.text"},"ts":1277154481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and so on)","msgtype":"m.text"},"ts":1277154482000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"  else:","msgtype":"m.text"},"ts":1277154483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"  def __init__(self):","msgtype":"m.text"},"ts":1277154484000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"      (some other stuff)","msgtype":"m.text"},"ts":1277154485000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not claiming that is really useful, but I have changed the metaclass based on whether logging is enabled by putting an if statement in the class body","msgtype":"m.text"},"ts":1277154600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dunno if this really interferes with the ability to lazily resolve symbols though","msgtype":"m.text"},"ts":1277154601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's also Joose, inspired by Moose, which was inspired by \"The Art of the Meta Object Protocol\" which in turn describes Lisp's CLOS :)","msgtype":"m.text"},"ts":1277154660000,"senderName":"broquaint","senderId":"broquaint@irc"},
{"content":{"body":"JonathanNeal: No, not me.  Dunno where that came from.  ^_^","msgtype":"m.text"},"ts":1277155080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: In Lisp all this talk of \"methods\" is silly.  You just have functions specialized on certain arguments.  You can certainly define different versions of a function in an if.","msgtype":"m.text"},"ts":1277155140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That said, Lisp certainly has \"methods\".  It reuses that name for functions specialized on their arguments.  ^_^)","msgtype":"m.text"},"ts":1277155200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal, what is \"img:complete\" ?","msgtype":"m.text"},"ts":1277155380000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"also \"video:metadata\" ?","msgtype":"m.text"},"ts":1277155381000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann, well complete is a state of img","msgtype":"m.text"},"ts":1277155560000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"loaded ?","msgtype":"m.text"},"ts":1277155561000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Yes, but someone told me it would be complete.","msgtype":"m.text"},"ts":1277155562000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"\"would be\" = \"has been proposed to be at least once on the CSS list\".","msgtype":"m.text"},"ts":1277155680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: you don't have to define classes in perl before you use them","msgtype":"m.text"},"ts":1277155920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: it's all late-dispatch","msgtype":"m.text"},"ts":1277155921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So Python's the stupid stepchild of dynamic languages here.","msgtype":"m.text"},"ts":1277155980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: you can even make a method that takes as an argument the name of the method that was called and have it dynamically make up the method as it goes","msgtype":"m.text"},"ts":1277155981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and even in typed languages you don't have to give the full definition -- e.g. in objectpascal so long as you declare that the identifier will be defined as a class later, you can use it as a class before it's defined","msgtype":"m.text"},"ts":1277155982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the compiler does two passes, one to get the types and then one to get the code, or something)","msgtype":"m.text"},"ts":1277156040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the simplest way to draw a line from one mouse point to anohter?","msgtype":"m.text"},"ts":1277156220000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"Use <canvas>?","msgtype":"m.text"},"ts":1277156280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh yeah meant using canvas...","msgtype":"m.text"},"ts":1277156281000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"TabAtkins, thank you for the correction.","msgtype":"m.text"},"ts":1277156340000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"These are the types of things I want to add in a notes section.","msgtype":"m.text"},"ts":1277156341000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Now that people are distributing it.","msgtype":"m.text"},"ts":1277156342000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: have the following","msgtype":"m.text"},"ts":1277156460000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"TabAtkins: the code seems to work, but on mouse up, and try to draw another line, the previous one is deleted","msgtype":"m.text"},"ts":1277156520000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"Yes, every time you draw to <canvas>, it's completely fresh.  If you want to keep the old lines around, you have to remember them and redrew them in the next draw step.","msgtype":"m.text"},"ts":1277156580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: You can bind any function to a class in python. Methods are just bound functions","msgtype":"m.text"},"ts":1277156581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or, um...","msgtype":"m.text"},"ts":1277156582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's wrong.  But anyway!  I suspect that's your issue.","msgtype":"m.text"},"ts":1277156583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: here is the complete code","msgtype":"m.text"},"ts":1277156640000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"http://pastebin.com/jqxZyqMV","msgtype":"m.text"},"ts":1277156641000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"jgraham: Hmm, I wonder if the problem is with Django, actually.","msgtype":"m.text"},"ts":1277156642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: What problem?","msgtype":"m.text"},"ts":1277156643000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In general it is a requirement that you declare things before you use them","msgtype":"m.text"},"ts":1277156644000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in python","msgtype":"m.text"},"ts":1277156700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Whereby it reports an error because one of my models uses another model declared later in the file.","msgtype":"m.text"},"ts":1277156701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what is the best way to remember all the lines drawn?","msgtype":"m.text"},"ts":1277156702000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"And so I have to order the classes in the file in a suboptimal way.","msgtype":"m.text"},"ts":1277156703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Possibly, yes","msgtype":"m.text"},"ts":1277156704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: You could split it into several smaller files, maybe","msgtype":"m.text"},"ts":1277156760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"LoneStar99: The problem is that clearRect() call you have.  It... clears the canvas every time you move the mouse.","msgtype":"m.text"},"ts":1277156761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Could, but that's even more trouble.","msgtype":"m.text"},"ts":1277156762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, with out \"clearRect()\"  the line draws like the following: http://admin.work.lonestarbeer.operaunite.com/file_sharing/content/funky.png","msgtype":"m.text"},"ts":1277156940000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"I can't connect to your computer there.","msgtype":"m.text"},"ts":1277156941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins:  is it still not working the link above?","msgtype":"m.text"},"ts":1277157540000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"i should be considered a hero http://github.com/erlehmann/wordpress/commit/f1d3dec90eb2ec18e973aa1e374ce78944a2fd68","msgtype":"m.text"},"ts":1277157600000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"LoneStar99: Yeah.  It keeps saying your computer is offline.","msgtype":"m.text"},"ts":1277157601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"LoneStar99: Are you drawing it in the mouseMove so that the user can see the line before clicking the second time?","msgtype":"m.text"},"ts":1277157660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok try this link http://freagair.com/RON/funky.png","msgtype":"m.text"},"ts":1277157720000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"Yeah, that's what I thought.","msgtype":"m.text"},"ts":1277157721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Everything is acting normally, then.  You're just doing it wrong.  ^_^","msgtype":"m.text"},"ts":1277157780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, you're drawing it in the mouseMove so that people can see the line before releasing their mouse and committing to a second point.","msgtype":"m.text"},"ts":1277157781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This means that, yes, you do indeed need to clear the canvas between draws and redraw the line, since you don't want the previous \"preview\" lines to persist.","msgtype":"m.text"},"ts":1277157782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But that means that, obviously, you're clearing the canvas, and thus have to redraw *everything* you want to persist.","msgtype":"m.text"},"ts":1277157840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So save the points of previous lines in an array or something and redraw them at every drawing step.","msgtype":"m.text"},"ts":1277157841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is the downside of immediate-mode graphics like <canvas>.  They have *no memory* of what's inside of them.  They're just a bag of dumb pixels.","msgtype":"m.text"},"ts":1277157900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins:  ok, makes sense....","msgtype":"m.text"},"ts":1277157960000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"If you want to manipulate lines by themselves without worrying about previous lines you've drawn, you want a retained-mode graphics.  That is, SVG.","msgtype":"m.text"},"ts":1277157961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"they kicked me out of #wordpress for this.","msgtype":"m.text"},"ts":1277157962000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1277157963000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"In SVG, you'd just create a <line> or whatever element on mousedown and adjust its attributes on mouseMove.  Then when they mousedown again, you're creating a new element, which doesn't interact with the old one.","msgtype":"m.text"},"ts":1277158020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"erlehmann: Hahaha.","msgtype":"m.text"},"ts":1277158021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can of course also render your stuff onto another off-screen canvas, update that one, then draw it onto the whole thing onto the visible one","msgtype":"m.text"},"ts":1277158022000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"(dirty rectangles etc)","msgtype":"m.text"},"ts":1277158023000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"TabAtkins, thats not funny.","msgtype":"m.text"},"ts":1277158024000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":";_;","msgtype":"m.text"},"ts":1277158025000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"TabAtkins:  so the only way is to save previous points, and redraw them right?","msgtype":"m.text"},"ts":1277158026000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"i'll go join the habari cabal right after gsoc. hello gsnedders.","msgtype":"m.text"},"ts":1277158080000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"True that, aho.  To clarify, you can use the visible canvas as \"scratch\", copying the hidden canvas at every redraw (rather than just clearing the canvas).  Then, when the user commits to a particular line, draw that final line to the hidden canvas.","msgtype":"m.text"},"ts":1277158081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That way the hidden canvas is only manipulated in an additive way, and never needs to be cleared, while the visible scratch canvas can be manipulated as much as you want.","msgtype":"m.text"},"ts":1277158140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://kaioa.com/k/ct/image_combine/index.html <- that renderToCanvas function creates such an off-screen canvas for example","msgtype":"m.text"},"ts":1277158141000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"wait i do not even know, where to apply.","msgtype":"m.text"},"ts":1277158142000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"then i'll probably have to hack my own blog system, using tinyldap, C and libowfat.","msgtype":"m.text"},"ts":1277158200000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: I recommend the latter.  Only build it on top of Markdown, like I'll do someday when I'm not lazy.","msgtype":"m.text"},"ts":1277158201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<3 Markdown.","msgtype":"m.text"},"ts":1277158202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins and aho -> thanks","msgtype":"m.text"},"ts":1277158260000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"TabAtkins, i'd probably use python anyway.","msgtype":"m.text"},"ts":1277158261000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"TabAtkins:  this is the orginal code sample http://devfiles.myopera.com/articles/649/example5.html","msgtype":"m.text"},"ts":1277158380000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"That seems to work fine now.","msgtype":"m.text"},"ts":1277158440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it works, fine on the browser, but not in \"mobile app\"","msgtype":"m.text"},"ts":1277158441000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"You think a data uri cache.manifest file would work?","msgtype":"m.text"},"ts":1277158560000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: Do cache manifests have any sort of origin restrictions?","msgtype":"m.text"},"ts":1277158620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Remember that data uris are automatically unique-origin.)","msgtype":"m.text"},"ts":1277158621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1277158622000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Then, presumably, no, it wouldn't.","msgtype":"m.text"},"ts":1277158623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmmm true.. though data uri fonts are allowed in FF where cross origin fonts are not.","msgtype":"m.text"},"ts":1277158680000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"thinks we need more exceptions for places where data uris are same-origin as the embedding page.","msgtype":"m.emote"},"ts":1277158681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"paul_irish: Probably a bug.  ^_^","msgtype":"m.text"},"ts":1277158682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Def.","msgtype":"m.text"},"ts":1277158683000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"TabAtkins: how would you recommend making the dynamic array to keep previous \"x, y\" values?","msgtype":"m.text"},"ts":1277159520000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"LoneStar99: By... making an array?  Something on a long-lived object storing [x,y] pairs?  Just push the final [x,y] onto the array on every mouseUp.","msgtype":"m.text"},"ts":1277159580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok thanks","msgtype":"m.text"},"ts":1277159640000,"senderName":"LoneStar99","senderId":"LoneStar99@irc"},
{"content":{"body":"TabAtkins, Hixie: looks like PHP also doesn't mind \"$x = new A(); class A {...}\".","msgtype":"m.text"},"ts":1277160300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It runs the constructor and everything.","msgtype":"m.text"},"ts":1277160301000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh well, Python is picky.","msgtype":"m.text"},"ts":1277160302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Excellent.","msgtype":"m.text"},"ts":1277160360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It seems PHP just reads the whole file before it actually executes anything.","msgtype":"m.text"},"ts":1277160361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"This delays three seconds, prints \"1\\n2\\n\", then delays another three seconds: (echo '<?php echo \"1\\n\";'; sleep 3; echo 'echo \"2\\n\"; sleep(3);') | php","msgtype":"m.text"},"ts":1277160480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(second delay to ensure that it's not just buffering output)","msgtype":"m.text"},"ts":1277160481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"can't think of any serious languages that don't read the whole file before actually executing anything","msgtype":"m.emote"},"ts":1277160660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I assume \"serious languages\" is intended to exclude shells.  :)","msgtype":"m.text"},"ts":1277160661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes, and BASICs","msgtype":"m.text"},"ts":1277160720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I see the same behavior in Python.  Don't really know any other interpreted languages to test in.","msgtype":"m.text"},"ts":1277160780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why do they read the whole file first?","msgtype":"m.text"},"ts":1277160960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For PHP, one reason is so they can run any require()s immediately.","msgtype":"m.text"},"ts":1277160961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't see why that would be necessary, if you actually executed statements in order.","msgtype":"m.text"},"ts":1277161020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Clearly PHP executes statements out of order, so of course it has to read the whole file first.","msgtype":"m.text"},"ts":1277161021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"require()s fire even if they're in a non-executed path.","msgtype":"m.text"},"ts":1277161022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if(false) { require \"foo\" }, frex, still requires and runs \"foo\".","msgtype":"m.text"},"ts":1277161023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But the code in the file you fetch doesn't actually execute, I assume.","msgtype":"m.text"},"ts":1277161024000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I think the issue with Python is that class definitions are just code that's executed at runtime and bind to the class name, so if you have code that executes earlier then it hasn't been bound yet)","msgtype":"m.text"},"ts":1277161080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It... might?","msgtype":"m.text"},"ts":1277161081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: Correct, Python's just not being smart enough about the binding.  You don't actually *need* a class there until you actuall interact with the object, you just need a handle.  Good object systems let you attach classes to that handle later.","msgtype":"m.text"},"ts":1277161140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It's fine to refer to classes that aren't syntactically earlier in the file, they just have to be dynamically earlier in runtime else you get a NameError when trying to use them)","msgtype":"m.text"},"ts":1277161141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Python has a weird object system.","msgtype":"m.text"},"ts":1277161142000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: How could it be smarter? Before it's executed the class definition, there is nothing it could reasonably bind to","msgtype":"m.text"},"ts":1277161143000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: You tell me.  Tons of other dynamic languages get it right.","msgtype":"m.text"},"ts":1277161200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Python lets you do 'print 1; class C: print 2; if thing_with_side_effects(): def method(): etc'","msgtype":"m.text"},"ts":1277161260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and the code inside the class C definition gets executed after the first print statement","msgtype":"m.text"},"ts":1277161261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1277161262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can define classes conditionally in PHP, and it seems to work out.","msgtype":"m.text"},"ts":1277161263000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And in Lisp, and in Perl, and in...","msgtype":"m.text"},"ts":1277161264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Other languages either work in effectively the same way (it's a runtime error if you use a class name that hasn't been bound), or are much more static (the class definitions can be extracted without executing the code)","msgtype":"m.text"},"ts":1277161320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, by the way, <http://en.wikipedia.org/wiki/Template:Protected_Areas_of_Colorado> is semantically a table, but not semantically a table in a table in a table.  :)","msgtype":"m.text"},"ts":1277161321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Philip`, I'm guessing that at least in PHP, it's not a runtime error if you use a class that hasn't been bound, as long as the class isn't defined conditionally.","msgtype":"m.text"},"ts":1277161380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1277161381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Oh god, I didn't actually look at the markup.","msgtype":"m.text"},"ts":1277161440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a;sldhfa;kljg;a","msgtype":"m.text"},"ts":1277161441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dies from the bad markup.","msgtype":"m.emote"},"ts":1277161442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For real?  Entire *rows* sacrificed on the black alter of *creating cell spacing*?  What. The. Fuck.","msgtype":"m.text"},"ts":1277161500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"$ echo '<?php $x = new C(); class C { function __construct() { echo \"success\\n\"; } }' | php","msgtype":"m.text"},"ts":1277161501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"success","msgtype":"m.text"},"ts":1277161502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"$ echo '<?php $x = new C(); if (true) { class C { function __construct() { echo \"success\\n\"; } } }' | php","msgtype":"m.text"},"ts":1277161503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"PHP Fatal error:  Class 'C' not found in - on line 1","msgtype":"m.text"},"ts":1277161504000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Philip`, ^^","msgtype":"m.text"},"ts":1277161505000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, do you think it could be rewritten to not be insane and still look basically the same in all browsers?  There's a discussion right now on wikitech-l about this.","msgtype":"m.text"},"ts":1277161560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Cool, so PHP does some analysis on the source to find classes that it knows it'll be able to define.","msgtype":"m.text"},"ts":1277161561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: Yes, I'm quite certain of this.","msgtype":"m.text"},"ts":1277161562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://lists.wikimedia.org/pipermail/wikitech-l/2010-June/048147.html","msgtype":"m.text"},"ts":1277161563000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's an absolutely basic use of colspan and <th>.","msgtype":"m.text"},"ts":1277161564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: You want me to produce something for you?","msgtype":"m.text"},"ts":1277161620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: By \"Cool\" I assume you mean \"That's totally hideous\"","msgtype":"m.text"},"ts":1277161621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, I dunno if there's any point.  Some enwiki sysop would have to get interested if it's going to get adopted.","msgtype":"m.text"},"ts":1277161800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hakon already proposed a div-based infobox thing, but basically got ignored.","msgtype":"m.text"},"ts":1277161801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(although his didn't degrade that well in IE6/7)","msgtype":"m.text"},"ts":1277161802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Well, just let me know.  It's just a few minutes to put together a non-disgusting version of that box.","msgtype":"m.text"},"ts":1277161803000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(...though maybe it's no worse than e.g. Java where class definitions can define any one of about six things depending on whether it's in the top-level scope or in a class or in an expression and whether it's static or not)","msgtype":"m.text"},"ts":1277161860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, hmm.  Looks like it's actually generated by a horrifyingly complicated template.","msgtype":"m.text"},"ts":1277161920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, it's done as a navbox in a navbox.","msgtype":"m.text"},"ts":1277162040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At the very least, you could change the navbox template to use ordinary tables and @cellspacing or whatever, rather than empty <tr>.","msgtype":"m.text"},"ts":1277162220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Either changing to a new template that allowed nested groups natively, or having the template generator look for nested navboxes and interpret it correctly, would let you do even better.","msgtype":"m.text"},"ts":1277162280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As a bonus, all of the greens would line up, rather than the second column being as wide as each group like it is now, since each group is a separate table.","msgtype":"m.text"},"ts":1277162340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Actually, I don't understand who the navbox ended up being a table-in-a-table.  The outer table only has a single cell, and it appears its only purpose is to put a border on the navbox.","msgtype":"m.text"},"ts":1277162580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/who/how/","msgtype":"m.text"},"ts":1277162581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it's because it uses this: http://en.wikipedia.org/w/index.php?title=Template:Navbox&action=edit","msgtype":"m.text"},"ts":1277162582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And probably anyone who actually understands how that works is so thoroughly insane that they can't help with it much.","msgtype":"m.text"},"ts":1277162583000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh god.","msgtype":"m.text"},"ts":1277162640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Protip: wikitext is a horrible, horrible language.","msgtype":"m.text"},"ts":1277162641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wish I didn't have to know that.","msgtype":"m.text"},"ts":1277162700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm going to go with \"someone who didn't know what they were doing hacked it together first, and wikitext is writeonly enough that noone ever improved it\".","msgtype":"m.text"},"ts":1277162760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus there's the small fact that it's used on millions of pages, and if you edit templates like that very often, sysadmins tend to get very annoyed at you.","msgtype":"m.text"},"ts":1277162820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Pfft.","msgtype":"m.text"},"ts":1277162821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(and like, maybe, delete the template)","msgtype":"m.text"},"ts":1277162822000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(that happened once on the Italian Wikipedia, IIRC)","msgtype":"m.text"},"ts":1277162823000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Plus of course, since it's used on so many pages, it's protected so only sysops can edit it.","msgtype":"m.text"},"ts":1277162824000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Was wikipedia invented before the days of JSON?  At least that sort of kv pairing is easier to read.","msgtype":"m.text"},"ts":1277163180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hates when data formats invent new ways to pair keys and values.","msgtype":"m.emote"},"ts":1277163240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"json wasn't invented, it was discovered :>","msgtype":"m.text"},"ts":1277163420000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I have no conclusive evidence that JSON wasn't transcribed from an obelisk found on one of Saturn's moons, but that's irrelevant to whether or not wikipedia was created before or after the sacred event.","msgtype":"m.text"},"ts":1277163480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wikipedia was launched on January 15, 2001.","msgtype":"m.text"},"ts":1277163600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"JSON was used at State Software in 2001. The JSON.org website was launched in 2002.","msgtype":"m.text"},"ts":1277163601000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"<:","msgtype":"m.text"},"ts":1277163602000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Although that used preexisting software.","msgtype":"m.text"},"ts":1277163603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"MediaWiki was a couple years later.","msgtype":"m.text"},"ts":1277163604000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(json also didn't became popular right away)","msgtype":"m.text"},"ts":1277163660000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"The real problem is that the language is meant to be a simple declarative thing, not an actual programming language.","msgtype":"m.text"},"ts":1277163720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"We could make it an actual programming language, but then performance would be even more horrifyingly terrible, since Wikipedia editors have no idea how to code.","msgtype":"m.text"},"ts":1277163780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, they'd probably write programs that are just as baroque and unmaintainable.","msgtype":"m.text"},"ts":1277163781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes.  Filling in a template using wikitext is only slightly horrifying.  Actually *implementing* a template with wikitext is getting to r'lyeh levels.","msgtype":"m.text"},"ts":1277163840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, one of the proposals that gets floated is to use Lua or something.  But then we'd lose compatibility with typical shared hosts, which we don't want to do.","msgtype":"m.text"},"ts":1277164020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Lua seems an odd choice.  Python is much more widely supported, if you don't want to move to the ubiquitous choice of PHP.","msgtype":"m.text"},"ts":1277164200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It would need to support robust sandboxing, since this would be untrusted code.  Apparently Lua does that natively.","msgtype":"m.text"},"ts":1277164380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ah, true.","msgtype":"m.text"},"ts":1277164440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I imagine that a language *designed* to be an embedded scripting language running untrusted code would do so.","msgtype":"m.text"},"ts":1277164441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]