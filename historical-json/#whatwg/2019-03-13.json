[
{"content":{"body":"annevk: found this old related issue https://github.com/whatwg/html/issues/2579","msgtype":"m.text"},"ts":1552440333000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: where does the fetch spec normatively state the requirement that CORS requests can only have the http/https protocol scheme?","msgtype":"m.text"},"ts":1552474528000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: in main fetch it might be somewhat implicitly stated","msgtype":"m.text"},"ts":1552475547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I’d be interested in learning more about the issues with squashing","msgtype":"m.text"},"ts":1552475599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: ^^","msgtype":"m.text"},"ts":1552475605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah thinking about it more I realize that the protocol can‘","msgtype":"m.text"},"ts":1552475830000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1552475835000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*can’t work unless the response can include HTTP headers","msgtype":"m.text"},"ts":1552475875000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well, Fetch does have this abstraction where all responses have headers and such","msgtype":"m.text"},"ts":1552476611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: so assuming there's some suitable mapping, it's all good","msgtype":"m.text"},"ts":1552476623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: but Fetch also safelists schemes, so it's not all good","msgtype":"m.text"},"ts":1552476652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see. But there’s no way for a non-HTTP(S) server to add an Access-Control-Allow-Origin response header to a response, right? So regardless of the abstraction the spec, and non-HTTP(S) server can’t use the CORS protocol (to get browsers to relax the same-origin policy), right?","msgtype":"m.text"},"ts":1552477940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: is this theoretical or practical?","msgtype":"m.text"},"ts":1552478384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: practical; part of the context is, until today the MDN article on XHR contained a statement saying that ftp URLs could be used with the XHR API","msgtype":"m.text"},"ts":1552478882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I removed that. But it occured to me that it would be helpful to have a clear explanation of why ftp requests can’t be made cross-orgin","msgtype":"m.text"},"ts":1552478988000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think that's technically possible though","msgtype":"m.text"},"ts":1552479063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: if you get an ftp response sniffed as an HTML document that could then execute script to fetch something from the same server","msgtype":"m.text"},"ts":1552479082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: no CORS needed","msgtype":"m.text"},"ts":1552479088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(now some of these things might have gotten restricted over the years, I'm not exactly sure where we are at with FTP deprecation)","msgtype":"m.text"},"ts":1552479131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that BarProp thing turns out to be a gigantic nerd-snipe","msgtype":"m.text"},"ts":1552479154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see. But nowadays CORB would anyway block an ftp response sniffed as an HTML document, right? So in practice it seems the gist of is that a cross-origin ftp request is just not gonna work in modern browsers ー though I guess maybe it could still work in some older browsers","msgtype":"m.text"},"ts":1552479539000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: For smaller PRs, I don't think squashing is a major concern, but once features become larger, loss of history once they get merged can be a problem. I know jyasskin was worried about that when it comes to SXG and Fetch integration","msgtype":"m.text"},"ts":1552479588000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"MikeSmith: I don't see why CORB would be at play here","msgtype":"m.text"},"ts":1552479823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: there's something to that concern, I suspect","msgtype":"m.text"},"ts":1552479869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: in such cases we've used pointers to the incubation repo in the past","msgtype":"m.text"},"ts":1552479949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sure, but if all incubation happens on someone's Fetch repo GH fork, that's a bit weird","msgtype":"m.text"},"ts":1552481369000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Is there a way for incubation to happen elsewhere without monkeypatching? I was thinking we could land hooks into the various related algorithms before we have consensus, and then be able to keep the logic in a separate doc, while not putting any processing into the WHATWG spec that don't have 2 vendor agreement","msgtype":"m.text"},"ts":1552481740000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"That doesn't sound acceptable to me","msgtype":"m.text"},"ts":1552482264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what part of it doesn't sound acceptable? Adding the hooks?","msgtype":"m.text"},"ts":1552488996000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yeah, that's not materially different to a change to the standard","msgtype":"m.text"},"ts":1552489113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav/annevk: I'm missing some context here, but guessing: I was worried about maintaining SXG's fetch integration as a PR because it's just difficult to maintain long-lived topic branches, both because of merges and because I want review for changes to the fetch integration.","msgtype":"m.text"},"ts":1552492900000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Losing the history after the merge wasn't my primary concern, and actually, that history's more likely to get lost from a monkeypatch merge than a long-lived PR merge.","msgtype":"m.text"},"ts":1552492904000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: Unrelated, our loading team is looking at implementing Bundles, but I haven't yet 1) finished what I think will be the final format or 2) written down how it integrates with Fetch and Service Workers. Clearly we won't *ship* before those are done, but how sad is it going to make Mozilla if we *implement* early?","msgtype":"m.text"},"ts":1552493830000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: ship is what folks care about afaik","msgtype":"m.text"},"ts":1552494014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks.","msgtype":"m.text"},"ts":1552494025000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Unicode might move to GitHub? Or only CLDR?","msgtype":"m.text"},"ts":1552495670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav/annevk: Oh! I've found the email: https://groups.google.com/a/chromium.org/d/msg/blink-dev/rspPrQHfFkI/B5vWGNhvCQAJ. I think the question of whether not-yet-merged features should live in PRs or in monkeypatches in a separate specification document, is orthogonal to the main question in that thread, which seems to be about when to ship at all.","msgtype":"m.text"},"ts":1552496852000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: Ignoring the political question of when to ship, I think I'm making the right tradeoff in https://wicg.github.io/webpackage/loading.html to let us review changes as we refine the design.","msgtype":"m.text"},"ts":1552497267000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: I don't think we can remove global object reuse","msgtype":"m.text"},"ts":1552508349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was hoping minimize the number of cases it shows up, e.g., maybe for iframes","msgtype":"m.text"},"ts":1552508367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for window.open(\"/common/blank.html\") I'm pretty sure the document changes and the global stays the same","msgtype":"m.text"},"ts":1552508374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I see","msgtype":"m.text"},"ts":1552508377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it's debatable whether minimizing in the way I propose makes things more or less complex","msgtype":"m.text"},"ts":1552508401000,"senderName":"Domenic","senderId":"Domenic@irc"}
]