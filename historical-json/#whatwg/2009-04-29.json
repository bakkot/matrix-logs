[
{"content":{"body":"i really wish Kristof could quote context","msgtype":"m.text"},"ts":1240964100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i never have any idea wtf his e-mails are about","msgtype":"m.text"},"ts":1240964101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: yt?","msgtype":"m.text"},"ts":1240982040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yep","msgtype":"m.text"},"ts":1240982041000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: in webidl you have the following example:","msgtype":"m.text"},"ts":1240982042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"map[1] = false;","msgtype":"m.text"},"ts":1240982043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...which sets a property named \"1\"","msgtype":"m.text"},"ts":1240982044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what happens if the indexed properties are automatically set from 0..length-1","msgtype":"m.text"},"ts":1240982100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and you set map[0] = true;","msgtype":"m.text"},"ts":1240982101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then fetch map[0]","msgtype":"m.text"},"ts":1240982102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you see what i mean","msgtype":"m.text"},"ts":1240982103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry, i'm not expressing myself well","msgtype":"m.text"},"ts":1240982104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry i didn't understand :)","msgtype":"m.text"},"ts":1240982160000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: the concern comes from the Storage object, where you can get the keys by index, and then index into the keys to get the values","msgtype":"m.text"},"ts":1240982161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: there is a clash if someone sets the key \"0\" and then fetches the property \"0\" -- it'll return \"0\" because that's the name of the key","msgtype":"m.text"},"ts":1240982162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then if you fetch the property \"0\", you'll still just get \"0\", not the value of the key \"0\"","msgtype":"m.text"},"ts":1240982163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because the keys and the indexes are in the same namespace","msgtype":"m.text"},"ts":1240982220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm wondering whether to ban numeric keys to get around this","msgtype":"m.text"},"ts":1240982221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or to just say \"tough\"","msgtype":"m.text"},"ts":1240982222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, i see what you mean now","msgtype":"m.text"},"ts":1240982223000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"perhaps that isn't good design to have numeric values also be valid key names","msgtype":"m.text"},"ts":1240982224000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1240982280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and to have the property getting be the way to access both key name and key value","msgtype":"m.text"},"ts":1240982281000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"what syntax should i disallow?","msgtype":"m.text"},"ts":1240982282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[1-9][0-9]* ?","msgtype":"m.text"},"ts":1240982283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"um","msgtype":"m.text"},"ts":1240982284000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i *think*","msgtype":"m.text"},"ts":1240982340000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"as in, indexes matching that regexp","msgtype":"m.text"},"ts":1240982341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean keys?","msgtype":"m.text"},"ts":1240982342000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"right sorry","msgtype":"m.text"},"ts":1240982343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whatever es232 says for how it distinguishes indexes vs names for Array objects","msgtype":"m.text"},"ts":1240982344000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"which i think works out to [1-9][0-9]*, where the value is < 2**32 - 1","msgtype":"m.text"},"ts":1240982400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(and note the < there rather than <=)","msgtype":"m.text"},"ts":1240982401000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that same distinguishing is done in the webidl [[Put]], to determine whether to invoke the index or name getters/setters","msgtype":"m.text"},"ts":1240982460000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"actually no that last statement is false","msgtype":"m.text"},"ts":1240982461000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it uses the \"names of named properties\" etc. for that","msgtype":"m.text"},"ts":1240982462000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah i had looked there","msgtype":"m.text"},"ts":1240982520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er s/232/262/ earlier","msgtype":"m.text"},"ts":1240982521000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://bclary.com/2004/11/07/#a-15.4.5.1","msgtype":"m.text"},"ts":1240982580000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh, it just says \"If P is not an array index\"...","msgtype":"m.text"},"ts":1240982581000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://bclary.com/2004/11/07/#a-15.4","msgtype":"m.text"},"ts":1240982582000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"A property name P (in the form of a string value) is an array index if and only if ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal to 232 - 1.","msgtype":"m.text"},"ts":1240982583000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(thats 2**32 - 1 at the end)","msgtype":"m.text"},"ts":1240982640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so i think that's equivalent to matching the string against [1-9][0-9]* and ensuring it's < 2**32 - 1","msgtype":"m.text"},"ts":1240982641000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah i found that, i thought you had already seen it when you said the 2**32 - 1 thing :-)","msgtype":"m.text"},"ts":1240982700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah i had, but ages ago...","msgtype":"m.text"},"ts":1240982701000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1240982702000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"brb coffee","msgtype":"m.emote"},"ts":1240982820000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: [[Put]] is broken, as far as i can tell.","msgtype":"m.text"},"ts":1240983120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1240983180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no it isn't","msgtype":"m.text"},"ts":1240983181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've just been really confused about how named properties should be defined","msgtype":"m.text"},"ts":1240983182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe not","msgtype":"m.text"},"ts":1240983240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's possible it's broken","msgtype":"m.text"},"ts":1240983241000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i really should make it a structured algorithm instead of a big 40-step flat one!","msgtype":"m.text"},"ts":1240983300000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: if i have an empty Storage object, are there any \"names of the supported named properties\"?","msgtype":"m.text"},"ts":1240983301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is just up to how you define the \"names of the supported named properties\"","msgtype":"m.text"},"ts":1240983302000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"btw, if you can come up with better terminology for those things, i'm open to suggestions :)","msgtype":"m.text"},"ts":1240983303000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: i don't understand \"it is just up to how you define the \"names of the supported named properties\"\"","msgtype":"m.text"},"ts":1240983360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"got a pointer to the spec?","msgtype":"m.text"},"ts":1240983420000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"which?","msgtype":"m.text"},"ts":1240983421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Storage?","msgtype":"m.text"},"ts":1240983422000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://dev.w3.org/html5/webstorage/ but i'm more concerned about what the spec _should_ say","msgtype":"m.text"},"ts":1240983480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right, i just want to work out what it's trying to say first","msgtype":"m.text"},"ts":1240983481000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so you have this statement in there at the moment: \"The names of the supported named properties on a Storage  object are the keys of each key/value pair currently present in the list associated with the object.\"","msgtype":"m.text"},"ts":1240983482000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so if the list associated with the object is empty, then there'll be no named properties","msgtype":"m.text"},"ts":1240983483000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh sorry i think i misinterpreted your question earlier","msgtype":"m.text"},"ts":1240983540000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i thought you were saying \"how do you say that there are no names of the supported named properties\"","msgtype":"m.text"},"ts":1240983541000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so the answer to your actual question is: no","msgtype":"m.text"},"ts":1240983542000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"back in a couplea minutes, coffee is brewed!","msgtype":"m.emote"},"ts":1240983600000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok if the answer is no then: How do I ever get to [NameCreator] given the definition of [[Put]]?","msgtype":"m.text"},"ts":1240983660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the answer (it seems) is that you can't","msgtype":"m.text"},"ts":1240983900000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so you're right, it's buggy","msgtype":"m.text"},"ts":1240983901000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"woo, i win","msgtype":"m.text"},"ts":1240983902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1240983903000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"similarly for indexes too","msgtype":"m.text"},"ts":1240983904000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'll make a note in the spec to fix later","msgtype":"m.text"},"ts":1240983960000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so the reason i was looking there is i was hoping that you would automatically dispatch to [NameCreator] or [IndexCreator] based on what we discussed earlier","msgtype":"m.text"},"ts":1240983961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and _not_ have them fallback to each other","msgtype":"m.text"},"ts":1240983962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah i see","msgtype":"m.text"},"ts":1240983963000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so that all i have to do to fix Storage is only add [NameCreator] and not add [IndexCreator]","msgtype":"m.text"},"ts":1240983964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok. so that might be better, to distinguish between indexes and names like that.","msgtype":"m.text"},"ts":1240984020000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1240984021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder about things like the data-* attribute interface tho","msgtype":"m.text"},"ts":1240984022000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"where there are only names, effectively","msgtype":"m.text"},"ts":1240984023000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i was about to add IndexCreator to that","msgtype":"m.text"},"ts":1240984024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and you want numbers to work there too","msgtype":"m.text"},"ts":1240984025000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1240984026000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"NameGetter and NameSetter can still work as now","msgtype":"m.text"},"ts":1240984027000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since they work from a fixed list","msgtype":"m.text"},"ts":1240984080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah you could just have both index properties and name properties defer to the same abstract list of items","msgtype":"m.text"},"ts":1240984081000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well as written now the spec already handles name properties that are numbers and already avoids clashes if you have both","msgtype":"m.text"},"ts":1240984082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i think that makes more sense, rather than making other spec writers worry about confusion of indexes/names","msgtype":"m.text"},"ts":1240984083000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so for DOMStringMap we're agreed that all I need is [NameCreator, IndexCreator, NameDeleter, NameGetter, NameSetter] interface DOMStringMap {}","msgtype":"m.text"},"ts":1240984140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and some prose","msgtype":"m.text"},"ts":1240984141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1240984142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hum, no","msgtype":"m.text"},"ts":1240984143000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"not if i changed it to distinguish between indexes and names more strongly","msgtype":"m.text"},"ts":1240984200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i would only have it distinguish for creation","msgtype":"m.text"},"ts":1240984201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean, as written?","msgtype":"m.text"},"ts":1240984202000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(assuming the bugs for getting to the creators were fixed?)","msgtype":"m.text"},"ts":1240984203000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1240984204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok so you don't want to force indexes and names apart?","msgtype":"m.text"},"ts":1240984205000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"except for the creators?","msgtype":"m.text"},"ts":1240984260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1240984261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1240984262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1240984263000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i think that's what's easiest for spec authors, anyway","msgtype":"m.text"},"ts":1240984264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"probably easiest for you too :-)","msgtype":"m.text"},"ts":1240984265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you already do the work of making sure that indexed properties win over named properties in case both are there","msgtype":"m.text"},"ts":1240984266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there's no clash other than with creation, which right now is buggy adn makes no sense","msgtype":"m.text"},"ts":1240984267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do i?","msgtype":"m.text"},"ts":1240984268000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i thought it was the other way around","msgtype":"m.text"},"ts":1240984269000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1240984270000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh i didn't check which wins","msgtype":"m.text"},"ts":1240984320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah i guess named wins","msgtype":"m.text"},"ts":1240984321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right, named wins","msgtype":"m.text"},"ts":1240984322000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and i think i chose that because of how some html interfaces happened to work","msgtype":"m.text"},"ts":1240984323000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"collections or something","msgtype":"m.text"},"ts":1240984324000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1240984380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder whether i care for Storage","msgtype":"m.text"},"ts":1240984440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because if it's that way, then it doesn't really matter if we distinguish namecreator and indexcreator","msgtype":"m.text"},"ts":1240984441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we can just always have namecreator run, and i don't need to worry about preventing numeric keys being added","msgtype":"m.text"},"ts":1240984442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since it'll still work","msgtype":"m.text"},"ts":1240984443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so: if there's no indexcreator, then a property named \"1\" would still invoke the namecreator?","msgtype":"m.text"},"ts":1240984500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i guess","msgtype":"m.text"},"ts":1240984501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1240984502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess you'd give numbers to the indexcreator if there is one","msgtype":"m.text"},"ts":1240984503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mm","msgtype":"m.text"},"ts":1240984504000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and if there isn't, just fall back to namecreator","msgtype":"m.text"},"ts":1240984505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess that'd work","msgtype":"m.text"},"ts":1240984506000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's not *too* confusing","msgtype":"m.text"},"ts":1240984507000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*ahem* do you mind if you mail public-webapps with exactly what you want?","msgtype":"m.text"},"ts":1240984560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1240984620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i fear i'll get confused and do something else, otherwise :)","msgtype":"m.text"},"ts":1240984621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1240984740000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sent","msgtype":"m.text"},"ts":1240984860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1240984920000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Philip`: yt?","msgtype":"m.text"},"ts":1240988280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Yes","msgtype":"m.text"},"ts":1240992540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it was about the shadows","msgtype":"m.text"},"ts":1240992600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i sent e-mail instead","msgtype":"m.text"},"ts":1240992601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, any chance you can get to my webstorage feedback soonish?","msgtype":"m.text"},"ts":1240993200000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"Hixie: I hope there wasn't anything in that e-mail I was meant to respond to","msgtype":"m.text"},"ts":1240993800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk5: i can reply to them now if you want","msgtype":"m.text"},"ts":1240994040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk5: are they all [webstorage]?","msgtype":"m.text"},"ts":1240994041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yes","msgtype":"m.text"},"ts":1240994042000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5: 'storage' doesn't really enable fork bombing any more than postMessage() does","msgtype":"m.text"},"ts":1240994820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk5: it's just an amplification effect","msgtype":"m.text"},"ts":1240994821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk5: you could do the same thing with, say, mutation events (do two mutations per event)","msgtype":"m.text"},"ts":1240994822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless i misunderstand something","msgtype":"m.text"},"ts":1240994823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk2: done","msgtype":"m.text"},"ts":1240997100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: not really","msgtype":"m.text"},"ts":1240997160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: it seems like the best solution might be to get rid of MEDIA_ERR_NONE_SUPPORTED altogether and _only_ use the error events on the source elements","msgtype":"m.text"},"ts":1240997340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, fair enough I suppose","msgtype":"m.text"},"ts":1240997700000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Hixie, and thanks","msgtype":"m.text"},"ts":1240997701000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Hixie: hmm. yeah, maybe. for src=\"\" you would fire error on the <video>?","msgtype":"m.text"},"ts":1240997940000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah, seems reasonable","msgtype":"m.text"},"ts":1240997941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: authors would then have to listen on error on the last <source>, which seems ok","msgtype":"m.text"},"ts":1240997942000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1240997943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok. philipj agreed","msgtype":"m.text"},"ts":1240998000000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"there'd be asymmetry with 'load', but maybe that's ok","msgtype":"m.text"},"ts":1240998180000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: should i send email?","msgtype":"m.text"},"ts":1240998240000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nah s'ok i got it","msgtype":"m.text"},"ts":1240998241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1240998242000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: i'll do it tomorrow, getting too tired to work out how to solve the race condition problem he brought up in that other mail","msgtype":"m.text"},"ts":1240999320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: Your recent email doesn't link to the right URL for data","msgtype":"m.text"},"ts":1241011320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Oh. Oops","msgtype":"m.text"},"ts":1241011680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders if jgraham is planning to post an erratum for that issue","msgtype":"m.emote"},"ts":1241013240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"didn't think that anyone would be interested enough but he can post an erratum if Philip` likes","msgtype":"m.emote"},"ts":1241015400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Presumably you thought it was worthwhile including the link with your original mail, so I guess it would be similarly worthwhile to include the correct link in a followup","msgtype":"m.text"},"ts":1241016180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"discovers PGF/TikZ, which is surprisingly nice","msgtype":"m.emote"},"ts":1241016300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"...as a declarative way of constructing diagrams in LaTeX","msgtype":"m.text"},"ts":1241016301000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hey","msgtype":"m.text"},"ts":1241016540000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"I'm just here to ask if you could fix the following","msgtype":"m.text"},"ts":1241016541000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"html5lib/inputstream.py:448: DeprecationWarning: object.__init__() takes no parameters","msgtype":"m.text"},"ts":1241016542000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"  str.__init__(self, value)","msgtype":"m.text"},"ts":1241016543000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"Or would that brack compatibility with python 2.5.4?","msgtype":"m.text"},"ts":1241016544000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"I'm using 2.6.2","msgtype":"m.text"},"ts":1241016545000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"isn't sure whether it's currently possible to fix anything in html5lib, or if its source repository is too much in flux to risk committing any changes","msgtype":"m.emote"},"ts":1241017140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"cryzed: I remember fixing that for the python 3 branch. So I guess it would be good to fix it on trunk now :)","msgtype":"m.text"},"ts":1241017980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: It should be stable now I think","msgtype":"m.text"},"ts":1241017981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I guess you should sithc to using hg","msgtype":"m.text"},"ts":1241018100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*switch","msgtype":"m.text"},"ts":1241018101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So basically","msgtype":"m.text"},"ts":1241018220000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"a hg source grab","msgtype":"m.text"},"ts":1241018221000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"should do the trick now?","msgtype":"m.text"},"ts":1241018222000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"cryzed: In theory :)","msgtype":"m.text"},"ts":1241018340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"okay, thanks :)","msgtype":"m.text"},"ts":1241018341000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"When are you going to make the next \"official\" release?","msgtype":"m.text"},"ts":1241018342000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"And on the google-code-homepage the following is mentioned: Support for minidom, ElementTree (including cElementTree and lxml.etree), BeautifulSoup and custom simpletree output formats ","msgtype":"m.text"},"ts":1241018400000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"I don't know minidom, and simpletree","msgtype":"m.text"},"ts":1241018401000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"Is there any info about them?","msgtype":"m.text"},"ts":1241018402000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"hi! if i write you guys an email everytime i find an error in the html5 page ... wouldn't that annoy you ?","msgtype":"m.text"},"ts":1241018520000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"cryzed: minidom is the python stdlib implementation of DOM Core","msgtype":"m.text"},"ts":1241018521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It kinda sucks","msgtype":"m.text"},"ts":1241018580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"simpletree was a throaway tree implemntation I wrote to test html5lib","msgtype":"m.text"},"ts":1241018581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it's shitty? :D","msgtype":"m.text"},"ts":1241018582000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"btw... is there a better way of letting you know about this ?","msgtype":"m.text"},"ts":1241018583000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"ossud, you can report bugs","msgtype":"m.text"},"ts":1241018584000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"ossud, @ the google code page","msgtype":"m.text"},"ts":1241018585000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"ossud, the \"Bug Tracker\"","msgtype":"m.text"},"ts":1241018586000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, do you know what I would absolutetely love? :D","msgtype":"m.text"},"ts":1241018640000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, A mix of BeautifulSoup and lxml.html etree","msgtype":"m.text"},"ts":1241018641000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, Allowing you the flexibility of BeautifulSoup while Supporting more advanced stuff","msgtype":"m.text"},"ts":1241018642000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"like XPath","msgtype":"m.text"},"ts":1241018643000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"there are only like 2 issues in html5 O_o","msgtype":"m.text"},"ts":1241018700000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"(on google code)","msgtype":"m.text"},"ts":1241018701000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"how can i get into html5.org/tools/web-apps-tracker ?","msgtype":"m.text"},"ts":1241018940000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"cryzed: Yeah, you don't want to use simpletreee for anything. Even though it is the default tree type","msgtype":"m.text"},"ts":1241019840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dunno what to do about that though because you don't want to use minidom for anything either","msgtype":"m.text"},"ts":1241019841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and nothing else comes with the stdlib","msgtype":"m.text"},"ts":1241019842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Actually I guess I could make ElementTree the default. I wonder how many people would complain","msgtype":"m.text"},"ts":1241019900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ossud: What bugs do you want to report? Bugs in the spec?","msgtype":"m.text"},"ts":1241019901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mostly typos ^^","msgtype":"m.text"},"ts":1241020080000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"*in the spec","msgtype":"m.text"},"ts":1241020140000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"ossud: You can either use the w3c.org bugzilla or use the mailing list. I guess one typo per email is not very friendly though :)","msgtype":"m.text"},"ts":1241020200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the w3c bugzilla?? how cool is that! :)","msgtype":"m.text"},"ts":1241020260000,"senderName":"ossud","senderId":"ossud@irc"},
{"content":{"body":"jgraham, I really like the BeautifulSoup tree though :P","msgtype":"m.text"},"ts":1241020261000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, It's just very hard to correctly extract whole paragraphs of text out of webapges with the ElementTree API, while preserving the formatting and stripping the html tags","msgtype":"m.text"},"ts":1241020320000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"Oh stupid slow intarwebs!","msgtype":"m.text"},"ts":1241020500000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"cryzed: html5lib really needs a maintainer for the BeautifulSoup api","msgtype":"m.text"},"ts":1241020560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, I don't really have any clue how BS works internally","msgtype":"m.text"},"ts":1241020620000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, I just like to use it :D","msgtype":"m.text"},"ts":1241020621000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"cryzed: So on a list of ideal candidates you score 1/2 whereas I score 0/2 and I wrote the treebuilder","msgtype":"m.text"},"ts":1241020680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, haha ^^","msgtype":"m.text"},"ts":1241020681000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"(does BS support namespaces?)","msgtype":"m.text"},"ts":1241020682000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what do you mean exactly","msgtype":"m.text"},"ts":1241020683000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"with namespaces?","msgtype":"m.text"},"ts":1241020684000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"The ability to have elements in differnt namespaces","msgtype":"m.text"},"ts":1241020685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like to put an element called svg in a namespace identified by the URI http://www.w3.org/2000/svg","msgtype":"m.text"},"ts":1241020860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I've got no clue actually","msgtype":"m.text"},"ts":1241021040000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"oO","msgtype":"m.text"},"ts":1241021041000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"If not, it will be \"fun\" to get it to work with MathML/SVG. Can probably use Clarke notation and just live with the suckiness or something though","msgtype":"m.text"},"ts":1241021100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, btw, I'm still getting","msgtype":"m.text"},"ts":1241021160000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"the error","msgtype":"m.text"},"ts":1241021161000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"with the newest hg checkout","msgtype":"m.text"},"ts":1241021162000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"DeprecationWarning: object.__init__() takes no parameters","msgtype":"m.text"},"ts":1241021163000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"  str.__init__(self, value)","msgtype":"m.text"},"ts":1241021164000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"Or rather warning","msgtype":"m.text"},"ts":1241021165000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"cryzed: I didn't apply the patch yet","msgtype":"m.text"},"ts":1241021166000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1241021220000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"shoot","msgtype":"m.text"},"ts":1241021221000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"Could you? ;D?","msgtype":"m.text"},"ts":1241021222000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham: http://www.crummy.com/2009/04/09/0 - \"I'll be writing an html5lib tree builder and packaging it and the lxml builder in Beautiful Soup\" - he's probably a good person to be maintainer","msgtype":"m.text"},"ts":1241021460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: Better than the intarwebs here, which are currently lacking all the normal intar functionality because of power cuts and not-very-good UPSes","msgtype":"m.text"},"ts":1241021580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(unless they've fixed it already)","msgtype":"m.text"},"ts":1241021581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which I guess they have, since I can access the box sitting at my feet via London)","msgtype":"m.text"},"ts":1241021640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"cryzed: Try now","msgtype":"m.text"},"ts":1241021700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1241021760000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"The commit mail's subject line is horrid","msgtype":"m.text"},"ts":1241021761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"[html5lib push] 77f13a977be6f47a9724ee5dbfee756eaf12317e - Fix deprecation warning","msgtype":"m.text"},"ts":1241021820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: We had no network/internet at school yesterday because the other side of the split-site school had no power.","msgtype":"m.text"},"ts":1241021821000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I want to see the actual commit message in my mail client's little pop-up alert box, not forty hex digits","msgtype":"m.text"},"ts":1241021822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But how else will you know what revision it is!?","msgtype":"m.text"},"ts":1241021880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It should make up a monotonically increasing integer and use that as the revision number","msgtype":"m.text"},"ts":1241021881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Forty hex digits sitting on the wall, forty hex digits sitting on the wall, and if one hex digit should accidentially fall...","msgtype":"m.text"},"ts":1241021940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hg won't care.","msgtype":"m.text"},"ts":1241022000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hopefully the hex digit would pull its partner off the wall too","msgtype":"m.text"},"ts":1241022001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"because hex digits are aesthetically displeasing if they don't always come in pairs","msgtype":"m.text"},"ts":1241022060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham, works","msgtype":"m.text"},"ts":1241022600000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, thanks","msgtype":"m.text"},"ts":1241022601000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"jgraham, It's probably fully 2.6.2 compatible now","msgtype":"m.text"},"ts":1241022602000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1241022603000,"senderName":"cryzed","senderId":"cryzed@irc"},
{"content":{"body":"receives \"508 messages from Google Code\"","msgtype":"m.emote"},"ts":1241026080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's quite nice that they handle that situation sensibly, not by sending 508 emails or dropping them all entirely","msgtype":"m.text"},"ts":1241026140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ossud: send as much feedback as you like, one per e-mail or one big e-mail or anything in between, it doesn't matter it'll get treated the same in the end :-)","msgtype":"m.text"},"ts":1241033760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: any particular examples you want in the parser section?","msgtype":"m.text"},"ts":1241038980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Unicode or Death?","msgtype":"m.text"},"ts":1241039220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's a tough choice","msgtype":"m.text"},"ts":1241039400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders what anne and Lachy are tweeting","msgtype":"m.emote"},"ts":1241044260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, 010101110110100001100001011101000011111100100000010110010110111101110101001000000110010001101111011011100010011101110100001000000111001101110000011001010110000101101011001000000110001001101001011011100110000101110010011110010011111100100001","msgtype":"m.text"},"ts":1241044380000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I got that. But why?","msgtype":"m.text"},"ts":1241044381000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, you gotta be here with us in Oslo to understand why.","msgtype":"m.text"},"ts":1241044740000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"That was much less funny than I had hoped. I guess I don't get the context","msgtype":"m.text"},"ts":1241044741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"really should be asleep","msgtype":"m.emote"},"ts":1241044742000,"senderName":"jgraham","senderId":"jgraham@irc"}
]