[
{"content":{"body":"TabAtkins: wondering what should be done about https://lists.w3.org/Archives/Public/www-archive/2016Oct/0009.html (change to allow child-index pseudos to select unparented elements)","msgtype":"m.text"},"ts":1478665367000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: even though the spec change was made more than 3 years ago, Gecko is the only engine that has changed to match the spec change","msgtype":"m.text"},"ts":1478665431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wondering if at least there are browser bugs open for rest","msgtype":"m.text"},"ts":1478665469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"raised https://github.com/w3c/csswg-drafts/issues/695","msgtype":"m.text"},"ts":1478666504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there a reason html has data-file-issue-url=https://whatwg.org/newbug rather than having the link go straight to github without a redirect?","msgtype":"m.text"},"ts":1478688323000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I suspect to advertise the shortlinks","msgtype":"m.text"},"ts":1478688539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: https://github.com/heycam/webidl/pull/211 is no longer waiting on me, right?","msgtype":"m.text"},"ts":1478688652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: we should probably move bz's data to the SameObject issue, I suppose I could do that","msgtype":"m.text"},"ts":1478688670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there isn't any target value to target the opener, right? anything like <a href=\"foo.html\" target=\"_opener\">?","msgtype":"m.text"},"ts":1478689445000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I am not aware of any.","msgtype":"m.text"},"ts":1478689505000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"smaug: don't think so","msgtype":"m.text"},"ts":1478690863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k, thanks","msgtype":"m.text"},"ts":1478690880000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"annevk: unassigned you.","msgtype":"m.text"},"ts":1478691414000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: argue you should choose between dfn and algorithm attribute value to name algos and deprecate the other one.","msgtype":"m.text"},"ts":1478694924000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: it's really confusing to have both","msgtype":"m.text"},"ts":1478694945000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: https://html.spec.whatwg.org/multipage/not_found.html the source here doesn't match that of https://github.com/whatwg/html/blob/master/404.html - what gives? (I was going to change the script src to /link-fixup.js)","msgtype":"m.text"},"ts":1478695209000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i have an urge to change link-fixup.js to XHR /multipage/fragment-links.json so the browser doesn't need to download and compile a 2.8MB script that then typically no-ops","msgtype":"m.text"},"ts":1478696564000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Good call","msgtype":"m.text"},"ts":1478697201000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"seconded","msgtype":"m.text"},"ts":1478697696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: it looks like multipage has its own 404 and .htaccess","msgtype":"m.text"},"ts":1478698850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but locally that does not appear to be the case, so maybe the folder on the server is not properly cleared?","msgtype":"m.text"},"ts":1478699223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it seems the build script on the server uses rsync, so that might be the issue","msgtype":"m.text"},"ts":1478699499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: we don't use rsync with --delete","msgtype":"m.text"},"ts":1478699521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1478699587000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: filed an issue, copied you","msgtype":"m.text"},"ts":1478699633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: would like input from Domenic since he set this up","msgtype":"m.text"},"ts":1478699643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1478699731000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: It's a necessary change to get sane results from querySelector() on a DocumentFragment (as bz argued in the email that prompted the change). Theoretically we could match browsers closer by making it match things with *Element or DocumentFragment* parents, but that's just ridiculous.","msgtype":"m.text"},"ts":1478711773000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: Agree, honestly.  Been considering how best to handle this, as I want to add in the algo arguments soon.","msgtype":"m.text"},"ts":1478711806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok given that then it seems like to get interop on it we should at least have browser bugs open for getting the the implementations to update to the current spec","msgtype":"m.text"},"ts":1478711843000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"What I think I'll do is add an attribute to <dfn> that designates it the naming dfn for the algorithm, so you get the right behavior even if there are 2+ dfns in the block. Then issue an unskippable warning for manually-named algos that they should switch to using a <dfn> to name themselves.","msgtype":"m.text"},"ts":1478711869000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: Yes.","msgtype":"m.text"},"ts":1478711874000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in general seems like we need some more systematic way of getting bugs raised in cases like this one","msgtype":"m.text"},"ts":1478711921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"has no brilliant ideas how to do that","msgtype":"m.emote"},"ts":1478711934000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: multiple DFNs per algos don't bother me per se. (Never had the use case personally.)","msgtype":"m.text"},"ts":1478712241000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: It's not unusual.  You just happen to define more than one thing in an area.","msgtype":"m.text"},"ts":1478712295000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: OK.","msgtype":"m.text"},"ts":1478712341000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: we're trying to move to more TC-39 like naming for algorithms in WebIDL which you can then Call(with, args...)","msgtype":"m.text"},"ts":1478712475000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: do you know if there are any missing custom element tests?","msgtype":"m.text"},"ts":1478712478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"botie: ask rniwa if there are any missing custom element or shadow tree tests?","msgtype":"m.text"},"ts":1478712499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1478712499000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"TabAtkins: so UpperCamelCase.","msgtype":"m.text"},"ts":1478712532000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: use <dfn abstract-op> to preserve the case","msgtype":"m.text"},"ts":1478712567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh","msgtype":"m.text"},"ts":1478712583000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: what do you mean \"missing\"?","msgtype":"m.text"},"ts":1478719999000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: stuff that needs to be written","msgtype":"m.text"},"ts":1478720207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Mozilla might have some resources","msgtype":"m.text"},"ts":1478720245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: how do you link to an abstract op, though? <a></a>?","msgtype":"m.text"},"ts":1478721039000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: no shortcut?","msgtype":"m.text"},"ts":1478721050000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"<a abstract-op>. I haven't added a shortcut yet, because nobody's expressed a preference in the syntax. Let me go dig up the issue real quick.","msgtype":"m.text"},"ts":1478721065000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/tabatkins/bikeshed/issues/809","msgtype":"m.text"},"ts":1478721086000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Thanks. Can you do (!|?)identifier(args) as a shortcut? And do all of the !? magic linking while you're at it?","msgtype":"m.text"},"ts":1478721238000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"What's all this?","msgtype":"m.text"},"ts":1478721253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: also ponies would be nice","msgtype":"m.text"},"ts":1478721254000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: iirc ? throws, ! doesn't throw","msgtype":"m.text"},"ts":1478721288000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh, I have an long-term issue to support ecmarkup.","msgtype":"m.text"},"ts":1478721327000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I was suggesting to use ! or ? as your shorthand prefix and (...) as suffix","msgtype":"m.text"},"ts":1478721379000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: but that is probably too magical","msgtype":"m.text"},"ts":1478721397000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I guess there might be a gap in testing [CEReactions] for customized built-ins","msgtype":"m.text"},"ts":1478721418000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i don't know how the server setup works. will things just work if the link-fixup PRs are merged, or is something more necessary?","msgtype":"m.text"},"ts":1478724374000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: supposedly it will but sometimes i need to poke it. Let me know when you merge things and I'll ensure things are straightened out on the backend","msgtype":"m.text"},"ts":1478724402000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ok. i suppose someone should review first","msgtype":"m.text"},"ts":1478724520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: you r+ed the wattsi PR; could you review the other two also? :-)","msgtype":"m.text"},"ts":1478724617000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hey Domenic, saw your comment about UpperCase vs. English phrases and would like to understand your thoughts better around this.","msgtype":"m.text"},"ts":1478724886000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: sure.","msgtype":"m.text"},"ts":1478724897000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anything in particular?","msgtype":"m.text"},"ts":1478724918000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so I'm working on https://www.w3.org/Bugs/Public/show_bug.cgi?id=22859 right now","msgtype":"m.text"},"ts":1478724947000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: and not only does this bring in more CamelCase notation","msgtype":"m.text"},"ts":1478724973000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: it also revealed that ES6 no longer defines \"sign\"","msgtype":"m.text"},"ts":1478725034000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hah wow really?","msgtype":"m.text"},"ts":1478725048000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"at least I couldn't find it","msgtype":"m.text"},"ts":1478725060000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah apparently so","msgtype":"m.text"},"ts":1478725070000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ironically they're using prose for this now","msgtype":"m.text"},"ts":1478725072000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So in my mind using existing PascalCase abstract ops is not a problem","msgtype":"m.text"},"ts":1478725154000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So my first reflex was to create an abstract ops for that: https://gist.github.com/tobie/cf495a00600d904769c30fce05c0069f","msgtype":"m.text"},"ts":1478725168000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But it's a little strange that Web IDL exports a bunch of algorithms with English names, like most web specs","msgtype":"m.text"},"ts":1478725176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And then starts exporting a few with PascalCase notation","msgtype":"m.text"},"ts":1478725185000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \\o/ OK let's do this","msgtype":"m.text"},"ts":1478725196000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: PascalCase--couldn't remember the name","msgtype":"m.text"},"ts":1478725225000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: ok, so that's where you draw the line","msgtype":"m.text"},"ts":1478725240000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It's not a big deal, and Web IDL is a strange case anyway","msgtype":"m.text"},"ts":1478725259000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. it makes perfect sense to me to have LegacyPlatformObjectGetOwnProperty or whatever it's called","msgtype":"m.text"},"ts":1478725275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But that's not exported so I feel a bit better","msgtype":"m.text"},"ts":1478725280000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: OK, so you sort of see WebIDL as a cushion between JS and the Web","msgtype":"m.text"},"ts":1478725359000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I can work with that.","msgtype":"m.text"},"ts":1478725375000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, basically. There's a valid debate to be had about whether we should be cushioning the web from JS, or at least, whether we should be cushioning it from JS notation.","msgtype":"m.text"},"ts":1478725400000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe all specs should switch to PascalCaseFunctionCall(a, b, c) instead of \"perform the operation given a, b, and c\"","msgtype":"m.text"},"ts":1478725421000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I'm a little leery of starting that conversion right here","msgtype":"m.text"},"ts":1478725433000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: tbh, I'm not sure if there's a proper venue for this conversation to be productive","msgtype":"m.text"},"ts":1478725503000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I prefer the prose names, fwiw.","msgtype":"m.text"},"ts":1478725505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: ok all merged","msgtype":"m.text"},"ts":1478725526000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: great. Apparently the server did not recompile wattsi automatically... I've run into this in the past. Manually doing so now.","msgtype":"m.text"},"ts":1478725548000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1478725573000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: yeah, it's not the PascalCasing I'm after, it's the [abstract ops name](arguments) construct.","msgtype":"m.text"},"ts":1478725623000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Why is that better?  It's not unusual for my algo invocations to use values that don't easily lend themselves to that formal syntax.","msgtype":"m.text"},"ts":1478725670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus, it leans us toward ordered arguments, rather than named, which is always fragile, but *especially* so when it's cross-domain calls like this.","msgtype":"m.text"},"ts":1478725707000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The Bikeshed syntax is going to be named-argument based.","msgtype":"m.text"},"ts":1478725717000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I just think it reads better and is more explicit about what's going on","msgtype":"m.text"},"ts":1478725717000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: do you have pointers as to how that's going to look?","msgtype":"m.text"},"ts":1478725768000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I don't see how \"Let |foo| be the result of SomeOp(|bar|, |baz|)\" is more explicit than \"Let |foo| be the result of <a>doing the op</a> with |bar| and |baz|\".","msgtype":"m.text"},"ts":1478725776000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: I don't yet, but I'm happy to draw up my plans in an issue.","msgtype":"m.text"},"ts":1478725788000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'd like that","msgtype":"m.text"},"ts":1478725805000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: I'm basically in need of more organization and structure in the WebIDL spec and the only model I have given the problem domain is the ES spec","msgtype":"m.text"},"ts":1478725849000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Which is, imo, one of the least readable specs in existence. ^_^","msgtype":"m.text"},"ts":1478725882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Precise, but extremely unreadable.","msgtype":"m.text"},"ts":1478725889000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah—I'm not arguing this is a _good_ model.","msgtype":"m.text"},"ts":1478725963000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: as an aside, I've found the borders around the algorithm extremely helpful to visualize the overall structure of the spec","msgtype":"m.text"},"ts":1478726047000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, me too.","msgtype":"m.text"},"ts":1478726059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: similarly, the scroll-spy script I added helped a lot","msgtype":"m.text"},"ts":1478726073000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1478726080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, I see it!","msgtype":"m.text"},"ts":1478726105000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, that's pretty cool. I wouldn't mind building that into Bikeshed.","msgtype":"m.text"},"ts":1478726114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I've opened an issue against tr-design","msgtype":"m.text"},"ts":1478726136000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: https://github.com/w3c/tr-design/issues/108","msgtype":"m.text"},"ts":1478726150000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: is it just me or are the browser-logos 200ing each time instead of 304ing","msgtype":"m.text"},"ts":1478726171000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm Chrome says \"from memory cache\" though so something's going on there","msgtype":"m.text"},"ts":1478726189000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Meh probably devtools somehow","msgtype":"m.text"},"ts":1478726247000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So happy we have the section self-links now, thanks annevk","msgtype":"m.text"},"ts":1478726310000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: so I'm basically hungry for something that lets me define the algorithm and call them in a way that's super clear","msgtype":"m.text"},"ts":1478726331000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: whether that's PascalCasing or something else it secondary.","msgtype":"m.text"},"ts":1478726358000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"*is","msgtype":"m.text"},"ts":1478726408000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Right. Will write up in a few, finishing up a feature right now.","msgtype":"m.text"},"ts":1478726441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: images have a special cache, maybe that's why devtools are saying 200","msgtype":"m.text"},"ts":1478726643000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: reviewing legacy platform objects now btw","msgtype":"m.text"},"ts":1478726723000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins, tobie: the harder problem, which I think is more needed, is *not* have unintended side-effects, or access other variables from some implicit scope","msgtype":"m.text"},"ts":1478728203000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yes. Pure functions ftw.","msgtype":"m.text"},"ts":1478728273000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I've been wondering about trying to prove properties in such functions again.","msgtype":"m.text"},"ts":1478728505000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is the \"too slow?\" alert helping anyone? i think the dialog itself is slowing down loading of the single-page spec","msgtype":"m.text"},"ts":1478728543000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wonder if that is partly the opacity?","msgtype":"m.text"},"ts":1478728623000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: I hates it but I imagine some newbies who accidentally ended up on singlepage might use it","msgtype":"m.text"},"ts":1478728627000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's fixed-pos but still causes layout invalidation in chromium for some reason. maybe selectors need to be reevaluated","msgtype":"m.text"},"ts":1478728632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: how about we make the \"Multipage Version\" link stand out a lot more in the single-page version, and remove the alert","msgtype":"m.text"},"ts":1478728918000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: sounds plausible","msgtype":"m.text"},"ts":1478728931000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: an extreme solution would be redirect to multipage, unless there's a cookie for the single-page","msgtype":"m.text"},"ts":1478729101000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: given I expect relatively few people actually want the single page","msgtype":"m.text"},"ts":1478729112000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes, single-page sucks and I hate it.","msgtype":"m.text"},"ts":1478729159000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Except for the rare use-case of \"I want to ctrl-F the entire spec for something\"","msgtype":"m.text"},"ts":1478729174000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: might actually be a good idea","msgtype":"m.text"},"ts":1478729205000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think it's probably actually the best option","msgtype":"m.text"},"ts":1478729315000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"because I expect almost nobody wants the single page apart from a few of us in here","msgtype":"m.text"},"ts":1478729325000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"dislike","msgtype":"m.text"},"ts":1478729482000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think a lot of implementers and spec developers want the single-page","msgtype":"m.text"},"ts":1478729502000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah a lot people cite the single-page version","msgtype":"m.text"},"ts":1478729782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ping for tests for https://github.com/whatwg/html/pull/1986","msgtype":"m.text"},"ts":1478729801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1478729801000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"hey is there not some query param that somebody can append to the spec URL to get the developer-only view?","msgtype":"m.text"},"ts":1478729870000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have forgotten","msgtype":"m.text"},"ts":1478729879000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no :(","msgtype":"m.text"},"ts":1478729890000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1478729909000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we removed all the JS and CSS for that too?","msgtype":"m.text"},"ts":1478729923000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought I saw it was still there","msgtype":"m.text"},"ts":1478729930000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"where in the olden times there were was button at the top of the spec to get the developer-only view","msgtype":"m.text"},"ts":1478729971000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/whatwg/wattsi/issues/27","msgtype":"m.text"},"ts":1478729983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1478729987000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: an outdated version still exists at developers.whatwg.org","msgtype":"m.text"},"ts":1478729991000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But we don't link to it anymore since it's outdated","msgtype":"m.text"},"ts":1478729997000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh yeah","msgtype":"m.text"},"ts":1478730007000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I remember this wattsi issue now","msgtype":"m.text"},"ts":1478730017000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I should work on that","msgtype":"m.text"},"ts":1478730034000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah. And maybe we don't need perfect parity with the existing one and should just be happy with what's created","msgtype":"m.text"},"ts":1478730053000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. just accept the new splitting","msgtype":"m.text"},"ts":1478730062000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but won't most implementers and spec developers already have the single-page-allowing cookie?","msgtype":"m.text"},"ts":1478730063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: how would they get such a cookie?","msgtype":"m.text"},"ts":1478730077000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders: and what if they get/use a new computer?","msgtype":"m.text"},"ts":1478730089000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: load spec, click link to single page, get cookie","msgtype":"m.text"},"ts":1478730095000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: but that's relatively rare","msgtype":"m.text"},"ts":1478730103000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh man, I finally figured out why the ToC jiggles sometimes in Bikeshed specs (and fixed it).","msgtype":"m.text"},"ts":1478730661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Frickin' border-width rounding.","msgtype":"m.text"},"ts":1478730686000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So going from \"border-width: 1px\" to \"border-width: 3px; margin: -2px\" doesn't necessarily result in an identical layout size, depending on your DPI.","msgtype":"m.text"},"ts":1478730729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wat.","msgtype":"m.text"},"ts":1478730897000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"border sizes have to round to exact hardware-pixel sizes, so you don't get banding!","msgtype":"m.text"},"ts":1478730919000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, and the fact that most things don't use 1:1 or 1:4 rounding nowadays, duh","msgtype":"m.text"},"ts":1478730942000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"soz, all the HiDPI stuff I have uses 1:4","msgtype":"m.text"},"ts":1478730957000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, and my spec window on my work computer uses 90% zoom, to make it small enough to trigger the sidebar ToC.","msgtype":"m.text"},"ts":1478730972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, that doesn't help :)","msgtype":"m.text"},"ts":1478730980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Was wondering why the computed value of border was 1.1111111px ^_^","msgtype":"m.text"},"ts":1478730994000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm i accidentally removed the reload preventor. does it work? can't recall seeing it","msgtype":"m.text"},"ts":1478731892000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah me neitehr","msgtype":"m.text"},"ts":1478731963000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe browsers stopped firing key events for that","msgtype":"m.text"},"ts":1478731983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so: what are some interesting, complex functions/operations/whatever-we-want-to-call-them in specs that might be interesting to look at with formal methods?","msgtype":"m.text"},"ts":1478732164000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"for what purpose?","msgtype":"m.text"},"ts":1478732476000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Google docs uses Flash o_O","msgtype":"m.text"},"ts":1478735685000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"well, spreadsheets","msgtype":"m.text"},"ts":1478735697000,"senderName":"smaug","senderId":"smaug@irc"}
]