[
{"content":{"body":"I have a spec algorithm that takes a javascript object of arbitary type and runs some type-specific steps. How is one supposed to switch-on-type in a spec these days?","msgtype":"m.text"},"ts":1600768257000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: is it converted to an IDL object?","msgtype":"m.text"},"ts":1600768285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, although maybe it can be? It can also be a primitive type if that makes a difference","msgtype":"m.text"},"ts":1600768351000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: has it passed through IDL is the question I guess","msgtype":"m.text"},"ts":1600768367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but generally \"if _x_ is a Foo\"","msgtype":"m.text"},"ts":1600768387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or switching on _x_: <dl><dt>Foo<dd>...","msgtype":"m.text"},"ts":1600768405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It hasn't passed through IDL; the use case is WebDriver where we want to convert an arbitary object from script into a wire representation","msgtype":"m.text"},"ts":1600768432000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But if I\"m allowed to just act as if the type of x is a well defined concept without caring about the mechanics of how js encodes the type, what I have isn't so wrong","msgtype":"m.text"},"ts":1600768521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you can use https://heycam.github.io/webidl/#es-platform-objects","msgtype":"m.text"},"ts":1600768567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: and for serialization you probably want some alignment with HTML's serialization algorithms for ES values","msgtype":"m.text"},"ts":1600768602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, maybe","msgtype":"m.text"},"ts":1600768726000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's definitely going to be different to that because different requirements, but it might make sense to use that to provide a value representation for more types","msgtype":"m.text"},"ts":1600768761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: HTML's serialization algorithm does do all the formal stuff correctly (or so we like to think)","msgtype":"m.text"},"ts":1600768832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the \"different requirements\" are basically that we pass back a handle that acts a weakref to the object, which doesn't make sense for the HTML case)","msgtype":"m.text"},"ts":1600768856000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but we also provide a value for types where it makes sense, and only a value for primitives)","msgtype":"m.text"},"ts":1600768946000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and also because JSON, we can't represent some things that structured serialize can)","msgtype":"m.text"},"ts":1600769090000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway, that's useful thanks","msgtype":"m.text"},"ts":1600769097000,"senderName":"jgraham","senderId":"jgraham@irc"}
]