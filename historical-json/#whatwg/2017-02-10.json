[
{"content":{"body":"for using <link> to register a service worker, if it has <link scope=\"\"...> what does the SW’s scope url get set to? the document’s base URL?","msgtype":"m.text"},"ts":1486702413000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://w3c.github.io/ServiceWorker/#ref-for-element-attrdef-link-scope-2","msgtype":"m.text"},"ts":1486702420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> If the scope attribute is present, set scopeURL to the result of parsing the scope attribute with the link element’s node document’s document base URL.","msgtype":"m.text"},"ts":1486702426000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so as far as document conformance, should scope=\"\" be allowed?","msgtype":"m.text"},"ts":1486702498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and should it be allowed to contained leading/trailing space?","msgtype":"m.text"},"ts":1486702519000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other words should it be a >valid URL< or a >valid URL potentially surrounded by spaces< or a >valid non-empty URL< or a >valid non-empty URL potentially surrounded by spaces<","msgtype":"m.text"},"ts":1486702642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I would base that decision on precedent of other such URLs, e.g. link href=\"\"","msgtype":"m.text"},"ts":1486703791000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Off the top of my head I would guess \"valid URL\" but I don't know when we allow surrounding spaces in general","msgtype":"m.text"},"ts":1486703808000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't think the empty string should be excluded","msgtype":"m.text"},"ts":1486703822000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks","msgtype":"m.text"},"ts":1486703874000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10552455/ \\o/","msgtype":"m.text"},"ts":1486713526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"First Edge bug I filed that is fixed I think","msgtype":"m.text"},"ts":1486713535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if it's actually fixed, that's a rather big one as it changes quite a few things","msgtype":"m.text"},"ts":1486713552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I wonder if they fixed it in depth or just surface","msgtype":"m.text"},"ts":1486713565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Morning! Was https://github.com/whatwg/fetch/issues/486#issuecomment-278880798 directed at me or at Domenic?","msgtype":"m.text"},"ts":1486716274000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: nobody in particular","msgtype":"m.text"},"ts":1486716349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Did you refer to type handling in option (1) or option (2)?","msgtype":"m.text"},"ts":1486716384000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: just got curious about it, since <link rel=preload> is just a high-level API in the end and it needs to map to fetch() somehow","msgtype":"m.text"},"ts":1486716391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I guess 2, since 1 doesn't have a type attribute","msgtype":"m.text"},"ts":1486716415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: the parenthesis bit was about both though","msgtype":"m.text"},"ts":1486716430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, I think I understand your question, I'll answer on the issue","msgtype":"m.text"},"ts":1486716448000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"tobie: wow, you fixed all the nits with PR preview","msgtype":"m.text"},"ts":1486717692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and you improved upon my wording too","msgtype":"m.text"},"ts":1486717707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: really cool","msgtype":"m.text"},"ts":1486717721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: thanks","msgtype":"m.text"},"ts":1486718148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I guess I maintain that Node.js was right, they should have had their own MIME type","msgtype":"m.text"},"ts":1486718176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: but I suspect that will never fly with the JavaScript folks","msgtype":"m.text"},"ts":1486718190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: ugh, such a mess","msgtype":"m.text"},"ts":1486718203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm in favor of them being their own destination","msgtype":"m.text"},"ts":1486718244000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: given that MIME type is unlikely to be an option here, agreed","msgtype":"m.text"},"ts":1486718267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also spent a few hours last week discussing how modules would actually be loaded in browsers, and I agree with your \"ugh\"","msgtype":"m.text"},"ts":1486718303000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1486718335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: btw, there is an HTML modules outline online, but it's dated perhaps","msgtype":"m.text"},"ts":1486718373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: https://github.com/w3c/webcomponents/blob/gh-pages/proposals/HTML-Imports-and-ES-Modules.md","msgtype":"m.text"},"ts":1486718408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pointer? \"HTML modules\" is ungoogleable","msgtype":"m.text"},"ts":1486718410000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1486718415000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: Unrelated, but is there a notion of \"supported mime type\" that I can link to from a spec?","msgtype":"m.text"},"ts":1486720618000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: what does that mean?","msgtype":"m.text"},"ts":1486720837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. \"image/webp\" supported in an image destination context in Chrome, but not in WebKit","msgtype":"m.text"},"ts":1486720993000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess it's slightly related","msgtype":"m.text"},"ts":1486721007000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'm trying to fix the preload spec to define what `type` currently does","msgtype":"m.text"},"ts":1486721027000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: I have no trouble defining what `media` does (which was off as well), but not sure where mime types are defined in the platform","msgtype":"m.text"},"ts":1486721092000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"We don't have overarching terminology for that I think","msgtype":"m.text"},"ts":1486721095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1486721106000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"We do have terminology for media in HTML","msgtype":"m.text"},"ts":1486721107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MIME types are somewhat defined in https://mimesniff.spec.whatwg.org/ but they're not at all interoperable","msgtype":"m.text"},"ts":1486721125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But specific MIME types varies a lot","msgtype":"m.text"},"ts":1486721139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, I'll take a look","msgtype":"m.text"},"ts":1486721140000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"E.g., image loading ignores MIME types generally, even X-Content-Type-Options doesn't change that","msgtype":"m.text"},"ts":1486721160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only MIME type image loading looks for is image/svg+xml","msgtype":"m.text"},"ts":1486721169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://mimesniff.spec.whatwg.org/#supported-by-the-user-agent","msgtype":"m.text"},"ts":1486721172000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I don't care about mime types in processing the response","msgtype":"m.text"},"ts":1486721195000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Interesting, I guess that does do what you want","msgtype":"m.text"},"ts":1486721199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just need them in order to avoid sending the request","msgtype":"m.text"},"ts":1486721204000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"But again, I wonder if that's implemented as-is","msgtype":"m.text"},"ts":1486721209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe if we just start using it at some point it will be","msgtype":"m.text"},"ts":1486721216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah.","msgtype":"m.text"},"ts":1486721229000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"It's way better than what I have now in preload, which is nothing...","msgtype":"m.text"},"ts":1486721243000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1486721261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My main problem with that spec is that we don't have active maintenance, solid testsuite, and commitments from implementers","msgtype":"m.text"},"ts":1486721286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But some parts of it do, so we can't just scrap it, it does actually define some underpinnings","msgtype":"m.text"},"ts":1486721325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, not ideal","msgtype":"m.text"},"ts":1486721389000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"morning all, in specs, do we need to link to a definition of what a promise is or is it accepted that everyone knows what it is?","msgtype":"m.text"},"ts":1486721414000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"I noticed Fetch doesnt link to Promises","msgtype":"m.text"},"ts":1486721437000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"so not sure what i should do in WebDriver.","msgtype":"m.text"},"ts":1486721482000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"tobie: how do i propose changes to https://www.w3.org/2016/10/htmldiff-nav.js ?","msgtype":"m.text"},"ts":1486721612000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oh boy","msgtype":"m.text"},"ts":1486721701000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"AutomatedTester: it's a problem IDL needs to solve at some point","msgtype":"m.text"},"ts":1486721704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AutomatedTester: the current solution is to assume everyone knows","msgtype":"m.text"},"ts":1486721711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, I will go with the current solution then :)","msgtype":"m.text"},"ts":1486721737000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"zcorpan: fork https://gist.github.com/tobie/39c068f2b58422b5d20a5e24941c9f17 and the email dom?","msgtype":"m.text"},"ts":1486721747000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/the/then/","msgtype":"m.text"},"ts":1486721773000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"what is it you want to change?","msgtype":"m.text"},"ts":1486721789000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: outline instead of border","msgtype":"m.text"},"ts":1486721798000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: there's also \":focus { border: thin red solid}\" in the diff stylesheet inserted for the url standard, which seems unnecessary","msgtype":"m.text"},"ts":1486721845000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you're making the diff thing even better? Hurray","msgtype":"m.text"},"ts":1486721915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I guess diffing for HTML would be hard to provide, right?","msgtype":"m.text"},"ts":1486721958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I have some weird spacing around links in the WebIDL spec too.","msgtype":"m.text"},"ts":1486721970000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: e.g.: https://s3.amazonaws.com/pr-preview/heycam/webidl/3834774..tobie:interface-objs:7dfd134.html#dfn-serialization-behavior","msgtype":"m.text"},"ts":1486722051000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: look how the link underlining bleeds.","msgtype":"m.text"},"ts":1486722090000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: that seems like a problem of the differ, not a styling problem","msgtype":"m.text"},"ts":1486722116000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: :(","msgtype":"m.text"},"ts":1486722151000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it inserts a newline before </ins> or </del>.","msgtype":"m.text"},"ts":1486722163000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and possibly in general lots of newlines","msgtype":"m.text"},"ts":1486722209000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oh well.","msgtype":"m.text"},"ts":1486722214000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: I can totally live with this. :)","msgtype":"m.text"},"ts":1486722292000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"would be better if it inserted newlines right before \">\" to avoid messing with the Infoset","msgtype":"m.text"},"ts":1486722298000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"where is the source for the differ?","msgtype":"m.text"},"ts":1486722315000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think the underlying lib is an old C program.","msgtype":"m.text"},"ts":1486722339000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: it's gnu diff: https://services.w3.org/htmldiff","msgtype":"m.text"},"ts":1486722390000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: not sure what you mean by diffing for html","msgtype":"m.text"},"ts":1486722419000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: HTML Standard","msgtype":"m.text"},"ts":1486722446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh!","msgtype":"m.text"},"ts":1486722468000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"There's only one, so HTML is totally unambiguous, right?","msgtype":"m.text"},"ts":1486722484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I could special case granted there's a Web service I can use for the build","msgtype":"m.text"},"ts":1486722551000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: or I can run the software to build it on the heroku platform","msgtype":"m.text"},"ts":1486722574000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: we do have that, the real nice thing to offer would be multipage diffing, with links only to the multipage files that changed","msgtype":"m.text"},"ts":1486722600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure how many stretch goals we want though","msgtype":"m.text"},"ts":1486722632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: having this for the smaller specs is already amazing","msgtype":"m.text"},"ts":1486722675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: this is a big complaint from folks we ask to review","msgtype":"m.text"},"ts":1486722694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I built it for reviewing WebIDL PRs","msgtype":"m.text"},"ts":1486722715000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: there was no way I could be effective reviewing stuff otherwise","msgtype":"m.text"},"ts":1486722732000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: glad you did","msgtype":"m.text"},"ts":1486722738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wrt to HTML, I don't think it would be too hard to build the multipage thing","msgtype":"m.text"},"ts":1486722771000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but I don't want to focus on that just now","msgtype":"m.text"},"ts":1486722858000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: i'm pretty sure HTML standard is too big for htmldiff :-(","msgtype":"m.text"},"ts":1486724106000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: multipage HTML wouldn't be?","msgtype":"m.text"},"ts":1486724175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah right. yeah multipage would probably work fine","msgtype":"m.text"},"ts":1486724190000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Anyway, seems like something to tackle later when there's revived interest","msgtype":"m.text"},"ts":1486724194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Meanwhile we can add this feature to other WHATWG standards if nobody has issues with the way it works for the URL Standard","msgtype":"m.text"},"ts":1486724226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds the most bizarre spec language","msgtype":"m.emote"},"ts":1486724827000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"\"Every millisecond, as long as the stop timeout flag is unset, queue a microtask to run these subsubsubsteps: \"","msgtype":"m.text"},"ts":1486724840000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: that looks buggy","msgtype":"m.text"},"ts":1486724891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using microtask there is wrong","msgtype":"m.text"},"ts":1486724914000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"annevk: if you can wait a bit before you extend to other specs, it would be amazing.","msgtype":"m.text"},"ts":1486724945000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Doing something every millisecond also seems suspicious","msgtype":"m.text"},"ts":1486724949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: sure, ping me whenever","msgtype":"m.text"},"ts":1486724962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/xhr/issues/112","msgtype":"m.text"},"ts":1486725041000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: heh, I wonder if I wrote that","msgtype":"m.text"},"ts":1486725257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: what does w3c-test:mirror do? Make the bot upload the PR to WPT?","msgtype":"m.text"},"ts":1486725313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that happens. Looking at the blame in Gecko wondering who has written some odd stuff and realizing hey, it was me :)","msgtype":"m.text"},"ts":1486725320000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"zcorpan: to w3c-test.org?","msgtype":"m.text"},"ts":1486725324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1486725327000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: cool","msgtype":"m.text"},"ts":1486725333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: turns out I wrote it two years ago","msgtype":"m.text"},"ts":1486725403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Every full moon, queue a microtask...\"","msgtype":"m.text"},"ts":1486725491000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug: so I think the reason it does it that way is to able to check the current value of the timeout attribute","msgtype":"m.text"},"ts":1486725537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: but it's indeed rather silly, having said that, I don't immediately know what a good fix would be, defining timers isn't easy","msgtype":"m.text"},"ts":1486725578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why is that using microtasks?","msgtype":"m.text"},"ts":1486725647000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I doubt browsers use microtask there","msgtype":"m.text"},"ts":1486725662000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: I suspect browsers proxy the other way, message whenever timeout updates","msgtype":"m.text"},"ts":1486725710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: instead of polling it every second","msgtype":"m.text"},"ts":1486725719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, fire a timeout which queues a task to cancel the fetch","msgtype":"m.text"},"ts":1486725757000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: so you have a \"process\" that runs the timer","msgtype":"m.text"},"ts":1486725789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: but then whenever the timeout attribute is set, that influences when the timer is done","msgtype":"m.text"},"ts":1486725807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: so those two things need to talk to each other in some way","msgtype":"m.text"},"ts":1486725823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if timeout attribute is set to a new value, the previous timer is cancelled and new one created","msgtype":"m.text"},"ts":1486725832000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: wait so if you start with 2000 and then set timeout to 3000 at 1000, you'd effectively allow the request to go for 4000?","msgtype":"m.text"},"ts":1486725900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: I thought the idea was 3000","msgtype":"m.text"},"ts":1486725913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"when doing reset, you do take into account the time already spent after send","msgtype":"m.text"},"ts":1486725946000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1486725962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should define something more aligned with that model then, seems reasonable and doable","msgtype":"m.text"},"ts":1486726000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how does html spec define setTimeout handling... /me reads","msgtype":"m.text"},"ts":1486726029000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"\"wait ... timeout milliseconds\"","msgtype":"m.text"},"ts":1486726297000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Yeah, that's probably reasonable, but we'll need to store how many milliseconds have passed when we reset","msgtype":"m.text"},"ts":1486726380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Arguably we should define an abstraction that both standards could use, but maybe not for now","msgtype":"m.text"},"ts":1486726401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"who has an iphone and can test http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4882","msgtype":"m.text"},"ts":1486727693000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(interested in whether the native controls have an airplay button for one but not the other)","msgtype":"m.text"},"ts":1486727846000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm maybe it should be x-webkit-wirelessvideoplaybackdisabled or disableremoteplayback these days","msgtype":"m.text"},"ts":1486728158000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: big play buttons","msgtype":"m.text"},"ts":1486728589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and when you play?","msgtype":"m.text"},"ts":1486728612000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I see now that disableRemotePlayback has already been discussed in https://github.com/whatwg/html/issues/2293 so what I wanted to get to is not really relevant","msgtype":"m.text"},"ts":1486728724000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: only the first goes through Apple TV display wise","msgtype":"m.text"},"ts":1486728728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, thanks","msgtype":"m.text"},"ts":1486728741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: both are happy to play sound over it","msgtype":"m.text"},"ts":1486728745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://irccloud.mozilla.com/file/mm8hohrV/IMG_4367.PNG","msgtype":"m.text"},"ts":1486728760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"intredasting","msgtype":"m.text"},"ts":1486728762000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"As you can see rendering is also somewhat different","msgtype":"m.text"},"ts":1486728779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Finally a way to listen to hsivonen in the living room","msgtype":"m.text"},"ts":1486728824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's what any home needs","msgtype":"m.text"},"ts":1486728890000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"😆","msgtype":"m.text"},"ts":1486729753000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hah maybe Henry Story can lobby Trump to sign an Executive Order requiring all browsers to fully implement <keygen> https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/z_qEpmzzKh8/2hkaJdtsCAAJ","msgtype":"m.text"},"ts":1486730706000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: why is https:example.org without base valid?","msgtype":"m.text"},"ts":1486732183000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it's not","msgtype":"m.text"},"ts":1486732340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: then https://url.spec.whatwg.org//branch-snapshots/annevk/validity-example/#example-url-parsing is wrong :-)","msgtype":"m.text"},"ts":1486732378000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1486732387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: only that first one, right?","msgtype":"m.text"},"ts":1486732402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fixing","msgtype":"m.text"},"ts":1486732404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i think so. but haven't tried to verify that the others match the normative text","msgtype":"m.text"},"ts":1486732455000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks for the additional examples, adding them now","msgtype":"m.text"},"ts":1486733435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol annevk/url-ß","msgtype":"m.text"},"ts":1486734764000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"at least good to see github seems to handle it","msgtype":"m.text"},"ts":1486734836000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"💩 is next, just need a good PR for it","msgtype":"m.text"},"ts":1486734864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: other than XHR and fetch() and the crossorigin attribute, are there any other cases where browsers will use the CORS protocol?","msgtype":"m.text"},"ts":1486736665000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: @font-face","msgtype":"m.text"},"ts":1486736679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1486736685000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK, that’s the whole list?","msgtype":"m.text"},"ts":1486736697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(currently)","msgtype":"m.text"},"ts":1486736700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: <script type=module>, new [Shared]Worker(..., { type:\"module\" })","msgtype":"m.text"},"ts":1486736721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1486736727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1486736741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sendBeacon() sometimes, maybe, though not sure if implemented","msgtype":"m.text"},"ts":1486736753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: there might be more, I haven't been keeping a list","msgtype":"m.text"},"ts":1486736776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1486736792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I may actually try to a list together, at MDN I guess","msgtype":"m.text"},"ts":1486736808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: gsnedders: if as per foolip, we just want it branded \"web-platform-tests\" we should just start using that everywhere","msgtype":"m.text"},"ts":1486736978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: gsnedders: that will make things easier to find too","msgtype":"m.text"},"ts":1486736986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ??","msgtype":"m.text"},"ts":1486737040000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: I already use web-platform-tests everywhere I think?","msgtype":"m.text"},"ts":1486737217000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: I mean testthewebforward is legacy","msgtype":"m.text"},"ts":1486737230000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What else did you have in mind?","msgtype":"m.text"},"ts":1486737237000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have no idea what per foolip this is, nor any other context for this.","msgtype":"m.text"},"ts":1486737298000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: README of https://github.com/w3c/web-platform-tests","msgtype":"m.text"},"ts":1486737310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/w3c/web-platform-tests/pull/4796 r?","msgtype":"m.text"},"ts":1486737776000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is there no way to have keyboard accessible drop-down menus without JS? :(","msgtype":"m.text"},"ts":1486737851000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: maybe with :focus-within","msgtype":"m.text"},"ts":1486738148000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, that would work, once that ships","msgtype":"m.text"},"ts":1486738238000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"make sure https://bugs.chromium.org/p/chromium/issues/detail?id=617371 has >= 32 stars","msgtype":"m.text"},"ts":1486739041000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"because stars definitely mean it'll get done :P","msgtype":"m.text"},"ts":1486739178000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: r+","msgtype":"m.text"},"ts":1486739763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: are the CSS tests not integrated these days btw?","msgtype":"m.text"},"ts":1486739774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in w-p-t? no","msgtype":"m.text"},"ts":1486739858000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://stackoverflow.com/questions/21058885/align-bullet-points-to-the-right-instead-of-left is marginally scary","msgtype":"m.text"},"ts":1486740557000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: how sure are you that the definitions in https://url.spec.whatwg.org/#valid-url-string match the various validation errors sprinkled throughout the parser?","msgtype":"m.text"},"ts":1486741612000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems fragile to have two entirely separate ways of defining valid URL string","msgtype":"m.text"},"ts":1486741623000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that's what HTML does","msgtype":"m.text"},"ts":1486741683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I don't disagree, but I don't really see a better way","msgtype":"m.text"},"ts":1486741694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1486741695000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean you could literally just define valid URL string to be any string on which running the parser produces no failures or validation errors :)","msgtype":"m.text"},"ts":1486741715000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: you both want to make it easy for producers, but you also want to make it easy for consumers to flag errors in input","msgtype":"m.text"},"ts":1486741717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I don't think that would make people happy","msgtype":"m.text"},"ts":1486741736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Probably not","msgtype":"m.text"},"ts":1486741740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess this is susceptible to automated testing","msgtype":"m.text"},"ts":1486741744000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Implement some \"fuzzer\" that generates URL strings based on the URL string rules, and run them through the parser","msgtype":"m.text"},"ts":1486741761000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Then try to use some algorithm to depart from the rules and check that they always trigger validation errors or failures","msgtype":"m.text"},"ts":1486741784000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, sounds reasonable for a \"some day\" project","msgtype":"m.text"},"ts":1486741797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: gsnedders promises by the end of the month","msgtype":"m.text"},"ts":1486744066000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cries","msgtype":"m.emote"},"ts":1486744142000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"😊👍","msgtype":"m.text"},"ts":1486744870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wrt to pr-preview, you mentioned you had a (web?) service to build the HTML spec with. Can it return a multipage version? Is it aware which pages have changed?","msgtype":"m.text"},"ts":1486746156000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yes and no","msgtype":"m.text"},"ts":1486746221000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"also at this moment it doesn't actually do the build, just does the wattsi step","msgtype":"m.text"},"ts":1486746239000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but that's fixable","msgtype":"m.text"},"ts":1486746241000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: did you look at the PR tool already in the URL Standard?","msgtype":"m.text"},"ts":1486747925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not realy","msgtype":"m.text"},"ts":1486747932000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: please take a look, it basically modifies OP of PRs with links","msgtype":"m.text"},"ts":1486747972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: only enabled on URL as a trial, but if we all like it I want it everywhere (I like it a lot)","msgtype":"m.text"},"ts":1486748236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is that the tool tobie's been using on WebIDL too? (e.g. https://github.com/heycam/webidl/pull/304)","msgtype":"m.text"},"ts":1486748313000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah, with slight WHATWG tweaks","msgtype":"m.text"},"ts":1486748337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like it.","msgtype":"m.text"},"ts":1486748346000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"😊","msgtype":"m.text"},"ts":1486748370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: it's the same tool. Cleaned up and turned into a push button install thanks to GH launching integrations in beta.","msgtype":"m.text"},"ts":1486748688000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So does anyone have Edge _Insider_?","msgtype":"m.text"},"ts":1486750538000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jyasskin: wait, did you ever end up using record<> in any of your specs?","msgtype":"m.text"},"ts":1486751230000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I haven't chagned https://webbluetoothcg.github.io/web-bluetooth/#dictdef-bluetoothlescanfilterinit to use it yet, but the two objects should be records.","msgtype":"m.text"},"ts":1486751367000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Ah OK :)","msgtype":"m.text"},"ts":1486751379000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"miketaylr: FWIW, I assume returnValue made a comeback due to WebKit/Chromium","msgtype":"m.text"},"ts":1486754247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, fair assumption","msgtype":"m.text"},"ts":1486754282000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: doesn't seem worth it to get three browsers to change as it's rather easy for Firefox to adjust there (and likely better for us even if we haven't heard anything)","msgtype":"m.text"},"ts":1486754298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't doubt that there is bustage out there.","msgtype":"m.text"},"ts":1486754358000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"whats the best way to describe putting an argument in a Promise declaration. e.g. the function in new Promise(function(res, rej) {....})","msgtype":"m.text"},"ts":1486758878000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"AutomatedTester: A callback argument?","msgtype":"m.text"},"ts":1486758970000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Not sure what context you're asking from, so I'm unsure what sort of suggestion to give.)","msgtype":"m.text"},"ts":1486758982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I am trying to spec out https://gist.github.com/AutomatedTester/1405a0036ccb13dc14504a709756c184 essentially","msgtype":"m.text"},"ts":1486759069000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"TabAtkins: I am not sure if I need to describe the callback","msgtype":"m.text"},"ts":1486759097000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"or if its just a given..","msgtype":"m.text"},"ts":1486759103000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"Depends on your audience, honestly.","msgtype":"m.text"},"ts":1486759120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"browser vendors","msgtype":"m.text"},"ts":1486759132000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"its for part of webdriver","msgtype":"m.text"},"ts":1486759146000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"Browser vendors don't need to have the basic working of Promises explained, so you can omit that.","msgtype":"m.text"},"ts":1486759168000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1486759178000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"(Note that your code doesn't actually take onSuccess and onFailure as arguments.)","msgtype":"m.text"},"ts":1486759183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I realised it wasnt right but the \"gist\" of the gist is the right direction","msgtype":"m.text"},"ts":1486759217000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"if that makes any sense :D","msgtype":"m.text"},"ts":1486759222000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"k ^_^","msgtype":"m.text"},"ts":1486759229000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks for the help, I appreciate it","msgtype":"m.text"},"ts":1486759248000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"AutomatedTester: hopefully no new APIs are being specified with callback arguments instead of promise-returning, even in webdriver...","msgtype":"m.text"},"ts":1486759900000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: this is not external facing","msgtype":"m.text"},"ts":1486759927000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"its making sure that our executeScript API can handle promises properly","msgtype":"m.text"},"ts":1486759946000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"I guess I am confused why it needs a spec then","msgtype":"m.text"},"ts":1486759947000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: part of it relied on a user passing in a callback, we are now moving it to allow people to pass in a promise","msgtype":"m.text"},"ts":1486759984000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"Hmm OK, I don't quite understand, but am happy to trust you with the details :)","msgtype":"m.text"},"ts":1486760068000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So uh","msgtype":"m.text"},"ts":1486762218000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"Am I supposed to ask here for an account?","msgtype":"m.text"},"ts":1486762226000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"MassDebates: for the wiki? Sure, what do you want to edit?","msgtype":"m.text"},"ts":1486762354000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not entirely sure. After checking out the history of the two orgs I want to contribute, but I only want to contribute in ways that I best can. I don't think I can provide much help in regards to directly writing spec, but I'm a darned good copy editor. I have a big passion for CSS and I enjoy playing with advanced CSS. I don't see a listing for","msgtype":"m.text"},"ts":1486762635000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":" CSS specifically in the specifications developed aside from HTML.","msgtype":"m.text"},"ts":1486762635000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"css largely goes through the w3c","msgtype":"m.text"},"ts":1486762711000,"senderName":"kbrosnan","senderId":"kbrosnan@irc"},
{"content":{"body":"I enjoy doing demos and test cases that involve HTML and CSS, and I'm pretty good with HTML, too.","msgtype":"m.text"},"ts":1486762713000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"That being said, I think that I can contribute to HTML and -","msgtype":"m.text"},"ts":1486762769000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"kbrosnan:  Yes, I'm aware, which is why I mentioned that I checked out the spec listings to see. When I saw that you guys didn't have it there, I realized that I may not be AS helpful, but I think I still can provide something of value to the org","msgtype":"m.text"},"ts":1486762829000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"That being said, I think that I can contribute to HTML and the wiki in general, but I might be mistaken. I don't really need access to an account or anything if there's sensitive material. Just want to help by doing what I enjoy","msgtype":"m.text"},"ts":1486762983000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"i'm not a gatekeeper here. just happen to work on a browser and know several of the active people in this channel","msgtype":"m.text"},"ts":1486763393000,"senderName":"kbrosnan","senderId":"kbrosnan@irc"},
{"content":{"body":"I understand. I'm not treating this like an interview. I want you to know the context of why I came here.","msgtype":"m.text"},"ts":1486763480000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"I guess I'm trying to ask what you think I'll be able to help out with.","msgtype":"m.text"},"ts":1486763506000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"MassDebates: Copy-editing of our CSS specs <https://github.com/w3c/csswg-drafts/> in the form of PRs is always appreciated.","msgtype":"m.text"},"ts":1486763573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I merge wording fixes as fast as I see them, usually.","msgtype":"m.text"},"ts":1486763593000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Looking now","msgtype":"m.text"},"ts":1486763758000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"Okay, sounds good.","msgtype":"m.text"},"ts":1486763774000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1486763783000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"MassDebates: also https://github.com/w3c/fxtf-drafts","msgtype":"m.text"},"ts":1486765014000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Oooh","msgtype":"m.text"},"ts":1486765157000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"Now that's much more interesting","msgtype":"m.text"},"ts":1486765165000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"I will do both though.","msgtype":"m.text"},"ts":1486765183000,"senderName":"MassDebates","senderId":"MassDebates@irc"},
{"content":{"body":"MassDebates: sorry I switched away from this tab. Happy to help you get a wiki account, drop me a private message with your email address you want to use. Also feel free to submit PRs to specs; we try to label bugs as such e.g. https://github.com/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+bug%22+user%3Awhatwg","msgtype":"m.text"},"ts":1486768572000,"senderName":"Domenic","senderId":"Domenic@irc"}
]