[
{"content":{"body":"is whatwg.org down or is it just me?","msgtype":"m.text"},"ts":1179044400000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it appears to be down","msgtype":"m.text"},"ts":1179044760000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"is the HTML5 spec anywhere else, like w3.org?","msgtype":"m.text"},"ts":1179044820000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yes, in CVS","msgtype":"m.text"},"ts":1179044821000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"dev.w3.org","msgtype":"m.text"},"ts":1179044822000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://dev.w3.org/cvsweb/html5/","msgtype":"m.text"},"ts":1179044823000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"awesome :)","msgtype":"m.text"},"ts":1179044880000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Hmm, the HTML5 spec seems to say that comments cannot occur before the root element","msgtype":"m.text"},"ts":1179049500000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: where do you read that?","msgtype":"m.text"},"ts":1179049560000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"tree construction, 8.2.4.1. The initial phase","msgtype":"m.text"},"ts":1179049561000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"that's before the doctype, no?","msgtype":"m.text"},"ts":1179049620000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm. looks like the entire dreamhost is down","msgtype":"m.text"},"ts":1179049621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can't get to damowmow portal or the DOM viewer to check this","msgtype":"m.text"},"ts":1179049622000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah, so only before the doctype","msgtype":"m.text"},"ts":1179049680000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"dreamhost has been down a bit too often lately","msgtype":"m.text"},"ts":1179049681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mikeday: yeah... but then the #writing section goes ahead and says that comments are allowed before the doctype","msgtype":"m.text"},"ts":1179049682000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hrmph, that's helpful :)","msgtype":"m.text"},"ts":1179049683000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"pointed that out before","msgtype":"m.emote"},"ts":1179049740000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"U+00 is converted to U+FFFD, but what about other weird characters like U+07?","msgtype":"m.text"},"ts":1179049800000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: other weird stuff is preserved","msgtype":"m.text"},"ts":1179049920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has complained about that before","msgtype":"m.emote"},"ts":1179049921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is noticing a pattern here","msgtype":"m.emote"},"ts":1179049922000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"okay, one more thing: what does RCDATA stand for?","msgtype":"m.text"},"ts":1179049980000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"replaced character data","msgtype":"m.text"},"ts":1179050040000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"what exactly is replaced about it?","msgtype":"m.text"},"ts":1179050100000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"entities","msgtype":"m.text"},"ts":1179050101000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"can have entities... ah.","msgtype":"m.text"},"ts":1179050102000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"doesn't really matter what it stands for...","msgtype":"m.text"},"ts":1179051840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just implement the steps","msgtype":"m.text"},"ts":1179051841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, whatwg is down?","msgtype":"m.text"},"ts":1179053340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is the mail server down too?","msgtype":"m.text"},"ts":1179053400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders how that works","msgtype":"m.emote"},"ts":1179053401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems that lists.whatwg.org is not down","msgtype":"m.text"},"ts":1179053580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on the other hand, my e-mail hasn't made it through to the archives yet...","msgtype":"m.text"},"ts":1179053581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi annevk ","msgtype":"m.text"},"ts":1179055080000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"took a look at the html5lib code, looks rather clean","msgtype":"m.text"},"ts":1179055140000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"just toying with some C code","msgtype":"m.text"},"ts":1179055200000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it's a shame that you've got to do so much irrelevant stuff in C, though.","msgtype":"m.text"},"ts":1179055201000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"python is nice","msgtype":"m.text"},"ts":1179055380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"especially to \"quickly\" prototype stuff like this","msgtype":"m.text"},"ts":1179055381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the problem is that it doesn't scale well for very large pages, such as the HTML5 spec","msgtype":"m.text"},"ts":1179055382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could probably speed it up, at the risk of making the code much uglier...","msgtype":"m.text"},"ts":1179055440000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yeah... rather have a fast C implementation with Python wrappers I think","msgtype":"m.text"},"ts":1179055560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's the spirit, outsource the ugliness somewhere else :)","msgtype":"m.text"},"ts":1179055680000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1179055800000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"the data state can have a very tight inner loop, just scanning for the next & or <","msgtype":"m.text"},"ts":1179055801000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or EOF","msgtype":"m.text"},"ts":1179055860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"charsUntil() handles EOF automatically","msgtype":"m.text"},"ts":1179055861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you know","msgtype":"m.text"},"ts":1179055862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm assuming you're working on a chunk of data, so you know there is no EOF in the middle of the chunk","msgtype":"m.text"},"ts":1179055920000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"if you do script execution document.close() might do that","msgtype":"m.text"},"ts":1179055980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't sure","msgtype":"m.emote"},"ts":1179055981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it depends on how you implement stuff, I guess","msgtype":"m.text"},"ts":1179055982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1179055983000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I wonder which is faster: if '&' else if '<' else ..., or a table lookup","msgtype":"m.text"},"ts":1179056040000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"eg. if charTable[currChar] == MARKUP_CHAR","msgtype":"m.text"},"ts":1179056041000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"from the little I know I believe table lookup is faster","msgtype":"m.text"},"ts":1179056100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, how would you handle \"any other character\" in that case?","msgtype":"m.text"},"ts":1179056101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I don't think I'm the right person to discuss this with though.)","msgtype":"m.text"},"ts":1179056102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any other character would be the else case","msgtype":"m.text"},"ts":1179056160000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"that would work nicely then I suppose","msgtype":"m.text"},"ts":1179056220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if (... == MARKUP_CHAR) { change state } else { keep accumulating character data }","msgtype":"m.text"},"ts":1179056221000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"always frustrates me that efficient code looks less and less like the specification, though","msgtype":"m.text"},"ts":1179056222000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"we still don't have a magical compiler that converts spec -> code","msgtype":"m.text"},"ts":1179056223000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"just use the tests from html5lib ","msgtype":"m.text"},"ts":1179056280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and maybe contribute some more","msgtype":"m.text"},"ts":1179056281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and pay some attention to the spec too :)","msgtype":"m.text"},"ts":1179056282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right :)","msgtype":"m.text"},"ts":1179056340000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hmm, using the HTML5 spec as a test document is rather meta","msgtype":"m.text"},"ts":1179056520000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"especially considering it's not very well-formed :/","msgtype":"m.text"},"ts":1179056521000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"the multipage version of HTML5 is generated using html5lib","msgtype":"m.text"},"ts":1179056580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's meta","msgtype":"m.text"},"ts":1179056581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"neat :)","msgtype":"m.text"},"ts":1179056640000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: do you use a DFA for XML?","msgtype":"m.text"},"ts":1179056820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, not yet, but I'd like to","msgtype":"m.text"},"ts":1179056880000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I've generated one, but haven't got around to building a parser around it yet.","msgtype":"m.text"},"ts":1179056881000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: surely a function call per tokenizer state is good enough considering that it is the de facto way to write XML parsers","msgtype":"m.text"},"ts":1179056882000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1179056940000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"for HTML5 you mean?","msgtype":"m.text"},"ts":1179056941000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I intend to optimize away the explicit state variable but I hesitate going all the way to a hand-rolled DFA","msgtype":"m.text"},"ts":1179056942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mikeday: I meant a function call (possibly inlined by compiler) per state in the HTML5 tokenizer spec","msgtype":"m.text"},"ts":1179057000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mikeday: the XML parsers that I've looked at work roughly that way","msgtype":"m.text"},"ts":1179057001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"after looking at the spec, I've seen that the state machine is rather more complicated than the average DFA","msgtype":"m.text"},"ts":1179057060000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"with XML it's easier, as you're going from grammar to DFA","msgtype":"m.text"},"ts":1179057061000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"there are some additional switches indeed based on tree construction feedback","msgtype":"m.text"},"ts":1179057120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although I think you should be able to integrate those too","msgtype":"m.text"},"ts":1179057121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, it would take a bit of messing around though","msgtype":"m.text"},"ts":1179057122000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(it leads you further away from the spec though)","msgtype":"m.text"},"ts":1179057123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that too.","msgtype":"m.text"},"ts":1179057124000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"shouldn't be much of an issue I think...","msgtype":"m.text"},"ts":1179057125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"by the way, a tiny test seems to show that the if/else is slightly faster than table","msgtype":"m.text"},"ts":1179057180000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"if only two characters are being checked for","msgtype":"m.text"},"ts":1179057181000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"see, don't trust me :)","msgtype":"m.text"},"ts":1179057182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but if three or more characters are being checked for, table wins by far","msgtype":"m.text"},"ts":1179057183000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"oh, ok :)","msgtype":"m.text"},"ts":1179057184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eg. for whitespace characters it would be a win","msgtype":"m.text"},"ts":1179057185000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"for the data state inner loop, not so much","msgtype":"m.text"},"ts":1179057240000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I wonder if it is possible to construct a hash function that hashes all UTF-16 code units to a small range of integers so that markup-significant characters get unique scalars and neutral characters overlap","msgtype":"m.text"},"ts":1179057241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"grins","msgtype":"m.emote"},"ts":1179057300000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(and effient one, that is)","msgtype":"m.text"},"ts":1179057301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"efficient even","msgtype":"m.text"},"ts":1179057302000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"let's see, markup significant characters are all < U+007F","msgtype":"m.text"},"ts":1179057303000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"just make sure that everything above 127 is mapped to 127..255 range","msgtype":"m.text"},"ts":1179057360000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and ASCII stays as it is","msgtype":"m.text"},"ts":1179057420000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or do you want & and < to map to the same small integer?","msgtype":"m.text"},"ts":1179057421000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"didn't think that far","msgtype":"m.text"},"ts":1179057422000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gotta go. later","msgtype":"m.text"},"ts":1179057423000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1179057424000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hrm, jumping into the micro-optimisation, I forgot that no one uses UTF-16 anyway","msgtype":"m.text"},"ts":1179057480000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(for given values of no one)","msgtype":"m.text"},"ts":1179057481000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"in some states unicode chars are important","msgtype":"m.text"},"ts":1179057720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1179057721000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"tag name state","msgtype":"m.text"},"ts":1179057722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I suppose that doesn't matter much","msgtype":"m.text"},"ts":1179057723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's actually in the anything else case so...","msgtype":"m.text"},"ts":1179057780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nm me","msgtype":"m.text"},"ts":1179057781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I noticed that the tag names all get lowercased","msgtype":"m.text"},"ts":1179057782000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"that would mean that <camelCase> XML tags can't be embedded in HTML5, right?","msgtype":"m.text"},"ts":1179057783000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ASCII lowercase, yes","msgtype":"m.text"},"ts":1179057960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XML can't be embedded in HTML5","msgtype":"m.text"},"ts":1179057961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true, you could have camelCase tags as long as they use accented letters :)","msgtype":"m.text"},"ts":1179057962000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"are unknown tags still added to the DOM?","msgtype":"m.text"},"ts":1179058020000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"of course","msgtype":"m.text"},"ts":1179058080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's in fact no difference between \"unknown tags\" and <span> for instance","msgtype":"m.text"},"ts":1179058081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(iirc)","msgtype":"m.text"},"ts":1179058082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so arbitrary vocabularies can be included,","msgtype":"m.text"},"ts":1179058140000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"as long as they don't require <camelCase>","msgtype":"m.text"},"ts":1179058141000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or plain uppercase, for that matter","msgtype":"m.text"},"ts":1179058142000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"seems like MathML would work fine","msgtype":"m.text"},"ts":1179058143000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"there's no namespace support either","msgtype":"m.text"},"ts":1179058200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but in due course we would add limited support for that I suppose","msgtype":"m.text"},"ts":1179058260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Doesn't http://dev.w3.org/cvsweb/~checkout~/html5/spec/Overview.html?rev=1.12&content-type=text/html;%20charset=iso-8859-1#pixel cover the points about how an arbitrary object is treated as ImageData?","msgtype":"m.text"},"ts":1179058320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, I think I've been looking at an old version of the spec","msgtype":"m.text"},"ts":1179058380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mikeday: I'd expect table lookups to usually be much slower than if/elses in real programs because you won't be able to keep the lookup table in the cache for very long (if you're processing lots of other data at the same time) and it'll have to do really expensive memory reads","msgtype":"m.text"},"ts":1179058440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"People used to use lookup tables for fast sin/cos calculations, but now it's much quicker just to get the CPU to recalculate it every time because memory is slow","msgtype":"m.text"},"ts":1179058500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, the table is pretty small, 256 bytes, but the processing other data at the same time constraint could be a problem","msgtype":"m.text"},"ts":1179058501000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Caches are pretty small too :-)","msgtype":"m.text"},"ts":1179058560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thanks Philip`","msgtype":"m.text"},"ts":1179058561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(like, uh, 16KB or something?)","msgtype":"m.text"},"ts":1179058562000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(depending on what processor you have)","msgtype":"m.text"},"ts":1179058563000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the whitespace test requires five else if branches, though","msgtype":"m.text"},"ts":1179058620000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"at least it wouldn't be hard to try both methods on real world data","msgtype":"m.text"},"ts":1179058680000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"as it's not really fundamental to the structure of the code","msgtype":"m.text"},"ts":1179058681000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"annevk why is on http://annevankesteren.nl/2006/08-paintr21 It works in Firefox (given a few hacks), with the notable exception of the \"Save it!\" button.? Save works for me in FF 2.0.0.3","msgtype":"m.text"},"ts":1179059100000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"the only difference  is nice Paintr logo in Opera vs. text logo in FF","msgtype":"m.text"},"ts":1179059160000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"ah see the logo is made by css content:url","msgtype":"m.text"},"ts":1179059280000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"that thing was made before FF2","msgtype":"m.text"},"ts":1179059400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can you update the text? 8-)))","msgtype":"m.text"},"ts":1179059401000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"wonders if <div irrelevant><img ...><img ...></div> would be a sensible way of pre-loading images to be used in a canvas, so you can just wait for window.onload and then be sure all the images are loaded","msgtype":"m.emote"},"ts":1179061860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think if you do img.src in a script the load event is delayed as well","msgtype":"m.text"},"ts":1179061920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, that sounds better","msgtype":"m.text"},"ts":1179062040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What's the deal with r\\^ole?","msgtype":"m.text"},"ts":1179062460000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It's the (La)TeX spelling, I believe","msgtype":"m.text"},"ts":1179062520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"of rôle?","msgtype":"m.text"},"ts":1179062580000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Maybe, but my IRC client mangles that","msgtype":"m.text"},"ts":1179062640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"looks in the log","msgtype":"m.emote"},"ts":1179062641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah, yes, that","msgtype":"m.text"},"ts":1179062642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Same as r&ocirc;le too, but not quite so ugly","msgtype":"m.text"},"ts":1179062700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But what's wrong with just role, was more my question","msgtype":"m.text"},"ts":1179062760000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"aargh!  I've asked 3 times for Patrick (or anyone else) to provide examples of tables that would benefit from the headers attribute, and each time he's bypassed the question entirely","msgtype":"m.text"},"ts":1179062761000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"lol, people are wasting their time on www-html? :)","msgtype":"m.text"},"ts":1179062762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's so annoying that they won't contribute when asked, and then bitch about being ignored","msgtype":"m.text"},"ts":1179062763000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"they are indeed","msgtype":"m.text"},"ts":1179062820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh - just spelling it \"role\" seems far more sensible :-)","msgtype":"m.text"},"ts":1179062821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fun","msgtype":"m.text"},"ts":1179062822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Isn't that what the semantic web is all about?","msgtype":"m.text"},"ts":1179062823000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Getting other people to do all the work, and then complaining about nothing happening","msgtype":"m.text"},"ts":1179062824000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That sounds like the approach of getting authors to mark up all their data correctly in a machine-processable form, so you can build advanced search engines on the semantic web that correctly understand the relationships between pieces of data","msgtype":"m.text"},"ts":1179063120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"compared to e.g. Google, which just puts up with whatever rubbish authors create","msgtype":"m.text"},"ts":1179063180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but it's kind of obvious which one is doing better at the moment","msgtype":"m.text"},"ts":1179063181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wow, seems Opera's layout engine is 1345% more green that other competing engines... impressive http://en.wikipedia.org/wiki/Comparison_of_layout_engines_(WHATWG) ","msgtype":"m.text"},"ts":1179063600000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"one keeps wondering why such things make it into Wikipedia","msgtype":"m.text"},"ts":1179063660000,"senderName":"maikmerten","senderId":"maikmerten@irc"},
{"content":{"body":"Probably because all browsers have their share of fanatical fanboys","msgtype":"m.text"},"ts":1179063661000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"prolly also because it doesn't list all the WHATWG features","msgtype":"m.text"},"ts":1179063720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You could replace the whole first table with \"Web Forms 2.0:   No   ?   Yes\" and then Opera wouldn't be seen as having such an unfair lead","msgtype":"m.text"},"ts":1179063900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Thinking of it as a lead is a problem to begin with, IMO","msgtype":"m.text"},"ts":1179063960000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Safari for instance does support type=range iirc","msgtype":"m.text"},"ts":1179064020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Firefox supports persistent storage","msgtype":"m.text"},"ts":1179064021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also one could change <video> to no in Opera, because it's not fair to count very experimental builds that don't even match the WA1 spec","msgtype":"m.text"},"ts":1179064022000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Internet Explorer supports parts of drag & drop, draggable, contenteditable, etc.","msgtype":"m.text"},"ts":1179064023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if anyone has made a <canvas> paint program that can save and load from globalStorage","msgtype":"m.emote"},"ts":1179064140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, actually, that wouldn't work because you can't draw data: images then call toDataURL again :-(","msgtype":"m.text"},"ts":1179064141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe the new definition of origin helps with that?","msgtype":"m.text"},"ts":1179064380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cause in theory that would be a safe image, unless you got it after a redirect","msgtype":"m.text"},"ts":1179064440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"The origin of a Document or image that was generated from a data: URI found in another Document or in a script is the origin of the that Document or script.\" - oh, sounds like that covers it","msgtype":"m.text"},"ts":1179064441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Although if you store it in globalStorage and then retrieve it later...","msgtype":"m.text"},"ts":1179064500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1179064501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'd just get a string out of globalStorage, and I assume strings don't have complex security arrangements","msgtype":"m.text"},"ts":1179064560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and then you'd create an image from that string, but that image would be created in your own document","msgtype":"m.text"},"ts":1179064561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sounds tricky","msgtype":"m.text"},"ts":1179064620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(If you've got the data: string, you could rewrite libpng in JS and get the image data anyway, so the only problem is in whether you're allowed to get the string in the first place)","msgtype":"m.text"},"ts":1179064680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and you should be allowed to get strings from globalStorage, because otherwise it'd be a bit pointless...)","msgtype":"m.text"},"ts":1179064681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I don't know if that agrees with what the spec says","msgtype":"m.text"},"ts":1179064682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose data: URLs not retrieved from <img> objects or non-same origin <canvas> objects are to be considered safe","msgtype":"m.text"},"ts":1179064740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and that therefore invoking toDataURL() should not fail and drawImage() should not mark the <canvas> object non-same origin","msgtype":"m.text"},"ts":1179064741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose the problem is that painting a data URL might not always be safe","msgtype":"m.text"},"ts":1179064980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://weblog.200ok.com.au/2007/05/what-i-want-from-new-markup-spec.html","msgtype":"m.text"},"ts":1179074400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. Looks like we need some kind of tutorial to explain how the heading structure works","msgtype":"m.text"},"ts":1179074640000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://www.kavoir.com/2007/05/html5-adopted-by-w3c.html is someone who thinks Chris Wilson will be editor","msgtype":"m.text"},"ts":1179074700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also thinks Microsoft is one of the key contributing groups in the WHAT-WG","msgtype":"m.text"},"ts":1179074880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://ma.gnolia.com/people/apartness/bookmarks/prejesh","msgtype":"m.text"},"ts":1179074881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.designerstalk.com/forums/web-standards/26075-web-standards-danger.html","msgtype":"m.text"},"ts":1179075000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.elementary-group-standards.com/web-standards/web-standards-html5-support-existing-content.html","msgtype":"m.text"},"ts":1179075060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is glad he is wringting in Czech only, so all his mistakes cannot by discussed here 8-)","msgtype":"m.emote"},"ts":1179075540000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"I wonder why people on www-html think there was some arbitrary descision process going on... The sole reason <samp> and such are still here is because dropping them would cost more.","msgtype":"m.text"},"ts":1179075600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think there have hardly been any arbitrary descisions with regards to HTML5","msgtype":"m.text"},"ts":1179075660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why would one want to drop such elements?","msgtype":"m.text"},"ts":1179075960000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"annevk tsk tsk <m>","msgtype":"m.text"},"ts":1179076140000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"annevk, I think he's just using code, samp, etc. to make a point about dropping things like headers=\"\" and summary=\"\"","msgtype":"m.text"},"ts":1179076260000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"personally, I somewhat agree with keeping headers (I'm just trying to get them to help find evidence for it), though I'm undecided about summary","msgtype":"m.text"},"ts":1179076320000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://canvex.lazyilluminati.com/misc/summary.html is how people seem to be using summary now","msgtype":"m.text"},"ts":1179076440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"((Can't remember if I pointed that out here before))","msgtype":"m.text"},"ts":1179076500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, what was the total sample size surveyed?","msgtype":"m.text"},"ts":1179076620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"wow, so many of them are used for presentational purposes","msgtype":"m.text"},"ts":1179076740000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"That was 2523 pages, of which 105 had a summary attribute anywhere","msgtype":"m.text"},"ts":1179076920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think we need a larger sample size","msgtype":"m.text"},"ts":1179076980000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"The results are probably misleading because a few sites have a lot of distinct summaries","msgtype":"m.text"},"ts":1179076981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the results should be grouped by domain name to deal with that","msgtype":"m.text"},"ts":1179077040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"It also seems quite hard to analyse the results automatically since pretty much everyone uses totally different strings (except for those that use \"\")","msgtype":"m.text"},"ts":1179077100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But it would be useful to get much better data than this","msgtype":"m.text"},"ts":1179077101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah, you could probably try to filter on things like the word \"layout\" and maybe the length (e.g. < 4 words is relatively useless)","msgtype":"m.text"},"ts":1179077160000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"would try to do something better if he didn't have far too much urgent work to do now instead :-)","msgtype":"m.emote"},"ts":1179077340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"are you going to release the code of the tool soon, so others can work with it?","msgtype":"m.text"},"ts":1179077400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'll attempt to do that once I have time","msgtype":"m.text"},"ts":1179077460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's not like it's particularly interesting or difficult code, though - it just downloads a load of pages into a database, then parses them all and walks through the tree trying to find things that match some condition, then sticks the results in a table","msgtype":"m.text"},"ts":1179077461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Can you get something like an XML database that does really fast queries on tree-structured data? That'd be quite handy for this kind of thing, after working around the problem that lots of sites can't be serialised into well-formed XML)","msgtype":"m.text"},"ts":1179077520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TagSoup?","msgtype":"m.text"},"ts":1179077580000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip` have you some experience with xml databases?","msgtype":"m.text"},"ts":1179077581000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"met_: None at all","msgtype":"m.text"},"ts":1179077640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"my colleagues recoomentder me http://exist.sourceforge.net/ but i never tried","msgtype":"m.text"},"ts":1179077641000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"also you can use xml in postgresql (with xpath etc.), don't mentioning Oracle and MS SQL","msgtype":"m.text"},"ts":1179077700000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"Ah, looks like it could be useful","msgtype":"m.text"},"ts":1179077820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and here is a link about postgresql and xpath http://www.throwingbeans.org/postgresql_and_xml.html","msgtype":"m.text"},"ts":1179077880000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"ms sql2005 and oracle (not sure wich version) have it natively as xml datatypes","msgtype":"m.text"},"ts":1179077940000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"Hopefully the databases do some kind of indexing, because running unindexed queries over 100MB of XML doesn't sound like the absolute fastest thing ever","msgtype":"m.text"},"ts":1179078000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or maybe I'm thinking from the wrong perspective for this kind of thing","msgtype":"m.text"},"ts":1179078060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ms and oracle yes","msgtype":"m.text"},"ts":1179078061000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"(For added fun, some of my downloaded documents are actually PDF files, parsed by html5lib into something that I expect is quite hideous. Maybe I should check the content-type on these things...)","msgtype":"m.text"},"ts":1179078240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"whow","msgtype":"m.text"},"ts":1179078300000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"and what other types like *.doc etc ","msgtype":"m.text"},"ts":1179078301000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"I don't see any of those","msgtype":"m.text"},"ts":1179078360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I just got the URLs from Yahoo search results (since they're nicer than Google and still provide search APIs), so it's limited to what they files they think are worth putting in the results","msgtype":"m.text"},"ts":1179078361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"csarven, what about it?","msgtype":"m.text"},"ts":1179084240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i find <m> arbitrary but im sure <samp> has its own story","msgtype":"m.text"},"ts":1179084241000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"<samp> is just there because dropping it would have little value","msgtype":"m.text"},"ts":1179084300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<m> is there because lots of pages use it","msgtype":"m.text"},"ts":1179084360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aiui","msgtype":"m.text"},"ts":1179084361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought HTML5 was starting from a clean slate and only adding features when there's good enough reasons to justify adding them...","msgtype":"m.text"},"ts":1179084362000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"lots of pages use lots of things =)","msgtype":"m.text"},"ts":1179084420000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"(or at least I'm fairly sure I remember people using that as an argument)","msgtype":"m.text"},"ts":1179084421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip` that would be the ideal approach but it is not always the case","msgtype":"m.text"},"ts":1179084422000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"Philip`, in general, ye","msgtype":"m.text"},"ts":1179084480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s","msgtype":"m.text"},"ts":1179084481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tends to agree with David Baron that for implementors every HTML feature needs to be specified","msgtype":"m.emote"},"ts":1179086100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(this includes <frameset>)","msgtype":"m.text"},"ts":1179086101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. If you build navigation systems, you need to know that the earth is round even if a flat earth would be nicer","msgtype":"m.text"},"ts":1179087060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk, are you referring to David's latest on www-html?  I didn't get the relevance, since the discussion was related to document conformance only.","msgtype":"m.text"},"ts":1179087180000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the contents of his e-mail are relevant imo","msgtype":"m.text"},"ts":1179087240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although I agree it didn't make much sense in context","msgtype":"m.text"},"ts":1179087241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, it's relevant to the spec in general","msgtype":"m.text"},"ts":1179087300000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"is there now relevant discussion on www-html? I unsubscribed to respect the HTML WG email recess.","msgtype":"m.text"},"ts":1179087301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, not really","msgtype":"m.text"},"ts":1179087360000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'll let you know when something important is posted","msgtype":"m.text"},"ts":1179087361000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: thanks","msgtype":"m.text"},"ts":1179087420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"nice! I can refer to this next time someone tries to shift the burden of proof on to me to disprove their claim http://en.wikipedia.org/wiki/Burden_of_proof#Science_and_other_uses","msgtype":"m.text"},"ts":1179087480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, nice reference, I hadn't seen that before and ended up writing up our own for microformats.org: http://microformats.org/wiki/brainstorming#Burden_of_Proof","msgtype":"m.text"},"ts":1179091140000,"senderName":"tantek","senderId":"tantek@irc"}
]