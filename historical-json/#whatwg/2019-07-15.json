[
{"content":{"body":"annevk: This would be less of an issue if *only* cross-origin iframes were deferred, right? (Not sure if it would be a non-issue though, and probably doesn't exactly solve the real issue)","msgtype":"m.text"},"ts":1563158681000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: no, sandboxing also matters here","msgtype":"m.text"},"ts":1563166922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there a valid way in IDL to inherit/union enums?","msgtype":"m.text"},"ts":1563177337000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: don't think so and I don't think we should add it necessarily, the whole partial thing is already messy (reposting now the netsplit is over)","msgtype":"m.text"},"ts":1563179943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fair enough. Yeah I missed that message in the split","msgtype":"m.text"},"ts":1563179987000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: it seems that we have some comments on the original issue from mozilla and chrome folks that generally unweirding the IDL for math elements would be good, which is really what we're looking for - it seems there is some discussion about where that should happen - move into element, or in the existing (new) HTMLOrSVGElement mixin or a new one... because of that I'm unsure where to take this...","msgtype":"m.text"},"ts":1563202320000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"https://github.com/mathml-refresh/mathml/issues/83#issuecomment-509713648 for recent comments","msgtype":"m.text"},"ts":1563202353000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I think the thing is that there's definitely a change to HTML idl, we're just unsure where - we'd suggested just chaning the name of one interface, but I guess there are options -- how to pursue? advice? thoughts?","msgtype":"m.text"},"ts":1563202449000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: I feel like I've stated this before, but I'll try to be even more clear: I'm not interested in changing the name of HTMLOrSVGElement for a long time. I want to see some serious stability and usage of it in MathML before we make an editorial change in that regard. You should proceed with the current name, and gather interest in implementing *observable, testable changes*, not editorial renamings.","msgtype":"m.text"},"ts":1563202618000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"For example, it would be very premature to rename it if, as it sounds like from that thread, people are interested in moving things to Element instead.","msgtype":"m.text"},"ts":1563202672000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"As for how to make such observable, testable changes happen, I think the usual process: posting a PR, posting tests, getting implementer agreement, seeing some intent-to-ships...","msgtype":"m.text"},"ts":1563202720000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \"for a long time\"?","msgtype":"m.text"},"ts":1563202969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"posting tests seems pretty straightforward as observably it shouldn't matter how you achieve this, but posting a PR of what exactly?","msgtype":"m.text"},"ts":1563202974000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: presumably there's some spec change on the Math side at least to make objects implement this interface?","msgtype":"m.text"},"ts":1563203004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1563203014000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: or if you move things to Element you'd need changes to both HTML and Math","msgtype":"m.text"},"ts":1563203017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: sounds like a PR to me","msgtype":"m.text"},"ts":1563203026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: but in general, assuming https://whatwg.org/working-mode#changes is followed changes can be discussed","msgtype":"m.text"},"ts":1563203044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: I mean, assuming that's followed I'd expect changes to be incorporated","msgtype":"m.text"},"ts":1563203109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there anything for <link> or <style> tags like what the media=\"\" attribute does for the stylesheet contained inside for CSS feature queries, which in CSS use @supports and in JS can be tested with CSS.supports()? Does something like a supports=\"\" attribute exist?","msgtype":"m.text"},"ts":1563217620000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"I guess it was left unclear who could perhaps ask for space for the web components meeting @tpac. hober?","msgtype":"m.text"},"ts":1563222990000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"innovati: not that I'm aware of. It's also tricky to do, I imagine, because it wouldn't be backward-compatible.","msgtype":"m.text"},"ts":1563225925000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"the CSS syntax makes so that older agents ignore the whole of @supports { .. }","msgtype":"m.text"},"ts":1563225940000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"but HTML wouldn't behave that way","msgtype":"m.text"},"ts":1563225945000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"innovati: There's not. It wouldn't make a ton of sense to add such, as @supports is rarely a single test for the whole stylesheet; those rules belong in the sheet itself.","msgtype":"m.text"},"ts":1563225967000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"people were asking, I think with the hope of not having to load the stylesheet in a browser they they know won't need it. Would the best approach for this to use JS and CSS.supports to conditionally link in only the needed stylesheets instead?","msgtype":"m.text"},"ts":1563226221000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"smaug____: oh, umm, maybe? i'll ask.","msgtype":"m.text"},"ts":1563226416000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: rniwa pinged here, and then we realized webcomponents isn't anymore part of Web Apps WG (or Web Plat, can't recall its current name)","msgtype":"m.text"},"ts":1563226502000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"innovati: Hm. I'm still on the side of \"you won't normally wrap a whole stylesheet in a single @supports test\", and if you're breaking up your stylesheets small enough that you *would* wrap the whole thing in one, you're probably paying way more in latency than you would be in transfer.","msgtype":"m.text"},"ts":1563227426000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"innovati: Anyway, <style>@import(\"foo\") all and supports(...);</style> should work.","msgtype":"m.text"},"ts":1563227453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TIL you can use media query list with @import, I've never seen anything like this before. What browsers support this kind of syntax?","msgtype":"m.text"},"ts":1563227624000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"None, I think. ^_^","msgtype":"m.text"},"ts":1563228152000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, you can use MQs in all of them, I think.","msgtype":"m.text"},"ts":1563228162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but not support queries.","msgtype":"m.text"},"ts":1563228166000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]