[
{"content":{"body":"Hello?","msgtype":"m.text"},"ts":1512364670000,"senderName":"gg20","senderId":"gg20@irc"},
{"content":{"body":"sounds pretty quiet in here","msgtype":"m.text"},"ts":1512364802000,"senderName":"gg20","senderId":"gg20@irc"},
{"content":{"body":"That may be because itâ€™s IRC and not Skype","msgtype":"m.text"},"ts":1512367195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol @annevk","msgtype":"m.text"},"ts":1512373348000,"senderName":"tkore\\work","senderId":"tkore\\work@irc"},
{"content":{"body":"annevk: thought the urls through and you were right, I can dramatically simplify them.","msgtype":"m.text"},"ts":1512377088000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1512377114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: settled for:","msgtype":"m.text"},"ts":1512377700000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/oNS0tw98/","msgtype":"m.text"},"ts":1512377712000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: it's important to do: /infra/45/7dfd134.html instead of /infra/7dfd134.html, otherwise you get lots of noise in diffs (e.g. between PR numbers)","msgtype":"m.text"},"ts":1512377772000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"When you have multiple PRs that have the same merge base","msgtype":"m.text"},"ts":1512377803000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it seems nice to include the PR number actually","msgtype":"m.text"},"ts":1512377818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: gives you some assurance you're looking at the correct thing","msgtype":"m.text"},"ts":1512377840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we could even do it for the diffs","msgtype":"m.text"},"ts":1512377844000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: please; thanks for doing this","msgtype":"m.text"},"ts":1512377870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: done.","msgtype":"m.text"},"ts":1512380791000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I'm surprised https://lcov-report-sngrqbipez.now.sh/serializer.js.html ends up with 100% coverage even though nothing calls it with excludeParameters; I guess it doesn't do \"dead code\" detection, but that would be nice","msgtype":"m.text"},"ts":1512384626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: isn't this removal of non-UTF-8 file paths still a theoretical concern even on modern platforms?","msgtype":"m.text"},"ts":1512389392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I thought APFS didn't enforce UTF-8 for instance","msgtype":"m.text"},"ts":1512389401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: on Unix (except HFS+), file paths are sequences of bytes","msgtype":"m.text"},"ts":1512395102000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: on Windows, they are sequences of 16-bit units","msgtype":"m.text"},"ts":1512395114000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: so pretty much everywhere (except HFS+), paths are not guaranteed to be representable as Unicode","msgtype":"m.text"},"ts":1512395150000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: however, on *nix these days, if you want to make a text string out of a file path, decoding as UTF-8 is what makes sense","msgtype":"m.text"},"ts":1512395190000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: and on Windows, interpreting as UTF-16","msgtype":"m.text"},"ts":1512395200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: so any tool that assumes that paths fit in text is lossy","msgtype":"m.text"},"ts":1512395220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: so if you are writing a backup tool or another kind of tool that has to be able to deal with all files, it's fundamentally wrong to let paths be represented as text as an intermediate operation","msgtype":"m.text"},"ts":1512395268000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: why not write non-lossy tooling? Or are we only talking about displaying these?","msgtype":"m.text"},"ts":1512395268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: however, for many apps, it's good enough to be lossy and it's too hard to enforce the discipline that paths must be non-text objects","msgtype":"m.text"},"ts":1512395308000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"If we ever get RustFS I hope it guarantees Unicode","msgtype":"m.text"},"ts":1512395332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I argue that a Web browser, especially one whose parts are implemented in JS, is a program that just has to be lossy for paths that aren't valid UTF-16 on Windows or valid UTF-8 on *nix","msgtype":"m.text"},"ts":1512395361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I might have a different opinion if no part of file handling was implemented in JS","msgtype":"m.text"},"ts":1512395400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: i.e. if it was all Rust","msgtype":"m.text"},"ts":1512395407000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: Rust's standard library models this stuff the right way","msgtype":"m.text"},"ts":1512395429000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"few things do","msgtype":"m.text"},"ts":1512395431000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(Rust gets it right when few things do is a general theme when it comes to Unicode-ish things)","msgtype":"m.text"},"ts":1512395477000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: one thing on my mental todo list is researching if Microsoft browsers can represent arbitrary Unicode in file: URLs these days","msgtype":"m.text"},"ts":1512395573000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it would be nice if we could make file: URLs on Windows less lossy than they are now in Firefox","msgtype":"m.text"},"ts":1512395617000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"paths are one of those things that superficially look like text, so programmers think it's OK to process them as text, but there's a subtle mismatch","msgtype":"m.text"},"ts":1512395727000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this arises from kernel devs (both NT and *nix) kernel devs making it not their problem, so it's every userland app's problem","msgtype":"m.text"},"ts":1512395756000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but with HFS+, we see what happened when well-intentioned kernel devs tried to make it their problem","msgtype":"m.text"},"ts":1512395793000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"from the frying pan into the fire","msgtype":"m.text"},"ts":1512395797000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you mean the not quite NFD normalization?","msgtype":"m.text"},"ts":1512395958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1512395974000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Rust is a good pointer point that low-level folks can get it correct","msgtype":"m.text"},"ts":1512396014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I'm a little sad APFS didn't enforce UTF-8, although even then I guess you haven't quite solved the display problem, but at least you use strings","msgtype":"m.text"},"ts":1512396092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I presume also wanting everything to be convertable from HFS+ to APFS made it impossible to enforce","msgtype":"m.text"},"ts":1512398437000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(using text for all files is one thing Python 3 got wrong, IMO, as it makes it impossible to open some files)","msgtype":"m.text"},"ts":1512398485000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: why, HFS+ was Unicode-compatible","msgtype":"m.text"},"ts":1512398669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh Python. Whenever I use Python I always struggle with Unicode","msgtype":"m.text"},"ts":1512398691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'd think that converting between integers and characters would be easier","msgtype":"m.text"},"ts":1512398714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mismatched surrogates, no?","msgtype":"m.text"},"ts":1512398898000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I thought not","msgtype":"m.text"},"ts":1512399030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that branch gets taken a bunch of times though since the zero-parameters case occurs. If we'd written it as two if statements we would have seen loss of coverage, yeah.","msgtype":"m.text"},"ts":1512399987000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: seems the tooling should see that somehow","msgtype":"m.text"},"ts":1512400046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and flag part of the || conditional as always being false","msgtype":"m.text"},"ts":1512400077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, right now it only does branch granularity, not expression granularity; I haven't seen tooling for expression granularity yet.","msgtype":"m.text"},"ts":1512400131000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: looks like Python 3.6 tried to add back support for non-Unicode file paths on *nix. Not sure if paths that are invalid UTF-16 are representable in Python 3.x on Windows","msgtype":"m.text"},"ts":1512401082000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: https://www.python.org/dev/peps/pep-0519/","msgtype":"m.text"},"ts":1512401089000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh I'd missed that entirely","msgtype":"m.text"},"ts":1512401708000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"okay, uploaded an initial attempt at better defining blob URLs... still a lot of work to do though...","msgtype":"m.text"},"ts":1512405176000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1512410889000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"GPHemsley: I take it that it's by design that MIME sniffing doesn't sniff files that start with BOM as HTML even if the BOM is followed by a pattern that would otherwise sniff as HTML?","msgtype":"m.text"},"ts":1512413104000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: maybe ask if abarth remembers?  Iirc the patterns were based on data he gathered","msgtype":"m.text"},"ts":1512417119000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i gave you Founder privs on this channel","msgtype":"m.text"},"ts":1512422618000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"annevk: you can have chanserv op you with: /cs op #whatwg annevk","msgtype":"m.text"},"ts":1512422704000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"annevk: and feel free to augment the access list with whoever you want.","msgtype":"m.text"},"ts":1512422746000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"I also gave channel op to Domenic, zcorpan, and MikeSmith to round things out a bit.","msgtype":"m.text"},"ts":1512423058000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"ooh fun","msgtype":"m.text"},"ts":1512423081000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks paul_irish!","msgtype":"m.text"},"ts":1512423085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"( I don't entirely remember, but I guess this channel was unregistered 7yrs ago, so I kicked that off?  Â¯\\_(ãƒ„)_/Â¯ )","msgtype":"m.text"},"ts":1512423138000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Thank you paul_irish","msgtype":"m.text"},"ts":1512423575000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yo, anyone reported yet that whatwg.org's https is broken?","msgtype":"m.text"},"ts":1512431405000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's specifically html.spec.whatwg.org, actually. The more general domains work.","msgtype":"m.text"},"ts":1512431490000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I also found the issue, but not sure where to report > SSL html.spec.whatwg.org","msgtype":"m.text"},"ts":1512431807000,"senderName":"hiroshige","senderId":"hiroshige@irc"},
{"content":{"body":"creating a github issue? (not sure)","msgtype":"m.text"},"ts":1512431829000,"senderName":"hiroshige","senderId":"hiroshige@irc"}
]