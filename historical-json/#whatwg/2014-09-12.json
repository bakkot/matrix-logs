[
{"content":{"body":"Hixie: Also reportet to schema.org (and answered a few questions on SE/SO)","msgtype":"m.text"},"ts":1410480282000,"senderName":"kamome_","senderId":"kamome_@irc"},
{"content":{"body":"wow, James Salsman is still alive!","msgtype":"m.text"},"ts":1410492912000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"at CMU in the mid-90s Salsman was already fading into legend","msgtype":"m.text"},"ts":1410493046000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jgraham: I'm not sure I follow","msgtype":"m.text"},"ts":1410502389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems StartSSL and sleevi_ had a short Twitter exchange, lol","msgtype":"m.text"},"ts":1410502466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm somewhat uneasy about using StartSSL and going crazy with minting certs that cost nothing to mint after identity validation, because each cert minted there *might* cost $25 later if there's a need to revoke","msgtype":"m.text"},"ts":1410503407000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"still, for wildcards, $60 plus maybe $25 later is better than $150 up front","msgtype":"m.text"},"ts":1410503442000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for non-wildcards, $15 up front may be better than $25 later if it happens to be a Heartbleed year","msgtype":"m.text"},"ts":1410503474000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"FWIW, the reason why my site doesn't have a StartSSL cert is that I got an \"XMPP cert\" from StartSSL for hsivonen.fi and then tried to mint a Web server cert for hsivonen.fi","msgtype":"m.text"},"ts":1410503539000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"StartSSL didn't allow me to mint two certs for hsivonen.fi and wanted me to revoke the first one","msgtype":"m.text"},"ts":1410503572000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the revocation would have cost more than a new cert from Gandi","msgtype":"m.text"},"ts":1410503582000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno if this works differently when you've been identity validated for $60","msgtype":"m.text"},"ts":1410503603000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think I would still have to pay for revocation","msgtype":"m.text"},"ts":1410503987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems like they could automate revocation as well though and make that free too","msgtype":"m.text"},"ts":1410504041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: charging for revocation is consistent with their business model of charging for things that cost them money","msgtype":"m.text"},"ts":1410504085000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the revocation infrastructure costs them money","msgtype":"m.text"},"ts":1410504096000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Because of the traffic?","msgtype":"m.text"},"ts":1410504118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is sad, considering how useless the revocation infrastructure is currently","msgtype":"m.text"},"ts":1410504120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1410504126000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I saw revocation basically only works if you use EV","msgtype":"m.text"},"ts":1410504138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least in 2013","msgtype":"m.text"},"ts":1410504146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I believe that's correct","msgtype":"m.text"},"ts":1410504155000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I really need to find the time to add SNI support to Validator.nu)","msgtype":"m.text"},"ts":1410504269000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you implement TLS yourself?","msgtype":"m.text"},"ts":1410504292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the main reason why validator.nu isn't behind https already is the ridicule of it not being able to validate itself if it were)","msgtype":"m.text"},"ts":1410504299000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: no. I mean upgrading enough things to make SNI work","msgtype":"m.text"},"ts":1410504319000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Why could it not validate itself?","msgtype":"m.text"},"ts":1410504337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: including upgrading HttpClient, whose new version is API-incomptabile and requires me to rewrite a bunch of stuff","msgtype":"m.text"},"ts":1410504344000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I'm not going to buy IP addresses for each host name, so it would be SNI, but V.nu can't connect with SNI as a client","msgtype":"m.text"},"ts":1410504379000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for the server piece, I'd probable terminate TLS in nginx instead of Java","msgtype":"m.text"},"ts":1410504412000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh I see, so you could not validate whatwg.org once we'd add HSTS","msgtype":"m.text"},"ts":1410504415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the validator doesn't know about HSTS, but it would follow a redirect and then fail","msgtype":"m.text"},"ts":1410504451000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That's what I meant, yes","msgtype":"m.text"},"ts":1410504466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, to make Java approximate browser behavior as a clien, I'd need to upgrade to OpenJDK 8","msgtype":"m.text"},"ts":1410504529000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"last I checked, it hadn't been packaged for Ubuntu yet","msgtype":"m.text"},"ts":1410504566000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"goes check again","msgtype":"m.emote"},"ts":1410504567000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(still better than implementing UTF-8 myself for PHP way back when)","msgtype":"m.text"},"ts":1410504568000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"still not openjdk-8 in trusty","msgtype":"m.text"},"ts":1410504622000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: did StartSSL want you to mint a certificate for both XMPP and web usage?","msgtype":"m.text"},"ts":1410504693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: their UI suggests that XMPP certs and Web certs are different","msgtype":"m.text"},"ts":1410504774000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: Prosody's tools suggest the same","msgtype":"m.text"},"ts":1410504784000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I *think* XMPP certs have some weird OIDs","msgtype":"m.text"},"ts":1410504796000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I don't know why","msgtype":"m.text"},"ts":1410504801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: agreed, so I'm wondering what they wanted you to do for the XMPP certificate","msgtype":"m.text"},"ts":1410504813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: probably the expectation was that I'd mint it for a different host name or something","msgtype":"m.text"},"ts":1410504846000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: dunno if that part of the UI was well tested","msgtype":"m.text"},"ts":1410504856000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the UI for sure doesn't warn you about stuff like this","msgtype":"m.text"},"ts":1410504877000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's interesting that there were still people involved for that part","msgtype":"m.text"},"ts":1410504931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought that once you had a domain validated, you could just issue away","msgtype":"m.text"},"ts":1410504942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think there were any people involved","msgtype":"m.text"},"ts":1410504991000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the UI just said that if I wanted a Web server cert for hsivonen.fi, I should revoke the XMPP cert I had already minted","msgtype":"m.text"},"ts":1410505026000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"with no UI warning about traps like this when minting the XMPP cert","msgtype":"m.text"},"ts":1410505040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That is really too bad","msgtype":"m.text"},"ts":1410505062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I only want web so I'm probably good. Although maybe at some point I can figure out email...","msgtype":"m.text"},"ts":1410505132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: it's extremely unclear what commit actually fixed my issues with screen orientation","msgtype":"m.text"},"ts":1410505743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: the handling of comments was rather terrible from a reviewer's perspective","msgtype":"m.text"},"ts":1410505760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the \"HTML - <img>\" bugzilla bug doesn't reproduce in bugzilla.mozilla.org afaict","msgtype":"m.text"},"ts":1410508892000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok","msgtype":"m.text"},"ts":1410509208000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"considers looking through changelogs to see when it was fixed","msgtype":"m.emote"},"ts":1410509227000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ubuntu Utopic has openjdk-8 in Universe","msgtype":"m.text"},"ts":1410509288000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should I host V.nu on a prerelease OS?","msgtype":"m.text"},"ts":1410509313000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"surely it would be natural to backport openjdk-8 to Trusty","msgtype":"m.text"},"ts":1410509366000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but it's not there","msgtype":"m.text"},"ts":1410509370000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I run debian testing on my server, so I'd vote yes","msgtype":"m.text"},"ts":1410509700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though if you do it I'd suggest you don't have it set to do (apt) autoupdate","msgtype":"m.text"},"ts":1410509748000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: wow. living on the edge","msgtype":"m.text"},"ts":1410509979000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: http://jiggity.com/steve.html is nice","msgtype":"m.text"},"ts":1410510180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Steve Jobs fanfic","msgtype":"m.text"},"ts":1410510196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk that's amazing","msgtype":"m.text"},"ts":1410510418000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"  844 passing (35s)","msgtype":"m.text"},"ts":1410510524000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"  28 failing","msgtype":"m.text"},"ts":1410510524000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"promises tests be damned.","msgtype":"m.text"},"ts":1410510532000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Domenic: so now my promise impl passes all 872 tests, but the test runner seems to \"freeze\" after reporting all success. Looks like there is an infinite eventloop (strace reports epoll_wait calls)...","msgtype":"m.text"},"ts":1410511102000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Domenic: do you have any suggestion regarding this? Is it possible that this behavior is caused by my impl?","msgtype":"m.text"},"ts":1410511121000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(I am using the \"promises-aplus-tests\" node package)","msgtype":"m.text"},"ts":1410511140000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Domenic: ah, somehow \"adopting state of another promise\" results in an infinite settimeout loop (in my impl) while passing the test suite .)","msgtype":"m.text"},"ts":1410512670000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Is there anyway I can get window.performace.timing info for ajax calls?","msgtype":"m.text"},"ts":1410513295000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"MikeSmith: the <hgroup> example in http://html5.org/r/8759 shows some unimplemented things in v.nu","msgtype":"m.text"},"ts":1410514095000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: sorry about that, I think I used another PR to fix the issue you pointed","msgtype":"m.text"},"ts":1410514249000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"annevk: I might have \"CC'd\" you, not 100% certain","msgtype":"m.text"},"ts":1410514273000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"Is this Blink behavior supported by the spec http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3177 ?","msgtype":"m.text"},"ts":1410514693000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I want to argue we should put \"bar\" in the HTML namespace","msgtype":"m.text"},"ts":1410514723000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"goes read the spec","msgtype":"m.emote"},"ts":1410514749000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aargh. Blink's behavior is correct per spec","msgtype":"m.text"},"ts":1410515010000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm not sure I like this","msgtype":"m.text"},"ts":1410515017000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie_: is it intentional that the HTML fragment parsing algorithm can now create nodes that aren't in any of the HTML, SVG and MathML namespaces?","msgtype":"m.text"},"ts":1410515243000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Woah","msgtype":"m.text"},"ts":1410515691000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although I guess it somewhat matches what you might expect","msgtype":"m.text"},"ts":1410515769000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: that's not what i expected at least","msgtype":"m.text"},"ts":1410516809000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It's somewhat unexpected that the <div> is still in the HTML namespace","msgtype":"m.text"},"ts":1410517489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, the fact that it's different for the two elements is pretty weird","msgtype":"m.text"},"ts":1410517578000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ondras: wow! If you can write a test that fails would love to have that in the suite :)","msgtype":"m.text"},"ts":1410517791000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyone have a reference to that post where Hixie_ references all the editions of the <canvas> spec?","msgtype":"m.text"},"ts":1410519602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't find anything in my inbox","msgtype":"m.text"},"ts":1410519868000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Got any time for https://critic.hoppipolla.co.uk/r/2555 ? (seems to be a small XHR test fixup)","msgtype":"m.text"},"ts":1410520382000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: done","msgtype":"m.text"},"ts":1410520843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: would be nice if it automatically merged afterwards if it could","msgtype":"m.text"},"ts":1410520857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, there was an idea to have a \"Merge\" button in the critic UI, but it didn't happen because I didn't figure out the permissions issues. Although maybe it could just work with the critic bot user.","msgtype":"m.text"},"ts":1410520922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But travis","msgtype":"m.text"},"ts":1410521083000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: about <hgroup> what's an example of something that's not implemented in v.nu?","msgtype":"m.text"},"ts":1410529770000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(the escaped markup in the source is pretty hard to read)","msgtype":"m.text"},"ts":1410529788000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks at the corresponding rendered part in the spec","msgtype":"m.emote"},"ts":1410529807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: onclose, method=dialog, inputmode, autocomplete","msgtype":"m.text"},"ts":1410529851000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1410529868000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"where is onclose specified?","msgtype":"m.text"},"ts":1410531383000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1410531449000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"What onclose?","msgtype":"m.text"},"ts":1410531495000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, dialog","msgtype":"m.text"},"ts":1410531508000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mounir: pong, a few days later :)","msgtype":"m.text"},"ts":1410531541000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"zcorpan: one down https://github.com/validator/syntax/commit/759f868090c28137f420bde9b139ec6da21ef121 and looking at the rest now","msgtype":"m.text"},"ts":1410532762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: awesome!","msgtype":"m.text"},"ts":1410532794000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-w3process/2014Sep/0099.html and this is only identified now?","msgtype":"m.text"},"ts":1410533749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o_O (need a bigger O)","msgtype":"m.text"},"ts":1410533758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well I think they got the wrong idea tbh. What they should work on is not having \"errata\" as a thing.","msgtype":"m.text"},"ts":1410533840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm, \"Bad value walletSetup.continue(this.returnValue) for attribute onclose on element dialog: missing name after . operator\"","msgtype":"m.text"},"ts":1410533922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's probably worth considering why bz got that response when the same thing has been said in different ways for a number of years","msgtype":"m.text"},"ts":1410533939000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well yeah, errata as such is not really the problem. It's specifications being out of date","msgtype":"m.text"},"ts":1410534275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: he looks to me to have gotten the same response as everyone else","msgtype":"m.text"},"ts":1410538013000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: \"oh so problem is [restate problem in a way that's easier to do in a bureaucracy]*? *don't do anything*\"","msgtype":"m.text"},"ts":1410538049000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"uh, with one less *","msgtype":"m.text"},"ts":1410538059000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: http://damowmow.com/temp/canvas-specs but please copy-paste rather than referencing, and note that that is itself somewhat out of date now","msgtype":"m.text"},"ts":1410538117000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hsivonen: it is not intentional that the HTML fragment parsing algorithm can now create nodes that aren't in any of the HTML, SVG and MathML namespaces, but i must admit to not having paid enough attention to the fragment case","msgtype":"m.text"},"ts":1410538156000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Perhaps. It seemed to me that there was a lot less denying that there was an issue when an implementor who is not noted as someone with a stake in the spec-political-process came along and said \"the W3C is failing me\". But I could just be projecting what I thought ought to happen.","msgtype":"m.text"},"ts":1410538329000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i have often felt that, in the moment, jeff has completely agreed with what i've said","msgtype":"m.text"},"ts":1410538360000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"s/failing me/failing me, and here's a specific example/","msgtype":"m.text"},"ts":1410538362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"only to find that my request gets completely corrupted and turned into something much less useful over time, and eventually results in a change that is of no use to me","msgtype":"m.text"},"ts":1410538391000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so the proof here will be in whether errata are trivial to issue six months from now","msgtype":"m.text"},"ts":1410538412000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It is certianly true that change has been somewhere between slow and non-existant","msgtype":"m.text"},"ts":1410538456000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's not the question","msgtype":"m.text"},"ts":1410538459000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The question is if they are issued, not if they can be","msgtype":"m.text"},"ts":1410538469000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that too","msgtype":"m.text"},"ts":1410538507000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's actually the key way in which jeff made it sound like he agreed with bz but didn't really","msgtype":"m.text"},"ts":1410538520000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"notice how he changed a question of fundamental priorities into a question of volume of red tape","msgtype":"m.text"},"ts":1410538540000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: man, you're awesome. thanks. (re https://www.w3.org/Bugs/Public/show_bug.cgi?id=26786 in this case, but also in general)","msgtype":"m.text"},"ts":1410538662000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: thank you :-)","msgtype":"m.text"},"ts":1410539122000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wonder why </template> gives a parse error","msgtype":"m.text"},"ts":1410539274000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it shouldn't, right...?","msgtype":"m.text"},"ts":1410539280000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i should test this with my parser, see what i get there...","msgtype":"m.text"},"ts":1410539309000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"any IE users able to test http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=3099 for me?","msgtype":"m.text"},"ts":1410539729000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"IE11 latest updates [object Event] (same task)","msgtype":"m.text"},"ts":1410539777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"[object PageTransitionEvent] (same task)","msgtype":"m.text"},"ts":1410539778000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1410539787000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I removed the spec splitter from html5.org btw","msgtype":"m.text"},"ts":1410539807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool","msgtype":"m.text"},"ts":1410539840000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"spec splitting now happens inline with the spec generation","msgtype":"m.text"},"ts":1410539851000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"dunno if anyone's noticed, but that means the split version doesn't lag behind anymore","msgtype":"m.text"},"ts":1410539861000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh, same task / same task implies IE11 is buggy in its media element handling","msgtype":"m.text"},"ts":1410539991000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1410539993000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1410539993000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"can anyone figure out why <!DOCTYPE HTML><template><li></template> has a parse error?","msgtype":"m.text"},"ts":1410540395000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"is that question going to be on the exam?","msgtype":"m.text"},"ts":1410540472000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1410540477000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"woah","msgtype":"m.text"},"ts":1410540545000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's a bug in my parser","msgtype":"m.text"},"ts":1410540549000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but that implies two browsers have had the same exact bug","msgtype":"m.text"},"ts":1410540555000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"a bug in the extremely complicated html parser doesn't seem unthinkable to me","msgtype":"m.text"},"ts":1410540724000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"this bug was trivial","msgtype":"m.text"},"ts":1410540733000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i just hadn't included all the elements in the \"generate all implied end tags thoroughly\" logic","msgtype":"m.text"},"ts":1410540746000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but i wonder why","msgtype":"m.text"},"ts":1410540749000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie: just filed Web Audio issue on that HTML bug, feel free to close the HTML one.","msgtype":"m.text"},"ts":1410540955000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"coolio, thanks","msgtype":"m.text"},"ts":1410541181000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: any idea how i should phrase http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content.html#concept-media-load-algorithm step 9:otherwise:1's \"as nodes are inserted and removed\" steps?","msgtype":"m.text"},"ts":1410545571000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: I'm looking at the \"clone\" discussion in the fetch spec here: https://github.com/slightlyoff/ServiceWorker/issues/372#issuecomment-52751957 Is the design is close enough to settled to start specing and implementing?","msgtype":"m.text"},"ts":1410547830000,"senderName":"dmurph","senderId":"dmurph@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1410547903000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"cool, thx","msgtype":"m.text"},"ts":1410548035000,"senderName":"dmurph","senderId":"dmurph@irc"},
{"content":{"body":"Domenic: i don't understand why an uncaught rejection should be a big deal","msgtype":"m.text"},"ts":1410549353000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic: if you don't want to catch it, then it should surely just be ignored, just like if you don't hook the onerror handler on an <img> element.","msgtype":"m.text"},"ts":1410549413000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"JakeA: ping","msgtype":"m.text"},"ts":1410549563000,"senderName":"ehsan","senderId":"ehsan@irc"},
{"content":{"body":"Hixie_: onerror provides a global hook for sync errors, so you don't need a try { ... } catch (e) { ... } around every code entry point. We want the same for async errors.","msgtype":"m.text"},"ts":1410549645000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie_ promise rejections can also arise out of standard programming bugs, like identifier misspellings and such","msgtype":"m.text"},"ts":1410549866000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"zenparsing: that's a bug in the design of promises, though.","msgtype":"m.text"},"ts":1410549961000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it is, but it isn't super likely to change","msgtype":"m.text"},"ts":1410549981000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Hixie_ heh, you're not going to win that one : )","msgtype":"m.text"},"ts":1410549987000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"yeah. so now that bug is turning into me having to do work to work around the bad design i already complained about.","msgtype":"m.text"},"ts":1410550008000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sigh.","msgtype":"m.text"},"ts":1410550011000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's <picture> all over again","msgtype":"m.text"},"ts":1410550017000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":[","msgtype":"m.text"},"ts":1410550234000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"ehsan: hey, I'm cramming for my jsconf talk right now, then sleep. I'll organise a call to go over the API generality stuff","msgtype":"m.text"},"ts":1410551035000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sounds good, I commented on the issue fwiw, nothing urgent","msgtype":"m.text"},"ts":1410551062000,"senderName":"ehsan","senderId":"ehsan@irc"},
{"content":{"body":"ehsan: will reply","msgtype":"m.text"},"ts":1410551100000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1410551127000,"senderName":"ehsan","senderId":"ehsan@irc"},
{"content":{"body":"dmurph: yeah, everything apart from the clone() method is defined now","msgtype":"m.text"},"ts":1410553590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dmurph: I expect to define clone() as creating a copy of everything and a tee of the stream (not sure what that means yet, waiting for the streams primitive to be better defined for that)","msgtype":"m.text"},"ts":1410553622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dmurph: ought to mean about the same as the request cloning that's already going on in UAs today","msgtype":"m.text"},"ts":1410553642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: the insertion and removing steps should give enough context to update the pointer","msgtype":"m.text"},"ts":1410553738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_ the problem is we have no usable definition of an \"asynchronous program error\" wrt promises (b/c a rejection could always be handled \"later\") - but i'm going to try anyway...","msgtype":"m.text"},"ts":1410554058000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"define a \"user entry point\" to be any function call where the host (HTML) is calling into user code","msgtype":"m.text"},"ts":1410554069000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"an \"asynchronous program error\" occurs when a user entry point returns a promise which rejects","msgtype":"m.text"},"ts":1410554075000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"so this triggers window.onerror:  elem.onclick = evt => Promise.reject(new Error(\"asdf\"))","msgtype":"m.text"},"ts":1410554086000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"so does this: elem.onclick = async evt => window.loction = await somethingAsync();","msgtype":"m.text"},"ts":1410554098000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"(note async and the spelling error)","msgtype":"m.text"},"ts":1410554107000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"...probably doesn't work, but an interesting idea anyway","msgtype":"m.text"},"ts":1410554168000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"Hixie_: What Twitter client do you use? Almost none of your replies are actually linked to the tweet you're replying to.","msgtype":"m.text"},"ts":1410554235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just happens to be looking at your Twitter page today.","msgtype":"m.emote"},"ts":1410554271000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, never mind, those were just all the \"fake replies\" from several years ago. Whatever you were doing then was weird. Your replies work correctly now.","msgtype":"m.text"},"ts":1410554324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think back then Twitter did not have threading","msgtype":"m.text"},"ts":1410555064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That sounds crazy.","msgtype":"m.text"},"ts":1410556274000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: just the web site","msgtype":"m.text"},"ts":1410558356000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"xhr with promises: would it be something like xhr.send(); xhr.ready.then(...); ?","msgtype":"m.text"},"ts":1410558649000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or .loaded.then() ?","msgtype":"m.text"},"ts":1410558656000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":".loaded, I guess?","msgtype":"m.text"},"ts":1410558771000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It turns out that running a single regex per line instead of 20, when processing a large file, actually saves a signfiicant amount of time.","msgtype":"m.text"},"ts":1410558986000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that depends on the regexps in question","msgtype":"m.text"},"ts":1410559006000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"This is a simple regex, I was just constructing them fresh every time.","msgtype":"m.text"},"ts":1410559026000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Basically I shaved a second off of Bikeshed running time.","msgtype":"m.text"},"ts":1410559034000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because I finally put together some profiling.","msgtype":"m.text"},"ts":1410559043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, well, sure","msgtype":"m.text"},"ts":1410559062000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"man, desigining promise-based apis with this whole \"exceptions result in rejection\" thing is annoying","msgtype":"m.text"},"ts":1410559469000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it just doesn't map to the existing model at all","msgtype":"m.text"},"ts":1410559483000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like, consider XHR","msgtype":"m.text"},"ts":1410559505000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you really want rejection to mean \"the result was not 2xx\"","msgtype":"m.text"},"ts":1410559515000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but now it also has to mean \"send() was called when the state was not OPENED\"","msgtype":"m.text"},"ts":1410559539000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"since it's anathema to have send() throw, apparently","msgtype":"m.text"},"ts":1410559546000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"even though it's pointless for that to be in a promise rejection since you know it synchronously and aren't ever going to try to catch it","msgtype":"m.text"},"ts":1410559579000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I thought that we weren't promisifying xhr, we were replacing it with fetch(), which doesn't have the same state-management issues.","msgtype":"m.text"},"ts":1410559652000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"xhr's just an example, the same problem occurs with lots of things","msgtype":"m.text"},"ts":1410559703000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. requestAutocomplete","msgtype":"m.text"},"ts":1410559711000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rejection can be for any of the reasons that autocompleteerror currently fires","msgtype":"m.text"},"ts":1410559725000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1410559734000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but also for all the reasons that requestAutocomplete() currently throws","msgtype":"m.text"},"ts":1410559735000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Sure.","msgtype":"m.text"},"ts":1410559742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which are currently separate for good language design reasons","msgtype":"m.text"},"ts":1410559749000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but with promises...","msgtype":"m.text"},"ts":1410559751000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and actually fetch() does have the same problem. it doesn't reject if there was a network error.","msgtype":"m.text"},"ts":1410559797000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Handling two kinds of errors with sync throwing and async error events have the same usability problems the promise people are complaining about.","msgtype":"m.text"},"ts":1410559843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no it doesn't, because you never need to worry about the sync exceptions","msgtype":"m.text"},"ts":1410559866000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nobody ever tries to catch them","msgtype":"m.text"},"ts":1410559874000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and if they occur, your code just ends, it doesn't start running random code with invalid input","msgtype":"m.text"},"ts":1410559890000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Then don't worry about them.","msgtype":"m.text"},"ts":1410559893000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but with rejection, you have to!","msgtype":"m.text"},"ts":1410559900000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"because now your code expecting a string rejection reason might get an exception rejection reason instead","msgtype":"m.text"},"ts":1410559913000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or whatever","msgtype":"m.text"},"ts":1410559916000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You'll just throw or something when you end up trying to operate on the weird error anyway.","msgtype":"m.text"},"ts":1410559979000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not necessarily","msgtype":"m.text"},"ts":1410559998000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(mostly that's a result of JS lacking type checking)","msgtype":"m.text"},"ts":1410560010000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(which is another language bug imho :-) )","msgtype":"m.text"},"ts":1410560023000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Agreed.","msgtype":"m.text"},"ts":1410560036000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think Hixie has a point; if you think that using exceptions for flow control is bad and that using rejections for flow control is good (which seems to be part of the promise model), then using rejections to replace exceptions is bad","msgtype":"m.text"},"ts":1410560272000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, wait, fetch() does reject the promise for network error","msgtype":"m.text"},"ts":1410560303000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so fetch() has _exactly_ the problem i described for xhr","msgtype":"m.text"},"ts":1410560316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if you call fetch({ method: 'get', url: '/' }).then(a, b); where b() is some function to handle errors, you'll appear to always get a network error","msgtype":"m.text"},"ts":1410560379000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but actually, you're not getting a network error","msgtype":"m.text"},"ts":1410560384000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you're getting a type error because the arguments were type checked as bad","msgtype":"m.text"},"ts":1410560396000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and there's no way i can see to distinguish those two completely unrelated cases","msgtype":"m.text"},"ts":1410560411000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"even if there was, e.g. because fetch() rejected with NetworkError instead of TypeError, you'd still be SOL. (a) because you wouldn't be able to get the network error information (e.g. status code, which XHR gives you), and (b) because you would never think to check for TypeError, so you'd assume it was a NetworkError and would _still_ think you always had a bed network","msgtype":"m.text"},"ts":1410560484000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic: ^ that's why you're wrong.","msgtype":"m.text"},"ts":1410560494000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(the correct was to call it, for those who are wondering, is  fetch(new Request({ method: 'get', url: '/' })).then(a, b);  )","msgtype":"m.text"},"ts":1410560578000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no wait, it's fetch(new Request('/', { method: 'get' })).then(a, b);","msgtype":"m.text"},"ts":1410560643000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"How'd you get any network error information if it failed at the type-checking stage?","msgtype":"m.text"},"ts":1410560651000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fetch() rejects with TypeError for a network error","msgtype":"m.text"},"ts":1410560669000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and IDL rejects any promise-returning method with TypeError for an argument type error","msgtype":"m.text"},"ts":1410560686000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"either way, you get b() called with TypeError","msgtype":"m.text"},"ts":1410560704000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Whats the deal with the picture element?","msgtype":"m.text"},"ts":1410563606000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"pdescham49: What do you mean?","msgtype":"m.text"},"ts":1410563606000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why are they addng styling logic in the dom?","msgtype":"m.text"},"ts":1410563606000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"when it can all be handled in css media queries?","msgtype":"m.text"},"ts":1410563607000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"???","msgtype":"m.text"},"ts":1410563607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it seems crazy to me maybe I am a purist but i believe all styling should exist in css and not in the markup","msgtype":"m.text"},"ts":1410563607000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"There's no styling in <picture>","msgtype":"m.text"},"ts":1410563607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i get that it's not really styling but it's ths styling conditions. min-width etc.","msgtype":"m.text"},"ts":1410563608000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"...yes?","msgtype":"m.text"},"ts":1410563608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Media Queries aren't CSS.","msgtype":"m.text"},"ts":1410563608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're used in various places.","msgtype":"m.text"},"ts":1410563608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but i am sorry I just don't see the advantage in a picture element when you can do it all in css","msgtype":"m.text"},"ts":1410563608000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"You can't do responsive images in CSS.","msgtype":"m.text"},"ts":1410563608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes you can.","msgtype":"m.text"},"ts":1410563608000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"(You can do some of it via the image-set() function, but only 1x/2x style stuff.)","msgtype":"m.text"},"ts":1410563608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CSS also isn't friendly with the preloader.","msgtype":"m.text"},"ts":1410563608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You want images to start loading asap, and if you have to first wait for a stylesheet to load, that's a significant delay on mobile devices.","msgtype":"m.text"},"ts":1410563609000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"pdescham49: I'm one of the editors of the <picture> spec, and let me tell you, \"Why not Javascript?\" and \"Why not CSS?\" are the most common questions we get. We, um, thought of it already.","msgtype":"m.text"},"ts":1410563609000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Years of battling inline css in the dom has me jaded","msgtype":"m.text"},"ts":1410563609000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"i see a future of more and more styling in the dom.","msgtype":"m.text"},"ts":1410563609000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"startng with this pictue element.","msgtype":"m.text"},"ts":1410563692000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"That's cool, but seriously, there's no way around the problems.","msgtype":"m.text"},"ts":1410563692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Unless you're okay with images not even *starting* to download for a second or more.","msgtype":"m.text"},"ts":1410563725000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What is the problem? short of prefetch.","msgtype":"m.text"},"ts":1410563725000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"That's the problem.","msgtype":"m.text"},"ts":1410563725000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"correct me if i am wrong but the issue i saw it as described was that the browser is requesting more then in needs to.","msgtype":"m.text"},"ts":1410564001000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"in my css only solution in a responsice design with an image tag in only requests the resrouce as needed","msgtype":"m.text"},"ts":1410564001000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"Depends on how you're \"solving\" it. If you \"solve\" it by having a small source in the HTML, and then providing the info to select the proper source in CSS, you double-request.  If you do it entirely in CSS, you only send a single request, but you send it late.","msgtype":"m.text"},"ts":1410564001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyhow. :) I've been a html developer for the last 20 years professionally. and this worries me :(","msgtype":"m.text"},"ts":1410564001000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"(After fetching/parsing/applying the stylesheet.)","msgtype":"m.text"},"ts":1410564001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can I send you some code / benchmarks next week?","msgtype":"m.text"},"ts":1410564001000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"We are aware of the problems of having MQs duplicated between multiple <picture> elements and the stylesheets; changing one of your breakpoints means you have to update it in N places.  We plan to fix this with MQ variables, so you can set up the MQ once and then refer to it in every place you need it.","msgtype":"m.text"},"ts":1410564143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Send it to the Responsive Images CG list.","msgtype":"m.text"},"ts":1410564143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But fair warning, you're not raising anything new.","msgtype":"m.text"},"ts":1410564143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"10-4","msgtype":"m.text"},"ts":1410564144000,"senderName":"pdescham49","senderId":"pdescham49@irc"},
{"content":{"body":"thank you sir for the chat..","msgtype":"m.text"},"ts":1410564144000,"senderName":"pdescham49","senderId":"pdescham49@irc"}
]