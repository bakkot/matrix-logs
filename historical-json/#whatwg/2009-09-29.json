[
{"content":{"body":"Will HTML6 be developed over google wave ?","msgtype":"m.text"},"ts":1254182580000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"instead of mailing lists, that is","msgtype":"m.text"},"ts":1254182640000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I was hoping we'd have collective consciousness by then","msgtype":"m.text"},"ts":1254182641000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"On the subject of versioning: I submitted a test case for the RDFa test suite that includes a character that's valid in XML5e but not in XML4e","msgtype":"m.text"},"ts":1254182700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"HTML 6 will probably move to newsgroups :-)","msgtype":"m.text"},"ts":1254182701000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I wonder what will happen with that...","msgtype":"m.text"},"ts":1254182702000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"erlehmann: You may be underestimating people's attachment to legacy technologies","msgtype":"m.text"},"ts":1254182880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"When someone's spent fifteen years setting up their email client to perfection, they're not going to want to change for another fifteen years","msgtype":"m.text"},"ts":1254182940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i get it. people still use IRC for despite jabber being better in virtually all low-attendance scenarios.","msgtype":"m.text"},"ts":1254183000000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Jabber is great, you can DOS a whole multi-user room by sending ill-formed XML","msgtype":"m.text"},"ts":1254183120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's only been 14 years","msgtype":"m.text"},"ts":1254183121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1254183122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Actually you can DOS it by sending perfectly well-formed (but unusual) XML that the server mangles into ill-formed XML)","msgtype":"m.text"},"ts":1254183420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/(\\S*-formed)/namespace-$1/","msgtype":"m.text"},"ts":1254183480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what would CORS applied to <img> do?","msgtype":"m.text"},"ts":1254183600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is there a draft for Sec-From as renamed to Origin?","msgtype":"m.text"},"ts":1254183660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://tools.ietf.org/html/draft-abarth-origin","msgtype":"m.text"},"ts":1254183840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CORS on <img> would be useful for <canvas>","msgtype":"m.text"},"ts":1254183841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"neat","msgtype":"m.text"},"ts":1254184020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"whats the goal for this draft? publish as an individual submssion RFC, or form an IETF Working Group?","msgtype":"m.text"},"ts":1254184021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and can an individual submission RFC be on the IETF standards track? (the header on this one doesn't request standards track status)","msgtype":"m.text"},"ts":1254184080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(perhaps aarth could better answer these questions if he were here)","msgtype":"m.text"},"ts":1254184081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"er, abarth","msgtype":"m.text"},"ts":1254184082000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well it's a standard","msgtype":"m.text"},"ts":1254184140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whether the ietf deign to give it that label or not is probably up to them","msgtype":"m.text"},"ts":1254184141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: ok, as far as i know, Origin-related feedback is addressed.","msgtype":"m.text"},"ts":1254184500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm not sure if it's ok per W3C rules to normatively reference a non-standards-track RFC, so it does matter procedurally, even if not substantively","msgtype":"m.text"},"ts":1254184620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I guess I should ask abarth about this stuff","msgtype":"m.text"},"ts":1254184621000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"my goals are varied, such as to get specifications that implementors can follow without having to do reverse engineering, having specs that when followed to the letter reliably lead to interop, having specs that UAs are willing to implement, etc","msgtype":"m.text"},"ts":1254184680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i have to say, none of my goals involve anything to do with a particular process or other","msgtype":"m.text"},"ts":1254184681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it saddens me that yours do now :-)","msgtype":"m.text"},"ts":1254184740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(process is supposed to help, not hinder, )","msgtype":"m.text"},"ts":1254184741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/, //","msgtype":"m.text"},"ts":1254184742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy, sorry for being difficult in the Selectors API thread.  I didn't like the design of querySelector when it first created, and I don't like it now.  >_<","msgtype":"m.text"},"ts":1254185340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, how often in practice do you know you only want the first result of a selector match?","msgtype":"m.text"},"ts":1254185400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"when selecting by id?","msgtype":"m.text"},"ts":1254185460000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I guess it might be common when you know you're searching for only a single thing, so the implementation can stop searching after it finds the first.","msgtype":"m.text"},"ts":1254185461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That doesn't seem to have bothered Resig enough to optimize for it in jQuery, though.","msgtype":"m.text"},"ts":1254185462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"though I guess there's getElementById() for that","msgtype":"m.text"},"ts":1254185463000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: Yeah, by id is certainly the primary case of \"I know there's only one here\".  Though an HTML implementation can make that optimization all by itself (I'm pretty certain that Sizzle recognized the \"#foo\" case and just uses getElementById).","msgtype":"m.text"},"ts":1254185640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/recognized/recognizes/","msgtype":"m.text"},"ts":1254185641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, it's quite common to see stuff like getElementsByTagName(\"...\")[0]. The point of querySelector() returning a single result is to address the analogous cases where that's done with selectors","msgtype":"m.text"},"ts":1254186120000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"That makes sense, but like I said, it doesn't appear to be enough of a problem in practice for Sizzle to optimize for it.","msgtype":"m.text"},"ts":1254186180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And Sizzle, obviously, runs slower than an equivalent native selector engine.","msgtype":"m.text"},"ts":1254186240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it may have been that detecting when an author only wants a single result vs. all results when using the JQuery API proved difficult or impossible. But JS libraries aren't the only use case.","msgtype":"m.text"},"ts":1254186241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Well, of course.  But I don't believe that *any* of the major selector engines optimized for that.","msgtype":"m.text"},"ts":1254186300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1254186301000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"So, that brings up the possibility that you're solving something that isn't a problem.","msgtype":"m.text"},"ts":1254186360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: the W3C rule about maturity level of your normative references is supposed to prevent specs from moving forward as supposedly complete when they actually depend on something unstable","msgtype":"m.text"},"ts":1254186420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"And when the solution itself causes problems (such as requiring any new method to be accompanied by a twin version, making it more painful to introduce new methods), that can be an issue.","msgtype":"m.text"},"ts":1254186421000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as I said, JS libraries can't readily detect when an author wants only a single result, so it isn't at all surprising that they can't optimise for it.  That doesn't mean they wouldn't if they couldn't, or that it's not worth it for people who don't use JS libraries","msgtype":"m.text"},"ts":1254186422000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie: that seems like a helpful rule to me, otherwise the meaning of maturity levels is undermined","msgtype":"m.text"},"ts":1254186480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: in any case, the W3C has to follow the W3C process, so my personal preferences don't enter into it","msgtype":"m.text"},"ts":1254186481000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm not talking about detecting intent.  querySelector doesn't detect intent, it allows the author to explicitly say what they want.  But I don't believe any js library has found it to be worthwhile to allow their users to do that.","msgtype":"m.text"},"ts":1254186482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right. But there is no way, using a JS library API like JQuery, to say they only want one result before the query is executed","msgtype":"m.text"},"ts":1254186540000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"After all, would it really be that difficult for jquery to have both $() and $1()?","msgtype":"m.text"},"ts":1254186541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"probably not, but anyway, this issue has been resolved and closed for over a year now, and is impossible to change. Arguing is beyond pointless","msgtype":"m.text"},"ts":1254186600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"othermaciej: oh well html5 isn't going to be stable for eons. we don't even have the beginnings of a test suite yet.","msgtype":"m.text"},"ts":1254186660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: so we're far from that problem.","msgtype":"m.text"},"ts":1254186661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd rather focus on the issues I'm trying to solve, rather than ancillary issues","msgtype":"m.text"},"ts":1254186662000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"othermaciej: i agree that we shouldn't refer to unstable drafts when we're claiming to be done, but that's a matter of how stable the specs are, not what labels the IETF or W3C put on them.","msgtype":"m.text"},"ts":1254186720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sure, and at Last Call time you can presumably reference absolutely anything, but it would be wise to reference something that can plausibly advance enough that it won't block PR by the time that rolls around","msgtype":"m.text"},"ts":1254186721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah, I'm not arguing to change querySelector.  That's done and over with.  But it brings up the possibility that we wouldn't need both a scopedSelector and scopedSelectorAll.","msgtype":"m.text"},"ts":1254186722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: we're like a decade or more away from that problem","msgtype":"m.text"},"ts":1254186723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm confused. What are you suggesting we have","msgtype":"m.text"},"ts":1254186780000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Like I said in the email, my preferred solution is a function that scopes by default (or, more precisely, a function that works like jQuery's $.find()).","msgtype":"m.text"},"ts":1254186840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I'll think I'll ask Adam about it, since you don't seem to have information on how this spec will progress on the IETF standards track","msgtype":"m.text"},"ts":1254186841000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's what queryScopedSelectorAll() would do. You're being inconsistent","msgtype":"m.text"},"ts":1254186842000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I agree that's what queryScopedSelectorAll would do.  But you don't like that solution because it apparently necessitates queryScopedSelector, which may double into queryScopedSelectorNS in the future.","msgtype":"m.text"},"ts":1254186900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"would you state very clearly what you are suggesting?","msgtype":"m.text"},"ts":1254186960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"are you suggesting we just introduce one for selecting all?","msgtype":"m.text"},"ts":1254186961000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1254186962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right. Why didn't you just say so?","msgtype":"m.text"},"ts":1254186963000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":">_< I did.  Roundabout, I guess, but still.","msgtype":"m.text"},"ts":1254186964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you required me to read between the lines, which I try to avoid doing as it can lead to misunderstandings","msgtype":"m.text"},"ts":1254187020000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"anyway, that would make the API inconsistent, which would suck","msgtype":"m.text"},"ts":1254187080000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Well, if we go with additional methods, it'll either be inconsistent or bloated.","msgtype":"m.text"},"ts":1254187081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also, I can probably avoid introducing the NS methods by either not supporting namespaces, or finding an alternative solution that doesn't introduce new methods","msgtype":"m.text"},"ts":1254187140000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"So would 2 new methods be \"too much\"?","msgtype":"m.text"},"ts":1254187141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(queryscopedSelector and $1All)","msgtype":"m.text"},"ts":1254187142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"by themselves, they wouldn't. But we'd need to be careful about what else they could lead to the introduction of. It's about thinking ahead and avoiding unnecessary complexity","msgtype":"m.text"},"ts":1254187260000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and to be honest, they are they 2nd best of the 4 available options, IMHO","msgtype":"m.text"},"ts":1254187320000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I don't think there are any other direct variations of querySelector that can possibly exist, outside of the NS versions.","msgtype":"m.text"},"ts":1254187440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suppose they would also only need to be supported on Element nodes, not Document or DocumentFragment","msgtype":"m.text"},"ts":1254187441000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Plus NodeLists.","msgtype":"m.text"},"ts":1254187442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1254187500000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"NodeLists don't need to support the methods. That use case has been addressed differently","msgtype":"m.text"},"ts":1254187560000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"document.querySelectorAll(\":reference>p\", list);","msgtype":"m.text"},"ts":1254187561000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Ah, k.","msgtype":"m.text"},"ts":1254187562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm. maybe that does mean we'd need the scoped methods on Document and DocumentFragment","msgtype":"m.text"},"ts":1254187620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"to do this","msgtype":"m.text"},"ts":1254187621000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"document.queryScopedSelectorAll(\">p\", list)","msgtype":"m.text"},"ts":1254187622000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Yeah, if you want the shortened form to be ubiquitous.","msgtype":"m.text"},"ts":1254187800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But then what would document.queryScopedSelectorAll(\">p\") mean?  What's the scope?","msgtype":"m.text"},"ts":1254187801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Gah, all that typing is why I hate ordinary js, though.  >_<","msgtype":"m.text"},"ts":1254187860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lachy: is it intended that :reference ever be usable outside of a scoped selector?","msgtype":"m.text"},"ts":1254188160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"whoever was asking me about rendering <details> -- i changed the spec so that it's easier to do from script","msgtype":"m.text"},"ts":1254188340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I like the stricter definition, Hixie.","msgtype":"m.text"},"ts":1254188580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do you mean, \"stricter\"?","msgtype":"m.text"},"ts":1254188581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Previously I thought it was probably going to become common to just put a <dt> without a <dd>.","msgtype":"m.text"},"ts":1254188582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1254188640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I guess you're keeping <dt>/<dd> for <figure> and <details>, now that Leif found a talisman that makes IE6 and IE7 build a proper tree?","msgtype":"m.text"},"ts":1254188760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm just going through the bugs, so if nobody filed a bug asking for them to be removed, they're not changing, and if someone did, they i'll look at their arguments and see if they are compelling.","msgtype":"m.text"},"ts":1254188940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goes to file a bug.  He's not sure it's compelling, but thinks it should be considered.","msgtype":"m.emote"},"ts":1254189060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"do you think it should be considered more than it was when we first used <dt>?","msgtype":"m.text"},"ts":1254189120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, that took about a year of consideration","msgtype":"m.text"},"ts":1254189121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw, thanks to the various people who occasionally go and resolve bugs that are invalid or duplicate or whatever","msgtype":"m.text"},"ts":1254189180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's much appreciated","msgtype":"m.text"},"ts":1254189181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"everyone should feel free to go ahead and close bugs that are based on misunderstandings or that can't be changed for whatever reason","msgtype":"m.text"},"ts":1254189182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: From IRC chatter, no one realized that IE6 and IE7 were generating non-tree DOMs when <dt> or <dd> were used outside of <dl>.  So yeah, some more consideration seems warranted, given the apparently new information.","msgtype":"m.text"},"ts":1254189900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"IE6 and IE7 do all kinds of random stuff","msgtype":"m.text"},"ts":1254189960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you need basic scripts just to include a new element","msgtype":"m.text"},"ts":1254189961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, but that basic script (just 200 bytes or so) makes them work great, and the code itself is understandable, even if the reasoning behind it is crazy.","msgtype":"m.text"},"ts":1254190140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"On the other hand, the talisman to make IE6 and 7 generate tree DOMs when <dt> is thrown around is completely psycho and makes no sense whatsoever.  It just trips some mysterious parse flag somewhere in the browser, and we hope that it doesn't cause any ill effects.","msgtype":"m.text"},"ts":1254190200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1254190260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"given that i wasn't expecting this element to be useful for years, that there is a problem using the element in the obsolete 25% of the market doesn't really worry me that much","msgtype":"m.text"},"ts":1254190320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I expect <details> to be js-usable immediately (with a little elem.open feature test to allow browsers to slide in native functionality seamlessly), so that does still worry me.","msgtype":"m.text"},"ts":1254190500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And IE6 is 20-25%, but IE7 is 25-30% (at least according to my company's website, which receives mostly nontechnical visitors), so that's a good half of the web that we're excluding.","msgtype":"m.text"},"ts":1254190560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you have IE6 at 25%?!","msgtype":"m.text"},"ts":1254190800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what kind of site are you running?","msgtype":"m.text"},"ts":1254190801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"www.igofigure.com","msgtype":"m.text"},"ts":1254190802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We sell membership management software for small fitness clubs.","msgtype":"m.text"},"ts":1254190803000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess fitness clubs have poor IT staff! :-)","msgtype":"m.text"},"ts":1254190860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Like you wouldn't believe.","msgtype":"m.text"},"ts":1254190861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's way higher than average for IE6","msgtype":"m.text"},"ts":1254190862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how depressing","msgtype":"m.text"},"ts":1254190863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"was tech support for his company before he became webmaster.","msgtype":"m.emote"},"ts":1254190864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"found a bug from Shelley that he could comment on.","msgtype":"m.emote"},"ts":1254191460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Luckily I don't actually care about IE6, and encourage visitors to upgrade.  But still, IE7's going to be an issue for a while yet.","msgtype":"m.text"},"ts":1254191520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also luckily, some of my intranet apps are purposely not being made compatible with IE7, so I can force everyone in the company to upgrade.  Less people using IE7 = less people realizing that something doesn't look right in IE7, and complaining to me.","msgtype":"m.text"},"ts":1254191580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Well, let me rephrase that.  I'm not going out of my way to make them incompatible.  I'm simply not caring when I use good markup that they don't understand.)","msgtype":"m.text"},"ts":1254191640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://www.w3.org/Bugs/Public/show_bug.cgi?id=7657","msgtype":"m.text"},"ts":1254193320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: apparently you were ahead of yourself","msgtype":"m.text"},"ts":1254193321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1254193380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm?  I just did that half an hour ago or so.","msgtype":"m.text"},"ts":1254193381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1254193382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry, missed that the last comment was recent","msgtype":"m.text"},"ts":1254193383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hehe.","msgtype":"m.text"},"ts":1254193384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i really don't understand why <div> isn't suitable for the short term","msgtype":"m.text"},"ts":1254193440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"'cause we like being fancy, obviously.  And using HTML5 to the fullest is fancy.","msgtype":"m.text"},"ts":1254193740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it might be a good idea to have a bug for the IE6/IE7 parsing issue that is separate from Shelley's bug about her broad philosophical concerns about element semantics being redefined","msgtype":"m.text"},"ts":1254193860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm, keyboard backlight won't come on.","msgtype":"m.text"},"ts":1254193920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: the conditional <object> hack seems less severe to me than the issues with <legend> at least","msgtype":"m.text"},"ts":1254193921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Agreed that it's lesser.  But it's worse than the createElement hack.","msgtype":"m.text"},"ts":1254193980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: to me it would probably outweigh reluctance to add elements, but I can see that either view is reasonable","msgtype":"m.text"},"ts":1254193981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: sure, something you have to add at every use is worse than a one-time script","msgtype":"m.text"},"ts":1254193982000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Well, you don't have to add it at every use.  It's a once-per-page think, just like the createElement hack.  But it's one that can't be externalized to a <script>, which is really annoying.","msgtype":"m.text"},"ts":1254194040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Should I reopen the bug/create a new bug to introduce the fourth option to deal with compat issues (a @caption attribute to identify the <legend>/<details> caption)?","msgtype":"m.text"},"ts":1254194160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: once-per-page?","msgtype":"m.text"},"ts":1254194161000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Or should I take your response literally and decide if I want to escalate this to the chairs?","msgtype":"m.text"},"ts":1254194162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: anywhere in the page?","msgtype":"m.text"},"ts":1254194163000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Nah, somewhere in the head.  Probably at the bottom of the head, but I'm not sure - I haven't done extensive testing with it.","msgtype":"m.text"},"ts":1254194220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you can't document.write() it from a <script?","msgtype":"m.text"},"ts":1254194221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"er, <script>?","msgtype":"m.text"},"ts":1254194222000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Oh, hm...","msgtype":"m.text"},"ts":1254194223000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Let me try.","msgtype":"m.text"},"ts":1254194224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: per the comment i added on the other bug, if you think this should change, please escalate it to the chairs (unless of course you have new information that would affect my conclusions here)","msgtype":"m.text"},"ts":1254194225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: if you can, would that remove your objection, since it's no worse than the createElement() hack?","msgtype":"m.text"},"ts":1254194226000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yes it would.","msgtype":"m.text"},"ts":1254194227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as i said before, personally, i think it's fine to just use <div>s for the next few years just like the past few","msgtype":"m.text"},"ts":1254194280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Any js-based hack that I can bundle up together into a single file is acceptable to me, as long as the perf hit is low.","msgtype":"m.text"},"ts":1254194281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: Any idea if you can document.write() a conditional comment?","msgtype":"m.text"},"ts":1254194340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"will test, but if he needs to go ahead and use a different approach already, he might as well know.","msgtype":"m.emote"},"ts":1254194341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't know, but is the conditional comment essential? couldn't the document.write be conditional based on running in old IE?","msgtype":"m.text"},"ts":1254194342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: I bet it would work, but you may have to split the tokens of the conditional comment into separate strings to stop IE from recognizing it as such","msgtype":"m.text"},"ts":1254194400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah it can be, but the hacks to reliably detect IE6 and 7 are sorta weird.  I guess Dean Edwards's stuff works pretty well.","msgtype":"m.text"},"ts":1254194401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(same way you need to document.write \"</scr\" + \"ipt>\"","msgtype":"m.text"},"ts":1254194402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually, in an external script it might not matter","msgtype":"m.text"},"ts":1254194460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"anyway I am curious about the results","msgtype":"m.text"},"ts":1254194461000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: do you have a link for this comment hack? haven't seen/heard of this before.","msgtype":"m.text"},"ts":1254194700000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"might be nice to add to Modernizr","msgtype":"m.text"},"ts":1254194701000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: Trying to find it in the archives.  One moment.","msgtype":"m.text"},"ts":1254194702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ty","msgtype":"m.text"},"ts":1254194703000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: http://lists.w3.org/Archives/Public/public-html/2009Sep/0802.html","msgtype":"m.text"},"ts":1254194880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks, sir.","msgtype":"m.text"},"ts":1254194881000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Success!","msgtype":"m.text"},"ts":1254195480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Conditional comments can be added via document.write(), and it does trigger the appropriate parser behavior.","msgtype":"m.text"},"ts":1254195481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nice.","msgtype":"m.text"},"ts":1254195540000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Now, the only question is if the fact that it writes a \"</head>\" into the document causes problems with in-head content that comes after it.","msgtype":"m.text"},"ts":1254195600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, yes, it seems to drop <link>s on the floor that come after the script has run.","msgtype":"m.text"},"ts":1254195660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So this has to be run as the last element in <head>.","msgtype":"m.text"},"ts":1254195661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, actually, you can omit the \"</head>\" from the write, if you avoid putting <head> in your document at the normal place.","msgtype":"m.text"},"ts":1254196140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though it still drops <link>s on the floor that come after it, so there's not much of a difference I suppose.","msgtype":"m.text"},"ts":1254196200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fun fact of the day: when served as \"text/html\", IE will treat the following markup as a feed:","msgtype":"m.text"},"ts":1254205800000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"<!-- <rdf:RDF --> <!-- http://www.w3.org/1999/02/22-rdf-syntax-ns# --> <!-- http://purl.org/rss/1.0/ -->","msgtype":"m.text"},"ts":1254205801000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"checks in an example that uses syntax that is the least pretty syntax of all the examples checked in so far","msgtype":"m.emote"},"ts":1254206400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: 5c in the e-mail you sent me refers to 5c where i think it means 5d","msgtype":"m.text"},"ts":1254206401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you are right","msgtype":"m.text"},"ts":1254206460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for step 9a, it would be good if there was some way for us to record that in some way that can be easily found","msgtype":"m.text"},"ts":1254206580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. a keyword in the bug","msgtype":"m.text"},"ts":1254206581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for 10 i don't think a keyword is needed, since i just always look at the comments from the last one i wrote to the end if a bug is open","msgtype":"m.text"},"ts":1254206640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for 5c, btw, i think people might need to be given privs to do that, so maybe we should also have people checking the comments for people writing comments on resolved bugs to make sure they get reopened","msgtype":"m.text"},"ts":1254206700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've missed a few in the past that i found by luck","msgtype":"m.text"},"ts":1254206701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"keyword for 9a seems good","msgtype":"m.text"},"ts":1254206702000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i've tried to change my filters to make sure i find more, but i might still miss some if there's no systematic solution","msgtype":"m.text"},"ts":1254206703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"other than that, looks good","msgtype":"m.text"},"ts":1254206704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you want e-mail reply?","msgtype":"m.text"},"ts":1254206705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for 10 I'd rather keep the keyword for WG tracking purposes, even if you can do without it","msgtype":"m.text"},"ts":1254206760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1254206761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"email reply would be handy so I don't forget","msgtype":"m.text"},"ts":1254206762000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"since I'm about to head home","msgtype":"m.text"},"ts":1254206763000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(forced myself to stay at work while I wrote this)","msgtype":"m.text"},"ts":1254206764000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"SENT","msgtype":"m.text"},"ts":1254206880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ER","msgtype":"m.text"},"ts":1254206881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sent","msgtype":"m.text"},"ts":1254206882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://wearehugh.com/public/2009/09/rss10-sniffing.txt","msgtype":"m.text"},"ts":1254207000000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"what's the conflict between CORS Origin and Sec-From (if Sec-From were named Origin)?","msgtype":"m.text"},"ts":1254208620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Sec-From is now named Origin","msgtype":"m.text"},"ts":1254208800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1254208860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess the Mozilla wiki is out of date then","msgtype":"m.text"},"ts":1254208861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this is a recent occurrence","msgtype":"m.text"},"ts":1254208920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which vendors are on board?","msgtype":"m.text"},"ts":1254208921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that I don't know - I did not follow the recent discussion closely","msgtype":"m.text"},"ts":1254209220000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there was a thread on public-webapps and ietf-http-wg","msgtype":"m.text"},"ts":1254209400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://code.google.com/p/mimesniff/","msgtype":"m.text"},"ts":1254213000000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"annevk2: when does 'abort' fire?","msgtype":"m.text"},"ts":1254216240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does opera 9.x do with <div><video style=color:red><source></video></div><p>test","msgtype":"m.text"},"ts":1254216241000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm no difference","msgtype":"m.text"},"ts":1254216780000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm. why does Opera on Mac load /System/Library/TextEncodings/Unicode Encodings.bundle/Contents/MacOS/Unicode Encodings","msgtype":"m.text"},"ts":1254216781000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"isn't Opera supposed to have its own decoders like Firefox?","msgtype":"m.text"},"ts":1254216782000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mpilgrim: The project really needs a logo of a mime being sniffed","msgtype":"m.text"},"ts":1254217200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sigh. -bash: fork: Resource temporarily unavailable","msgtype":"m.text"},"ts":1254217201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess the OS is close to being horked","msgtype":"m.text"},"ts":1254217202000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't even have a large number of processes","msgtype":"m.text"},"ts":1254217260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do you have some process not reaping its children or something?","msgtype":"m.text"},"ts":1254217261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dean can put the video in a <table> or a <button> for opera 9.x compat","msgtype":"m.text"},"ts":1254217262000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: not as far as I can tell from the process list","msgtype":"m.text"},"ts":1254217320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1254217321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but Opera got horked and bounced like crazy back and forth in the Dock","msgtype":"m.text"},"ts":1254217322000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mpilgrim: Isn't the <BODY test entirely redundant with <B and therefore unnecessary and wasteful?","msgtype":"m.text"},"ts":1254217323000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so maybe it used up a zillion pids","msgtype":"m.text"},"ts":1254217324000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1254217325000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"reboots","msgtype":"m.emote"},"ts":1254217380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: abarth is going to be changing that","msgtype":"m.text"},"ts":1254217381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to look for <BODY and <B followed by a space or a >","msgtype":"m.text"},"ts":1254217440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(for some definition of \"space\")","msgtype":"m.text"},"ts":1254217441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1254217442000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie, when the user stops the loading of something I believe","msgtype":"m.text"},"ts":1254217560000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"that's basically as vague as i got","msgtype":"m.text"},"ts":1254217561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the only part I care about is that abort doesn't emit the EOF token","msgtype":"m.text"},"ts":1254217800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does not and should, or should not and does?","msgtype":"m.text"},"ts":1254217860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should not and probably does not","msgtype":"m.text"},"ts":1254217861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i doubt it's especially well-defined at this point frankly","msgtype":"m.text"},"ts":1254217920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in theory it can dispatch everywhere were load/error is dispatched","msgtype":"m.text"},"ts":1254217980000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"It just occurred to me that I've forgotten to mark scripts malformed if they are on the tree builder stack when an abort happens","msgtype":"m.text"},"ts":1254217981000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in fact, now that I think about it, I have no mechanism capable of doing that sort of thing after abort","msgtype":"m.text"},"ts":1254217982000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if it's possible for an onabort script to do evil things with parser-inserted but unexecuted partial script elements","msgtype":"m.text"},"ts":1254218040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"frankly interop for 'abort' seems not very important","msgtype":"m.text"},"ts":1254218100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was thinking about security","msgtype":"m.text"},"ts":1254218101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but the kind of foot shooting I can imagine arising from this could be achieved by other more direct foot shooting activities","msgtype":"m.text"},"ts":1254218160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if XCode and Terminal.app still go crazy under Snow Leopard when an app being debugged in gdb crashes","msgtype":"m.emote"},"ts":1254218340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hi everyone","msgtype":"m.text"},"ts":1254221040000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1254221100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think I need to duck out of the \"resource\" discussion, because the more I participate, the more confused I get about what is what","msgtype":"m.text"},"ts":1254221160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"thought he was the only one","msgtype":"m.emote"},"ts":1254221220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"my main confusion is over what the problem is","msgtype":"m.text"},"ts":1254221340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as in, what needs fixing in the spec","msgtype":"m.text"},"ts":1254221341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: try removing some text, so that it just says \"A URL is a string.\"","msgtype":"m.text"},"ts":1254221460000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i don't think that would help most authors","msgtype":"m.text"},"ts":1254221520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=7726 - are we seriously considering adding a whole tokeniser state for this?","msgtype":"m.text"},"ts":1254221580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"two states, in fact, one for public and one for private","msgtype":"m.text"},"ts":1254221581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, system, not private","msgtype":"m.text"},"ts":1254221640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It doesn't seem like too big a deal to me","msgtype":"m.text"},"ts":1254221940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"To add the extra states","msgtype":"m.text"},"ts":1254222000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"States are cheap","msgtype":"m.text"},"ts":1254222001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"seems pointless to me","msgtype":"m.text"},"ts":1254222060000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Hixie, elemement","msgtype":"m.text"},"ts":1254222120000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"oh, and \"publicate date\"","msgtype":"m.text"},"ts":1254222121000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"time to sleep? :)","msgtype":"m.text"},"ts":1254222122000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"noooo","msgtype":"m.text"},"ts":1254222180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I think the spec should just make all doctypes that trigger standards mode conforming","msgtype":"m.text"},"ts":1254222240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's all unknown doctypes","msgtype":"m.text"},"ts":1254222241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"On an unrelated topic did I ever say that someone should implment mailing list software that limits the rate at which it accepts replies?","msgtype":"m.text"},"ts":1254222300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: you want <!DOCTYPE HTML PUBLIC \"SVG\"> to be conforming?","msgtype":"m.text"},"ts":1254222301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: are there any bogus doctypes that are likely to indicate an actual error by the author?","msgtype":"m.text"},"ts":1254222360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"define \"error\"","msgtype":"m.text"},"ts":1254222420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"likely to indicate a typo that would affect the content in some bad or unintended way","msgtype":"m.text"},"ts":1254222421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, I think \"minted\" DOCTYPEs that trigger standards mode would be more slightly better","msgtype":"m.text"},"ts":1254222422000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"s/more//","msgtype":"m.text"},"ts":1254222423000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: you mean any that have ever been officially specified?","msgtype":"m.text"},"ts":1254222480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1254222481000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"i don't really see any point allowing anything other than <!DOCTYPE HTML> personally","msgtype":"m.text"},"ts":1254222482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's reasonable too","msgtype":"m.text"},"ts":1254222483000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I just don't see the point in disallowing other things","msgtype":"m.text"},"ts":1254222484000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it makes the point that HTML is versionless stronger I think","msgtype":"m.text"},"ts":1254222540000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"its highly likely new content will use <!DOCTYPE html> cause it is short and memorable, and part of HTML5's branding","msgtype":"m.text"},"ts":1254222541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and makes using new features in old templating systems easier","msgtype":"m.text"},"ts":1254222542000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"so its not like it's a huge aid to authors","msgtype":"m.text"},"ts":1254222543000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(while remaining conforming)","msgtype":"m.text"},"ts":1254222544000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"some of the longer doctypes trigger quirks mode or limited-quirks mode, and it's non-obvious why <!doctype html public \"\" \"\" xyz> is allowed but <!doctype html public \"\" xyz> is not","msgtype":"m.text"},"ts":1254223260000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"if all doctypes that trigger standards mode were to be allowed","msgtype":"m.text"},"ts":1254223261000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok, I see how that might be confusing","msgtype":"m.text"},"ts":1254223560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"thinks the current doctype situation is fine and far from important enough to spend more time changing","msgtype":"m.emote"},"ts":1254223561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't like new states but we are so deep into the abyss exceeding 8000 bytecodes that I stopped caring much","msgtype":"m.text"},"ts":1254223620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"besides, the solution for <!-- in JS string literal will translate to a bunch of states anyway","msgtype":"m.text"},"ts":1254223680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok i can make <!DOCTYPE HTML PUBLIC\"\"> and <@DOCTYPE HTML SYSTEM\"\"> trigger additional parse errors; do we also want a state to pointlessly catch the <!DOCTYPE HTML PUBLIC \"\"\"\"> case?","msgtype":"m.text"},"ts":1254223681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't have a strong opinion","msgtype":"m.text"},"ts":1254223682000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: were these all valid in SGML/","msgtype":"m.text"},"ts":1254223740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1254223741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if they were, why do we care about XML?","msgtype":"m.text"},"ts":1254223742000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: seems like you could stick the doctype parser into a separate method to avoid the 8000 byte limit, since a ton of these states are just there","msgtype":"m.text"},"ts":1254223743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no idea what SGML says","msgtype":"m.text"},"ts":1254223744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't have a copy","msgtype":"m.text"},"ts":1254223745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: anyway, if you require a space between SYSTEM and \"\", I think it's logical to require a space between \"\" and \"\"","msgtype":"m.text"},"ts":1254223800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"notes that the Super Friends didn't notice the permitted 'sloppiness' here","msgtype":"m.text"},"ts":1254223860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thinks the Super Friends didn't read the parsing section","msgtype":"m.emote"},"ts":1254223861000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i wonder if they'll ever send their feedback","msgtype":"m.text"},"ts":1254223920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hey i can do the \"\"\"\" without a new state","msgtype":"m.text"},"ts":1254223980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1254223981000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: I'm planning on writing a Python or Perl munger that sticks all the doctype states in a separate method","msgtype":"m.text"},"ts":1254223982000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1254223983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: or you could move the doctype tokenization into the tree builder","msgtype":"m.text"},"ts":1254224040000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and have the tokenizer just act on \"<!doctype\", eat everything until the next \">\"","msgtype":"m.text"},"ts":1254224041000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: I'd rather not go there","msgtype":"m.text"},"ts":1254224100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1254224101000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"aw, crap, i can't after all","msgtype":"m.text"},"ts":1254224102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would make <!DOCTYPE HTML PUBLIC \"\" > a parse error because of the space","msgtype":"m.text"},"ts":1254224160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aside, for the tokenizer loop it would nice to have some kind of compiler pragmas that allowed me to mark sections of one huge method in a Shark-sensitive way","msgtype":"m.text"},"ts":1254224161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so that I could have distinct Shark symbols for each tokenizer state even if they are all in one method","msgtype":"m.text"},"ts":1254224162000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"now the tokenizer loop is just one huge black box in Shark","msgtype":"m.text"},"ts":1254224163000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but then even if I discovered that a state is slow, there aren't many degrees of freedom to do anything about it","msgtype":"m.text"},"ts":1254224220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Can't you get a profile showing time spent in individual lines of code?","msgtype":"m.text"},"ts":1254224280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and then write a script to sum the values within arbitrary regions)","msgtype":"m.text"},"ts":1254224340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1254224341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the point is getting nice trees in Shark","msgtype":"m.text"},"ts":1254224342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not writing post-processing scripts myself","msgtype":"m.text"},"ts":1254224343000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, when canvas support is disabled, should getContext('2d') throw?","msgtype":"m.text"},"ts":1254225240000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: when would canvas support be disabled?","msgtype":"m.text"},"ts":1254225300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1254225301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nobody would test for that","msgtype":"m.text"},"ts":1254225302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: the spec now allows it to be disabled","msgtype":"m.text"},"ts":1254225303000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen, when images are disabled","msgtype":"m.text"},"ts":1254225304000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"what's the point?","msgtype":"m.text"},"ts":1254225305000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"at least, that'd make the most sense to me","msgtype":"m.text"},"ts":1254225306000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hsivonen: no idea, but opera people apparently want it","msgtype":"m.text"},"ts":1254225307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it costs us nothing","msgtype":"m.text"},"ts":1254225308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hmmkay...","msgtype":"m.text"},"ts":1254225309000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: well, it cost other browsers something if there's code to write","msgtype":"m.text"},"ts":1254225310000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i guess if people start using canvas for ads...","msgtype":"m.text"},"ts":1254225360000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"there's no code to write","msgtype":"m.text"},"ts":1254225361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen, such disabling features are not required","msgtype":"m.text"},"ts":1254225362000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"wonders whether Hixie detects opera people from their IP in the bugs","msgtype":"m.emote"},"ts":1254225480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: you should use Tor to file bugs :-)","msgtype":"m.text"},"ts":1254225540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i detect them by their suggesting of features that would only make sense if the UA had poor UI :-P","msgtype":"m.text"},"ts":1254225600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess disabling <canvas> rendering makes some sense in the VoiceOver world where you'd want low-vision users (or sighted people assisting a blind user) see the VO focus","msgtype":"m.text"},"ts":1254225660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i didn't file the bug","msgtype":"m.text"},"ts":1254225661000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i wonder why Julian reopened http://www.w3.org/Bugs/Public/show_bug.cgi?id=7726","msgtype":"m.text"},"ts":1254225720000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"in the world where canvas descendants are the AT-exposed alternative","msgtype":"m.text"},"ts":1254225721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"woo, Zarro Boogs","msgtype":"m.text"},"ts":1254226020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"excellent!","msgtype":"m.text"},"ts":1254226021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"now if i can keep it below 10 for another 3 days, that's a 1.0 on my \"get bugs below 10\" OKR","msgtype":"m.text"},"ts":1254226080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OKR?","msgtype":"m.text"},"ts":1254226081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Objective and Key Result","msgtype":"m.text"},"ts":1254226082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how google does quarterly goals","msgtype":"m.text"},"ts":1254226083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plans to file 10 bugs while Hixie is asleep","msgtype":"m.emote"},"ts":1254226140000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Only do that if you want a new status \"resolved: Invalid (filed by opera employee)\"","msgtype":"m.text"},"ts":1254226141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1254226142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1254226200000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"speaking of quarterly goals, I can has off-the-main-thread parsing!","msgtype":"m.text"},"ts":1254226260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"woohoo!","msgtype":"m.text"},"ts":1254226261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"cnn.com broken but simpler pages work","msgtype":"m.text"},"ts":1254226262000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm glad I don't have a quarterly goal to get the issue count below any particular number","msgtype":"m.text"},"ts":1254226800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(other than of the purely personal sort)","msgtype":"m.text"},"ts":1254226801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i set this goal myself :-)","msgtype":"m.text"},"ts":1254226920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"okrs are self-assigned","msgtype":"m.text"},"ts":1254226921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone know how <applet> works?","msgtype":"m.text"},"ts":1254227040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i know that <applet> is annoying","msgtype":"m.text"},"ts":1254227100000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I once had the noble idea of finding out but then couldn't find the Java stuff I needed and dropped the idea","msgtype":"m.text"},"ts":1254227160000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"it always instantiates the java plugin, but i guess that could be optimized away if there's no code=\"\" and no <param>s or something","msgtype":"m.text"},"ts":1254227161000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"any idea what it does after instantiating java?","msgtype":"m.text"},"ts":1254227220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"runs the specified applet","msgtype":"m.text"},"ts":1254227280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think it's pretty much the same as <object type=application/x-java-applet>, except it doesn't fall back","msgtype":"m.text"},"ts":1254227281000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"but i haven't tested it much","msgtype":"m.text"},"ts":1254227340000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"does codebase=\"\" actually work with it?","msgtype":"m.text"},"ts":1254227341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and passes the param values to the applet","msgtype":"m.text"},"ts":1254227342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think codebase=\"\" and <param name=codebase> might be the same","msgtype":"m.text"},"ts":1254227400000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"but haven't tested!","msgtype":"m.text"},"ts":1254227401000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"or i have but don't remember","msgtype":"m.text"},"ts":1254227402000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"does the browser do any fetching of any kind?","msgtype":"m.text"},"ts":1254227580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for applets?","msgtype":"m.text"},"ts":1254227581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by \"the browser\" do you mean as distinct from the Java plugin doing it?","msgtype":"m.text"},"ts":1254227640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"cause obviously someone is loading the applet at some point","msgtype":"m.text"},"ts":1254227641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1254227642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my real question is, do the browsers get to add the Origin header, or does Sun","msgtype":"m.text"},"ts":1254227643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think all browsers interface <applet> to a Java implementation in the same way, so I am not sure if there is a single answer","msgtype":"m.text"},"ts":1254227760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1254227820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, crap","msgtype":"m.text"},"ts":1254227821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"next thing on my list is the indexes","msgtype":"m.text"},"ts":1254227822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was hoping those would do themselves somehow","msgtype":"m.text"},"ts":1254227823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I looked into it but it wasn't that simple","msgtype":"m.text"},"ts":1254227880000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"it's not even easy to get a single list of elements extracted from the spec","msgtype":"m.text"},"ts":1254227881000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1254227882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let alone also getting their metadata","msgtype":"m.text"},"ts":1254227883000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"you should add some annotations maybe","msgtype":"m.text"},"ts":1254227884000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"you should use microdata","msgtype":"m.text"},"ts":1254227885000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i guess i'll spec microdata then use that, yeah","msgtype":"m.text"},"ts":1254227886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm isn't the spec supposed to be valid HTML4?","msgtype":"m.text"},"ts":1254227940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or did W3C see sense?","msgtype":"m.text"},"ts":1254227941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"only for w3c","msgtype":"m.text"},"ts":1254227942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can strip all this stuff out before it goes to w3c","msgtype":"m.text"},"ts":1254227943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Cunning","msgtype":"m.text"},"ts":1254227944000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or you can convert it into valid HTML4+RDFa for w3c","msgtype":"m.text"},"ts":1254227945000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i don't think that passes their pubrules either","msgtype":"m.text"},"ts":1254228000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"snap","msgtype":"m.text"},"ts":1254228060000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm yeah, what is itemtype Hixie?","msgtype":"m.text"},"ts":1254228120000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"same as item=\"\" today","msgtype":"m.text"},"ts":1254228180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://damowmow.com/playground/microdata/004/introduction","msgtype":"m.text"},"ts":1254228181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, I thought that turned into itemscope","msgtype":"m.text"},"ts":1254228182000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"it also did","msgtype":"m.text"},"ts":1254228420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it got split in two","msgtype":"m.text"},"ts":1254228421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"value goes into itemtype=\"\"","msgtype":"m.text"},"ts":1254228422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i really should go to sleep","msgtype":"m.text"},"ts":1254228423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1254228424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"discovers someone who has wrapped almost their entire ecmascript game in a \"with\" block","msgtype":"m.emote"},"ts":1254228480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie, nn, and also, weak","msgtype":"m.text"},"ts":1254228540000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"jgraham, don't let TC39 hear it","msgtype":"m.text"},"ts":1254228541000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: It is almost enough to make *me* cry. I hate to think how TC39 would react...","msgtype":"m.text"},"ts":1254228660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's a great way to make the whole thing run very slowly","msgtype":"m.text"},"ts":1254228720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is 'with' JIT poison?","msgtype":"m.text"},"ts":1254228721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"worse than that","msgtype":"m.text"},"ts":1254228722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually wrapping all the code with a \"with\" might be less bad than using \"with\" in an inner loop","msgtype":"m.text"},"ts":1254228780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it prevents mapping identifiers to variable slots at \"compile\" time (where \"compile\" might mean just to bytecode)","msgtype":"m.text"},"ts":1254228781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`: possibly (<body vs <b). i think there was discussion of removing the <b test in draft-02","msgtype":"m.text"},"ts":1254228840000,"senderName":"mpilgrim_","senderId":"mpilgrim_@irc"},
{"content":{"body":"oh look, draft-02 is already out","msgtype":"m.text"},"ts":1254229020000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"i guess i mean draft-03 then","msgtype":"m.text"},"ts":1254229021000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"I guess I should review abarth's drafts","msgtype":"m.text"},"ts":1254229140000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"there's a mime-sniff 3?","msgtype":"m.text"},"ts":1254229200000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annoying that tools.ietf.org always lags a bit behind","msgtype":"m.text"},"ts":1254229201000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"it's by far the most useful interface for IETF stuff","msgtype":"m.text"},"ts":1254229202000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Adam has like 6 different email addresses","msgtype":"m.text"},"ts":1254229320000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"he just published draft-02 today","msgtype":"m.text"},"ts":1254229800000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"but it doesn't include the new algorithm i wrote to detect RSS1.0-served-as-text/html","msgtype":"m.text"},"ts":1254229801000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"and it doesn't change the sniffing of \"<b\", which he was discussing with me off-list","msgtype":"m.text"},"ts":1254229860000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"it would be nice if the IETF switched to something like dev.w3.org instead of this versioned drafts stuff","msgtype":"m.text"},"ts":1254230040000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"especially when in development this is really cumbersome model","msgtype":"m.text"},"ts":1254230100000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"that, and upgrading to UTF-8, and they'd be all set to enter the 1990s","msgtype":"m.text"},"ts":1254230160000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"yeah, tools.ietf.org makes the text-only crap somewhat more acceptable, though it's not great (but a lot better than the default HTML some people generate themselves (presumably with XSLT or some such from the source XML)","msgtype":"m.text"},"ts":1254230400000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"actually, importScripts() already ignores the specified encoding if i'm reading the spec correctly","msgtype":"m.text"},"ts":1254231480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"it uses the same encoding as the worker","msgtype":"m.text"},"ts":1254231540000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1254231780000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"I think you found a spec bug","msgtype":"m.text"},"ts":1254231840000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"cause step 1 and 2 there are contradictory","msgtype":"m.text"},"ts":1254231841000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"actually","msgtype":"m.text"},"ts":1254231842000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"maybe not","msgtype":"m.text"},"ts":1254231843000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"oh does step 2 refer to URL character encoding?","msgtype":"m.text"},"ts":1254231900000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I think so","msgtype":"m.text"},"ts":1254231901000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"yes, see 6.5.3.3","msgtype":"m.text"},"ts":1254231960000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"could be clearer though","msgtype":"m.text"},"ts":1254231961000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Lachy: Selectors v2 is much clearer now, thanks","msgtype":"m.text"},"ts":1254234480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1254234481000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: isn't 'module dom' implied?","msgtype":"m.text"},"ts":1254235380000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"maybe it is now. It wasn't at the time they were added to the spec.","msgtype":"m.text"},"ts":1254235500000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I was meaning to check on that","msgtype":"m.text"},"ts":1254235501000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, your use of Supplemental seems wrong","msgtype":"m.text"},"ts":1254235680000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"for the first interface","msgtype":"m.text"},"ts":1254235681000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2, no it's not. It's the same way that HTML5 uses it in many cases","msgtype":"m.text"},"ts":1254236040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"i don't understand what the difference is between [Supplemental, NoInterfaceObject] interface A { a } B implements A; and [NoInterfaceObject] interface A { a } B implements A;","msgtype":"m.text"},"ts":1254236220000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"is B.prototype different for the two cases?","msgtype":"m.text"},"ts":1254236221000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Lachy, how?","msgtype":"m.text"},"ts":1254236340000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Lachy, Supplemental means the interface is defined somewhere else and you define some additions","msgtype":"m.text"},"ts":1254236341000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Lachy, for NodeSelector at least you are defining the interface right there","msgtype":"m.text"},"ts":1254236342000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: Supplemental can be used in three different ways apparently","msgtype":"m.text"},"ts":1254236400000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"for Element it does seem appropriate","msgtype":"m.text"},"ts":1254236401000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"zcorpan_, I only know about splitting interfaces","msgtype":"m.text"},"ts":1254236460000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"zcorpan_, and that is not what is happening here","msgtype":"m.text"},"ts":1254236461000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"(per http://dev.w3.org/2006/webapi/WebIDL/#es-extended-attributes )","msgtype":"m.text"},"ts":1254236462000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2, Hixie explained it to me a few days ago.  I'll see if I can find the link...","msgtype":"m.text"},"ts":1254236520000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"web workers uses supplemental the same way as nodeselector","msgtype":"m.text"},"ts":1254236580000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/whatwg/20090925#l-110","msgtype":"m.text"},"ts":1254236640000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"is still slightly confoosed","msgtype":"m.emote"},"ts":1254236820000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"A.b doesn't exist?","msgtype":"m.text"},"ts":1254236880000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"objects implementing A will have b, right?","msgtype":"m.text"},"ts":1254236881000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"but A.prototype.b is undefined?","msgtype":"m.text"},"ts":1254236940000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1254236941000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1254237000000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i guess i should test that the prototypes have the right things for workers","msgtype":"m.text"},"ts":1254237001000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1254237120000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"that's very confusing stuff","msgtype":"m.text"},"ts":1254237240000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1254237300000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I don't quite understand why implements does not put it on the prototype chain but I guess it makes sense somehow","msgtype":"m.text"},"ts":1254237360000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"wonders how much the prototype stuff matches reality","msgtype":"m.emote"},"ts":1254237420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, the prototype stuff doesn't really match reality","msgtype":"m.text"},"ts":1254240480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"better solutions welcome","msgtype":"m.text"},"ts":1254240481000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i suspect the TC 39 people will have opinions on the best way to map mixins/multiple inheritance to the single inheritance prototype chain","msgtype":"m.text"},"ts":1254240482000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"also, [Supplemental] isn't defined in web idl (yet)","msgtype":"m.text"},"ts":1254240483000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'm still not sure i like its intended use (basically like partial classes in c# or something, i think)","msgtype":"m.text"},"ts":1254240540000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"is on his way to file 10 new bugs","msgtype":"m.emote"},"ts":1254241200000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"all legit though :)","msgtype":"m.text"},"ts":1254241201000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"didn't realize that Anne was a he","msgtype":"m.emote"},"ts":1254241620000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"heh, you're not the first :)","msgtype":"m.text"},"ts":1254241740000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"I guess that's what I get for assuming gender based on someone's name across cultures.","msgtype":"m.text"},"ts":1254241741000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"annodomini: To be fair it works most of the time","msgtype":"m.text"},"ts":1254241800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"True. Though I should do better about it, as I am dating a woman named Kevan.","msgtype":"m.text"},"ts":1254241860000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"annevk2, would you find it more acceptable if I removed step 4 from this http://dev.w3.org/2006/webapi/selectors-api2/#parsing-a-scoped-selector","msgtype":"m.text"},"ts":1254241861000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Obviously Anne just needs to be more aggressive and macho in public to assert his masculinity","msgtype":"m.text"},"ts":1254241862000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1254241863000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so that authors can still do queryScopedSelector(\"div div\") and have it be equivalent to :reference div div, but then have to do queryScopedSelector(\":reference+p\") or equivalent to use any other combinator?","msgtype":"m.text"},"ts":1254241920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"though, that wouldn't be ideal since it would significantly, though not entirely, decrease the value of having the new methods","msgtype":"m.text"},"ts":1254241980000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"somewhat, though I don't really like the idea of having additional methods to start with","msgtype":"m.text"},"ts":1254241981000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"that's why I tried to find a solution without new methods before. But then people bitched about adding a flag and special selector parsing, which I still think are bogus arguments","msgtype":"m.text"},"ts":1254242040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"No, we bitched about having a special flag that you only needed in a single instance, and that would often still return the right results when you omitted it in test cases.","msgtype":"m.text"},"ts":1254242041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm still generally okay with the flag.  (Also, I think you pitched it as \"here's a special form of the descendant combinator\", when really it's \"here's a flag you need to use if your first selector opens with the descendant combinator\").","msgtype":"m.text"},"ts":1254242100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Which seems to have annoyed fantasai.)","msgtype":"m.text"},"ts":1254242101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, you said you would have preferred to always require the syntactic flag to be used for scoped selectors, but still preferred new methods over that. Other people, including annevk2, are bitching about messing with the selector parsing","msgtype":"m.text"},"ts":1254242102000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"starts to wonder how other people implemented appcache","msgtype":"m.emote"},"ts":1254242103000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"it's full of holes","msgtype":"m.text"},"ts":1254242104000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"I didn't intend to pitch it as a special descendant combinator. It was always a global flag that could be used for any scoped selector, but could be omitted when it was redundant","msgtype":"m.text"},"ts":1254242160000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Hmm, why is :reference needed at all if you're doing a special method?","msgtype":"m.text"},"ts":1254242161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lachy: Yeah, I get that, but it *really* looked like you were intending it as a special descendant combinator in your original email.","msgtype":"m.text"},"ts":1254242220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what do you mean?","msgtype":"m.text"},"ts":1254242221000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: In what circumstances is :reference ever needed if you have queryScopedSelector()?","msgtype":"m.text"},"ts":1254242222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"officially has no opinion on Selectors but wonders why querySelectorAll(selector, {\"scope\":true, \"namespaces\":{/*some namespace map*/}) wouldn't be a good API","msgtype":"m.emote"},"ts":1254242223000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"+}","msgtype":"m.text"},"ts":1254242224000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: if the map can have arbitrary JS getters, it would have all the same problems as XPath NSResolver","msgtype":"m.text"},"ts":1254242340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham, namespaces are evil?","msgtype":"m.text"},"ts":1254242341000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"in many cases, like document.querySelectorAll(\".foo:reference\", list) to filter a node list, or document.querySelectorAll(\"h1+p:reference>span\", list), which is equivalent to running elm.querySelectorAll(\"h1+p:reference>span\") on each element in the list.","msgtype":"m.text"},"ts":1254242342000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"jgraham, also, no other API is like that","msgtype":"m.text"},"ts":1254242343000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"jgraham: in terms of protecting engine state from JS-caused changes","msgtype":"m.text"},"ts":1254242344000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: You could define it to run all the getters once at the start","msgtype":"m.text"},"ts":1254242345000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or, as Hixie put it \"structured clone\"","msgtype":"m.text"},"ts":1254242346000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the latter basically does filtering and node list selection in one go","msgtype":"m.text"},"ts":1254242400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(or .toJSON I guess)","msgtype":"m.text"},"ts":1254242401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk2: I was assuming namespaces as a requirement not supporting them philosophically","msgtype":"m.text"},"ts":1254242402000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lachy: Okay, I see its use in the latter case, though question if it might not be easier to run simply by speccing an appropriate behavior on NodeLists.  The former, though, seems like a hack for filterSelector.","msgtype":"m.text"},"ts":1254242403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree that no other API is like that","msgtype":"m.text"},"ts":1254242404000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's a pity becuase it is the obvious way to define extensible APIs in javascript","msgtype":"m.text"},"ts":1254242460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, using {\"scope\":true, ...} wouldn't work because it provides absolutely no detectable way for scripts to know if it's supported or not.","msgtype":"m.text"},"ts":1254242461000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(insofar as javascrip has an obvious way to do that)","msgtype":"m.text"},"ts":1254242462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mumbles about hard-wiring svg:, html:, math: and xbl:","msgtype":"m.emote"},"ts":1254242463000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins, it saves introducing a new method just for filtering, which would be completely redundant","msgtype":"m.text"},"ts":1254242520000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I think that's a worthwhile method to add.","msgtype":"m.text"},"ts":1254242580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1254242581000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Hmm. querySelectorAll.hasFeature(\"scope\")?","msgtype":"m.text"},"ts":1254242582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jokes","msgtype":"m.emote"},"ts":1254242583000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1254242584000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Because it's better to be explicit about \"I need to filter this list of nodes according to this selector\" rather than having to remember the idiom for using querySelectorAll to do the same.","msgtype":"m.text"},"ts":1254242585000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"comes from a programming tradition that always emphasizes new functions over overloading via idiom.","msgtype":"m.emote"},"ts":1254242640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, there weren't really any significant use cases for filtering provided anyway. That basically came as a freebie when i addressed the other use cases for querySelector on node lists.","msgtype":"m.text"},"ts":1254242700000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hmm?  No significant uses?  Every use of $().filter() in jQuery is a use-case.","msgtype":"m.text"},"ts":1254242701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tends to agree that filtering a NodeList of selectors seems nicest by using a method on NodeList","msgtype":"m.emote"},"ts":1254242760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sorry if it sounds like I'm advocating \"just dump jQuery into js\".  ^_^","msgtype":"m.text"},"ts":1254242761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/of selectos/of Nodes/","msgtype":"m.text"},"ts":1254242762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins, they weren't provided","msgtype":"m.text"},"ts":1254242763000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"also NodeList.filterSelector() doesn't address the use cases where all you have is an Array","msgtype":"m.text"},"ts":1254242820000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I don't particularly think they'd've had to be, but okay.  Notice, though, that your use of :reference is requiring hacks around it.","msgtype":"m.text"},"ts":1254242821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lachy: Yeah, but there are other ways to address mapping a function over an Array.","msgtype":"m.text"},"ts":1254242880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"with the :reference technique, it doesn't matter what format your collection is in. Just pass it as the refNodes parameter to querySelectorAll() and it will work.","msgtype":"m.text"},"ts":1254242881000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Well, assuming that querySelectorAll recognizes your format.","msgtype":"m.text"},"ts":1254242940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess Array.prototype.filter.call(ArrayLike, function(e) {return e.matchesSelector(s)}) will always work","msgtype":"m.text"},"ts":1254242941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for filtering","msgtype":"m.text"},"ts":1254242942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thinks that this might be the wrong place to solve the \"JS has too many types of collections\" problem.","msgtype":"m.emote"},"ts":1254243000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I defined it to recognise NodeList, HTMLCollection, Array and objects with indexable properties (though I think I may need to clarify the latter somehow). Basically, any object that can be enumerated to obtain Element nodes from","msgtype":"m.text"},"ts":1254243001000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"But not for getting the tree-ordered-union of the matches to a selector using each element in ArrayLike as the contextNode","msgtype":"m.text"},"ts":1254243060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yeah, but converting Array->NodeList would be fine there.","msgtype":"m.text"},"ts":1254243061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham, yeah, the :reference technique also gives you the tree ordered result set as a bonus","msgtype":"m.text"},"ts":1254243062000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"TabAtkins, converting Array to NodeList is out of scope of Selectors API, and the use cases have been addressed much more elegantly already anyway","msgtype":"m.text"},"ts":1254243120000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"TabAtkins: Is it possible to convert Array->NodeList?","msgtype":"m.text"},"ts":1254243121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, where is \"there\"?","msgtype":"m.text"},"ts":1254243122000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, not yet. The functionality was requested in selectors api discussions","msgtype":"m.text"},"ts":1254243180000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Grah, I know.  This is one of those forest-for-the-trees things, though.  You're solving the problem of \"JS has too many collections\" yourself, but your solution isn't ideal, and everyone else still has to solve the same problem over again later.  It makes me sad.","msgtype":"m.text"},"ts":1254243181000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1254243182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tends to agree with TabAtkins ","msgtype":"m.emote"},"ts":1254243240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the why> was aimed at Lachy)","msgtype":"m.text"},"ts":1254243241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, do you mean why is converting Array to NodeList out of scope?","msgtype":"m.text"},"ts":1254243242000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"or something else?","msgtype":"m.text"},"ts":1254243300000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(and it's more like \"DOM has too many collections and JS has no way of treating them all equally)","msgtype":"m.text"},"ts":1254243301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lachy: time for food btw?","msgtype":"m.text"},"ts":1254243302000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, sure","msgtype":"m.text"},"ts":1254243303000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: my card is working now","msgtype":"m.text"},"ts":1254243304000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Lachy: No, why do people want it?","msgtype":"m.text"},"ts":1254243305000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1254243306000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"or it should be","msgtype":"m.text"},"ts":1254243307000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Lachy: you're still at the office?","msgtype":"m.text"},"ts":1254243308000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham: Apparently, so we can coerce things into a single reasonable collection type and just deal with that.","msgtype":"m.text"},"ts":1254243309000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, but NodeLists are the most unreasonable collection type...","msgtype":"m.text"},"ts":1254243360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Then do NodeList->Array, and define it over Arrays.  Same diff.","msgtype":"m.text"},"ts":1254243361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(or Array-like type anyway)","msgtype":"m.text"},"ts":1254243362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, they wanted it to address this case, so they could have NodeList.filterSelector() and have an easy way to make a NodeList out of any collection, since JS libraries tend to store things as arrays","msgtype":"m.text"},"ts":1254243363000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I think people should carefully consider the effect of ES5 array extras before deciding that it is necessary to do explicit conversions to NodeLists all the time","msgtype":"m.text"},"ts":1254243420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it would have signicantly improved the situation if NodeList was binded to Array in JS, which would have worked if only NodeLists were static from the start","msgtype":"m.text"},"ts":1254243421000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"personally, I think it's much more useful to define NodeList.toArray() natively, so authors don't have to deal with liveness issues and the inflexibility of NodeLists for pretty much anything","msgtype":"m.text"},"ts":1254243540000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"That seems reasonable. ","msgtype":"m.text"},"ts":1254243541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Can we do that?  That would be great.","msgtype":"m.text"},"ts":1254243542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Seems like it should be Web DOM Core rather than Selectors API that does it though","msgtype":"m.text"},"ts":1254243600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(not that we should block progress on that)","msgtype":"m.text"},"ts":1254243660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So lets get it going.  Today.  Right now.","msgtype":"m.text"},"ts":1254243661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Don't we have the equivalent already?","msgtype":"m.text"},"ts":1254243662000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"TabAtkins, yeah, that functinality has been floating around for going into Web DOM Core for a while. If I'm not mistaken, I think gsnedders is editing that spec now, who took over from zcorpan_","msgtype":"m.text"},"ts":1254243720000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: You might be mistaken, I don't think he has committed to it","msgtype":"m.text"},"ts":1254243780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Danm","msgtype":"m.text"},"ts":1254243781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or some transposition of that anyway","msgtype":"m.text"},"ts":1254243782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Array.prototype.slice.call(nodelist, 0) or some similar invocation","msgtype":"m.text"},"ts":1254243783000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Yead that would work","msgtype":"m.text"},"ts":1254243840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Now just make it non-sucky in syntax.","msgtype":"m.text"},"ts":1254243841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, it seems like an even more general solution would be to create an Array method that takes an Array-like and gives out an Array","msgtype":"m.text"},"ts":1254243842000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Yup.  Anything with a .length and is indexable should work.","msgtype":"m.text"},"ts":1254243900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is really what all these do","msgtype":"m.text"},"ts":1254243901000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Array.toArray(object) would be kind of odd","msgtype":"m.text"},"ts":1254243960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is new Array(indexable) already reserved for something else?","msgtype":"m.text"},"ts":1254243961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Array.fromArraylike(object)","msgtype":"m.text"},"ts":1254243962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"suspects that his text editor is adding BOMs to his UTF8 files now.","msgtype":"m.emote"},"ts":1254244020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: new Array(object) is already used","msgtype":"m.text"},"ts":1254244021000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hsivonen: It might work as long as indexable doesn't have a valueOf or toString that can be converted to a number iirc","msgtype":"m.text"},"ts":1254244022000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's identical to [object]","msgtype":"m.text"},"ts":1254244080000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Unless the object is a number, in which case it's [] with length=the number","msgtype":"m.text"},"ts":1254244081000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: :-(","msgtype":"m.text"},"ts":1254244082000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Oh, yeah it seems my memory was wrong","msgtype":"m.text"},"ts":1254244140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hrm.  What sort of craziness would justify having EF+BB+BF at the start of a file?","msgtype":"m.text"},"ts":1254244380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sounds quite like a BOM","msgtype":"m.text"},"ts":1254244440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah, it's some kind of BOM.  But it's not EF+FF, like I would expect.","msgtype":"m.text"},"ts":1254244500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sounds quite like a UTF-8 BOM","msgtype":"m.text"},"ts":1254244501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"should remember that UTF-8 is gloriously crazy in how it encodes things.","msgtype":"m.emote"},"ts":1254244502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kk, time to change the preferences of my text editor then.","msgtype":"m.text"},"ts":1254244503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, there's the offending setting.","msgtype":"m.text"},"ts":1254244560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Try something like http://rishida.net/scripts/uniview/conversion to convert U+FEFF into UTF-8 code units or vice versa","msgtype":"m.text"},"ts":1254244561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm good now, Philip`.","msgtype":"m.text"},"ts":1254244620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you expected it to be something like FE+FF, how would you expect UTF-8 to be distinguished from UTF-16BE?","msgtype":"m.text"},"ts":1254244680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, you said EF+FF instead","msgtype":"m.text"},"ts":1254244681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I have no idea how you'd expect that :-p","msgtype":"m.text"},"ts":1254244682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Man, I dunno.","msgtype":"m.text"},"ts":1254244683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I feel it's time for another complaint about the lack of awesome lastweek posts","msgtype":"m.text"},"ts":1254263640000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"You just want to be featured more","msgtype":"m.text"},"ts":1254263700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have lots of features, thankyouverymuch","msgtype":"m.text"},"ts":1254263701000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, who are you on the lists?","msgtype":"m.text"},"ts":1254264300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I rarely post nowadays","msgtype":"m.text"},"ts":1254264480000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Reading public-html brings back memories of my own back-and-forth with Roy about apache content types.","msgtype":"m.text"},"ts":1254266820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I think it's very much worth reclaiming \"URL,\" so I'm all for that part of the argument, but I could care less about \"resource v. representation\"","msgtype":"m.text"},"ts":1254267240000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Agreed exactly.","msgtype":"m.text"},"ts":1254267241000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(which is why I got into it over URLs, but have ignored the main resource discussion)","msgtype":"m.text"},"ts":1254267360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i am definitely not getting all my e-mails","msgtype":"m.text"},"ts":1254268440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i keep finding e-mails that get lost between gmail's forwarding it to me and my receiving it at dreamhost","msgtype":"m.text"},"ts":1254268441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ixie: minor typo in chg 4041....says publicate instead of publication","msgtype":"m.text"},"ts":1254268500000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Hixie: minor typo in chg 4041....says publicate instead of publication","msgtype":"m.text"},"ts":1254268560000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"already fixed","msgtype":"m.text"},"ts":1254268561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1254268562000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"are details/figure dt/dd stuff headed for w3c validator soonish?","msgtype":"m.text"},"ts":1254268680000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"dunno, you'd have to ask the w3c","msgtype":"m.text"},"ts":1254268681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"validator.nu will probably have them sooner, if not already","msgtype":"m.text"},"ts":1254268682000,"senderName":"Hixie","senderId":"Hixie@irc"}
]