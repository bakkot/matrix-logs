[
{"content":{"body":"Not sure then ðŸ˜Ÿ","msgtype":"m.text"},"ts":1597991323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm never quite sure in specs when I should use \"the\" vs \"a new\". Eg \"Let foo be the empty string\", \"Let bar be a new map\". My assumption is to use  \"the\" for immutable types that are ===, and \"a new\" otherwise.","msgtype":"m.text"},"ts":1598010663000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The empty string === the empty string. This is fine with strings, but seems wrong with maps since they can be mutated.","msgtype":"m.text"},"ts":1598010700000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm pretty sure I've been inconsistent around lists at least","msgtype":"m.text"},"ts":1598010838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: these days I might use the shorthand << >> (but with the Unicode characters) instead","msgtype":"m.text"},"ts":1598010862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and yeah, there's only one empty string","msgtype":"m.text"},"ts":1598010881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However, we mutate strings too, so...","msgtype":"m.text"},"ts":1598010908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah, I guess string mutations should be a new string each time","msgtype":"m.text"},"ts":1598010957000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Maybe, https://url.spec.whatwg.org/#concept-url-serializer","msgtype":"m.text"},"ts":1598011041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ideally, this would depend of a concept of equality/identity: if you create two strings/maps and populate them somehow, can they be equal?","msgtype":"m.text"},"ts":1598011131000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"And more importantly: https://github.com/whatwg/infra/issues/91","msgtype":"m.text"},"ts":1598011132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for strings, presumably so","msgtype":"m.text"},"ts":1598011135000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Equality is defined on a per-type basis","msgtype":"m.text"},"ts":1598011181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've definitely used \"if a is b\" on types that don't define equality, and I expect referential equality","msgtype":"m.text"},"ts":1598011287000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, that's fair (and should maybe be documented as a thing)","msgtype":"m.text"},"ts":1598011345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll write up an issue for infra","msgtype":"m.text"},"ts":1598011361000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And is also why sometimes it's useful to have \"equals\" for things like hosts or URLs as they are not \"is\" but are \"equals\" to each other","msgtype":"m.text"},"ts":1598011378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1598011395000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"There's also the fact that I don't think anyone is comfortable with strings being mutable, but as discussed before, something like a StringBuilder would be more cumbersome","msgtype":"m.text"},"ts":1598011416000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Seems easy to write: Set foo to foo concatenated with \"hello\"","msgtype":"m.text"},"ts":1598011473000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, we could probably rewrite some things along those lines, might be more straightforward than some of the alternatives considered in that issue","msgtype":"m.text"},"ts":1598011953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was thinking that this was closely tied to https://github.com/whatwg/infra/issues/319, since if we define strings as lists, that would probably mean they couldn't be immutable","msgtype":"m.text"},"ts":1598012079000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"and on the other hand, if they're not lists but we define conversions back and forth, and maybe add a few helper operations, it could make building modified strings easier","msgtype":"m.text"},"ts":1598012141000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Filed https://github.com/whatwg/infra/issues/326","msgtype":"m.text"},"ts":1598012389000,"senderName":"JakeA","senderId":"JakeA@irc"}
]