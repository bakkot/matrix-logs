[
{"content":{"body":"where does the Caches API storage the data? (Browsers's cache? Disk?)","msgtype":"m.text"},"ts":1493267031000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: why does it matter?","msgtype":"m.text"},"ts":1493267967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to understand the internals","msgtype":"m.text"},"ts":1493267983000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"like we have chrome\\user data\\default\\local storage\\","msgtype":"m.text"},"ts":1493268002000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: browsers can do whatever as long as it matches the requirements","msgtype":"m.text"},"ts":1493268028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are we using some kind of DB for the cache? sqllite or something or is it on the disk?","msgtype":"m.text"},"ts":1493268030000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"how is the performance taken care? (Even after restart of the app or the device, the caches will be maintained, so I feel it must be on the disk)","msgtype":"m.text"},"ts":1493268068000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"annevk: ^ :)","msgtype":"m.text"},"ts":1493268565000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: it would depend on the browser, but yes, at some point it probably needs to be written to disk, but there's no requirement that this happens directly","msgtype":"m.text"},"ts":1493268629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: interesting, the spec doesn't speak about the that either, I have cloned https://chromium.googlesource.com/chromium/src.git and eager to dig in.","msgtype":"m.text"},"ts":1493268753000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: there's no reason for the spec to talk about implementation strategies","msgtype":"m.text"},"ts":1493268868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"howdoi: JavaScript doesn't require a JIT either, even though in practice you can't compete without one","msgtype":"m.text"},"ts":1493268900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agree, makes sense.","msgtype":"m.text"},"ts":1493268924000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"one thing that bothers me the most is the try-catch block for await statements","msgtype":"m.text"},"ts":1493269005000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"why use JIT when you can AOT","msgtype":"m.text"},"ts":1493269101000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"You could write to cloud instead of disk.","msgtype":"m.text"},"ts":1493269331000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what does chrome do?","msgtype":"m.text"},"ts":1493270784000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Hey, we're planning to lump reporting of all sensor value changes together right before rAF. I assume that implies adding a step in the event loop processing model that references an abstract operation in the generic sensor spec.","msgtype":"m.text"},"ts":1493276982000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"If that's so, should I just get a PR ready where we can discuss further details (e.g. position in the algo steps)?","msgtype":"m.text"},"ts":1493277030000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: probably, though it's unclear to me that section has had sufficient testing in general","msgtype":"m.text"},"ts":1493277091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not sure what you mean.","msgtype":"m.text"},"ts":1493277110000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: also, Firefox is about to remove some earlier sensor APIs due to same-origin policy breaking stuff and nobody seems interested in putting in the effort to give them a security story","msgtype":"m.text"},"ts":1493277134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: that it's not clear to me that section of the algorithm is stable","msgtype":"m.text"},"ts":1493277151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, we're working closely with the Enamel team to get the security story straight. Would be happy to get more involvement from mozilla folks.","msgtype":"m.text"},"ts":1493277200000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I'll send a PR. We can discuss further there.","msgtype":"m.text"},"ts":1493277331000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: so what's their story for the ambient light?","msgtype":"m.text"},"ts":1493277348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/the//","msgtype":"m.text"},"ts":1493277353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think ambient light should be put on the back burner until we have 1) good use cases for it, 2) a sound permission strategy.","msgtype":"m.text"},"ts":1493277434000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: in the meantime, we could expose a mediaquery-inspired LightLevelSensor instead, with just a enum for values.","msgtype":"m.text"},"ts":1493277468000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/a/an/","msgtype":"m.text"},"ts":1493277483000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: that said, we'll need to figure out a good permission story for all of the motion sensors (which have similar if not worse security concerns than ambient light, and use cases which prevent a lot of the mitigation strategies we could use for ambient-light).","msgtype":"m.text"},"ts":1493277561000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"And by that you mean UX?","msgtype":"m.text"},"ts":1493277643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well; UX, adequate permission descriptors, permission names that work (we have sensors that are combination of others sensors and the Permission spec isn't really designed to handle that), a precise understanding of the threats we're trying to mitigate, precise understanding of the requirements for each sensor and how that affects mitigation","msgtype":"m.text"},"ts":1493277957000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"strategies (e.g. motion sensors values are often integrated, so fuzzing the values or the timestamps isn't an option, while that's something that would work for ambient-light).","msgtype":"m.text"},"ts":1493277958000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: for example, should permission descriptor allow for different permission strategies (e.g. opt-out vs. prompt) depending on the frequency at which the sensors are polled?","msgtype":"m.text"},"ts":1493278279000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think all of that depends on whether UX can even find a way to phrase that question","msgtype":"m.text"},"ts":1493278326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's hard to get UX feedback, but a lot of features could really do with UX-first","msgtype":"m.text"},"ts":1493278368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Design the user interaction model first, then figure out what engineering is required to make that happen","msgtype":"m.text"},"ts":1493278401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Apparently meta viewport uses the same parser as window.open() features in at least webkit. https://bugs.webkit.org/show_bug.cgi?id=170548#c36","msgtype":"m.text"},"ts":1493286388000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: irregular friendly ping re fingerprint :-)","msgtype":"m.text"},"ts":1493289861000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: I added basic tests for all views","msgtype":"m.text"},"ts":1493296311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: let me know if you had something more in find","msgtype":"m.text"},"ts":1493296322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: maybe in Blink it's not less code, but I'd imagine that if you had some code sharing for boolean features you'd end up with less code","msgtype":"m.text"},"ts":1493296359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i guess that is possible","msgtype":"m.text"},"ts":1493296413000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: is there a reason why the EUC-JP decoder can prepend ASCII *and* 0xA0 *and* 0xFF in the situation where the other two-byte decoders prepend ASCII only?","msgtype":"m.text"},"ts":1493306953000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that is, why are 0xA0 and 0xFF as a bogus trail byte different in EUC-JP compared to the others?","msgtype":"m.text"},"ts":1493306979000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"commented on euc-jp tests github","msgtype":"m.emote"},"ts":1493307415000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: not sure","msgtype":"m.text"},"ts":1493310787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Domenic, bz: Btw, sorry for the frustration coming thru in the Array-like thread, but jiminy christmas i'm getting frustrated over this.","msgtype":"m.text"},"ts":1493316928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm I wonder why we left the named getter on window instead of moving it to WindowProxy","msgtype":"m.text"},"ts":1493327193000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk ^","msgtype":"m.text"},"ts":1493327198000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: share your dev experience concerns about arrays-likes on the platform. Happy to work on this asap.","msgtype":"m.text"},"ts":1493329879000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Already doing it in #345, the thread I was indirectly referencing. ^_^","msgtype":"m.text"},"ts":1493329903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Yes, I've been following along.","msgtype":"m.text"},"ts":1493330315000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: what I meant is I'm happy to do the editing once the dust settles.","msgtype":"m.text"},"ts":1493330655000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah, kk","msgtype":"m.text"},"ts":1493330664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]