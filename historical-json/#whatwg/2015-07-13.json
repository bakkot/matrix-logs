[
{"content":{"body":"annevk: I sometimes use the assign feature as a sort of needsinfo, but it's meh","msgtype":"m.text"},"ts":1436751212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"botie, inform beverloo A comment from you at https://github.com/whatwg/notifications/issues/46 would be welcome.","msgtype":"m.text"},"ts":1436754999000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1436754999000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Hixie: can we raise the cc limit for the WHATWG list?","msgtype":"m.text"},"ts":1436768346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I keep hitting the limit","msgtype":"m.text"},"ts":1436768354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: did you see https://lists.w3.org/Archives/Public/public-webappsec/2015Jul/0099.html (Testing W3C's HTTPS setup)?","msgtype":"m.text"},"ts":1436768559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: did","msgtype":"m.text"},"ts":1436768573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1436768576000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: but didn't really want to modify my setup","msgtype":"m.text"},"ts":1436768583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1436768589000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well I've been trying it for a while and found a few problems (mostly just redirect loops) and systeam has fixed them all quickly","msgtype":"m.text"},"ts":1436768672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, progress","msgtype":"m.text"},"ts":1436768676000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I've not been checking very carefully yet for mixed-content problems (to see if the Content-Security-Policy: upgrade-insecure-requests header is working as expected)","msgtype":"m.text"},"ts":1436768764000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That only works in Chrome I think","msgtype":"m.text"},"ts":1436769285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj++ for editing help with Fullscreen","msgtype":"m.text"},"ts":1436778108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"fullscreen element\" as concept refactoring is simplifying a ton of stuff","msgtype":"m.text"},"ts":1436778127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1436778136000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"let me know when it's settled down and I'll take another pass","msgtype":"m.text"},"ts":1436778162000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: do you know why collect ancestors looks top layers with only a single element?","msgtype":"m.text"},"ts":1436778515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: should that also change to just looking for ancestor documents with a non-null fullscreen element?","msgtype":"m.text"},"ts":1436778538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm not sure why it's like that, what did it say before the top layer refactoring?","msgtype":"m.text"},"ts":1436779054000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: before it says fullscreen element stack with one element","msgtype":"m.text"},"ts":1436779068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, so I suppose the equivalent would be documents where the top layer stack has only on element with the fullscreen flag?","msgtype":"m.text"},"ts":1436779105000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: the top layer thing made it worse, it should just say single element that has its fullscreen flag set I suppose","msgtype":"m.text"},"ts":1436779106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: yeah, changing it to that","msgtype":"m.text"},"ts":1436779125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if I'm not mistaken, this is all about exiting multiple levels of iframes when appropriate","msgtype":"m.text"},"ts":1436779127000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: yeah, was just thinking that too","msgtype":"m.text"},"ts":1436779139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1436779141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1436779156000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: the note \"HTML defines the exact conditions under which the fullscreen enabled flag ...\" should probably be moved up one step","msgtype":"m.text"},"ts":1436780054000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1436780184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"!summon TabAtkins","msgtype":"m.text"},"ts":1436782380000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I've gone through the whole diff of recent changes and everything looks good now except for the open issues","msgtype":"m.text"},"ts":1436784753000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"probably would find more bugs if implementing though :)","msgtype":"m.text"},"ts":1436784780000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"So go forth and implement :)","msgtype":"m.text"},"ts":1436784892000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: CSP upgrade-insecure-requests just landed in gecko trunk, right?","msgtype":"m.text"},"ts":1436787742000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"beverloo, at 2015-07-13 02:36 UTC, MikeSmith said: A comment from you at https://github.com/whatwg/notifications/issues/46 would be welcome.","msgtype":"m.text"},"ts":1436790412000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"beverloo: I see you already commented there in the time since I left that message for you originally","msgtype":"m.text"},"ts":1436790453000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, no problem :) Thanks for pinging!","msgtype":"m.text"},"ts":1436790597000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: thanks for you comments and info","msgtype":"m.text"},"ts":1436790782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: pong","msgtype":"m.text"},"ts":1436793115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, a question about selectors, if you have a moment","msgtype":"m.text"},"ts":1436793165000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's why I ponged","msgtype":"m.text"},"ts":1436793191000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Should :first-child etc. match an element a. without a parent node; b. whose parent is a Document; c. whose parent is a DocumentFragment; d. whose parent is an Element","msgtype":"m.text"},"ts":1436793261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"d. is obviously \"yes\", but I have no idea about the others","msgtype":"m.text"},"ts":1436793282000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Especially since selectors-3 and -4 seem to disagree","msgtype":"m.text"},"ts":1436793296000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"S4 has the right answer. Let me review real quick.","msgtype":"m.text"},"ts":1436793344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, :first-child/etc only care about relative position among siblings. Parent (or lack of) doesn't matter.","msgtype":"m.text"},"ts":1436793467000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How would you feel about adding a note near the definition or to the Changes section to point out the change is intentional?","msgtype":"m.text"},"ts":1436793556000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's fine with me. Send email, as I won't be into the office for several hours yet?","msgtype":"m.text"},"ts":1436793583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1436793650000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, I was going to cc the list","msgtype":"m.text"},"ts":1436794679000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Eh","msgtype":"m.text"},"ts":1436794680000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: seems like it, got an email earlier anyway","msgtype":"m.text"},"ts":1436797396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: regarding no-cors CSS, https://bugzilla.mozilla.org/show_bug.cgi?id=1180145#c3 is our current thinking","msgtype":"m.text"},"ts":1436799063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: well, I guess it's mine, but I think the security people agree","msgtype":"m.text"},"ts":1436799085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1436799739000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"Can anyone give me some info on how es6 modules will be built and assembled on es6 browsers without using browserify or such ?","msgtype":"m.text"},"ts":1436799796000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"high level","msgtype":"m.text"},"ts":1436799847000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"webzen: there's an idea for <script type=module src=module.js>","msgtype":"m.text"},"ts":1436799897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webzen: https://whatwg.github.io/loader/ and its repo have some of the details for an even bigger plan","msgtype":"m.text"},"ts":1436799922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i tried to read that already but it was too low level.  So with main.js containing   import module1 from \"./imports/module1\";","msgtype":"m.text"},"ts":1436799962000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"how would the client get to the files on the server","msgtype":"m.text"},"ts":1436799972000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"to traverse the tree","msgtype":"m.text"},"ts":1436799984000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"of dependencies","msgtype":"m.text"},"ts":1436799988000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"client being?","msgtype":"m.text"},"ts":1436800044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well by using a regular http request that is normally used to fetch scripts","msgtype":"m.text"},"ts":1436800055000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"client being a es6 browser in the future.  and i start with <script src=\"build/js/main.js\"></script>","msgtype":"m.text"},"ts":1436800062000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"but main.js only has  import module1 from \"./imports/module1\";","msgtype":"m.text"},"ts":1436800077000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"right. its dependencies will be fetched, analyzed, their dependencies fetched, analyzed, ....","msgtype":"m.text"},"ts":1436800081000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and once the whole tree is statically analyzed, the code is finally run","msgtype":"m.text"},"ts":1436800094000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"it's not exactly defined how the translation happens and whether from \"...\" is a URL or some identifier","msgtype":"m.text"},"ts":1436800099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so the es6 browsers will make more requests ?","msgtype":"m.text"},"ts":1436800101000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"currently i have all my js in one file to reduce requests","msgtype":"m.text"},"ts":1436800123000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"if you serve your code in X files, X requests will be made","msgtype":"m.text"},"ts":1436800123000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"won't that be expensive ?","msgtype":"m.text"},"ts":1436800134000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"yeah, but not with HTTP/2","msgtype":"m.text"},"ts":1436800135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also you can pack your multiple ES6 modules into one","msgtype":"m.text"},"ts":1436800145000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: not anymore","msgtype":"m.text"},"ts":1436800152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean the System.register API","msgtype":"m.text"},"ts":1436800163000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: there's no syntax for inline modules","msgtype":"m.text"},"ts":1436800164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"babel --modules=system or somth","msgtype":"m.text"},"ts":1436800170000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: i'm saying without babel","msgtype":"m.text"},"ts":1436800184000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1436800189000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"in es6 browsers","msgtype":"m.text"},"ts":1436800189000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"http2 then","msgtype":"m.text"},"ts":1436800193000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"or multiple requests","msgtype":"m.text"},"ts":1436800196000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"is HTTP/2 in current browsers or is that future thing","msgtype":"m.text"},"ts":1436800246000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"http://caniuse.com/#feat=http2","msgtype":"m.text"},"ts":1436800259000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so it's already in the current browsers","msgtype":"m.text"},"ts":1436800289000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"annevk: so are there any es6 browsers with this loader yet ?","msgtype":"m.text"},"ts":1436800393000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"thanks ondras","msgtype":"m.text"},"ts":1436800406000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1436800414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've been thinking about poking at it, but haven't made the time yet","msgtype":"m.text"},"ts":1436800448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so currently i'm using babel but in the future i'll just be able to use the es6 browsers and they will handle assembling the modules","msgtype":"m.text"},"ts":1436800463000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1436800471000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"or is my thinking wrong","msgtype":"m.text"},"ts":1436800496000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"sounds about right, you might need some tweaks here and there I guess, depends a bit on the final details","msgtype":"m.text"},"ts":1436800522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i just don't want to write code that will fail in the future","msgtype":"m.text"},"ts":1436800541000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"since i'm going to be writing es6 code","msgtype":"m.text"},"ts":1436800561000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"so to be clear, in the future es6 browsers they will be able to run the dependency from the client side by making multiple calls to build the file before running it yes ?","msgtype":"m.text"},"ts":1436800806000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"TabAtkins: can you roll https://github.com/plinss/widlparser/commit/43f0d6be64741642dd8ea9f6847dfec0ad3afb14 into bikeshed?","msgtype":"m.text"},"ts":1436801199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you please affirm or correct my statement please ?","msgtype":"m.text"},"ts":1436801279000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"webzen: it's not entirely clear to me what that statement means","msgtype":"m.text"},"ts":1436801306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meaning i won't need babel or such","msgtype":"m.text"},"ts":1436801318000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"webzen: well yes, that's the intent","msgtype":"m.text"},"ts":1436801330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the browsers will handle the module assembling","msgtype":"m.text"},"ts":1436801332000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1436801341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok thanks so much","msgtype":"m.text"},"ts":1436801350000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"that's very helpful","msgtype":"m.text"},"ts":1436801354000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"and in some future future the module can be some WebAssembly code","msgtype":"m.text"},"ts":1436801372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'll be playing guitar then :-)","msgtype":"m.text"},"ts":1436801383000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"WebAssembly is a thing ?","msgtype":"m.text"},"ts":1436801401000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"it's a thing: https://github.com/WebAssembly","msgtype":"m.text"},"ts":1436801418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh dear","msgtype":"m.text"},"ts":1436801423000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"annevk: Will do so shortly.","msgtype":"m.text"},"ts":1436801470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so i'll be able to start over with WebAssembly and forget all I know :-)","msgtype":"m.text"},"ts":1436801492000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"thanks again !","msgtype":"m.text"},"ts":1436801573000,"senderName":"webzen","senderId":"webzen@irc"},
{"content":{"body":"Well, you'll be able to start over with whatever languages compile into WebAssembly. You won't write it directly, any more than you write asm.JS directly.","msgtype":"m.text"},"ts":1436801666000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so, is wasm supposed to have enough type info and static knowledge of the program available to eg. bypass expensive optimization processes at runtime?","msgtype":"m.text"},"ts":1436801766000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it would be pretty cool if it just plugged into ionmonkey/tf right away","msgtype":"m.text"},"ts":1436801777000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"since i guess you'd hope clang would do the LICM and constant folding and operator reduction and etc","msgtype":"m.text"},"ts":1436801830000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: is your analysis at https://github.com/whatwg/fetch/issues/66#issuecomment-118638144 how it works now, or how a solution could work","msgtype":"m.text"},"ts":1436801881000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: is your analysis at https://github.com/whatwg/fetch/issues/66#issuecomment-118638144 how it works now, or how a solution could work?","msgtype":"m.text"},"ts":1436801897000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"caitp: we're planning on making use of IDL to bypass a bunch of IDL stuff","msgtype":"m.text"},"ts":1436801903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: 'we should just expose it as a \"redirect\" (new type of response, identical to opaque except for its type and exposure of url as that is identical to the request url)' and what follows is a proposal","msgtype":"m.text"},"ts":1436801943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(sorry for the repeated message, got caught in the netsplit)","msgtype":"m.text"},"ts":1436802132000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: \"If you then get back an opaque response you know that a redirect happened.\" - that's not what happens now though","msgtype":"m.text"},"ts":1436802153000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"You get a non-opaque response back for the final non-redirect resource","msgtype":"m.text"},"ts":1436802170000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Since fetch(event.request) changes the mode of the request","msgtype":"m.text"},"ts":1436802198000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no it doesn't?","msgtype":"m.text"},"ts":1436802309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, I'm getting confused then https://fetch.spec.whatwg.org/#request-class \"If request's redirect mode is \"manual\", set it to \"follow\".\"","msgtype":"m.text"},"ts":1436802407000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, changes the redirect mode?","msgtype":"m.text"},"ts":1436802427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: right, we'd stop doing that","msgtype":"m.text"},"ts":1436802433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, yes, sorry wasn't specific enough. Yeah, that's why I was asking if that line was you clarifying the current behaviour or a proposed behaviour. It's the latter, got it","msgtype":"m.text"},"ts":1436802479000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it's the proposed behavior for redirect mode \"manual\", still not super helpful since you don't actually know where the redirect will go, but at least a little bit","msgtype":"m.text"},"ts":1436802516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: wasm starts with asm.js, basically, just in a binary format.  It'll grow optimizations and features as it goes.","msgtype":"m.text"},"ts":1436803810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that bug is one of the reasons for migrating to GitHub, would be hard to WONTFIX","msgtype":"m.text"},"ts":1436804755000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"Why is it hard?","msgtype":"m.text"},"ts":1436804777000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it'll just get reopened","msgtype":"m.text"},"ts":1436804825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: a11y concern does seem like something that needs addressing one way or another","msgtype":"m.text"},"ts":1436804860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You can just... close it again.  What's special about Bugzilla that makes it reopenable?","msgtype":"m.text"},"ts":1436804864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, have an open bug on Bikeshed for that.  Just need to modify the CSSWG and WHATWG stylesheets to handle it.","msgtype":"m.text"},"ts":1436804886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(So they dont' double-generate \"Warning\", etc.","msgtype":"m.text"},"ts":1436804897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1436804898000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: feel free to WONTFIX and see what happens","msgtype":"m.text"},"ts":1436804960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not responsibel for the spec, so shrug.","msgtype":"m.text"},"ts":1436804975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I wonder who they think will fix that bug anyway, with berjon leaving the W3C","msgtype":"m.text"},"ts":1436804992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And also, berjon made a vague promise of only subsetting, not forking","msgtype":"m.text"},"ts":1436805014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Worth the paper it wasn't printed on, obvs.","msgtype":"m.text"},"ts":1436805156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh did darobin leave?","msgtype":"m.text"},"ts":1436805185000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Did, or will soon, I forget. Working... I forget where.","msgtype":"m.text"},"ts":1436805198000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Somewhere cool.","msgtype":"m.text"},"ts":1436805201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"NYC","msgtype":"m.text"},"ts":1436805207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, def NY, just forget what company.","msgtype":"m.text"},"ts":1436805218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://twitter.com/robinberjon/status/616565633539571712","msgtype":"m.text"},"ts":1436805320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Presumably the Watson and Crick photo is an example of using someone else's data to make your discovery ;)","msgtype":"m.text"},"ts":1436805489000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Context?","msgtype":"m.text"},"ts":1436805554000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Context is https://github.com/validator/validator/issues/61","msgtype":"m.text"},"ts":1436805554000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"That's... incorrect, botie.","msgtype":"m.text"},"ts":1436805572000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'm not following you...","msgtype":"m.text"},"ts":1436805572000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"TabAtkins: http://www.standardanalytics.io/","msgtype":"m.text"},"ts":1436805594000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1436805610000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":".io, of course","msgtype":"m.text"},"ts":1436805662000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"JSON-LD and RDFa\"","msgtype":"m.text"},"ts":1436805979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi, guys! How do I import svg file with filters into html for use in css ?","msgtype":"m.text"},"ts":1436810315000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"izhak: Just point to them with url() as usual.","msgtype":"m.text"},"ts":1436810730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're just images.","msgtype":"m.text"},"ts":1436810740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'm trying this:      filter: url(./filters.svg#mtshadow);","msgtype":"m.text"},"ts":1436810793000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"Oh, you're trying to get an SVG *filter* into CSS.","msgtype":"m.text"},"ts":1436810820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Still, that's supposed to work, per spec.","msgtype":"m.text"},"ts":1436810859000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://dev.w3.org/FXTF/filters-1/#typedef-url","msgtype":"m.text"},"ts":1436810869000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes. And currently I'm working with a local files (file:///). In firefox 39 when I click to that url in firebugs css console, it opens the svg file with filters. But filters refuse to apply...","msgtype":"m.text"},"ts":1436810911000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"Hm, per caniuse.com, that should work.","msgtype":"m.text"},"ts":1436810975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's possible you need to flip the layout.css.filters.enabled flag?","msgtype":"m.text"},"ts":1436811013000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Actually svg filters work when I open for example this: http://bl.ocks.org/cpbotha/5200394","msgtype":"m.text"},"ts":1436811096000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"Yes, that's creating an inline SVG element.","msgtype":"m.text"},"ts":1436811220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: if disk space is running low and an origin has its storage purged... is there anything in SW spec or chrome impl to run the SW install event again?","msgtype":"m.text"},"ts":1436811252000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: What I do is copy the external html for svg tag in this example (using firebug), paste it to filters.svg and then refer to it as I showed.","msgtype":"m.text"},"ts":1436811283000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"I apply it to rect element, and it just disappears.","msgtype":"m.text"},"ts":1436811310000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"If you view the filters.svg file, do you see the rect with shadows?","msgtype":"m.text"},"ts":1436811353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oops.. firefox opens it like a xml file.. looks like I forgot to add xmlns and version","msgtype":"m.text"},"ts":1436811430000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"You don't need version, just xmlns","msgtype":"m.text"},"ts":1436811472000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(We're hoping to remove that requirement.)","msgtype":"m.text"},"ts":1436811492000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"xmlns lol","msgtype":"m.text"},"ts":1436811500000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: indeed","msgtype":"m.text"},"ts":1436811506000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: great it works now, thank you:)","msgtype":"m.text"},"ts":1436811528000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1436811557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wanderview: I don't think so, wouldn't that just fill up space again?","msgtype":"m.text"},"ts":1436811813000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the problem is if the SW thinks its still installed... but its Cache was deleted out from under it... it may not try to re-populate without another install event","msgtype":"m.text"},"ts":1436811853000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"this may be a gecko problem, though","msgtype":"m.text"},"ts":1436811857000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I'm confused about your questions about \"the font API\" and \"such a CSS resource\".  Are you under the impression that Font Loading does something with CSS files?","msgtype":"m.text"},"ts":1436812301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: is that not where it gets the FontFace stuff from?","msgtype":"m.text"},"ts":1436812451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Stylesheets create FontFace objects, yeah.","msgtype":"m.text"},"ts":1436812464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, and no-cors stylesheets shouldn't have their FontFace objects exposed, most likely","msgtype":"m.text"},"ts":1436812483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah... Hm.","msgtype":"m.text"},"ts":1436812491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because that violates SOP","msgtype":"m.text"},"ts":1436812496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I suppose so.  I'll open a thread on www-style notifying people, and make the change.","msgtype":"m.text"},"ts":1436812651000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What's the right term to link for \"CORS-enabled\"?","msgtype":"m.text"},"ts":1436812928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: Do you know what the expected behaviour is with SW caching with regards to quota? See my comment at https://phabricator.wikimedia.org/T66721#1350485 for context.","msgtype":"m.text"},"ts":1436812997000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"wanderview: yeah, I don't think we should be dropping part of an origin's storage","msgtype":"m.text"},"ts":1436813074000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: if we drop the cache or IDB, we should drop the SW too","msgtype":"m.text"},"ts":1436813093000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, we should treat the registration as part of the origin storage... right now we have it in a separate non-origin-specific db","msgtype":"m.text"},"ts":1436813110000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the scripts live in origin storage though","msgtype":"m.text"},"ts":1436813125000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Krinkle: the cache uses the same origin storage as idb","msgtype":"m.text"},"ts":1436813144000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ugh, this makes things complicated.  I need to include them in the source, but flag them so they're invisible to any query methods that aren't called by a blessed caller.","msgtype":"m.text"},"ts":1436813176000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Guys, is it possible to apply perspective transformation to a svg group?","msgtype":"m.text"},"ts":1436814259000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"Yes, but iirc you need to use the transform property, not the transform attribute.  (3d transforms are part of CSS, and not accepted in the SVG attribute)","msgtype":"m.text"},"ts":1436814313000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Cool, thanks!","msgtype":"m.text"},"ts":1436814469000,"senderName":"izhak","senderId":"izhak@irc"},
{"content":{"body":"heycam|away: Just hitting you with an explicit ping, I just posted https://lists.w3.org/Archives/Public/www-style/2015Jul/0150.html about FontFace objects from a cors-tainted stylesheet.","msgtype":"m.text"},"ts":1436814749000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: CORS-tainted is not a thing","msgtype":"m.text"},"ts":1436819844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: simplest would be to simply filter out those FontFace objects I think","msgtype":"m.text"},"ts":1436819844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not really. It means that, for example, calling document.fonts.load(\"some-font-in-the-co-sheet 10px\") will confusingly return a promise for an empty array of fonts.","msgtype":"m.text"},"ts":1436819924000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Despite actually kicking off loads.","msgtype":"m.text"},"ts":1436819933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That would make it observable","msgtype":"m.text"},"ts":1436819958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I still need the ability for the impl to use these algos and receive the \"real\" set.","msgtype":"m.text"},"ts":1436819961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Loading behavior is already trivially observable via timing channels.","msgtype":"m.text"},"ts":1436819971000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you know the font name, you can test for loaded status.","msgtype":"m.text"},"ts":1436819982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How?","msgtype":"m.text"},"ts":1436819990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...the same way you measure whether a font is loaded today?","msgtype":"m.text"},"ts":1436820009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Create an inline element styled with the font you want to measure, and a font you already know has loaded as a fallback.  Poll its width; when it changes, the first font has loaded.","msgtype":"m.text"},"ts":1436820057000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah yeah","msgtype":"m.text"},"ts":1436820085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Ideally your fallback is a constructed font with weird metrics, very tiny or very big, so it's impossible to confuse your algo if the first font is already loaded.)","msgtype":"m.text"},"ts":1436820100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So exposing load status of fonts you know by name isn't a further leak.","msgtype":"m.text"},"ts":1436820118000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Exposing the number of fonts in a tainted stylesheet, and the load status of those mystery fonts, is somewhat more information than is available today, but I have a slightly more complex proposal that addresses that, too.  At worst, it only exposes whether the stylesheet contains *any* fonts, but I might be able to spec it such that that's plugged too.","msgtype":"m.text"},"ts":1436820183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, that proposal seemed okayish","msgtype":"m.text"},"ts":1436820230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hopefully we can get bz to take a look","msgtype":"m.text"},"ts":1436820244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which? #2 in the email, or #3 in the next?","msgtype":"m.text"},"ts":1436820246000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"#3","msgtype":"m.text"},"ts":1436820257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, thanks for tackling this switfly","msgtype":"m.text"},"ts":1436820311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1436820318000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is there some reason why exposing loading/loaded fonts is an issue?","msgtype":"m.text"},"ts":1436820344000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"And thanks for prompting me to do the refactor necessary to fix the dom Bikeshed error. ^_^","msgtype":"m.text"},"ts":1436820344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And reach out to bz somehow I guess, not sure who else would be good to review this","msgtype":"m.text"},"ts":1436820352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"boogyman: It's more information than is exposed today.","msgtype":"m.text"},"ts":1436820354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Already pinged heycam, about to ping our internal people.","msgtype":"m.text"},"ts":1436820365000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Tho that's just font implementors, not security people.","msgtype":"m.text"},"ts":1436820375000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but is that extra info a bad thing? what can someone really do with it?","msgtype":"m.text"},"ts":1436820382000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"who knows? That's why we limit cross-origin data in the first place.","msgtype":"m.text"},"ts":1436820465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's often difficult to construct specific attack scenarios until they happen, so a blanket prohibition is often warranted.","msgtype":"m.text"},"ts":1436820488000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, I missed the CORS mention","msgtype":"m.text"},"ts":1436820509000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"Indeed, it's the combinatory explosion thing why we need to keep SOP as tight as it is now","msgtype":"m.text"},"ts":1436820665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Even security groups such as WebAppSec seem eager to break it :-(","msgtype":"m.text"},"ts":1436820681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1436821101000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: rebel","msgtype":"m.text"},"ts":1436821138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1436821202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So… why can't I find where the spec says what to do when you try to navigate and end up with a network error of some sort?","msgtype":"m.text"},"ts":1436823563000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Can dispatching an event (from spec) throw an error?","msgtype":"m.text"},"ts":1436828659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably not...","msgtype":"m.text"},"ts":1436828665000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it can if the event is already being dispatched","msgtype":"m.text"},"ts":1436829305000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(or if the event isn't initialized )","msgtype":"m.text"},"ts":1436829324000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, perhaps \"from spec\" means, implementation dispatching events","msgtype":"m.text"},"ts":1436829382000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: OK, but author listeners throwing doesn't need to be handled by specs that do \"dispatch event\"","msgtype":"m.text"},"ts":1436829396000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"do multiple event listeners ever happen in the same turn?","msgtype":"m.text"},"ts":1436829708000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1436829731000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just trying to think of a situation where it would matter if the authors listener threw","msgtype":"m.text"},"ts":1436829789000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Of course they do...","msgtype":"m.text"},"ts":1436829848000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dispatchEvent() will fire them all, for one","msgtype":"m.text"},"ts":1436829858000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And queuing a task to fire an event from some other spec will call all of them, certainly.","msgtype":"m.text"},"ts":1436829880000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Right, OK, there's a try { call listener } catch (e) { reportException(e); } in the spec. https://dom.spec.whatwg.org/#concept-event-listener-invoke","msgtype":"m.text"},"ts":1436829914000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i dunno man, the web is too complicated. no idea how you can ever tell if some change might break something unless it's really obvious","msgtype":"m.text"},"ts":1436830155000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"even for less complicated systems, it's really hard to tell if anyone ever depends on some subtle thing that might change between versions","msgtype":"m.text"},"ts":1436830248000,"senderName":"caitp","senderId":"caitp@irc"}
]