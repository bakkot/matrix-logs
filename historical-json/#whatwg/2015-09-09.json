[
{"content":{"body":"does anybody happen to now if IE/Edge supports new XPathEvaluator() ?","msgtype":"m.text"},"ts":1441763727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm a search seems to indicate it's not in IE 11 at least, so I guess not in Edge either","msgtype":"m.text"},"ts":1441763832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Edge but not IE: https://dev.modern.ie/platform/status/domlevel3xpath/?filter=f3f0000bf&search=xpath","msgtype":"m.text"},"ts":1441766037000,"senderName":"deltab","senderId":"deltab@irc"},
{"content":{"body":"deltab: oh, thanks","msgtype":"m.text"},"ts":1441766934000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1441766939000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1441766969000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: https://github.com/YuzuJS/setImmediate/commit/ab4d23262270222aace074ca526b311f094ac27b is excellent","msgtype":"m.text"},"ts":1441767009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domo!","msgtype":"m.text"},"ts":1441767093000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: btw about the HTML build, I don't know if you saw when mkwst and I were chatting here yesterday or so, but there's an issue with error reporting related to using the remote wattsi service vs running wattsi locally.","msgtype":"m.text"},"ts":1441769025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Specifically the issue is that if you use the remote service you won't see any errors that wattsi reports.","msgtype":"m.text"},"ts":1441769075000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Right?","msgtype":"m.text"},"ts":1441769078000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So yesterday when mkwst was making his changes locally and building, he wasn't seeing some wattsi errors about some markup issues in his changes.","msgtype":"m.text"},"ts":1441769189000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So anyway, I would guess we can fix it easily just be writing the stderr to a build.log file on the server side, and packaging that up with wattsi output, and then on the local side when we upack that wattsi build, we just have the build script cat that build.log file.","msgtype":"m.text"},"ts":1441769296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie, inform Ms2ger http://logs.glob.uno/?c=mozilla%23mdn#c32485","msgtype":"m.text"},"ts":1441771513000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1441771513000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"mkwst: I need to work through HTML before being 100% sure, working on that, but it's a lot of work","msgtype":"m.text"},"ts":1441778952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1441778987000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"gsnedders: FYI https://github.com/lxml/lxml/pull/174#issuecomment-138795020","msgtype":"m.text"},"ts":1441780182000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: apologies for the giant mess that's been made of the ruby stuff","msgtype":"m.text"},"ts":1441780214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I should have done more to stop that","msgtype":"m.text"},"ts":1441780220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but fwiw I am in the process of completely exiting from any involvement in that forking business going forward","msgtype":"m.text"},"ts":1441780285000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I still hope to convince others to just stop doing it, and I'm optimistic that I have a chance of doing that, and good arguments against it (like this ruby case)","msgtype":"m.text"},"ts":1441780347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if I can't convince them to stop it, at least I can choose not to even indirectly faciliate it any longer","msgtype":"m.text"},"ts":1441780388000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"enough is enogh","msgtype":"m.text"},"ts":1441780391000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: sorry, was in a bar without reception, then panic-packing for a trip.","msgtype":"m.text"},"ts":1441780816000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ms2ger, at 2015-09-09 04:05 UTC, MikeSmith said: http://logs.glob.uno/?c=mozilla%23mdn#c32485","msgtype":"m.text"},"ts":1441781006000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Yessir","msgtype":"m.text"},"ts":1441781017000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, \"ask an admin\", I think","msgtype":"m.text"},"ts":1441781040000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: happy to talk on #mdn if you have guidance on that","msgtype":"m.text"},"ts":1441781042000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1441781044000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1441781047000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1441781050000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: who's the EU-hours admin? teoli?","msgtype":"m.text"},"ts":1441781098000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Sounds plausiblr","msgtype":"m.text"},"ts":1441781111000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ble","msgtype":"m.text"},"ts":1441781113000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1441781116000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: does mozilla IRC have any message-bot-like thingey that people use? e.g., like botie. Or do people use MsgServ? Or they just wait?","msgtype":"m.text"},"ts":1441781243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is just wondering what the culture is and doesn't want to step on toes","msgtype":"m.emote"},"ts":1441781265000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"fennecbot has that feature","msgtype":"m.text"},"ts":1441781324000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah cool","msgtype":"m.text"},"ts":1441781336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's not very widely used, though","msgtype":"m.text"},"ts":1441781339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1441781343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks, but it's not your fault","msgtype":"m.text"},"ts":1441782651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: did you see https://github.com/whatwg/fetch/pull/119?","msgtype":"m.text"},"ts":1441784052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: if you don't have time to look at it that's fine, but then I'll start merging the Streams stuff in and hope for more review later on","msgtype":"m.text"},"ts":1441784080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o_O, http://www.w3.org/TR/xhtml/ redirects to /Markup/","msgtype":"m.text"},"ts":1441787312000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schedules a party on 17 December","msgtype":"m.emote"},"ts":1441787703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: significance?","msgtype":"m.text"},"ts":1441788176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"5 years since the XHTML2 WG died","msgtype":"m.text"},"ts":1441788217000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There must be better reasons to organize parties","msgtype":"m.text"},"ts":1441788402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where should http://www.w3.org/TR/xhtml/ go?","msgtype":"m.text"},"ts":1441789037000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can't change what http://www.w3.org/TR/xhtml/ redirects to but I can make https://www.w3.org/MarkUp/ redirect to somewhere useful","msgtype":"m.text"},"ts":1441789077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I dunno, was just trying to find the XHTML specification for a date citation on dev.platform","msgtype":"m.text"},"ts":1441789113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: found it by going to /TR/xhtml1/","msgtype":"m.text"},"ts":1441789132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah I guess you were rightly hoping that http://www.w3.org/TR/xhtml/ would take you to the XHTML spec","msgtype":"m.text"},"ts":1441789134000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441789139000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: made sense in my mind","msgtype":"m.text"},"ts":1441789142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I will make /Markup redirect there","msgtype":"m.text"},"ts":1441789154000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: wouldn't the /Markup/ folks get upset then about their history?","msgtype":"m.text"},"ts":1441789178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno maybe","msgtype":"m.text"},"ts":1441789191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess if they don't it will be an indication that nobody uses that page","msgtype":"m.text"},"ts":1441789215000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"long-term I guess I can ask for http://www.w3.org/TR/xhtml/ to be symlinked to /TR/xhtml1 instead","msgtype":"m.text"},"ts":1441789254000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, why not to html.s.w.o? :)","msgtype":"m.text"},"ts":1441789291000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess MikeSmith still likes his job :)","msgtype":"m.text"},"ts":1441790006000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Managed to make sense out of yesterday's test case?","msgtype":"m.text"},"ts":1441790942000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: so, the crossorigin attribute on the video element. That is not implemented by anyone yet right?","msgtype":"m.text"},"ts":1441791192000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: I would think it is","msgtype":"m.text"},"ts":1441791214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, great. I thought because of your comment yesterday and pointer to the issue on Github it might not be","msgtype":"m.text"},"ts":1441791242000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: that issue is mostly about refactoring","msgtype":"m.text"},"ts":1441791378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok, got it","msgtype":"m.text"},"ts":1441791387000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"annevk: fwiw https://www.w3.org/TR/xhtml/ now redirects to the right place (thanks to a haz-root friend on the systeam fast-tracking the update to the symlink)","msgtype":"m.text"},"ts":1441791564000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and People Who Like https://www.w3.org/MarkUp/ can remain happy","msgtype":"m.text"},"ts":1441791597000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, righter, at least :)(","msgtype":"m.text"},"ts":1441791675000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Progress Not Perfection","msgtype":"m.text"},"ts":1441791795000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"One Day At a Time","msgtype":"m.text"},"ts":1441791803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"A variant of w3c's slogan, \"Process Not Perfection\"?","msgtype":"m.text"},"ts":1441791827000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh burn","msgtype":"m.text"},"ts":1441791860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my wife asking me what I'm laughing about and why I have silly grin on my face","msgtype":"m.text"},"ts":1441791892000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: that is your best material in a long time","msgtype":"m.text"},"ts":1441791906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you should take that one the road","msgtype":"m.text"},"ts":1441791915000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"did you just spontaneously come up with that one right now?","msgtype":"m.text"},"ts":1441791938000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Eh, the good ones are few and far between :)","msgtype":"m.text"},"ts":1441791945000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1441791951000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: It's related to the step \"If inner loop counter is greater than three and node is in the list of active formatting elements, then remove node from the list of active formatting elements.\"","msgtype":"m.text"},"ts":1441792095000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ah, the \"Magic Step\"","msgtype":"m.text"},"ts":1441792115000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: nox 1 Blink 0","msgtype":"m.text"},"ts":1441792174000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think I found their bug.","msgtype":"m.text"},"ts":1441792178000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Just the one?","msgtype":"m.text"},"ts":1441792187000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/nwjs/blink/blob/be948afff52a140cdb9339c918e62fc71759904e/Source/core/html/parser/HTMLTreeBuilder.cpp#L1533-L1534","msgtype":"m.text"},"ts":1441792193000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ms2ger: <b><em><foo><foo><foo><aside></b></em>","msgtype":"m.text"},"ts":1441792201000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ms2ger: Blink keeps <em> as an active formatting element.","msgtype":"m.text"},"ts":1441792216000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Note how the loop is done,","msgtype":"m.text"},"ts":1441792221000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"it increments after the iteration,","msgtype":"m.text"},"ts":1441792228000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"while the spec says to increment when before each of them.","msgtype":"m.text"},"ts":1441792239000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ultimately resulting in off-by-one errors on the iteration limit check.","msgtype":"m.text"},"ts":1441792256000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It's a bit of a PITA that they don't even follow the spec exactly in their code flow.","msgtype":"m.text"},"ts":1441792330000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hmm, looks like the spec doesn't have a name for this magic step","msgtype":"m.text"},"ts":1441792343000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't even know why they use the 3 as the iteration limit.","msgtype":"m.text"},"ts":1441792648000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It's not what the spec says. :(","msgtype":"m.text"},"ts":1441792652000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The spec says to do something magical when iteration count is greater than 3, sure, but that's not stopping the loop at 3 iterations.","msgtype":"m.text"},"ts":1441792681000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I also like how it's called \"step 9\", when in the spec it's \"step 13\".","msgtype":"m.text"},"ts":1441792741000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: but that's not exactly the latest blink code, is it?","msgtype":"m.text"},"ts":1441792997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's what I'm checking.","msgtype":"m.text"},"ts":1441793007000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: https://chromium.googlesource.com/chromium/blink/+/master/Source/core/html/parser/HTMLTreeBuilder.cpp","msgtype":"m.text"},"ts":1441793068000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Can't link to lines, but it looks the same.","msgtype":"m.text"},"ts":1441793076000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://chromium.googlesource.com/chromium/blink/+/master/Source/core/html/parser/HTMLTreeBuilder.cpp#1531","msgtype":"m.text"},"ts":1441793108000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/pull/67#issuecomment-138864769","msgtype":"m.text"},"ts":1441793851000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: if you have a moment I would love your comments on this https://github.com/schalkneethling/exploring-html/blob/master/embedded_content/video.html#L91","msgtype":"m.text"},"ts":1441794053000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1441794055000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: note that you also need to use crossorigin if you want to load cross-origin video and inspect certain metadata","msgtype":"m.text"},"ts":1441794120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, thought there might be a link there. Are there some docs on this?","msgtype":"m.text"},"ts":1441794181000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"So does the crossorigin attribute on the video element override what is set in the CSP policy? Or is this not related?","msgtype":"m.text"},"ts":1441794221000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"trying to think if you can control more than css an js and seem to think you can","msgtype":"m.emote"},"ts":1441794258000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: well, the spec is a doc","msgtype":"m.text"},"ts":1441794338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schalkneethling: CSP is not related","msgtype":"m.text"},"ts":1441794346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, let me have a read over that again","msgtype":"m.text"},"ts":1441794362000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: loop=\"true\" is invalid, should be just loop (or loop=\"\" or loop=\"loop\")","msgtype":"m.text"},"ts":1441794405000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"same for muted","msgtype":"m.text"},"ts":1441794439000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, ok. spec suggested value is a boolean?","msgtype":"m.text"},"ts":1441794441000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"http://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop","msgtype":"m.text"},"ts":1441794458000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"oooooh","msgtype":"m.text"},"ts":1441794463000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: no, it says it's a \"boolean attribute\"","msgtype":"m.text"},"ts":1441794463000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok, no I read it correctly","msgtype":"m.text"},"ts":1441794468000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"now","msgtype":"m.text"},"ts":1441794472000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"got it, so the same goes for muted","msgtype":"m.text"},"ts":1441794478000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"thanks for the feedback zcorpan","msgtype":"m.text"},"ts":1441794488000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"you may want to read html.spec.whatwg.org instead","msgtype":"m.text"},"ts":1441794491000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"anybody know what plans, if any, WebKit has for actually implementing document.execCommand(\"cut\"/\"copy\")","msgtype":"m.text"},"ts":1441794968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I found https://bugs.webkit.org/show_bug.cgi?id=146336, which has an amusing summary but is otherwise not terrifically enlightening","msgtype":"m.text"},"ts":1441795006000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's implemented now everywhere else, right?","msgtype":"m.text"},"ts":1441795023000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gecko, blink, edge","msgtype":"m.text"},"ts":1441795036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Any ideas about the right way to address https://www.w3.org/Bugs/Public/show_bug.cgi?id=27190?","msgtype":"m.text"},"ts":1441796313000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: also https://www.w3.org/Bugs/Public/show_bug.cgi?id=27146.","msgtype":"m.text"},"ts":1441797831000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: the latter seems doable","msgtype":"m.text"},"ts":1441798092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: the former is still unclear on what invariants we want to preserve","msgtype":"m.text"},"ts":1441798102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I emailed public-webappsec about that as well at some point but to no avail","msgtype":"m.text"},"ts":1441798114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. fixing the latter would be nice, since it seems straightforward.","msgtype":"m.text"},"ts":1441798168000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I'm in the midst of trying to do Fetch refactoring and it's going rather slowly","msgtype":"m.text"},"ts":1441798198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: For the former, I've updated the algorithm a bit to define behavior for workers and sharedworkers that I think is sane: https://w3c.github.io/webappsec/specs/powerfulfeatures/#settings-secure step 2.*.","msgtype":"m.text"},"ts":1441798236000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: If you're fine with the change, I'll poke at it. No reason for you to do it.","msgtype":"m.text"},"ts":1441798256000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah that seems like a good change to make","msgtype":"m.text"},"ts":1441798438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did you kill Request/Response's TLS state?","msgtype":"m.text"},"ts":1441798481000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I don't see them in Fetch anymore.","msgtype":"m.text"},"ts":1441798494000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ah, \"HTTPS state\".","msgtype":"m.text"},"ts":1441798535000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"OE ruined the term TLS for me","msgtype":"m.text"},"ts":1441798575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup. Totally understood.","msgtype":"m.text"},"ts":1441799008000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"OE?","msgtype":"m.text"},"ts":1441799273000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"opportunistic encryption","msgtype":"m.text"},"ts":1441799318000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1441799339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so I am going to experiment with using the term \"the Web runtime\" in conversations instead of \"the Web platform\"","msgtype":"m.text"},"ts":1441806175000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the reason being that I am increasingly running into people who are using \"the Web platform\" to mean either just \"the Web\" or else basically whatever they want it to mean such that there pet technology is part of it","msgtype":"m.text"},"ts":1441806274000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., claims that EPUB is part of the Web platform","msgtype":"m.text"},"ts":1441806295000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or that Linked Data is part of the Web platform","msgtype":"m.text"},"ts":1441806312000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"etc.","msgtype":"m.text"},"ts":1441806314000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I have not had a chance to look at the pull request and probably won't in the next couple weeks... feeling the crunch trying to get service workers in 43","msgtype":"m.text"},"ts":1441806369000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ok, thank you","msgtype":"m.text"},"ts":1441806450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: takk","msgtype":"m.text"},"ts":1441807785000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: see HTML5 and other terms","msgtype":"m.text"},"ts":1441807878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: uphill battle","msgtype":"m.text"},"ts":1441807880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1441807906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Man, image fetching is complicated","msgtype":"m.text"},"ts":1441807957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the advantage \"the Web runtime\" is that it's not an attractive term for others to try to shoehorn their non-Web junk into","msgtype":"m.text"},"ts":1441807957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm not sure why not","msgtype":"m.text"},"ts":1441807975000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The point is that it's a popular thing, not the specific choice of words","msgtype":"m.text"},"ts":1441807990000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1441808010000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"If we're going to pick new terms I guess I'd go with Web Kernel","msgtype":"m.text"},"ts":1441808024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm sure ePub or whoever would happilly talk about \"HTML5 technology\" whilst requiring XHTML1.1 or similar","msgtype":"m.text"},"ts":1441808027000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well that's exactly the case with epub currently","msgtype":"m.text"},"ts":1441808092000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Kernel\" seems like a misuse of the term. Plus it makes me think of matricies. And nuts.","msgtype":"m.text"},"ts":1441808103000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's well-formed XHTML only","msgtype":"m.text"},"ts":1441808108000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I like it","msgtype":"m.text"},"ts":1441808114000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Kernel","msgtype":"m.text"},"ts":1441808119000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you can't pile tons of crap into the kernal","msgtype":"m.text"},"ts":1441808138000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well that pretty much precludes the web from using it then :p","msgtype":"m.text"},"ts":1441808163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it implies something bounded","msgtype":"m.text"},"ts":1441808169000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1441808170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zing","msgtype":"m.text"},"ts":1441808176000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: For what?","msgtype":"m.text"},"ts":1441808406000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://github.com/html5lib/html5lib-tests/pull/67#issuecomment-138864769","msgtype":"m.text"},"ts":1441808443000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Blink TC?","msgtype":"m.text"},"ts":1441808484000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: your two tests are equivilant to the Blink test case","msgtype":"m.text"},"ts":1441808507000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Right.","msgtype":"m.text"},"ts":1441808599000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: I suppose in Blink all three produce the same tree shape?","msgtype":"m.text"},"ts":1441808614000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441808619000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: We agree that Blink is broken, then?","msgtype":"m.text"},"ts":1441808637000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1441808640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: lol @ that isindex test.","msgtype":"m.text"},"ts":1441808696000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Could you enforce that tests should only be appended to the existing tests, btw?","msgtype":"m.text"},"ts":1441808746000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: To ignore the ones we don't pass in html5ever, we use their index in the file.","msgtype":"m.text"},"ts":1441808771000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: IMO that doesn't make so much sense as putting stuff as close to possible to a similar test","msgtype":"m.text"},"ts":1441808934000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That sounds like a bad idea :)","msgtype":"m.text"},"ts":1441808944000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: I suggest you use some simple hashing function to reference them","msgtype":"m.text"},"ts":1441808948000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":" Ms2ger: The enumeration? That's not me.","msgtype":"m.text"},"ts":1441808995000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Anyhow, I'm going out for a bit.","msgtype":"m.text"},"ts":1441809008000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: regarding ruby https://github.com/whatwg/html/pull/101#issuecomment-138949170 can you confirm with a live-dom-viewer test case that WebKit and Gecko currently differ?","msgtype":"m.text"},"ts":1441813004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I can use my iPad","msgtype":"m.text"},"ts":1441813100000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<rtc><rb> right?","msgtype":"m.text"},"ts":1441813115000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, I did that the other day","msgtype":"m.text"},"ts":1441813567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: They apparently do not differ, for <rtc><rp>","msgtype":"m.text"},"ts":1441813582000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"children in both","msgtype":"m.text"},"ts":1441813592000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do you have <ruby> in scope?","msgtype":"m.text"},"ts":1441813677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, no, didn't test that :P","msgtype":"m.text"},"ts":1441813687000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dammit","msgtype":"m.text"},"ts":1441813715000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1441813773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm going to be splitting some of this Fetch stuff out, will be too much at once otherwise I'm afraid","msgtype":"m.text"},"ts":1441813821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and I'm getting nowhere near completion working on a big patch like this, so hopefully that's somewhat fruitful","msgtype":"m.text"},"ts":1441813843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can do it","msgtype":"m.text"},"ts":1441813922000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: http://trac.webkit.org/changeset/172834/trunk/Source/WebCore/html/parser/HTMLTreeBuilder.cpp mentioned by Koji is relevant","msgtype":"m.text"},"ts":1441814103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: also https://github.com/w3c/html/commit/c61397b989b28235ee2228f280aa8d475f3b9ebf","msgtype":"m.text"},"ts":1441814119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so is the idea that this just hasn't made it into Safari yet?","msgtype":"m.text"},"ts":1441814135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that's the relevant change between HTML5 and HTML51","msgtype":"m.text"},"ts":1441814138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe someone with OS X beta can test","msgtype":"m.text"},"ts":1441814140000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm guessing that indeed stable Safari is over a year old","msgtype":"m.text"},"ts":1441814154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is webkit nightly not good enough for testing?","msgtype":"m.text"},"ts":1441814157000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"When I tried WebKit nightly a long time ago I couldn't really get it to work","msgtype":"m.text"},"ts":1441814183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not on PCs it's not","msgtype":"m.text"},"ts":1441814184000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe I should try again","msgtype":"m.text"},"ts":1441814186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i didn't know there was a pc version, since it just hijacks safari I think","msgtype":"m.text"},"ts":1441814202000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I was being oblique. The reason I can't test is because there is no PC version.","msgtype":"m.text"},"ts":1441814225000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cruby%3E%3Crtc%3E%3Crp%3E for anyone with WebKit nightly or Safari beta","msgtype":"m.text"},"ts":1441814232000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But regardless sounds like there's consensus","msgtype":"m.text"},"ts":1441814263000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm surprised Ryosuke r+'d http://trac.webkit.org/changeset/172834/trunk/Source/WebCore/html/parser/HTMLTreeBuilder.cpp given that it didn't reference a stable draft","msgtype":"m.text"},"ts":1441814266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"</troll>","msgtype":"m.text"},"ts":1441814271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wow, some very aggressive URL issue filing going on","msgtype":"m.text"},"ts":1441815363000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah somehow I knew this would go in the tone policing direction the moment we called her out on harassment","msgtype":"m.text"},"ts":1441816017000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what do you call something that doesn't depend on global state?","msgtype":"m.text"},"ts":1441816277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perks up at tone policing and harrassment.","msgtype":"m.emote"},"ts":1441816294000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"ahhh there is a term for this","msgtype":"m.text"},"ts":1441816296000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: URL?","msgtype":"m.text"},"ts":1441816299000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Pure","msgtype":"m.text"},"ts":1441816313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://c2.com/cgi/wiki?GlobalVariablesAreBad","msgtype":"m.text"},"ts":1441816315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: stateless ?","msgtype":"m.text"},"ts":1441816319000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"stateless is the one you want yeah","msgtype":"m.text"},"ts":1441816336000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Link?","msgtype":"m.text"},"ts":1441816338000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"pure is pretty good too","msgtype":"m.text"},"ts":1441816340000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"pure sounds too fluffy","msgtype":"m.text"},"ts":1441816351000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"well, https://en.wikipedia.org/wiki/Pure_function","msgtype":"m.text"},"ts":1441816364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow what - that seems completely made up","msgtype":"m.text"},"ts":1441816417000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yesh \"This article needs additional citations for verification. \"","msgtype":"m.text"},"ts":1441816426000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I'd have to ask Knuth about his opinion on this","msgtype":"m.text"},"ts":1441816441000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"She's unleashed her Twitter on us by the way, in case you wonder where the randoms come from","msgtype":"m.text"},"ts":1441816509000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: URL?","msgtype":"m.text"},"ts":1441816526000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"https://github.com/whatwg/url/issues/71","msgtype":"m.text"},"ts":1441816534000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"also re: pure http://mathematica.stackexchange.com/questions/64577/why-does-the-documentation-call-functions-pure/64624#64624 \" In the Wikipedia article it is a term extracted by analogy from the increasingly popular term \"purely functional\" which refers (mainly) to deterministic programming free of side-effects.\"","msgtype":"m.text"},"ts":1441816544000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Domenic: wow wtf","msgtype":"m.text"},"ts":1441816578000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"pure function is a pretty well established term...","msgtype":"m.text"},"ts":1441816596000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I remember reaching out to some part of the community before, e.g., I discussed this with wycats","msgtype":"m.text"},"ts":1441816599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sighs at people who think sending their twitter followers into a bug trackers does anything else than make them look like idiots","msgtype":"m.emote"},"ts":1441816612000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And es-discuss, etc.","msgtype":"m.text"},"ts":1441816613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek, what do you think a pure function is, then?","msgtype":"m.text"},"ts":1441816634000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: see above mathematica article - is the term needed?","msgtype":"m.text"},"ts":1441816653000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"also, maybe I should try sending Twitter followers into a CSS discussion","msgtype":"m.text"},"ts":1441816672000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"huh - that issue 71 was more interesting than I expected","msgtype":"m.text"},"ts":1441816792000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I'm for not depending on window.location - because - hey, there's no window.location in Node.js right? URL is intended to be used there too right?","msgtype":"m.text"},"ts":1441816834000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"this doesn't seem like a matter of defaults or not","msgtype":"m.text"},"ts":1441816859000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but rather of predictable / consistent behavior","msgtype":"m.text"},"ts":1441816869000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yeah wasn't sure whether to bring that up, but yeah, URL is a generic URL processing library.","msgtype":"m.text"},"ts":1441816880000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I've had sufficiently unexpected relative URL crap happening to think that this is a bad idea, global variables or not.","msgtype":"m.text"},"ts":1441816923000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wouldn't it be doable to have a wrapper on top of the URL primitive which does the relative URL thing?","msgtype":"m.text"},"ts":1441816957000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or like a static method or something","msgtype":"m.text"},"ts":1441816966000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441816970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Your points would be appreciated in the thread, as her Twitter horde has descended with the Lea-is-right viewpoint","msgtype":"m.text"},"ts":1441816974000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"though you could also just pass in document.baseURI or some such","msgtype":"m.text"},"ts":1441816981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"location seems actually wrong","msgtype":"m.text"},"ts":1441816990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or document.URL","msgtype":"m.text"},"ts":1441816990000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which one? who knows","msgtype":"m.text"},"ts":1441816995000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gets the popcorn","msgtype":"m.emote"},"ts":1441817001000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: I have no idea whether this is valid criticism: https://twitter.com/LeaVerou/status/641641311427100676","msgtype":"m.text"},"ts":1441817007000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"good defaults for UIs, not APIs. sheesh","msgtype":"m.text"},"ts":1441817030000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":": Good morning/afternoon/evening WHATWG crew o/","msgtype":"m.text"},"ts":1441817080000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"\"The W3C priority of constituencies puts theoretical purity at the very bottom\"","msgtype":"m.text"},"ts":1441817107000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can't tell if slightlyoff is serious or not.","msgtype":"m.emote"},"ts":1441817108000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I think he is","msgtype":"m.text"},"ts":1441817124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there was no :p in his comment","msgtype":"m.text"},"ts":1441817140000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"actually serious","msgtype":"m.text"},"ts":1441817161000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Given how strong the JavaScript default library likes to avoid global state I'm somewhat surprised by those comments","msgtype":"m.text"},"ts":1441817171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1441817177000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"But you know, I guess folks care about different things which is alright","msgtype":"m.text"},"ts":1441817197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I guess asking people to be polite is no longer done :-(","msgtype":"m.text"},"ts":1441817215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: TC39 hasn't yet accepted it works on a web language and that origins are our security model...which is maddening","msgtype":"m.text"},"ts":1441817232000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: orthogonal","msgtype":"m.text"},"ts":1441817249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but whatwg is under no pressure to replicate those mistskes","msgtype":"m.text"},"ts":1441817254000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"anyone looked at the URL objects in other languages? or do I need to go get my big table again?","msgtype":"m.text"},"ts":1441817313000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"most other languages don't have the same relationship with an origin","msgtype":"m.text"},"ts":1441817384000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: fwiw, she raised the issue on twitter first and I asked her to file the issue","msgtype":"m.text"},"ts":1441817470000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the `location.relativeURL()` idea seems pretty good","msgtype":"m.text"},"ts":1441817482000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah, I suggested statics in the bug to separate out relative/absolute parsing behaviour. Might also split the types to prevent inadvertent mixing","msgtype":"m.text"},"ts":1441817647000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(this type feels overloaded and should unpack the \"has a\"s from the \"is a\" s)","msgtype":"m.text"},"ts":1441817694000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"this type is about absolute URLs","msgtype":"m.text"},"ts":1441817734000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"slightlyoff: overloaded? How?","msgtype":"m.text"},"ts":1441817747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not overloaded but people's conception of URLs is overloaded so they think it can do multiple things it cannot normally do","msgtype":"m.text"},"ts":1441817752000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, so far from that thread it seems folks are confused about URLs","msgtype":"m.text"},"ts":1441817769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One of the stronger practical arguments for me is that half the time you want document.URL and half the time you want document.baseURI","msgtype":"m.text"},"ts":1441817814000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"afk for lunch, don't blow up the internet","msgtype":"m.text"},"ts":1441817861000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I feel a bit sad about it escalating so quickly. I wonder how to approach something like this next time around","msgtype":"m.text"},"ts":1441817872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Imma see if I can chat at Lea and ask her not to escalate to mob immediately. :/","msgtype":"m.text"},"ts":1441817902000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I know it may not be fair, but I think trying to look past insults (\"no hci training\") and focus on the technical reasons for the decision helps keep things from escalating","msgtype":"m.text"},"ts":1441818232000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I guess I should've not gone into that","msgtype":"m.text"},"ts":1441818425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it felt a bit unfair","msgtype":"m.text"},"ts":1441818440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it is unfair!  I only mentioned it since you asked about avoiding escalation","msgtype":"m.text"},"ts":1441818453000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I try to think about it like the old browser networking rule... be thick skinned about what you receive and use a light touch with what you send","msgtype":"m.text"},"ts":1441818508000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"No, it was quite unfair. Lea jumps in with her qualifications when it's relevant; assuming non-qualifications on others (and then calling tone-police when it's pointed out) was somewhat shitty. :/","msgtype":"m.text"},"ts":1441818845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is window.location changeable?  Without navigating?","msgtype":"m.text"},"ts":1441819235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I forget what exactly is mutatable here, because it doesn't make sense.","msgtype":"m.text"},"ts":1441819244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"refuses to listen to anyone without a CS degree","msgtype":"m.emote"},"ts":1441819245000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: pushState()","msgtype":"m.text"},"ts":1441819305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, thanks.","msgtype":"m.text"},"ts":1441819317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but window.location seems wrong since it doesn't take into account <base>","msgtype":"m.text"},"ts":1441819324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Oh, good to know we should refuse to listen to you.","msgtype":"m.text"},"ts":1441819337000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: which is part of why it's magical, since folks assume location, but that'd be really bad","msgtype":"m.text"},"ts":1441819350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I dunno","msgtype":"m.text"},"ts":1441819362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: overloaded in the sense that there are folks trying to use relative URL fragments and absolute URLs inside the same programs. URL (today) have a `pathname` component, but that's only a look-alike","msgtype":"m.text"},"ts":1441819378000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: I'm not following you","msgtype":"m.text"},"ts":1441819398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and anyone who wants to parse parts of a URL without committing to creating an absolute URL is SOL","msgtype":"m.text"},"ts":1441819402000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: we don't have a relative URL primitive in the platform today","msgtype":"m.text"},"ts":1441819417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...hence people trying to use URL for things that aren't what you've spec'd the API to to include are finding it difficult to work with = )","msgtype":"m.text"},"ts":1441819457000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"And hence why URL, which is trying to handle absolute urls, shouldn't try to handle relative urls.","msgtype":"m.text"},"ts":1441819500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"getting rid of the 2nd parameter entirely and just adding a static method for that seems easier to understand","msgtype":"m.text"},"ts":1441819502000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: That's another option, yeah (and I think it's better ergonomics).","msgtype":"m.text"},"ts":1441819528000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"slightlyoff: are you saying folks want a relative URL primitive?","msgtype":"m.text"},"ts":1441819678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, gotta go","msgtype":"m.text"},"ts":1441819687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm asking you to look more deeply into what she's trying to accomplish in this case","msgtype":"m.text"},"ts":1441819701000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and instead of writing her off, ask why the current system seemed broken","msgtype":"m.text"},"ts":1441819713000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"maybe the form of what she's asking for is wrong","msgtype":"m.text"},"ts":1441819726000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(I suggested statics because I'd find that clearer)","msgtype":"m.text"},"ts":1441819735000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"but it may be that a RelativeURL or URLComponent would help clarify things","msgtype":"m.text"},"ts":1441819780000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"seems like it would make things more complicated, tbh","msgtype":"m.text"},"ts":1441819845000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"unless it was just a subclass of URL with an extra `base` attribute or something","msgtype":"m.text"},"ts":1441819879000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I mean, being able to pass around relative urls seems potentially useful. I'd have to dig for use-cases, but I can see it theoretically, with an explicit resolve() method to turn it into a URL.","msgtype":"m.text"},"ts":1441820111000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Probably want to not give it a toString(), to make it harder to misuse.","msgtype":"m.text"},"ts":1441820132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I for one would expect URL to act like any href in a document, FWIW.","msgtype":"m.text"},"ts":1441820139000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tell that to the node-compat people =p","msgtype":"m.text"},"ts":1441820163000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1441820163000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"gsnedders: THAT'S THE PROBLEM","msgtype":"m.text"},"ts":1441820186000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If I can claim to be a web developer nowadays.","msgtype":"m.text"},"ts":1441820187000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"href in a document depends on <base>","msgtype":"m.text"},"ts":1441820194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: STOP TONE-POLICING ME.","msgtype":"m.text"},"ts":1441820196000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"href outside a document depends on window.location","msgtype":"m.text"},"ts":1441820201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Neither is the origin.","msgtype":"m.text"},"ts":1441820207000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wait, what","msgtype":"m.text"},"ts":1441820218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what's the second case?","msgtype":"m.text"},"ts":1441820220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"href *outside* a document?","msgtype":"m.text"},"ts":1441820227000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"when is that?","msgtype":"m.text"},"ts":1441820229000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"An <a> created in script and not inserted into a document.","msgtype":"m.text"},"ts":1441820231000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so its ownerDocument doesn't matter here? huh.","msgtype":"m.text"},"ts":1441820254000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1441820259000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"really? that might have an impact on all those URL polyfills then","msgtype":"m.text"},"ts":1441820263000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Or maybe ownerDocument does, but at least <base> doesn't.","msgtype":"m.text"},"ts":1441820276000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, shit, you've just made everything more complicated.","msgtype":"m.text"},"ts":1441820282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You sound surprised","msgtype":"m.text"},"ts":1441820299000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or it does? Man, I dunno. Shit's complicated, yes.","msgtype":"m.text"},"ts":1441820313000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: I only have half a degree in CS. You should be ignoring half of what I say.","msgtype":"m.text"},"ts":1441820319000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: And hence either I'm surprised but you don't know what about, or you know what I'm talking about but not that I'm surprised.","msgtype":"m.text"},"ts":1441820341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"did you tear the paper in half?","msgtype":"m.text"},"ts":1441820350000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"gsnedders: If I'm to ignore half of what you say, which parts would you like me to start paying attention to?","msgtype":"m.text"},"ts":1441820380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: if you don't give it a toString (which is pretty punitive), then the lack of equality method in URLs comes glaring through","msgtype":"m.text"},"ts":1441820418000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"True fact! That's because relative urls, without a notion of where they're resolved against, have a very shaky notion of \"equality\"!","msgtype":"m.text"},"ts":1441820444000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: I have what en-us would call a joint major.","msgtype":"m.text"},"ts":1441820451000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1441820474000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Grabbing a relative url from an <a> and from a background-image mean different things, even if they stringify the same.","msgtype":"m.text"},"ts":1441820477000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"probably a better choice in that case","msgtype":"m.text"},"ts":1441820518000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"slightlyoff: Relative urls are fraught with footguns, despite (rather, due to) their usability.","msgtype":"m.text"},"ts":1441820549000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3630","msgtype":"m.text"},"ts":1441820602000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, I was just experimenting with it, too.","msgtype":"m.text"},"ts":1441820619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which makes it EVEN WORSE, as defaulting to location would *not* correspond to what <a> does!","msgtype":"m.text"},"ts":1441820632000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tl;dr: I'd expect URL to resolve against the same thing new_a does.","msgtype":"m.text"},"ts":1441820644000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1441820655000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"comments as such","msgtype":"m.emote"},"ts":1441820668000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"usually I like convenient defaults, in this case the predictability of code makes me prefer (as an *author*) that bugs show up as errors sooner, thus no auto-magic relative URL resolution","msgtype":"m.text"},"ts":1441820701000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I think it's bad idea to grandfather the rushed APIs of new_a etc. into URL","msgtype":"m.text"},"ts":1441820719000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"As an author I'd expect consistency with new_a etc.","msgtype":"m.text"},"ts":1441820739000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"FWIW I think we have been bitten over and over again by dwim in APIs","msgtype":"m.text"},"ts":1441820751000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"dwim?","msgtype":"m.text"},"ts":1441820757000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Do What I Mean","msgtype":"m.text"},"ts":1441820765000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"only skimmed the first half of this conversation","msgtype":"m.emote"},"ts":1441820769000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: that's a way to write code that fails silently and late","msgtype":"m.text"},"ts":1441820782000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"here's an idea: what if the primitive is totally separate from Location and stuff, and has nothing whatsoever to do with those, and instead other interfaces provide helpers for constructing URL objects resolved the way they would","msgtype":"m.text"},"ts":1441820784000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"tantek: perhaps. :)","msgtype":"m.text"},"ts":1441820798000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: when have you used new_a on what site?","msgtype":"m.text"},"ts":1441820799000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that way everyone is happy","msgtype":"m.text"},"ts":1441820813000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"gsnedders: I much prefer writing code that I have more confidence in \"leaving alone\" and knowing there is less chance of it failing later silently","msgtype":"m.text"},"ts":1441820824000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"caitp: location.relativeURL(), document.relativeURL() ^_^","msgtype":"m.text"},"ts":1441820832000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1441820843000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"document.styleSheets[0].relativeURL()","msgtype":"m.text"},"ts":1441820844000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Make a mixin interface for relative urls, apply it to any interface that has a notion of \"base url\".","msgtype":"m.text"},"ts":1441820865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'd find that pretty easy to use, without accidentally making bogus URLs","msgtype":"m.text"},"ts":1441820916000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I would just add that to URLUtilsReadOnly and URLUtils.","msgtype":"m.text"},"ts":1441820925000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you Rust people and your immutability! :P","msgtype":"m.text"},"ts":1441820949000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1441820955000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you're just extending mutability from the type-system to object-indentity in other languages!","msgtype":"m.text"},"ts":1441821011000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: For starters, I fancy immutability because I come from the terse land of Erlang. :P","msgtype":"m.text"},"ts":1441821018000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: And why would putting relativeURL() in URLUtils{,ReadOnly} related to my taste for immutability?","msgtype":"m.text"},"ts":1441821070000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it's having the real only variant in the first place","msgtype":"m.text"},"ts":1441821113000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Oh!","msgtype":"m.text"},"ts":1441821121000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: When I wrote \"URLUtils{,ReadOnly}\" I thought \"why didn't I put them in alphabetic order previously?\".","msgtype":"m.text"},"ts":1441821157000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That explains things.","msgtype":"m.text"},"ts":1441821167000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"We can have a readonly variant when we can have object equality work properly, and not a moment before.","msgtype":"m.text"},"ts":1441821172000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: does .valueOf not work for this?","msgtype":"m.text"},"ts":1441821187000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: URLUtilsReadOnly exists already.","msgtype":"m.text"},"ts":1441821189000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Nope, not if you're comparing two objects.","msgtype":"m.text"},"ts":1441821208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Two objects => immediate pointer comparison.","msgtype":"m.text"},"ts":1441821219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"doesn't object equality work well when you're only dealing with absolute urls?","msgtype":"m.text"},"ts":1441821222000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"valueOf/toString are only invoked when comparing against primitives.","msgtype":"m.text"},"ts":1441821232000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: bah, it's been too long","msgtype":"m.text"},"ts":1441821234000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean","msgtype":"m.text"},"ts":1441821237000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"apart from not being able to overload the equality operator","msgtype":"m.text"},"ts":1441821243000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: That's the entire point. ^_^","msgtype":"m.text"},"ts":1441821253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: Yeah, I'm not sure why relative URLs matter here, aren't we discussing urlutils.relativeURL(string) -> URL?","msgtype":"m.text"},"ts":1441821255000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: can you tell I haven't touched a JS engine in three years?","msgtype":"m.text"},"ts":1441821256000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: I thought relativeURL() would return a new absolute URL, resolving its argument against the context object?","msgtype":"m.text"},"ts":1441821279000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"URL.is(url1, url2) ?","msgtype":"m.text"},"ts":1441821295000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":":<","msgtype":"m.text"},"ts":1441821305000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: Yeah, that exists now.","msgtype":"m.text"},"ts":1441821314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"didn't know that","msgtype":"m.text"},"ts":1441821324000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"can we just throw JS out and start with a new language? #trollololol","msgtype":"m.text"},"ts":1441821341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: Yes, correct.","msgtype":"m.text"},"ts":1441821369000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe better to call it \"resolveURL()\"","msgtype":"m.text"},"ts":1441821376000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't actually see that mentioned in the spec though","msgtype":"m.text"},"ts":1441821384000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: Oh I see, you are just saying == doesn't do the thing we want,","msgtype":"m.text"},"ts":1441821385000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"To not imply that it returns a relative url object.","msgtype":"m.text"},"ts":1441821385000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1441821390000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hasn't it already shipped?","msgtype":"m.text"},"ts":1441821398000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"resolveURL\" is probably more confusing to authors though","msgtype":"m.text"},"ts":1441821398000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: but how is this related to whether we put it on the ReadOnly interface?","msgtype":"m.text"},"ts":1441821399000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"URL(\"http://example.com\") == URL(\"http://example.com\") is false","msgtype":"m.text"},"ts":1441821407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: there again, you do like renaming things at LC…","msgtype":"m.text"},"ts":1441821407000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I suggest sympathise(),","msgtype":"m.text"},"ts":1441821412000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: It's... not?","msgtype":"m.text"},"ts":1441821413000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"stands for relate().","msgtype":"m.text"},"ts":1441821421000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: (no, we're not letting you forget this)","msgtype":"m.text"},"ts":1441821422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Hasn't what already shipped?","msgtype":"m.text"},"ts":1441821429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't understand \"We can have a readonly variant when we can have object equality work properly, and not a moment before.\" then. :)","msgtype":"m.text"},"ts":1441821444000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"maybe value types will be a thing some day","msgtype":"m.text"},"ts":1441821480000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"nox: Oh! That's about value objects. Value objects are readonly, and get structural equality automatically, *and* can overload == if they want.","msgtype":"m.text"},"ts":1441821481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Oh, ok.","msgtype":"m.text"},"ts":1441821497000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"i thought they just had structural equality","msgtype":"m.text"},"ts":1441821503000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: They're absolutely coming - we've got people working on them.","msgtype":"m.text"},"ts":1441821509000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"when did the overloading == thing come in?","msgtype":"m.text"},"ts":1441821510000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: I had mentioned URLUtilsReadOnly just before, so I was lost.","msgtype":"m.text"},"ts":1441821512000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: Yeah, sorry about that confusion.","msgtype":"m.text"},"ts":1441821523000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: all the URL stuff?","msgtype":"m.text"},"ts":1441821525000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"caitp: Operator overloading has been part of the value objects proposal since forever. It's still... hard, but it'll happen.","msgtype":"m.text"},"ts":1441821540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're not super useful without.","msgtype":"m.text"},"ts":1441821550000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: No problem.","msgtype":"m.text"},"ts":1441821555000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Tab: I recall it was always problematic to overload equality ops in particular because of invariant violations (also certain other ops)","msgtype":"m.text"},"ts":1441821561000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"If you have to do .add(), etc when you use an int64, that's shitty.","msgtype":"m.text"},"ts":1441821564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"did that change?","msgtype":"m.text"},"ts":1441821565000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: Nah, === is *not* overridable, nor is != (it's derived from ==).","msgtype":"m.text"},"ts":1441821581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Later on Twitter: \"Goddammit, TabAtkins can't talk intelligibly from his ivory tower!!1!)","msgtype":"m.text"},"ts":1441821601000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's enough.","msgtype":"m.text"},"ts":1441821601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess we'll have to change jshint to stop warning about === then","msgtype":"m.text"},"ts":1441821605000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Why would it warn about ===?","msgtype":"m.text"},"ts":1441821616000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"er, == vs ===","msgtype":"m.text"},"ts":1441821622000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if you need == for structural equality, I mean","msgtype":"m.text"},"ts":1441821629000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Nah, === is *always* structural equality. == defaults to that, but can be overridden.","msgtype":"m.text"},"ts":1441821644000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Best of primitives and objects, in one thing.","msgtype":"m.text"},"ts":1441821670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and I assume it fast-cases if objects are reference-equal","msgtype":"m.text"},"ts":1441821693000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"words are hard I need coffee","msgtype":"m.text"},"ts":1441821707000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: Are PRs that just simplify algorithms while keeping current behaviour welcomed?","msgtype":"m.text"},"ts":1441822332000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"as a spec reader and reviewer, I'd say those are most welcome","msgtype":"m.text"},"ts":1441822412000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1441822716000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"caitp: Yeah, that's all under the covers. Same-object is obviously structurally equal.","msgtype":"m.text"},"ts":1441826178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nox: yes","msgtype":"m.text"},"ts":1441826614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: I'm not opposed to adding things, I just disagreed that new URL shouldn't be a pure function","msgtype":"m.text"},"ts":1441826711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: all about layering","msgtype":"m.text"},"ts":1441826818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1441827237000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"nothing about changing the (default) inputs of the function invalidates the notion of a \"pure function\" here","msgtype":"m.text"},"ts":1441827259000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(same inputs generating the same output w/o side effects)","msgtype":"m.text"},"ts":1441827267000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Again, happy to see other ways to untangle this (e.g. static)","msgtype":"m.text"},"ts":1441827311000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"couldn't asking for an attribute of location or document be considered a side effect","msgtype":"m.text"},"ts":1441827312000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"s/static/statics/","msgtype":"m.text"},"ts":1441827316000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"only if that changes something about the state of the world; i.e. if it invokes a getter that does stuff, but we're talking about JS here, the notion of a \"pure function\" in JS is pretty laughable most of the time...you only get it through convention in this language","msgtype":"m.text"},"ts":1441827368000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(i.e. we don't have value types)","msgtype":"m.text"},"ts":1441827378000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"for instance: https://url.spec.whatwg.org/#constructors seems to coerce to a string","msgtype":"m.text"},"ts":1441827482000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"which means you're calling toString() on some object, which can have whatever side-effects you can imagine (boiling of oceans on distant moons)","msgtype":"m.text"},"ts":1441827512000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: yeah, what it doesn't mean though is that URL needs to depend on DOM","msgtype":"m.text"},"ts":1441827534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: or HTML or some such","msgtype":"m.text"},"ts":1441827543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that's a *totally differet* objection","msgtype":"m.text"},"ts":1441827546000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(different)","msgtype":"m.text"},"ts":1441827550000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: well, I might have several then","msgtype":"m.text"},"ts":1441827574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: new URL not depending on global state seems like a good thing too, for portability reasons and understanding what it actually does","msgtype":"m.text"},"ts":1441827640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now we're getting somewhere","msgtype":"m.text"},"ts":1441827694000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"you think it's easier to understand, others (seem to?) disagree. That's fine. I've asked Lea to outline her use-case in more depth","msgtype":"m.text"},"ts":1441827725000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I don't know, you, wycats, and I discussed this a long time ago and agreed","msgtype":"m.text"},"ts":1441827732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which thing?","msgtype":"m.text"},"ts":1441827747000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"but we can't talk about this as being some bedrocky CS principle when it's all ergonomics and choices under uncertainty","msgtype":"m.text"},"ts":1441827766000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wycats: about URL constructors","msgtype":"m.text"},"ts":1441827777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: I don't have a ton of time, but choosing not to call toString on something is a heavy choice","msgtype":"m.text"},"ts":1441827808000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"it better be worth it","msgtype":"m.text"},"ts":1441827809000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"it's clear that on the web you probably do want to get the url resolved relative to <base>, what if you want a different one resolved relative to origin, or a different one resolved relative to file","msgtype":"m.text"},"ts":1441827838000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wycats: I'm not saying we shouldn't call toString","msgtype":"m.text"},"ts":1441827848000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"even such bedrocky CS principles are supposed to be based in practical needs - so if you can't explain it in terms of such, then perhaps it's a misapplication of the principle","msgtype":"m.text"},"ts":1441827852000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"wycats: I'm arguing that you obviously should (and do)","msgtype":"m.text"},"ts":1441827855000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"is the question what the default base is?","msgtype":"m.text"},"ts":1441827877000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: yes; that's the debate","msgtype":"m.text"},"ts":1441827884000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"why not just give host environments a hook to configure it and call it a day","msgtype":"m.text"},"ts":1441827887000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"node probably wants something different anyawy","msgtype":"m.text"},"ts":1441827905000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"anyway*","msgtype":"m.text"},"ts":1441827907000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"because then it will make the api behave differently in different environments, and then joe's \"orthogonal JS\" won't do the right thing","msgtype":"m.text"},"ts":1441827919000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"suspects any sentence with \"just\"","msgtype":"m.emote"},"ts":1441827926000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"orthogonal?","msgtype":"m.text"},"ts":1441827927000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wrong word, not enough sleep :<","msgtype":"m.text"},"ts":1441827949000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah, I'm up for that. I think annevk is opposed. Regardless I think we need to think about what statics URL needs for convenience as lots of people are tripped up trying to accomplish a lot of different goals by the \"construct a URL, and first read up on all the details of URL\" thing","msgtype":"m.text"},"ts":1441827951000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: I think ergonomics are important, but simple building blocks are too","msgtype":"m.text"},"ts":1441828005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: would folks expect that invoking pushState() changes how new URL() works?","msgtype":"m.text"},"ts":1441828016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: at minimum, we could have an option that explicitly asks for \"host specified base\"","msgtype":"m.text"},"ts":1441828038000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"slightlyoff: or would that be called \"magic\" and the platform trying to be clever again?","msgtype":"m.text"},"ts":1441828041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which seems useful","msgtype":"m.text"},"ts":1441828043000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: well that's the second argument","msgtype":"m.text"},"ts":1441828049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you say \"whatever the host thinks a good option is\"?","msgtype":"m.text"},"ts":1441828061000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"annevk: I don't really understand the universal JS point","msgtype":"m.text"},"ts":1441828078000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"presumably if there's no host-configured base, and you pass a relative URL, you'd get an exception?","msgtype":"m.text"},"ts":1441828094000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: if you don't pass a base URL, yes","msgtype":"m.text"},"ts":1441828107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: its' only \"clever\" if we're trying to predict use as opposed to responding to existing user needs","msgtype":"m.text"},"ts":1441828109000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"annevk: so then slightlyoff is right","msgtype":"m.text"},"ts":1441828122000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"why are you giving a relative URL if you want \"agnostic\" behavior","msgtype":"m.text"},"ts":1441828129000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"that doesn't make any sense","msgtype":"m.text"},"ts":1441828133000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"a relative URL must be relative to something","msgtype":"m.text"},"ts":1441828139000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: you might want to actually make sure you're given an absolute URL","msgtype":"m.text"},"ts":1441828141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wycats: there's a ton of places in the platform that want this","msgtype":"m.text"},"ts":1441828152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like a good utility to include, which iirc we do","msgtype":"m.text"},"ts":1441828153000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"you should not be invoking the constructor to get an exception to learn that","msgtype":"m.text"},"ts":1441828164000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"that's silly","msgtype":"m.text"},"ts":1441828165000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"frames wycats saying I was right about something","msgtype":"m.emote"},"ts":1441828166000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"lololol","msgtype":"m.text"},"ts":1441828177000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"the lack of a URL.isAbsolute(url) seems like the problem here","msgtype":"m.text"},"ts":1441828195000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Yeah, we should probably offer that","msgtype":"m.text"},"ts":1441828245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do you differentiate between absolute and fully qualified","msgtype":"m.text"},"ts":1441828263000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I'm not sure what the distinction would be","msgtype":"m.text"},"ts":1441828284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But absolute URL per spec is syntax","msgtype":"m.text"},"ts":1441828290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The outcome of the parser is a URL record https://url.spec.whatwg.org/#concept-url","msgtype":"m.text"},"ts":1441828317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"absolute urls in <a> terms would be relative to base","msgtype":"m.text"},"ts":1441828322000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"versus fully qualified which include scheme/host/etc","msgtype":"m.text"},"ts":1441828337000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well if they're absolute the base is irrelevant","msgtype":"m.text"},"ts":1441828338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think you're confusing things","msgtype":"m.text"},"ts":1441828349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You might be thinking about path-absolute URLs?","msgtype":"m.text"},"ts":1441828360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not a confusion, they're different things","msgtype":"m.text"},"ts":1441828379000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I guess what you're calling absolute the spec calls path-absolute and what you're calling fully qualified the spec either calls absolute or URL records...","msgtype":"m.text"},"ts":1441828411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wycats: so I guess you changed your mind too or maybe I misremembered","msgtype":"m.text"},"ts":1441828479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I have to go momentarily, but do you get my basic point?","msgtype":"m.text"},"ts":1441828485000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"if it would be an exception anyway, it seems ok to configure it","msgtype":"m.text"},"ts":1441828492000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"as long as there's a way to defend yourself if you really care","msgtype":"m.text"},"ts":1441828502000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: I'm not sure if we can still change this at this point, but perhaps we could make it configurable...","msgtype":"m.text"},"ts":1441828511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it's an exception now, we can surely change it c/d","msgtype":"m.text"},"ts":1441828530000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"confirm/deny","msgtype":"m.text"},"ts":1441828535000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: folks might use it for the absolute URL test","msgtype":"m.text"},"ts":1441828551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's so new we can get away with it","msgtype":"m.text"},"ts":1441828568000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"the fact that ppl are using that test should have been a hint to add a predicate ;)","msgtype":"m.text"},"ts":1441828583000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: I'm not sure if they are :-)","msgtype":"m.text"},"ts":1441828601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then we're safe to change it ;)","msgtype":"m.text"},"ts":1441828611000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"I hear FF has telemetry ;)","msgtype":"m.text"},"ts":1441828616000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"What's wrong with the relativeURL() idea?","msgtype":"m.text"},"ts":1441828680000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"it makes sense to have a reflection of <a> in the URL spec","msgtype":"m.text"},"ts":1441828716000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1441828723000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"O_o","msgtype":"m.text"},"ts":1441828727000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"new URL is fine, so is URL.platform()","msgtype":"m.text"},"ts":1441828731000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Should the URL href setter behave like on <a> too?","msgtype":"m.text"},"ts":1441828736000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: because having to build everything up from primitives all the time is extremely annoying?","msgtype":"m.text"},"ts":1441828745000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"how many methods are you shoving into this thing","msgtype":"m.text"},"ts":1441828749000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"nox: no, you only need one","msgtype":"m.text"},"ts":1441828751000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wut","msgtype":"m.text"},"ts":1441828754000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"do you even EWM?","msgtype":"m.text"},"ts":1441828761000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1441828768000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wycats: well, I was trying, but now you want a dependency on <base>","msgtype":"m.text"},"ts":1441828781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://extensiblewebmanifesto.org/","msgtype":"m.text"},"ts":1441828787000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"annevk: I think URL.platform() is a good solution","msgtype":"m.text"},"ts":1441828795000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: which just o_O (but bigger O) me","msgtype":"m.text"},"ts":1441828798000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the point of EWM is not to make everyone rebuild the whole platform all the time","msgtype":"m.text"},"ts":1441828817000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"mr. dalton can always publish lodash-url.js if the *.relativeURL() idea doesn't work out","msgtype":"m.text"},"ts":1441828822000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's to give you the primitives the platform uses in layers","msgtype":"m.text"},"ts":1441828823000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Sure, but the URL object already seem to have a different purpose than the others implementors of URLUtils.","msgtype":"m.text"},"ts":1441828837000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wycats: this object that is returned, would it also continue to observe the base URL if you change any of its properties? As <a> does?","msgtype":"m.text"},"ts":1441828852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wycats: which is rather magical (imo) behavior","msgtype":"m.text"},"ts":1441828865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For example, the other implementors never return failure in the href setter, URL does.","msgtype":"m.text"},"ts":1441828871000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wycats: and change whenever <base> changes? As <a> does?","msgtype":"m.text"},"ts":1441828887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you're taking me too literally, and nitpicking","msgtype":"m.text"},"ts":1441828888000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"annevk: unsure about that one","msgtype":"m.text"},"ts":1441828900000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Nitpicking about specs sounds on point.","msgtype":"m.text"},"ts":1441828907000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wycats: I'm just curious","msgtype":"m.text"},"ts":1441828908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think maybe yes if you .platform()","msgtype":"m.text"},"ts":1441828918000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"but via a host hook","msgtype":"m.text"},"ts":1441828925000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"the spec doesn't have to know","msgtype":"m.text"},"ts":1441828928000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"but no is also ok","msgtype":"m.text"},"ts":1441828942000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: well it gets rather complicated, since for DOM/HTML we need specific <base> changed notifications","msgtype":"m.text"},"ts":1441828952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but having to do a bunch of busywork to detect relative URLs is annoying","msgtype":"m.text"},"ts":1441828957000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: so you need to be able to get a base, and you need to take action when it changes","msgtype":"m.text"},"ts":1441828971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441828978000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"it's not critical","msgtype":"m.text"},"ts":1441828982000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"I don't literally mean it's the <a> tag","msgtype":"m.text"},"ts":1441828991000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Just don't detect them, and add a method on URLUtils that resolves a string against its url and returns a new URL.","msgtype":"m.text"},"ts":1441828996000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"what I basically mean is that it's: var div = document.createElement(\"div\"); div.innerHTML = `<a href=\"${url}\"></a>`; div.firstChild.href","msgtype":"m.text"},"ts":1441829027000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"that isn't live updated","msgtype":"m.text"},"ts":1441829040000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"but it does respect base","msgtype":"m.text"},"ts":1441829045000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: seems fairly reasonable; could even have URL.host(relativeURL) that varies per host","msgtype":"m.text"},"ts":1441829186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441829193000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"that's what I meant re: platform","msgtype":"m.text"},"ts":1441829199000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"host seems fine","msgtype":"m.text"},"ts":1441829200000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: and it's up to hosts to provide that method if they want to","msgtype":"m.text"},"ts":1441829201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wycats: and if URL ever becomes ES-ified it would likely not have .host()","msgtype":"m.text"},"ts":1441829216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1441829219000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1441829221000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"although if node wants it we might specify it as a hook with some basic requirements","msgtype":"m.text"},"ts":1441829235000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: sure","msgtype":"m.text"},"ts":1441829246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: No, pulling in global state does invalidate purity.","msgtype":"m.text"},"ts":1441829841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what does purity have to do with anything?","msgtype":"m.text"},"ts":1441831054000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: I'm just correcting Alex. Pure functions are easy to reason about, and purity *does* require no connection to mutable global state.","msgtype":"m.text"},"ts":1441831343000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes, can confirm","msgtype":"m.text"},"ts":1441831353000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"your window location isn't mutable","msgtype":"m.text"},"ts":1441831366000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"(for the purposes of a base URL)","msgtype":"m.text"},"ts":1441831378000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Yes it is!","msgtype":"m.text"},"ts":1441831383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it might as well be an environment variable","msgtype":"m.text"},"ts":1441831389000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"replaceState()","msgtype":"m.text"},"ts":1441831393000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it basically is an environment variable :P","msgtype":"m.text"},"ts":1441831400000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"so now you have a design decision: would you use the original to preserve \"purity\"?","msgtype":"m.text"},"ts":1441831417000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"...no, you use *neither* to preserve purity, *because it's global mutable state, and error-prone to depend on when you're not expecting it*.","msgtype":"m.text"},"ts":1441831452000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And window.location isn't even the thing that <a>.href works on.","msgtype":"m.text"},"ts":1441831473000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so we just covered why at least one of those statements is suspect","msgtype":"m.text"},"ts":1441831500000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"There's no particular reason to assume that a random URL used in a script *intends* to pay attention to a <base> element on the page.","msgtype":"m.text"},"ts":1441831504000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and symmetry with <a>.href is interesting!","msgtype":"m.text"},"ts":1441831515000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"The <a>.href behavior is almost certainly accidental, and I'd be completely unsurprised if it broke some pages accidentally and people had to work around it.","msgtype":"m.text"},"ts":1441831566000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It's clearly intentional for <a>; it's accidental for the general \"parse a url\" behavior.)","msgtype":"m.text"},"ts":1441831585000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's just so many contexts within the web platform that are totally reasonable to resolve a url against, that people work with every day.  I don't think there's any answer that is *sufficiently likely to be correct* that it can be set as the default.","msgtype":"m.text"},"ts":1441831764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I'm not all for purity in all cases; it's totally fine for, like, us to invent element constructors that imply a connection to the current script's document.  But that's almost certain to be right.)","msgtype":"m.text"},"ts":1441831824000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: http://stackoverflow.com/questions/25794905/why-does-set-e-true-false-true-not-exit","msgtype":"m.text"},"ts":1441834374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Why does set -e; true && false && true not exit?\"","msgtype":"m.text"},"ts":1441834387000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I remember now running into this before","msgtype":"m.text"},"ts":1441834409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's by design","msgtype":"m.text"},"ts":1441834438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"set -e is supposed to be only for \"uncaught\" exceptions","msgtype":"m.text"},"ts":1441834474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah...","msgtype":"m.text"},"ts":1441834483000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So use less &&s and more if, I guess?","msgtype":"m.text"},"ts":1441834493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1441834515000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or just switch back to  || exit 1","msgtype":"m.text"},"ts":1441834525000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is ugly but shell scripts are fundamentally ugly anyway","msgtype":"m.text"},"ts":1441834554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441834561000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yet somehow nothing is as good","msgtype":"m.text"},"ts":1441834569000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"worse is better\"","msgtype":"m.text"},"ts":1441834593000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I once tried to rewrite https://github.com/whatwg/streams/blob/master/deploy.sh in Node.js. Got like 10 lines in before I realized this was not going to be fun.","msgtype":"m.text"},"ts":1441834595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1441834614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441834633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm the same way with existing makefiles I have that I've tried to port to other task runners","msgtype":"m.text"},"ts":1441834666000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"always reach the point of \"just ain't gonna happen\"","msgtype":"m.text"},"ts":1441834691000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess it's just the fact that the shell lets you do pretty much anything","msgtype":"m.text"},"ts":1441834727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and other task runners really don't","msgtype":"m.text"},"ts":1441834736000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and makefiles are just ways to do anything you want with the shell as part of a build","msgtype":"m.text"},"ts":1441834791000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I guess we should leave it alone for a bit and let some actual other users help find where the odd failures are","msgtype":"m.text"},"ts":1441834860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this is not major stuff anyway, as far as making it easier to run and use","msgtype":"m.text"},"ts":1441834881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the major thing I would still hope we can fix soon is the XML::Parser install requirement","msgtype":"m.text"},"ts":1441834906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because that is just harsh","msgtype":"m.text"},"ts":1441834913000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes agreed","msgtype":"m.text"},"ts":1441834948000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder if python comes with xml parser by default","msgtype":"m.text"},"ts":1441834956000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah I think it does","msgtype":"m.text"},"ts":1441834968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bindings to libxml2","msgtype":"m.text"},"ts":1441834975000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is libxml2 installed by default though","msgtype":"m.text"},"ts":1441834988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders or maybe even TabAtkins would know better","msgtype":"m.text"},"ts":1441834988000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1441834994000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, yeah, maybe not","msgtype":"m.text"},"ts":1441835004000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think for now we could be OK just putting the cldr.inc file on whatwg.org somewhere and just manually re-generating/updating it when the upstream Unicode stuff changes","msgtype":"m.text"},"ts":1441835088000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"either that or like I mentioned we could just check it into the repo","msgtype":"m.text"},"ts":1441835109000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was surprised to see that it's only 25K","msgtype":"m.text"},"ts":1441835126000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i mean we *could* set up another build server endpoint like we did with wattsi","msgtype":"m.text"},"ts":1441835165000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah but it might be overkill for this, to rebuild it each time for each user","msgtype":"m.text"},"ts":1441835193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tries to read scrollback","msgtype":"m.emote"},"ts":1441835209000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"not a good use of bandwith I think","msgtype":"m.text"},"ts":1441835213000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the back-and-forth","msgtype":"m.text"},"ts":1441835223000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1441835229000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it is worth if for the wattsi case, clearly","msgtype":"m.text"},"ts":1441835251000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hola tantek","msgtype":"m.text"},"ts":1441835262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we talking about the build script for the HTML spec","msgtype":"m.text"},"ts":1441835275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yay spec plumbing","msgtype":"m.text"},"ts":1441835307000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"bows to the hardwork y'all put into that.","msgtype":"m.emote"},"ts":1441835315000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Domenic: there's multiple xml parsers!","msgtype":"m.text"},"ts":1441835428000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah it's fun to write stuff to try to make things as easy as possible for other people","msgtype":"m.text"},"ts":1441835429000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: https://docs.python.org/3/library/xml.html#module-xml","msgtype":"m.text"},"ts":1441835472000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"admires Domenic's relentlesseness towards clearing away as many hurdles as possible for others","msgtype":"m.emote"},"ts":1441835546000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":) you did most of the hard work on this one","msgtype":"m.text"},"ts":1441835579000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anyway for now I think I'll instead try to spend my free time tonight/tomorrow making a couple actual patches/contributions/PRs to the spec","msgtype":"m.text"},"ts":1441835619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"get some of the remaining low-hanging fruit picked","msgtype":"m.text"},"ts":1441835639000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: well this is just a scary page full of scary things.","msgtype":"m.text"},"ts":1441835653000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I should go down to the Apple store and run some tests on clean macs to see if any of these python xml things work out of the box","msgtype":"m.text"},"ts":1441835694000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: you want either xml.etree.cElementTree or lxml (not in stdlib)","msgtype":"m.text"},"ts":1441835696000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"eventually I guess we're going to run out of the low-hanging fruit and it'll be like waking up with a bad hangover, staring at the list of remaining bugzilla bugs","msgtype":"m.text"},"ts":1441835722000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: unless you need a streaming parser","msgtype":"m.text"},"ts":1441835725000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders:  xml.etree.cElementTree sounds reasonable","msgtype":"m.text"},"ts":1441835741000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders: what streaming parser is there?","msgtype":"m.text"},"ts":1441835742000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: incidentally, do you know how I can pass namespaceHTMLElements=False to the lxml html5parser?","msgtype":"m.text"},"ts":1441835847000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: xml.sax or xml.parsers.expat","msgtype":"m.text"},"ts":1441835877000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1441835884000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I suspect it should work, I don't know","msgtype":"m.text"},"ts":1441835888000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: lxml has a streaming one too","msgtype":"m.text"},"ts":1441835894000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah I was thinking HTML parser and had forgotten that the subject at hand is XML parsing","msgtype":"m.text"},"ts":1441835934000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: about namespaceHTMLElements=False, in that bug he makes it sound like it's sorta obvious how to do it. but I don't see where it's exposed","msgtype":"m.text"},"ts":1441836017000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I need to read the docs more","msgtype":"m.text"},"ts":1441836024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: gimme a few mins","msgtype":"m.text"},"ts":1441836099000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that guy is somewhat Ms2ger/annevk-ish with regard to the brevity and enigmatic nature of some of his responses","msgtype":"m.text"},"ts":1441836100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1441836103000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, he's like that IRL too :)","msgtype":"m.text"},"ts":1441836111000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah you met him","msgtype":"m.text"},"ts":1441836128000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"would be nice to meet him some time. I guess he's in Germany somewhere?","msgtype":"m.text"},"ts":1441836151000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"suspects that Domenic is thinking about re-writing one of Hixie's perl scripts in python, hands him a box of tissue in preparation for the tears he's going to need to spend time wiping away","msgtype":"m.emote"},"ts":1441836264000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yepppp","msgtype":"m.text"},"ts":1441836309000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: yeah, forget where","msgtype":"m.text"},"ts":1441836398000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: often at EuroPython","msgtype":"m.text"},"ts":1441836405000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"y'all #whatwg python mavens make me want to be a better python hacker. I actually really like writing in python more than any other language, but I do very little of it","msgtype":"m.text"},"ts":1441836592000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"libxml2 is *not* installed by default. >_<","msgtype":"m.text"},"ts":1441837795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But anyone willing to install Bikeshed has it. ^_^","msgtype":"m.text"},"ts":1441837820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: Like `doc = html5lib.parse(text, treebuilder='lxml', namespaceHTMLElements=False)`","msgtype":"m.text"},"ts":1441837887000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I mean lxml interface to it","msgtype":"m.text"},"ts":1441837943000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, dunno how html5lib invokes the lxml parser.","msgtype":"m.text"},"ts":1441837965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://lxml.de/html5parser.html","msgtype":"m.text"},"ts":1441837972000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I know how (I even made a PR to patch the lxml sources) but I just don't see where it exposes it","msgtype":"m.text"},"ts":1441838025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"resorts to re-reading teh sources","msgtype":"m.emote"},"ts":1441838196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: ↓","msgtype":"m.text"},"ts":1441840693000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"$ cat test.py","msgtype":"m.text"},"ts":1441840697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from lxml.html import html5parser, tostring","msgtype":"m.text"},"ts":1441840698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"parser = html5parser.HTMLParser(namespaceHTMLElements=False)","msgtype":"m.text"},"ts":1441840698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"print tostring(html5parser.fromstring(\"<html>\", parser))","msgtype":"m.text"},"ts":1441840698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"$ python test.py","msgtype":"m.text"},"ts":1441840716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<html:html xmlns:html=\"http://www.w3.org/1999/xhtml\"><html:head></html:head><html:body></html:body></html:html>","msgtype":"m.text"},"ts":1441840717000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: hmm, okay, maybe not","msgtype":"m.text"},"ts":1441841959000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: that should work, I thought?","msgtype":"m.text"},"ts":1441842017000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and it looks like it should work","msgtype":"m.text"},"ts":1441842034000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"given **kwargs are passed through","msgtype":"m.text"},"ts":1441842051000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is there a simple and reliable way to defer code execution until after window-onload if you don't know whether that event has happened already?","msgtype":"m.text"},"ts":1441842350000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"MikeSmith: I'd think that would work, yeah. Confusing.","msgtype":"m.text"},"ts":1441842361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can't for the life of me figure it out, short of polling performance.timing.loadEventEnd","msgtype":"m.text"},"ts":1441842381000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: In the ideal future, we'll have a .ready() promise on document that reflects the onload event.","msgtype":"m.text"},"ts":1441842384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is why events are not the correct abstraction for single-occurence things.","msgtype":"m.text"},"ts":1441842417000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441842424000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I want jQuery document.ready for window.onload","msgtype":"m.text"},"ts":1441842439000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"basically","msgtype":"m.text"},"ts":1441842441000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I would settle for a simple way to know whether it's \"safe\" to add an event listener to window.onload (e.g. has it already started), and then know to either schedule or inoke callback now","msgtype":"m.text"},"ts":1441842537000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I just realised today that a fair number of Navigation Timing metrics werent' being delivered from browser clients using Wikipedia because the event logging code used window.onload","msgtype":"m.text"},"ts":1441842687000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"which sometimes had already happened :facepalm:","msgtype":"m.text"},"ts":1441842693000,"senderName":"Krinkle","senderId":"Krinkle@irc"}
]