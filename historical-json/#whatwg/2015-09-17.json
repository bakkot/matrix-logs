[
{"content":{"body":"heycam: If you're around, I have what I hope is a related to WebIDL use in the HTML spec that should be quick to answer","msgtype":"m.text"},"ts":1442469543000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, hi! sure.","msgtype":"m.text"},"ts":1442469555000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: ok, in https://html.spec.whatwg.org/multipage/infrastructure.html#safe-passing-of-structured-data","msgtype":"m.text"},"ts":1442469568000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or more specifically in https://html.spec.whatwg.org/multipage/infrastructure.html#internal-structured-cloning-algorithm","msgtype":"m.text"},"ts":1442469587000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the If input is an Object object","msgtype":"m.text"},"ts":1442469601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the \"If input is an Object object\" case","msgtype":"m.text"},"ts":1442469609000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that should in fact be uppercase \"Object\", right?","msgtype":"m.text"},"ts":1442469641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean it's right as-is","msgtype":"m.text"},"ts":1442469653000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it should not be lowercase \"object\"","msgtype":"m.text"},"ts":1442469665000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, yes, I think it's right to be Object","msgtype":"m.text"},"ts":1442469678000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since below that it says that those names are used to check against [[Class]]","msgtype":"m.text"},"ts":1442469688000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1442469696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mind you, [[Class]] doesn't exist any more in ES6","msgtype":"m.text"},"ts":1442469718000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"lemme check I think there is once more instance I wanted to conform","msgtype":"m.text"},"ts":1442469720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1442469723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will we have to update the HTML spec then?","msgtype":"m.text"},"ts":1442469741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with regard to that","msgtype":"m.text"},"ts":1442469744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, it should.","msgtype":"m.text"},"ts":1442469787000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"wonders what to","msgtype":"m.emote"},"ts":1442469790000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I have loose language in the IDL spec like \"if V is a Dat object, ...\"","msgtype":"m.text"},"ts":1442469818000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*Date","msgtype":"m.text"},"ts":1442469821000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but I need to make that more precise","msgtype":"m.text"},"ts":1442469831000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hmm yah","msgtype":"m.text"},"ts":1442469836000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring does checking for particular internal slots, to determine what to return from Object.prototype.toString","msgtype":"m.text"},"ts":1442469877000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1442469897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so to the extent that we need to do type checking of JS objects, maybe we should have some common definition that does the same checks","msgtype":"m.text"},"ts":1442469928000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah that would seem to make sense","msgtype":"m.text"},"ts":1442469949000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"another point is that newer objects like Map and Set get their appropriate Object.prototype.toString value from their @@toStringTag property","msgtype":"m.text"},"ts":1442470009000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1442470033000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so specific checks like for [[MapData]] might be warranted there","msgtype":"m.text"},"ts":1442470062000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan: do you not have Wattsi setup?","msgtype":"m.text"},"ts":1442470065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: ah ok","msgtype":"m.text"},"ts":1442470080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wait wat is a \"exotic String object\"","msgtype":"m.text"},"ts":1442470099000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then for all of the IDL-interface-typedef things, like ImageData, it's sufficient just to say \"if input is an ImageData object\"","msgtype":"m.text"},"ts":1442470101000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"as the IDL spec assumes that we can tell that an object is a platform object implementing a particular IDL interface","msgtype":"m.text"},"ts":1442470122000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ah yeah I see, that would be preferable","msgtype":"m.text"},"ts":1442470124000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1442470129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but yeah a single algorithm \"if an X is a Y object\" that does all that would be helpful","msgtype":"m.text"},"ts":1442470148000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"MikeSmith: so I think we want to move structured cloning into IDL...","msgtype":"m.text"},"ts":1442470180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I support any plan that pushes all the hard work to the WebIDL spec","msgtype":"m.text"},"ts":1442470184000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: since it's an ECMAScript extension in part it doesn't really fit well in HTML","msgtype":"m.text"},"ts":1442470195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I think there is a note about that somewhere","msgtype":"m.text"},"ts":1442470201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1442470208000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"probably makes sense yeah","msgtype":"m.text"},"ts":1442470236000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: in the mean time it would be nice to clear away as many of the XXX comments in the source as we can. It's a minor thing but to me at least it's not very helpful to have the build just spit that list out at end every single time","msgtype":"m.text"},"ts":1442470293000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because in practice we then just ignore that list","msgtype":"m.text"},"ts":1442470314000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I would accept a PR that changes them to \"TODO\"","msgtype":"m.text"},"ts":1442470316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK well then the disappear completely and we never get back to fixing them","msgtype":"m.text"},"ts":1442470349000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: my understanding is that XXX can be used while making edits, it should not be used for things that end up in a commit","msgtype":"m.text"},"ts":1442470353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1442470361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: we should probably track TODO separately somehow, or file issues on them","msgtype":"m.text"},"ts":1442470376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK well then I would like to fix/remove the existing XXX ones that we can fix/remove, then after that, change the remaining ones to TODOs","msgtype":"m.text"},"ts":1442470427000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can make a PR for that","msgtype":"m.text"},"ts":1442470440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: and maybe I can for that PR just make an xxx-removal branch, and then everybody reviews the existing XXX things and we all just push changes to the branch for any we have information for that we can resolve","msgtype":"m.text"},"ts":1442470596000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all work off the same branch","msgtype":"m.text"},"ts":1442470604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK>","msgtype":"m.text"},"ts":1442470642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK?","msgtype":"m.text"},"ts":1442470649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sure","msgtype":"m.text"},"ts":1442470721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: got distracted, but that seems totally fine","msgtype":"m.text"},"ts":1442470751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, haven't attempted yet","msgtype":"m.text"},"ts":1442470772000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that might be a good idea, especially when supplying patches that are more than a typo fix","msgtype":"m.text"},"ts":1442470841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes :-)","msgtype":"m.text"},"ts":1442470881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: several of those existing XXX comments seem to be in the source of the image section","msgtype":"m.text"},"ts":1442473709000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah","msgtype":"m.text"},"ts":1442474290000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: so yeah, I looked at that Object thing and fixing it is kind of a rabbit hole","msgtype":"m.text"},"ts":1442475544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I would be okay with just removing the XXX thing though and filing an issue on structured cloning","msgtype":"m.text"},"ts":1442475569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aok","msgtype":"m.text"},"ts":1442475943000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: btw, if I want to update Wattsi, what do I do? Just run build.sh and hope for the best?","msgtype":"m.text"},"ts":1442475953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: is DEFINES=\"-dUSEROPES -dLINES -dPARSEERROR -Px86_64\" still needed with your fix?","msgtype":"m.text"},"ts":1442475988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah it should just (re)compile. If it doesn't then that's a bug on whoever made the change that broke its build","msgtype":"m.text"},"ts":1442476125000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you can drop -Px86_64 now","msgtype":"m.text"},"ts":1442476136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so one thing that would be great for you to host would be the email archives...","msgtype":"m.text"},"ts":1442476147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: that would substantially improve the status quo, though might be tricky","msgtype":"m.text"},"ts":1442476179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if we host the email archives we want it at the some domain, no?","msgtype":"m.text"},"ts":1442476230000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I know we could rewrite the URLs","msgtype":"m.text"},"ts":1442476253000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, ideally everything the same","msgtype":"m.text"},"ts":1442476355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: since DreamHost doesn't provide us with HTTPS, lists.whatwg.org is basically broken","msgtype":"m.text"},"ts":1442476374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I could host something experimentally first, either under https://sideshowbarker.net/ or I get another domain and cert","msgtype":"m.text"},"ts":1442476526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or we transfer DNS for some domain to a host I get set up","msgtype":"m.text"},"ts":1442476541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or subdomain of what.org","msgtype":"m.text"},"ts":1442476563000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah yeah, so if we could do that for lists.whatwg.org yeah","msgtype":"m.text"},"ts":1442476579000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the other thing is, we'd want to decide on what e-mail archiving software we want to use","msgtype":"m.text"},"ts":1442476631000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"whatwg/wattsi no longer being a fork made that somewhat hard","msgtype":"m.text"},"ts":1442476677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rather than the old-fashioned one we had before, and the mailman thing or whatever it is that we have a w3c","msgtype":"m.text"},"ts":1442476683000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if we use different software we'd have to setup redirects and such, no?","msgtype":"m.text"},"ts":1442476706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah you mean for the existing archives too","msgtype":"m.text"},"ts":1442476724000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah we would I guess","msgtype":"m.text"},"ts":1442476731000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sounds painful","msgtype":"m.text"},"ts":1442476737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1442476743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm not opposed, but I'm not sure how complicated you'd want to make this","msgtype":"m.text"},"ts":1442476750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, I didn't understand what the goal was","msgtype":"m.text"},"ts":1442476763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"basically to get lists.whatwg.org on the HTTPS train","msgtype":"m.text"},"ts":1442476789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the goal is to make the existing URLs to the archive actually work again I can definitely host that","msgtype":"m.text"},"ts":1442476800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1442476806000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that's do-able","msgtype":"m.text"},"ts":1442476811000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> annevk: whatwg/wattsi no longer being a fork made that somewhat hard","msgtype":"m.text"},"ts":1442476862000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but you got it worked out OK?","msgtype":"m.text"},"ts":1442476870000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, just deleted what I had and then did it again","msgtype":"m.text"},"ts":1442476885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1442476889000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway right my biggest priority is that I want to get the changes to the build script landed","msgtype":"m.text"},"ts":1442476933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then I will return to greater sanity and can think clearly about other stuff","msgtype":"m.text"},"ts":1442476960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"spending a lot of time writing bash/shell script stuff kind of messes with one's mind","msgtype":"m.text"},"ts":1442477088000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, this has no priority whatsoever, just seemed like a good task to sort out first, since that is actually something that is broken with our current server setup","msgtype":"m.text"},"ts":1442477089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah agreed","msgtype":"m.text"},"ts":1442477097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it will be cheaper and simpler to deploy come November of course","msgtype":"m.text"},"ts":1442477129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as the cert setup","msgtype":"m.text"},"ts":1442477137000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, hopefully that works out well","msgtype":"m.text"},"ts":1442477161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it will. They met their goal for this month and seem to be on track with the plans for Nov","msgtype":"m.text"},"ts":1442477197000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: would be great if we could migrate 1H of next year to avoid having to do the dance again, certificate lasts until July 2016 or so","msgtype":"m.text"},"ts":1442477201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1442477212000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And I somewhat doubt DreamHost will have Let's Encrypt integration anytime soon, but who knows","msgtype":"m.text"},"ts":1442477244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah true","msgtype":"m.text"},"ts":1442477251000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so about that, anyway in general, I do not find it painful or onerous to maintain a full system from a VM with root","msgtype":"m.text"},"ts":1442477361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I've run my own sites that way for long years now, including running an MTA (exim4), which is about as hairy as it gets","msgtype":"m.text"},"ts":1442477402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: hmmm, img-environment-changes should have initiator \"imageset\" probably","msgtype":"m.text"},"ts":1442477441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so if/when were to decide to move away from Dreamhost to running it all on a VM I think it could be manageable and I would be OK taking responsiblity for keeping it running and dealing with outages and what-not","msgtype":"m.text"},"ts":1442477477000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: did I cause a regression?","msgtype":"m.text"},"ts":1442477499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, the old text didn't mention it in that algorithm. i can file a new bug","msgtype":"m.text"},"ts":1442477622000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/159","msgtype":"m.text"},"ts":1442477822000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: unless there's anything else I'll merge https://github.com/whatwg/html/commit/5ce1250e9832f2ae6fed4b6e8151a39be2a6dd78 into master","msgtype":"m.text"},"ts":1442477862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: LGTM","msgtype":"m.text"},"ts":1442477899000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, you'll have to close the issues manually, btw","msgtype":"m.text"},"ts":1442477970000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah I know","msgtype":"m.text"},"ts":1442477979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I never made time to review it but will post-merge (on the off chance I notice something that nobody else noticed yet)","msgtype":"m.text"},"ts":1442478037000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thank you","msgtype":"m.text"},"ts":1442478222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: there is definitely things left to fix, in particular wording around response handling can be much improved still","msgtype":"m.text"},"ts":1442478247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well for now it's really nice to have that landed","msgtype":"m.text"},"ts":1442478285000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":">23500 occurrences of \"<code\"","msgtype":"m.text"},"ts":1442478681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That makes annotating strings and byte sequences a little more involved than I hoped for","msgtype":"m.text"},"ts":1442478705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well this is not something I expected to see today: https://bugzilla.mozilla.org/show_bug.cgi?id=1205391","msgtype":"m.text"},"ts":1442479507000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it's amusing how much senior engineers \"spam\" attracts","msgtype":"m.text"},"ts":1442480000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems Fetch can't escape the jokes: https://twitter.com/kevinmarks/status/644430480364802048 https://twitter.com/maybekatz/status/643690173486620672","msgtype":"m.text"},"ts":1442480928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not even sure whether I've seen that movie","msgtype":"m.text"},"ts":1442480935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's a powerful reference","msgtype":"m.text"},"ts":1442481045000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I haven't seen it, but I feel like I have now","msgtype":"m.text"},"ts":1442481197000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heycam|away: https://www.w3.org/Bugs/Public/show_bug.cgi?id=28765 seems bogus, but I'm not sure...","msgtype":"m.text"},"ts":1442482818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: do you know?","msgtype":"m.text"},"ts":1442482822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: you perhaps?","msgtype":"m.text"},"ts":1442482828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems Ms2ger didn't want to help","msgtype":"m.text"},"ts":1442482969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1442483427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, sup?","msgtype":"m.text"},"ts":1442484499000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, seems like it could make sense if we're ever going to add more prefixed attributes to WorkerGlobalScope","msgtype":"m.text"},"ts":1442484919000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: can you explain to me how they're different?","msgtype":"m.text"},"ts":1442487456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, how what's different?","msgtype":"m.text"},"ts":1442487569000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: using implements vs inheritance for a global","msgtype":"m.text"},"ts":1442487639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Inherited attributes aren't \"own\"","msgtype":"m.text"},"ts":1442487734000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So `var location = location` in a worker creates a shadowing own property initialized to undefined, and then sets it to itself","msgtype":"m.text"},"ts":1442487807000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://heycam.github.io/webidl/#Global in step 2 it says consequential interfaces which includes inherited interfaces","msgtype":"m.text"},"ts":1442487969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Really?","msgtype":"m.text"},"ts":1442487987000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think A is a consequential interface of A","msgtype":"m.text"},"ts":1442488044000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, I guess not, that seems somewhat confusing","msgtype":"m.text"},"ts":1442488089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No opinion on whether it should","msgtype":"m.text"},"ts":1442488136000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: do you know how Gecko's worker setup works?","msgtype":"m.text"},"ts":1442492775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: fixing the base URL thing is somewhat complicated since the specification sets up the environment before it actually starts fetching...","msgtype":"m.text"},"ts":1442492798000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, vaguely. Have you seen khuey's presentation?","msgtype":"m.text"},"ts":1442492874000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don't think it goes into this from memory, but it's been a while","msgtype":"m.text"},"ts":1442492895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://mxr.mozilla.org/mozilla-central/ident?i=GetOrCreateGlobalScope may point to related code?","msgtype":"m.text"},"ts":1442493002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://www.w3.org/TR/workers/ o_O","msgtype":"m.text"},"ts":1442494308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does anyone know if ReadableStream can be used to acheive what is described in this writeup? http://maxogden.com/a-proposal-for-streaming-xhr.html","msgtype":"m.text"},"ts":1442494379000,"senderName":"slvrbckt","senderId":"slvrbckt@irc"},
{"content":{"body":"slvrbckt: I think so, yes","msgtype":"m.text"},"ts":1442494495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I have a way to rewrite this worker thing... Not entirely sure it won't crash anything though","msgtype":"m.text"},"ts":1442494608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" annevk: I'm having a hard time finding any good documentation on using ReadableStream, do you know of any good introductions to using it with large file downloads in the browser?","msgtype":"m.text"},"ts":1442494683000,"senderName":"slvrbckt","senderId":"slvrbckt@irc"},
{"content":{"body":"slvrbckt: does https://jakearchibald.com/2015/thats-so-fetch/#streams help?","msgtype":"m.text"},"ts":1442494740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that does help, it's centered about text data, but I think it shouldn't be too hard to translate that to dealing with binary data","msgtype":"m.text"},"ts":1442495054000,"senderName":"slvrbckt","senderId":"slvrbckt@irc"},
{"content":{"body":"Ms2ger: so the way Hixie designed this basically requires overwriting the URL of the setting object later on...","msgtype":"m.text"},"ts":1442495155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: since a MessagePort object needs to be associated with a settings object upon creation","msgtype":"m.text"},"ts":1442495169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: and presumably MessagePorts need to be entangled before being handed back","msgtype":"m.text"},"ts":1442495187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so you would either have to try to unravel all that or do this quick hack...","msgtype":"m.text"},"ts":1442495211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh, MessagePorts","msgtype":"m.text"},"ts":1442495211000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There's also a bug in the spec where it entangles the MessagePort with the global object rather than the settings object","msgtype":"m.text"},"ts":1442495240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's why I thought I could fix it initially, by just creating the settings object later","msgtype":"m.text"},"ts":1442495253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I think rigo just advertized self-signed certificates on public-webappsec...","msgtype":"m.text"},"ts":1442495306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: will that list get moderation at some point?","msgtype":"m.text"},"ts":1442495323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so... shared workers and redirects, how does that work?","msgtype":"m.text"},"ts":1442497287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: each time I get close to solving this, another problem pops up","msgtype":"m.text"},"ts":1442497303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what kind of redirects?  worker scripts are restricted to same-origin, right?","msgtype":"m.text"},"ts":1442497514000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sure","msgtype":"m.text"},"ts":1442497542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: say you have /a/ redirecting to /b/, what is the base URL?","msgtype":"m.text"},"ts":1442497574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: what does new SharedWorker(\"/a/\") vs new SharedWorker(\"/b/\") do (and combinations on that theme)","msgtype":"m.text"},"ts":1442497596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, ok","msgtype":"m.text"},"ts":1442497606000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Not really, it all looks ind of broken :-)","msgtype":"m.text"},"ts":1442497637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yeah","msgtype":"m.text"},"ts":1442497730000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Let me quote from my lists of things to write tests for","msgtype":"m.text"},"ts":1442497754000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SharedWorker","msgtype":"m.text"},"ts":1442497754000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"  > If worker global scope's location attribute represents an absolute URL","msgtype":"m.text"},"ts":1442497755000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"  > that is not exactly equal to scriptURL, then throw a URLMismatchError","msgtype":"m.text"},"ts":1442497755000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"  > exception and abort all these steps.","msgtype":"m.text"},"ts":1442497755000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"  new SharedWorker(\"x\"); new SharedWorker(\"x\"); with x redirecting to y","msgtype":"m.text"},"ts":1442497755000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: the whole WorkerLocation concept is kind of hand wavy designed too","msgtype":"m.text"},"ts":1442497839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It does mention \"after redirects\", though, doesn't it?","msgtype":"m.text"},"ts":1442497869000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: sure, but nowhere is it actually set","msgtype":"m.text"},"ts":1442497891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1442497907000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Par for the course :)","msgtype":"m.text"},"ts":1442497911000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it seems you get distinct instances https://dump.testsuite.org/worker/sharedworker.html","msgtype":"m.text"},"ts":1442498584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lovely","msgtype":"m.text"},"ts":1442498621000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not very surprising, but still","msgtype":"m.text"},"ts":1442498626000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: maybe I should wait creating a new one until I get something back, see what happens then","msgtype":"m.text"},"ts":1442498636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh, hadn't even though about that","msgtype":"m.text"},"ts":1442498699000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: doesn't seem to matter","msgtype":"m.text"},"ts":1442499486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: how can you even get a URLMismatchError?","msgtype":"m.text"},"ts":1442499601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, through the name property","msgtype":"m.text"},"ts":1442499884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good morning/afternoon/evening WHATWG crew o/","msgtype":"m.text"},"ts":1442499915000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"I wonder if we should just pull in the WebSocket API spec","msgtype":"m.text"},"ts":1442500341000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you mean protocol?","msgtype":"m.text"},"ts":1442500360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can't type","msgtype":"m.text"},"ts":1442500415000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1442500417000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So Chromium does use the URLMismatchError, Gecko just keeps spawning workers","msgtype":"m.text"},"ts":1442500460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://dump.testsuite.org/worker/sharedworker-name.html","msgtype":"m.text"},"ts":1442500465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought we had tests for this stuff?","msgtype":"m.text"},"ts":1442500469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome supports SharedWorker?","msgtype":"m.text"},"ts":1442500484000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Mind you, Chromium only does it when the name property is used.)","msgtype":"m.text"},"ts":1442500490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1442500491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But Chrome does key on the \"scriptURL\", not the final URL","msgtype":"m.text"},"ts":1442500768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So that location attribute mess has to go","msgtype":"m.text"},"ts":1442500784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: what does Servo do?","msgtype":"m.text"},"ts":1442501021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We don't have SharedWorkers","msgtype":"m.text"},"ts":1442501041000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think I can make the PR for this today :-/ But I'll try to write something up tomorrow","msgtype":"m.text"},"ts":1442501055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also no script settings stuff","msgtype":"m.text"},"ts":1442501057000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I have an alternate solution for the environment settings object stuff","msgtype":"m.text"},"ts":1442501085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds good :)","msgtype":"m.text"},"ts":1442501095000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Just have the environment settings object's API base URL and creation URL return some internal slot from the global","msgtype":"m.text"},"ts":1442501119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1442501138000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is trying to remember why we don't want the page URL to update when a navigation is intercepted by a SW.","msgtype":"m.emote"},"ts":1442504121000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: because I might respond with caches.match('/static/page-shell-7bfab2c.html')","msgtype":"m.text"},"ts":1442505171000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"This is what https://wiki-offline.jakearchibald.com/ does","msgtype":"m.text"},"ts":1442505189000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://github.com/jakearchibald/offline-wikipedia/blob/master/public/js/sw/index.js#L82","msgtype":"m.text"},"ts":1442505247000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you could make that a synthetic response with no Response.url","msgtype":"m.text"},"ts":1442505282000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I could… but it's a bit messy","msgtype":"m.text"},"ts":1442505329000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Either I get shell from the cache, read the text & create a new reponse with it - which loses streaming","msgtype":"m.text"},"ts":1442505389000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or at install time, I fetch the shell, read it as text, and construct a new response with it to cache","msgtype":"m.text"},"ts":1442505417000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1442505459000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: well, I guess thats not the case I was thinking of... I was thinking of allowing opaque responses but making the page URL update","msgtype":"m.text"},"ts":1442505498000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"instead of rejecting opaque responses","msgtype":"m.text"},"ts":1442505504000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Allowing opaque responses breaks SOP one way or another","msgtype":"m.text"},"ts":1442505550000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I retain control of the page, I now hear about requests I shouldn't be able to hear about","msgtype":"m.text"},"ts":1442505593000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I don't retain control, that's just a redirect isn't it?","msgtype":"m.text"},"ts":1442505608000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how is updating the navigation final URL to match the opaque response URL different from a navigation following no-cors cross origin redirects?","msgtype":"m.text"},"ts":1442505610000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I'm asking why we can't treat it like a redirect","msgtype":"m.text"},"ts":1442505628000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I'm just annoyed because the special cases for navigations keep changing: https://github.com/whatwg/fetch/issues/126","msgtype":"m.text"},"ts":1442505690000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: As in, fetch would generate a redirect to the opaqueResponse.url, then that would go up to the navigate level, change the browser url, then call fetch, which would respond with the opaqueResponse again but unopaqued because the origin is now the same?","msgtype":"m.text"},"ts":1442506774000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: fwiw, I did finally implement most of UTS #46 in JS","msgtype":"m.text"},"ts":1442506827000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"Now do the same in Rust","msgtype":"m.text"},"ts":1442506871000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: as in the navigation algorithm in http would act as if it had already been redirected Response.url when given an opaque response","msgtype":"m.text"},"ts":1442506874000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: but it would only do this for opaque responses, or all responses?","msgtype":"m.text"},"ts":1442506920000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ignoring the navigation part here... this is in fact how we plan to implement opaque response tainting in gecko","msgtype":"m.text"},"ts":1442506928000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: no, because I suspect the people who work on Servo would want support for the bidi and contextual rules and I don't want to touch those with a 20 perch pole","msgtype":"m.text"},"ts":1442506938000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"JakeA: well, I was originally suggesting for all responses, but I guess it could just do it for opaque responses... if we defined opaque response tainting like this in general","msgtype":"m.text"},"ts":1442506974000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jtcranmer: I saw, haven't had time to look at it, but cool","msgtype":"m.text"},"ts":1442507026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it seems weird for a non-redirect response to become a redirect… what does this improve?","msgtype":"m.text"},"ts":1442507164000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: it even passes the IDNA test vector suite! well, except for all the tests that require bidi/contextual to be an error","msgtype":"m.text"},"ts":1442507196000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"(and, to be fair, those are the tests where UTS #46 is not following the RFC)","msgtype":"m.text"},"ts":1442507217000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"JakeA: it lets us keep the simple \"opaque responses are ok for no-cors requests\" and lets use make navigations \"no-cors\" requests","msgtype":"m.text"},"ts":1442507279000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I haven't gotten my head around the navigation no-cors thing yet","msgtype":"m.text"},"ts":1442507368000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I dislike having special extra rules for navigations that developers have to be aware of...","msgtype":"m.text"},"ts":1442507401000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we should express the difference in navigations in the primitives we've defined... or come up with better primitives","msgtype":"m.text"},"ts":1442507428000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I agree with that, but opaque responses turning into redirects for navigations seems like a specialer rule than \"navigation responses cannot be opaque\"","msgtype":"m.text"},"ts":1442507522000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess I would find it easier to express if we had a no-cors-navigation RequestMode","msgtype":"m.text"},"ts":1442507653000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: can't you infer this from request's destination?","msgtype":"m.text"},"ts":1442507751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe, but how many attributes to we expect developers to check?","msgtype":"m.text"},"ts":1442507864000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: annevk: more realistically, do we expect this to work for navigations?  e.respondWith(fetch(e.request))","msgtype":"m.text"},"ts":1442507882000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"because its not going to if e.request.url is cross origin","msgtype":"m.text"},"ts":1442507892000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"That won't happen","msgtype":"m.text"},"ts":1442507902000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it won't?  why not?","msgtype":"m.text"},"ts":1442507916000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"If it's a cross origin navigation it'll go to the SW for the scope on the destination origin","msgtype":"m.text"},"ts":1442507934000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1442507941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: btw, sorry for not asking earlier, but are you looking for help with the whatwg/html-build PRs?","msgtype":"m.text"},"ts":1442508029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I'm not great with shell, but I can test stuff...","msgtype":"m.text"},"ts":1442508044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1442508206000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: annevk: I guess the problem I am struggling with is RequestMode seems to be acting as our security policy... and but we're polluting that by making it conditional on another attribute","msgtype":"m.text"},"ts":1442508270000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyone know the history of navigator.productSub ?","msgtype":"m.text"},"ts":1442508290000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"but I give up","msgtype":"m.text"},"ts":1442508300000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/webappapis.html#the-navigator-object lists navigator.product as the constant \"Gecko\" but doesn't say productsub","msgtype":"m.text"},"ts":1442508307000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"wanderview: you would prefer mode = navigate?","msgtype":"m.text"},"ts":1442508313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: note that we already had a check for navigation requests","msgtype":"m.text"},"ts":1442508354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: for \"opaqueredirect\"","msgtype":"m.text"},"ts":1442508361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know... that seems unnecessary though... why block fetch() from getting opaqueredirect?","msgtype":"m.text"},"ts":1442508381000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in my chrome navigator.productSub is \"20030107\" and in my firefox it is \"20100101\"","msgtype":"m.text"},"ts":1442508399000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"wanderview: sigh, I thought we discussed that?","msgtype":"m.text"},"ts":1442508408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would take me a while to remember the arguments again...","msgtype":"m.text"},"ts":1442508417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we did... i thought you said \"better to be conservative for now\"","msgtype":"m.text"},"ts":1442508426000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I thought I also pointed out some issues","msgtype":"m.text"},"ts":1442508437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: like the fact that you can't reenter the SW after seeing such a response","msgtype":"m.text"},"ts":1442508468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: which would be inconsistent with other redirects you get from the SW","msgtype":"m.text"},"ts":1442508485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I would prefer a different RequestMode to express the specialness of navigations","msgtype":"m.text"},"ts":1442508516000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: anyway, a mode = navigate could handle both of those","msgtype":"m.text"},"ts":1442508519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what do you think? ^^","msgtype":"m.text"},"ts":1442508550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have to go get lunch","msgtype":"m.text"},"ts":1442508583000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jamesr___: \"productSub: Mozilla and Safari only; returns same as buildID in Mozilla, and returns the fixed string \"20030107\" in Safari\" is what a comment says in the source","msgtype":"m.text"},"ts":1442508586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I will be less whiny after eating","msgtype":"m.text"},"ts":1442508594000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jamesr___: I guess Gecko picked a different time to freeze it","msgtype":"m.text"},"ts":1442508632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: UI Events taking over EventTarget et al is back :-(","msgtype":"m.text"},"ts":1442508746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's no rush on those build PRs. I'm happy just waiting til Domenic has time again","msgtype":"m.text"},"ts":1442508851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually one of them is waiting on me to push changes from the first round of review","msgtype":"m.text"},"ts":1442508885000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: pretty sure chrome inherited that string from webkit","msgtype":"m.text"},"ts":1442508907000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jamesr___: yeah looks like it","msgtype":"m.text"},"ts":1442508914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why does this string exist at all? is something required by web compat?","msgtype":"m.text"},"ts":1442508924000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"what do edge/IE return?","msgtype":"m.text"},"ts":1442508929000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jamesr___: I don't know","msgtype":"m.text"},"ts":1442508942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: okidoki","msgtype":"m.text"},"ts":1442509143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr___: if you find out, you can PR the spec :-)","msgtype":"m.text"},"ts":1442509156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not against a navigate mode… but I'm not really sure we need it","msgtype":"m.text"},"ts":1442509369000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess the rationale is that the security story is somewhat cleaner, but it's rather edge case-y","msgtype":"m.text"},"ts":1442509435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I do think it makes sense conceptually","msgtype":"m.text"},"ts":1442509489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: happy to go for it then","msgtype":"m.text"},"ts":1442509525000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: what does it mean to make a mode:navigate request with redirect:follow?","msgtype":"m.text"},"ts":1442509922000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you wouldn't be able to create them","msgtype":"m.text"},"ts":1442509939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's fair","msgtype":"m.text"},"ts":1442510015000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: another annoyance of mine with opaqueredirect check on navigate...  we allow fetch(url, { redirect: \"manual\" }), but that will break if its intercepted by a sw that does e.respondWith(fetch(e.request))","msgtype":"m.text"},"ts":1442510080000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in that case I would expect the outer fetch() to get the opaqueredirect as well","msgtype":"m.text"},"ts":1442510118000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm, I guess we could make that particular check conditional on redirect mode instead","msgtype":"m.text"},"ts":1442510288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: as long as your redirect mode is manual, you'll be able to get an opaqueredirect","msgtype":"m.text"},"ts":1442510305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohhh I thought that's how it worked","msgtype":"m.text"},"ts":1442510315000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: that would be most excellent","msgtype":"m.text"},"ts":1442510318000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: file an issue?","msgtype":"m.text"},"ts":1442510332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1442510335000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://github.com/whatwg/fetch/issues/127","msgtype":"m.text"},"ts":1442510575000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hmm the images URLs change hasn't made it to the spec","msgtype":"m.text"},"ts":1442511176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: did you update the server copy of wattsi?","msgtype":"m.text"},"ts":1442511224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it should auto-update","msgtype":"m.text"},"ts":1442511233000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, maybe it's broken just like my local copy because the GitHub thing is no longer a fork?","msgtype":"m.text"},"ts":1442511259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that would be surprising... but maybe","msgtype":"m.text"},"ts":1442511274000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I couldn't update whatwg/wattsi earlier today; kept complaining","msgtype":"m.text"},"ts":1442511294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: ended up removing it and just fetching it anew","msgtype":"m.text"},"ts":1442511305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't had any problems, hmm","msgtype":"m.text"},"ts":1442511306000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe it's the GitHub client that was the problem...","msgtype":"m.text"},"ts":1442511325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least the whatwg/html changes are still making it in, so the build is not breaking...","msgtype":"m.text"},"ts":1442511349000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I really should set up some sort of email for if the build breaks","msgtype":"m.text"},"ts":1442511356000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Of course then I start wondering about setting up a whole proper CI server thingy","msgtype":"m.text"},"ts":1442511380000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh the server doesn't use git","msgtype":"m.text"},"ts":1442511408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It just fetches a zip","msgtype":"m.text"},"ts":1442511414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it probably should though, the zip thing is a bit convoluted","msgtype":"m.text"},"ts":1442511421000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk, sicking, do notifications in Firefox close when you click on them?","msgtype":"m.text"},"ts":1442513791000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"don't know","msgtype":"m.text"},"ts":1442513812000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1442513817000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"not been involved with the desktop side","msgtype":"m.text"},"ts":1442513826000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ok, they seem to on Linux, but I need to test whether the onclose event fires as well","msgtype":"m.text"},"ts":1442513853000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"annevk: Investigating","msgtype":"m.text"},"ts":1442515401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"beverloo: not on OS X","msgtype":"m.text"},"ts":1442516742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: close fires when you dismiss them from the notification center","msgtype":"m.text"},"ts":1442516757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: also, seems to require two clicks before click fires","msgtype":"m.text"},"ts":1442516819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i don't understand your concern in https://www.w3.org/Bugs/Public/show_bug.cgi?id=26024","msgtype":"m.text"},"ts":1442517345000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: say e.g., you use <img src=https://www.google.com/> on example.com; a drag & drop should not reveal what google.com redirected too, that violates SOP","msgtype":"m.text"},"ts":1442518407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah ok. currentSrc only gives the resolved URL before redirects","msgtype":"m.text"},"ts":1442518462000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if it's just one of the URLs from the markup that's fine","msgtype":"m.text"},"ts":1442518499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1442518509000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ah that reminds me of an attack from a few years ago involving flash, invisible iframes and a simple \"slide to unlock\" kind of game drawn on top.","msgtype":"m.text"},"ts":1442519136000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Users weren't aware of what they were doing.","msgtype":"m.text"},"ts":1442519141000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I forget what it was but it was something but hotmail redirecting to a session subdomain.","msgtype":"m.text"},"ts":1442519183000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"if logged in","msgtype":"m.text"},"ts":1442519186000,"senderName":"Krinkle","senderId":"Krinkle@irc"}
]