[
{"content":{"body":"nice to see progress being made on Upgrade Insecure Requests in gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1139297","msgtype":"m.text"},"ts":1432706711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dglazkov: just random question. How do blink folks do code reviews? will some people end up doing lots of them or is the time to get a review occasionally too long","msgtype":"m.text"},"ts":1432746402000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders how other open source projects (than Mozilla)  do reviews","msgtype":"m.emote"},"ts":1432746440000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hi","msgtype":"m.text"},"ts":1432747197000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"there seem to be two ways to get styling property or attribute value:","msgtype":"m.text"},"ts":1432747218000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"element.attributes.id.value vs element.getAttribute(\"id\")","msgtype":"m.text"},"ts":1432747224000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"element.style.fontSize vs element.getPropertyValue(\"font-size\")","msgtype":"m.text"},"ts":1432747224000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"are there any plans to deprecate the getter/setter API?","msgtype":"m.text"},"ts":1432747259000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"I mean element.style.getPropertyValue(\"font-size\")","msgtype":"m.text"},"ts":1432747306000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Also, how element.dataset.size is different from element.attributes[\"data-size\"]?","msgtype":"m.text"},"ts":1432747580000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"deprecating it is kinda pointless, because practically they'll never get removed","msgtype":"m.text"},"ts":1432747801000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: by deprecating I mean discouraging their use","msgtype":"m.text"},"ts":1432747918000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"though I'm not really sure whether the getter/setter API is worse","msgtype":"m.text"},"ts":1432747943000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"what I don't like is the inconsistency","msgtype":"m.text"},"ts":1432747969000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"smaug____: there's definitely an occasional review lag. It's also a good idea to point the code review at someone who would be suitable for review (the git cl upload tool will suggest the reviewers).","msgtype":"m.text"},"ts":1432749432000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"smaug____: we have OWNERs that helps a bit with some parts of the code, and watchlists that will cc the potentially interested folks","msgtype":"m.text"},"ts":1432749491000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"ok, OWNERs is like peers in Gecko","msgtype":"m.text"},"ts":1432749518000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(well, we have module owners and then peers)","msgtype":"m.text"},"ts":1432749527000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: is it a problem that some people end up doing lots of reviewing?","msgtype":"m.text"},"ts":1432749561000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or do you have some tools to split reviews somehow evenly to potential reviewers","msgtype":"m.text"},"ts":1432749586000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I have *no idea* why you might be asking that ;)","msgtype":"m.text"},"ts":1432749593000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's expected for a senior engineer to do more reviews","msgtype":"m.text"},"ts":1432749617000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":":p","msgtype":"m.text"},"ts":1432749618000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"understands that smaug____ spends about 26 hours a day reviewing","msgtype":"m.emote"},"ts":1432749624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1432749625000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: FWIW the Opera/Critic solution is to assign the reviews automatically to people based on user-defined filters","msgtype":"m.text"},"ts":1432749688000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"meaning what?","msgtype":"m.text"},"ts":1432749705000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: You add a filter for the bits of the code you are allowed to review (and a \"watching\" filter for bits of the code that you are interested in but can't sign off on). Then when patches come in all the people with filters matching parts of the review are assigned those parts. It's up to them to sort out who takes each review.","msgtype":"m.text"},"ts":1432749796000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This also allows reviews to be done collaboratively, where that makes sense","msgtype":"m.text"},"ts":1432749837000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so review request ends up to some generic queue","msgtype":"m.text"},"ts":1432749842000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you like, but the point is that it becomes an organisational problem to distribute the reviews in the most efficient way rather than making the requestee pick a reviewer with no context","msgtype":"m.text"},"ts":1432749934000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"c.f. the way that bz deletes the string \"bz\" from his bugzilla handle when he is overloaded or going to be away","msgtype":"m.text"},"ts":1432749990000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's pretty clear evidence that \"submitter picks a reviewer\" doesn't work","msgtype":"m.text"},"ts":1432750018000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"usually it works quite well","msgtype":"m.text"},"ts":1432750046000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder whether the generic queue approach makes then certain people to do even more reviewing","msgtype":"m.text"},"ts":1432750065000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"do you recall if that was an issue at Opera?","msgtype":"m.text"},"ts":1432750078000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well, I recall that some people did a lot of reviewing, but I couldn't tell you if they considered it a problem of the approach, or something that was worse with that approach than other approaches","msgtype":"m.text"},"ts":1432750121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I believe that the overwhelming majority of people liked the review tool overall","msgtype":"m.text"},"ts":1432750142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so I guess that suggests they weren't totally overloaded","msgtype":"m.text"},"ts":1432750156000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(reviewing is usually fun, but I'm always interested in to improve the process)","msgtype":"m.text"},"ts":1432750776000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"SimonSapin: wtf8 is brilliant","msgtype":"m.text"},"ts":1432757713000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"the idea is not new, but it was a bit hand-wavy before","msgtype":"m.text"},"ts":1432757756000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah, but could be pretty useful in a browser engine that needs to support DOMString everywhere but doesn't want to have half null bytes","msgtype":"m.text"},"ts":1432757796000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"blink detects and uses a bit for 8 bit strings","msgtype":"m.text"},"ts":1432757874000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"that was the original motivation indeed (in Servo)","msgtype":"m.text"},"ts":1432757875000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i think some VMs do too","msgtype":"m.text"},"ts":1432757879000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"does ***monkey?","msgtype":"m.text"},"ts":1432757885000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1432757888000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i think the dart vm uses either 1, 2, or 4 bytes per character for a string","msgtype":"m.text"},"ts":1432757902000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"and a particular string is one or the other","msgtype":"m.text"},"ts":1432757912000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"(or at least that was a plan, not sure if it's implemented)","msgtype":"m.text"},"ts":1432757918000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"so does python 3.3+","msgtype":"m.text"},"ts":1432757919000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"so indexing in a particular string is always constant time","msgtype":"m.text"},"ts":1432757924000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"but a big string with one surrogate pair is 3/4ths 0x00","msgtype":"m.text"},"ts":1432757936000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"in SpiderMonkey: https://blog.mozilla.org/javascript/2014/07/21/slimmer-and-faster-javascript-strings-in-firefox/","msgtype":"m.text"},"ts":1432757943000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"what does servo use now?","msgtype":"m.text"},"ts":1432757945000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"ah yeah, looks about the same as blink","msgtype":"m.text"},"ts":1432757965000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"assuming there's a bit in the string header for which it is?","msgtype":"m.text"},"ts":1432757973000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"I think Servo uses UTF-8 (Rust’s native string type), so unpaired surrogates in the DOM are replaced with U+FFFD","msgtype":"m.text"},"ts":1432757990000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it’s unclear if this is a real web compat issue","msgtype":"m.text"},"ts":1432758001000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah that's going to be a problem","msgtype":"m.text"},"ts":1432758008000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"people store all sorts of crazy shit in storage apis through DOMStrings","msgtype":"m.text"},"ts":1432758031000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"and if it is, we’re undecided between WTF-8 and ill-formed UTF-16","msgtype":"m.text"},"ts":1432758032000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i can't remember the details but we've broken several web properties by accidentally doing unicode conversions at different parts of our storage systems over the years","msgtype":"m.text"},"ts":1432758058000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"but Rust ships with WTF-8 for OS strings on Windows in the standard library","msgtype":"m.text"},"ts":1432758067000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"where somebody assumed that a DOMString could be round-tripped to a unicode string (typically utf8)","msgtype":"m.text"},"ts":1432758070000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"filesystem APIs on non-windows have all sorts of crazy crap too","msgtype":"m.text"},"ts":1432758163000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"can't let rest = await fetch(url);  let data = await resp.json(); be reduced to a single statement ?","msgtype":"m.text"},"ts":1432758579000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"jarek: For CSS, at least, the getter/setter pair mean you don't need to worry about the handful of randomly-renamed properties (\"float\" vs \"cssFloat\", due to ES3-era propery name restrictions).  They're also required for any properties that don't propertly convert from snake-case to camelCase, like all custom properties.","msgtype":"m.text"},"ts":1432759755000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Like jamesr___ said, using utf-8 for JS strings is *definitely* not web-compatible.  A bunch of different tools rely on the fact that strings are effectively u16 arrays to encode arbitrary binary data into them.","msgtype":"m.text"},"ts":1432759934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Also, thanks for the Rust tree/parser/selector stuff! Will look it over eventually.","msgtype":"m.text"},"ts":1432759999000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"for JS strings yes, agreed","msgtype":"m.text"},"ts":1432760050000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but for text in the DOM tree?","msgtype":"m.text"},"ts":1432760063000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well depends on what you mean by 'in the DOM tree'","msgtype":"m.text"},"ts":1432760100000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"a lot of web APIs are specified in DOMString which is list of u16","msgtype":"m.text"},"ts":1432760107000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"you'll need to hook those up to something in servo","msgtype":"m.text"},"ts":1432760121000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"I mean the data of Text nodes, for example","msgtype":"m.text"},"ts":1432760191000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"for Text nodes Gecko stores the strings using either 8 or 16 bits strings","msgtype":"m.text"},"ts":1432760259000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the question is, is preserving unpaired surrogates there necessary for web compat?","msgtype":"m.text"},"ts":1432760331000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hsivonen was suggesting that maybe not","msgtype":"m.text"},"ts":1432760362000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i would recommend testing that theory with telemetry data","msgtype":"m.text"},"ts":1432760392000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"SimonSapin: I'd assume it is necessary","msgtype":"m.text"},"ts":1432760414000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes, telemetry would be interesting","msgtype":"m.text"},"ts":1432760428000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"not all encodings web pages use are unicode too, remember","msgtype":"m.text"},"ts":1432760433000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jamesr___: do browser support encodings that don’t map to Unicode somehow?","msgtype":"m.text"},"ts":1432760463000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"that's a good question","msgtype":"m.text"},"ts":1432761092000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"even if browsers don't support it (i.e. don't render the text as expected) script in the page might expect data contents to round-trip","msgtype":"m.text"},"ts":1432761113000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jamesr___: I remember some talk about flags for 8-bit strings being done on the leaves of the rope, so that a big string with one surrogate pair doesn't pay a huge price","msgtype":"m.text"},"ts":1432762809000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jamesr___: idk if that ever happened though","msgtype":"m.text"},"ts":1432762817000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: can we have style.float work nowadays? IIRC the spec says it should work now?","msgtype":"m.text"},"ts":1432762936000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: We *can* have it work, yes; those naming restrictions were dropped in ES5. The spec does indeed say that el.style.float *should* be usable.","msgtype":"m.text"},"ts":1432763064000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Doesn't help custom properties, tho.","msgtype":"m.text"},"ts":1432763069000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I mean \"may we have\" :P","msgtype":"m.text"},"ts":1432763088000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: I'm well aware ES5 dropped all this","msgtype":"m.text"},"ts":1432763096000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heh i added support for style.float in jsdom last week","msgtype":"m.text"},"ts":1432763184000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"all browsers implement it now yes","msgtype":"m.text"},"ts":1432763196000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"yay!","msgtype":"m.text"},"ts":1432763212000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"cssFloat is synced up with float","msgtype":"m.text"},"ts":1432763358000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"just like the fontSize and ['font-size'] stuff","msgtype":"m.text"},"ts":1432763504000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"Yeah, indeed.","msgtype":"m.text"},"ts":1432763511000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"data:text/html,<script>document.write(location.href);</script> cross-browser returns a long string consisting of \"data:text/html,\" repeatedly. how weird.","msgtype":"m.text"},"ts":1432764235000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that's because you're doing weird things :p","msgtype":"m.text"},"ts":1432764277000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"gsnedders: hah. But also, really? That seems surpising because you would have thought that the url was set before the document was sent to the parser","msgtype":"m.text"},"ts":1432764555000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1432764569000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so, according to standards, what should the number of data: thingies be?","msgtype":"m.text"},"ts":1432764589000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Yeah, no that's not surprising","msgtype":"m.text"},"ts":1432764589000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"> An unbalanced tree was written using document.write() causing data from the network to be reparsed.","msgtype":"m.text"},"ts":1432764642000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"jgraham: ?","msgtype":"m.text"},"ts":1432764705000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I’m surprised that it’s not infinite","msgtype":"m.text"},"ts":1432765155000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"there must be some kind of recursion limit to executing <script> from document.write","msgtype":"m.text"},"ts":1432765188000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"how's that the recursion?","msgtype":"m.text"},"ts":1432765221000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: ?","msgtype":"m.text"},"ts":1432765398000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You load the page. It parses to after the </script> and then runs a script which document.writes the text \"data:text/html,<script>document.write(location.href);</script>\", which is parsed until after the </script>, which runs a script that document.writes \"data:text/html,<script>document.write(location.href);</script>\", which…","msgtype":"m.text"},"ts":1432765531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that was the guess I had… I didn't realise that caused a redirect…","msgtype":"m.text"},"ts":1432765564000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"redirect?","msgtype":"m.text"},"ts":1432765638000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ohhhhh","msgtype":"m.text"},"ts":1432765657000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"duh","msgtype":"m.text"},"ts":1432765658000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://stackoverflow.com/questions/12575572 so why exactly do people do this obfuscation where they pass a global into a function instead of just assigning to a local","msgtype":"m.text"},"ts":1432770519000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i see it a lot and it always seems to do nothing but make code harder to follow","msgtype":"m.text"},"ts":1432770528000,"senderName":"zewt","senderId":"zewt@irc"}
]