[
{"content":{"body":"jyasskin: while browsers can infer the language without lang=, accessibility software / screen readers like JAWS do not, which leads to a lot of problems for users who do their browsing with those","msgtype":"m.text"},"ts":1462335128000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jyasskin: one common problem is that the lang value does not actually match the language of the content of the page (due to authors cargo-cult copy/pasting the html element and attributes from, e.g., a lang=en page into a page whose contents are actually in Chinese or whatever","msgtype":"m.text"},"ts":1462335254000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jyasskin: so in order to help authors catch those kinds of mistakes, and help users of screen readers, the proposal is that the HTML checker would do language detection on the content of each document, and warn if the lang value does not match the detected language","msgtype":"m.text"},"ts":1462335376000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, it doesn't use the browser's accessibility tree? That would break my suggestion, yeah.","msgtype":"m.text"},"ts":1462335543000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I don‚Äôt know that the detected lang information gets into the accessibility tree from the browser","msgtype":"m.text"},"ts":1462335591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but anyway the best solution to the problem for screen-reader users would be if screen readers also did language detection the way that browsers do","msgtype":"m.text"},"ts":1462335629000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because of course they operate on content other than Web content","msgtype":"m.text"},"ts":1462335649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But second-best might be the browsers putting detected information into the tree.","msgtype":"m.text"},"ts":1462335656000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1462335661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jyasskin: btw do you know what Chrome does in cases where the lang value does not match the detected language? I mean as far as the Translate prompt or any other user interaction? Does it just ignore the lang value?","msgtype":"m.text"},"ts":1462336030000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't know offhand. I'd guess it ignores the lang value, especially if it's 'en', but would have to check.","msgtype":"m.text"},"ts":1462336067000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1462336073000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well if it does just ignore it, that suggests the presence of top-level html@lang is not actually very useful in practice on the Web (though having lang values on other sections of the document that are in other languages would be)","msgtype":"m.text"},"ts":1462336136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it is sad that so many of our discussions about making user experience better for screen-reader users come down to, ‚ÄúVendors of screen readers can‚Äôt or won‚Äôt make their products smarter, so let‚Äôs all do a bunch of extra work in N different browsers and other tools to work around all the longstanding deficiencies in screen readers.‚Äù","msgtype":"m.text"},"ts":1462336524000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: After searching, the code to detect the page's language does use the declared lang attribute and Content-Language HTTP header: https://code.google.com/p/chromium/codesearch/#chromium/src/components/translate/core/language_detection/language_detection_util.cc&l=184. Once the language is detected, the rest of Chrome appears to only use the return","msgtype":"m.text"},"ts":1462336893000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"value of DeterminePageLanguage() to drive the actual translation.","msgtype":"m.text"},"ts":1462336894000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: OK, thanks","msgtype":"m.text"},"ts":1462336957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah that makes sense, given that the lang value and header really should not be trusted","msgtype":"m.text"},"ts":1462336994000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that makes me really wary about having the HTML checker warn about a missing html@lang value. Given the circumstances, Not sure how helpful that will actually be for end users in practice","msgtype":"m.text"},"ts":1462337092000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean without having the checker also implement language detection","msgtype":"m.text"},"ts":1462337133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I should probably only have the checker emit a warning for missing lang if it is able to detect the language, so the warning would be of the form, ‚ÄúThe contente of this document appears to be in Chinese, consider putting an lang=zh value on the html element.‚Äù","msgtype":"m.text"},"ts":1462337280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that seems reasonable","msgtype":"m.text"},"ts":1462338056000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"just wish I had a streaming langague-detection library","msgtype":"m.text"},"ts":1462338287000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I could write a streaming implementation on top of an existing library","msgtype":"m.text"},"ts":1462338332000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rniwa: am now...","msgtype":"m.text"},"ts":1462341135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh, Permissions API going straight for the API instead of figuring out the model is biting us now üòü","msgtype":"m.text"},"ts":1462342849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder when we'll learn that in order to make a good API you first need to figure out how the system works","msgtype":"m.text"},"ts":1462342937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@annevk: I was gonna ask you about this: https://github.com/w3c/webcomponents/issues/494","msgtype":"m.text"},"ts":1462343542000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":":( why are we keep finding all these new problems","msgtype":"m.text"},"ts":1462343632000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"rniwa_: because monkey patching doesn't really work in engineering...","msgtype":"m.text"},"ts":1462343712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@annevk: huh, we do monkey patching all the time and it works","msgtype":"m.text"},"ts":1462343749000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"@annevk: I think the problem here was that Google for the longest time worked on these specs on their own & also implemented things","msgtype":"m.text"},"ts":1462343771000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"rniwa_: we do?","msgtype":"m.text"},"ts":1462343785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@annevk: and they didn't benefit from having other vendors reading & verifying specs & implementations","msgtype":"m.text"},"ts":1462343789000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"@annevk: at my work that is re: monkey patching","msgtype":"m.text"},"ts":1462343805000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"rniwa_: sure, that's part of it too","msgtype":"m.text"},"ts":1462343809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa_: maybe the definition we use in standards https://annevankesteren.nl/2014/02/monkey-patch differs from the definition Apple uses?","msgtype":"m.text"},"ts":1462343841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins or astearns or somebody, where is @supports defined?","msgtype":"m.text"},"ts":1462344055000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"@annevk: we run scripts after applying a patch to the script","msgtype":"m.text"},"ts":1462344089000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"nm found https://drafts.csswg.org/css-conditional-3/#at-supports","msgtype":"m.text"},"ts":1462344095000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"@annevk: or at runtime, we override some other class's selectors in objective-c LOL","msgtype":"m.text"},"ts":1462344101000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"MikeSmith: aww, just found it too","msgtype":"m.text"},"ts":1462344117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa_: yeah, I guess I'm saying that if you write standards that way, it's gonna suck","msgtype":"m.text"},"ts":1462344180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah @supports seems like a handy feature","msgtype":"m.text"},"ts":1462344205000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk, you make a good point; thoughts on where to put it?","msgtype":"m.text"},"ts":1462364221000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I usually put it above the first instance if there's no good place","msgtype":"m.text"},"ts":1462364404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: also, use \", then ...\" after if statements","msgtype":"m.text"},"ts":1462364434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: looked good to me otherwise","msgtype":"m.text"},"ts":1462364445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Will do in a bit","msgtype":"m.text"},"ts":1462364535000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: For future help in finding where things are defined: https://drafts.csswg.org/indexes/","msgtype":"m.text"},"ts":1462378672000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"looks at https://drafts.csswg.org/indexes/","msgtype":"m.emote"},"ts":1462378695000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"w00t","msgtype":"m.text"},"ts":1462378697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: much thanks","msgtype":"m.text"},"ts":1462378701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: Yes, SVG2 is the best reference. It's SVG1 plus new things minus dumb things and with some stuff rewritten to be better.","msgtype":"m.text"},"ts":1462378904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so Trump is the last GOP candidate...","msgtype":"m.text"},"ts":1462380846000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"AutomatedTester: wrong channel","msgtype":"m.text"},"ts":1462382746000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: so it is...","msgtype":"m.text"},"ts":1462382759000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1462382762000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"sorry all","msgtype":"m.text"},"ts":1462382766000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1462394625000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1462394697000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yep","msgtype":"m.text"},"ts":1462394706000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what a shit show we're in :(","msgtype":"m.text"},"ts":1462394715000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah :(","msgtype":"m.text"},"ts":1462394719000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: TinyMCE 4.3.10 shipped with a wrong use of rootNode","msgtype":"m.text"},"ts":1462394724000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's hard for me to understand why everything is breaking because of rootNode/deepPath","msgtype":"m.text"},"ts":1462394734000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what coding patterns are causing this","msgtype":"m.text"},"ts":1462394738000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1462394742000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(i don't really want to know)","msgtype":"m.text"},"ts":1462394748000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh, doing if (event.deepPath) event.target = event.deepPath[0]","msgtype":"m.text"},"ts":1462394759000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: which is obviously undefined :(","msgtype":"m.text"},"ts":1462394770000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh right the attribute to function switch","msgtype":"m.text"},"ts":1462394779000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i guess that's not completely crazy","msgtype":"m.text"},"ts":1462394783000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"they're trying to feature test","msgtype":"m.text"},"ts":1462394789000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't even know the point of that code because event.target would have that value anyway","msgtype":"m.text"},"ts":1462394792000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"lol true","msgtype":"m.text"},"ts":1462394798000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: except nobody supported deepPath with v1","msgtype":"m.text"},"ts":1462394803000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: as an attribute :(","msgtype":"m.text"},"ts":1462394811000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but in general code in the form `if (something.chromeSpecificAttribute) { use(something.chromeSpecificAttribute); }` is not crazy","msgtype":"m.text"},"ts":1462394826000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so it seems that they were speculatively using the feature...","msgtype":"m.text"},"ts":1462394829000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: oh sure","msgtype":"m.text"},"ts":1462394833000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ideally nobody writes chrome-specific code, but in the real world, people do","msgtype":"m.text"},"ts":1462394838000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"flatPath or flattenedPath or whatever seems reasonable...","msgtype":"m.text"},"ts":1462394862000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or we just declare that from now on all new platform properties have to be symbols","msgtype":"m.text"},"ts":1462394890000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I like piercingPath though","msgtype":"m.text"},"ts":1462394900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hmm yeah that's pretty good.","msgtype":"m.text"},"ts":1462394913000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: flat is a bit misleading in the sense that it could contain unslotted contents for events.","msgtype":"m.text"},"ts":1462394925000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ah, i see","msgtype":"m.text"},"ts":1462394931000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: composedPath has the same issue I pose","msgtype":"m.text"},"ts":1462394955000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and I don't think we refer to \"composition\" anywhere else so that's also somewhat misleading","msgtype":"m.text"},"ts":1462394966000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"introducing a new \"piercing\" concept is a bit annoying but if it's truly a new concept then it makes sense","msgtype":"m.text"},"ts":1462394976000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, we do still have shadow piercing combinators in dynamic profile of CSS selectors","msgtype":"m.text"},"ts":1462395163000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh, true!","msgtype":"m.text"},"ts":1462395175000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that's nice","msgtype":"m.text"},"ts":1462395178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: regardless of our opposition to the feature","msgtype":"m.text"},"ts":1462395182000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: the terminology seems to exist elsewhere","msgtype":"m.text"},"ts":1462395195000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"terinjokes: robertkowalski: one of you want to fix https://github.com/whatwg/console/issues/54 ? should be a pretty simple IDL change :)","msgtype":"m.text"},"ts":1462396925000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: making it now, was just revieiwng my GH notifications for today","msgtype":"m.text"},"ts":1462397061000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1462397068000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's pretty sweet how this spec is actually making implementers start wanting to converge","msgtype":"m.text"},"ts":1462397087000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yay!","msgtype":"m.text"},"ts":1462397094000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Not to mention getting unbound console methods","msgtype":"m.text"},"ts":1462397095000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i didn't think that was going to happen","msgtype":"m.text"},"ts":1462397102000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"then all of a sudden chrome and webkit both are like 'yes let's do it, look at this long issue where people are asking if we can. we totally can.'","msgtype":"m.text"},"ts":1462397118000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"merged the PR for CoC. Forgot I had left that opened","msgtype":"m.text"},"ts":1462397279000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"https://github.com/whatwg/console/issues/56 might make sense to fix too","msgtype":"m.text"},"ts":1462397479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i agree","msgtype":"m.text"},"ts":1462397617000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Domenic: think i should open a PR for the IDL namespace change to, or hold off for now?","msgtype":"m.text"},"ts":1462397684000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"terinjokes: so I think if you actually change the IDL it will break Bikeshed -_-","msgtype":"m.text"},"ts":1462397698000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i meant add the note","msgtype":"m.text"},"ts":1462397722000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"terinjokes: that was why I was thinking of a warning or something while I update IDL and then someone will update the Web IDL parser bikeshed uses and then bikeshed will update","msgtype":"m.text"},"ts":1462397723000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1462397725000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"go for it","msgtype":"m.text"},"ts":1462397733000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wonder what various UAs do for missing labels in count","msgtype":"m.text"},"ts":1462397753000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"good question","msgtype":"m.text"},"ts":1462397817000,"senderName":"Domenic","senderId":"Domenic@irc"}
]