[
{"content":{"body":"TabAtkins: I can imagine it being a pain to get those URLs in there","msgtype":"m.text"},"ts":1296518460000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I dunno if it is or not.  If the url is carried in the email somehow, I can do it.","msgtype":"m.text"},"ts":1296518461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don’t think it is","msgtype":"m.text"},"ts":1296518462000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"TabAtkins: In that case, you could host the diffs yourself","msgtype":"m.text"},"ts":1296518520000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I'm confused.  What is missing about the diffs?  They're right there in the feed.","msgtype":"m.text"},"ts":1296518521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Yeah, but there’s no way to link to them individually (from the feed)","msgtype":"m.text"},"ts":1296518522000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Oh, to link to individual commits?","msgtype":"m.text"},"ts":1296518580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1296518581000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Like your full feed, only limited to one commit","msgtype":"m.text"},"ts":1296518582000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I can rig that up.  I'll see if I can do that later today.","msgtype":"m.text"},"ts":1296518640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It would allow us to turn http://twitter.com/csscommits into something that looks more like http://twitter.com/whatwg","msgtype":"m.text"},"ts":1296518641000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"In fact, just gimme a few minutes to talk to my dentist, and I'll get on it.","msgtype":"m.text"},"ts":1296518700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yay!","msgtype":"m.text"},"ts":1296518701000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Argh, where is MikeSmith when you need him?  WAKE UP, JAPAN.","msgtype":"m.text"},"ts":1296518880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"omg http://code.google.com/p/es-operating-system/","msgtype":"m.text"},"ts":1296518940000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"paul_irish: Contacted the LearnBoost dude and let him know that my slidedeck is out-of-date, and he shouldn't rely on *any* syntax until he sees something ship.","msgtype":"m.text"},"ts":1296519120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bga_: OK, that is fascinating. Most of the UI on the Wii web browser is HTML, CSS and JS - but that's taking it a bit further. (c:","msgtype":"m.text"},"ts":1296519360000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"btw wilhelm while we invent tabs/lists/trees/... each time because whatwg does not want standardize xul/other full ui markup - its bad","msgtype":"m.text"},"ts":1296519960000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"That's a difficult problem to solve.","msgtype":"m.text"},"ts":1296520200000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"choose most popular open version http://en.wikipedia.org/wiki/User_interface_markup_language :)","msgtype":"m.text"},"ts":1296520260000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"abarth, where's the CSP use-cases pages you started that Lucas mentioned?","msgtype":"m.text"},"ts":1296520320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"bga_: Just within Opera, there are at least three different UI toolkits in use, in part due to platform constraints and in part due to a decade of legacy code. As I said, this is a difficult problem to solve. (c:","msgtype":"m.text"},"ts":1296520560000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"man i hate iana's mime type registry","msgtype":"m.text"},"ts":1296520620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is so completely useless","msgtype":"m.text"},"ts":1296520621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wilhelm cross platform toolkits: wxwidget qt gtk ... :)","msgtype":"m.text"},"ts":1296520740000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"gtk is very lightweight","msgtype":"m.text"},"ts":1296520800000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Neither of those are sufficiently cross-platform. And no, gtk isn't lightweight enough for all use cases. Neither is qt - which we removed from our GNU/Linux browser because it was too slow.","msgtype":"m.text"},"ts":1296520920000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"matjas: Is this sufficient? http://www.xanthir.com/feed/public-css-commits/?t=2011-01-31T21:57:35+00:00","msgtype":"m.text"},"ts":1296521400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The feed now lists each entries' permalink as a rel=alternate.","msgtype":"m.text"},"ts":1296521401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"definitely!","msgtype":"m.text"},"ts":1296521402000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"TabAtkins: +2 internets to you","msgtype":"m.text"},"ts":1296521460000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Excellent.  Soon I will have *all* the internets.","msgtype":"m.text"},"ts":1296521461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I really need to cache this stuff, so I'm not constantly hitting up GMail for the data.","msgtype":"m.text"},"ts":1296521520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But to do that, I need to write my file-based persistence layer, which I'll be using all over my site so I can turn off my db and save myself 2c per day!","msgtype":"m.text"},"ts":1296521521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Am I misunderstanding HTTP auth here, or is this guy clueless?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=11912","msgtype":"m.text"},"ts":1296521580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"aaah, wall of text","msgtype":"m.text"},"ts":1296521640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1296521641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"skip his wall of text, read Aryeh's comments.","msgtype":"m.text"},"ts":1296521642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cunning plan","msgtype":"m.text"},"ts":1296521643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh he's just asking for s/cookies/auth/?","msgtype":"m.text"},"ts":1296521700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"good luck with that","msgtype":"m.text"},"ts":1296521701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Looks like it, yeah.","msgtype":"m.text"},"ts":1296521702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm trying to figure out if the benefits he claims for HTTP auth even theoretically make sense.","msgtype":"m.text"},"ts":1296521703000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Leaving aside whether it's practically useful.","msgtype":"m.text"},"ts":1296521704000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I can't see how they do.","msgtype":"m.text"},"ts":1296521705000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But I have no idea how HTTP auth actually works.","msgtype":"m.text"},"ts":1296521760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: could you remove the leading whitespace in your feed?","msgtype":"m.text"},"ts":1296521761000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"TabAtkins: before the XML prolog","msgtype":"m.text"},"ts":1296521762000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.xanthir.com%2Ffeed%2Fpublic-css-commits%2F","msgtype":"m.text"},"ts":1296521820000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"(and while you're at it, why not just remove the XML prolog altogether?)","msgtype":"m.text"},"ts":1296521821000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Can I?","msgtype":"m.text"},"ts":1296521822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"has no idea.","msgtype":"m.emote"},"ts":1296521823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is confused and enraged by XML.","msgtype":"m.emote"},"ts":1296521824000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: http auth works different ways depending on the auth type","msgtype":"m.text"},"ts":1296521825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: for basic, you send the username and password with each request.","msgtype":"m.text"},"ts":1296521880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in plain text","msgtype":"m.text"},"ts":1296521881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: Sure you can. http://mathiasbynens.be/notes.atom validates just fine","msgtype":"m.text"},"ts":1296521882000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Just removed the entity.  Validates now.","msgtype":"m.text"},"ts":1296521883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I can't see how that has any advantages whatsoever except convenience.","msgtype":"m.text"},"ts":1296521940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm gonna go remove it from my blog feed too, then.  I hate the contortions you have to go through to output an XML prolog in PHP.","msgtype":"m.text"},"ts":1296521941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What contortions?","msgtype":"m.text"},"ts":1296522000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You can't just output it literally, because it looks like a PHP shorttag.","msgtype":"m.text"},"ts":1296522060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which I use, because I love <?= ?>","msgtype":"m.text"},"ts":1296522120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: it's theoretically better, but was poorly deployed and is now practically irrelevant","msgtype":"m.text"},"ts":1296522121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What's theoretically better about it?","msgtype":"m.text"},"ts":1296522122000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, oh, shorttags, blech.","msgtype":"m.text"},"ts":1296522123000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"<?php echo 'foo' ?>, blech.","msgtype":"m.text"},"ts":1296522124000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<?= 'foo' ?>, yay!","msgtype":"m.text"},"ts":1296522180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok <div id=\"div>p+p:first-child\"></div> is pretty funny (from http://www.456bereastreet.com/archive/201011/html5_allows_almost_any_value_for_the_id_attribute_use_wisely/)","msgtype":"m.text"},"ts":1296522181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: http://www.w3.org/Security/wiki/Use_Cases_for_Content_Security_Policies","msgtype":"m.text"},"ts":1296522182000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"got to run","msgtype":"m.text"},"ts":1296522183000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie: Hehe.","msgtype":"m.text"},"ts":1296522184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: it's theoretically better because the browser is in charge of login/logout, rather than the page","msgtype":"m.text"},"ts":1296522240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...wait.  That selector selects nothing, by definition.","msgtype":"m.text"},"ts":1296522241000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's not a selector, so that's unimportant :-P","msgtype":"m.text"},"ts":1296522242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: so you can do clever things like have many different sessions, or whatnot","msgtype":"m.text"},"ts":1296522243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: But it's clearly supposed to be used as one.","msgtype":"m.text"},"ts":1296522244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sure","msgtype":"m.text"},"ts":1296522245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Anyway, sent him a correction.","msgtype":"m.text"},"ts":1296522360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: FYI, updated the proxy feed that posts to http://twitter.com/csscommits","msgtype":"m.text"},"ts":1296522540000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1296522541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i.e. http://mathiasbynens.be/demo/css-commits","msgtype":"m.text"},"ts":1296522542000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"slooooow since it pings your feed, which in turns connects to gmail","msgtype":"m.text"},"ts":1296522600000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"but it should only get 1 hit every 30 mins anyway","msgtype":"m.text"},"ts":1296522601000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yay first tweet https://twitter.com/csscommits/status/32245165687046145","msgtype":"m.text"},"ts":1296522602000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yay!","msgtype":"m.text"},"ts":1296522780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It makes me happy to add two more links in the ridiculous chain of interconnected data here.","msgtype":"m.text"},"ts":1296522781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CVS commits -> mailing list -> gmail inbox -> atom feed -> twitterbot -> html page","msgtype":"m.text"},"ts":1296522840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"+1 for the web","msgtype":"m.text"},"ts":1296522841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you forgot about my intermediary Atom feed","msgtype":"m.text"},"ts":1296522900000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Oh jeez.  What does your intermediary do?","msgtype":"m.text"},"ts":1296522901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: clears out some whitespace and weird semicolons so it looks nice in a tweet","msgtype":"m.text"},"ts":1296522960000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Those semicolons are misplaced.  I didn't initially realize that I was keeping the \\n at the end of each log line.","msgtype":"m.text"},"ts":1296522961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need to fix that.","msgtype":"m.text"},"ts":1296522962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CVS commits → mailing list → Gmail inbox → Atom feed → proxy Atom feed → Twitterbot → Twitter → link to detailed log","msgtype":"m.text"},"ts":1296523020000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Eff yeah.","msgtype":"m.text"},"ts":1296523021000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"TabAtkins: I’m off for tonight, but please do keep me posted :)","msgtype":"m.text"},"ts":1296523080000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1296523081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's amazing how much cleaner this makes your code: function $(sel) { return document.querySelector(sel); }","msgtype":"m.text"},"ts":1296523740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I know!","msgtype":"m.text"},"ts":1296523860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though, I use query() and queryOne().  Same deal.","msgtype":"m.text"},"ts":1296523861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is discovering http://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingWIthAPS/CommunicatingWIthAPS.html","msgtype":"m.emote"},"ts":1296523980000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"through http://blog.mfabrik.com/2011/01/29/apple-push-notifications-apn-with-python/","msgtype":"m.text"},"ts":1296524100000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Fun, JS diffs: http://aryeh.name/spec/innertext/test/innerText.html","msgtype":"m.text"},"ts":1296524640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: what is the difference, in practice, between innerText and textContent ?","msgtype":"m.text"},"ts":1296525420000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish, innerText is way more complicated, and much better matches what you actual see.","msgtype":"m.text"},"ts":1296525421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's basically a plaintext version of the HTML.","msgtype":"m.text"},"ts":1296525422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So it will hide things that are display: none, add newlines when you have display: block, normalize runs of whitespace to a single space, etc.","msgtype":"m.text"},"ts":1296525480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Add tabs for tables.","msgtype":"m.text"},"ts":1296525481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Lots of other stuff.","msgtype":"m.text"},"ts":1296525482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: i'm about to integrate window.atob! :-)","msgtype":"m.text"},"ts":1296525540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)!","msgtype":"m.text"},"ts":1296525541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: is http://aryeh.name/spec/base64.html still the most up to date copy?","msgtype":"m.text"},"ts":1296525542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yes.","msgtype":"m.text"},"ts":1296525543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1296525544000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish, my spec for innerText so far is here: http://aryeh.name/spec/innertext/innertext.html  It's still missing lots of details and testing, but you get the idea.","msgtype":"m.text"},"ts":1296525545000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: do you think if you spec it fully that ffx will implement it?","msgtype":"m.text"},"ts":1296525600000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"I ask because we're looking to modify what .text() does in jQuery and i'd love to do elem.textContent || elem.innerText .. we might still do it but document the visibility cases","msgtype":"m.text"},"ts":1296525601000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"AryehGregor: great. thank you","msgtype":"m.text"},"ts":1296525602000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Well, for setting they should behave the same, or roughly so.","msgtype":"m.text"},"ts":1296525603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"wouldn't implement innerText if he was a firefox dev and could get away with it. it sucks","msgtype":"m.emote"},"ts":1296525604000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"For getting they're totally different -- in particular, the whitespace they return will be extremely different in most real-world cases.","msgtype":"m.text"},"ts":1296525660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jamesr__, even if it's to a spec?","msgtype":"m.text"},"ts":1296525661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: well depends on the spec, but the webkit implementation is horrifying","msgtype":"m.text"},"ts":1296525662000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"How much of the horrifyingness is required for web compat?","msgtype":"m.text"},"ts":1296525663000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"no clue :)","msgtype":"m.text"},"ts":1296525664000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"maybe going from code -> reverse engineering -> spec -> code will clean it up","msgtype":"m.text"},"ts":1296525720000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"I'll aim for something not too horrifying and we'll see if it works.","msgtype":"m.text"},"ts":1296525721000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that sort of worked for the parser","msgtype":"m.text"},"ts":1296525722000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"The parser spec is pretty horrifying . . .","msgtype":"m.text"},"ts":1296525723000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"imo it's a lot better than the code we had before","msgtype":"m.text"},"ts":1296525724000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"Opera's impl is incredibly simple, it ignores almost all the complexity and isn't that different to textContent.","msgtype":"m.text"},"ts":1296525725000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, you'd know better than me.","msgtype":"m.text"},"ts":1296525726000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, yes, which makes it basically useless.  May as well use textContent instead.","msgtype":"m.text"},"ts":1296525727000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"just from an implementation point of view","msgtype":"m.text"},"ts":1296525728000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"That hasn't caused too much site compat issues :P","msgtype":"m.text"},"ts":1296525780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"most of that is (hopefully) hidden safely away from authors","msgtype":"m.text"},"ts":1296525781000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"AryehGregor: If you're looking for simplicity… :P","msgtype":"m.text"},"ts":1296525782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if we can drop any of this stuff altogether, i'd be even happier, but my (and thus AryehGregor's) goal is to at least have a spec so that we can have that discussion well-informed","msgtype":"m.text"},"ts":1296525840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my suspicion, though, is that given that ffx is the only one to not do it at all (right?) we are probably stuck with it","msgtype":"m.text"},"ts":1296525841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wow, http://aryeh.name/spec/innertext/innertext.html is the closest anyone has come to convincing me to change the small-caps style on the h1 :-)","msgtype":"m.text"},"ts":1296525842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hehe","msgtype":"m.text"},"ts":1296525900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Glad to be of service.","msgtype":"m.text"},"ts":1296525901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: btw the wording here may be of use http://www.whatwg.org/specs/web-apps/current-work/complete/#being-rendered","msgtype":"m.text"},"ts":1296525902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We need font-variant:small-caps-unless-ugly","msgtype":"m.text"},"ts":1296525960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1296526020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, that doesn't seem to match my needs, at a glance.  For instance, innerText works on elements that aren't part of a Document.","msgtype":"m.text"},"ts":1296526021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You didn't expect we could actually reuse definitions on the web platform, did you?","msgtype":"m.text"},"ts":1296526022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Silly Hixie.","msgtype":"m.text"},"ts":1296526023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah i didn't mean you could reuse the definition","msgtype":"m.text"},"ts":1296526024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just that the phrasing may be of interest","msgtype":"m.text"},"ts":1296526080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what should i call th esection in which i define atob and btoa","msgtype":"m.text"},"ts":1296526081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The \"discard last 4 and interpret as an 8-bit number\" bit is crazy.","msgtype":"m.text"},"ts":1296526140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"innerText does something different when used on unrendered content IIRC","msgtype":"m.text"},"ts":1296526141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It seems to do something completely insane in WebKit when used on display: none content.","msgtype":"m.text"},"ts":1296526320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe that's why.","msgtype":"m.text"},"ts":1296526321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It seems to behave a lot more like textContent in that case.","msgtype":"m.text"},"ts":1296526322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, how so?","msgtype":"m.text"},"ts":1296526323000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think it might behave exactly like textContent in that case","msgtype":"m.text"},"ts":1296526440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That would be easy to spec, if it's actually desirable.  Is it?  It doesn't make any sense to me.","msgtype":"m.text"},"ts":1296526441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen: we discussed what happens when you document.write() a string with broken surrogates at some point... i'm going to promote the use of webidl's \"convert to unicode\" thing from AryehGregor's atob() spec to apply to every method with a DOMString argument, so document.write() will be adding U+FFFDs to the input stream for that case.","msgtype":"m.text"},"ts":1296526860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe that change should just be made in WebIDL?","msgtype":"m.text"},"ts":1296526920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah maybe","msgtype":"m.text"},"ts":1296526921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, that'd make sense to have in the ES binding","msgtype":"m.text"},"ts":1296526922000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i don't understand what the \"a\" in \"atob\" is supposed to stand for.","msgtype":"m.text"},"ts":1296526980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh wait.","msgtype":"m.text"},"ts":1296526981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have them backwards.","msgtype":"m.text"},"ts":1296526982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so \"b\" is binary and \"a\" is ascii.","msgtype":"m.text"},"ts":1296526983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok.","msgtype":"m.text"},"ts":1296526984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which should i put first, base64-to-\"binary\", or \"binary\"-to-base64?","msgtype":"m.text"},"ts":1296527040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess the latter","msgtype":"m.text"},"ts":1296527041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: what errors aren't caught by the algorithm?","msgtype":"m.text"},"ts":1296527460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in atob()","msgtype":"m.text"},"ts":1296527461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also, why \"strictly greater\" rather than \"greater\"?","msgtype":"m.text"},"ts":1296527640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: i'm getting an error from pms that i've never had before","msgtype":"m.text"},"ts":1296538860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"TypeError: expected string or buffer\" deep inside build/bdist.linux-i686/egg/html5lib/treewalkers/lxmletree.py, according to the traceback i get","msgtype":"m.text"},"ts":1296538861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: may have been because of a <?p> typo","msgtype":"m.text"},"ts":1296542040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I strongly disagree with making document.write FFFD out unpaired surrogates. What problem is being solved?","msgtype":"m.text"},"ts":1296543480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the problem of having unpaired surrogates in what is supposedly a Unicode-clean environment","msgtype":"m.text"},"ts":1296545100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why would we ever want to allow surrogates -- paired on unpaired -- in?","msgtype":"m.text"},"ts":1296545101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hahaha http://ishtml5readyyet.com/ has been updated to use new HTML elements","msgtype":"m.text"},"ts":1296546840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and has a very pretty countdown clock","msgtype":"m.text"},"ts":1296546841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I have another change request :)","msgtype":"m.text"},"ts":1296547380000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"benschwarz: shoot","msgtype":"m.text"},"ts":1296547500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can we rename the \"web developer edition\" text to read \"A technical specification for web developers\"","msgtype":"m.text"},"ts":1296547501000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"you betcha","msgtype":"m.text"},"ts":1296547560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lowercase \"w\" in \"web\"?","msgtype":"m.text"},"ts":1296547561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not \"Web\"?","msgtype":"m.text"},"ts":1296547562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I always think of Web as the proper noun name for the Web","msgtype":"m.text"},"ts":1296547563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like the Internet as opposed to one of the many possible internets","msgtype":"m.text"},"ts":1296547564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: we can do upper case :)","msgtype":"m.text"},"ts":1296547620000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"regenning","msgtype":"m.text"},"ts":1296547680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: <3's floating towards you","msgtype":"m.text"},"ts":1296547681000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"it's up","msgtype":"m.text"},"ts":1296547740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"legend","msgtype":"m.text"},"ts":1296547741000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"did you make the chrome frame change?","msgtype":"m.text"},"ts":1296547742000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"benschwarz: not yet, will do that momentarily","msgtype":"m.text"},"ts":1296547920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"holy cow, someone actually used <canvas> to do a fractal. with web workers in the background for the calculation! http://juliamap.googlelabs.com/#ll=29.152261,-81.051636&z=10&p=ffffff,ffffff,ffffff,ffffff,ff0000,ffff00,ffff00,ff00,ff&f=mandelbrot","msgtype":"m.text"},"ts":1296547980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1296547981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: see your secret messages?","msgtype":"m.text"},"ts":1296548040000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"can someone explain to me why the rows on http://www.whatwg.org/specs/web-apps/current-work/complete/webappapis.html#base64-table are not lined up?","msgtype":"m.text"},"ts":1296548460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"chrome","msgtype":"m.text"},"ts":1296548520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"using -webkit-column-stuff","msgtype":"m.text"},"ts":1296548521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: atob is in","msgtype":"m.text"},"ts":1296549000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: i made a number of minor editorial changes to your text to make it fit the spec's style, you may be interested in comparing the two for your edification :-)","msgtype":"m.text"},"ts":1296549060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ISSUE-151 o_O","msgtype":"m.text"},"ts":1296550440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe we should recharter too to cut all cooperation","msgtype":"m.text"},"ts":1296550441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So issues are still being created without any kind of filtering?","msgtype":"m.text"},"ts":1296550560000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Anything goes it seems","msgtype":"m.text"},"ts":1296550561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: what do you think about a applicationCache.canceUpdate() method?","msgtype":"m.text"},"ts":1296550562000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Hixie: the DOM isn't a Unicode-clean environment","msgtype":"m.text"},"ts":1296550800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: What do you think about innerHTML? I presume you think the same?","msgtype":"m.text"},"ts":1296551820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yes","msgtype":"m.text"},"ts":1296551821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Conceptually I don't think the innerHTML case is so cleancut","msgtype":"m.text"},"ts":1296551822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean, document.write just adds bytes to the input stream, so it isn't surprising if you get the bytes out that you put in","msgtype":"m.text"},"ts":1296551880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"conceptually, I think the DOM and JavaScript form a system of UTF-16 code units and layout has to deal with unpaired surrogates","msgtype":"m.text"},"ts":1296551881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"But conceptually innerHTML runs the HTML parser on the input and if you want to reuse the full parser pipeline you naturally get the unpaired surrogate handling","msgtype":"m.text"},"ts":1296551940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: existing browsers don't seem to use the full pipeline","msgtype":"m.text"},"ts":1296551941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That might be a winning argument. Nevertheless it is unclear to me that the behaviour makes sense","msgtype":"m.text"},"ts":1296552060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"points to topic","msgtype":"m.emote"},"ts":1296552061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well yes","msgtype":"m.text"},"ts":1296552062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It is less stupiod than, say, innerText, I will give you that","msgtype":"m.text"},"ts":1296552120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"topic really is a good one :)","msgtype":"m.text"},"ts":1296552121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't look forward to explaining to smaug and others who've spent time optimizing innerHTML that I landed something that makes it slower so that we can be theoretically cleaner in the Unicode sense","msgtype":"m.text"},"ts":1296552122000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"especially when we can't make JS strings enforce UTF-16 well-formedness, because people use JS strings for binary data","msgtype":"m.text"},"ts":1296552123000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Right, I agree that the Unicode-hygiene argument doesn't make any sense given that you can already add unpaired surrogates via DOM","msgtype":"m.text"},"ts":1296552180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"virtuelv: why's maxf giving you congrats?","msgtype":"m.text"},"ts":1296552181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(I assume?)","msgtype":"m.text"},"ts":1296552182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(well, actually, they don't tend to use the code points that are surrogates for binary data)","msgtype":"m.text"},"ts":1296552183000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: right","msgtype":"m.text"},"ts":1296552184000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders what SteveF would expect an implemenation of <hgroup> to look like","msgtype":"m.emote"},"ts":1296552300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I believe the parts of the pipeline I used for Firefox 4 innerHTML and document.write are exactly the right ones considering compat","msgtype":"m.text"},"ts":1296552301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and perf","msgtype":"m.text"},"ts":1296552302000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I don't really disagree. I just want to be sure that we have covered all the cases","msgtype":"m.text"},"ts":1296552420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, 151 is a Last Call issue...","msgtype":"m.text"},"ts":1296553080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: could you run the fixBrokenLink() script earlier than onload to speed up loading?","msgtype":"m.text"},"ts":1296553200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"benschwarz: same with you ^ :)","msgtype":"m.text"},"ts":1296553440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: other than the obvious factor of it \"fixing the links\"","msgtype":"m.text"},"ts":1296553500000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"what does it actually do?","msgtype":"m.text"},"ts":1296553501000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"https://lists.webkit.org/pipermail/webkit-dev/2011-January/015797.html yay Maciej","msgtype":"m.text"},"ts":1296553560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: it was meant for @opvard who's been with Opera for ten years this year","msgtype":"m.text"},"ts":1296553620000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"benschwarz: it redirects to the right page if the fragment is not found on the current page","msgtype":"m.text"},"ts":1296553621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so its important for the pages that are split?","msgtype":"m.text"},"ts":1296553680000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"(multipage specs)?","msgtype":"m.text"},"ts":1296553681000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1296553682000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but hmm, i guess it needs to be run after the content has been loaded after all","msgtype":"m.text"},"ts":1296553740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so ignore me","msgtype":"m.text"},"ts":1296553741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: perhaps I could re-write it in ruby postprocessors","msgtype":"m.text"},"ts":1296553742000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"and remove the script altogether","msgtype":"m.text"},"ts":1296553743000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"benschwarz: that wouldn't work, it needs to be in javascript","msgtype":"m.text"},"ts":1296553860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but link-fixup.js logic could be put in fragment-links.js and instead of checking getElementById() just check if the current fragment is in the table and if so, if the current page matches what the table says it should be","msgtype":"m.text"},"ts":1296553980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"then you could run it ASAP and get faster redirects","msgtype":"m.text"},"ts":1296554040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'll look into it","msgtype":"m.text"},"ts":1296554041000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"can you add an issue for me to track?","msgtype":"m.text"},"ts":1296554042000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1296554043000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks ;)","msgtype":"m.text"},"ts":1296554100000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"zcorpan: I split link-fixup.js from fragment-links.js because I didn't really want it loading a quarter of a megabyte of scripts every time you visit a page","msgtype":"m.text"},"ts":1296554520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"since that doesn't seem good for bandwidth or performance in the common case where you're not visiting an obsolete fragment address","msgtype":"m.text"},"ts":1296554580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: is it a quarter of a megabyte gzipped?","msgtype":"m.text"},"ts":1296555660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: More like 50KB to download","msgtype":"m.text"},"ts":1296555840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonder how long parsing takes","msgtype":"m.emote"},"ts":1296555900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"50KB doesn't sound so bad to waste in normal cases to speed up shortlink fixups","msgtype":"m.text"},"ts":1296555901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"developers.whatwg.org already does that anyway","msgtype":"m.text"},"ts":1296555960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"cool. brucel has started posting HTML5 videos on his blog instead of Flash-trapped videos","msgtype":"m.text"},"ts":1296558660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the medium is the message","msgtype":"m.text"},"ts":1296558720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/","msgtype":"m.text"},"ts":1296558900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders what the business model for Opera Widgets Runtime for Android is","msgtype":"m.emote"},"ts":1296559800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"will handset makers or operators pay to bundle it?","msgtype":"m.text"},"ts":1296559801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"volkmar, for your <progress> bugs, did you check what existing impls do?","msgtype":"m.text"},"ts":1296561600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the vid.ly player doesn't seem particularly keyboard accessible","msgtype":"m.text"},"ts":1296562080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and the flash fallback doesn't seem to work for me in ie","msgtype":"m.text"},"ts":1296562140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: ping","msgtype":"m.text"},"ts":1296562500000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"http://www.gapminder.org/ is quite cool","msgtype":"m.text"},"ts":1296562501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wish it did not use Flash","msgtype":"m.text"},"ts":1296562502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: did you see the ted talks?","msgtype":"m.text"},"ts":1296562560000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1296562561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The speaker ends up with a sword down his throat...","msgtype":"m.text"},"ts":1296562562000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Pretty odd.","msgtype":"m.text"},"ts":1296562563000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"I did not see that one...","msgtype":"m.text"},"ts":1296562620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: did you see the unpaired surrogate discussion earlier on this channel today?","msgtype":"m.text"},"ts":1296562680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: no","msgtype":"m.text"},"ts":1296562681000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: \"surrogate\" is the string to look for in the logs.","msgtype":"m.text"},"ts":1296562740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I am wary of a site with a title like that","msgtype":"m.text"},"ts":1296562741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although the graphs are pretty, the brief commentary seems to be bogus","msgtype":"m.text"},"ts":1296562742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: AFAICT, it's a case of theoretical purity vs. innerHTML perf","msgtype":"m.text"},"ts":1296562800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"smaug____: I thought you might care since you've worked on innerHTML perf","msgtype":"m.text"},"ts":1296562801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham, see e.g. http://www.youtube.com/watch?v=jbkSRLYSojo","msgtype":"m.text"},"ts":1296562802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I think the main think to be wary of is the Flash use. The substance is good.","msgtype":"m.text"},"ts":1296562860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has only looked at a couple of graphs","msgtype":"m.emote"},"ts":1296562861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in this case, the software is quite old, so it's understandable it wasn't written in JS+HTML+SVG","msgtype":"m.text"},"ts":1296562920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan, oh, did <device> change?","msgtype":"m.text"},"ts":1296563340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: so every method taking a DOMString should check the input and possibly modify it?","msgtype":"m.text"},"ts":1296563400000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think we would not be happy with that in general","msgtype":"m.text"},"ts":1296563460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: that would certainly cause some performance regressions, and for things like Gecko's xhr.sendAsBinary it just doesn't make sense","msgtype":"m.text"},"ts":1296563520000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"At least I imagine that the conversation would go \"the spec says that we have to check for unpaired surrogates in all DOM APIs\" \"the spec is stupid. That will just cause performance issues for no appreciable gain\"","msgtype":"m.text"},"ts":1296563580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I am only guessing","msgtype":"m.text"},"ts":1296563581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: dunno","msgtype":"m.text"},"ts":1296563700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug____, the spec allows for exceptions though I hope sendAsBinary goes away...","msgtype":"m.text"},"ts":1296563820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: right. so since browsers don't historically do it, I think we should just say \"no\"","msgtype":"m.text"},"ts":1296563821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sendAsBinary was just an example, and yeah, I hope it will go away","msgtype":"m.text"},"ts":1296563822000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(Though I'm not really convinced this make sense either. Unpaired surrogates can still get through.)","msgtype":"m.text"},"ts":1296563823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right. I don't understand why we hate unpaired surrogates so much. They don't seem to be causing any harm at present, but trying to guard against them everywhere would case harm","msgtype":"m.text"},"ts":1296564120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: see above. Please don't make the spec check for unpaired surrogates in innerHTML or document.write","msgtype":"m.text"},"ts":1296564180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"There is a few places where you need that algorithm by the way. But only when you want to serialize to e.g. UTF-8 or some such.","msgtype":"m.text"},"ts":1296564240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XMLHttpRequest uses it for that reason.","msgtype":"m.text"},"ts":1296564300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aaargh. yay for XML. so createContextualFragment requires to propagate XML well-formedness errors as exceptions to the caller. How sad.","msgtype":"m.text"},"ts":1296565500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I followed innerHTML, but we don't do that either","msgtype":"m.text"},"ts":1296565620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"in http://canvex.lazyilluminati.com/misc/dom-viewer/x.html?%3C!DOCTYPE%20html%3E%0A%3Cscript%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%27%3Etry{d%3Ddocument.createElement%28%27div%27%29%3Bd.innerHTML%3D%27%26lt%3Bfoo%3E%27%3B}catch%28e%29{alert%28e%29}%3C%2Fscript%3E i get two alerts at the same time in firefox","msgtype":"m.text"},"ts":1296565800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"shouldn't alerts wait for the current alert to be dismissed?","msgtype":"m.text"},"ts":1296565860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"has no idea how the new alerts in Firefox work","msgtype":"m.emote"},"ts":1296565920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is generally unhappy about propagating nsresult","msgtype":"m.emote"},"ts":1296565921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is generally unhappy about not propagating nsresult","msgtype":"m.emote"},"ts":1296566040000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Mediocrity: It's quicker, and by the time anybody notices, it's too late.\"","msgtype":"m.text"},"ts":1296566041000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: well, now that we have the infallible malloc, the vast majority of nsresult propagation is useless","msgtype":"m.text"},"ts":1296566160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: that's what Webkit does, I don't think anyone implement progress element","msgtype":"m.text"},"ts":1296567300000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"both Opera and Chrome have an implementation","msgtype":"m.text"},"ts":1296567360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i should check Opera then","msgtype":"m.text"},"ts":1296567420000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"annevk: looks like in Opera it doesn't use the theme from Gtk","msgtype":"m.text"},"ts":1296567540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oven uglier in Chrome","msgtype":"m.text"},"ts":1296567600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1296567601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't expect Web authors to use this any time soon if it looks like this in Chrome","msgtype":"m.text"},"ts":1296567602000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Opera and Chrome don't really care about system theme for what i've seen (at least for GTK)","msgtype":"m.text"},"ts":1296567603000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"annevk: Opera is following the specs word by word","msgtype":"m.text"},"ts":1296567604000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"I guess the Chrome impl. still scores some points on html5test.com or something :-(","msgtype":"m.text"},"ts":1296567660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: it looks great on MacOS though","msgtype":"m.text"},"ts":1296567661000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"so i would probably bet on web authors using it with no care for the GNU/Linux users","msgtype":"m.text"},"ts":1296567720000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1296567780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe Linux users welcome their new unthemed Chromium overlords, because it's \"so fast\" :-(","msgtype":"m.text"},"ts":1296567840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I suspect for Linux they mostly care about Chromium OS","msgtype":"m.text"},"ts":1296567900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if Chrome would seem faster if I used it more","msgtype":"m.emote"},"ts":1296568200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"As it is, the processes tend to get swapped out and there is a noticable responsiveness issue when the UI is swapped in but not the content","msgtype":"m.text"},"ts":1296568260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, while Firefox and Opera seem to map well known font names to Ubuntu-bundled lookalikes properly, Chromium doesn't.","msgtype":"m.text"},"ts":1296568380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"correction: It seems that Opera has failures in that department, too","msgtype":"m.text"},"ts":1296568440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Why do you make me look at XMLSerializer :(","msgtype":"m.text"},"ts":1296568500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I thought you had volunteered. :-)","msgtype":"m.text"},"ts":1296568560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: anyway, I think we should make XMLSerializer escape stuff that would otherwise be normalized away when round-tripping","msgtype":"m.text"},"ts":1296568620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: perhaps the right place to spec it is in HTML5","msgtype":"m.text"},"ts":1296568621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"since XMLSerializer already refers to it","msgtype":"m.text"},"ts":1296568680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"We need an algorithm for XML serializing in any case","msgtype":"m.text"},"ts":1296568681000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"indeed we do","msgtype":"m.text"},"ts":1296569880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"part of DOM Parsing and Serializing no?","msgtype":"m.text"},"ts":1296569881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1296569940000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Patches welcome ;)","msgtype":"m.text"},"ts":1296569941000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders what the point of using kSpace instead of ' ' is","msgtype":"m.emote"},"ts":1296570240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's not like the code point will get reassigned every couple of years warranting a layer of abstraction","msgtype":"m.text"},"ts":1296570300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hi again everyone!","msgtype":"m.text"},"ts":1296570660000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"the video element in chrome is ugly. :(","msgtype":"m.text"},"ts":1296571260000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"hsivonen: Maybe a general policy that inline constants are bad?","msgtype":"m.text"},"ts":1296571560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: what's bad about inline constants for ASCII characters?","msgtype":"m.text"},"ts":1296571620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Probably nothing, but some other cases of magic constants are bad, and complex policies with exceptions depending on the types of constants are bad, so it's easier just to forbid them entirely if you don't trust your programmers to be sensible, I guess","msgtype":"m.text"},"ts":1296571740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: well, it leads to issues like having to push .h files around because different people defined kSpace in different places than must never see each other","msgtype":"m.text"},"ts":1296571860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/than/that/","msgtype":"m.text"},"ts":1296571861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: are you gonna call into the HTML-XML TF?","msgtype":"m.text"},"ts":1296572520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1296572521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, atob() as I specced it ignores trailing bits that aren't zero, as noted in the second-to-last step, even though those can't be output by btoa().  It also doesn't require the trailing equals signs, although if they're present they must be the exact right number.  As I note in HTML comments, WebKit is laxer, but I followed Gecko.","msgtype":"m.text"},"ts":1296572700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie, I say \"strictly greater\" out of mathematician's habit, I guess.  To mathematicians, \"greater\" is ambiguous, it's often used to mean \"greater than or equal to\".  Probably for a spec, the \"strictly\" is unnecessary.","msgtype":"m.text"},"ts":1296572760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Greater than is >, always","msgtype":"m.text"},"ts":1296572880000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"To programmers, yeah.","msgtype":"m.text"},"ts":1296572881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just like 0 is never positive","msgtype":"m.text"},"ts":1296572882000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Mathematicians also are sometimes sloppy about the difference between \"positive\" and \"nonnegative\".  The thing is, when you're dealing with continuous quantities, the difference is usually irrelevant.","msgtype":"m.text"},"ts":1296572883000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because it's a difference of one point in a continuum, which doesn't matter.","msgtype":"m.text"},"ts":1296572940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Programmers deal with discrete quantities, so it makes a difference.","msgtype":"m.text"},"ts":1296572941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(sometimes it makes a difference in math too, but then mathematicians will often say \"strictly\" if they mean strictly, to clarify)","msgtype":"m.text"},"ts":1296572942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But it's unnecessary in a computing spec, I agree.","msgtype":"m.text"},"ts":1296572943000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie, I filed three bugs about editorial issues in the base64 stuff.","msgtype":"m.text"},"ts":1296573360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"points out that hgroup has at least parser impl in at least gecko and webkit","msgtype":"m.emote"},"ts":1296579600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also, http://software.hixie.ch/utilities/js/live-dom-viewer/saved/818 styling is still suboptimal with the :any(section, ...) ... h1 styling","msgtype":"m.text"},"ts":1296579720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1296580680000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"\"MIME-Handling: Sniffing Opt-Out","msgtype":"m.text"},"ts":1296580681000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx","msgtype":"m.text"},"ts":1296580740000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I wonder how it will be more effective. As soon it is built into a library that people use inadequatly","msgtype":"m.text"},"ts":1296580741000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"tech support from ISP at my mom's house does not do Ubuntu","msgtype":"m.text"},"ts":1296581520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apparently it was too hard to click on the connection thingie at the top and select the wired connection option","msgtype":"m.text"},"ts":1296581521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(she previously had a wireless connection)","msgtype":"m.text"},"ts":1296581522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unfortunately the competing ISPs are even worse","msgtype":"m.text"},"ts":1296581580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej++","msgtype":"m.text"},"ts":1296581700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using CORS for fonts is protocol abuse","msgtype":"m.text"},"ts":1296581701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sadly, TabAtkins is being kind of pushy about it","msgtype":"m.text"},"ts":1296581760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: fortunately, I think my C++-fu is better than his...","msgtype":"m.text"},"ts":1296581761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wonders in what strange universe a debate about the merits of CORS for font DRM comes down to C++-fu","msgtype":"m.emote"},"ts":1296581820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: incidentally, if we backed down and decided to use SOP+CORS for WOFF, is there any way we could still allow free cross-site linking of other font formats (TrueType, OpenType, SVG)","msgtype":"m.text"},"ts":1296581821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"webkit?","msgtype":"m.text"},"ts":1296581880000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"jgraham: I doubt he's able to code a patch to implement his suggestion","msgtype":"m.text"},"ts":1296581881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, the way CORS works in theory is that the requester sets the policy","msgtype":"m.text"},"ts":1296581882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so this would in theory need to be defined by @font-face","msgtype":"m.text"},"ts":1296581883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, I guess this is the logical conclusion of \"those who implement win\"","msgtype":"m.text"},"ts":1296581884000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and you could of course do the request, and if it is WOFF (after sniffing) also check the relevant CORS stuff and otherwise ignore them","msgtype":"m.text"},"ts":1296581940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"however, that is very much like checing \"usage rights\" rather than \"read rights\" (what CORS is designed for)","msgtype":"m.text"},"ts":1296581941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the problem with this is either you make a CORS simple request for cross-site access for TT/OT/SVG fonts (which means no cookies etc are sent) or you make a preflight request for all font requests","msgtype":"m.text"},"ts":1296581942000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: or you violate CORS by sending a request with credentials and no preflight","msgtype":"m.text"},"ts":1296582000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i.e. CORS is not designed to prevent cross-origin image usage, it is designed to allow cross-origin images to be read by e.g. <canvas>","msgtype":"m.text"},"ts":1296582001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE and FF get around this by applying a same-origin limitation to all font formats","msgtype":"m.text"},"ts":1296582002000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, actually, for GET requests there is no preflight needed","msgtype":"m.text"},"ts":1296582003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej, you got that wrong in your message","msgtype":"m.text"},"ts":1296582004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it ok to send credentials with a GET with no preflight?","msgtype":"m.text"},"ts":1296582060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://sebleedelisle.com/2011/02/html5-canvas-sprite-optimisation/","msgtype":"m.text"},"ts":1296582061000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"has trouble remembering this stuff","msgtype":"m.emote"},"ts":1296582062000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, yes, otherwise we could never make <img> work with CORS","msgtype":"m.text"},"ts":1296582063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1296582064000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, and I wanted <img> to be able to work with CORS","msgtype":"m.text"},"ts":1296582065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so since none of the headers would be provided by the embedder, you could just send a normal request and read CORS headers in the response depending on Content-Type","msgtype":"m.text"},"ts":1296582066000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in principle","msgtype":"m.text"},"ts":1296582067000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though it would still (IMO) be bad design","msgtype":"m.text"},"ts":1296582068000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, where the Content-Type is derived from sniffing","msgtype":"m.text"},"ts":1296582120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"killing WOFF was my knee-jerk reaction when IE came out and supported OTF","msgtype":"m.text"},"ts":1296582121000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's protocol abuse for sure","msgtype":"m.text"},"ts":1296582122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: yeah, I have no idea what the point of WOFF is now","msgtype":"m.text"},"ts":1296582123000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I thought the whole purpose was to have a single font format, when IE refused to implement OTF and others refused to implement EOT","msgtype":"m.text"},"ts":1296582124000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I have stated several times that using CORS for this is the wrong solution","msgtype":"m.text"},"ts":1296582125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I also wonder why deciding not to support part of a spec is suddenly a huge deal","msgtype":"m.text"},"ts":1296582300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no one is up in arms because Mozilla refuses to support SVG fonts","msgtype":"m.text"},"ts":1296582301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or Web SQL DB *cough* *cough*","msgtype":"m.text"},"ts":1296582360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the foundries and e.g. Sylvain from Microsoft seem to be making it a big deal","msgtype":"m.text"},"ts":1296582420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the rest of the WG sort of gets dragged into it","msgtype":"m.text"},"ts":1296582480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I am not really interested in participating there, I was not welcome, so I posted something on my blog somewhere in April last year","msgtype":"m.text"},"ts":1296582481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not implementing part of a spec *can* be pretty bad. but i think not implementing SOR for fonts isn't bad","msgtype":"m.text"},"ts":1296582600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g. implementing WF2 API but not UI is pretty bad","msgtype":"m.text"},"ts":1296582720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What about implementing ugly UI? ;)","msgtype":"m.text"},"ts":1296582721000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that's also pretty bad","msgtype":"m.text"},"ts":1296582780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"subjective! :p","msgtype":"m.text"},"ts":1296582840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why does http://dev.w3.org/2006/webapi/FileAPI/#abort fire both 'error' and 'abort'?","msgtype":"m.text"},"ts":1296583200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks like a bug","msgtype":"m.text"},"ts":1296583201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hey everyone, is this a good place to post a code question or is there a better group?","msgtype":"m.text"},"ts":1296584580000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"For today's episode of \"an ignorance shared is an ignorance harshly mocked on the internet\" I have a question straight out of CS 101","msgtype":"m.text"},"ts":1296585300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Say I am trying to construct a representation of tests, in code. The obvious thing to do would be to have a Test base class and derive specific types of tests from that base class","msgtype":"m.text"},"ts":1296585360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(these are web browser Tests fwiw)","msgtype":"m.text"},"ts":1296585420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"However it seems this will violate the Liskov Substitution Principle","msgtype":"m.text"},"ts":1296585480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For example a Javascript test will have a single URL","msgtype":"m.text"},"ts":1296585540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But a RefTest will have two urls and a type","msgtype":"m.text"},"ts":1296585541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So, given that almost all the methods will be the same for all the types, what is one supposed to do?","msgtype":"m.text"},"ts":1296585542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't really understand what Substitution is occurring in this case","msgtype":"m.emote"},"ts":1296585660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Are you having a JavascriptTest and RefTest both derived from Test?","msgtype":"m.text"},"ts":1296585720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"othermaciej: I'm being \"pushy\" because SOR on @font-face is the right choice, and Moz and IE have both gone with it already.  I'd like any new embedded media to have SOR.","msgtype":"m.text"},"ts":1296585721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the latter is definitely not going to happen","msgtype":"m.text"},"ts":1296585722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`: Well that was the hypothesis","msgtype":"m.text"},"ts":1296585723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"video and audio don't have SOR (despite Mozilla's attempt to enforce it at some point)","msgtype":"m.text"},"ts":1296585780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Right, we've very likely already lost our chance with those two.","msgtype":"m.text"},"ts":1296585781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Are you having any methods on Test that won't behave equivalent for objects of either subclass?","msgtype":"m.text"},"ts":1296585782000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"SOR for non-WOFF fonts is something I'd definitely consider an unacceptable change, there isn't even a spec argument for it","msgtype":"m.text"},"ts":1296585783000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i was on here last week asking about xmlhttp level 2 posting to a pwd protected url","msgtype":"m.text"},"ts":1296585784000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"Sure there is.  @font-face suggests applying SOR (though doesn't require it).","msgtype":"m.text"},"ts":1296585785000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/equivalent/equivalently/","msgtype":"m.text"},"ts":1296585786000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Not that I know of. But does the constructor count?","msgtype":"m.text"},"ts":1296585787000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins, that's not a good argument","msgtype":"m.text"},"ts":1296585840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean the constructor necessarily has a different signature","msgtype":"m.text"},"ts":1296585841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk suggested that if u set the Authoization header via JS it should be ok","msgtype":"m.text"},"ts":1296585842000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"assuming the server accepts that header","msgtype":"m.text"},"ts":1296585843000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"annevk: That was just challenging the statement that \"there isn't even a spec argument for it\".","msgtype":"m.text"},"ts":1296585844000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i allowed it on the server","msgtype":"m.text"},"ts":1296585845000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"TabAtkins: I can't find the word \"origin\" in http://www.w3.org/TR/css3-fonts/","msgtype":"m.text"},"ts":1296585900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but i dont see the header showing in my request's options call","msgtype":"m.text"},"ts":1296585901000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"TabAtkins, also, \"suggestions\" suggests it's a pretty bad spec","msgtype":"m.text"},"ts":1296585902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, and what I've seen in WOFF about CORS is crap too","msgtype":"m.text"},"ts":1296585903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, does not follow CORS at all","msgtype":"m.text"},"ts":1296585904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: nor in the editor's draft","msgtype":"m.text"},"ts":1296585960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wait, I guess it is in the ED","msgtype":"m.text"},"ts":1296585961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: What do you mean?","msgtype":"m.text"},"ts":1296585962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: I believe constructors are irrelevant to the LSP, because the LSP is about using an object of a type that's a subclass of T as if it were an object of type T, so it's only applicable after you've already constructed the object","msgtype":"m.text"},"ts":1296585963000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Interesting","msgtype":"m.text"},"ts":1296586020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I hadn't considered that","msgtype":"m.text"},"ts":1296586021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: The language used is identical to that used in CSS3 Fonts.","msgtype":"m.text"},"ts":1296586022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: CSS3 fonts doesn't \"suggest\" it afaict","msgtype":"m.text"},"ts":1296586023000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins, I mean a) \"suggests applying SOR\" makes no sense, it should either require it or not and b) WOFF does not properly use CORS as specified by the CORS specification","msgtype":"m.text"},"ts":1296586024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: You're right.  It simply defines what it means to apply SOR to @font-face resources.","msgtype":"m.text"},"ts":1296586025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham, why do the URLs or type have to be part of the base class?  Why not make them members of the derived classes?","msgtype":"m.text"},"ts":1296586026000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"btw, who decided to replace the perfectly good term \"same-origin policy\" with \"same-origin restriction\"?","msgtype":"m.text"},"ts":1296586080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"If you have lots of types of single-URL tests, make a SingleUrlTest class that they derive from.","msgtype":"m.text"},"ts":1296586081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah, \"SOR\" makes no sense either","msgtype":"m.text"},"ts":1296586082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you want to get all obsessive about OO.","msgtype":"m.text"},"ts":1296586083000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I don't want to get all obsessive","msgtype":"m.text"},"ts":1296586084000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: I don't immediately see what's wrong with WOFF's use of CORS.  Could you be more explicit?","msgtype":"m.text"},"ts":1296586085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's not like JS really does OO anyway","msgtype":"m.text"},"ts":1296586086000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Having a huge multi-level class heirachy is overkill","msgtype":"m.text"},"ts":1296586087000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: in fact, it doesn't even clearly say UAs MAY apply a same-origin limitation","msgtype":"m.text"},"ts":1296586088000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I don't see the distinction.","msgtype":"m.text"},"ts":1296586089000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But having one level of inheritance seems sensible","msgtype":"m.text"},"ts":1296586140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sorry, that was to SOP vs SOR.","msgtype":"m.text"},"ts":1296586141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't either, but using a different term sounds like it is drawing a distinction from the traditional terminology","msgtype":"m.text"},"ts":1296586142000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins, to use CORS you need to define that the UA need to do a cross-origin request and set various parameters","msgtype":"m.text"},"ts":1296586143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, then you need to deal with the potential return flags of that algorithm","msgtype":"m.text"},"ts":1296586144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, as e.g. XMLHttpRequest does","msgtype":"m.text"},"ts":1296586145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, @font-face nor WOFF does any of that and are therefore not really using CORS","msgtype":"m.text"},"ts":1296586146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is it simply defined somewhere in CORS what specs need to say to make it work?","msgtype":"m.text"},"ts":1296586147000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, yes","msgtype":"m.text"},"ts":1296586200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it is pretty clear nobody has actually read or understood the purpose of CORS","msgtype":"m.text"},"ts":1296586201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: anyway - the ED (which it's not clear the CSS WG will even agree on) says if you limit fonts to same-origin, you MUST allow relaxation of that limit via CORS","msgtype":"m.text"},"ts":1296586202000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: As far as I can tell, you've objected to every use of CORS outside of specs that you directly maintain.","msgtype":"m.text"},"ts":1296586203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: Yes.","msgtype":"m.text"},"ts":1296586260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`, AryehGregor: Thanks","msgtype":"m.text"},"ts":1296586261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins, no","msgtype":"m.text"},"ts":1296586262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, what the fuck is that about?","msgtype":"m.text"},"ts":1296586263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not meant to be offensive.  It's just that the only time I hear you talk about CORS, it's that some spec is using it wrong.","msgtype":"m.text"},"ts":1296586264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: All that really matters is whether you can write code that takes an object which you know acts like a Test, without caring which type it really is - inheritance is useful as a way to encode \"acts like a Test\" in statically typed languages, but that doesn't work in JS, so JS prototype inheritance is just useful as a code-sharing mechanism","msgtype":"m.text"},"ts":1296586265000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Or that people don't understand it.","msgtype":"m.text"},"ts":1296586266000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it doesn't even say you MAY have a restriction (though presumably that is intended)","msgtype":"m.text"},"ts":1296586320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: maybe there's nothing to say when people use it right?","msgtype":"m.text"},"ts":1296586321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Well, otherwise it wouldn't have to be mentioned, no? ;)","msgtype":"m.text"},"ts":1296586322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins, oh?","msgtype":"m.text"},"ts":1296586323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: so it seems fine to not worry much about inheritance hierarchy design","msgtype":"m.text"},"ts":1296586324000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, other than fonts I'm not aware of anyone trying to use it","msgtype":"m.text"},"ts":1296586325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`: This is actually Python","msgtype":"m.text"},"ts":1296586326000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"WebSockets sort of does something similar, but it's not really CORS","msgtype":"m.text"},"ts":1296586380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins, and CORS isn't easy or anything","msgtype":"m.text"},"ts":1296586381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's really quite complicated","msgtype":"m.text"},"ts":1296586382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not that anyone is available to listen but the only headers on the response i see are:","msgtype":"m.text"},"ts":1296586383000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"annevk: I just skimmed through CORS again, and I can't find anywhere that defines in some simple way what a spec using CORS is supposed to provide.","msgtype":"m.text"},"ts":1296586384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DateTue, 01 Feb 2011 18:53:00 GMTWWW-AuthenticateBasic realm=\"People Rails RC Environment\"Content-Length401ConnectioncloseContent-Typetext/html; charset=iso-8859-1","msgtype":"m.text"},"ts":1296586440000,"senderName":"loucapo","senderId":"loucapo@irc"},
{"content":{"body":"which is why it upsets me WOFF is using it without the WG actually understanding what they are doing","msgtype":"m.text"},"ts":1296586441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What chapter are the requirements in?","msgtype":"m.text"},"ts":1296586442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, \"CORS API Specification Advice\"","msgtype":"m.text"},"ts":1296586443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, a \"CORS API\" is something another spec defines.","msgtype":"m.text"},"ts":1296586500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"of course","msgtype":"m.text"},"ts":1296586501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CORS is a protocol","msgtype":"m.text"},"ts":1296586502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In a spec called \"CORS\", it's not clear to me that \"CORS API\" is something outside of the spec.  ^_^","msgtype":"m.text"},"ts":1296586503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Oh, okay - I suppose that's a bit more OOey, but still not at all strictly","msgtype":"m.text"},"ts":1296586504000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Not sure what name would be better, though.","msgtype":"m.text"},"ts":1296586560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(hence duck typing)","msgtype":"m.text"},"ts":1296586561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose I could rename it to \"Advice for specifications using CORS\"","msgtype":"m.text"},"ts":1296586562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, yeah, that would at least draw the eye better.","msgtype":"m.text"},"ts":1296586620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.googleartproject.com/ is awesome","msgtype":"m.text"},"ts":1296587100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Wonder what we have to do so it can ditch flash for the image viewing","msgtype":"m.text"},"ts":1296587101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Most likely, add DRM.","msgtype":"m.text"},"ts":1296587160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That could be the problem I guess","msgtype":"m.text"},"ts":1296587220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although one would have thought that the paintings were out of copyright (I know the digital reproductions may not be)","msgtype":"m.text"},"ts":1296587221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, the digital reproductions are out of copyright too, at least in the US, but you're not going to get museums' cooperation if you point that out.","msgtype":"m.text"},"ts":1296587280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since they get a lot of revenue from licensing copyrights they don't own.","msgtype":"m.text"},"ts":1296587281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Right, but not everywhere has the same law as the US there","msgtype":"m.text"},"ts":1296587400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. I think the UK is different","msgtype":"m.text"},"ts":1296587401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The UK is unclear, AFAIK.","msgtype":"m.text"},"ts":1296587402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Unclear to me at least :)","msgtype":"m.text"},"ts":1296587460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but that is diffrent from the US where it is fairly clear)","msgtype":"m.text"},"ts":1296587461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have to say, JS code I write for Chrome basically works fine in IE9.","msgtype":"m.text"},"ts":1296587520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"As opposed to IE8, where it dies horribly very early on.","msgtype":"m.text"},"ts":1296587580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Kudos to the IE team.","msgtype":"m.text"},"ts":1296587581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is the opposite true? JS code written for IE works in Chrome?","msgtype":"m.text"},"ts":1296587640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document.all('x')","msgtype":"m.text"},"ts":1296587700000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Looks like a yes","msgtype":"m.text"},"ts":1296587701000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"totally has to visit MoMA","msgtype":"m.emote"},"ts":1296587760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's quite nice","msgtype":"m.text"},"ts":1296587761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How do I feature-test the IE8 JS engine?  I'm actually testing in IE9 in IE8 document mode, so I'm getting confused.","msgtype":"m.text"},"ts":1296587820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think IE9's JS engine is more conforming to ES5 than Chrome's","msgtype":"m.text"},"ts":1296587821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"In IE8 document mode, it fails with \"'Node' is undefined\", but trying to do something like if (Node === undefined) or if (typeof(Node) == \"undefined\") gives the same error.","msgtype":"m.text"},"ts":1296587822000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, the IE9 js engine should be very conforming","msgtype":"m.text"},"ts":1296587823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is there some way to say \"if 'Node' is a variable name\" that works in IE8?","msgtype":"m.text"},"ts":1296587824000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe TabAtkins would know, he actually writes real web pages sometimes.","msgtype":"m.text"},"ts":1296587880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if (window.Node) ?","msgtype":"m.text"},"ts":1296587881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What's up?","msgtype":"m.text"},"ts":1296587882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If foo is undefined, (foo === undefined) shouldn't be throwing an error.","msgtype":"m.text"},"ts":1296587940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nice, thanks.","msgtype":"m.text"},"ts":1296587941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, this is IE8.","msgtype":"m.text"},"ts":1296587942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I haven't cared about browser craziness in some time, sorry.  Last cross-browser dev I did leaned heavily on jQuery.","msgtype":"m.text"},"ts":1296588000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nowadays I just code to Chrome and assume it'll work everywhere, which is usually true.","msgtype":"m.text"},"ts":1296588001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(For some definition of \"everywhere\".)","msgtype":"m.text"},"ts":1296588002000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: come to NYC to see MoMA and you can work out of Opera Brooklyn (my tiny 2 person office)","msgtype":"m.text"},"ts":1296588060000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: Sounds awesome, but I'm not sure how well \"see MoMA\" would go down under \"purpose of trip\"","msgtype":"m.text"},"ts":1296588180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1296588181000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"\"network with other Opera employees\"","msgtype":"m.text"},"ts":1296588240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"was somewhat considering visiting the US in the summer anyway","msgtype":"m.emote"},"ts":1296588241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Can anyone tell me why the Selection stringification is empty here for Opera?  http://aryeh.name/spec/innertext/test/innerText.html","msgtype":"m.text"},"ts":1296591000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"typeof identitifer\" shouldn't be throwing reference errors...","msgtype":"m.text"},"ts":1296591060000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Even in IE8?","msgtype":"m.text"},"ts":1296591061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1296591120000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"If the identifier isn't previously declared it should just return undefined","msgtype":"m.text"},"ts":1296591121000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Oh well.","msgtype":"m.text"},"ts":1296591122000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Testing window.Node works, anyway.","msgtype":"m.text"},"ts":1296591180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, that's the usual approach. I never liked typeof :)","msgtype":"m.text"},"ts":1296591240000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"(Side note, Node == undefined is allowed to throw, and typeof is not a function so you don't need to do typeof(x))","msgtype":"m.text"},"ts":1296591300000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"I originally did \"typeof x\", but tried \"typeof(x)\" in case it would work.","msgtype":"m.text"},"ts":1296591540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which it didn't.","msgtype":"m.text"},"ts":1296591541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why is Node === undefined allowed to throw?  That's silly.","msgtype":"m.text"},"ts":1296591542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because you're referencing an undeclared identifier","msgtype":"m.text"},"ts":1296591543000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"That's either a reason to throw or not to throw, not to allow throwing.","msgtype":"m.text"},"ts":1296591544000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, allow as in \"throw if there is a reason to throw\"","msgtype":"m.text"},"ts":1296591600000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"It's not optional","msgtype":"m.text"},"ts":1296591601000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"What's \"a reason to throw\"?","msgtype":"m.text"},"ts":1296591602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"unresolvable reference","msgtype":"m.text"},"ts":1296591603000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Also, can anyone help me figure out where the plainText function called here is defined?  I've been looking, but I can't find it.  I want to compare my super-simple innerText to WebKit's real-world implementation: http://www.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/third_party/WebKit/WebCore/dom/Element.cpp&exact_package=chromium&l=1507","msgtype":"m.text"},"ts":1296591660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"othermaciej, could you point me to WebKit's plainText implementation, or whatever does the bulk of the work of innerText?","msgtype":"m.text"},"ts":1296591661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I'm beginning to suspect that it uses some kind of internal rendering data structure, not the DOM at all . . .)","msgtype":"m.text"},"ts":1296591840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Which would be hopeless to spec.)","msgtype":"m.text"},"ts":1296591900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It might rely on the Render Tree, which is a close analogue to CSS's box tree.","msgtype":"m.text"},"ts":1296591901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This one maybe? http://www.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/third_party/WebKit/WebCore/editing/TextIterator.h&q=\\bplainText\\%28%20lang:cpp&exact_package=chromium&sa=N&cd=3&ct=rc","msgtype":"m.text"},"ts":1296592020000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"It does scary things like respecting text-transform.","msgtype":"m.text"},"ts":1296592080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Well, the matching .cpp file anyway)","msgtype":"m.text"},"ts":1296592081000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Looks like it","msgtype":"m.text"},"ts":1296592200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Searched for plainText taking a Range as parameter and that was the only one I could see","msgtype":"m.text"},"ts":1296592260000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"I don't get that code at all, but I feel like the code that does the actual work must be someplace else.","msgtype":"m.text"},"ts":1296592320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I can look for you after I grab lunch","msgtype":"m.text"},"ts":1296592321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Obviously I should just ask in #webkit.","msgtype":"m.text"},"ts":1296592322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ah, I think I see it now.","msgtype":"m.text"},"ts":1296592500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"handleTextNode() et al.","msgtype":"m.text"},"ts":1296592501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm, doesn't seem easy enough to understand to be useful.","msgtype":"m.text"},"ts":1296592620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yes, you'll need someone to explain what it is doing","msgtype":"m.text"},"ts":1296592680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hears othermaciej volunteer","msgtype":"m.emote"},"ts":1296592681000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"asks in #webkit","msgtype":"m.emote"},"ts":1296592740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"we need code-analysis heuristics that magically read source code files and tell us what they do","msgtype":"m.text"},"ts":1296592800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"finds http://www.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/third_party/WebKit/LayoutTests/fast/dom/inner-text-001.html&exact_package=chromium&d=6","msgtype":"m.emote"},"ts":1296592801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"MikeSmith, why do you want us all unemployed?","msgtype":"m.text"},"ts":1296592860000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1296592920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then we can all be gentleman and ladies of leisure","msgtype":"m.text"},"ts":1296592921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can retire with our riches to a bucolic life in the countryside","msgtype":"m.text"},"ts":1296592922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hahahaha","msgtype":"m.text"},"ts":1296592980000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"MikeSmith: Yo, question about boilerplate on the specs.","msgtype":"m.text"},"ts":1296592981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Art sent me the message that you said to use the HTML5 WD boilerplate for the SotD.  Should I just take the whole thing, replacing spec names when appropriate?","msgtype":"m.text"},"ts":1296593040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej, annevk: are you opposed to having *any* standard mechanism which allows authors to control who can deep-link resources on their servers? (I mean subresource loads like IMG, font-face and video, not <a href>)","msgtype":"m.text"},"ts":1296593041000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"TabAtkins: yeah, please","msgtype":"m.text"},"ts":1296593100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"roc: there already is one, isn't there?","msgtype":"m.text"},"ts":1296593101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MikeSmith: Okay, just making sure.","msgtype":"m.text"},"ts":1296593102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1296593103000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"othermaciej: which is?","msgtype":"m.text"},"ts":1296593104000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(server-side check of Referer, or Origin in browsers that have it)","msgtype":"m.text"},"ts":1296593105000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sites do take measures to prevent image hotlinking","msgtype":"m.text"},"ts":1296593106000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm not sure adding a client-side way to do it for img would be worthwhile","msgtype":"m.text"},"ts":1296593160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that requires an information leak from to the server and is unreliable due to firewall stripping","msgtype":"m.text"},"ts":1296593161000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I don't think any firewalls strip Origin, though it's true not all browsers send it for subresource loads (yet)","msgtype":"m.text"},"ts":1296593220000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a solution where the browser decide wouldn't have those problems, and could be easier for authors to deploy too","msgtype":"m.text"},"ts":1296593221000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"firewall stripping is estimated to affect <5% of users and so would not materially affect the effectiveness of hotlinking prevention","msgtype":"m.text"},"ts":1296593222000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why should a firewall strip headers?","msgtype":"m.text"},"ts":1296593340000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"some firewalls strip Refer for privacy purposes","msgtype":"m.text"},"ts":1296593341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"'cause firewalls are crazy.","msgtype":"m.text"},"ts":1296593342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or to avoid disclosing URLs on intranet servers that link to external sites","msgtype":"m.text"},"ts":1296593400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because intranet administrators are concerned about people clicking on a link from worlddomination.google.com to evil.com","msgtype":"m.text"},"ts":1296593401000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Origin should be less of an issue, since it doesn't disclose the full linking URL","msgtype":"m.text"},"ts":1296593402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though it's true that the hostname itself could leak info","msgtype":"m.text"},"ts":1296593403000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1296593404000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if there's some general mechanism that can reasonably be applied to IMG, whether client-side or not, I would not be averse to also applying it to @font-face","msgtype":"m.text"},"ts":1296593460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is Webkit going to start sending Origin for all subresource loads?","msgtype":"m.text"},"ts":1296593461000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I believe we already do","msgtype":"m.text"},"ts":1296593462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1296593580000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"trying to figure out how to construct the tcpdump command to verify","msgtype":"m.text"},"ts":1296593581000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think deploying Origin checking is likely to be very hard for most Web authors though","msgtype":"m.text"},"ts":1296593640000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and \"default allow\" just seems wrong :-(","msgtype":"m.text"},"ts":1296593760000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, according to tcpdump I'm wrong (about sending Origin), but I'm not sure why","msgtype":"m.text"},"ts":1296593761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, just use wireshark :)","msgtype":"m.text"},"ts":1296593820000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"roc: if we were redesigning the Web from scratch, it might make sense to default to denying cross-origin resource loads, but it seems unhelpfully  inconsistent to do it only for some resource types, and reversing the default on IMG or SCRIPT at this point is likely impossible","msgtype":"m.text"},"ts":1296593880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I agree that's impossible","msgtype":"m.text"},"ts":1296593881000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I don't buy the consistency argument since we DO default-deny cross-origin for XHR","msgtype":"m.text"},"ts":1296593940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that said, I'd be fine with an across-the-board hotlinking prevention mechanism that servers can opt into","msgtype":"m.text"},"ts":1296593941000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1296593942000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if it was materially easier than checking headers","msgtype":"m.text"},"ts":1296593943000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I ask mainly because I've heard some people claim that any such mechanism is \"against the spirit of the Web\" or something like that","msgtype":"m.text"},"ts":1296593944000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, servers can do it already","msgtype":"m.text"},"ts":1296594000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if we had a header that a server could send to ask the browser to limit embedding, that doesn't seem hugely different","msgtype":"m.text"},"ts":1296594001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"people do all kinds of things that are against the spirit of the Web :-)","msgtype":"m.text"},"ts":1296594002000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"since adding a static header to a resource might be easier than checking a request header","msgtype":"m.text"},"ts":1296594003000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"XHR is different because it lets you read the response","msgtype":"m.text"},"ts":1296594060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not just embed it in an opaque way","msgtype":"m.text"},"ts":1296594061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"same-origin policy is traditionally about preventing actual access to data from another site, not preventing embedding","msgtype":"m.text"},"ts":1296594062000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(XHR has the added wrinkle that it can make requests that could be dangerously side-effecting which are otherwise impossible to produce from a WEb page)","msgtype":"m.text"},"ts":1296594120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would also want to get rid of cross-origin non-GET form submission if that was possible","msgtype":"m.text"},"ts":1296594121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I understand why it's different, but it's still not consistent","msgtype":"m.text"},"ts":1296594122000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sadly, probably not","msgtype":"m.text"},"ts":1296594123000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and denying cross-origin loads is still not a new concept on the Web","msgtype":"m.text"},"ts":1296594180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"fonts are like images or video in that respect, not like XHR","msgtype":"m.text"},"ts":1296594181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the distinction between \"reading\" and \"embedding\" makes sense but I don't know if authors appreciate it ... and in practice, the distinction is not so clear, witness all the information leak issues we've had with cross-origin CSS loads etc","msgtype":"m.text"},"ts":1296594182000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"neither of the reasons that XHR is different apply (reading result, sending dangerous requests)","msgtype":"m.text"},"ts":1296594183000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"agree; if starting from scratch, it might make sense to reverse the polarity","msgtype":"m.text"},"ts":1296594240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think adding an Allow-Embedding-From-Origins: header that works across the board would be reasonable and possibly helpful to authors","msgtype":"m.text"},"ts":1296594300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Alex Russel believes that doing perfect browser detection is so simple he leaves it as an exercise for the reader, no need to actually demonstrate how","msgtype":"m.text"},"ts":1296594301000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"All you need is indexOf(\"Netscape\")","msgtype":"m.text"},"ts":1296594360000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"roc, I think we need a generic blocking mechanism that can be used for fonts/images/scripts/framed resources/etc.","msgtype":"m.text"},"ts":1296594420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc, using CORS for fonts and something else for all the other stuff is somewhat insane","msgtype":"m.text"},"ts":1296594480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"plus, CORS is not meant for blocking","msgtype":"m.text"},"ts":1296594481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is why we want a default-same-origin policy for fonts","msgtype":"m.text"},"ts":1296594540000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, one of the reasons","msgtype":"m.text"},"ts":1296594541000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but our platform is such that such resources work cross-origin by default","msgtype":"m.text"},"ts":1296594542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"singling out fonts is silly","msgtype":"m.text"},"ts":1296594543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no it's not, see above","msgtype":"m.text"},"ts":1296594544000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"XHR is reading data","msgtype":"m.text"},"ts":1296594545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fonts is like images","msgtype":"m.text"},"ts":1296594546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and scripts","msgtype":"m.text"},"ts":1296594547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you cannot read the data, just use it","msgtype":"m.text"},"ts":1296594600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's \"cross origin by default\" when you \"embed\" a resource instead of \"reading\" it, which it turns out is a rather slippery distinction in the presence of cssText etc","msgtype":"m.text"},"ts":1296594601000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you might be able to pixel-hunt images","msgtype":"m.text"},"ts":1296594602000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"and we're gonna have CORS for images, to enable not getting <canvas> tainted","msgtype":"m.text"},"ts":1296594603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same would apply with fonts","msgtype":"m.text"},"ts":1296594604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor, gave you access to the data repo too, I forgot earlier","msgtype":"m.text"},"ts":1296594605000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i gotta go","msgtype":"m.text"},"ts":1296594720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe later tonight","msgtype":"m.text"},"ts":1296594721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, oh, okay, thanks.","msgtype":"m.text"},"ts":1296594722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll update that at some point, then.","msgtype":"m.text"},"ts":1296594780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Would be nice ;)","msgtype":"m.text"},"ts":1296594781000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"this \"embedding\" vs \"reading\" distinction actually constrains our API design, because we have to make sure that we minimize data leakage from resources that are only \"embeddable\", not \"readable\"","msgtype":"m.text"},"ts":1296594840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"are there any genuine use-cases for resources being \"embeddable but not readable\", other than legacy content?","msgtype":"m.text"},"ts":1296594841000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yes, all our APIs do that","msgtype":"m.text"},"ts":1296594842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: thinking about it more, it seems like a possibly useful state to be able to allow cross-site embedding, but not cross-site reading","msgtype":"m.text"},"ts":1296594900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: maybe; what are the use-cases?","msgtype":"m.text"},"ts":1296594901000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'm not sure that's necessarily true for fonts, but it seems clearly true for non-font resources","msgtype":"m.text"},"ts":1296594902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"how about images?","msgtype":"m.text"},"ts":1296594903000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"scripts? css? (note that CSS isn't really supported, because cssText exists --- do authors resent that?)","msgtype":"m.text"},"ts":1296594960000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I don't really see any author caring about the distinction between their resources being downloaded for an embed vs for a read.","msgtype":"m.text"},"ts":1296594961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we allow image embedding but not image reading by default","msgtype":"m.text"},"ts":1296595020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for legacy reasons","msgtype":"m.text"},"ts":1296595021000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and I think most would agree we can't change either of those defaults","msgtype":"m.text"},"ts":1296595022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"roc: imxp, no one cares about cssText allowing reading of CSS.","msgtype":"m.text"},"ts":1296595023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: I agree, of course","msgtype":"m.text"},"ts":1296595024000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so it seems that a priori it must be a useful state","msgtype":"m.text"},"ts":1296595080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: the point is, are we carrying this \"embedding vs reading\" distinction forward into new resource types just for the sake of consistency with legacy stuff? Or are there genuine use-cases for it?","msgtype":"m.text"},"ts":1296595081000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, what is your problem with canvas tainting? do you see dom tainting coming? ;)","msgtype":"m.text"},"ts":1296595082000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"it's complexity","msgtype":"m.text"},"ts":1296595083000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it surprises authors","msgtype":"m.text"},"ts":1296595084000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"erlehmann: canvas tainting is similar to xorigin iframes being limited.","msgtype":"m.text"},"ts":1296595085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as far as I know, it has not real purpose other than working around a mistake in the design of the Web","msgtype":"m.text"},"ts":1296595140000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"for me, as an author, it took some time to figure out to do embedding <video> correctly. also, i had to lecture people on it.","msgtype":"m.text"},"ts":1296595141000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"othermaciej: I don't think distinguishing \"embedding\" from \"reading\" for images was a conscious design decision","msgtype":"m.text"},"ts":1296595142000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"even people who had worked with XHR before.","msgtype":"m.text"},"ts":1296595143000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"my tentative position is that if we can't eliminate the distinction, it's better to be consistent about it","msgtype":"m.text"},"ts":1296595200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"originally, there was only embedding, and cross-origin loads were allowed because, hey why not? The problems we were going to have were not understood at the time","msgtype":"m.text"},"ts":1296595201000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"later we wanted to add the ability to read, and then we realized that cross-origin reading is bad, so we had to create a distinction","msgtype":"m.text"},"ts":1296595260000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"besides embedding and reading, there is also linking","msgtype":"m.text"},"ts":1296595261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm guessing we don't want to give an easy client-side way to prevent cross-origin linking, though servers can make a vague semi-effective attempt at it server-side","msgtype":"m.text"},"ts":1296595262000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I believe free xorigin linking is a Good Thing, at least.","msgtype":"m.text"},"ts":1296595263000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"embedding seems to be intermediate between reading and linking, to me","msgtype":"m.text"},"ts":1296595320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so do I","msgtype":"m.text"},"ts":1296595321000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"preventing cross-origin linking, haha. that would lead to even more fuckuppery.","msgtype":"m.text"},"ts":1296595322000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"AryehGregor: thanks","msgtype":"m.text"},"ts":1296595380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej, funny enough, at least the german justice system distinguishes between embedding or linking to resources (IANAL)","msgtype":"m.text"},"ts":1296595381000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"if we don't have actual use-cases for distinguishing embedding vs reading, I think propagating it forward into new resource types for the sake of consistency is a mistake","msgtype":"m.text"},"ts":1296595440000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, embedding is different because usually it does not leak information. amirite?","msgtype":"m.text"},"ts":1296595441000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"well, it applies to most existing resource types, which are also by far the most common resource types","msgtype":"m.text"},"ts":1296595442000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or rather, it should not.","msgtype":"m.text"},"ts":1296595443000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I mean, should we taint the canvas when we draw glyphs from a cross-origin font?","msgtype":"m.text"},"ts":1296595444000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I don't think it reduces cognitive load to make it different for new resource types","msgtype":"m.text"},"ts":1296595500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if we add the ability to extract path data from a font, should that be conditional on the origin?","msgtype":"m.text"},"ts":1296595501000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"or do we have to decide right now that no-one will ever have sensitive data in a font?","msgtype":"m.text"},"ts":1296595502000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, why not? it prevents data-spills.","msgtype":"m.text"},"ts":1296595503000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"if we do make it conditional, I'm very confident that authors will trip over it and be surprised","msgtype":"m.text"},"ts":1296595560000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, authors are surprised already with tainted canvases.","msgtype":"m.text"},"ts":1296595620000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1296595621000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so better keep that consistent.","msgtype":"m.text"},"ts":1296595622000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"no! :-)","msgtype":"m.text"},"ts":1296595623000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the second time something cross-origin paints on the canvas, no one will be surprised.","msgtype":"m.text"},"ts":1296595624000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"You also have to decide where to draw the line","msgtype":"m.text"},"ts":1296595680000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but if you make it into a lookup table what can be done and what cannot, it *will* surprise people.","msgtype":"m.text"},"ts":1296595681000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"you are mixing unexpected behaviour with not-so-easy-to-work-with behaviour?","msgtype":"m.text"},"ts":1296595682000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"do you expose font tables?","msgtype":"m.text"},"ts":1296595683000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"glyph metrics?","msgtype":"m.text"},"ts":1296595684000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"this is because the distinction between \"embedding\" and \"reading\" is artificial as noted above","msgtype":"m.text"},"ts":1296595740000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, why can't the line for cross-origin be “default deny”","msgtype":"m.text"},"ts":1296595741000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"roc, embedding should not leak data. reading should.","msgtype":"m.text"},"ts":1296595742000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"everything leaks data","msgtype":"m.text"},"ts":1296595743000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"<img> leaks the image size","msgtype":"m.text"},"ts":1296595744000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"canvas.measureText leaks font data","msgtype":"m.text"},"ts":1296595745000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so embedding should leak the least amount of data. reading should leak the maximum amount.","msgtype":"m.text"},"ts":1296595860000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"“some X are Y, so every X should be Y” is not really an argument.","msgtype":"m.text"},"ts":1296595861000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"trying to preserve an embedding vs reading distinction forces us to decide early, for all time, exactly where we want to draw that artificial line, and creates crazy security requirements for Web authors like \"don't correlate sensitive information with the size of an image on your intranet\"","msgtype":"m.text"},"ts":1296595862000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"neither is “all X are to some extent Y, so all X should be Y to full extent”","msgtype":"m.text"},"ts":1296595863000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I'm not saying a line can't be drawn. It can, we do for images. The problem is that it's arbitrary, it creates strange requirements, authors won't understand it, and worst of all there are not real use-cases , it's just for legacy content","msgtype":"m.text"},"ts":1296596040000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if we think fonts can't contain sensitive information, we could just say that when you're allowed to embed, you're allowed to read, and then we only need to solve the \"prevent embedding\" problem, ideally in a way that is consistent with other resource types, which also seem to need this feature","msgtype":"m.text"},"ts":1296596160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1296596161000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"has suddenly realized that his approach to speccing this doesn't work at all for whitespace trimming . . . hmm, will need to rethink","msgtype":"m.emote"},"ts":1296596162000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but if we say there's no distinction between embedding and reading, *and* font loads are cross-origin by default, then we're effectively deciding right now that fonts will never contain sensitive information","msgtype":"m.text"},"ts":1296596163000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that feels like a very big call to me","msgtype":"m.text"},"ts":1296596220000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it seems to me a Limit-Embedding-To-Origins: header (or whatever) could solve the problem in a consistent way for everything","msgtype":"m.text"},"ts":1296596221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it would help, but it doesn't solve the problems I've just been talking about","msgtype":"m.text"},"ts":1296596280000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, it would help with the problem of hotlinking of legacy resource types","msgtype":"m.text"},"ts":1296596340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"then the question would be, should fonts adopt a different model instead?","msgtype":"m.text"},"ts":1296596341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"an hour ago I would have said \"I don't know\", but now I'm thinking \"yes\"","msgtype":"m.text"},"ts":1296596342000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hhnnnnng. just saying.","msgtype":"m.text"},"ts":1296596760000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"othermaciej: By \"different model\", do you mean SOR+CORS, or the LETO you strawmanned, or what?","msgtype":"m.text"},"ts":1296596761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't know what LETO is","msgtype":"m.text"},"ts":1296596820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Limit-Embedding-To-Origins","msgtype":"m.text"},"ts":1296596821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my strawman proposal is to apply that to all resource types, and not make fonts different","msgtype":"m.text"},"ts":1296596822000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Okay, that's what I was trying to determine.  I couldnt' quite tell what you were trying to say","msgtype":"m.text"},"ts":1296596880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc would probably say even if we have that for all other resource types, fonts should be different","msgtype":"m.text"},"ts":1296596881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, new resources in general","msgtype":"m.text"},"ts":1296596882000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(presumably still restricted to same-origin embedding by default, with CORS to opt out, so you can enable cross-site embedding by also enabling cross-site reading)","msgtype":"m.text"},"ts":1296596883000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1296596940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I am thinking it would probably have to be new embedding contexts as opposed to resource types","msgtype":"m.text"},"ts":1296596941000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"unless we come up with use-cases for a distinction between reading and embedding, of course","msgtype":"m.text"},"ts":1296596942000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and a good way to define them!","msgtype":"m.text"},"ts":1296596943000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"since for instance PDF in an <iframe> should follow same rules as HTML in an iframe","msgtype":"m.text"},"ts":1296596944000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes, I meant new categories","msgtype":"m.text"},"ts":1296596945000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I think new resource types with a new embedding context come along rarely","msgtype":"m.text"},"ts":1296597000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"one problem with the WOFF requirement is that it's tied to the format, not the embedding context","msgtype":"m.text"},"ts":1296597001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hard to predict","msgtype":"m.text"},"ts":1296597120000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Right, that's probably an architectural mistake.","msgtype":"m.text"},"ts":1296597300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this has been a stimulating discussion, thanks othermaciej","msgtype":"m.text"},"ts":1296597480000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: thanks to you too","msgtype":"m.text"},"ts":1296597540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"best discussion I've had on this topic so far","msgtype":"m.text"},"ts":1296597541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hasn't been following","msgtype":"m.emote"},"ts":1296597600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what's the conclusion?","msgtype":"m.text"},"ts":1296597601000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I concluded that I was more right than I thought","msgtype":"m.text"},"ts":1296597660000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hey, it was an Internet discussion, what did you expect?","msgtype":"m.text"},"ts":1296597661000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"alright, gotta catch a bus","msgtype":"m.text"},"ts":1296597720000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"\"arguing on the internet...\"?","msgtype":"m.text"},"ts":1296597721000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"realizes that a graphical password on a touch device is pretty useless unless you clean the screen every time","msgtype":"m.emote"},"ts":1296597900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"finger print to unlock would be better","msgtype":"m.text"},"ts":1296597960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"finger print works pretty good imxp.  My wife's computer has that for the windows unlock, and it reliably reads my fingers (and doesn't read the fingers I don't have stored)","msgtype":"m.text"},"ts":1296598140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess there are no smartphones with finger print support yet","msgtype":"m.text"},"ts":1296598200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Even better is a thermal camera that can read faceprints.  My university was working on that.","msgtype":"m.text"},"ts":1296598260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can't that be fooled by holding up a picture in front of the phone?","msgtype":"m.text"},"ts":1296598261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"No, it uses thermal to read your face capillaries.","msgtype":"m.text"},"ts":1296598262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Apparently they are highly uniquifying, and easy to read.","msgtype":"m.text"},"ts":1296598320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1296598321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Doesn't sound like it'll work well for zombies","msgtype":"m.text"},"ts":1296598322000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I consider discrimination against zombies justified.","msgtype":"m.text"},"ts":1296598380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lol, so Bing copies Google search results.","msgtype":"m.text"},"ts":1296602580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"}
]