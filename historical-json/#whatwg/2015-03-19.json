[
{"content":{"body":"rektide: positive vibrations","msgtype":"m.text"},"ts":1426723227000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seeing an api key as the first thing in the sample for the latest greatest webspec... are there engineering specialized psychiatrists?","msgtype":"m.text"},"ts":1426723575000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"i want to be better, but i feel completely outgunned, unlistened to, with people driving things they want to drive with what seems to me like wanton disregard for all the good stuff we do have","msgtype":"m.text"},"ts":1426723616000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"i cant imagine a positive interaction cycle. unless i show up with something that works, that i've in my own time made happen, i have a hard time envisioning myself more than a receiver for someone elses vibrations","msgtype":"m.text"},"ts":1426723692000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"rektide: yet other people are in there getting listened to and helping improve and fix things","msgtype":"m.text"},"ts":1426723968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rektide: I think sometimes your rhetorical approach alienates people before they even have a chance to consider the substance of what you're proposing or the problems you're pointing out","msgtype":"m.text"},"ts":1426724055000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I almost never see any serious spec realignments happen","msgtype":"m.text"},"ts":1426724697000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"I admittedly am far from a close follower, but coming back to most specs, they are from a consumer perspective or or less what they were when I saw them 6 months ago","msgtype":"m.text"},"ts":1426724739000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"rektide: then I think you're not looking hard enough or you're not looking for the right things","msgtype":"m.text"},"ts":1426724779000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I fully believe there's a lot of ahrd work and people getting things improved and fixed, but the molds get set, and ya'll should be thankful and delighted to have outsiders bringing up derivise by changes","msgtype":"m.text"},"ts":1426724817000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"everybody's thankful for genuinely constructive feedback","msgtype":"m.text"},"ts":1426724870000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but nobody is thankful if somebody shows up and just shits all over everything and calls everybody idiots","msgtype":"m.text"},"ts":1426724902000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well in this case i was very happy bringing shame down on this, yes.","msgtype":"m.text"},"ts":1426724919000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"but generally i try to hold my tongue and state some kind of stance that i think is important and i think is being overlooked","msgtype":"m.text"},"ts":1426724942000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"in a civil fashion","msgtype":"m.text"},"ts":1426724962000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"well civility will get you a lot farther than shaming","msgtype":"m.text"},"ts":1426725008000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I think if/when you can get Hixie's attention you might get more consideration","msgtype":"m.text"},"ts":1426725033000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because among other things I think he has thicker skin than the rest of us as far as this goes","msgtype":"m.text"},"ts":1426725067000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he doesn't often flip the bozo bit on anybody","msgtype":"m.text"},"ts":1426725122000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"@poiuytds","msgtype":"m.text"},"ts":1426725217000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can someone explain how iframe sandbox works?","msgtype":"m.text"},"ts":1426725264000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"When someone is \"very happy bringing shame down\", that usually results in everyone immediately flipping their bozo bit.","msgtype":"m.text"},"ts":1426725271000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Im trying for nested iframe to bypass CSP","msgtype":"m.text"},"ts":1426725274000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"rektide: what TabAtkins just said","msgtype":"m.text"},"ts":1426725297000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sambuddhabasu1: The spec does a decent job of explaining it.  What's confusing you?","msgtype":"m.text"},"ts":1426725299000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: can you link me to it?","msgtype":"m.text"},"ts":1426725312000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"sambuddhabasu1: https://html.spec.whatwg.org/multipage/embedded-content.html#attr-iframe-sandbox","msgtype":"m.text"},"ts":1426725333000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: can you help me bypass CSP either by nested iframe","msgtype":"m.text"},"ts":1426725342000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"or by using the iframe srcdoc attribute","msgtype":"m.text"},"ts":1426725350000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"What are you trying to bypass CSP for?","msgtype":"m.text"},"ts":1426725359000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Also, I probably can't help; I haven't had to mess with CSP before.)","msgtype":"m.text"},"ts":1426725373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: im making a safari extension and will need it for that","msgtype":"m.text"},"ts":1426725397000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"What specifically are you trying to do that is being blocked by CSP, I mean?","msgtype":"m.text"},"ts":1426725423000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Im trying to inject an iframe with src of that of a local file packaged in the safari extension","msgtype":"m.text"},"ts":1426725448000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"but look like, safari handles CSP differently and the sites need a safari-extension explicitly in the CSP header for the extension to work","msgtype":"m.text"},"ts":1426725478000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"TabAtkins: people had reactions to EME, thought it did bad un-web things and degraded something precious to them. i think you have to not deny me my own feelings, deny me the ability to act publically, in ways the working groups might not like as some kind of tribute i have to offer to also work inside the group calmly, collectedly, respectfully.","msgtype":"m.text"},"ts":1426725536000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"Is CSP preventing some inline scripts from running, or something?","msgtype":"m.text"},"ts":1426725537000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: CSP is not letting me load the safari extension local files itself :(","msgtype":"m.text"},"ts":1426725621000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"rektide: I don't care about \"denying\" you anything. I'm just saying that if you're hostile, I'll ignore you, and lots of other people will do the same.","msgtype":"m.text"},"ts":1426725630000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sambuddhabasu1: Ah, I really can't help you there. I can at least tell you that srcdoc doesn't help vs anything else; it's the same as src=\"data:text/html,...\", just with easier escaping rules.","msgtype":"m.text"},"ts":1426725653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: alright, thanks for letting me know that","msgtype":"m.text"},"ts":1426725690000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"do you know of anyone who can help me with this? TabAtkins","msgtype":"m.text"},"ts":1426725699000,"senderName":"sambuddhabasu1","senderId":"sambuddhabasu1@irc"},
{"content":{"body":"No clue! Sorry. :(","msgtype":"m.text"},"ts":1426725714000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that comes off awfully seriously as a threat, a very big one","msgtype":"m.text"},"ts":1426725742000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"rektide: Haha, ok.","msgtype":"m.text"},"ts":1426725769000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think reasonable people would call \"I don't want to listen to you if you're not willing to speak respectfully\" a threat, but whatever.","msgtype":"m.text"},"ts":1426725790000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's a lot of work to be done, and a lot of people to be interacted with, and I don't have time to deal with people throwing shade.","msgtype":"m.text"},"ts":1426725856000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, it's just that the reactions i've gotten and what people have been talking to me about aren't interactions-","msgtype":"m.text"},"ts":1426725884000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"That's some mental static I don't have to deal with, except in the most limited and extreme cases.","msgtype":"m.text"},"ts":1426725886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"they me working through my mental anguish","msgtype":"m.text"},"ts":1426725895000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"publically on twitter","msgtype":"m.text"},"ts":1426725899000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"rektide: I just looked back at some threads you commented in, and yeah, they're totes hostile, in a way that immediately makes me skip past them.","msgtype":"m.text"},"ts":1426725909000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yup I know.","msgtype":"m.text"},"ts":1426725929000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"If you've got mental anguish, work through that on your own time. Come to the lists with a calm demeanor, or people will ignore or downplay you.","msgtype":"m.text"},"ts":1426725945000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This isn't a rough-and-tumble place. We don't truck with letting people be hostile just because they're contributing.","msgtype":"m.text"},"ts":1426725974000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't have any qualm with any of that, or any of what you've said framed in terms of what happens on the list.","msgtype":"m.text"},"ts":1426726051000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"is cornered again","msgtype":"m.emote"},"ts":1426726116000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"feels like he doesn't know the secret sign","msgtype":"m.emote"},"ts":1426726143000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"i'm presuming Tab was talking about https://lists.w3.org/Archives/Public/public-webapps/2014OctDec/0257.html","msgtype":"m.text"},"ts":1426726301000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"as that's the first thing that shows up for me, and is a classic me example","msgtype":"m.text"},"ts":1426726311000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"the secret sign is just finger horns","msgtype":"m.text"},"ts":1426726329000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"gestured with your tongue out, of course","msgtype":"m.text"},"ts":1426726340000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"if i'm so obviously right, why is it so hard for me to make a 1/10th decent point","msgtype":"m.text"},"ts":1426726351000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"more shame rektide examples are welcome here, particularly if there's more to say than 'immediately makes me skip past them'","msgtype":"m.text"},"ts":1426726399000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"what do i do when i get 'first draft, more to come' https://lists.w3.org/Archives/Public/public-device-apis/2009Dec/0283.html and then time passes and it's all haha jk https://github.com/w3c/push-api/issues/81","msgtype":"m.text"},"ts":1426726547000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"maybe you could get some big stakeholders on your side","msgtype":"m.text"},"ts":1426726655000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"sort of like the way well funded lobbyists are able to get washington on their side","msgtype":"m.text"},"ts":1426726715000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"i just want to continue being right all the time, continue spending way less time than i should writing emails that poorly commincate little except for a sense of the dire emminating from my corner, and have everyone look at it and go- oh, it's rektide, we'd better fucking listen","msgtype":"m.text"},"ts":1426726815000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"i havent found any lobbyists here in DC that can help me with that","msgtype":"m.text"},"ts":1426726833000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"to be right, you have to convince people you're right --- and the most convincing things are things that big stakeholders want, imo","msgtype":"m.text"},"ts":1426727162000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"rektide: For example, your posts in the blink-dev Push API thread, where there was a random \"403 'Fuck You' Forbidden\", and then some weird hostile defense of that.","msgtype":"m.text"},"ts":1426727210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Your comment in the webapps \"What Am I Missing\" thread are like *super* hostile.","msgtype":"m.text"},"ts":1426727238000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Your www-dom \"MouseEvent-mouse\" thread was fine, it just got ignored. That's not cool, you should ping it again.","msgtype":"m.text"},"ts":1426727285000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"[blink-dev] Discovery [extends: Intent to Implement: navigator.connect]\" is weird - it feels vaguely hostile.","msgtype":"m.text"},"ts":1426727355000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's just the first couple of threads that come up when I search for \"rektide\" in my gmail.","msgtype":"m.text"},"ts":1426727382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-webapps/2014OctDec/0486.html is the \"What am I missing\" thread","msgtype":"m.text"},"ts":1426727495000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"so the main argument is \"push api is opaque\"?","msgtype":"m.text"},"ts":1426727627000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"i think the guys use case is great","msgtype":"m.text"},"ts":1426727658000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"he wanted to be able to host an http endpoint","msgtype":"m.text"},"ts":1426727669000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"by opaque i mean, there's no identity, no resource for what is pushed. i mean there's no headers to serve as envelope declaring what's inside.","msgtype":"m.text"},"ts":1426727988000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"\"push api is opque\" right now will do it for me, yes.","msgtype":"m.text"},"ts":1426728041000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"as a web developer, i've always been given the amazing ability to be talking about things. and i lose that ability with the push api. there's just stuff, blobs, showing up, undifferentiable at the transport layer.","msgtype":"m.text"},"ts":1426728116000,"senderName":"rektide","senderId":"rektide@irc"},
{"content":{"body":"so this is the first time I've seen this one https://twitter.com/sideshowbarker/status/578373861147705344","msgtype":"m.text"},"ts":1426730296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://pbs.twimg.com/media/CAbL9eCUgAAeRMB.png","msgtype":"m.text"},"ts":1426730306000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"「Your connection is private but someone on the network might be able to change the look of the page.」","msgtype":"m.text"},"ts":1426730327000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"only in Chrome, and only on mobile","msgtype":"m.text"},"ts":1426730339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: How weird.  No clue what that means.","msgtype":"m.text"},"ts":1426730382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: pinged @__apf__ about it. I reckon she knows","msgtype":"m.text"},"ts":1426730469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm running Chrome beta on Android","msgtype":"m.text"},"ts":1426730486000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe it's something new","msgtype":"m.text"},"ts":1426730498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm running a version that was just released today","msgtype":"m.text"},"ts":1426730513000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: upgrading to newest Apache HTTP client seems to have increased the number of requests per second the vnu servlet code can handle","msgtype":"m.text"},"ts":1426730972000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: http://validator.w3.org/nu/stats.html","msgtype":"m.text"},"ts":1426730980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: atm showing around 4.02 validations per second on each instance","msgtype":"m.text"},"ts":1426731048000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: vs around 3.2 before I did the upgrade","msgtype":"m.text"},"ts":1426731071000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rektide: the normal pattern is that initial feedback doesn't result in any changes","msgtype":"m.text"},"ts":1426731368000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it often takes some sustained (calm and civil) lobbying","msgtype":"m.text"},"ts":1426731390000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ask the responsive-images advocates about how they felt in the weeks after they first brought back their <picture> proposal to the browser projects","msgtype":"m.text"},"ts":1426731472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rektide: you probably don't want to hear this but it seems like it often takes pretty much a year before you see others come around on some things","msgtype":"m.text"},"ts":1426731522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" but that's not a pattern unique to getting standards problems fixed","msgtype":"m.text"},"ts":1426731574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cf. https://twitter.com/lgarron/status/576522491939536897","msgtype":"m.text"},"ts":1426731583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and there are other cases like when we spent I think at least 5 years trying to get the Apache web server project to change the non-conforming default content type that they were sending out","msgtype":"m.text"},"ts":1426731693000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and it's taken 5 years for blink to move DOM properties to prototypes where they're supposed to be","msgtype":"m.text"},"ts":1426731792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and WebKit is still shipping broken behavior for that, with no sign they plan on fixing it any time soon","msgtype":"m.text"},"ts":1426731849000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so it's not you're talking to people who've had no big frustrations of their own waiting for others to come around to making things  right","msgtype":"m.text"},"ts":1426731926000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"has anyone attempted spec'ing autofill behavior? specifically looking at what events should be expected","msgtype":"m.text"},"ts":1426741441000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"I see \"autocomplete\" event to fire on the form. but nothing for the fields. input? change? keyup?","msgtype":"m.text"},"ts":1426741769000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"the challenge is a lot of authors binding to keyup and I'm wondering if it's fair to send a synthetic keyup after autofill. (the alternative is wait till they also bind to oninput)","msgtype":"m.text"},"ts":1426741824000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"hi, am i at the right place ? the whatwg html.....","msgtype":"m.text"},"ts":1426749572000,"senderName":"seekadvice","senderId":"seekadvice@irc"},
{"content":{"body":"helloooooooo....... anybody here, this is my 1st time on this kind of communication,   i need some advice......regarding html","msgtype":"m.text"},"ts":1426749979000,"senderName":"seekadvice","senderId":"seekadvice@irc"},
{"content":{"body":"seekadvice: well, ask away :)","msgtype":"m.text"},"ts":1426750136000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"i wanted to learn html, i am a novice programmer,, i was hit by the news of DRM in W3C,,, i was looking for an alternative and came by whatwg.org by mistake, , so now i am considering learning html,, just with out DRM,","msgtype":"m.text"},"ts":1426750297000,"senderName":"seekadvice","senderId":"seekadvice@irc"},
{"content":{"body":"i found this pdf on whatwg.org with 1250 pages,,,,, any easier method to learn html ?","msgtype":"m.text"},"ts":1426750351000,"senderName":"seekadvice","senderId":"seekadvice@irc"},
{"content":{"body":"oh well,,,,, thank you anyway,,,i think i found another source.","msgtype":"m.text"},"ts":1426751331000,"senderName":"seekadvice","senderId":"seekadvice@irc"},
{"content":{"body":"Can we just make all \"boolean-ish\" attributes (but not actual boolean ones) accept true/false/yes/no/on/off?","msgtype":"m.text"},"ts":1426754285000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess we'd have to pick a canonical one for the reflection into script, and that might be backward-incompat...","msgtype":"m.text"},"ts":1426754300000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wait no they should all reflect as javascript booleans","msgtype":"m.text"},"ts":1426754315000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: what is the author-visible implication of \"this also impacts Request and the first step of HTTP network or cache fetch\"?","msgtype":"m.text"},"ts":1426754535000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: should be obvious for Request","msgtype":"m.text"},"ts":1426754568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there's no implication for the latter I think, just mentioning it","msgtype":"m.text"},"ts":1426754601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, you mean that request.body will behave the same as res.body with respect to .clone()?","msgtype":"m.text"},"ts":1426754603000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: at least on the service worker side, it's still not entirely clear to me how Request works on both sides without issue","msgtype":"m.text"},"ts":1426754650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i really hope it does...","msgtype":"m.text"},"ts":1426754691000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Node has a messy ServerRequest vs. ClientRequest thing, at first I thought fetch would have to but then I was convinced we could avoid it.","msgtype":"m.text"},"ts":1426754718000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: okay, I think the same is actually true for Response to some extent, e.g. you want to read from response, but you might also want to write to it from a service worker","msgtype":"m.text"},"ts":1426754754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, definitely","msgtype":"m.text"},"ts":1426754765000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyway, all I meant to say was that what goes for Response also goes Request","msgtype":"m.text"},"ts":1426754785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for ^","msgtype":"m.text"},"ts":1426754791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what we decided last time we talked about this is that the creator of a (Request|Response) gets to write to it, consumer gets to read","msgtype":"m.text"},"ts":1426754791000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1426754795000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"some new security attack with caches, abstract sounds scary http://arxiv.org/pdf/1502.07373v2.pdf","msgtype":"m.text"},"ts":1426754909000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hey there are some positive parts in there too","msgtype":"m.text"},"ts":1426756560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The fierce competition between different browser vendors resulted in an intense focus on improving Javascript performance. As a result, Javascript code performs in some scenarios on a level which is on par with that of native code.\"","msgtype":"m.text"},"ts":1426756563000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that part's nice","msgtype":"m.text"},"ts":1426756568000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah and now we have all the exploits of .exe :-P","msgtype":"m.text"},"ts":1426756622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"welp, might as well give up and add shared memory","msgtype":"m.text"},"ts":1426756750000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah browser has to be new enough to support High Resolution Time","msgtype":"m.text"},"ts":1426756958000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"the actual resolution of this timestamp for Safari for MacOS was on the order of nanoseconds, while Internet Explorer for Windows had a 0.8µs resolution. Chrome, on the other hand, offered a uniform resolution of 1µ on all operating systems we tested\"","msgtype":"m.text"},"ts":1426757015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but iOS is safe because no High Resolution Time support","msgtype":"m.text"},"ts":1426757059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\" the Javascript level, it seems that somewhat reducing the resolution of the high-resolution timer will make this attack more difficult to launch\"","msgtype":"m.text"},"ts":1426757095000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"** \"A possible stopgap measure would be to restrict access to this timer to applications which gain the user’s consent\"","msgtype":"m.text"},"ts":1426757142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"(for example, by displaying a confirmation window)\"","msgtype":"m.text"},"ts":1426757164000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"who woulda thought","msgtype":"m.text"},"ts":1426757178000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"... that High Resolution Time would become a feature that's sufficiently powerful/dangerous enough to merit requiring user opt-in","msgtype":"m.text"},"ts":1426757248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie, inform plh of high interest to Web Perf WG, security exploit: http://arxiv.org/pdf/1502.07373v2.pdf \"A possible stopgap measure would be to restrict access to the High Resolution Timer API to applications which gain the user’s consent (for example, by displaying a confirmation window)\"","msgtype":"m.text"},"ts":1426757654000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1426757654000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"oope","msgtype":"m.text"},"ts":1426757660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well given the number of timing attacks we are already familiar with it's not super surprising","msgtype":"m.text"},"ts":1426758424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, given the number of APIs it seems more and more like we want to ask the user to what extent they trust a certain domain + lock combination","msgtype":"m.text"},"ts":1426758468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ping, i'm working with sw, trying to do send a postMessage back to a window, but the result from clients.matchAll() is an empty sequence, am I missing something?","msgtype":"m.text"},"ts":1426764811000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: in transit at the moment, but will take a look when I'm in the office. What version of Chrome?","msgtype":"m.text"},"ts":1426766756000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hm, I have a .ttf font that has a printable character for code point U+0010","msgtype":"m.text"},"ts":1426767250000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I guess I am out of luck displaying that?","msgtype":"m.text"},"ts":1426767257000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: where is the normative bit for sending Origin for POSTs? \"It is used for all HTTP fetches whose CORS flag is set as well as those where request's method is `POST`.\"","msgtype":"m.text"},"ts":1426769001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: or is that up to specs that invoke fetch?","msgtype":"m.text"},"ts":1426769015000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah","msgtype":"m.text"},"ts":1426769181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: the idea is that they would set the force Origin flag or whatever it's called","msgtype":"m.text"},"ts":1426769193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I'm open to doing that some other way","msgtype":"m.text"},"ts":1426769204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: 43.02337, having same problems in gecko :( ... so was wondering if was my code, but it looks a pretty straight forward use. meanwhile i can workaround it on gecko using broadcastchannel api, but didn't think how i can do the same on canary","msgtype":"m.text"},"ts":1426769327000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"annevk: thx","msgtype":"m.text"},"ts":1426769335000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i dunno, given the note i had expected the algorithm to look at the method and insert Origin if it's POST, but maybe it's fine as is","msgtype":"m.text"},"ts":1426769423000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ooh, that note is describing the policy there seems to be some agreement around","msgtype":"m.text"},"ts":1426769470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I agree that is somewhat confusing. Depends a bit on who reads the document. Could add something for specificationers.","msgtype":"m.text"},"ts":1426769511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that could be useful","msgtype":"m.text"},"ts":1426769847000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"on another note, why does sendBeacon use CORS instead of matching <form method=post> ?","msgtype":"m.text"},"ts":1426769899000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"francisco_: is the code anywhere I can see?","msgtype":"m.text"},"ts":1426770141000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"zcorpan: custom payloads?","msgtype":"m.text"},"ts":1426771898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: for the subset that matches <form method=post> they do the same, presumably","msgtype":"m.text"},"ts":1426771910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it's not like you need to look at the response with sendBeacon()","msgtype":"m.text"},"ts":1426771921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah right. yeah i guess that makes sense","msgtype":"m.text"},"ts":1426772082000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: it's different in that sendBeacon will fail to follow redirects without CORS headers in the response","msgtype":"m.text"},"ts":1426772114000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that's a good point","msgtype":"m.text"},"ts":1426772147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Web Performance WG did it rather rushed and without really understanding the networking principles and I guess I missed that bit...","msgtype":"m.text"},"ts":1426772218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meh","msgtype":"m.text"},"ts":1426772220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apparently blink still follows the redirect, so maybe we can change the spec","msgtype":"m.text"},"ts":1426772263000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://code.google.com/p/chromium/issues/detail?id=468527","msgtype":"m.text"},"ts":1426772299000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1426773640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA:  yup -> https://github.com/arcturus/serviceworkerware/blob/master/lib/sww.js#L150-L173","msgtype":"m.text"},"ts":1426774071000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: I just went to https://jakearchibald.github.io/svgomg/, opened devtools, ran window.onmessage = function(e) { console.log(e) }","msgtype":"m.text"},"ts":1426779864000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"francisco_: then chrome://serviceworker-internals/, inspect…","msgtype":"m.text"},"ts":1426779881000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"francisco_: then clients.matchAll().then(function(c) { c[0].postMessage('hi') })","msgtype":"m.text"},"ts":1426779927000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and that was logged in the window","msgtype":"m.text"},"ts":1426779933000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks will give it a second try","msgtype":"m.text"},"ts":1426780036000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"JakeA: no luck for me https://pastebin.mozilla.org/8826453 in mac 64bits 43.02337","msgtype":"m.text"},"ts":1426780400000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: what's navigator.serviceWorker.controller of the page?","msgtype":"m.text"},"ts":1426780683000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: woops, is null, very null","msgtype":"m.text"},"ts":1426780800000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: What's the SW's scope?","msgtype":"m.text"},"ts":1426780826000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(and the page's url? I'm betting it's out of scope)","msgtype":"m.text"},"ts":1426780848000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not specifying scope, and doing the request from the same page that installs the sw","msgtype":"m.text"},"ts":1426780898000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: that means the scops is './' resolved against the SW script url","msgtype":"m.text"},"ts":1426780925000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm guessing that makes the page out of scope","msgtype":"m.text"},"ts":1426780931000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"francisco_: serviceworker-internals will tell you the calculated scope","msgtype":"m.text"},"ts":1426780952000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: right, http://localhost:8000/demo/","msgtype":"m.text"},"ts":1426781126000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: but the SW *script* url?","msgtype":"m.text"},"ts":1426781144000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you are totally right, it's outside the demo directory, despite that the registration is being done there","msgtype":"m.text"},"ts":1426781175000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: that's fine if it's /sw.js, but I guess it isn't?","msgtype":"m.text"},"ts":1426781199000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it isent, is /lib/sw.js","msgtype":"m.text"},"ts":1426781216000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"*isnt","msgtype":"m.text"},"ts":1426781222000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: ahh, so the scope is /lib/, which is why pages in /demo/ aren't showing up","msgtype":"m.text"},"ts":1426781251000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: \\o/","msgtype":"m.text"},"ts":1426781300000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: in future, clients.matchAll({includeUncontrolled: true}) would have shown that page, but Chrome doesn't support that yet","msgtype":"m.text"},"ts":1426781337000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: good to know, thanks a lot!","msgtype":"m.text"},"ts":1426781414000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: the SW script url is security-sensitive, see http://jakearchibald.com/2014/launching-sw-without-breaking-the-web/ (we went with option B)","msgtype":"m.text"},"ts":1426781473000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: could I have more than one sw handling different scopes?","msgtype":"m.text"},"ts":1426781585000,"senderName":"francisco_","senderId":"francisco_@irc"},
{"content":{"body":"francisco_: yep!","msgtype":"m.text"},"ts":1426783927000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: promise.chain… any idea why we have that?","msgtype":"m.text"},"ts":1426784703000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: The guy who implemented Blink's promise support liked a different set of names, and decided to just say \"fuck it, I'm shipping these instead\".","msgtype":"m.text"},"ts":1426785076000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmm, yeah, I remember Promise.resolved etc.","msgtype":"m.text"},"ts":1426785117000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Dealing with all the randos in SVG who dont' give a shit about browsers is always amusing.","msgtype":"m.text"},"ts":1426785424000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: I was thinking about SWs that don't want fetch events again...  can't the UA just detect this by looking to see if the SW script registered an onfetch handler during install?  If it didn't then, just bypass all the network interception logic for that registration, etc","msgtype":"m.text"},"ts":1426786815000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in regards to the third goal from https://github.com/slightlyoff/ServiceWorker/issues/566","msgtype":"m.text"},"ts":1426786858000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: annevk wasn't keen on that. I was","msgtype":"m.text"},"ts":1426786860000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: Registering an event handler cant' cause an observable behavior change.  This is consistent across the web platform.","msgtype":"m.text"},"ts":1426786893000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can obviously omit *actually firing the event* if no one's listening, but that's not observable.  You shouldn't change anything that is possible to detect.","msgtype":"m.text"},"ts":1426786941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't think I suggested any observable change... just an optimization in UA for avoiding fetch event dispatch and network interception if the event would go to /dev/null anyway.","msgtype":"m.text"},"ts":1426786991000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Well yeah, that's an unobservable change - if nothing's around to see whether the intercept happened, you don't actually have to process it.","msgtype":"m.text"},"ts":1426787027000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If a tree falls in the forest...","msgtype":"m.text"},"ts":1426787049000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Problem is you need to spin up the SW to see if the listener is registered","msgtype":"m.text"},"ts":1426787098000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that happens at install time, right?","msgtype":"m.text"},"ts":1426787113000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Just because it was registered last time it span up, doesn't mean it will be this time","msgtype":"m.text"},"ts":1426787115000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, no.  You need to keep around a bool *associated with* the SW recording whether or not it ever registered an event handler.","msgtype":"m.text"},"ts":1426787132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: in theory the state of the fetch event handler being setting could be persisted when the SW is shutdown","msgtype":"m.text"},"ts":1426787154000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"imagine: if (Math.round(Math.random())) self.addEventListener('fetch', …)","msgtype":"m.text"},"ts":1426787160000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't understand how it could be not registered suddenly, without having spun up at some point.","msgtype":"m.text"},"ts":1426787163000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: I'm not talking about static analysis.  The SW does or doesn't register a fetch event listener. If it doesn't, it's not going to see any fetch events. So you dont' need to spin it up when network requests happen.","msgtype":"m.text"},"ts":1426787216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: that is kind of undefined behavior, no?  you have no guarantees how many times your SW script will be reloaded","msgtype":"m.text"},"ts":1426787224000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Because, without a fetch listener, *it can't react to the fetch*, so it can't change itself to register a fetch listener.","msgtype":"m.text"},"ts":1426787235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It can only do new things at install time, and when responding to something.","msgtype":"m.text"},"ts":1426787257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Unless I'm totally missing something.","msgtype":"m.text"},"ts":1426787270000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Like, unless we added a \"I just woke up\" event since last time I looked, which would be a terrible idea.)","msgtype":"m.text"},"ts":1426787302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yea... I think the random example above is assuming stuff outside the fetch event handler will run on network interception... but thats not in the spec","msgtype":"m.text"},"ts":1426787317000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"for my limited understanding of the spec","msgtype":"m.text"},"ts":1426787342000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Definitely not, and if it did, that's terribly nondeterministic.","msgtype":"m.text"},"ts":1426787347000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: SW runs, Math.round(Math.random()) is false, fetch listener not attached. Fetch happens, if you spin up the SW now, a listener *might* be registered","msgtype":"m.text"},"ts":1426787350000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how can script reliably depend on the behavior... the SW might not have shutdown and therefore would not get executed again?","msgtype":"m.text"},"ts":1426787383000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: So you let it run whatever rando code it wants upon wakeup?  Putting code at the top of my SW file is effectively wrapped in a \"onSpinUp\" handler?","msgtype":"m.text"},"ts":1426787386000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"where spin up may or may not happen","msgtype":"m.text"},"ts":1426787404000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"this is making GC observable, right?","msgtype":"m.text"},"ts":1426787410000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: yes, how would you do it otherwise?","msgtype":"m.text"},"ts":1426787415000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1426787419000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's making SW startup observable","msgtype":"m.text"},"ts":1426787429000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but you are saying SW startup should happen before a fetch event is handled... what guarantees that will run for every network interception?","msgtype":"m.text"},"ts":1426787461000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: what if the browser just never shutdown the SW (allowed AFAICT)","msgtype":"m.text"},"ts":1426787480000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah that's fine","msgtype":"m.text"},"ts":1426787492000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Okay, so we landed ourselves in nondeterminism hell.","msgtype":"m.text"},"ts":1426787502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: scripts that depend on \"spin up\" are going to be broken in the real world","msgtype":"m.text"},"ts":1426787513000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"We'll have to wake up the SW for *every* possible event it *might* be capable of handling, *forever*.","msgtype":"m.text"},"ts":1426787515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"spin up hook","msgtype":"m.text"},"ts":1426787517000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: totally agree","msgtype":"m.text"},"ts":1426787536000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, I give less than a fuck about scripts that implicitly depend on their \"spinup\" handler.  Break 'em, they suck, who cares.  Register your shit during install or face the possibility of never getting it registered.","msgtype":"m.text"},"ts":1426787567000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: install, activate and fetch are the only events that don't require another registration step","msgtype":"m.text"},"ts":1426787585000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Then either fix that (make fetch require an explicit registration) or stop caring about things that happen in the spinup handler. ^_^","msgtype":"m.text"},"ts":1426787636000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Btw, I'm more than happy to say \"If the SW has terminated, and the event wasn't registered on the last spin up, it won't be spun up for that event\"","msgtype":"m.text"},"ts":1426787640000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: I think there's some misunderstanding here? What's your concern?","msgtype":"m.text"},"ts":1426787681000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I mean, either behavior is *consistent*.  There's nothing requiring a SW to be spun up at random times.  If it's not listening for an event, it has no way of knowing that it's missing them.","msgtype":"m.text"},"ts":1426787689000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: The concern, per #566, is that you have to spin up a SW on every fetch, *just in case* it registers a fetch handler in its spinup handler (that is, the top-level code not placed in an onfoo handler).","msgtype":"m.text"},"ts":1426787827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: maybe this just falls in the unspec'd part of the life cycle of a SW?  maybe we need language that says \"when a SW is stopped, the state of the relevent event handlers is persisted and used to determine if the SW should be checked for future events\"... or something like that","msgtype":"m.text"},"ts":1426787860000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Despite the complete nondeterminism here, because there's no way of knowing how many spinup events you'll get - it's possible to get 0 (the SW never gets killed), or one per second (constant killing/revival).","msgtype":"m.text"},"ts":1426787889000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, I'm happy to go for the \"only spin up if event previously registered\" behaviour. Non-deterministic event handlers within a ServiceWorker should be considered a bug","msgtype":"m.text"},"ts":1426787906000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1426787917000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The important bit is that this *doesn't* violate the \"no side-effects from event listening\" rule.","msgtype":"m.text"},"ts":1426787938000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: is this a new spec issue or just #566?  I can write a new issue if you want","msgtype":"m.text"},"ts":1426787949000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think that issue is fine","msgtype":"m.text"},"ts":1426788165000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1426788200000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: wanderview: you wouldn't be able to add the listener, say, between 9am-5pm using Date.now()","msgtype":"m.text"},"ts":1426788343000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: don't we need to hook an alarm api into SW?","msgtype":"m.text"},"ts":1426788369000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Of course, if you wanted to do that, you'd add the listener and have the date check inside the listener","msgtype":"m.text"},"ts":1426788394000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: yeah, at some point","msgtype":"m.text"},"ts":1426788403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm having a hard time thinking of a non-nefarious reason to have time based network interception","msgtype":"m.text"},"ts":1426788437000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: You can't add a listener during a specific time anyway, because there's no guarantee that the SW will be spun up during that time.","msgtype":"m.text"},"ts":1426788928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And if we add an alarm API, then it's totally fine - the SW is *guaranteed* to spin up at a particular time, and you're registering a fetch handler from within that handler. Everything's well-defined and deterministic.","msgtype":"m.text"},"ts":1426788969000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(You're still screwed if you stochastically register a fetch listener within the \"spinup handler\", though, because there's no guarantee that the SW will be freshly spun up when the alarm goes off; it might already be awake for some other reason.)","msgtype":"m.text"},"ts":1426789024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wanderview: I was more thinking of other events like push, where the user may not want notifications during particular times. Of course the correct place to handle this is in the handler","msgtype":"m.text"},"ts":1426789482000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: well, at the moment the time based thing would work, as the SW is spun up, then the event is fired","msgtype":"m.text"},"ts":1426789530000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess a long-living SW would break that though","msgtype":"m.text"},"ts":1426789579000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea... i think for now they have to do it in the handler... an alarm api would let people do it in a more batter efficient way in the future","msgtype":"m.text"},"ts":1426789581000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: *Unless* the SW was already spun up for some other reason, yeah.","msgtype":"m.text"},"ts":1426789583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So it's still completely undependable.","msgtype":"m.text"},"ts":1426789595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah. Seems fine to avoid spinning up if listener wasn't registered. It does mean that spin up behaviour changes depending on listeners, so it has a behavioural impact","msgtype":"m.text"},"ts":1426789681000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(But I'm fine with that)","msgtype":"m.text"},"ts":1426789689000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess we just have to convince annevk","msgtype":"m.text"},"ts":1426789774000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: Really, it's just that the \"spin up handler\" is completely non-deterministic and there's no way to know when it'll fire.","msgtype":"m.text"},"ts":1426789975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It so happens that browsers use various signals, such as whether listeners are registered, to determine when to randomly fire the spinup event.","msgtype":"m.text"},"ts":1426790254000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]