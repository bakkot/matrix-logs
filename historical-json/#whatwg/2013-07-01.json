[
{"content":{"body":"why when I paste few letters in text node that is in contenteditable element it splits nodes at te place where I paste the letters? this is making me very big troubles","msgtype":"m.text"},"ts":1372662347000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"http://jsfiddle.net/jMKX5/ first write some letters in that section, then copy paste few letters in it, you will see when you paste the letters it will split the text nodes at the place of the paste. Why this is happening? This is making me a lot of troubles","msgtype":"m.text"},"ts":1372664976000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"Ms2ger: now http://dom.spec.whatwg.org/#nodeiterator detach() does nothing, referenceNode can be Node rather than Node? right?","msgtype":"m.text"},"ts":1372667547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, that looks correct","msgtype":"m.text"},"ts":1372667694000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"good morning","msgtype":"m.text"},"ts":1372681478000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"anybody have parser tests for <template> yet?","msgtype":"m.text"},"ts":1372682517000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: they're in html5lib afaik","msgtype":"m.text"},"ts":1372682573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1372682601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1372682602000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm http::apple.com/ parses differently given a base URL","msgtype":"m.text"},"ts":1372683989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"people sure like to have things both ways","msgtype":"m.text"},"ts":1372684386000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"this thing is better than this other thing! and you can't argue against it because we're only talking about consistency here\"","msgtype":"m.text"},"ts":1372684436000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"irc.m.o having issues for anyone else?","msgtype":"m.text"},"ts":1372686002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, there we are","msgtype":"m.text"},"ts":1372686016000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"can anyone confirm that `I'm &notit; I tell you` is a parse error, even if it occurs in an attribute value? (trying to make sure I understand http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references correctly)","msgtype":"m.text"},"ts":1372690120000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"marcosc: promises will end up in JS, but not in any timeframe we can work with","msgtype":"m.text"},"ts":1372690129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"marcosc: same for event loop, same problem","msgtype":"m.text"},"ts":1372690142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: No parse error, per how I read it.","msgtype":"m.text"},"ts":1372690352000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or maybe there is?","msgtype":"m.text"},"ts":1372690391000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I dunno.","msgtype":"m.text"},"ts":1372690392000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"We just changed html5lib so it wasn't based on my original reading, but now I can read the spec either way.","msgtype":"m.text"},"ts":1372690430000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"matjas: I believe it is not. A match is made (&not), so that paragraph doesn't apply. The following paragraph only raises a parse error if the following character is an equals sign, which it is not.","msgtype":"m.text"},"ts":1372690533000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's my opinion.","msgtype":"m.text"},"ts":1372690540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, it's just ignored","msgtype":"m.text"},"ts":1372690736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1372691234000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"so in attribute values, e.g. `&amp` without trailing semicolon is perfectly valid","msgtype":"m.text"},"ts":1372691271000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"or `&not`, to stick to the previous example","msgtype":"m.text"},"ts":1372691288000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1372691338000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yeah, I think we didn't want to flag many URLs as invalid","msgtype":"m.text"},"ts":1372691342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders ^ ?","msgtype":"m.text"},"ts":1372691577000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin - \"For scripts\" part says nothing about Workers. Is the origin of the worker script the origin of the document that controls the worker?","msgtype":"m.text"},"ts":1372691587000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"matjas: Well, no, it will all get unconsumed and come out as the literal string \"&amp\", it's not just not a parser error.","msgtype":"m.text"},"ts":1372691627000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, in the above &notit; example.","msgtype":"m.text"},"ts":1372691649000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It depends what character follows &amp, &not, etc.","msgtype":"m.text"},"ts":1372691660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok, got it","msgtype":"m.text"},"ts":1372691696000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"If it's an alphanumerical character, you get the literal string \"&amp\" and no parse error. If it's an equals sign, you get the literal string and a parse error.","msgtype":"m.text"},"ts":1372691699000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If it's neither, you get \"&\" and no parse error.","msgtype":"m.text"},"ts":1372691709000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*If it's neither, you get \"&\" and a parse error.","msgtype":"m.text"},"ts":1372691733000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"outside of attribute values, e.g. &amp is always a parse error, inside of attribute values it’s only a parse error when followed by =","msgtype":"m.text"},"ts":1372691735000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"or am i oversimplifying there?","msgtype":"m.text"},"ts":1372691764000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Yes. It's only a parse error if it gets converted to \"&\" *or* it is followed by = in an attribute.","msgtype":"m.text"},"ts":1372691880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: thanks!","msgtype":"m.text"},"ts":1372691901000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"gsnedders, clearly your entire stack should be written in Coq","msgtype":"m.text"},"ts":1372691927000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: :)","msgtype":"m.text"},"ts":1372692006000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: Not sure how viable it really is to have a wholly proven stack, as nice as the idea is.","msgtype":"m.text"},"ts":1372692048000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Even ignoring the viability of the time it would take!)","msgtype":"m.text"},"ts":1372692063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, yeah, proving stuff tends to be hard","msgtype":"m.text"},"ts":1372692068000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I mean, Coq can nowadays export compilable code, but then you're at the mercy of unproven compilers, so I'm not convinced it helps you /that much/.","msgtype":"m.text"},"ts":1372692131000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It saves you writing stuff twice, sure.","msgtype":"m.text"},"ts":1372692160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"minor question for annevk (should he return and look at logs) or Ms2ger - any thoughts on this test? https://critic.hoppipolla.co.uk/showcomment?chain=280","msgtype":"m.text"},"ts":1372694074000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(Most of the test code is in a worker script - see https://critic.hoppipolla.co.uk/showfile?sha1=8c50d4a4ed37ca0293bac5a547f08be6022bfccd&path=XMLHttpRequest/resources/workerxhr-origin-referrer.js&review=134 )","msgtype":"m.text"},"ts":1372694167000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Needs more spaces ('if (foo) {', not 'if(foo){')","msgtype":"m.text"},"ts":1372694715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If hallvors were here I could tell him I don't follow the test","msgtype":"m.text"},"ts":1372695267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so... Document.getComputedStyle(element) returns a CSSStyleDeclaration, as do element.specifiedStyle, element.defaultStyle, element.computedStyle, element.usedStyle, and element.style.","msgtype":"m.text"},"ts":1372697336000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"pop quiz. which of the last five, if any, is equivalent to the first one?","msgtype":"m.text"},"ts":1372697349000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: userdStyle?","msgtype":"m.text"},"ts":1372698066000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1372698093000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: none?","msgtype":"m.text"},"ts":1372698316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anne is correct!","msgtype":"m.text"},"ts":1372698392000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"getComputedStyle() returns the resolvedStyle, which you can't get straight from the element for some reason","msgtype":"m.text"},"ts":1372698412000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ooh GetStyleUtils, that's new","msgtype":"m.text"},"ts":1372698436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and computedStyle returns the computed style, unlike getComputedStyle","msgtype":"m.text"},"ts":1372698438000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i really think we should rename computedStyle on the API. I know the specs are confusing, but making the API confusing too is not good.","msgtype":"m.text"},"ts":1372698454000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I guess the idea is that nobody would use getComputedStyle anymore","msgtype":"m.text"},"ts":1372698474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although it's unclear how they're solving pseudo-elements...","msgtype":"m.text"},"ts":1372698502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unless we're planning on dropping it from the spec, that's not gonna happen.","msgtype":"m.text"},"ts":1372698506000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"pseudos are exposed in the DOM more directly","msgtype":"m.text"},"ts":1372698512000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1372698527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=22528","msgtype":"m.text"},"ts":1372698711000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ah ele.pseudo(\"::before\").style","msgtype":"m.text"},"ts":1372698854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder why they didn't drop the \"::\" bit for that API","msgtype":"m.text"},"ts":1372698866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i kinda like it. makes it more obvious that it's a pseudo.","msgtype":"m.text"},"ts":1372699104000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"when scanning the code.","msgtype":"m.text"},"ts":1372699107000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Does this work? ele.pseudo(\":before\")","msgtype":"m.text"},"ts":1372699159000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: see the spec :-)","msgtype":"m.text"},"ts":1372699443000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(http://dev.w3.org/csswg/cssom/)","msgtype":"m.text"},"ts":1372699462000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Thanks Hixie_","msgtype":"m.text"},"ts":1372699499000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(I guess the underlying question was: which spec is this in)","msgtype":"m.text"},"ts":1372699508000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"can we rename the concept currently named \"resolved style\" to \"computed style\" so that concept and getComputedStyle match, then rename \"resolved style\" to something else?","msgtype":"m.text"},"ts":1372699509000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"ftr, it does","msgtype":"m.text"},"ts":1372699524000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"sorry, rather, rename \"computed style\" to something else","msgtype":"m.text"},"ts":1372699527000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: No, we can't.  \"computed style\" is used *everywhere* in the specs.  Too much legacy compat to change it.  ^_^","msgtype":"m.text"},"ts":1372699544000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: right, but I guess my distinction was between APIs and spec text. Spec text seems malleable, but I guess maybe not, at least in W3C world.","msgtype":"m.text"},"ts":1372699608000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It's not that it's not malleable, it's that it's just too pervasive to realistically change.  We'd miss things, and there'd be persistent confusion.","msgtype":"m.text"},"ts":1372699645000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah. that's why we changed the meaning of the term in the first place. so we'd hit all those places.","msgtype":"m.text"},"ts":1372699724000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but we didn't think of the implications on getComputedStyle()","msgtype":"m.text"},"ts":1372699730000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so now the API and the spec use different terms, just like for a while \"URL\" APIs referred to \"URI\"","msgtype":"m.text"},"ts":1372699755000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(for that one we could rename URI back to URL in the specs because we weren't going to reuse URI for something else)","msgtype":"m.text"},"ts":1372699779000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(so that one is a different case really)","msgtype":"m.text"},"ts":1372699789000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(the term changed, not the meaning)","msgtype":"m.text"},"ts":1372699798000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Right.  getComputedStyle is just an unfortunate casualty that will confuse people forever.","msgtype":"m.text"},"ts":1372700129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But hopefully el.computedStyle.foo is sufficiently easier than getComputedStyle(el).foo that everyone will just switch to it.","msgtype":"m.text"},"ts":1372700152000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it should confuse only us spec people","msgtype":"m.text"},"ts":1372700160000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"people who don't read specs need not be confusing","msgtype":"m.text"},"ts":1372700167000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"need not be confused, rather","msgtype":"m.text"},"ts":1372700171000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"we should just make sure we don't do something like have two apis that say they do the same thing but do different things","msgtype":"m.text"},"ts":1372700184000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hence https://www.w3.org/Bugs/Public/show_bug.cgi?id=22528","msgtype":"m.text"},"ts":1372700193000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"We need a way to actually get the computed style for the handful of legacy properties.","msgtype":"m.text"},"ts":1372700280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We can't call it something other than \"computed style\", because that's confusing to *everyone*.","msgtype":"m.text"},"ts":1372700290000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"call it something else :-)","msgtype":"m.text"},"ts":1372700290000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cascadedValue or something","msgtype":"m.text"},"ts":1372700294000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That's a different concept.  ^_^","msgtype":"m.text"},"ts":1372700300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"calculatedValue","msgtype":"m.text"},"ts":1372700323000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Also: no, that confuses *everyone*.  It's the computed value.  That's what it's called in every spec.  The one and only place where it's called something different is the name of the getComputedStyle method.","msgtype":"m.text"},"ts":1372700333000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it doesn't confuse everyone. it confuses the minority of peopel who read specs.","msgtype":"m.text"},"ts":1372700346000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what will confuse everyone is having two apis with the same name that do different things.","msgtype":"m.text"},"ts":1372700368000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"this is exactly the kind of thing that makes people hate the web and makes other platforms make fun of us.","msgtype":"m.text"},"ts":1372700416000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"What will confuse everyone is having a brand new name \"calculated value\" that doesn't exist in any spec.","msgtype":"m.text"},"ts":1372700425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rawComputedValue then","msgtype":"m.text"},"ts":1372700439000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"seriously, \"everyone\" is wrong there","msgtype":"m.text"},"ts":1372700446000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And if we tried to update to use it, we'd fail and miss parts, and then people would think that we actually meant to say \"computed value\" in some places.","msgtype":"m.text"},"ts":1372700447000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it will only confuse people who read the spec","msgtype":"m.text"},"ts":1372700450000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Right.  People who read tutorials will just read that getComputedStyle() is old and busted, and you should use .computedStyle instead.","msgtype":"m.text"},"ts":1372700472000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's so not how the web works","msgtype":"m.text"},"ts":1372700501000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"people keep using old APIs","msgtype":"m.text"},"ts":1372700506000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"they exist in code","msgtype":"m.text"},"ts":1372700509000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"we can't change that","msgtype":"m.text"},"ts":1372700512000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Sure.  And?","msgtype":"m.text"},"ts":1372700519000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we have to confuse someone. better it be the limited number of people who read the spec than be everyone.","msgtype":"m.text"},"ts":1372700530000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"everyone who uses the api","msgtype":"m.text"},"ts":1372700545000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I'd rather it be the authors here, honestly.  This is the kind of detail that implementors can easily get wrong and produce confusing, long-lasting bugs.","msgtype":"m.text"},"ts":1372700573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand how you can think that having doc.getComputedStyle(element) != element.computedStyle is even something we could plausibly argue for","msgtype":"m.text"},"ts":1372700573000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"...woah","msgtype":"m.text"},"ts":1372700578000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wait, back up","msgtype":"m.text"},"ts":1372700587000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you think it's better to confuse millions of authors than the four people who will implement this?","msgtype":"m.text"},"ts":1372700604000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's not the four people.  It's everyone who ever touches the relevant code, every time they look at a spec that mentions \"computed value\" or \"calculated value\", or meant to say one but wasn't updated so it says the other.","msgtype":"m.text"},"ts":1372700641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We don't just have an internal list of computed values, you know.","msgtype":"m.text"},"ts":1372700656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That stuff has to be calculated.","msgtype":"m.text"},"ts":1372700662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes i am aware","msgtype":"m.text"},"ts":1372700688000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i respectfully disagree that those people, for whom we can provide test cases, are more important than the entire javascript authoring community","msgtype":"m.text"},"ts":1372700723000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"users < authors < implementors < spec writers < theorists","msgtype":"m.text"},"ts":1372700738000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"where \"<\" is not \"less than\" :-)","msgtype":"m.text"},"ts":1372700755000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but \"rhs must defer to lhs\" :-)","msgtype":"m.text"},"ts":1372700774000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Unless there are strong reasons not to, yes.","msgtype":"m.text"},"ts":1372701408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"we have to provide more tests and have an abundance of clarity in the specs\" is not a strong reason, it's monday.","msgtype":"m.text"},"ts":1372701772000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"changing the spec concept of \"computed style\" to \"calculated style\" doesn't seem like a bad idea","msgtype":"m.text"},"ts":1372701911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it'll only confuse a handful of people for a while, and those are also the people that learn about the new thing soon enough","msgtype":"m.text"},"ts":1372701938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that could work, but i'm not even proposing that. i'm just proposing having the same warnings around .computedStyle as around .getComputedStyle, and having a separate .rawComputedStyle property.","msgtype":"m.text"},"ts":1372701983000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't even think it's _that_ confusing for implementors, to be honest.","msgtype":"m.text"},"ts":1372701994000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"this is exactly the kind of thing that makes people hate the web and makes other platforms make fun of us.\" +1","msgtype":"m.text"},"ts":1372702399000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: computed vs. calculated … that’ll be fun in non-English languages","msgtype":"m.text"},"ts":1372702498000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(both words translate to the same in French)","msgtype":"m.text"},"ts":1372702509000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"on a different note... can anyone see a way in which an HTML parser can see a <button> token while a button element is in scope, then, after implying the </button> end tag, end up in a place such that reprocessing the <button> start tag won't just end up back in the in body <button> handler with nothing else having changed?","msgtype":"m.text"},"ts":1372702533000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"SimonSapin: you'd just use the English word","msgtype":"m.text"},"ts":1372704853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meh","msgtype":"m.text"},"ts":1372704871000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"On parle déjà bien assez de « pusher des commits » et autres anglicismes …","msgtype":"m.text"},"ts":1372704928000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Alles vertalen is niet echt nuttig als je ook naar internationale conferenties, artikelen erover leest in het Engels, etc.","msgtype":"m.text"},"ts":1372705807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think you accidentally a word there","msgtype":"m.text"},"ts":1372705853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Je gelijk","msgtype":"m.text"},"ts":1372705874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so we're really making .computedStyle[x] != getComputedStyle(...).x ?","msgtype":"m.text"},"ts":1372708097000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"getComputedStyle depends on the window","msgtype":"m.text"},"ts":1372708128000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"esprehn: i hope not...","msgtype":"m.text"},"ts":1372708191000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: not any more than the .fooStyle attributes will","msgtype":"m.text"},"ts":1372708207000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"otherWindow.getComputedStyle(el) applied otherWindow's styles to el, last I checked","msgtype":"m.text"},"ts":1372708243000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: nope","msgtype":"m.text"},"ts":1372708274000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Does in Gecko","msgtype":"m.text"},"ts":1372708285000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"webkit has never implemented it that way","msgtype":"m.text"},"ts":1372708309000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Ms2ger: woah, really?","msgtype":"m.text"},"ts":1372708316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1372708319000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that's... exciting","msgtype":"m.text"},"ts":1372708321000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1372708327000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"At least, as far as I can remember","msgtype":"m.text"},"ts":1372708328000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Testing is encouraged :)","msgtype":"m.text"},"ts":1372708339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2386 disagrees with you","msgtype":"m.text"},"ts":1372708372000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Quite possible","msgtype":"m.text"},"ts":1372708388000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"anyway, esprehn was talking about same-window stuff. As specced today, window.getComputedStyle(element).foo != element.computedStyle.foo, which is pretty crazy imho","msgtype":"m.text"},"ts":1372708441000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"All of CSSOM is crazy","msgtype":"m.text"},"ts":1372708455000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not that crazy...","msgtype":"m.text"},"ts":1372708460000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And the rest of the web too","msgtype":"m.text"},"ts":1372708462000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not a reason to make it worse :-)","msgtype":"m.text"},"ts":1372708470000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Consistency in crappiness! :)","msgtype":"m.text"},"ts":1372708578000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm with Hixie_ on this, people are going to want to polyfill the computedStyle thing, and using getComputedStyle will just return more wrongness","msgtype":"m.text"},"ts":1372708614000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"$.style(e) is going to be e.computedStyle && e.computedStyle[x] || getComputedStyle(e).x","msgtype":"m.text"},"ts":1372708643000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"yeah, that's a good example of the kind of thing that would trip people up","msgtype":"m.text"},"ts":1372708685000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that code looks _obviously_ correct","msgtype":"m.text"},"ts":1372708691000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and it is wrong in ways that are really hard to understand","msgtype":"m.text"},"ts":1372708702000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"as i said earlier, this is the kind of thing that authors hate us for","msgtype":"m.text"},"ts":1372708712000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: The specs use \"computed style\" everywhere already. And we use \"calculate\" to indicate the perfomance of some computation without implying that it has anything to do with \"computed style\"... so it'd be kindof a pain to switch over :/","msgtype":"m.text"},"ts":1372708909000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"the spec terminology is irrelevant since only a minority of authors read the spec","msgtype":"m.text"},"ts":1372708928000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: That said, the terminology we're using in this area isn't particularly great to begin with...","msgtype":"m.text"},"ts":1372708962000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"Hixie_: We'd definitely want to make the propdef tables match up, authors do look at that.","msgtype":"m.text"},"ts":1372708987000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"Hixie_: That's at least easier to search & replace...","msgtype":"m.text"},"ts":1372708997000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"fantasai: I think the main concern is that most authors are familiar with \"computed style\" as whatever getComputedStyle does, not what specs say","msgtype":"m.text"},"ts":1372709000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I totally agree","msgtype":"m.text"},"ts":1372709008000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"fantasai: that's already wrong today, so that's an entirely separate issue","msgtype":"m.text"},"ts":1372709019000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and authors > specs, but transitioning is indeed a pain :/","msgtype":"m.text"},"ts":1372709034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kinda like Hixie_ refusing to label something \"almost standards mode\" :p","msgtype":"m.text"},"ts":1372709054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"almost standards mode\" is just a dumb term :-P","msgtype":"m.text"},"ts":1372709067000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(when used in a standard to define behaviour)","msgtype":"m.text"},"ts":1372709075000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: if we're going to do that massive of a transition, I think we might want to just overhaul all the terms...","msgtype":"m.text"},"ts":1372709081000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"\"used style\" isn't great either","msgtype":"m.text"},"ts":1372709096000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1372709098000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"fantasai: sounds like you should wait for Last Call","msgtype":"m.text"},"ts":1372709099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We're almost there... ;)","msgtype":"m.text"},"ts":1372709109000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"Tab and I are preparing that draft this week, pretty much.","msgtype":"m.text"},"ts":1372709120000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"spec editors > theory, too, and changing terms like this is theoretically good but isn't good for spec editors","msgtype":"m.text"},"ts":1372709148000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"fantasai: I guess you guys can take it into account then","msgtype":"m.text"},"ts":1372709243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fantasai: if you don't you'll find the terms enshrined in APIs and you'll be stuck with them","msgtype":"m.text"},"ts":1372709264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah :(","msgtype":"m.text"},"ts":1372709271000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"maybe we can use \"resolved style\" for what CSS calls computed style","msgtype":"m.text"},"ts":1372709283000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"I guess you could flip them","msgtype":"m.text"},"ts":1372709299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1372709303000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"Mm, more renamings","msgtype":"m.text"},"ts":1372709319000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is it LC time?","msgtype":"m.text"},"ts":1372709324000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Naming things is hard!","msgtype":"m.text"},"ts":1372709325000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"wonders why </caption> isn't optional","msgtype":"m.emote"},"ts":1372709332000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: in fact it is, we have an open resolution to take Cascade to LC","msgtype":"m.text"},"ts":1372709339000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"fantasai, I should have known :)","msgtype":"m.text"},"ts":1372709371000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"finds another reason to drop the REC process... then css specs would never go to LC and so would never go through renaming rounds!","msgtype":"m.emote"},"ts":1372709631000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: did we actually spec out \"almost standards mode\" ?","msgtype":"m.text"},"ts":1372711809000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"last I checked the documentation was a single mozilla page that hadn't been updated in 7+ years and was also wrong...","msgtype":"m.text"},"ts":1372711826000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"yes, it's called \"limited quirks\" mode","msgtype":"m.text"},"ts":1372711837000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sorry, \"limited-quirks\"","msgtype":"m.text"},"ts":1372711846000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ooh yay https://developer.mozilla.org/en-US/docs/Gecko's_Almost_Standards_Mode that page is updated","msgtype":"m.text"},"ts":1372711873000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"the term is defined in the DOM Core spec, and HTML triggers it and defines some things for it","msgtype":"m.text"},"ts":1372711873000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1372711881000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: http://quirks.spec.whatwg.org/","msgtype":"m.text"},"ts":1372711883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait, that says \"almost standards\" where does it say limited-quirks?","msgtype":"m.text"},"ts":1372711950000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"or html calls it one thing, and invokes the other thing in dom core? :P","msgtype":"m.text"},"ts":1372711971000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"quirks.spec.whatwg.org uses terminology different than dom core and html","msgtype":"m.text"},"ts":1372712060000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"html was the first to the scene on this, so in addition to the other term not actually being sane, it's also not following precedent :-P","msgtype":"m.text"},"ts":1372712085000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hmm, so Indie UI is happening... https://www.webkit.org/blog/2728/last-two-weeks-in-webkit-better-events-and-new-apis/","msgtype":"m.text"},"ts":1372712175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I feel for the person who will eventually have to figure out UI events. And the longer that lingers, the more I fear it'll be me :/","msgtype":"m.text"},"ts":1372712201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"esprehn_: it calls them \"almost standards mode\" but it links to \"limited-quirks mode\"","msgtype":"m.text"},"ts":1372712255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"esprehn_: I don't even...","msgtype":"m.text"},"ts":1372712266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just because it's in webkit doesn't mean anyone will ship it","msgtype":"m.text"},"ts":1372712353000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"@apple.com and one guy from @apple.com is an editor","msgtype":"m.text"},"ts":1372712385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah well then...","msgtype":"m.text"},"ts":1372712411000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"but yes, Apple shipping doesn't mean it's happening necessarily","msgtype":"m.text"},"ts":1372712413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it just means it's quite likely and will be a pain, since nobody has actually defined user interaction events in any sufficient amount of detail yet, yet everyone is keen on adding more of them and new wild layers of abstraction without understanding what's there","msgtype":"m.text"},"ts":1372712480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is an interesting spec","msgtype":"m.text"},"ts":1372712869000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"seems like exactly what we need, though i'm not sure i agree with the exact events","msgtype":"m.text"},"ts":1372713118000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but that's a typical bikeshed issue","msgtype":"m.text"},"ts":1372713126000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so i'll defer to the editor","msgtype":"m.text"},"ts":1372713129000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm glad that apple is doing this, since they were the main ones to break this back with safari on ios :-)","msgtype":"m.text"},"ts":1372713150000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"precise, timing of incoming events.","msgtype":"m.text"},"ts":1372713208000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Santosh Mahto changed the relations between media loading and the load event of a page. Before the patch, any <video> and <audio> elements would delay the load event until the media started loading or 3 seconds without progress. For media elements with preload=”none”, the code would be hitting the 3 seconds delay before firing the page’s load event. After the change, <video> and <audio> do not delay a page’s load event.\"","msgtype":"m.text"},"ts":1372713210000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"seems a bit dubious","msgtype":"m.text"},"ts":1372713216000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wonder what the spec says exactly","msgtype":"m.text"},"ts":1372713223000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"as long as they actually define the whole chain of events and not just \"sorta this happens\" it would indeed be pretty great","msgtype":"m.text"},"ts":1372713226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed","msgtype":"m.text"},"ts":1372713274000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hm, spec says they should fire 'suspend' then 'load'","msgtype":"m.text"},"ts":1372713284000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wonder if they're following the spec there","msgtype":"m.text"},"ts":1372713290000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"The event loop will be specified as part of ES6.\" https://www.w3.org/Bugs/Public/show_bug.cgi?id=22522#c7 Consider me sceptical","msgtype":"m.text"},"ts":1372713300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i've heard people say that, but i haven't seen anyone from TC39 reach out to talk about how to do that transition.","msgtype":"m.text"},"ts":1372713660000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nor do i really understand how that will work, since the event loop applies when scripting is disabled, too","msgtype":"m.text"},"ts":1372713674000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and when the only scripting language is something other than JavaScript","msgtype":"m.text"},"ts":1372713683000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nit: TC39 is saying ES7 now. (Otherwise, no comment.)","msgtype":"m.text"},"ts":1372714116000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"what does TC39 mean by \"the event loop\"?","msgtype":"m.text"},"ts":1372714175000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i really don't understand how this would work or why JS would be the right place for it","msgtype":"m.text"},"ts":1372714211000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"a browser with no JS support still needs an event loop...","msgtype":"m.text"},"ts":1372714226000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ISTR TC39 want to define a processing model that includes an event loop and concurrent entities called \"vats\"; they would map onto the browser's event loop and Workers, respectively.","msgtype":"m.text"},"ts":1372714876000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"http://wiki.ecmascript.org/doku.php?id=strawman:concurrency","msgtype":"m.text"},"ts":1372714900000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Yeah, that gives reasonable justification for why you'd want to define the concepts in JS. It's hard to have async Promises well defined in the language without async being defined.","msgtype":"m.text"},"ts":1372714998000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"i don't really understand that page, but what i do understand seems fine. Seems like the way to do it is to expose hooks that the environment can hook into, though.","msgtype":"m.text"},"ts":1372715024000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, if JS defines its own actual loop, that ain't gonna work","msgtype":"m.text"},"ts":1372715034000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Also: Browsers without JS need an event loop. JS without browsers also needs an event loop.","msgtype":"m.text"},"ts":1372715036000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1372715053000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I think the intent was to formalize the hook. But I'm just a fly on the wall","msgtype":"m.text"},"ts":1372715060000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"well, hopefully they reach out to the people who have written the existing event loop stuff","msgtype":"m.text"},"ts":1372715085000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i haven't heard anything from tc39 people","msgtype":"m.text"},"ts":1372715091000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"only from flies on walls :-)","msgtype":"m.text"},"ts":1372715096000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"man, this parser change is invasive","msgtype":"m.text"},"ts":1372716141000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders is gonna hate me","msgtype":"m.text"},"ts":1372716154000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hopefully the browsers are gonna like it...","msgtype":"m.text"},"ts":1372716162000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(it's fixing https://www.w3.org/Bugs/Public/show_bug.cgi?id=21308)","msgtype":"m.text"},"ts":1372716175000,"senderName":"Hixie_","senderId":"Hixie_@irc"}
]