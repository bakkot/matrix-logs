[
{"content":{"body":"neat, i got mojibake out of amazon jp's account page","msgtype":"m.text"},"ts":1416278723000,"senderName":"zewt_","senderId":"zewt_@irc"},
{"content":{"body":"don't think i've ever had that happen on an amazon page before","msgtype":"m.text"},"ts":1416278734000,"senderName":"zewt_","senderId":"zewt_@irc"},
{"content":{"body":"(tracking info, probably a bad conversion between the shipping service in japan and amazon)","msgtype":"m.text"},"ts":1416278753000,"senderName":"zewt_","senderId":"zewt_@irc"},
{"content":{"body":"where is the canonical definition for el.find and .findAll and .matches these days?","msgtype":"m.text"},"ts":1416284107000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought it was supposed to be moved into the DOM spec","msgtype":"m.text"},"ts":1416284129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"google finds them mentioned on https://blog.whatwg.org/2011/11, seems to indicate that they're just aliases for qsa","msgtype":"m.text"},"ts":1416284250000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and qs*","msgtype":"m.text"},"ts":1416284255000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and presumably not implemented anywhere","msgtype":"m.text"},"ts":1416284267000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"only seeing it in mail","msgtype":"m.text"},"ts":1416284347000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#dom-parentnode-query maybe that?","msgtype":"m.text"},"ts":1416284395000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: ah yeah","msgtype":"m.text"},"ts":1416284746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1416284748000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"man I should know this","msgtype":"m.text"},"ts":1416284758000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"way too many things to keep up with","msgtype":"m.text"},"ts":1416284771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the web is a really, really big framework","msgtype":"m.text"},"ts":1416284839000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"nobody could keep on top of it all all the time :O","msgtype":"m.text"},"ts":1416284858000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well right now my immediate need is just to review some test cases that Ms2ger refactored, for .findAll, etc.","msgtype":"m.text"},"ts":1416284925000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I have no non-obsoleted spec to review them against","msgtype":"m.text"},"ts":1416284940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess I'll just pretend","msgtype":"m.text"},"ts":1416284960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I notice IE11 still doesn't support .matches","msgtype":"m.text"},"ts":1416288015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah I guess they still have prefixed msMatchesSelector","msgtype":"m.text"},"ts":1416288096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: does any engine except Blink implement matches without a prefix?","msgtype":"m.text"},"ts":1416299445000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip, I thought Gecko did","msgtype":"m.text"},"ts":1416299491000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=886308 says so","msgtype":"m.text"},"ts":1416299518000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1416299696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: nice, https://developer.mozilla.org/en-US/docs/Web/API/Element.matches says only IE hasn't unprefixed yet","msgtype":"m.text"},"ts":1416299714000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"that all happened fast, I'm pretty sure when I unprefixed it in Blink it was the first","msgtype":"m.text"},"ts":1416299737000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"http://w3c-test.org/selectors-api/tests/submissions/Opera/Element-matches.html says so now too","msgtype":"m.text"},"ts":1416299882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gecko passes more of those than blink :-)","msgtype":"m.text"},"ts":1416299907000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caniuse seems to have up-to-date info","msgtype":"m.text"},"ts":1416299936000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://caniuse.com/#search=matches","msgtype":"m.text"},"ts":1416300008000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yay Gecko :)","msgtype":"m.text"},"ts":1416301577000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip, since you're interested, want to review that test? :)","msgtype":"m.text"},"ts":1416301631000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Formalizing internal slots <3","msgtype":"m.text"},"ts":1416305658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is anyone reviewing my single byte decoder tests?","msgtype":"m.text"},"ts":1416305695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I probably could","msgtype":"m.text"},"ts":1416305774000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: zcorpan did already, and jgraham too I think","msgtype":"m.text"},"ts":1416306481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: you need to look in critic","msgtype":"m.text"},"ts":1416306493000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Formalizing internal slots <3 indeed","msgtype":"m.text"},"ts":1416306514000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hmm I seem to not be identified with nickserv on my iPad, annoying","msgtype":"m.text"},"ts":1416306551000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Ooh, critic","msgtype":"m.text"},"ts":1416310514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ooh, jgraham reviewed some stuff from the Realm thingie","msgtype":"m.text"},"ts":1416310524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I'm still not intimately familiar with how apply/call/bind work; guess I'd have to read up...","msgtype":"m.text"},"ts":1416310581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, actually, zcorpan has reviewed https://critic.hoppipolla.co.uk/r/3155","msgtype":"m.text"},"ts":1416310631000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that's not the only set of tests I submitted though","msgtype":"m.text"},"ts":1416310689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1416310706000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, where?","msgtype":"m.text"},"ts":1416310766000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://critic.hoppipolla.co.uk/r/3147","msgtype":"m.text"},"ts":1416310785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, well, you asked about decoder tests :)","msgtype":"m.text"},"ts":1416310819000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think I'm staying out of this one","msgtype":"m.text"},"ts":1416310830000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yes, but MikeSmith made me look at critic and I found some other stuff...","msgtype":"m.text"},"ts":1416310854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: why is it t.step_func_done and not just t.done taking a callback?","msgtype":"m.text"},"ts":1416311102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ask zcorpan or Ms2ger. I didn't implement that one.","msgtype":"m.text"},"ts":1416312035000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I guess \"because we didn't think of that\"","msgtype":"m.text"},"ts":1416312049000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: ^^","msgtype":"m.text"},"ts":1416312057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although I guess it could be argued that it's less confusing","msgtype":"m.text"},"ts":1416312066000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A callback in done() could be post-test cleanup or something","msgtype":"m.text"},"ts":1416312091000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The current Pythonic naming and superfluous \"func\" don't really make it attractive","msgtype":"m.text"},"ts":1416312112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The \"func\" isn't superfluous","msgtype":"m.text"},"ts":1416312253000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i guess i went from function() { t.step(function() { ... t.done(); }; } to t.step_func(function() { ... t.done(); }); to t.step_func_done(function() { ... });","msgtype":"m.text"},"ts":1416312259000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It returns a function that when called runs a step","msgtype":"m.text"},"ts":1416312274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It doesn't actually run a step","msgtype":"m.text"},"ts":1416312283000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1416312494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: ideas for testing XML and CSS and such?","msgtype":"m.text"},"ts":1416312522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess soon onw will be able to write t.step_func_done(() => {}), which seems like a nice improvement","msgtype":"m.text"},"ts":1416312584000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: note that if you are interested mostly in label testing I think that should probably be covered separately as well","msgtype":"m.text"},"ts":1416312588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: yeah, I was kind of wondering if I could use those already","msgtype":"m.text"},"ts":1416312609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: though they have different this handling, is that going to be signifnicant?","msgtype":"m.text"},"ts":1416312620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know how widespread the support is","msgtype":"m.text"},"ts":1416312632000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The function is called like func.apply(this_obj, Array.prototype.slice.call(arguments, 2))","msgtype":"m.text"},"ts":1416312722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where the this_obj defaults to the tests object, or can be supplied","msgtype":"m.text"},"ts":1416312749000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/tests/Test/","msgtype":"m.text"},"ts":1416312757000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I guess it will be different in that that won't work, but if you don't use this inside the function it won't matter?","msgtype":"m.text"},"ts":1416312800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"t.step_funk_done is not a function\" oops","msgtype":"m.text"},"ts":1416312835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds more like a Daft Punk album or something.","msgtype":"m.text"},"ts":1416313010000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I would buy it","msgtype":"m.text"},"ts":1416313626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: I created a url team on GitHub","msgtype":"m.text"},"ts":1416314229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: and invited you","msgtype":"m.text"},"ts":1416314233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: currently url.spec.whatwg.org only pulls in url.html","msgtype":"m.text"},"ts":1416314298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: if that setup needs changing let me know","msgtype":"m.text"},"ts":1416314305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks!  So to be clear, I can make direct edits to the url spec, and simply by committing url.html the whatwg URL Standard will be updated?","msgtype":"m.text"},"ts":1416314363000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I think you might need to update your bikeshed since it's still not adding allcaps","msgtype":"m.text"},"ts":1416314383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: to the <h1>","msgtype":"m.text"},"ts":1416314400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: yeah, though I would appreciate some communication around major changes","msgtype":"m.text"},"ts":1416314431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bikeshed itself needs to be updated as it generates the <h1>","msgtype":"m.text"},"ts":1416314432000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: yeah, TabAtkins did that","msgtype":"m.text"},"ts":1416314442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, so you mean I simply need to update and regenerate?  Let me do that.","msgtype":"m.text"},"ts":1416314461000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"https://github.com/tabatkins/bikeshed/issues/278","msgtype":"m.text"},"ts":1416314476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: it seems the same might be true for your RFC database","msgtype":"m.text"},"ts":1416314498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: since tobie_ updated those too to point towards tools.ietf.org","msgtype":"m.text"},"ts":1416314510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm updating everything.","msgtype":"m.text"},"ts":1416314542000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Is it true that names of characters introduced into Unicode before 1992 cannot be changed?","msgtype":"m.text"},"ts":1416314823000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"AFAIK Unicode character names are guaranteed constant.","msgtype":"m.text"},"ts":1416314853000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Except they still changed some","msgtype":"m.text"},"ts":1416314864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.unicode.org/policies/stability_policy.html","msgtype":"m.text"},"ts":1416314868000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: AFAIK they only changed stuff from Unicode 1.0 to 2.0, and never since.","msgtype":"m.text"},"ts":1416315005000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Like there's a documented list of errors, some pretty major, in the canonical names","msgtype":"m.text"},"ts":1416315022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: https://rawgit.com/rubys/url/anolis2bikeshed/url.html -- better?","msgtype":"m.text"},"ts":1416315094000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: unless I'm missing something it looks identical","msgtype":"m.text"},"ts":1416315147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: still www.ietf.org rather than tools.ietf.org links and no allcaps","msgtype":"m.text"},"ts":1416315163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/rubys/url/commit/364e29c04ff2e911e78f5fac5d10ac238dc9e9ef","msgtype":"m.text"},"ts":1416315209000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I see, I think you might have pushed that to a different branch","msgtype":"m.text"},"ts":1416315261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: add_cleanup callback also runs if the test fails or times out","msgtype":"m.text"},"ts":1416315273000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: also if document.body.removeChild(frame) would throw for some reason it would fail to produce a result for the test","msgtype":"m.text"},"ts":1416315330000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if that throws logging an error somewhere would be good","msgtype":"m.text"},"ts":1416315379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"trying again: https://github.com/rubys/url/commit/86049dad29e79c1ac14753c67704cdf00f403a6f","msgtype":"m.text"},"ts":1416315432000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: putting it inside step does that","msgtype":"m.text"},"ts":1416315447000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: https://rawgit.com/rubys/url/anolis2bikeshed/url.html -- better?","msgtype":"m.text"},"ts":1416315491000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: yeah","msgtype":"m.text"},"ts":1416315728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as for xml, i imagine loading an iframe and have the server return <x>...</x> (maybe also with xml decl specifying the encoding), and then checking documentElement.textContent","msgtype":"m.text"},"ts":1416315740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: is the bikeshed conversion ready to merge now, or is there more work that needs to be done?","msgtype":"m.text"},"ts":1416315763000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: it's a bit trickier than that, since technically XML has to fail on certain bytes","msgtype":"m.text"},"ts":1416315767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for css, #foo:before { content:\"...\" } and getComputedStyle","msgtype":"m.text"},"ts":1416315785000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: ah yeah","msgtype":"m.text"},"ts":1416315787000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rubys: go for it","msgtype":"m.text"},"ts":1416315804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still has to install bikeshed","msgtype":"m.emote"},"ts":1416315816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i guess for xml we'd have to separate the valid bytes and use one document per invalid byte","msgtype":"m.text"},"ts":1416315846000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: also, for CSS it's trickier too, due to certain bytes that have meaning in CSS","msgtype":"m.text"},"ts":1416315853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool.  I plan to complete setters on my clone of the url repository, and then begin work on merging in a branch in the whatwg repository.","msgtype":"m.text"},"ts":1416315859000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: by setters you mean what the spec currently uses the override state argument for, right?","msgtype":"m.text"},"ts":1416315914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no urgency, but I would like to move my interop results and livedom url parser demo to someplace on whatwg.org.","msgtype":"m.text"},"ts":1416315915000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: only \" \\ CR LF i think, but yes","msgtype":"m.text"},"ts":1416315916000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: yes, overriding state.  Once I push, I'll discuss what I have done with you before proceeding.","msgtype":"m.text"},"ts":1416315949000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I can change the setup of url.spec.whatwg.org now; I'll make it copy all of master instead of copying a single file and set the DirectoryIndex to url.html index.html","msgtype":"m.text"},"ts":1416315985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: alternatively DOMParser instead of iframe","msgtype":"m.text"},"ts":1416316020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"just a sec, let me check how I do my push","msgtype":"m.text"},"ts":1416316023000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: then we can use url.spec.whatwg.org/dir/ for non-spec stuff","msgtype":"m.text"},"ts":1416316032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: doesn't DOMParser take a string?","msgtype":"m.text"},"ts":1416316050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"url.spec.whatwg.org works for me.  Again, just a sec","msgtype":"m.text"},"ts":1416316057000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: ...yes. nevermind","msgtype":"m.text"},"ts":1416316068000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so it sounds like both CSS and XML are easyish, but would require a distinct setup from what I have now","msgtype":"m.text"},"ts":1416316132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I mostly added the <iframe> thingy because I already had the infrastructure","msgtype":"m.text"},"ts":1416316146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1416316146000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: same for TextDecoder()","msgtype":"m.text"},"ts":1416316150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: are you done with the PR?","msgtype":"m.text"},"ts":1416316175000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So I would prefer doing those separately. And for the XML case it's not clear that anyone really cares","msgtype":"m.text"},"ts":1416316176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I should probably do the cleanup thingy you mentioned","msgtype":"m.text"},"ts":1416316194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1416316202000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I'm not currently checking in the outputs of the process, but I can clearly do so.  More specifically, three subissues:","msgtype":"m.text"},"ts":1416316296000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: well actually, if you can verify what bytes to avoid in CSS I guess I can add CSS tests","msgtype":"m.text"},"ts":1416316300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"xml could be attack surface if it uses different decoders","msgtype":"m.text"},"ts":1416316306000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"1) I have a CGI, and the shebang comment at the top of the file needs to point to a version of Ruby on the host","msgtype":"m.text"},"ts":1416316346000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: with I meant does anyone care about not-well-formed vs well-formed-with-U+FFFD","msgtype":"m.text"},"ts":1416316360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"2) punycode.js, unorm.js, etc are downloaded from various places and not checked in.","msgtype":"m.text"},"ts":1416316387000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: ah. yeah possibly we could change that if we wanted to","msgtype":"m.text"},"ts":1416316405000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"3) the urltest-results directory is produced locally and then rsynced.","msgtype":"m.text"},"ts":1416316427000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: I guess most importantly, url.html in my branch is incomplete (it only contains parsing, not the rest of the spec).","msgtype":"m.text"},"ts":1416316567000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: I think the net of this is that this is something we should revisit when that branch is ready to merge.","msgtype":"m.text"},"ts":1416316586000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: issues 1-3 seem like something we could address by giving you access to the server","msgtype":"m.text"},"ts":1416316611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that works to.  Dreamhost?","msgtype":"m.text"},"ts":1416316629000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: however, currently access to this domain is shared with a bunch of others, so I think I'd prefer it if Hixie created an isolated account for url.spec.whatwg.org if we're going to be running more advanced scripts","msgtype":"m.text"},"ts":1416316658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm in no particular rush, and that works for me.","msgtype":"m.text"},"ts":1416316685000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I only have one script, that's the one that allows people to upload browser results.","msgtype":"m.text"},"ts":1416316719000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"everything else is static html, javascript, and css.","msgtype":"m.text"},"ts":1416316734000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"so yeah, let's keep the url.html setup for now and then get Hixie to make an account for that domain we can share SSH access to","msgtype":"m.text"},"ts":1416316738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: hmm okay","msgtype":"m.text"},"ts":1416316754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: just message me your public key then","msgtype":"m.text"},"ts":1416316825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://people.apache.org/keys/committer/rubys.asc","msgtype":"m.text"},"ts":1416316859000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: you have it in a format somewhere that works for ssh-rsa?","msgtype":"m.text"},"ts":1416317038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: https://apache.org/ seems bad btw","msgtype":"m.text"},"ts":1416317101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any of these work http://intertwingly.net/public/ ?","msgtype":"m.text"},"ts":1416317102000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1416317203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hopefully no man-in-the-middle...","msgtype":"m.text"},"ts":1416317225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea, yea, I do need to fix https on my site.","msgtype":"m.text"},"ts":1416317433000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: also U+000C","msgtype":"m.text"},"ts":1416317461000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so my setup is going to be using a single <iframe> that keeps loading a new HTML page that points to a different CSS file, based on <iframe> load I know the CSS file has loaded","msgtype":"m.text"},"ts":1416318012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi, if I only have one section in my page, should I enclose it in a section tag or is it unnecessary (I'm already using a main element)","msgtype":"m.text"},"ts":1416318024000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"zcorpan: both HTML and CSS file are generated; CSS file doesn't generate problematic bytes, and on the result of getComputedStyle we don't check the problematic bytes","msgtype":"m.text"},"ts":1416318041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: not needed","msgtype":"m.text"},"ts":1416318054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you can use a backslash before the problematic bytes in css","msgtype":"m.text"},"ts":1416318206000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: and expect empty string for 0x10 0x12 0x13 in getComputedStyle","msgtype":"m.text"},"ts":1416318280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: why?","msgtype":"m.text"},"ts":1416318298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for completeness i guess. but maybe it's not interesting to test those","msgtype":"m.text"},"ts":1416318365000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no why I should I expect the empty string?","msgtype":"m.text"},"ts":1416318419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, because that's what \\LF means in css","msgtype":"m.text"},"ts":1416318440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, thanks","msgtype":"m.text"},"ts":1416318614000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"zcorpan: I see","msgtype":"m.text"},"ts":1416318632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bikeshed produced version of URL Living Standard is now live: https://url.spec.whatwg.org/","msgtype":"m.text"},"ts":1416319095000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: you meant 0x0A, 0x0C, and 0x0D right?","msgtype":"m.text"},"ts":1416319116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1416319151000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Looks like it regressed the FileAPI reference","msgtype":"m.text"},"ts":1416319166000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And WebIDL","msgtype":"m.text"},"ts":1416319178000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll fix.  Any others?","msgtype":"m.text"},"ts":1416319191000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Looks like that's it","msgtype":"m.text"},"ts":1416319208000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: done","msgtype":"m.text"},"ts":1416319825000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: FYI, if you have anolis installed, you have all the prereqs necessary for bikeshed.  You can start here: https://github.com/tabatkins/bikeshed/blob/master/docs/install.md#common-steps","msgtype":"m.text"},"ts":1416319847000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1416319851000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rubys: ta","msgtype":"m.text"},"ts":1416319861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: euhm so CSS is quite a bit harder","msgtype":"m.text"},"ts":1416320266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it turns out this also depends on the particular serialization rules of computed style","msgtype":"m.text"},"ts":1416320278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: e.g. I don't get back U+008D, but \\8D followed by a space...","msgtype":"m.text"},"ts":1416320306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: e.g. this is what I get back for x-mac-ukrainian","msgtype":"m.text"},"ts":1416320383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"assert_equals: expected \"x\" but got \"\\\"�\\\\1 \\2 \\3 \\4 \\5 \\6 \\7 \\8 \\9 \\B \\E \\F \\10 \\11 \\12 \\13 \\14 \\15 \\16 \\17 \\18 \\19 \\1A \\1B \\1C \\1D \\1E \\1F !\\\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\7F АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёё","msgtype":"m.text"},"ts":1416320385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"яабвгдежзийклмнопрстуфхцчшщъыьэю\\\"\"","msgtype":"m.text"},"ts":1416320385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, yeah. would need to implement http://dev.w3.org/csswg/cssom/#serialize-a-string in js. and assume that the browser conforms to that","msgtype":"m.text"},"ts":1416320389000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(\"x\" was my expected test value)","msgtype":"m.text"},"ts":1416320404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm going to move my name in the acknowledgements to follow yours.  I'm also going to fix a pet peeve of mine: the following statement is semantically meaningless: Except where different objects implementing URLUtilsReadOnly are identical to objects implementing URLUtils.","msgtype":"m.text"},"ts":1416320409000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"what I think you mean is that like name attributes in these two interfaces have the same definition for getters.","msgtype":"m.text"},"ts":1416320439000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk, ha","msgtype":"m.text"},"ts":1416320468000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rubys: yeah, that wording is ugly","msgtype":"m.text"},"ts":1416320513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: it should probably become part of the note as well, there's nothing normative there","msgtype":"m.text"},"ts":1416320537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ack","msgtype":"m.text"},"ts":1416320572000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: so yeah, I'll fix the cleanup thing, but leave this CSS stuff for another time","msgtype":"m.text"},"ts":1416320692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm hacking together a css string serializer if that helps","msgtype":"m.text"},"ts":1416320730000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, I hadn't actually considered building a string, that might be nicer for the XHR case too","msgtype":"m.text"},"ts":1416320802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: instead of doing code point comparison","msgtype":"m.text"},"ts":1416320812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1416320819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3308","msgtype":"m.text"},"ts":1416320887000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: however, we could push https://critic.hoppipolla.co.uk/r/3155 now","msgtype":"m.text"},"ts":1416320892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: hmm let me look","msgtype":"m.text"},"ts":1416320929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: throw new Error('InvalidCharacterError') should return U+FFFD, no?","msgtype":"m.text"},"ts":1416320983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: this would be even better btw if it took an array of code points and returned a string","msgtype":"m.text"},"ts":1416321011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: the array of code points I have...","msgtype":"m.text"},"ts":1416321024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah it should. i just implemented the spec literally :-)","msgtype":"m.text"},"ts":1416321048000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I can put what I have for CSS decoding into a branch so you can play with it if you want","msgtype":"m.text"},"ts":1416321819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure","msgtype":"m.text"},"ts":1416321839000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/w3c/web-platform-tests/tree/encoding-and-css","msgtype":"m.text"},"ts":1416321944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: https://github.com/tc39/ should offer a template for TC39 proposals","msgtype":"m.text"},"ts":1416323409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: found it, never mind","msgtype":"m.text"},"ts":1416323456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/tc39/ecma262 has steps at the end","msgtype":"m.text"},"ts":1416323506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: seems to be not as easy for me to get that working that way, I haven't been using MacPorts for a while","msgtype":"m.text"},"ts":1416324112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you don't need macports","msgtype":"m.text"},"ts":1416324132000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: git clone, pip install, git pull --rebase, and bikeshed update should be all you need.","msgtype":"m.text"},"ts":1416324185000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: https://github.com/tabatkins/bikeshed/blob/master/docs/install.md#common-steps","msgtype":"m.text"},"ts":1416324215000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"https://www.eff.org/deeplinks/2014/11/certificate-authority-encrypt-entire-web \\o/","msgtype":"m.text"},"ts":1416324518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: -bash: pip: command not found","msgtype":"m.text"},"ts":1416324609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"easy_install pip","msgtype":"m.text"},"ts":1416324633000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rubys: I tried installing through running setup.py install but that did not work","msgtype":"m.text"},"ts":1416324636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: well, it seemed to work, but then it didn't","msgtype":"m.text"},"ts":1416324649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thinks before \"easy_install pip\" you have to \"setup.py easy_install\" :)","msgtype":"m.emote"},"ts":1416324667000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"easy_install seems to be there","msgtype":"m.text"},"ts":1416324687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that should work, otherwise brew install pip ought to too","msgtype":"m.text"},"ts":1416324704000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"thanks all","msgtype":"m.text"},"ts":1416324826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: once I run it on whatwg/url a <main> element is moved...","msgtype":"m.text"},"ts":1416324842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders why it would use <main>","msgtype":"m.emote"},"ts":1416324854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, why does gecko have toString, valueOf and toJSON on location? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3309","msgtype":"m.text"},"ts":1416324859000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rubys: a newline is also added before <body>","msgtype":"m.text"},"ts":1416325027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, [Unforgeable]","msgtype":"m.text"},"ts":1416325053000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, everything moves off of the prototype","msgtype":"m.text"},"ts":1416325063000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but Location doesn't inherit from any other interface, and those members are not specified in the IDL. http://heycam.github.io/webidl/#dfn-consequential-interfaces","msgtype":"m.text"},"ts":1416325196000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rubys: I suggest we reword the abstract to this: \"The URL Standard defines URLs, domains, IP addresses, the <code title>application/x-www-form-urlencoded</code> format, and their API.\"","msgtype":"m.text"},"ts":1416325202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, they're on Object.prototype","msgtype":"m.text"},"ts":1416325222000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rubys: I haven't committed that since it would be interesting to know why our bikeshed does subtly different things for url.html","msgtype":"m.text"},"ts":1416325226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where does Object.prototype.toJSON come from? is that some new thing in ES6?","msgtype":"m.text"},"ts":1416325267000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is it?","msgtype":"m.text"},"ts":1416325280000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's certainly not in ES5.","msgtype":"m.text"},"ts":1416325288000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: I do like how the solution to \"I don't have pip!\" is \"install pip using another Python package manager\" :)","msgtype":"m.text"},"ts":1416325301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: hmm looks like the requirement is in http://heycam.github.io/webidl/#es-platform-objects","msgtype":"m.text"},"ts":1416325303000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders, install easy_install with pip first ;)","msgtype":"m.text"},"ts":1416325326000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: what are those differences (and, I'm fine with that abstract)","msgtype":"m.text"},"ts":1416325328000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"why are these enumerable?","msgtype":"m.text"},"ts":1416325347000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"seems annoying","msgtype":"m.text"},"ts":1416325350000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"No idea","msgtype":"m.text"},"ts":1416325351000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: if you do commit, github will helpfully show those diffs :-)","msgtype":"m.text"},"ts":1416325383000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"zcorpan: they predate the concept of enumerability","msgtype":"m.text"},"ts":1416325397000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Find bholley? :)","msgtype":"m.text"},"ts":1416325402000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rubys: enjoy the diff","msgtype":"m.text"},"ts":1416325434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: toJSON was in ES5","msgtype":"m.text"},"ts":1416325514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looks like it moved the </main>","msgtype":"m.text"},"ts":1416325522000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: where? only Date.prototype.toJSON was","msgtype":"m.text"},"ts":1416325534000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: JSON.stringify invokes it","msgtype":"m.text"},"ts":1416325562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No it doesn't","msgtype":"m.text"},"ts":1416325580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm not sure if toJSON should be on each object though, only on objects that make sense","msgtype":"m.text"},"ts":1416325585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, it does","msgtype":"m.text"},"ts":1416325612000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm blind","msgtype":"m.text"},"ts":1416325614000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But Object.prototype.toJSON shouldn't exist per ES5.","msgtype":"m.text"},"ts":1416325623000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, I mean, it /can/ exist, but it's a non-standard extension.","msgtype":"m.text"},"ts":1416325638000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, that part hasn't changed in ES6","msgtype":"m.text"},"ts":1416325715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=27361","msgtype":"m.text"},"ts":1416325719000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is whatwg.org down","msgtype":"m.text"},"ts":1416327555000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"apparently so","msgtype":"m.text"},"ts":1416327595000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"Whatwg.org is DOWN for everyone.\"","msgtype":"m.text"},"ts":1416327598000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"up","msgtype":"m.text"},"ts":1416327722000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: rubys: we should move https://github.com/whatwg/streams/blob/master/index.bs#L25-L77 into the common WHATWG CSS so that you get the linkable section headers that http://streams.spec.whatwg.org/ has","msgtype":"m.text"},"ts":1416328140000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I would PR it myself but apparently airplane wifi is horribly shitty","msgtype":"m.text"},"ts":1416328172000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: WHATWG CSS is not in GitHub so that wouldn't work","msgtype":"m.text"},"ts":1416328192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: requires Hixie","msgtype":"m.text"},"ts":1416328197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: we could put it on resources.whatwg.org perhaps as bikeshed.css since it only applies to bikeshed specs","msgtype":"m.text"},"ts":1416328237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: or we could put it in the Bikeshed repo","msgtype":"m.text"},"ts":1416328239000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"ah yeah or that","msgtype":"m.text"},"ts":1416328247000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, annevk: I'm OK with any of these approaches.","msgtype":"m.text"},"ts":1416328278000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"resources sounds easiest","msgtype":"m.text"},"ts":1416328297000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, annevk: I don't mean the following to be defensive, but just as an accurate description of what I have done to date: what I did was push through to see what could be done, now it is time to refactor that work into the best \"home\" for each piece.","msgtype":"m.text"},"ts":1416328358000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Domenic_, annevk: nevermind, I just realized that Domenic_ was talking about *his* work, not mine.  Oopsie.  :-)","msgtype":"m.text"},"ts":1416328417000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Ah okay, so Let's Encrypt is signed by IdenTrust until it gets into browsers","msgtype":"m.text"},"ts":1416329691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I'm a bit reluctant to change the attribute stuff around again","msgtype":"m.text"},"ts":1416334876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: unless we have some coherent plan for why we should be different","msgtype":"m.text"},"ts":1416334912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Yeah, please either put stuff in a common css file, or inline into the header-whatwg.include file.","msgtype":"m.text"},"ts":1416335155000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm here now","msgtype":"m.text"},"ts":1416337787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like some people need something from me?","msgtype":"m.text"},"ts":1416337792000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Nah, we get along fine without you.","msgtype":"m.text"},"ts":1416337844000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But really, there's some styling common to all the Bikeshedded WHATWG specs that should either go into the header boilerplate, or into a stylesheet on resources.whatwg.org.","msgtype":"m.text"},"ts":1416337942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I think we solved the problems some other way, though you might want to open the developer console and fix some of the WHATWG stylesheet errors","msgtype":"m.text"},"ts":1416338246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which spec?","msgtype":"m.text"},"ts":1416338530000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/ doesn't give me any messages in chrome","msgtype":"m.text"},"ts":1416338539000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i can't work out which problems you mean","msgtype":"m.text"},"ts":1416338796000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: all the warnings firefox gives me are bogus","msgtype":"m.text"},"ts":1416338804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh it seems they are","msgtype":"m.text"},"ts":1416338843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: perhaps you fixed the non-bogus one I saw a while back","msgtype":"m.text"},"ts":1416338866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1416338869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did you want something with domains or something?","msgtype":"m.text"},"ts":1416338915000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The aural stuff is bogus, though.","msgtype":"m.text"},"ts":1416338970000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can just kill that whole thing.","msgtype":"m.text"},"ts":1416338974000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"last i checked, emacs still supports that","msgtype":"m.text"},"ts":1416339009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"emacs is supporting deprecated specs, then, and violating current MQ (\"aural\" should always be false)","msgtype":"m.text"},"ts":1416339059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: pretty interesting how the use case for restoring DOS code pages turned out to be better served by the DOS code page that we kept rather than the DOS code pages that we removed","msgtype":"m.text"},"ts":1416341016000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess the lesson is to always push for use cases instead of just taking \"OMG you broke my workflow\" at face value","msgtype":"m.text"},"ts":1416341077000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: is cssom not in https://platform.html5.org/ ?","msgtype":"m.text"},"ts":1416342741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"resize events then scroll events? or scroll events then resize events?","msgtype":"m.text"},"ts":1416343040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm thinking resize first, so you can react to the resize by scrolling","msgtype":"m.text"},"ts":1416343053000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: ok, if you WONTFIX https://www.w3.org/Bugs/Public/show_bug.cgi?id=27344 it'll at least be a clear signal that you hope that Blink changes instead of the spec","msgtype":"m.text"},"ts":1416346850000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I suggested what I think would be the shortest and least riskiest path for Blink, since it basically amounts to removing the redundant and almost unused setAttributeNodeNS","msgtype":"m.text"},"ts":1416347017000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I'm not really here, but I just wanted to say that I don't really have an opinion, if you could convince a non-Webkit/Chromium browser to chime in that'd help","msgtype":"m.text"},"ts":1416349123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok :)","msgtype":"m.text"},"ts":1416350805000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"rubys: I'm noodling on a more compact syntax for custom anchor data: https://gist.github.com/tabatkins/b9b07594dbcde338fd86","msgtype":"m.text"},"ts":1416350872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I really like whitespace-based nesting syntaxes. They're so natural and easy to use!)","msgtype":"m.text"},"ts":1416350926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And importantly, easy to edit when you rearrange things.  Far better than enclosing-character-based nesting syntaxes.)","msgtype":"m.text"},"ts":1416350956000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(and so friendly to copy-paste across whitespace-ignoring environments like HTML)","msgtype":"m.text"},"ts":1416352195000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Luckily, don't care!  That's what <pre> is for. ^_^","msgtype":"m.text"},"ts":1416354212000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or <plaintext> ^_^","msgtype":"m.text"},"ts":1416354221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]