[
{"content":{"body":"so ShadowRoot.innerHTML is gone?","msgtype":"m.text"},"ts":1483669440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see it is still at https://w3c.github.io/webcomponents/spec/shadow/#the-shadowroot-interface but not at https://dom.spec.whatwg.org/#interface-shadowroot","msgtype":"m.text"},"ts":1483669466000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hayato: ⬆","msgtype":"m.text"},"ts":1483669495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Section 7 will be replaced with that of DOM Standard. I will work on it.","msgtype":"m.text"},"ts":1483669625000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"I do not remember, but I guess innerHTML is defined in DocumentFragment?","msgtype":"m.text"},"ts":1483669806000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"hayato: ah OK","msgtype":"m.text"},"ts":1483670337000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I am working on a bit on the related docs at MDN","msgtype":"m.text"},"ts":1483670353000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the MDN docs have https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/innerHTML","msgtype":"m.text"},"ts":1483670374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so maybe I need to move that","msgtype":"m.text"},"ts":1483670384000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's not on DocumentFragment unfortunately. I wish it were. People have asked for that for a long time.","msgtype":"m.text"},"ts":1483670552000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe rniwa and hayato can agree on adding it there and ship it? :)","msgtype":"m.text"},"ts":1483670588000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, MikeSmith: it's on ShadowRoot","msgtype":"m.text"},"ts":1483670617000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic, MikeSmith: we shipped it that way, so shadowRoot.innerHTML isn't going away. Or are you talking about adding one on DocumentFragment?","msgtype":"m.text"},"ts":1483670673000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"for DocumentFragment, there was a discussion about parsing it like template element","msgtype":"m.text"},"ts":1483670701000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"we don't need to, really","msgtype":"m.text"},"ts":1483670721000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: OK thanks for the clarification","msgtype":"m.text"},"ts":1483670753000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks Domenic too","msgtype":"m.text"},"ts":1483670763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah, I have found that Blink defines innerHTML in ShadowRoot interface. :)","msgtype":"m.text"},"ts":1483670772000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1483670781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so then it seems like the DOM spec needs to be updated to add it","msgtype":"m.text"},"ts":1483670792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since it’s not at https://dom.spec.whatwg.org/#interface-shadowroot","msgtype":"m.text"},"ts":1483670807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: should I create a PR?","msgtype":"m.text"},"ts":1483670830000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or raise an issue at least","msgtype":"m.text"},"ts":1483670843000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah but you could move it to DocumentFragment and I and a couple other web devs would become happy :)","msgtype":"m.text"},"ts":1483670923000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1483670938000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Sorry spotty connection","msgtype":"m.text"},"ts":1483670942000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I recalled the discussion about  innerHTML. innerHTML requires a *host* element in parsing, so we can not define it DocumentFragment, as far as I remember.","msgtype":"m.text"},"ts":1483670948000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1483670966000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm I see. I guess you could use some implicit template element but yeah not as obvious as I hoped","msgtype":"m.text"},"ts":1483670982000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there is a note at https://w3c.github.io/webcomponents/spec/shadow/#the-shadowroot-interface saying pretty much exactly that","msgtype":"m.text"},"ts":1483670983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And yeah MikeSmith we should raise an issue for porting","msgtype":"m.text"},"ts":1483671000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1483671021000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"glad I instead did not end up having to write code patches for WebKit and Blink!","msgtype":"m.text"},"ts":1483671114000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"meme: bad luck brian tries to be a good guy and get MDN shadow-dom docs synced up with specs / spends the next 6 weeks writing browser patches and tests and getting them all reviewed","msgtype":"m.text"},"ts":1483671193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic, hayato, MikeSmith: moving it to DocumentFragment is fine but someone needs to come up with what it does","msgtype":"m.text"},"ts":1483671543000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah I am not signing up to do that","msgtype":"m.text"},"ts":1483671627000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not right now at least","msgtype":"m.text"},"ts":1483671632000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/whatwg/dom/issues/393","msgtype":"m.text"},"ts":1483671810000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe I will open an issue :)","msgtype":"m.text"},"ts":1483672014000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: that seems a little ugly","msgtype":"m.text"},"ts":1483688319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: Request and Response are ideally just data","msgtype":"m.text"},"ts":1483688347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ooh Mek is back","msgtype":"m.text"},"ts":1483689279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: please let me know when we can get back to defining the origin of blob URLs","msgtype":"m.text"},"ts":1483689296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Context switching between URL parsing and Fetch is not going as well as I'd hoped","msgtype":"m.text"},"ts":1483698442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I hope Service Workers doesn't have much copy-and-paste algorithms","msgtype":"m.text"},"ts":1483710910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/fetch/issues/450 is rather bad","msgtype":"m.text"},"ts":1483710913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the layering there seems bad too, but I'm mostly surprised that when introducing new largely identical code it wasn't abstracted)","msgtype":"m.text"},"ts":1483710945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm yeah. I want us to do a full review of foreign fetch in March. I don't think the API has been properly reviewed either","msgtype":"m.text"},"ts":1483711008000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If Mek didn't change much from what we agreed on at some point I guess it's probably okayish, but yeah, probably deserves another round","msgtype":"m.text"},"ts":1483711048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: annevk: fwiw, I think my opinion on foreign fetch has evolved a bit... but I wrote spec issues regarding that I think","msgtype":"m.text"},"ts":1483711677000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: didn't I reply to those?","msgtype":"m.text"},"ts":1483712043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not this one: https://github.com/w3c/ServiceWorker/issues/1024","msgtype":"m.text"},"ts":1483712116000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I see","msgtype":"m.text"},"ts":1483712178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I guess the big issue with foreign fetch is what we should do with third-party cookies in general","msgtype":"m.text"},"ts":1483712194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: at least in firefox, my position is we would implement foreign fetch event only for credentialed requests at least to start","msgtype":"m.text"},"ts":1483712206000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the reason web fonts are fetched without credentials is mostly because that gives you the simplest variant of CORS","msgtype":"m.text"},"ts":1483712212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it didn't have much to do with third-party cookies, although I guess that's a nice side effect","msgtype":"m.text"},"ts":1483712226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whatever the reasoning, I don't think we should enabled tracking where its not possible today","msgtype":"m.text"},"ts":1483712251000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"especially since I think we can achieve the use case with a slightly different solution","msgtype":"m.text"},"ts":1483712272000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"a different solution we want for other things as well","msgtype":"m.text"},"ts":1483712279000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think if we did foreign fetch the way Safari did third-party cookies it'd be okay","msgtype":"m.text"},"ts":1483712279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"double-keying?","msgtype":"m.text"},"ts":1483712293000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah, except for first-party visits","msgtype":"m.text"},"ts":1483712302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you might as well just not intercept them... because the storage won't be shared you won't really get much benefit","msgtype":"m.text"},"ts":1483712337000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It would be for sites visited first-party","msgtype":"m.text"},"ts":1483712365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So you could do the drive.google.com use cases and such","msgtype":"m.text"},"ts":1483712380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, part of the overall question is how much third-party tracking should be allowed anyway","msgtype":"m.text"},"ts":1483712409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, I like disabling foreign fetch event for non-credentialed requests as it automatically does the right thing if the user disables 3rd-party cookies, etc","msgtype":"m.text"},"ts":1483712540000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in either case, we probably won't start working on foreign fetch in firefox until Q3/Q4 2017 at the earliest","msgtype":"m.text"},"ts":1483712565000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we are still working on getting our multi-process house in order","msgtype":"m.text"},"ts":1483712579000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"How's that going, by the way?","msgtype":"m.text"},"ts":1483712732000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: slowly","msgtype":"m.text"},"ts":1483712799000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: its a high priority, though, and we have more people working on SW again","msgtype":"m.text"},"ts":1483712857000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: and I think we have people committed to work streams, although no progress yes AFAIK","msgtype":"m.text"},"ts":1483712910000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"unfortunately its at a difficult intersection of js engine bits and DOM binding bits... few people who know both really well","msgtype":"m.text"},"ts":1483712940000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah till has been asking some questions, seems like he's pretty far along","msgtype":"m.text"},"ts":1483713077000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"awesome!","msgtype":"m.text"},"ts":1483713106000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we have some scheduled to start working on the c++ binding part in next couple weeks as well","msgtype":"m.text"},"ts":1483713128000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^some^someone","msgtype":"m.text"},"ts":1483713201000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1483713214000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: I think the problem with not figuring out our final goals for third-party cookies and moving ahead with foreign fetch regardless will make it harder to switch to something better later","msgtype":"m.text"},"ts":1483714282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: what does \"this\" mean in https://github.com/whatwg/url/issues/53#issuecomment-270915763?","msgtype":"m.text"},"ts":1483714341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the issue in general?","msgtype":"m.text"},"ts":1483714347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, sorry, I meant https://github.com/whatwg/url/issues/53#issuecomment-181528158 in particular; let me edit","msgtype":"m.text"},"ts":1483714373000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: you think all browsers will change to implement the same 3rd party cookie policies?","msgtype":"m.text"},"ts":1483714508000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I hope we can get closer over time, yes","msgtype":"m.text"},"ts":1483714524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: seems hard for web developers otherwise to make things work","msgtype":"m.text"},"ts":1483714539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: in particular Safari would never ship the kind of foreign fetch you would be willing to ship","msgtype":"m.text"},"ts":1483714555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't see what they are doing as much different from firefox with \"block 3rd party cookies\" enabled by default","msgtype":"m.text"},"ts":1483714606000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it is different, because first parties won't become third parties","msgtype":"m.text"},"ts":1483714640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and also, it's different by virtue of being the default, since most folks don't change settings","msgtype":"m.text"},"ts":1483714657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: first parties effectively become different origins when loaded as a 3rd party... creating a new fake origin for the cookie instead of just not allowing cookies both have the same effect of not using the real origin","msgtype":"m.text"},"ts":1483714741000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway... I'm just saying what I am comfortable implementing in FF given our current product features around cookies","msgtype":"m.text"},"ts":1483714813000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"igrigorik: could you comment on https://github.com/whatwg/url/issues/26","msgtype":"m.text"},"ts":1483717650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: yeah, that's not how Safari works","msgtype":"m.text"},"ts":1483717674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and I'm just saying that we should implement something that can work across all browsers","msgtype":"m.text"},"ts":1483717699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm just trying to highlight a problem with the current proposal that I don't think we can implement in firefox... if apple wants to ask for further changes they can do that as well","msgtype":"m.text"},"ts":1483718186000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"You don't think a priori that we should make something that can work for Safari?","msgtype":"m.text"},"ts":1483718247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I didn't say that... I'm just providing feedback from FF impl point of view... we haven't implemented anything yet so I don't know why you are picking a fight with me here","msgtype":"m.text"},"ts":1483718480000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I feel like you're dismissing my concern that there's a bigger issue","msgtype":"m.text"},"ts":1483718678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and I don't really understand why","msgtype":"m.text"},"ts":1483718687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry, I didn't intend to dismiss your concerns","msgtype":"m.text"},"ts":1483718739000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I'm less interested in guessing what other browser vendors want than having them tell us what they want... since we're not implementing this any time soon I'm happy to wait for apple to tell us what they thing","msgtype":"m.text"},"ts":1483718774000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"think","msgtype":"m.text"},"ts":1483718775000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"We did talk with Apple at TPAC about this, I guess you weren't there","msgtype":"m.text"},"ts":1483718792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't seen any foreign fetch changes since then... maybe I missed it","msgtype":"m.text"},"ts":1483718819000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I don't think there were any changes","msgtype":"m.text"},"ts":1483718838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But either way the issue stands I think","msgtype":"m.text"},"ts":1483718852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: looking at the document it seems the validation rule is mentioned as issue A","msgtype":"m.text"},"ts":1483718915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dang, I scrolled right past everything but the annevk/Simon section, nevermind","msgtype":"m.text"},"ts":1483719244000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so for https://github.com/whatwg/fetch/pull/449 I was indeed wondering about throwing getters, but if only Streams makes those objects, it seems like they would never be able to throw?","msgtype":"m.text"},"ts":1483719784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it wasn't clear to me if those objects could ever be user-supplied","msgtype":"m.text"},"ts":1483719801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh hmm good point, this whole thing I just wrote up might be pointless...","msgtype":"m.text"},"ts":1483719806000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think you're right","msgtype":"m.text"},"ts":1483719816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's no way they can be getters","msgtype":"m.text"},"ts":1483719829000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Good, then the text in service workers isn't wrong either","msgtype":"m.text"},"ts":1483719841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: shall I go ahead and merge then?","msgtype":"m.text"},"ts":1483719876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let me push my style tweak","msgtype":"m.text"},"ts":1483719886000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: pushed","msgtype":"m.text"},"ts":1483719926000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1483720028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I might look into IDNA tests next week","msgtype":"m.text"},"ts":1483720228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I emailed some folks to see if some kind of framework was available, but no replies thus far","msgtype":"m.text"},"ts":1483720244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for the host parser test, would you be okay with a dedicated hosts.json resource solely for host tests?","msgtype":"m.text"},"ts":1483720268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we could also use that for host/hostname setters where there's no difference, rather than duplicating all those tests as I'm currently doing","msgtype":"m.text"},"ts":1483720301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: btw, that's also going to be next week, but it'd be nice to know by Monday","msgtype":"m.text"},"ts":1483720330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I created https://github.com/whatwg/meta","msgtype":"m.text"},"ts":1483720933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If something is bugging you about the WHATWG community, we now have a much better place to discuss it than the mailing list","msgtype":"m.text"},"ts":1483720961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(IRC is still an option of course, but only when everyone is around at the same time)","msgtype":"m.text"},"ts":1483720984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah dedicated JSON file works great","msgtype":"m.text"},"ts":1483723657000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's a little worrying that you're writing tests without being sure how domain to ASCII works? At least that's how I interpreted your reply.","msgtype":"m.text"},"ts":1483723704000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it didn't even occur to me ToASCII would apply and as I found out it didn't","msgtype":"m.text"},"ts":1483723829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm ok","msgtype":"m.text"},"ts":1483723850000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if a browser would have showed signs of ToASCII I would have investigated more of course","msgtype":"m.text"},"ts":1483723870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess the bug is in tr46.js then","msgtype":"m.text"},"ts":1483723870000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it seems like you're using punycode.js from mathiasbynens which has known bugs","msgtype":"m.text"},"ts":1483723897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but I didn't look closely","msgtype":"m.text"},"ts":1483723928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess so, I didn't see any signs it was involved in that code path. Will dig in more later.","msgtype":"m.text"},"ts":1483723940000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: FWIW, as I said I plan to write more IDNA tests, but those are less of a priority than the basic ASCII boundaries","msgtype":"m.text"},"ts":1483723984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Domenic: I’m missing some context — link?","msgtype":"m.text"},"ts":1483724113000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: https://github.com/w3c/web-platform-tests/pull/4504#issuecomment-270771165","msgtype":"m.text"},"ts":1483724220000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jsdom/whatwg-url is failing some new URL host tests. The problem appears to be in tr46.js https://github.com/Sebmaster/tr46.js which has a punycode.js dependency, not sure if the problem is in tr46.js or punycode.js yet thought","msgtype":"m.text"},"ts":1483724252000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"seems like punycode shouldn’t be hit per annevk’s analysis, so the problem is in tr46.js","msgtype":"m.text"},"ts":1483724688000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"ref. https://github.com/mathiasbynens/todo/issues/9","msgtype":"m.text"},"ts":1483724748000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"https://github.com/Sebmaster/tr46.js/issues/5","msgtype":"m.text"},"ts":1483724829000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mathiasbynens: so the punycode spec seems pretty impenetrable, so I can't tell what the intended semantics of punycode.toASCII are. Given ASCII input, is it meant to be a no-op? Or will it always add the xn-- stuff?","msgtype":"m.text"},"ts":1483724938000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"> It at least seems people are assuming that punycode.toASCII is a no-op on ASCII input.","msgtype":"m.text"},"ts":1483724939000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"that might be my fault! I’ll fix the docs","msgtype":"m.text"},"ts":1483724948000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"https://github.com/bestiejs/punycode.js#punycodetoasciiinput says “Only the non-ASCII parts of the input will be converted, i.e. it doesn’t matter if you call it with a domain that’s already in ASCII.” That should be s/ASCII/printable ASCII/ to match the existing behavior.","msgtype":"m.text"},"ts":1483725014000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Is the \"printable ASCII\" behavior specified anywhere?","msgtype":"m.text"},"ts":1483725090000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I.e. is punycode.js deciding on that behavior based on a spec, or just arbitrarily? If the latter, a spec based version would be quite nice.","msgtype":"m.text"},"ts":1483725125000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://tools.ietf.org/html/rfc3490#section-4.1","msgtype":"m.text"},"ts":1483725139000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"“ToASCII never alters a sequence of code points that are all in the ASCII range to begin with (although it could fail). Applying the ToASCII operation multiple times has exactly the same effect as applying it just once.”","msgtype":"m.text"},"ts":1483725155000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"hmm, so I guess my docs are correct, and the implementation should be updated","msgtype":"m.text"},"ts":1483725182000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"if matching ToASCII is the goal, at least (`punycode.toASCII` is an abstraction)","msgtype":"m.text"},"ts":1483725227000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Yeah that would be quite nice","msgtype":"m.text"},"ts":1483725384000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well OK but punycode is step 7","msgtype":"m.text"},"ts":1483725451000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So maybe tr46 should be handling this","msgtype":"m.text"},"ts":1483725475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And we should be using punycode.encode","msgtype":"m.text"},"ts":1483725540000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"step 6","msgtype":"m.text"},"ts":1483725648000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"but yeah, that makes sense for tr46.js to do","msgtype":"m.text"},"ts":1483725677000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: is it your goal to implement ToASCII?","msgtype":"m.text"},"ts":1483728257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems like the goal is to implement a few steps of https://tools.ietf.org/html/rfc3490#section-4.1 (but not nameprep I guess). Whereas tr46.js implements http://www.unicode.org/reports/tr46/#ToASCII","msgtype":"m.text"},"ts":1483728316000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: somewhat; RFC3490’s `ToASCII` acts on a sequence of code points + the AllowUnassigned flag + the UseSTD3ASCIIRules flag. `punycode.toASCII` just takes a string as input","msgtype":"m.text"},"ts":1483728413000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: oh, if you don't implement UTS46 I'm not sure you should advertize that API","msgtype":"m.text"},"ts":1483728579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: the only browser-compatible API (or that comes close to it) is UTS46 ToASCII","msgtype":"m.text"},"ts":1483728595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: no browser fails on http://-/","msgtype":"m.text"},"ts":1483728824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: aah, http://www.unicode.org/reports/tr46/#Validity_Criteria does say something here","msgtype":"m.text"},"ts":1483728886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: \"The label must neither begin nor end with a U+002D HYPHEN-MINUS character.\" it seems browsers don't enforce that","msgtype":"m.text"},"ts":1483728898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess we could try to make them","msgtype":"m.text"},"ts":1483728917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wait isn't that the problematic thing","msgtype":"m.text"},"ts":1483728919000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No not quite","msgtype":"m.text"},"ts":1483728946000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ?","msgtype":"m.text"},"ts":1483728962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"validity rule 3 is the known problem","msgtype":"m.text"},"ts":1483728963000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"errr","msgtype":"m.text"},"ts":1483728969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"validity rule 2 is the known problem","msgtype":"m.text"},"ts":1483728973000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"validity rule 3 is closely related though","msgtype":"m.text"},"ts":1483728978000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1483728992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I can add a comment to Mark's document","msgtype":"m.text"},"ts":1483729001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll comment on the doc?","msgtype":"m.text"},"ts":1483729001000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Please do","msgtype":"m.text"},"ts":1483729005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then I'm going to take a break!","msgtype":"m.text"},"ts":1483729011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We'll be back Monday for more URL parsing fun","msgtype":"m.text"},"ts":1483729031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1483729100000,"senderName":"Domenic","senderId":"Domenic@irc"}
]