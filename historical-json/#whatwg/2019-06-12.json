[
{"content":{"body":"yoav: would you say https://github.com/whatwg/html/pull/3752/files#r269950600 is \"resolved\", given your latest comment?","msgtype":"m.text"},"ts":1560297849000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: is there no way to determine the \"destination\", or resource type of a response? seems you can only get that from request?","msgtype":"m.text"},"ts":1560312566000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: resource type?","msgtype":"m.text"},"ts":1560314277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, I guess I am just wondering if you can get the request's `destination`, from a #concept-response","msgtype":"m.text"},"ts":1560314349000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: you cannot","msgtype":"m.text"},"ts":1560314380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok. Right now a #concept-request can only get its integrity metadata set for a few destinations (\"\", \"style\", and \"script\" from what I can tell).","msgtype":"m.text"},"ts":1560314645000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"To enable `integrity` on rel=preload w/o enabling SRI on a bunch of destinations that SRI currently cannot affect (like \"object\"), I'm thinking of having SRI spec define a set of \"sri-compatible destinations\", and having Fetch gate calling into the SRI spec based on whether the destination is \"compatible\"","msgtype":"m.text"},"ts":1560314684000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Looks like I can just use request's destination, and pass that to the SRI spec for it to determine whether or not a dest is \"compatible\"","msgtype":"m.text"},"ts":1560314717000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: why would we not support it for all with rel=preload?","msgtype":"m.text"},"ts":1560314769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://w3c.github.io/webappsec-subresource-integrity/#verification-of-html-document-subresources mentions that a \"future version of this document\" would include support, just by tweaking a couple things in the Preload/HTML standards","msgtype":"m.text"},"ts":1560314828000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Perhaps it'd be sensible to allow SRI verification on destinations that you can preload, if and only if you can perform SRI verification on that destination w/o the preload","msgtype":"m.text"},"ts":1560314873000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"(for example, there's no way of setting an <audio> request's integrity metadata, so maybe we should not honor it on its preload, since SRI spec isn't expecting that atm","msgtype":"m.text"},"ts":1560314919000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1560314934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fetch() supports it, the infra is there","msgtype":"m.text"},"ts":1560314964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"True...I guess I like the idea of the SRI spec being in control of where SRI verification can take place, since it kind of attempts to do that now","msgtype":"m.text"},"ts":1560315010000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Ignoring the infra despite the attribute being set seems likely to lead to issues in the future if we do want more “destinations”","msgtype":"m.text"},"ts":1560315041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: if it does that’s dumb, as Fetch and HTML are in control","msgtype":"m.text"},"ts":1560315076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok that makes sense. This note in SRI spec should probably be gone then \"Note: A future revision of this specification is likely to include integrity support for all possible subresources, i.e., a, audio, embed, iframe, img, link, object, script, source, track, and video elements.\"","msgtype":"m.text"},"ts":1560315127000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: the main callout Fetch has to SRI is about running the check on the response body","msgtype":"m.text"},"ts":1560315127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unless I’m missing something","msgtype":"m.text"},"ts":1560315159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No that makes sense, just I assumed that SRI spec was trying to be in control of where it is supported, given the partial IDL interfaces it has, and the note ^","msgtype":"m.text"},"ts":1560315194000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it having partial IDL seems wrong too","msgtype":"m.text"},"ts":1560321354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: unless it’s somehow made non-normative and not indexable, but that might be needlessly confusing too","msgtype":"m.text"},"ts":1560321418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems like the right approach is interface mixin + `includes`","msgtype":"m.text"},"ts":1560321449000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"(right?)","msgtype":"m.text"},"ts":1560321458000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: well, I haven't looked but in this case I think it's duplicating HTML as the partial interfaces were upstreamed and integrated there","msgtype":"m.text"},"ts":1560322921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(iirc)","msgtype":"m.text"},"ts":1560322929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is my impression too","msgtype":"m.text"},"ts":1560323022000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1560343330000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Hmm whatpr.org versions of the HTML spec don't have link-fixup.js or html-dfn.js","msgtype":"m.text"},"ts":1560344083000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I vaguely recall maybe that was intentional, because we don’t actually want people using those drafts for any actual information needs?","msgtype":"m.text"},"ts":1560344194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it makes it harder to review though :-|","msgtype":"m.text"},"ts":1560345451000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe link-fixup isn't necessary to review, but I wanted html-dfn.js now","msgtype":"m.text"},"ts":1560345538000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Where do I file an issue for this?","msgtype":"m.text"},"ts":1560345578000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: MikeSmith: whatpr is only running wattsi, not full HTML build, because we only have a wattsi server, not a html-build server.","msgtype":"m.text"},"ts":1560345631000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably best tracked at https://github.com/whatwg/html-build/issues, although I thought we had an issue already; maybe it is somewhere else.","msgtype":"m.text"},"ts":1560345692000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah sorry I realize now whatpr is for pull requests? I was (mis)thinking it had something to with the lawyer drafts","msgtype":"m.text"},"ts":1560345728000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: ok. could it just load the URL https://html.spec.whatwg.org/html-dfn.js ?","msgtype":"m.text"},"ts":1560345829000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: yeah just for pull requests","msgtype":"m.text"},"ts":1560345935000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1560345956000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I think that'd be hard because currently tobie's setup just calls to the web service, but maybe it could work","msgtype":"m.text"},"ts":1560345963000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I mean changing the <script src> in whatwg/html source","msgtype":"m.text"},"ts":1560346046000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh, interesting","msgtype":"m.text"},"ts":1560346158000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess we could, but I wonder where that stops; do we do it for all the images and such?","msgtype":"m.text"},"ts":1560346175000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think it also won't work because we don't generate the json file","msgtype":"m.text"},"ts":1560346184000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or maybe we do, I forget whether that's wattsi or html-build...","msgtype":"m.text"},"ts":1560346194000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"for the dfn's?","msgtype":"m.text"},"ts":1560346855000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wattsi generates the json","msgtype":"m.text"},"ts":1560346858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: I suppose having images would also be nice, but seems less important since images are rare. We already load file-issue.js with an absolute URL fwiw","msgtype":"m.text"},"ts":1560348884000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TIL http://software.hixie.ch/utilities/js/live-dom-viewer/saved/7001","msgtype":"m.text"},"ts":1560375395000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]