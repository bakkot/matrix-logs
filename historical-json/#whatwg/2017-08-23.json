[
{"content":{"body":"Hixie's really made it now: https://twitter.com/CodeWisdom/status/898664302726356992","msgtype":"m.text"},"ts":1503471392000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: what do you mean by obj.trailer != obj.trailer? obj.trailer is a promise that AFAICT isn't changed?","msgtype":"m.text"},"ts":1503480017000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: hmm I was thinking of an IDL exception which would always be wrapped in a new promise","msgtype":"m.text"},"ts":1503480176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: I guess this might be slightly different","msgtype":"m.text"},"ts":1503480201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah IIRC it just rejects an existing promise, doesn't create a new one","msgtype":"m.text"},"ts":1503480227000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: still not a big fan of making it reject though, we don't even do that for network errors atm","msgtype":"m.text"},"ts":1503480238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: it's not like we make accessing obj.headers throw","msgtype":"m.text"},"ts":1503480269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's prolly the better rationale, JakeA ^^","msgtype":"m.text"},"ts":1503480286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm. We don't really return network error responses, but if headers works there I guess it makes sense. Although isn't it weird not being able to tell the difference between aborted response and no trailers?","msgtype":"m.text"},"ts":1503480607000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think that is a bit weird","msgtype":"m.text"},"ts":1503480646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: okay, maybe we should just keep this as-is","msgtype":"m.text"},"ts":1503480669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not a big fan of it, but adding response.aborted or some such also seems weird","msgtype":"m.text"},"ts":1503480688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: shall I try and fix up the trailer and response constructor stuff as part of the same PR?","msgtype":"m.text"},"ts":1503480800000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: would be good to add a [SameObject] to trailers, if you decide to work on the current PR a bit more","msgtype":"m.text"},"ts":1503480850000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: yeah, makes sense","msgtype":"m.text"},"ts":1503480923000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh wait, https://github.com/heycam/webidl/issues/71... sigh never mind","msgtype":"m.text"},"ts":1503480931000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Hm","msgtype":"m.text"},"ts":1503480985000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: what is wrong wit hthe trailer and response constructor? I might have missed something","msgtype":"m.text"},"ts":1503481078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: I think I explicitly removed [SameObject] at some point due to it being incompatible with promises","msgtype":"m.text"},"ts":1503481093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://fetch.spec.whatwg.org/#response-class always resolves the trailer promise with an empty set of headers","msgtype":"m.text"},"ts":1503481187000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So it can't later be resolved with the actual trailer headers","msgtype":"m.text"},"ts":1503481212000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: oh, maybe I'm wrong, because the Response constructor isn't invoked","msgtype":"m.text"},"ts":1503481301000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It just creates a new Response object","msgtype":"m.text"},"ts":1503481314000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Sorry, my bad","msgtype":"m.text"},"ts":1503481323000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TimothyGu: maybe you're up for reviewing the full changeset with Domenic being away?","msgtype":"m.text"},"ts":1503481358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: if you still have that free time that is","msgtype":"m.text"},"ts":1503481373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, you just posted that on the issue","msgtype":"m.text"},"ts":1503481383000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah I do, though I'm not sure I have the expertise to review properly. I'll try though.","msgtype":"m.text"},"ts":1503481415000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"annevk: the language is \"resolve the trailer promise\" not \"set the trailer promise to...\" so I think it's still the same","msgtype":"m.text"},"ts":1503481441000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"https://github.com/heycam/webidl/pull/217 is why promise getters cannot use SameObject btw","msgtype":"m.text"},"ts":1503481561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess what I meant is that if you have a late network error (something closes the connection) trailer will just be empty","msgtype":"m.text"},"ts":1503481887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: maybe that's okay though","msgtype":"m.text"},"ts":1503481893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't have a strong opinion, but returning an empty set of headers on abort seems weird. Resolving with undefined is another option, but that's not what fetch() does in light of abort/failure","msgtype":"m.text"},"ts":1503483752000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that's fair, but it's also weird that early connection close does result in an empty set","msgtype":"m.text"},"ts":1503483874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe networkError.headers should be null?","msgtype":"m.text"},"ts":1503483916000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or undefined. I'm never sure when we use one or the other","msgtype":"m.text"},"ts":1503483931000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sorry, networkError.headers doesn't matter as you said, I'm talking about response.trailer when there's an early connection close","msgtype":"m.text"},"ts":1503484088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We error the stream in this case, so shouldn't we reject trailers with the same/similar error?","msgtype":"m.text"},"ts":1503484171000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, I think that might make sense","msgtype":"m.text"},"ts":1503484222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If response.text() rejects, but response.trailers fulfills, it's a little asymmetric","msgtype":"m.text"},"ts":1503484224000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But I take your point that's it'd be weird having a property throw (in a sync world), but I guess this is an async-only problem","msgtype":"m.text"},"ts":1503484278000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: do callback interfaces need  [Exposed=Window] to?","msgtype":"m.text"},"ts":1503489746000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: or is that just relevant for those that have constants?","msgtype":"m.text"},"ts":1503489790000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: dunno, tbh I was looking at IDL yesterday and was surprised by dictionaries having them","msgtype":"m.text"},"ts":1503489829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and apparently dictionaries can have constructors","msgtype":"m.text"},"ts":1503489837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I forgot about all that and I'm not totally sure I like it","msgtype":"m.text"},"ts":1503489849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what?","msgtype":"m.text"},"ts":1503489863000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it seems that self.EventListener returns undefined so I guess only those with constants really need it","msgtype":"m.text"},"ts":1503489905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: [Exposed] is a thing you can use on dictionaries (hopefully only required when it has a constructor, I didn't investigate)","msgtype":"m.text"},"ts":1503489938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So [Exposed] and [Constructor] don't apply to dictionaries (phew!)","msgtype":"m.text"},"ts":1503490090000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1503490099000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: \"The following extended attributes are applicable to dictionaries: [Constructor], [Exposed], [SecureContext],\"","msgtype":"m.text"},"ts":1503490284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: might wanna fix that then","msgtype":"m.text"},"ts":1503490301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: weird. That doesn't seem to match the description of either extended attributes, nor (hopefully) actuals specs.","msgtype":"m.text"},"ts":1503490453000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Same for SecureContext, really. What does it do to a dictionary?","msgtype":"m.text"},"ts":1503490550000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I vaguely recall dictionaries having constructors somewhere","msgtype":"m.text"},"ts":1503491118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know why that was done or how it works though","msgtype":"m.text"},"ts":1503491126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's not defined anywhere","msgtype":"m.text"},"ts":1503491235000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Maybe it got removed again? I'm pretty sure it was discussed","msgtype":"m.text"},"ts":1503491658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Was that for DOMPoint?","msgtype":"m.text"},"ts":1503492094000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: maybe","msgtype":"m.text"},"ts":1503492184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://lists.w3.org/Archives/Public/public-script-coord/2014JulSep/0032.html indeed maybe","msgtype":"m.text"},"ts":1503492506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: still unclear and not going to dig further for now","msgtype":"m.text"},"ts":1503492518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll file an issue on that sentence anyway","msgtype":"m.text"},"ts":1503492586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ty","msgtype":"m.text"},"ts":1503493352000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: thoughts on TimothyGu's comment in the PR?","msgtype":"m.text"},"ts":1503493366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do global interfaces also need to have an [=Exposed=] ext attr?","msgtype":"m.text"},"ts":1503493403000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: I'm happy to merge at this point; just need an updated commit title/body with links to tests and such","msgtype":"m.text"},"ts":1503493404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: yeah","msgtype":"m.text"},"ts":1503493415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ta","msgtype":"m.text"},"ts":1503493420000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: and [Global]","msgtype":"m.text"},"ts":1503493422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I was thinking they could maybe omit Exposed, but that does not work for [Global=(Worker,DedicatedWorker), Exposed=DedicatedWorker] and such (it would end up too widely exposed)","msgtype":"m.text"},"ts":1503493472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and to create a special rule if Global only lists one value seems like too much magic","msgtype":"m.text"},"ts":1503493502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed it seems easier and less error-prone to be explicit all the time.","msgtype":"m.text"},"ts":1503493533000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"does anyone know the current status of \"html modules\"?  es module semantics for loading html documents... I thought someone was working on a proposal for it","msgtype":"m.text"},"ts":1503494091000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/w3c/webcomponents/issues/645 there's not much of a proposal thus far","msgtype":"m.text"},"ts":1503494600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: but there's some convergence on ideas it seems","msgtype":"m.text"},"ts":1503494608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1503494677000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: ah, this was the last thing I had seen: https://github.com/dglazkov/webcomponents/blob/html-modules/proposals/HTML-Imports-and-ES-Modules.md","msgtype":"m.text"},"ts":1503494749000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that's pretty dated compared to that thread I'd say","msgtype":"m.text"},"ts":1503494783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea, just saying thats how old my info was before asking here","msgtype":"m.text"},"ts":1503494803000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I guess you'll be at TPAC?","msgtype":"m.text"},"ts":1503495233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1503495241000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: interested in also doing this?","msgtype":"m.text"},"ts":1503495244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't going","msgtype":"m.emote"},"ts":1503495249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I would sit in the meeting, but not sure I am very knowledgeable or on the same page as other folks at mozilla","msgtype":"m.text"},"ts":1503495283000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think we really have a position per se, other than trying to work with library developers (including the non-Google ones)","msgtype":"m.text"},"ts":1503495371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: thus far our position has mostly been that we'd like to see <script type=module> roll out first and then see experimentation by libraries","msgtype":"m.text"},"ts":1503495427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: which hasn't really happened yet...","msgtype":"m.text"},"ts":1503495441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1503495467000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, is Exposed needed even for NoInterfaceObject interfaces?","msgtype":"m.text"},"ts":1503499192000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I thought first they were not allowed together","msgtype":"m.text"},"ts":1503499203000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that'll be clearer once I include mixins","msgtype":"m.text"},"ts":1503499592000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: I think you want them to describe where they're exposed, as you can have a [NoInterfaceObject] that you want mixed-in in one global but not the other.","msgtype":"m.text"},"ts":1503499659000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: I think they are, but it should not be like that","msgtype":"m.text"},"ts":1503499662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1503499675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I don't think that's a good model, since we don't assert which objects you can be mixed in with either","msgtype":"m.text"},"ts":1503499704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: let me rephrase, I think it's good to allow, but I think by default it should inherit","msgtype":"m.text"},"ts":1503499765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, this is good stuff to get figured out.","msgtype":"m.text"},"ts":1503499835000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: (prior to adding mixins)","msgtype":"m.text"},"ts":1503499852000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: Do we have cases of mixins that choose where they're exposed?","msgtype":"m.text"},"ts":1503499919000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: or is it always the case that their exposition is decided by the interfaces which implement them?","msgtype":"m.text"},"ts":1503499984000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: mostly the latter, cannot think of cases for the former","msgtype":"m.text"},"ts":1503500006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: note that the former can always be done by just putting [Exposed] on the member itself","msgtype":"m.text"},"ts":1503500019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: as e.g. XHR does for responseXML (not a mixin, but same deal)","msgtype":"m.text"},"ts":1503500034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, right.","msgtype":"m.text"},"ts":1503500041000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Navigator might have had more of that if it were designed in a time where we had [Exposed]","msgtype":"m.text"},"ts":1503500066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But now we have Navigator and WorkerNavigator","msgtype":"m.text"},"ts":1503500073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is rather silly","msgtype":"m.text"},"ts":1503500084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so it optional if you have [NoInterfaceObject], but it's there, it must be a subset of what it gets implemented in.","msgtype":"m.text"},"ts":1503500187000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: let me rephrase that","msgtype":"m.text"},"ts":1503500251000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: so [Exposed] is optional if you have [NoInterfaceObject]. If it's nonetheless specified, then the exposed set must be a subset of what the exposed set of the interface it gets mixed-in to.","msgtype":"m.text"},"ts":1503500350000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: a subset of the union of the exposed sets of the interfaces it gets mixed into","msgtype":"m.text"},"ts":1503500527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I'd think","msgtype":"m.text"},"ts":1503500538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: if you want to add something to Navigator and WorkerNavigator, but exclude the ServiceWorker global, for instance","msgtype":"m.text"},"ts":1503500581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the union or the intersection?","msgtype":"m.text"},"ts":1503501004000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: latter I guess","msgtype":"m.text"},"ts":1503501051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I think I continue to be confused by the word union when it comes to set theory","msgtype":"m.text"},"ts":1503501077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe back later, maybe tomorrow; good day all","msgtype":"m.text"},"ts":1503501094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"have a nice evening","msgtype":"m.text"},"ts":1503501104000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I didn't include Exposed for NoInterfaceObject interfaces in csswg-drafts, but can fix if they should have it","msgtype":"m.text"},"ts":1503501261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think you should","msgtype":"m.text"},"ts":1503502230000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Relaxed the requirements for NoInterfaceObject","msgtype":"m.text"},"ts":1503516754000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"meanwhile I added Exposed in csswg-drafts :-P","msgtype":"m.text"},"ts":1503516848000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I saw.","msgtype":"m.text"},"ts":1503517739000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1503517745000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"how does fetch know what credentials to send when the credentials: 'include' option is set?","msgtype":"m.text"},"ts":1503519501000,"senderName":"dmarr","senderId":"dmarr@irc"},
{"content":{"body":"i am returning a 401 with WWW-Authenticate header from my api, and i want to basically have a client page that can send in the creds manually","msgtype":"m.text"},"ts":1503519503000,"senderName":"dmarr","senderId":"dmarr@irc"},
{"content":{"body":"Domenic: I think I've hit my limit of obvious perf hacks for the moment, but the last few days of work have knocked off 15-20% of DOM's processing time, so yay! (And a bunch was changes that benefit short specs, too.)","msgtype":"m.text"},"ts":1503531896000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]