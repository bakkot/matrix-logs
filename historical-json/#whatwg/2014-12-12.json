[
{"content":{"body":"TabAtkins: best practices for abbreviated <dfn>s in bikeshed specs/specs in general? I am thinking \"A <dfn>exclusive stream reader</dfn> or <dfn>reader</dfn> is...\" but maybe the second one shouldn't be <dfn>ed?","msgtype":"m.text"},"ts":1418347577000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Use a long enough name that it stands a good chance of being globally unique; makes everyone's lives easier.  If you want to use a shorter term within your spec, use the local-title='' attribute, which'll create linking text solely for local autolinks, without exporting.","msgtype":"m.text"},"ts":1418348367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So <dfn export local-title=\"reader\">exclusive stream reader</dfn> will give you the long term for autolinking from elsewhere, and the short term locally for convenience.","msgtype":"m.text"},"ts":1418348414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK. And just remove the <dfn> around the word \"reader\" later in the sentence?","msgtype":"m.text"},"ts":1418348429000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah.","msgtype":"m.text"},"ts":1418348548000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sgtm","msgtype":"m.text"},"ts":1418348559000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"all of my stuff is <dfn>s so at some point I need to go change them into <dfn export>s","msgtype":"m.text"},"ts":1418348584000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Alternately, keep the <dfn> around reader, just don't export it.  It'll only be autolinkable if people specify they want it from the spec.","msgtype":"m.text"},"ts":1418348587000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1418348593000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan, http://dev.w3.org/csswg/cssom/#dom-cssstyledeclaration-item doesn't say what happens for out-of-range arguments","msgtype":"m.text"},"ts":1418377428000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: can you file a bug?","msgtype":"m.text"},"ts":1418377626000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1418377676000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I see https://www.w3.org/Bugs/Public/show_bug.cgi?id=27590 already exists for the other thing that confused me :)","msgtype":"m.text"},"ts":1418377690000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1418377690000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, r? https://critic.hoppipolla.co.uk/r/3473","msgtype":"m.text"},"ts":1418377898000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh shit, I didn't realize you were just moving things","msgtype":"m.text"},"ts":1418378260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1418378262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, well, not sure if anyone's reviewed it before :)","msgtype":"m.text"},"ts":1418379561000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, trying to figure out where the normative requirement is exactly...","msgtype":"m.text"},"ts":1418379912000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is it \"If the CORS flag is set and a CORS check for request and response returns failure, return a network error.\" in Fetch?","msgtype":"m.text"},"ts":1418379926000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: actually, I wonder whether that test is correct at all","msgtype":"m.text"},"ts":1418380345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it looks bogus","msgtype":"m.text"},"ts":1418380365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1418380405000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: at the time XHR does send(); it should issue a CORS-with-forced-preflight","msgtype":"m.text"},"ts":1418380406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: due to event listeners being attached","msgtype":"m.text"},"ts":1418380413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: which would make progress events work","msgtype":"m.text"},"ts":1418380420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Isn't that only with event listeners on xhr.upload?","msgtype":"m.text"},"ts":1418380439000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: oh good point","msgtype":"m.text"},"ts":1418380454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: okay so yeah, this is about failing before any progress tasks would be queued","msgtype":"m.text"},"ts":1418380479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, so is that covered by the bit I quoted?","msgtype":"m.text"},"ts":1418380844000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"still doesn't know his way around Fetch","msgtype":"m.emote"},"ts":1418380852000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"has still no idea how Fetch works","msgtype":"m.emote"},"ts":1418381715000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"goal for the next year, try to understand what Fetch is about :)","msgtype":"m.text"},"ts":1418381774000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ms2ger: yeah","msgtype":"m.text"},"ts":1418383888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, okay, thanks","msgtype":"m.text"},"ts":1418384476000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://www.ups-scs.com/contact/technical_support_questions.html","msgtype":"m.text"},"ts":1418386546000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"nice Browser Type options","msgtype":"m.text"},"ts":1418386551000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Anyone here familiar with bikeshed?","msgtype":"m.text"},"ts":1418387263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm getting \"FATAL ERROR: Functions/methods must end with () in their linking text, got 'href'.\" and I've no idea what is wrong","msgtype":"m.text"},"ts":1418387271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's expecting <dfn>href()</dfn>. maybe change the dfn type (don't remember which attribute to change the type)","msgtype":"m.text"},"ts":1418387546000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I don't even know how that can happen since I'm not changing any of that","msgtype":"m.text"},"ts":1418387576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think rubys must be using a different version of bikeshed","msgtype":"m.text"},"ts":1418387586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*sigh*","msgtype":"m.text"},"ts":1418387596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay so something is wrong with \"stringifier\"","msgtype":"m.text"},"ts":1418387681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I pushed a PR against whatwg/url... Hopefully this gets fixed somehow","msgtype":"m.text"},"ts":1418388651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fdd7aa2dfce7b2ed8b8f00c7dc628aeada61fad6 is the first bad commit","msgtype":"m.text"},"ts":1418391367000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"commit fdd7aa2dfce7b2ed8b8f00c7dc628aeada61fad6","msgtype":"m.text"},"ts":1418391368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Author: Tab Atkins <jackalmageâŠ™gc>","msgtype":"m.text"},"ts":1418391368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Date:   Wed Dec 3 11:24:08 2014 -0800","msgtype":"m.text"},"ts":1418391368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    Add stringifier to the functionish types. Use construct.methodName, per plinss recommendation.","msgtype":"m.text"},"ts":1418391368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":":040000 040000 cad74a9ec249d4cd7f358bb2b26a651e49f711c2 9bd6d22e2d39f6393c90f4be02d684c2e05a299c M\tbikeshed","msgtype":"m.text"},"ts":1418391368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"bisect run success","msgtype":"m.text"},"ts":1418391368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Maybe bikeshed should have a pre/postcommit hook to make sure it doesn't actually break any specs","msgtype":"m.text"},"ts":1418391895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there a collective term for requests that may potentially create a new client?","msgtype":"m.text"},"ts":1418391994000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"potentially?","msgtype":"m.text"},"ts":1418392010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess the only potential is embed","msgtype":"m.text"},"ts":1418392032000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(and object)","msgtype":"m.text"},"ts":1418392037000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Commented out I have this:","msgtype":"m.text"},"ts":1418392066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And we ignore those in ServiceWorker at the moment","msgtype":"m.text"},"ts":1418392069000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"<p>A <dfn>client request</dfn> is a <span title=concept-request>request</span> whose","msgtype":"m.text"},"ts":1418392069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<span title=concept-request-context>context</span> is one of <i title>child</i>,","msgtype":"m.text"},"ts":1418392069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<i title>navigate</i>, <i title>popup</i>, and <i title>sharedworker</i>.","msgtype":"m.text"},"ts":1418392069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but that seems out of date with the contexts we have","msgtype":"m.text"},"ts":1418392087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, needs to include form, anchor etc","msgtype":"m.text"},"ts":1418392099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And the opposite was \"resource request\"","msgtype":"m.text"},"ts":1418392099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Client request works for me","msgtype":"m.text"},"ts":1418392107000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'll write up a ticket","msgtype":"m.text"},"ts":1418392120000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(with the complete list of contexts)","msgtype":"m.text"},"ts":1418392144000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"got a minimal test case for the bikeshed breakage, will open an issue.  I don't see a workaround as being possible.","msgtype":"m.text"},"ts":1418392243000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27595","msgtype":"m.text"},"ts":1418392477000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://github.com/tabatkins/bikeshed/issues/307","msgtype":"m.text"},"ts":1418392501000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys++","msgtype":"m.text"},"ts":1418392748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, I'm not sure about your open question","msgtype":"m.text"},"ts":1418392789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"embed/object? They could be \"potentially client requests\"","msgtype":"m.text"},"ts":1418392819000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"A different collection","msgtype":"m.text"},"ts":1418392840000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think plugin is fetches from a plugin","msgtype":"m.text"},"ts":1418392845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If the plugin uses the browser's network stack","msgtype":"m.text"},"ts":1418392860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"â€¦then it's a resource","msgtype":"m.text"},"ts":1418392869000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1418392871000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Would need to check with Mike to be sure, but I think that's correct, yes","msgtype":"m.text"},"ts":1418392898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"annoying requests\" for object/embed","msgtype":"m.text"},"ts":1418392910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"clientcurious","msgtype":"m.text"},"ts":1418392961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1418392966000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh btw, per some feedback from Domenic and TabAtkins I might end up renaming all the /context/ things to \"context\" so prose and enums match","msgtype":"m.text"},"ts":1418393189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't follow, give me an example","msgtype":"m.text"},"ts":1418393286000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: currently the spec has /form/, it'll become \"form\"","msgtype":"m.text"},"ts":1418393462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess serviceworker as client request makes sense, it will just never have an associated service worker","msgtype":"m.text"},"ts":1418393506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I was thinking what new Request().client would be within a ServiceWorker","msgtype":"m.text"},"ts":1418393585000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I thought .client was on FetchEvent?","msgtype":"m.text"},"ts":1418393648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, but https://github.com/slightlyoff/ServiceWorker/issues/318 suggests request is better?","msgtype":"m.text"},"ts":1418393822000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ah right, so if client as a thing is only ever going to be useful in the context of a service worker, perhaps putting it on FetchEvent is not too bad","msgtype":"m.text"},"ts":1418393928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if we decide that it is useful outside of SW, we could always make FetchEvent.prototype.client's getter forward","msgtype":"m.text"},"ts":1418393953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I'm fine with that","msgtype":"m.text"},"ts":1418394087000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: actually, I thought we would not have .client there and maybe at some point have a handle back to the fetcher","msgtype":"m.text"},"ts":1418394143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and only have clients exposed on the global","msgtype":"m.text"},"ts":1418394161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: true https://github.com/slightlyoff/ServiceWorker/issues/575","msgtype":"m.text"},"ts":1418394183000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: hah, I was hovered over the \"Comment\" button there when yours appeared","msgtype":"m.text"},"ts":1418394262000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1418394269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is the subscribe feature in GitHub new? Seems useful","msgtype":"m.text"},"ts":1418394317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: so some other things that broke are links to URLSearchParams, they would normally be #urlsearchparams whereas #dom-urlsearchparams would be a link to its constructor definition","msgtype":"m.text"},"ts":1418394646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: it seems #url also no longer links to the URL interface","msgtype":"m.text"},"ts":1418394682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: and the URL constructor is now #dom-url-url...","msgtype":"m.text"},"ts":1418394709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've got some things I need to attend to today (for wife not work), so bug reports would be helpful.","msgtype":"m.text"},"ts":1418394750000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: sure","msgtype":"m.text"},"ts":1418394781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: More people use Bikeshed than I even know about, so not breaking \"any\" specs as I update and tweak is likely impossible. ^_^","msgtype":"m.text"},"ts":1418398285000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: But I do run Web Animations regularly, as it tends to use more complex things.  I might add url to that regimen.","msgtype":"m.text"},"ts":1418398305000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: The #dom-foo pattern for interface names is standard practice (though obviously it can be overridden by you).  Dunno what standard practice is for constructor IDs, but it's currently treated as a method of the same name as the interface, thus the ID you see.","msgtype":"m.text"},"ts":1418398390000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, it's not standard practice in specs that define interfaces","msgtype":"m.text"},"ts":1418398425000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes, it is?","msgtype":"m.text"},"ts":1418398441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://wiki.whatwg.org/wiki/Specs/howto#Definitions","msgtype":"m.text"},"ts":1418398501000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hm, ok.","msgtype":"m.text"},"ts":1418398561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wonder why I was told to implement it this way originally.","msgtype":"m.text"},"ts":1418398571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Remember that I try hard to make sure that Bikeshed recovers gracefully from fatal errors, so if something is erroring wrongly, you can always do a force-generate until I fix the issue.","msgtype":"m.text"},"ts":1418398705000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: make force-generate?","msgtype":"m.text"},"ts":1418399138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Your makefile is something y'all did on your own, I have no idea what options y'all have there.","msgtype":"m.text"},"ts":1418399165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1418399172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it's just passing the -f flag right after the command, `bikeshed -f spec`","msgtype":"m.text"},"ts":1418399178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay","msgtype":"m.text"},"ts":1418399184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Your makefile should probably force-generate by default.)","msgtype":"m.text"},"ts":1418399208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the convention I know is #interfacename (interface) and #dom-interfacename (constructor), #dom-interfacename-member (member)","msgtype":"m.text"},"ts":1418399249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, Ms2ger pointed me to the wiki page.","msgtype":"m.text"},"ts":1418399264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For some reason I was instructed differently when I was first putting together ID generation for IDL stuff.","msgtype":"m.text"},"ts":1418399280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1418399319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd prefer not to pass the -f flag.  Bikeshed detected errors should be fixed.  99% of the time, the right fix is to change the spec.","msgtype":"m.text"},"ts":1418399357000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"as to definitions, my preference is that the url standard not be an exception.  If that means that there is a one time cost to move to what others have agreed to, I think we should do that.","msgtype":"m.text"},"ts":1418399401000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I dunno make. Is it possible to add some way to force-generate via make?","msgtype":"m.text"},"ts":1418399403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: yeah, moving IDs is no problem.","msgtype":"m.text"},"ts":1418399416000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can always do a force generate \"manually\" when I need to debug a problem.","msgtype":"m.text"},"ts":1418399428000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: But annevk doesn't know how to do that.","msgtype":"m.text"},"ts":1418399438000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/doesn't/didn't/ :-)","msgtype":"m.text"},"ts":1418399452000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: define \"others\" and see the above page","msgtype":"m.text"},"ts":1418399505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not going to define others. :)  If the right fix is that bikeshed should change, then that's ok with me too.","msgtype":"m.text"},"ts":1418399562000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Pretty sure the conventions used by URL predate bikeshed","msgtype":"m.text"},"ts":1418399582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only other big user of IDL so far is Web Animations.  It's fine to move Bikeshed.","msgtype":"m.text"},"ts":1418399589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's not a ton of cross-linking of IDL between specs yet, so it's a good time to nail these down.","msgtype":"m.text"},"ts":1418399605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1418399610000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"And fixing is just a matter of regenning if any links do break.","msgtype":"m.text"},"ts":1418399630000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What in the hell? Why does github use flash somewhere on the page, and why is it suddenly crashing in my Chrome and preventing me from interacting with the page?","msgtype":"m.text"},"ts":1418402623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: uses flash to make clipboard copy buttons work","msgtype":"m.text"},"ts":1418402665000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, kk. Well, for some reason it's crashing in my ubuntu chrome. >_<","msgtype":"m.text"},"ts":1418402698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fwiw, github works fine here (ubuntu 14.04, 64-bit intel desktop)","msgtype":"m.text"},"ts":1418402885000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Annoyingly, that stringifier error was hitting codepaths that *didn't* fail gracefully when you forced the generation.  That's fixed now. ^_^","msgtype":"m.text"},"ts":1418404984000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: Sorry about not testing the stringifier-attribute form. I don't recall ever seeing it in real life before.","msgtype":"m.text"},"ts":1418405024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You know I would be more sympathetic to web crypo going through the process too fast if I hadn't sat in a room where everyone agreed that a testsuite was needed but refused to actually commit any resources to creating one.","msgtype":"m.text"},"ts":1418405700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1418405759000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1418405762000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"there's an anandtech expose waiting to be written about specs being pushed through the process too fast","msgtype":"m.text"},"ts":1418407191000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"From what I gather from tweets from sleevi it was not just things being pushed fast","msgtype":"m.text"},"ts":1418407321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That WG seemed rather broken","msgtype":"m.text"},"ts":1418407334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, there seemed to be a lot of \"okay, we know this is broken, but we want to implement it anyway, so it needs to be in the spec\".","msgtype":"m.text"},"ts":1418407400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And a lot of spurious arguments around crypto algorithms","msgtype":"m.text"},"ts":1418407544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Basically it appeared there were several people in the group who didn't care about security, but rather about matching some existing crypto impl, or something like that.","msgtype":"m.text"},"ts":1418407806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And the chair didn't suppress them sufficiently.","msgtype":"m.text"},"ts":1418407824000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For anyone interested in searchParams and URLSearchParams: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27596","msgtype":"m.text"},"ts":1418408112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ugh why can't we have nice things","msgtype":"m.text"},"ts":1418410743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"um, 1:1 ? that sounds bad","msgtype":"m.text"},"ts":1418410819000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"annevk: I don't understand why your solution of replacing hte object upon navigation doens't work","msgtype":"m.text"},"ts":1418410949000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"boogyman: why?","msgtype":"m.text"},"ts":1418414265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Location is associated with a document's browsing context's active document; we could tie URLSearchParams to document, but what happens if you hold a reference to an older URLSearchParams object before you navigated and start to mutate it?","msgtype":"m.text"},"ts":1418414327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that is why I came up with the idea of having an immutable variant","msgtype":"m.text"},"ts":1418414373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there something wrong the answer \"the location object's other properties update, but otherwise nothing happens\"?","msgtype":"m.text"},"ts":1418414424000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/the location object/the old location object/","msgtype":"m.text"},"ts":1418414432000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: there's no old Location object","msgtype":"m.text"},"ts":1418414655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, presumably someone could have saved it somewhere?","msgtype":"m.text"},"ts":1418414834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or is there really only one window.location across navigations","msgtype":"m.text"},"ts":1418414847000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it doesn't change identity afaik","msgtype":"m.text"},"ts":1418414847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1418414851000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well i guess then i'd say disassociate the old one so that mutating it does nothing to the location","msgtype":"m.text"},"ts":1418414870000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we really need some diagrams for this set of objects at some point","msgtype":"m.text"},"ts":1418414880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kind of strange but it is explicable","msgtype":"m.text"},"ts":1418414881000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"+Infinity","msgtype":"m.text"},"ts":1418414888000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm hoping to make some once I learn about a good tool since I keep messing up even the basics such as Window vs WindowProxy","msgtype":"m.text"},"ts":1418414909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I used http://gliffy.com/ for streams but their SVG support got worse recently so I had to re-code it all by hand","msgtype":"m.text"},"ts":1418414948000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, I guess disassociation is what's needed, but that breaks \"fast back\" (or whatever it's called) in browsers that support such a thing","msgtype":"m.text"},"ts":1418414993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They used data: URL images for arrows :(. Whereas you can just use <path marker-end> in SVG. https://github.com/whatwg/streams/blob/master/readable-stream.svg?short_path=48eff29#L56","msgtype":"m.text"},"ts":1418415006000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmmmmm","msgtype":"m.text"},"ts":1418415011000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: because so many languages already have support for domain.tld/?a=foo&a=bar&a=baz unless I am mistaken about that ticket.","msgtype":"m.text"},"ts":1418415012000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: 1:1 is about the URL object and the URLSearchParams object","msgtype":"m.text"},"ts":1418415042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't really understand fast back and how it impacts standards","msgtype":"m.text"},"ts":1418415043000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i guess html has a bfcache in the spec?","msgtype":"m.text"},"ts":1418415051000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"boogyman: not about how many parameters you can have","msgtype":"m.text"},"ts":1418415052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: yup","msgtype":"m.text"},"ts":1418415056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't really feel like reading up on all that today :P","msgtype":"m.text"},"ts":1418415067000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess you could restore the association, but that seems really sketchy","msgtype":"m.text"},"ts":1418415080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's all pretty explicable I think in JS terms. (With internal slots/weak maps)","msgtype":"m.text"},"ts":1418415098000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Would want to write it out to be sure but if that's what you mean by sketchy, seems ok","msgtype":"m.text"},"ts":1418415121000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: if the URL object is a hashmap, when would the various components ever not be 1:1 ?","msgtype":"m.text"},"ts":1418415185000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"TabAtkins: I'm still seeing the problem:","msgtype":"m.text"},"ts":1418416207000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"FATAL ERROR: Functions/methods must end with () in their linking text, got 'href'.","msgtype":"m.text"},"ts":1418416214000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah, it ain't fixed yet.","msgtype":"m.text"},"ts":1418416294000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Been traveling all morning","msgtype":"m.text"},"ts":1418416304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just fixed the part where it crashed if you forced it.","msgtype":"m.text"},"ts":1418416322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, nevermind.  I saw closed and thought it was fixed.  It was referenced by another issue, and that issue is closed.","msgtype":"m.text"},"ts":1418416368000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah, I can fix it now that the other issue is fixed.","msgtype":"m.text"},"ts":1418416425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not rushing you; I honestly misunderstood.","msgtype":"m.text"},"ts":1418416464000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Good, because I'm busy doing my nails right now and won't be able to type for an hour. ^_^","msgtype":"m.text"},"ts":1418416510000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Has anyone created a Firefox OpenSearch thing that restricts to html.spec.whatwg.org? I realized I'm appending \"site:html.spec.whatwg.org\" to many of my searches now","msgtype":"m.text"},"ts":1418416767000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess it doesn't look very hard https://developer.mozilla.org/en-US/Add-ons/Creating_OpenSearch_plugins_for_Firefox","msgtype":"m.text"},"ts":1418416802000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The relationship between URL and URLSearchParams is currently N:1","msgtype":"m.text"},"ts":1418421752000,"senderName":"annevk","senderId":"annevk@irc"}
]