[
{"content":{"body":"Philip`: how's this?:","msgtype":"m.text"},"ts":1201910400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  <p>Unless otherwise stated, any method call with a numeric argument","msgtype":"m.text"},"ts":1201910401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  whose value is an infinite or NaN value must be ignored. Similarly,","msgtype":"m.text"},"ts":1201910402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  any numeric property setter called with a value that is infinite or","msgtype":"m.text"},"ts":1201910403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  a NaN value must be ignored.</p>","msgtype":"m.text"},"ts":1201910404000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is that applying just to canvas, or the whole of HTML5?","msgtype":"m.text"},"ts":1201910405000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"canvas","msgtype":"m.text"},"ts":1201910460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2D context specifically","msgtype":"m.text"},"ts":1201910461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't see anything objectionable there","msgtype":"m.text"},"ts":1201910520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1201910521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aseem: It is something ruby specific so, given Sam wrote those tests and he has offered to port your code to ruby I wouldn't worry too much about it :)","msgtype":"m.text"},"ts":1201910522000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"(create{Linear,Radial}Gradient and isPointInPath and getImageData seem to be the places that would need some otherwise statements)","msgtype":"m.text"},"ts":1201910580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"=oh?","msgtype":"m.text"},"ts":1201910581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1201910640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because they have to return something of the correct type","msgtype":"m.text"},"ts":1201910641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1201910642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so they'd have to return null or false or whatever","msgtype":"m.text"},"ts":1201910643000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/or whatever//","msgtype":"m.text"},"ts":1201910644000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i can't find the toDataURL() + drawImage(data: ) issue in the issue tracker","msgtype":"m.text"},"ts":1201910700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That was resolved ages ago since the spec said it was permitted","msgtype":"m.text"},"ts":1201910820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but maybe things have changed since then)","msgtype":"m.text"},"ts":1201910821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it did?","msgtype":"m.text"},"ts":1201910880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-May/011308.html","msgtype":"m.text"},"ts":1201910940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i see, that's not what browsers do","msgtype":"m.text"},"ts":1201911000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Browsers are bad and wrong :-)","msgtype":"m.text"},"ts":1201911060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and doesn't cover <img src=evil.com> that redirects to a data: URI","msgtype":"m.text"},"ts":1201911061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as far as I can tell","msgtype":"m.text"},"ts":1201911062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the origin section is pretty vague about what \"image\" means in this case too","msgtype":"m.text"},"ts":1201911063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that presumably wouldn't be evil.com","msgtype":"m.text"},"ts":1201911120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would be victim.com","msgtype":"m.text"},"ts":1201911121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham:  so I guess I will leave them empty. thanks","msgtype":"m.text"},"ts":1201911180000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"Hixie, i guess so, yeah","msgtype":"m.text"},"ts":1201911240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aseem: Are you copying the whole file?","msgtype":"m.text"},"ts":1201911241000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1201911242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: yes that was my intent, and then I was planning to remove anything that did not need to be there","msgtype":"m.text"},"ts":1201911243000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"Hmm. You might want to think about adding the stripped behavior as an extra field in the current file. That way we're less likely o get tests for the two parts out of sync","msgtype":"m.text"},"ts":1201911360000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"I did think abou that. The reason I thought about forking the data file and the test too is because there are in line tests in the test_sanitizer.py. I could of course modify the addtest method to also accept a stripped output param, but was hesitant to change that","msgtype":"m.text"},"ts":1201911480000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"mainly because the change would require quite a few more things to be added to SanitizeTest class","msgtype":"m.text"},"ts":1201911540000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"that is something I might need to do even if I added the extra field in the data file also","msgtype":"m.text"},"ts":1201911600000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"right, checked in the changes","msgtype":"m.text"},"ts":1201911840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for infinities","msgtype":"m.text"},"ts":1201911841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this changes how transformations handle inf, btw","msgtype":"m.text"},"ts":1201911842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aseem: I suggest you make sanitize_html take a kwarg strip=False ","msgtype":"m.text"},"ts":1201911843000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Then modify buildTestSuite to add the tests from the same data file but your new field being read for the expected value","msgtype":"m.text"},"ts":1201911900000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Then modify all the inline tests to also have a strip=True version","msgtype":"m.text"},"ts":1201911901000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"(of course you need to actually implement strip=True in sanitize_html)","msgtype":"m.text"},"ts":1201911960000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Does that make sense?","msgtype":"m.text"},"ts":1201911961000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"sure... that was the original plan, I just balked at the amount of change that would require :)","msgtype":"m.text"},"ts":1201911962000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"and chose to take the lazier route","msgtype":"m.text"},"ts":1201912020000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"also I think there might be a problem with the toxml method for tokens.","msgtype":"m.text"},"ts":1201912080000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1201912081000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"ie the original _base.Node.toxml accepts and encoding= param which none of the base class implementations do which may cause it to barf ","msgtype":"m.text"},"ts":1201912082000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"so for createLinearyGradient i support we just sayt that the two points are subjected to the CTM and that's that","msgtype":"m.text"},"ts":1201912083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but for createRadialGradient...","msgtype":"m.text"},"ts":1201912084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry I meant derived class implementations","msgtype":"m.text"},"ts":1201912140000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"We ran into that recently and I had to go back to the example that I had originally posted on the mailing list because there I can pass in an encoding parameter","msgtype":"m.text"},"ts":1201912141000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"cheats his way out and moves on","msgtype":"m.emote"},"ts":1201912142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oops! I misspoke, its the Document.toxml() that has the encoding parameter, which is not available for others Node derived classes ","msgtype":"m.text"},"ts":1201912380000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"That makes more sense :)","msgtype":"m.text"},"ts":1201912500000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"I'm not quite sure we want to be using .toxml() at all at this point; the proper serializer seems like a better option","msgtype":"m.text"},"ts":1201912501000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"In any case I will try out the original approach (the one you outlined) and get it to work, before tackling the encoding related issue","msgtype":"m.text"},"ts":1201912560000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"which is what is in the example that I posted in the mailing list :)","msgtype":"m.text"},"ts":1201912561000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"wonders if people are using toxml","msgtype":"m.emote"},"ts":1201912620000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"the using html5lib wiki page provides the serializer oriented example, however the code in the test suite looks quite compact and attractive :)","msgtype":"m.text"},"ts":1201912680000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"one good thing about the toxml approach is that the element attribute ordering is not messed up in the output. I have not been able to figure out how to do that with the serializer (yet).","msgtype":"m.text"},"ts":1201912800000,"senderName":"aseem","senderId":"aseem@irc"},
{"content":{"body":"how can Referer: possibly be relative","msgtype":"m.text"},"ts":1201914960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand wha that would mean","msgtype":"m.text"},"ts":1201914961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh we can just make it \"#PING\"","msgtype":"m.text"},"ts":1201914962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since that's non-conforming today","msgtype":"m.text"},"ts":1201915020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1201915500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Prince really is pretty fantastic","msgtype":"m.text"},"ts":1201934160000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"is reminded by that to report a bug with his print styles in WebKit :P","msgtype":"m.emote"},"ts":1201942500000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie, data:,ping","msgtype":"m.text"},"ts":1201949640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"treats the above as application/octet+stream as it has no defined MIME type","msgtype":"m.emote"},"ts":1201949880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that'd be a bug","msgtype":"m.text"},"ts":1201950000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"needs http://bugs.gsnedders.com/","msgtype":"m.emote"},"ts":1201950001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: there are articles pending review in the blog queue","msgtype":"m.text"},"ts":1201950120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, if I declare a public entity, does it exist in a system entity?","msgtype":"m.text"},"ts":1201950180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: I think all three of those articles are spam (I only deleted the English one)","msgtype":"m.text"},"ts":1201952340000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"jgraham_: ok","msgtype":"m.text"},"ts":1201952341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the other two are spam as well.  I was just about to delete the english one too","msgtype":"m.text"},"ts":1201953060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"should we transition the WHATWG blog to HTML 5?","msgtype":"m.text"},"ts":1201953300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could do that.","msgtype":"m.text"},"ts":1201953660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"we had done that once before","msgtype":"m.text"},"ts":1201953720000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"actually, it could be good to develop an HTML5 WordPress template","msgtype":"m.text"},"ts":1201953840000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1201954200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if you allow DOCTYPEs in XML5, can you _please_ allow parsed entities to have them","msgtype":"m.text"},"ts":1201961760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-html/2008Feb/0021.html","msgtype":"m.text"},"ts":1201964400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1201964401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The HTML-to-plain-text email conversion there is really broken","msgtype":"m.text"},"ts":1201964580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, that's how i see it too","msgtype":"m.text"},"ts":1201964640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The plain-text <HYPERLINK \"http://www.htmlhelp.com/reference/html40/tables/td.html\"TD nowrap> is meant to be <TD nowrap> where the \"TD\" is a link","msgtype":"m.text"},"ts":1201964760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I don't know what validator it is that links to htmlhelp.com...)","msgtype":"m.text"},"ts":1201964880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://htmlhelp.com/tools/validator/ ?","msgtype":"m.text"},"ts":1201964940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, could be","msgtype":"m.text"},"ts":1201964941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"people really should stop appealing to webarch to defend their arguments","msgtype":"m.text"},"ts":1201983060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a little like referring to a religious text","msgtype":"m.text"},"ts":1201983120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it only works when the other person is converted","msgtype":"m.text"},"ts":1201983121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So Hixie, did zcorpan mention the issue with acid3 test 48?","msgtype":"m.text"},"ts":1201983240000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i don't think so","msgtype":"m.text"},"ts":1201983420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the problem?","msgtype":"m.text"},"ts":1201983480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tries not to wonder what happens when you use arcTo to draw an infinitely long line while the CTM has a scale factor of zero","msgtype":"m.emote"},"ts":1201983481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If the iframe onload to remove the class fails, the test will pass automatically","msgtype":"m.text"},"ts":1201983482000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: how can you draw an infinitely long line?","msgtype":"m.text"},"ts":1201983483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: By using arcTo so that it draws a line to (x_{inf}, y_{inf})","msgtype":"m.text"},"ts":1201983540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: calls to arcTo() with Infinity as an argument would get ignored per the latest tet","msgtype":"m.text"},"ts":1201983541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dashiva: hm","msgtype":"m.text"},"ts":1201983542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: arcTo with finite arguments is explicitly defined to draw an infinite line in certain cases","msgtype":"m.text"},"ts":1201983600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: oh","msgtype":"m.text"},"ts":1201983601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Anyway, I'd be happiest to ignore it and have it implicitly undefined behaviour because it's not really going to matter for real-world interoperability","msgtype":"m.text"},"ts":1201983602000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: ignore the infinite cases or ignore the CTM 0 case?","msgtype":"m.text"},"ts":1201983660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The cases with both infinite lines and CTM 0","msgtype":"m.text"},"ts":1201983720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Each by itself is alright and is useful to define)","msgtype":"m.text"},"ts":1201983780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1201983781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"send mail :-)","msgtype":"m.text"},"ts":1201983782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dashiva: any suggestions?","msgtype":"m.text"},"ts":1201983783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, the error I'm seeing is gEBI failing, which could be solved by using a closure instead.","msgtype":"m.text"},"ts":1201983900000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I thought there was a test for gEBI updating, but I can't seem to find it.","msgtype":"m.text"},"ts":1201983960000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Hixie: By \"ignore it\", I mean \"not send mail\", because sending mail would be the opposite of ignoring the problem, and the mail would just suggest doing nothing at all and ignoring the problem since it's a worthless edge case :-)","msgtype":"m.text"},"ts":1201984020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: ok, it'll make test 80 fail if it doesn't work now","msgtype":"m.text"},"ts":1201984560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: oh, i just meant we should make the spec say to draw nothing in that case","msgtype":"m.text"},"ts":1201984561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dashiva: what browser was this for?","msgtype":"m.text"},"ts":1201984620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Opera","msgtype":"m.text"},"ts":1201984621000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It does pass the actual thing test 48 is for, funny enough","msgtype":"m.text"},"ts":1201984680000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yep, opera now says \"linktest didn't fire onload\"","msgtype":"m.text"},"ts":1201984681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, what happens is that onload does fire, but the onload handler errors because it can't find the linktest element","msgtype":"m.text"},"ts":1201984740000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Hixie: I think that would be unpleasantly complex (hence not worthwhile) to define, since it depends on the direction of the infinite line and whether the CTM is zero in that direction (e.g. scale(0,1) would cause problems for infinite horizontal lines, but would be perfectly sensible for infinite vertical lines)","msgtype":"m.text"},"ts":1201984741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But I've failed at ignoring the problem since I've started discussing here, so I'll just send mail instead :-)","msgtype":"m.text"},"ts":1201984800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe it could set a variable in the onload, then attempt to remove the class attr","msgtype":"m.text"},"ts":1201984801000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That way you could see if onload never fired, or just failed to succeed","msgtype":"m.text"},"ts":1201984802000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: i'll leave that to the people debugging the test","msgtype":"m.text"},"ts":1201985040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, where is webarch used?","msgtype":"m.text"},"ts":1201985041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the religious acts of the ivory tower's inhabitants, i presume","msgtype":"m.text"},"ts":1201985160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd like to thank you all, especially hsivonen and Philip`, for moving the focus of the discussion on public-html to studying actual data","msgtype":"m.text"},"ts":1201985340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is so refreshing to see \"expert opinions\" be replaced by actual data","msgtype":"m.text"},"ts":1201985341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Aha! I don't actually need to send mail about the infinite arcTo thing, since a zero scale will make points coincident in the only case that would have been a problem, and so it's no longer an issue, so please feel free to ignore me)","msgtype":"m.text"},"ts":1201985460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"works for me!","msgtype":"m.text"},"ts":1201985580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does chris mean when he says:","msgtype":"m.text"},"ts":1201985581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The rounding arc should be chosen ","msgtype":"m.text"},"ts":1201985582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that it is not contained in the convex hull of the stroke path segments ","msgtype":"m.text"},"ts":1201985583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"terminated at the points where the arc begins.","msgtype":"m.text"},"ts":1201985584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"About the \"it used to say \"another\" point\": it did say that, but I think it's acceptable to think of a point P and 'another' point Q regardless of whether P=Q, so it's better to be explicit :-)","msgtype":"m.text"},"ts":1201985640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: I'm not exactly sure about the \"stroke path segments terminated at the points where the arc begins\", but the idea sounds correct","msgtype":"m.text"},"ts":1201985760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If you start with just the end edges of the stroke that are perpendicular to their lines, then the convex hull will be the smallest triangle or quadrilateral that surrounds those edges","msgtype":"m.text"},"ts":1201985820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and then the arc will be not inside that convex hull","msgtype":"m.text"},"ts":1201985880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, but actually that's not right","msgtype":"m.text"},"ts":1201985881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"since both possible arcs would be outside that shape","msgtype":"m.text"},"ts":1201985940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"tries to reply to that email","msgtype":"m.emote"},"ts":1201986060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, actually, I think it is right, as long as you include a non-zero part of the stroke when calculating the convex hull (which is always possible since lines never have zero length)","msgtype":"m.text"},"ts":1201986480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"throws away his ASCII art pictures of circles :-(","msgtype":"m.emote"},"ts":1201986481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i have no idea what that e-mail means","msgtype":"m.text"},"ts":1201988460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't know how to change the spec to address that e-mail","msgtype":"m.text"},"ts":1201988461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm. I'm not getting mail from W3C lists.","msgtype":"m.text"},"ts":1201988700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"are others getting W3C list mail normally?","msgtype":"m.text"},"ts":1201988760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes","msgtype":"m.text"},"ts":1201988880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: I'm getting public-html ok","msgtype":"m.text"},"ts":1201988881000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"ok. thanks","msgtype":"m.text"},"ts":1201988882000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: including from you :-)","msgtype":"m.text"},"ts":1201988883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw, for the spaces-in-URIs thing... do we really want to define URI5?","msgtype":"m.text"},"ts":1201988940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or IRI5 i guess","msgtype":"m.text"},"ts":1201988941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we could fix other problems at the same time, like the encoding issue","msgtype":"m.text"},"ts":1201988942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'd just do what XML does for system identifiers","msgtype":"m.text"},"ts":1201988943000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't know, but I think it is worth spending a thought or two on","msgtype":"m.text"},"ts":1201989000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(non-fatal error handling in XML!)","msgtype":"m.text"},"ts":1201989001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what's that?","msgtype":"m.text"},"ts":1201989002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: well we're talking about making this a non-error","msgtype":"m.text"},"ts":1201989003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1201989004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'd keep it as an error","msgtype":"m.text"},"ts":1201989005000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: the IRI lib I'm using can even be configured to check for XML system ID conformance separately from IRI conformance!","msgtype":"m.text"},"ts":1201989006000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if the \"All software expands until it can read mail\" thing will apply to html5, so eventually we'll end up doing IMAP5","msgtype":"m.emote"},"ts":1201989007000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"jgraham: We already have sockets, what more do we need? :)","msgtype":"m.text"},"ts":1201989060000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"gsnedders: Is the XML thing really error handling or just a processing step?","msgtype":"m.text"},"ts":1201989061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"woah.","msgtype":"m.text"},"ts":1201989062000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I misremembered what XML said.","msgtype":"m.text"},"ts":1201989063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"System identifiers (and other XML strings meant to be used as URI references) may contain characters that, according to [IETF RFC 3986], must be escaped before a URI can be used to retrieve the referenced resource. The characters to be escaped are the control characters #x0 to #x1F and #x7F (most of which cannot appear in XML), space #x20, the delimiters '<' #x3C, '>' #x3E and '\"' #x22, the unwise characters '{' #x7B, ","msgtype":"m.text"},"ts":1201989120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That means that XML System IDs can contain spaces!","msgtype":"m.text"},"ts":1201989121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: just a processing step, looking it up","msgtype":"m.text"},"ts":1201989180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/TR/xml/#dt-sysid","msgtype":"m.text"},"ts":1201989240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"fwiw, Validator.nu converts the IRIs entered in the UI to URIs with the lib in the IRI mode but converts XML system ids to URIs in the XML system ID mode.","msgtype":"m.text"},"ts":1201989360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"craziness. the lib supports 6 different conformance modes for URI-like strings:","msgtype":"m.text"},"ts":1201989480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"URI","msgtype":"m.text"},"ts":1201989481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"IRI","msgtype":"m.text"},"ts":1201989482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"RDF","msgtype":"m.text"},"ts":1201989483000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"XML Schema","msgtype":"m.text"},"ts":1201989484000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"XML system ID","msgtype":"m.text"},"ts":1201989485000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"XLink","msgtype":"m.text"},"ts":1201989486000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Standards Suck.","msgtype":"m.text"},"ts":1201989540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Standards Suck 5 anyone?","msgtype":"m.text"},"ts":1201989541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: Kristof's email? For his first paragraph, I'm guessing he was not disagreeing with what I said, so there's nothing to do. For the second paragraph, you could change the spec's definition of 'round' to require the drawn arc to be the one satisfying the condition he suggested","msgtype":"m.text"},"ts":1201990620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though I currently think the condition he suggested is not correct)","msgtype":"m.text"},"ts":1201990680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what validator back end is http://inursite.com/ running?","msgtype":"m.text"},"ts":1201990920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: It appears to be using the w3c validator","msgtype":"m.text"},"ts":1201991220000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"hsivonen: On the results page its \"live validation\" links to validator.w3.org","msgtype":"m.text"},"ts":1201991221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and it gives exactly the same validation messages as validator.w3.org)","msgtype":"m.text"},"ts":1201991280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham_, Philip`: thanks","msgtype":"m.text"},"ts":1201991281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: what is wrong with the current text? (or did you send mail already :-) )","msgtype":"m.text"},"ts":1201992840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: About round, I did send mail (as a direct reply to you in \"Canvas line styles comments\"), saying \"there's two possible arcs connecting those two corners (one clockwise, one anticlockwise), so it should specify which one is meant.\"","msgtype":"m.text"},"ts":1201993440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1201994640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1201994641000,"senderName":"Hixie","senderId":"Hixie@irc"}
]