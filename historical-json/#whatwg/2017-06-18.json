[
{"content":{"body":"oh, here's a question... are validation errors ever used by anybody?","msgtype":"m.text"},"ts":1497754457000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"by which I mean, do they have an effect on web compatibility or anything of that nature?","msgtype":"m.text"},"ts":1497754483000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I have a question about WebIDL and constructors... does an interface not have a constructor unless you explicitly say it does? how do you initialize an interface without a constructor?","msgtype":"m.text"},"ts":1497756552000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"is it a matter of `Foo()` vs. `new Foo()`?","msgtype":"m.text"},"ts":1497757247000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I see the dependence on ECMAScript gets stronger the deeper you go","msgtype":"m.text"},"ts":1497757282000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Sorry for the silly question but what's the official opinion about why WHATWG calls it \"URL\" and not URI?","msgtype":"m.text"},"ts":1497781713000,"senderName":"profsimm","senderId":"profsimm@irc"},
{"content":{"body":"GPHemsley: interfaces don't have a constructor unless you specify one using the constructor extended attribute","msgtype":"m.text"},"ts":1497782596000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"GPHemsley: so calling both Foo() and new Foo() will throw a TypeError in that case","msgtype":"m.text"},"ts":1497782632000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"GPHemsley: see step 1.1 of  the algorithm described in https://heycam.github.io/webidl/#interface-object","msgtype":"m.text"},"ts":1497782765000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"profsimm: The distinction between URL/URI/IRI is not useful in practice and is confusing, and URL is the term that almost everyone in the world uses so it seemed best to standardise on that one","msgtype":"m.text"},"ts":1497782784000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: thanks","msgtype":"m.text"},"ts":1497782835000,"senderName":"profsimm","senderId":"profsimm@irc"},
{"content":{"body":"profsimm: See e.g. https://url.spec.whatwg.org/#goals","msgtype":"m.text"},"ts":1497782847000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"profsimm: (Also it's what I remember from discussions on the mailing lists like a decade ago)","msgtype":"m.text"},"ts":1497782872000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"GPHemsley: Note that as per step 1.2 of the same algorithm, Foo() (without the new constructor) throws in all cases.","msgtype":"m.text"},"ts":1497782880000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"GPHemsley: that is, even when a Constructor extended attribute is present.","msgtype":"m.text"},"ts":1497782954000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Philip`: is WHATWG the HTML spec which browsers follow most closely?","msgtype":"m.text"},"ts":1497784490000,"senderName":"profsimm","senderId":"profsimm@irc"},
{"content":{"body":"Philip`: compared to W3C","msgtype":"m.text"},"ts":1497784495000,"senderName":"profsimm","senderId":"profsimm@irc"},
{"content":{"body":"profsimm: yes","msgtype":"m.text"},"ts":1497785160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: aren't browser makers involved in W3C as well?","msgtype":"m.text"},"ts":1497785206000,"senderName":"profsimm","senderId":"profsimm@irc"},
{"content":{"body":"profsimm: not with the HTML specification; it was merged into a larger WG to try and get them involved they haven't","msgtype":"m.text"},"ts":1497785321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tobie: Thanks for clarifying. :)","msgtype":"m.text"},"ts":1497798438000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: np.","msgtype":"m.text"},"ts":1497799058000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Do you know where the semantics of getters and setters are defined? Is that in WebIDL or ECMAScript or somewhere else?","msgtype":"m.text"},"ts":1497799325000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"DOM, maybe?","msgtype":"m.text"},"ts":1497799341000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"oh wait, I think I found them","msgtype":"m.text"},"ts":1497799376000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: WebIDL and ES","msgtype":"m.text"},"ts":1497804686000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"GPHemsley: depending on what getters and setters you're talking about","msgtype":"m.text"},"ts":1497804696000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Ultimately, I just wanted to know if setters return the new value of the attribute, and it seems the answer is yes.","msgtype":"m.text"},"ts":1497817878000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: that would be the normal ES behaviour, and I don't think it can be avoided","msgtype":"m.text"},"ts":1497818255000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I wasn't trying to avoid it, I was trying to replicate it.","msgtype":"m.text"},"ts":1497818666000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I just mean I think it falls from the definition of the = operator in ES","msgtype":"m.text"},"ts":1497818774000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well I'm not implementing ES, and some things take ES behavior for granted","msgtype":"m.text"},"ts":1497818798000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so I was just trying to approximate","msgtype":"m.text"},"ts":1497818807000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"}
]