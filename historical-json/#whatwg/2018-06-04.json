[
{"content":{"body":"Domenic++","msgtype":"m.text"},"ts":1528076547000,"senderName":"GPH-Hickory","senderId":"GPH-Hickory@irc"},
{"content":{"body":"FTR, I just touched a bunch of old wpt tickets about URL","msgtype":"m.text"},"ts":1528076664000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"there aren't too many that are still open, which is cool","msgtype":"m.text"},"ts":1528076687000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"https://github.com/web-platform-tests/wpt/labels/url","msgtype":"m.text"},"ts":1528076694000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Not bad","msgtype":"m.text"},"ts":1528076770000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/web-platform-tests/wpt/issues/11218 is kind of depressing","msgtype":"m.text"},"ts":1528076908000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, there is a real problem there. PSL maintainers saying it need not be relied upon and nobody else heeding their advice.","msgtype":"m.text"},"ts":1528085592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ryan's going to be in Zurich next week. I might be there as well. Maybe we can get coffee and argue about the PSL a bit.","msgtype":"m.text"},"ts":1528098720000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: that'd bad timing, it's Mozilla week in SF","msgtype":"m.text"},"ts":1528098974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh. :(","msgtype":"m.text"},"ts":1528098987000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Mozilla week somehow didn't make it onto my calendar. :)","msgtype":"m.text"},"ts":1528098995000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: would have loved to though, it's a rather intriguing mismatch between the maintainers and how it's used","msgtype":"m.text"},"ts":1528099010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think he's in London this week for CA/B.","msgtype":"m.text"},"ts":1528099065000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Maybe we can set up a call or something. I don't really understand his position, though I agree with what I imagine it'","msgtype":"m.text"},"ts":1528099084000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"its philosophical underpinnings might be.","msgtype":"m.text"},"ts":1528099093000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: sounds good to me, available 9-5 daily and 7-8 if we cannot make it work otherwise","msgtype":"m.text"},"ts":1528099334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll ping Ryan and see if he can carve out some time.","msgtype":"m.text"},"ts":1528101602000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: should we wait for this meeting before proceeding with the URL PR?","msgtype":"m.text"},"ts":1528102481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Meh. I think we need to define the terms somewhere. My impression is that Ryan's concerns are broader than this PR.","msgtype":"m.text"},"ts":1528102576000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Fair enough, I'll give everyone until Wednesday just in case","msgtype":"m.text"},"ts":1528102601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That seems totally reasonable.","msgtype":"m.text"},"ts":1528102607000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: On background fetch's 'failed' event, I'm looking to communicate the reason for the failure (as long as security allows). Is there any prior art here? Would an enum 'reason' work? Creating an 'error' property would involve defining new error types, which seems bad.","msgtype":"m.text"},"ts":1528117082000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it seems like a bit of a layering violation if background fetch gets to expose that, but not fetch","msgtype":"m.text"},"ts":1528117141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: unless it's network error vs some HTTP layer errors only","msgtype":"m.text"},"ts":1528117160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it wouldn't be anything new, but it'd distinguish between a quota error, a non-ok status code on one of the fetches, a network error...","msgtype":"m.text"},"ts":1528117281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Another reason could be \"underlying resource changed\" if the etags change between partial responses","msgtype":"m.text"},"ts":1528117348000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: okay, an enum seems fine I suppose, if that works for developers","msgtype":"m.text"},"ts":1528117432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: does background fetch enforce CORS?","msgtype":"m.text"},"ts":1528117458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1528117464000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1528117474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one less vector to worry about","msgtype":"m.text"},"ts":1528117486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1528117489000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: could you expose an exception type like NetworkError or QuotaExceededError on a property?","msgtype":"m.text"},"ts":1528117895000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or TypeError with a good message, etc","msgtype":"m.text"},"ts":1528117909000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'd probably have to create a load of new error types to allow code to test the difference. That feels worse than an enum, but I can't quite put my finger on why.","msgtype":"m.text"},"ts":1528117983000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the one advantage of the error exception object types is that they allow you to provide a decent message... at least for TypeError","msgtype":"m.text"},"ts":1528118037000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I guess it depends on if there is anything useful the site can do with the error other than just logging it","msgtype":"m.text"},"ts":1528118088000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: the problem with that is that I think exception type messages are localized","msgtype":"m.text"},"ts":1528118134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: ^","msgtype":"m.text"},"ts":1528118137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, I'm going to collect all the possible failures we have so far, and see if the right answer becomes clearer","msgtype":"m.text"},"ts":1528118142000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: so if you want to allow branching, what JakeA suggests seems better","msgtype":"m.text"},"ts":1528118147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I'd have to create new error types if I was to use errors","msgtype":"m.text"},"ts":1528118159000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I only ask because in firefox we have an old enum-based system... and its a constant annoyance to me because I have to go plumb extra stuff to get good TypeError with messages so devs can actually tell what happened... enums are never fine-grained enough","msgtype":"m.text"},"ts":1528118173000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1528118179000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: make sure to test that not-ok is only exposed after CORS succeeds","msgtype":"m.text"},"ts":1528118192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and if you want granular non-ok, you'll either need two fields or a dictionary of sorts, since ~400 enum values seems  like too much","msgtype":"m.text"},"ts":1528118237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if the error is related to a particular fetch, we can point to the \"record\" that generated the failure. But yeah, CORS, SSL, MIX related failures will just be \"network error\"","msgtype":"m.text"},"ts":1528118340000,"senderName":"JakeA","senderId":"JakeA@irc"}
]