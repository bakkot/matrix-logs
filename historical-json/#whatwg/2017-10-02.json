[
{"content":{"body":"JakeA: was there an issue or PR associated with the “Reject on cache add/addAll/put if the response has Vary: *” https://github.com/w3c/ServiceWorker/commit/8c3dbf1","msgtype":"m.text"},"ts":1506928811000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nm I found https://github.com/w3c/ServiceWorker/issues/656","msgtype":"m.text"},"ts":1506928907000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst_sheriff: why samesite cookies? I thought you wanted \"site\" reserved for registrable domain type stuff?","msgtype":"m.text"},"ts":1506933799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: MikeSmith: I filed https://github.com/whatwg/infra/issues/158 to keep track of this","msgtype":"m.text"},"ts":1506934149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: They key on registrable domain.","msgtype":"m.text"},"ts":1506934539000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"`accounts.google.com` => `docs.google.com`","msgtype":"m.text"},"ts":1506934561000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Because cookies are nuts. *shrug*","msgtype":"m.text"},"ts":1506934570000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: wait so how are they different from normal cookies?","msgtype":"m.text"},"ts":1506934931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: ooh I see","msgtype":"m.text"},"ts":1506935029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: the original \"first party\" name was more clear to me","msgtype":"m.text"},"ts":1506935052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It was originally \"first-party\". Folks objected.","msgtype":"m.text"},"ts":1506935097000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Well. One folk.","msgtype":"m.text"},"ts":1506935108000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: was there also some same-origin cookie effort?","msgtype":"m.text"},"ts":1506935137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: I guess I got this confused with that","msgtype":"m.text"},"ts":1506935143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There was. We ended up punting on it in favor of the `__Host-` prefix, which was trivial to implement, and gets us most of the way there (still doesn't deal with ports).","msgtype":"m.text"},"ts":1506935181000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"aah okay, thanks for clearing up my confusion","msgtype":"m.text"},"ts":1506935235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: jochen__ has an idea for ports, but you know that","msgtype":"m.text"},"ts":1506935252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__ has lots of ideas!","msgtype":"m.text"},"ts":1506935268000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"I thought his ports idea was for `document.domain`?","msgtype":"m.text"},"ts":1506935275000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"I happen to like this one","msgtype":"m.text"},"ts":1506935280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: I think he wanted to extend it to all things that do document.domain-like things","msgtype":"m.text"},"ts":1506935297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So also cookies and webauthn","msgtype":"m.text"},"ts":1506935310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm. I'm staring at the back of jochen__'s head through a door, but I think I'll have to wait until he walks out to see what his idea for cookies is.","msgtype":"m.text"},"ts":1506935548000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"(Is it that we don't store cookies on weird ports?)","msgtype":"m.text"},"ts":1506935559000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Whoa, unicode.org supports HTTPS now?! Nice find MikeSmith!","msgtype":"m.text"},"ts":1506935858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: if you got them over port 80 or 443, they're only going out to port 80 or 443","msgtype":"m.text"},"ts":1506935889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: if you got them from a weird port, they'll continue to go to all ports","msgtype":"m.text"},"ts":1506935899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: iirc","msgtype":"m.text"},"ts":1506935914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I was surprised by that too. Found it just be going through all the References one-by-one to see which might need to be updated","msgtype":"m.text"},"ts":1506935940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That must have been a very recent change","msgtype":"m.text"},"ts":1506935973000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, weeks or a few months I guess","msgtype":"m.text"},"ts":1506935995000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I ended up looking through the References only because of when I discovered last week that we didn’t have the Secure Contexts spec in there","msgtype":"m.text"},"ts":1506936058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Every now and then I go through http:// links and it's always unicode.org that sticks out","msgtype":"m.text"},"ts":1506936059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But no longer!","msgtype":"m.text"},"ts":1506936062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh :)","msgtype":"m.text"},"ts":1506936070000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Even iso.org","msgtype":"m.text"},"ts":1506936085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well you have my anxiety to thank for it :)","msgtype":"m.text"},"ts":1506936096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"after noticing that spec missing from the References, I got bothered about what else we might need to update there","msgtype":"m.text"},"ts":1506936137000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, started pulling that thread","msgtype":"m.text"},"ts":1506936152000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then, N different PRs later I think I’m done for now","msgtype":"m.text"},"ts":1506936174000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I still worry there’s something I overlooked","msgtype":"m.text"},"ts":1506936194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn’t really did it all very systematically","msgtype":"m.text"},"ts":1506936204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I guess we'd need to deal with `example.com:443` and `example.com:81` both trying to store a session ID or something? Either explicitly storing the port or sharding the cookie jar or something?","msgtype":"m.text"},"ts":1506936230000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Progress Not Perfection","msgtype":"m.text"},"ts":1506936233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's not crazy! I imagine 99% of navigations are to standard ports.","msgtype":"m.text"},"ts":1506936255000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: I don't recall what the plan was when :81 adds something, if that's only for non-standard ports or if there's some kind of way that can also be used on :443 and :80","msgtype":"m.text"},"ts":1506936349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just mean that we'd need to spec sane behavior for the case when a standard port sets a cookie, and then a non-standard port sets the same cookie.","msgtype":"m.text"},"ts":1506936406000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Whatever the behavior, we'd need to store some metadata about the way the cookie was set, or put it into a separate jar based upon that context.","msgtype":"m.text"},"ts":1506936445000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"So we'd probably end up doing the simple thing and adding an int to the cookie database.","msgtype":"m.text"},"ts":1506936462000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Which is probably fine.","msgtype":"m.text"},"ts":1506936466000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: ah yeah, I suspect the idea was to just say default-port yes/no and take that into account when making requests","msgtype":"m.text"},"ts":1506936478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: that was also the plan for document.domain, the addition of a boolean","msgtype":"m.text"},"ts":1506936528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought the plan for `document.domain` was to just stop ignoring the port when doing comparisons.","msgtype":"m.text"},"ts":1506936587000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/2025 is his metric for the `document.domain` bit. Not sure if it's hit stable yet...","msgtype":"m.text"},"ts":1506936678000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: anyway, addition of boolean or int","msgtype":"m.text"},"ts":1506936683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: best to ask jochen__ for specifics, maybe it changed around","msgtype":"m.text"},"ts":1506936697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure. Boils down to the same thing. Being explicit about it is probably for the best.","msgtype":"m.text"},"ts":1506936704000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Not sure how much it really helps for cookies, given that they span subdomains, not just ports, but `document.domain` and `WebAuthn` seem like good targets.","msgtype":"m.text"},"ts":1506936750000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"document.domain and WebAuthn also span subdomains, that's the whole point","msgtype":"m.text"},"ts":1506936780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(https://tools.ietf.org/html/draft-west-origin-cookies-01 was the origin cookie proposal, btw. Reading it again, it's pretty ugly.)","msgtype":"m.text"},"ts":1506936787000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"That's why they're all in the same boat","msgtype":"m.text"},"ts":1506936789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fair.","msgtype":"m.text"},"ts":1506936799000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"That's also why I pushed jochen__ to not just restrict document.domain, since we'd still have the leak with webauthn/cookies","msgtype":"m.text"},"ts":1506936831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Presumably fixing the algorithm in HTML would also fix WebAuthn.","msgtype":"m.text"},"ts":1506937424000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: can we make cookies use that algorithm too?","msgtype":"m.text"},"ts":1506937741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: would be nice if they all used a shared primitive","msgtype":"m.text"},"ts":1506937761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AFAIK, they all basically rely on \"registrable domain\" as the relevant primitive. `document.domain` additionally relies on the `domain` attribute of `Origin`.","msgtype":"m.text"},"ts":1506937830000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"But the comparison for each should be the same.","msgtype":"m.text"},"ts":1506937843000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"mkwst_sheriff: I meant reuse of \"is a registrable domain suffix of or is equal to\"","msgtype":"m.text"},"ts":1506937887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cookies rely on \"domain-match\" (https://tools.ietf.org/html/rfc6265#section-5.1.3).","msgtype":"m.text"},"ts":1506937956000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"And on not setting cookies for public suffixes (Step 5 of https://tools.ietf.org/html/rfc6265#section-5.3)","msgtype":"m.text"},"ts":1506937997000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Basically the same thing.","msgtype":"m.text"},"ts":1506938011000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"Sure, I just figured it would be nicer if they all actually used the same thing","msgtype":"m.text"},"ts":1506938052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it doesn't matter much, as long as we don't forget they're all doing the same thing, so any updates should affect all three","msgtype":"m.text"},"ts":1506938072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would be nicer if they all actually used the same thing.","msgtype":"m.text"},"ts":1506938237000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"And since I'm going to have to argue with folks about referencing Fetch and HTML from an RFC anyway, might as well argue with them even more, I guess.","msgtype":"m.text"},"ts":1506938270000,"senderName":"mkwst_sheriff","senderId":"mkwst_sheriff@irc"},
{"content":{"body":"annevk: in https://github.com/whatwg/infra/issues/158 not sure what you mean by “it was suggested to require things from documents instead, but that doesn't quite work for APIs”","msgtype":"m.text"},"ts":1506938397000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the code that uses an API is (logically) part of the document","msgtype":"m.text"},"ts":1506938425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so we can say, “Documents must not use this API in way that ...” or whatever","msgtype":"m.text"},"ts":1506938458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess if everything is a document that might work","msgtype":"m.text"},"ts":1506938629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: my bad in that case","msgtype":"m.text"},"ts":1506938636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst_sheriff: enjoy","msgtype":"m.text"},"ts":1506938645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The spec for <video> says that when there is nothing to show, the <video> elements represents transparent black with no intrinsic dimensions,","msgtype":"m.text"},"ts":1506940415000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"but if I load data:text/html,<video%20style=\"border:1px%20black%20solid\"> in Safari, Chrome or Firefox, it draws a 300x150 box.","msgtype":"m.text"},"ts":1506940430000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Should the spec change?","msgtype":"m.text"},"ts":1506940433000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: maybe","msgtype":"m.text"},"ts":1506940597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Should I just file an issue?","msgtype":"m.text"},"ts":1506940613000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, though I'm guessing it's not technically an issue since that's just what it represents","msgtype":"m.text"},"ts":1506940684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What do you mean?","msgtype":"m.text"},"ts":1506940694000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it still needs to be rendered per the replaced element rules","msgtype":"m.text"},"ts":1506940695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what that means.","msgtype":"m.text"},"ts":1506940704000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"what's up with ports & cookies?","msgtype":"m.text"},"ts":1506940730000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: 'The video element represents its poster frame, if any, or else transparent black with no intrinsic dimensions.' is the only thing that specifies that <video> is supposed to not render anything by default, right?","msgtype":"m.text"},"ts":1506940774000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jochen__: mkwst_sheriff and I were wondering how the \"new model\" would work with a cookie set on :81 vs one set on :443","msgtype":"m.text"},"ts":1506940777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: so wait if it doesn't have intrinsic dimensions isn't the fallback defined by CSS 300x150?","msgtype":"m.text"},"ts":1506940800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where?","msgtype":"m.text"},"ts":1506940811000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it still seems a little weird that we don't define this in the rendering section though","msgtype":"m.text"},"ts":1506940821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've never heard about such a fallback, so if you could point it out to me that would be well appreciated.","msgtype":"m.text"},"ts":1506940844000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://www.w3.org/TR/CSS2/visudet.html#inline-replaced-width","msgtype":"m.text"},"ts":1506940901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks!","msgtype":"m.text"},"ts":1506940932000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: But why do these rules apply?","msgtype":"m.text"},"ts":1506941310000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I'd basically introduce another bit to origin that says \"default port\", so http://example.com/ would be (http, example.com, 80, true) and https://test.com:31337 would be (https, test.com, 31337, false)","msgtype":"m.text"},"ts":1506941312000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"nox: you agree it's a replaced element?","msgtype":"m.text"},"ts":1506941333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Maybe?","msgtype":"m.text"},"ts":1506941339000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and the \"is default port\" bit has to match in any case","msgtype":"m.text"},"ts":1506941340000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Where is that stated?","msgtype":"m.text"},"ts":1506941342000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: in the rendering section","msgtype":"m.text"},"ts":1506941347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where is that in the spec?","msgtype":"m.text"},"ts":1506941378000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jochen__: okay, mkwst_sheriff thought you wanted to to store the port","msgtype":"m.text"},"ts":1506941379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can't find \"replaced\" in the spec of <media>.","msgtype":"m.text"},"ts":1506941392000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: for cookies?","msgtype":"m.text"},"ts":1506941400000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"(Nor <video>..)","msgtype":"m.text"},"ts":1506941403000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://html.spec.whatwg.org/multipage/rendering.html#embedded-content-rendering-rules","msgtype":"m.text"},"ts":1506941408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'd basically end up with two cookie jars, one for default_port = true and one for false","msgtype":"m.text"},"ts":1506941416000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: Thanks.","msgtype":"m.text"},"ts":1506941428000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jochen__: yeah, he thought the extra field would be int, not boolean","msgtype":"m.text"},"ts":1506941435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: anyway, looking forward to seeing that progress, it's a nice additional restriction I think","msgtype":"m.text"},"ts":1506941469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is there any more up-to-date spec than CSS2.1 that says the same thing?","msgtype":"m.text"},"ts":1506941514000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: there wasn't a couple years ago","msgtype":"m.text"},"ts":1506941689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1506941703000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: maybe half a decade, it's been a while I suppose","msgtype":"m.text"},"ts":1506941706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Any wording for the fact that <video width=500> will not keep 150 for the height, and will instead preserve ratio?","msgtype":"m.text"},"ts":1506942510000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: \"page\" isn't any specified thing, right?","msgtype":"m.text"},"ts":1506942622000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"like, not top level document + all the documents in iframes underneath, or anything like that","msgtype":"m.text"},"ts":1506942646000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nox: yes, somewhere","msgtype":"m.text"},"ts":1506943320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: https://drafts.csswg.org/css2/visudet.html#inline-replaced-width","msgtype":"m.text"},"ts":1506943517000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: uh, https://drafts.csswg.org/css2/visudet.html#inline-replaced-height","msgtype":"m.text"},"ts":1506943551000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: \"has a height not greater than 150px\" wat","msgtype":"m.text"},"ts":1506943589000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: hey, be glad the 300x150 default finally got spec'd","msgtype":"m.text"},"ts":1506943636000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1506943640000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: But the words \"has a height not greater than 150px\" are wrong right?","msgtype":"m.text"},"ts":1506943649000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: but yeah, \"Otherwise, if 'height' has a computed value of 'auto', and the element has an intrinsic ratio then the used value of 'height' is:","msgtype":"m.text"},"ts":1506943653000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: is the case <video width=500> is in","msgtype":"m.text"},"ts":1506943660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: (assuming the video format has an intrinsic ratio, which all that I'm aware of do)","msgtype":"m.text"},"ts":1506943678000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I literally meant <video width=500>.","msgtype":"m.text"},"ts":1506943694000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No src, no source child, nothing.","msgtype":"m.text"},"ts":1506943704000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: oh, then yeah it's the 150px case","msgtype":"m.text"},"ts":1506943739000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: and yeah, that's a bit awkward to read","msgtype":"m.text"},"ts":1506943748000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: So the spec is wrong?","msgtype":"m.text"},"ts":1506943748000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I haven't read what's in the HTML spec about this :)","msgtype":"m.text"},"ts":1506943774000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I mean,","msgtype":"m.text"},"ts":1506943786000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"if the ratio of 2:1 needs to be preserved,","msgtype":"m.text"},"ts":1506943791000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"how do you do that if the width is >300px?","msgtype":"m.text"},"ts":1506943797000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"And the height cannot be >150px.","msgtype":"m.text"},"ts":1506943804000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yeah, the spec doesn't seem very clear there. file a bug?","msgtype":"m.text"},"ts":1506943877000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Mmh <video width=500 style=\"border: 1px black solid\"> is not rendered the same as <object width=500 style=\"border: 1px black solid\">.","msgtype":"m.text"},"ts":1506943886000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: So what's missing, I think, is a definition of the intrinsic ratio of the video element.","msgtype":"m.text"},"ts":1506943903000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hmm, http://cldr.unicode.org/ doesn't use HTTPS; you'd think that would be even more important","msgtype":"m.text"},"ts":1506944098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I think it has some meaning in CSS printing","msgtype":"m.text"},"ts":1506944125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, but not in DOM","msgtype":"m.text"},"ts":1506944137000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: not in any DOM/HTML context that I know of","msgtype":"m.text"},"ts":1506944140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was trying to understand pointer events spec, and couldn't.  Filed a bug, well 3.","msgtype":"m.text"},"ts":1506944165000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"uses @page for printing stuff","msgtype":"m.emote"},"ts":1506944202000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"gsnedders: Filed. https://github.com/whatwg/html/issues/3090","msgtype":"m.text"},"ts":1506944221000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"tobie: oh, so https://github.com/tobie/specref/blob/master/refs/legacy.json is parsed later or something?","msgtype":"m.text"},"ts":1506947596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: which files from https://github.com/tobie/specref/tree/master/refs are auto-generated?","msgtype":"m.text"},"ts":1506947672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nope, that's all the ones that were too hard to automatically parse","msgtype":"m.text"},"ts":1506947677000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"they're dumped as a string to the clients who then have to deal with it.","msgtype":"m.text"},"ts":1506947702000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: that's why ideally they should be fixed","msgtype":"m.text"},"ts":1506947718000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: all but biblio and legacy","msgtype":"m.text"},"ts":1506947734000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: what's the source for csswg.json?","msgtype":"m.text"},"ts":1506947763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but it's a little more subtle than auto-generation, though, as they're fed into the input themselves","msgtype":"m.text"},"ts":1506947768000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it was last patched manually 5 months ago it seems","msgtype":"m.text"},"ts":1506947772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which makes them manually patched for some cases","msgtype":"m.text"},"ts":1506947797000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: http://dev.w3.org/csswg/biblio.ref","msgtype":"m.text"},"ts":1506947852000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: at https://github.com/tobie/specref/blob/master/scripts/csswg.js#L46","msgtype":"m.text"},"ts":1506947887000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I see, that URL can now be HTTPS","msgtype":"m.text"},"ts":1506947921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: do you want a PR for that?","msgtype":"m.text"},"ts":1506947946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure","msgtype":"m.text"},"ts":1506947951000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: the redirect for     http://dev.w3.org/2009/dap/contacts/ is rather useless","msgtype":"m.text"},"ts":1506948046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: how is forging in https://github.com/whatwg/dom/issues/270#issuecomment-333531823 a problem though?","msgtype":"m.text"},"ts":1506950772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: is there a new subtlety the subsequent comments didn't go into?","msgtype":"m.text"},"ts":1506950883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it basically means you are no longer constrained by the API; seems pretty unsafe.","msgtype":"m.text"},"ts":1506950942000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you can get a pointer to objects you weren't originally allowed to access, since everyone shares the same global space (\"integers\")","msgtype":"m.text"},"ts":1506950964000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so this is only problematic if we actually expose the buffer?","msgtype":"m.text"},"ts":1506951081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess you can still queue invalid operations or with integers that potentially are used for some other purpose","msgtype":"m.text"},"ts":1506951148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe","msgtype":"m.text"},"ts":1506951153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it's problematic if we use integers for the arguments to these methods","msgtype":"m.text"},"ts":1506951162000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(or return them)","msgtype":"m.text"},"ts":1506951192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If they return integers to get a handle on a node later and we only return nodes within the appended tree (so these are not global references) it might be okay","msgtype":"m.text"},"ts":1506951337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, it's definitely something we need to be mindful of, but I'm not sure it's a showstopper for the general idea","msgtype":"m.text"},"ts":1506951363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We also haven't really seen any alternatives pop up, but this also hasn't gotten any experimentation yet unfortunately","msgtype":"m.text"},"ts":1506951390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Might be another interesting intern project","msgtype":"m.text"},"ts":1506951423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: doesn't CSS also need some way to reference Node objects from another thread?","msgtype":"m.text"},"ts":1506954171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: for layout worklets and such?","msgtype":"m.text"},"ts":1506954177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: or is that worked around differently?","msgtype":"m.text"},"ts":1506954189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Worked around differently","msgtype":"m.text"},"ts":1506954201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"surma: hey, where is that proposal you talked about in HTTP 403?","msgtype":"m.text"},"ts":1506954218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You just get a property bag and some objects representing the box tree","msgtype":"m.text"},"ts":1506954226000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"surma: assuming you're that surma","msgtype":"m.text"},"ts":1506954232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i am that surma ^^","msgtype":"m.text"},"ts":1506954262000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"TabAtkins: kk, was wondering if you maybe shared a need with https://github.com/whatwg/dom/issues/270","msgtype":"m.text"},"ts":1506954266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You mean tasklets?","msgtype":"m.text"},"ts":1506954273000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"surma: yeah","msgtype":"m.text"},"ts":1506954279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://discourse.wicg.io/t/proposal-tasklets/2199","msgtype":"m.text"},"ts":1506954299000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"wonders if JakeA learned meanwhile that Worklets are very much intended to be able to run on a different thread","msgtype":"m.emote"},"ts":1506954318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"surma: new version of https://github.com/esprehn/tasklets basically?","msgtype":"m.text"},"ts":1506954346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems your variant has more commits, but a similar README","msgtype":"m.text"},"ts":1506954386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah esprehn, bfgeek and I had 3 versions before the canonical one on ChromeLabs got created","msgtype":"m.text"},"ts":1506954412000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"The commits mostly stem from the polyfill that we wrote.","msgtype":"m.text"},"ts":1506954458000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"Which reminds me I need to Backport all the progress and features I made with Comlink","msgtype":"m.text"},"ts":1506954496000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"annevk: ohhh, I think I knew that. I was unsure if they had an event loop. At one point I thought async stuff wasn't allowed in them, but not sure where I got that from","msgtype":"m.text"},"ts":1506954530000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: they have an event loop of sorts, but very little is queued to it","msgtype":"m.text"},"ts":1506954608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but e.g. audio worklets have a postMessage API so very much need to loop","msgtype":"m.text"},"ts":1506954644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I suspect paint has similar things and will at least need to deal with promises","msgtype":"m.text"},"ts":1506954664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the only difference between them and workers is the ability to run on the same thread as eachother, and perhaps different APIs exposed?","msgtype":"m.text"},"ts":1506954724000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think the difference is that there's less APIs exposed (just ECMAScript builtins and a couple basic things; though some worklets might still expose quite a bit of new objects)","msgtype":"m.text"},"ts":1506954830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: unrelated, but do you know of any web APIs that have the ability to terminate fetches in a standardised way? Aside from fetch & xhr","msgtype":"m.text"},"ts":1506954869000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't think it's really sorted what the ideal mapping to OS threads is (though they won't be able to use Atomics.wait, which dedicated workers can, but no other workers can)","msgtype":"m.text"},"ts":1506954892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: maybe window.stop()? But I couldn't really create good tests with that myself","msgtype":"m.text"},"ts":1506954923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: another trick might be navigating a document that has ongoing fetches","msgtype":"m.text"},"ts":1506954936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the latter one is documented, but there's a bunch of interop and timing differences between browsers","msgtype":"m.text"},"ts":1506954953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"surma: that proxy bridge is interesting, but also the first proxy we'd add after we have deprecated them all","msgtype":"m.text"},"ts":1506954992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"surma: not sure how I feel about that","msgtype":"m.text"},"ts":1506954997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: timing isn't really an issue. Navigating an iframe sounds like a good bet","msgtype":"m.text"},"ts":1506955011000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, window.close() should be similar","msgtype":"m.text"},"ts":1506955061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and maybe removing an <iframe>","msgtype":"m.text"},"ts":1506955067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: (you can use window.open() within web-platform-tests, it's safelisted)","msgtype":"m.text"},"ts":1506955083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought about removing an iframe, but wondered if it might keep the fetches alive while there's a reference.","msgtype":"m.text"},"ts":1506955132000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Good few avenues to test there, though","msgtype":"m.text"},"ts":1506955146000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't think it should, since removing an <iframe> triggers some synchronous stuff","msgtype":"m.text"},"ts":1506955167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that is, removing and then appending is destructive","msgtype":"m.text"},"ts":1506955176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, removing an <iframe> triggers discard for the browsing context, which triggers discard for documents, which triggers abort for the document","msgtype":"m.text"},"ts":1506955257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that'll do the trick then, thanks!","msgtype":"m.text"},"ts":1506955411000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"surma: might also be good to update those older repositories to point to the one true source for tasklets","msgtype":"m.text"},"ts":1506956068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+1 updating older repos","msgtype":"m.text"},"ts":1506956225000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gwicke: why does Wikipedia percent-encode URLs with Unicode in them?","msgtype":"m.text"},"ts":1506956566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gwicke: if you consistently enforce UTF-8 it would presumably save quite a bit of bandwidth on non-Western content to not do that","msgtype":"m.text"},"ts":1506956588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in the default desktop view that is a historical hold-over","msgtype":"m.text"},"ts":1506956623000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"part of the damage inflicted by the xhtml validator back in the day","msgtype":"m.text"},"ts":1506956659000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"the newer parsoid parser uses UTF8 wherever it can","msgtype":"m.text"},"ts":1506956685000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"gwicke: okido","msgtype":"m.text"},"ts":1506956693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for the prod!","msgtype":"m.text"},"ts":1506956725000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"annevk: feel free to comment on the wicg thread. Good point about the old repos, I wasn't actually aware that they got shared outside Google.","msgtype":"m.text"},"ts":1506956873000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"surma: I guess I'll file an issue","msgtype":"m.text"},"ts":1506957153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Appreciate it!","msgtype":"m.text"},"ts":1506957195000,"senderName":"surma","senderId":"surma@irc"},
{"content":{"body":"who should be pinged about CSSOM stuff?","msgtype":"m.text"},"ts":1506957877000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"now zcorpan is gone (:()","msgtype":"m.text"},"ts":1506957890000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Glenn Adams!","msgtype":"m.text"},"ts":1506958043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I mean CSSOM View seemingly. still the same answer?","msgtype":"m.text"},"ts":1506958156000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also: is there anyone around IRC I can ask probably stupid font-related questions?","msgtype":"m.text"},"ts":1506959387000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I ask to ask given I've only ever got silence before :))","msgtype":"m.text"},"ts":1506959406000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'll probably do unofficial editting on the spec until we decide on a real editor.","msgtype":"m.text"},"ts":1506960621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: won't derail the thread further, but your statement doesn't work generically for worklets either","msgtype":"m.text"},"ts":1506965409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: consider audio worklets","msgtype":"m.text"},"ts":1506965413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What's wrong for audio workets?","msgtype":"m.text"},"ts":1506965450000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: they need to be on their own thread, nothing's wrong","msgtype":"m.text"},"ts":1506965476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Couldn't the browser multiplex multiple audio worklets from a single origin onto the same thread?","msgtype":"m.text"},"ts":1506965504000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I don't see why that would be okay but it wouldn't be okay for workers","msgtype":"m.text"},"ts":1506965581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, no, the AudioWorklet spec says they're multiplexed onto the rendering thread: https://webaudio.github.io/web-audio-api/#AudioWorklet","msgtype":"m.text"},"ts":1506965595000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I guess I don't understand why that's okay, but it's not okay for workers","msgtype":"m.text"},"ts":1506965675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: other than worklets being a subset they're fundamentally the same, and audio worklets also have a messaging channel","msgtype":"m.text"},"ts":1506965696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not certain why it doesn't work for workers. I think it has something to do with their synchronous APIs, but I don't know the JS engine details that prevent us from pausing those to switch to another worker.","msgtype":"m.text"},"ts":1506965770000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: so maybe it only applies to dedicated workers because of Atomics.wait?","msgtype":"m.text"},"ts":1506965833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: I guess that must be it","msgtype":"m.text"},"ts":1506965844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd also include synchronous XHR and probably some of the OffscreenCanvas API, but again I'm not certain.","msgtype":"m.text"},"ts":1506966029000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: according to lth it's problematic for anything that can wake","msgtype":"m.text"},"ts":1506966115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: which seems to suggest these cooperative multithreading designs are somewhat at odds with SAB","msgtype":"m.text"},"ts":1506966139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's the part I'm still missing. I see the conflict with Atomics.wait(), but that already explicitly guards itself with AgentCanSuspend() and so wouldn't be usable from a cooperative-multithreaded agent.","msgtype":"m.text"},"ts":1506966309000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I think I convinced lth that the issue also arises with a document and a child document","msgtype":"m.text"},"ts":1506966398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: next step is filing an issue to explore further when there's more time","msgtype":"m.text"},"ts":1506966410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks :)","msgtype":"m.text"},"ts":1506966425000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Also thanks for your Infra issue.","msgtype":"m.text"},"ts":1506966431000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Does anyone have a hotline to Hixie? http://software.hixie.ch/utilities/cgi/data/data appears to be malfunctioning.","msgtype":"m.text"},"ts":1506966652000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"jyasskin: did reach a resolution, apparently cooperative multithreading still meets the definition of fp","msgtype":"m.text"},"ts":1506967512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: they just really want workers to be actually 1:1 with threads","msgtype":"m.text"},"ts":1506967532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: fp being forward progress","msgtype":"m.text"},"ts":1506967571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And they probably would have written that into the forward progress definition if anyone knew how to specify forward progress precisely. The C++ committee is in the middle of years of work trying to specify the guarantees systems actually provide.","msgtype":"m.text"},"ts":1506967616000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: you mean requiring threads?","msgtype":"m.text"},"ts":1506968287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: if they had done that that would've been bad for worklets and friends","msgtype":"m.text"},"ts":1506968334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We do need two different forward progress guarantees for Workers vs Worklets.","msgtype":"m.text"},"ts":1506968377000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I don't know, I wasn't in the discussion, and maybe TC39 had other reasons for wanting a weaker FP guarantee for Workers than anyone actually wanted to implement.","msgtype":"m.text"},"ts":1506968448000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Fundamentally, a dedicated Worker should be able to run \"while (true){}\" without blocking anything else, and Worklets, Service Workers, Tasklets, etc. shouldn't have that property. Right?","msgtype":"m.text"},"ts":1506968569000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"ato: in what way?","msgtype":"m.text"},"ts":1506972620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: yeah, though [[CanBlock]] is not the signifier for this even though it rather strongly appears that way","msgtype":"m.text"},"ts":1506972712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"[[CanInfiniteLoop]] would be more like it. ;)","msgtype":"m.text"},"ts":1506972749000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: The ‘Generate’ button doesn’t create a data URI and redirects back to the main page.","msgtype":"m.text"},"ts":1506972777000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"ato: hmm works here","msgtype":"m.text"},"ts":1506972803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Are you sure? In Firefox it does nothing, whereas Chrome complains about ERR_UNSAFE_REDIRECT.","msgtype":"m.text"},"ts":1506972852000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"wonders if the Mozilla network people have broken something more when they tried fixing IPv6 for the nth time","msgtype":"m.emote"},"ts":1506972916000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"ato: suspect navigating to data URLs is restricted in Fx too now","msgtype":"m.text"},"ts":1506972917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ato: I’m only aware of putting them in opaque origins","msgtype":"m.text"},"ts":1506972951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is that a CSP directive that should be whitelisted or somesuch?","msgtype":"m.text"},"ts":1506972969000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"TabAtkins: really I wouldn't object to using something like CSSOM View for a more WHATWG-like editorial expierments in the CSS WG","msgtype":"m.text"},"ts":1506974178000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Are the substeps of \"7.8.1 Navigating across documents\", step 12 (found here: https://html.spec.whatwg.org/multipage/browsing-the-web.html#javascript-protocol ) always expected to occur in a later task queue?","msgtype":"m.text"},"ts":1506975116000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"It says \"queue a task\", so I'm assuming yes, but I'm reviewing tests for \"javascript:\" behaviors (in form action) and every browser disagrees","msgtype":"m.text"},"ts":1506975200000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"ato: no, basically no longer a feature, but not fully standardized either","msgtype":"m.text"},"ts":1506976650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: there are some known issues; don’t remember any on timing though","msgtype":"m.text"},"ts":1506976703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: would be good to file","msgtype":"m.text"},"ts":1506976714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: (Domenic too): where would you recommend domintro boxes for the fetch spec go, below the class IDL in section 5? That seems to be a good place as that's where the event domintro box is in the dom spec.","msgtype":"m.text"},"ts":1506978872000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"gsnedders: Strongly agree. It's a low-churn spec, and most changes are just implementation-chasing anyway; it seems perfect for doing WHATWG-style.","msgtype":"m.text"},"ts":1506981806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic/bz: I'm reviewing https://github.com/w3c/webappsec-credential-management/pull/93, and pulling on thread-safety keeps getting hairier. For example, [[Store]] currently takes a Credential instance, but it's called in parallel, so reading fields off instances isn't allowed. It seems like we're assuming that a struct-of-primitives is made and copied before going in parallel, and that exactly which struct it is","msgtype":"m.text"},"ts":1506982011000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"depends on which subtype of Credential we got. Do any other specs demonstrate concise ways to describe this?","msgtype":"m.text"},"ts":1506982011000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"(I could be wrong about whether reading fields off instances is disallowed. If they're otherwise readonly, maybe it's ok? I think this isn't specified anywhere.)","msgtype":"m.text"},"ts":1506983176000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]