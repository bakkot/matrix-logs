[
{"content":{"body":"MikeSmith: if https://github.com/whatwg/html/pull/5882 looks okay to you we can merge that and then rebase the other PR and land that too","msgtype":"m.text"},"ts":1599029546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK","msgtype":"m.text"},"ts":1599029661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: and thanks yeah, I had been planning to deal with that one case after merging this one first then rebasing","msgtype":"m.text"},"ts":1599029670000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and thanks also for catching and fixing the ID cases; I should have considered that","msgtype":"m.text"},"ts":1599029693000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/dom/pull/887","msgtype":"m.text"},"ts":1599029906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: are you rebasing? I'm happy to do it","msgtype":"m.text"},"ts":1599029975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Iâ€™m rebasing it now","msgtype":"m.text"},"ts":1599029987000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see :-)","msgtype":"m.text"},"ts":1599029988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, https://github.com/whatwg/html/pull/5881 is all green, if you could go ahead and push the button","msgtype":"m.text"},"ts":1599030246000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"andreubotella: so decode blocking in parallel doesn't so bad to me, but I'll grant you that it's not an ideal setup","msgtype":"m.text"},"ts":1599043249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seem so*","msgtype":"m.text"},"ts":1599043255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, since at that point the behavior of the different stages isn't observable from the main thread","msgtype":"m.text"},"ts":1599043995000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"but I don't think it hurts to make the hooks useful concurrently","msgtype":"m.text"},"ts":1599044157000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: I guess for that you need some kind of incremental hook that you push a couple of items at a time","msgtype":"m.text"},"ts":1599045335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that'd be best","msgtype":"m.text"},"ts":1599045360000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"but having decode optionally take an output I/O queue would do it for now","msgtype":"m.text"},"ts":1599045411000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: how would that work though? That queue would travel across parallel boundaries magically?","msgtype":"m.text"},"ts":1599046435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Might not be too bad","msgtype":"m.text"},"ts":1599046472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was thinking something like: on the event loop, the first task from the networking task source creates the parser and the input byte stream, and passes the ibs to a new thread","msgtype":"m.text"},"ts":1599046822000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"that thread then creates the input stream, passes the is to a new thread that runs the tokenizer, and itself runs the decode algorithm","msgtype":"m.text"},"ts":1599046857000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"decode optionally takes an output I/O queue (otherwise it creates it), and pushes end-of-queue to it after it's done","msgtype":"m.text"},"ts":1599046953000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"So yeah, you pass a queue across threads; might be good enough","msgtype":"m.text"},"ts":1599047008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It is somewhat unclear in the infra standard what happens if you get a value from a map with a key that's not in the map","msgtype":"m.text"},"ts":1599056175000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you have to \"exists\" check first","msgtype":"m.text"},"ts":1599056309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is also unclear (and pretty strange)","msgtype":"m.text"},"ts":1599056372000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems to be mentioned for using the index notation that the value existing is assumed to be a precondition","msgtype":"m.text"},"ts":1599056535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But not for the actual accessor algorithm","msgtype":"m.text"},"ts":1599056556000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The \"out of bounds\" language for that precondition seems copied from the definition for list, and could be reworded with reference to keys in the map's entries.","msgtype":"m.text"},"ts":1599056623000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"jgraham: third paragraph of (including note) of https://infra.spec.whatwg.org/#maps seems pretty clear?","msgtype":"m.text"},"ts":1599056651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh sigh, key not index","msgtype":"m.text"},"ts":1599056681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's what I mean by \"it seems to be mentioned for index notation\"","msgtype":"m.text"},"ts":1599056692000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It isn't obvious to me that anything there applies if I \"call\" 'get the value of an entry' directly","msgtype":"m.text"},"ts":1599056740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think we support map[1] though so maybe that should just be reworded","msgtype":"m.text"},"ts":1599056762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/The index cannot be out-of-bounds, except when used with exists./The key has to exist./?","msgtype":"m.text"},"ts":1599056807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Happy to PR that if that would help","msgtype":"m.text"},"ts":1599056835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To get the value of an entry","msgtype":"m.text"},"ts":1599056893000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in an ordered map given a key, return the value of the entry whose key is the given key. It is a spec error to call this with a key that does not exist; when that is not statically known specs must first ensure that the map contains key.","msgtype":"m.text"},"ts":1599056950000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or something","msgtype":"m.text"},"ts":1599057017000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I prefer my clarification, but we should add an example as this is a common pattern","msgtype":"m.text"},"ts":1599057074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Your clarification still give the impression it's talking about the indexing syntax.","msgtype":"m.text"},"ts":1599057106000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ah yeah, we should also add an assert to the get thing","msgtype":"m.text"},"ts":1599057163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" ","msgtype":"m.text"},"ts":1599058314000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: it seems https://jsdom.github.io/whatwg-url/ broke down somehow","msgtype":"m.text"},"ts":1599065561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/jsdom/whatwg-url/issues/168","msgtype":"m.text"},"ts":1599065654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh yeah, it still works in Chrome, but no other browser","msgtype":"m.text"},"ts":1599065731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That makes it kinda useless though","msgtype":"m.text"},"ts":1599065736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, it's IDL bindings code?","msgtype":"m.text"},"ts":1599065819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"omg https://github.com/tc39/ecma262/issues/678","msgtype":"m.text"},"ts":1599065867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"steps away from the computer","msgtype":"m.emote"},"ts":1599065894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's my JS-implemented IDL bindings code. webidl2js (which underlies whatwg-url which underlies live-url-viewer) implements [AllowShared] in a way that depends on a SAB global existing at startup time.","msgtype":"m.text"},"ts":1599066055000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't think 678 is relevant to this particular issue, but it is indeed scary... I'm surprised you haven't seen it before.","msgtype":"m.text"},"ts":1599066081000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I have","msgtype":"m.text"},"ts":1599066089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I keep forgetting about it and then it's there again","msgtype":"m.text"},"ts":1599066113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh yes","msgtype":"m.text"},"ts":1599066150000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe Shu wants to fix it. He's been good about that sort of thing.","msgtype":"m.text"},"ts":1599066165000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Very true","msgtype":"m.text"},"ts":1599066188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Pushed a fix for live URL viewer to master; it should deploy momentarily. Although I wasn't able to test Safari so if you have that, let me know.","msgtype":"m.text"},"ts":1599066731000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"One day I will be allowed back into the office to get my testing Mac...","msgtype":"m.text"},"ts":1599066747000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In Safari I get \"ReferenceError: Can't find variable: SharedArrayBuffer\"","msgtype":"m.text"},"ts":1599066790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, momentarily","msgtype":"m.text"},"ts":1599066810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm Travis says it's deployed but it is not...","msgtype":"m.text"},"ts":1599066933000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK, now it is... caching, maybe","msgtype":"m.text"},"ts":1599066950000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems to work, though Safari seemingly ignores about:blank in base","msgtype":"m.text"},"ts":1599067027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But no more console errors","msgtype":"m.text"},"ts":1599067033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would have expected new WebAssembly.Memory to throw","msgtype":"m.text"},"ts":1599067074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, I guess it ignores the shared member entirely","msgtype":"m.text"},"ts":1599067112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Domenic: i'll queue it up... still need to finish up the incumbents thing. i've been holding off prodding the MDN article progress given the layoffs","msgtype":"m.text"},"ts":1599067585000,"senderName":"shu","senderId":"shu@irc"}
]