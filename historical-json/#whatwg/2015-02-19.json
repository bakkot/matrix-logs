[
{"content":{"body":"Hm.. is there an interface exposed in browsers to build a DOM from HTML gradually (as opposed to all at once). Essentially consuming a stream. While conceptually slow/complex to do manually (I think), the logic for deciding when a tag is save to include in the dom and how to build it already exists in browsers today. Exposing this with events would be interesting.","msgtype":"m.text"},"ts":1424320199000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: what you're describing sounds pretty much like the SAX API","msgtype":"m.text"},"ts":1424320461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which isn't something that browsers implement and it's kinda hard to imagine how they would usefully","msgtype":"m.text"},"ts":1424320496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as the parsed document that browsers expose","msgtype":"m.text"},"ts":1424320549000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I think there's at least one JS-based SAX implementation","msgtype":"m.text"},"ts":1424320570000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or you know about SAX already, maybe I'm not understanding what you're proposing","msgtype":"m.text"},"ts":1424320616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*if you know about SAX already","msgtype":"m.text"},"ts":1424320628000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The use case I'm working on is for Wikipedia's visual document editor. It loads an HTML5 representation of the article (essentially what readers see without a theme or scripts, and more data about where individual pieces originate from), uses DOMParser, and then processes that to compose a content editable surface.","msgtype":"m.text"},"ts":1424320690000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It'd be rad to do that from a stream and start building our linear model while HTML is interpreted.","msgtype":"m.text"},"ts":1424320719000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"(e.g. XHR2 streams)","msgtype":"m.text"},"ts":1424320765000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"rektide: â†‘","msgtype":"m.text"},"ts":1424322079000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Krinkle: it sounds like a JS-based SAX parser could help get you there","msgtype":"m.text"},"ts":1424322237000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah, there exist good SAX parsers for JSON. I'm skeptical how an HTML would work. Implementing html5 properly is no easy task. And I suspect it might perform poorly compared to native and perhaps nullify the advantage of streaming. Having said that, we have observed that parsing large documents can definitely take a considerable amount of time (seconds), so there's room.","msgtype":"m.text"},"ts":1424322440000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"MikeSmith: Though I forgot for a second that our internal html5 representation of the article content is actually valid XML as well.","msgtype":"m.text"},"ts":1424322463000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: yeah if you need to make something that's capable of handling arbitrary HTML content from the Web, you need something that implements the HTML parsing algorithm, there's also the problem that there are parts of the HTML5 parsing algorithm that can't be implemented in truly streaming parser","msgtype":"m.text"},"ts":1424322926000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah, but the spec handles quite explicitly from what I recall and browsers (nowadays) implement that.","msgtype":"m.text"},"ts":1424322968000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Hence I figured it should be too complicated to expose since the behaviour is already specified. Since browsers generally do parse from a stream as well (e.g. server can flush buffer early).","msgtype":"m.text"},"ts":1424323036000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"shouldn't *","msgtype":"m.text"},"ts":1424323046000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It'll probably never happen, but something like DOMParser that takes a Blob/Buffer (node-ism) and returns Promise with EventEmitter. That's what I'd expect server-side.","msgtype":"m.text"},"ts":1424323123000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Domenic: did you see https://github.com/kriskowal/gtor/blob/master/README.md#singular-and-temporal from Kris?","msgtype":"m.text"},"ts":1424335546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess you have","msgtype":"m.text"},"ts":1424335550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it's kinda nice how he talks about futures/promises/tasks to mostly do the same thing, but I'm not sure I see JavaScript going that way","msgtype":"m.text"},"ts":1424335597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but maybe at some point","msgtype":"m.text"},"ts":1424335603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: although on the other hand, people have trouble deciding between a promise and a callback; giving them three different types of promises might be a bit much","msgtype":"m.text"},"ts":1424335638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi! I'd like to integrate with validator directly in my java code (rather than as an external http service); how possible is this?","msgtype":"m.text"},"ts":1424336339000,"senderName":"nekllen","senderId":"nekllen@irc"},
{"content":{"body":"hi nekellen","msgtype":"m.text"},"ts":1424336394000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's possible","msgtype":"m.text"},"ts":1424336398000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nekellen: the code you want to look as an example is https://github.com/validator/validator/blob/master/src/nu/validator/client/SimpleCommandLineValidator.java","msgtype":"m.text"},"ts":1424336462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the entry point in the sources is https://github.com/validator/validator/blob/master/src/nu/validator/validation/SimpleDocumentValidator.java","msgtype":"m.text"},"ts":1424336495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok, great. Is there some description of which dependencies I'll need to include? I saw in https://github.com/validator/validator/issues/13 that validator was potentially using older/unsupported versions of libs","msgtype":"m.text"},"ts":1424336687000,"senderName":"nekellen","senderId":"nekellen@irc"},
{"content":{"body":"or are all of these getting included in validator.jar ?","msgtype":"m.text"},"ts":1424336719000,"senderName":"nekellen","senderId":"nekellen@irc"},
{"content":{"body":"yeah the dependencies are all in validator.jar","msgtype":"m.text"},"ts":1424336742000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all 22MB of them","msgtype":"m.text"},"ts":1424336746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in your code basically you want to do validator = new SimpleDocumentValidator() then validator.setUpMainSchema then validator.setUpValidatorAndParsers and then, depending on where the doc you're checking is coming from, either validator.checkHtmlInputSource or validator.checkHttpURL or validator.checkHtmlFile","msgtype":"m.text"},"ts":1424336972000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh the other main thing you need to do first is to set up an ErrorHandler","msgtype":"m.text"},"ts":1424337072000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: That gives me a good place to start, thanks!","msgtype":"m.text"},"ts":1424337319000,"senderName":"nekellen","senderId":"nekellen@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1424337356000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: I just realized I have not adequately defined Headers' guard for cloning","msgtype":"m.text"},"ts":1424341770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Summary of fetch termination: https://annevankesteren.nl/2015/02/cancelable-promises","msgtype":"m.text"},"ts":1424348687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and darobin 386es Yucca","msgtype":"m.text"},"ts":1424349011000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there are days on which it's impossible to resist :)","msgtype":"m.text"},"ts":1424349040000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah i know","msgtype":"m.text"},"ts":1424349063000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: btw, that guard thing is fixed now, while you sleep :p","msgtype":"m.text"},"ts":1424349074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where's krijn?","msgtype":"m.text"},"ts":1424349928000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: i can add some headings to <img> i guess","msgtype":"m.text"},"ts":1424350673000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: sleep is a strong word when you have a baby (which I'm sure you know)","msgtype":"m.text"},"ts":1424354604000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1424354615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: would it make sense to have a <meta> or <link> to invoke the OPTIONS * preflight, to reduce latency?","msgtype":"m.text"},"ts":1424354693000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"latency of the initial API use, i mean","msgtype":"m.text"},"ts":1424354736000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: requesting CORS for a particular origin? Yeah maybe","msgtype":"m.text"},"ts":1424354764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1424354775000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it would also provide an opt-in if it's not compatible to do OPTIONS * from APIs","msgtype":"m.text"},"ts":1424354924000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: just to clarify... response2 = response1.clone()... response2 should have the same header guard as response 1, correct?","msgtype":"m.text"},"ts":1424355072000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"reboots because windows decided to install updates.","msgtype":"m.emote"},"ts":1424355139000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yup","msgtype":"m.text"},"ts":1424355146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1424355163000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hi all. i have made a top navigation menu that i want to include in two or more apps like wordpress. i want the apps to have the same global navigation. for the moment i have tried copy/paste the navigation html/css/js. i tried putting all js and css on one server and loading the navigation html with jquery enabling CORS. is there a better way to approach this? angularjs? iframes?","msgtype":"m.text"},"ts":1424356985000,"senderName":"tty","senderId":"tty@irc"},
{"content":{"body":"annevk: Is it defined somewhere (url)? what the valid syntax of a path is?","msgtype":"m.text"},"ts":1424358279000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh yeah","msgtype":"m.text"},"ts":1424358303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I see now","msgtype":"m.text"},"ts":1424358305000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: bz thinks it's somewhat critical that eventually all consumers get some notification of cancelation","msgtype":"m.text"},"ts":1424361921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: is that a recognized goal of cancelable promises?","msgtype":"m.text"},"ts":1424361932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: thanks for setting it all up!","msgtype":"m.text"},"ts":1424362117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Krinkle|detached: MikeSmith: https://www.npmjs.com/package/parse5 has a streaming mode and at least in its normal mode passes all the parser tests. Don't know the details, but it might be interesting.","msgtype":"m.text"},"ts":1424362886000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: yeah, I'm unsure on Task<T> being worth the trouble. Although, duck-typing would let most consumers treat them identically to promises.","msgtype":"m.text"},"ts":1424362922000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Future<T> seems much less interesting to me, but that's an age-old debate","msgtype":"m.text"},"ts":1424362945000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: in practice we haven't found a use case for notifying consumers of cancellation","msgtype":"m.text"},"ts":1424362987000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"everyone just filters out the cancellation rejection and ignores it.","msgtype":"m.text"},"ts":1424362997000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: niceãƒ¼thanks","msgtype":"m.text"},"ts":1424363319000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: okay, I should ask bz","msgtype":"m.text"},"ts":1424363347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so bz brings up the case of the end user terminating fetches by hitting something in the UI","msgtype":"m.text"},"ts":1424367777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: is that cancel-like or network-error-like?","msgtype":"m.text"},"ts":1424367790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that sounds network-error-like to me.","msgtype":"m.text"},"ts":1424367800000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what about killing a worker or navigating away from a page?","msgtype":"m.text"},"ts":1424367802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: okay, it currently is that way","msgtype":"m.text"},"ts":1424367811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all of those cases sound the same as if the server just immediately cut off the connection","msgtype":"m.text"},"ts":1424367818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but from the other consumers of the promise, how is one consumer cutting off the connection any different?","msgtype":"m.text"},"ts":1424367853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, multi-consumer is the problem indeed, hmm.","msgtype":"m.text"},"ts":1424367898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"promise.onterminate trololol","msgtype":"m.text"},"ts":1424367945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe .terminate({ rejectWith: }) provides the answer","msgtype":"m.text"},"ts":1424368033000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"browsers do .terminate({ rejectWith: NetworkError })","msgtype":"m.text"},"ts":1424368041000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but most users do .terminate()","msgtype":"m.text"},"ts":1424368046000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I said that was a nice model. ^_^","msgtype":"m.text"},"ts":1424368167000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I guess the question is whether we should start with it or introduce it when it becomes a pain point","msgtype":"m.text"},"ts":1424368242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i was kind of hoping we would start with .terminate() and then find out we never needed { rejectWith }","msgtype":"m.text"},"ts":1424368437000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thanks :)","msgtype":"m.text"},"ts":1424374456000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"are webidl attributes supposed to be configurable?","msgtype":"m.text"},"ts":1424384354000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"like, in general","msgtype":"m.text"},"ts":1424384365000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"yes, in general","msgtype":"m.text"},"ts":1424384381000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hm, jsc does some weird stuff","msgtype":"m.text"},"ts":1424384862000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: Yes it does, but also note that WebKit/Blink put attributes in the wrong place.  They're placed on the object, when WebIDL says they should be getter/setters on the prototype.","msgtype":"m.text"},"ts":1424385031000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i heard there was some progress on that, wasn't there?","msgtype":"m.text"},"ts":1424385071000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Yeah, we keep trying.","msgtype":"m.text"},"ts":1424385157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rewriting test harnesses has to be my least fun hobby ever","msgtype":"m.text"},"ts":1424386089000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm puzzled by window.location.hostname outputting IPv6 hostnames without the brackets.","msgtype":"m.text"},"ts":1424386249000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"espadrine: where's your sense of logic?","msgtype":"m.text"},"ts":1424386511000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"let me put it at the door â˜º","msgtype":"m.text"},"ts":1424386536000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"about the fact that Blink and WebKit don't conform to the WebIDL requirement to expose DOM attributes as getters/setters of prototypes, what real-world differences in practice does that make for web developers?","msgtype":"m.text"},"ts":1424389196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as how devs actually program to the APIs","msgtype":"m.text"},"ts":1424389215000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess it at least affects the case where somebody's monkey-patching the prototype?","msgtype":"m.text"},"ts":1424389256000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or not really?","msgtype":"m.text"},"ts":1424389268000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway it doesn't seem like that difference is a pain point for web devs to the point where any have taken time to complain about it","msgtype":"m.text"},"ts":1424389357000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I wonder what real problems if any it's causing in practice","msgtype":"m.text"},"ts":1424389450000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes it affects monkey patching pretty drastically","msgtype":"m.text"},"ts":1424389814000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. the shadow DOM polyfill has to monkey-patch all the constructors to produce instances with overwritten methods, instead of just monkey-patching the methods directly","msgtype":"m.text"},"ts":1424389839000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and even that doesn't catch instances that come from the browser itself","msgtype":"m.text"},"ts":1424389849000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so you have ot patch all methods that access e.g. Nodes and patch those nodes before the author sees them","msgtype":"m.text"},"ts":1424389868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's pretty disastrous","msgtype":"m.text"},"ts":1424389891000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(and slow)","msgtype":"m.text"},"ts":1424389909000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1424390117000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: thanks yeah I see now","msgtype":"m.text"},"ts":1424390150000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess I'm now a bit surprised that more polyfill/library authors haven't complained about this more","msgtype":"m.text"},"ts":1424390207000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe they have and I just wasn't paying attention","msgtype":"m.text"},"ts":1424390220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"now we need to convince only webkit to handle attributes properly","msgtype":"m.text"},"ts":1424390247000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyway I guess the other elephant in the room on this is what plans does the WebKit team have if any for fixing this in WebKit","msgtype":"m.text"},"ts":1424390258000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: coke jinx","msgtype":"m.text"},"ts":1424390271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: I wonder if there's even an open WebKit bug for it","msgtype":"m.text"},"ts":1424390381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]