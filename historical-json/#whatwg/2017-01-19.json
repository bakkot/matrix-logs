[
{"content":{"body":"Yeah, pretty much","msgtype":"m.text"},"ts":1484784053000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The plan is to use `mixin` instead of `[NoInterfaceObject] interface` and then say you can only `implements` such `mixin`s","msgtype":"m.text"},"ts":1484784077000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or maybe we'll have `mixes` as `implements` v2","msgtype":"m.text"},"ts":1484784086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder how https://bugs.chromium.org/p/chromium/issues/detail?id=682521 fits with the Console spec","msgtype":"m.text"},"ts":1484795136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, does the spec or other current implementation specify a way to control console verbosityーfor the console to show messages that are not shown by default","msgtype":"m.text"},"ts":1484795251000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe this is out of scope for the console spec and instead just an implementation-specific thing","msgtype":"m.text"},"ts":1484795290000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah I mean it depends on how they plan to expose that","msgtype":"m.text"},"ts":1484798550000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. is this only for deprecation warnings","msgtype":"m.text"},"ts":1484798564000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or is this supposed to be web developer exposed","msgtype":"m.text"},"ts":1484798571000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: does it relate to the levels of errors? In firefox devtools there are categories: Errors and Warnings","msgtype":"m.text"},"ts":1484799619000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"… for JS. Error, Warning, Reflow for CSS. Logging has a lot more stuff.","msgtype":"m.text"},"ts":1484799695000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"all of these you can activate and deactivate them.","msgtype":"m.text"},"ts":1484799740000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: I guess that is what the comment at https://bugs.chromium.org/p/chromium/issues/detail?id=568218#c20 refers to","msgtype":"m.text"},"ts":1484810424000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: yeah, web-developer exposed","msgtype":"m.text"},"ts":1484810470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh my, DreamHost's SSH instructions are basically \"trust the network\"","msgtype":"m.text"},"ts":1484812937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They move the server and there's no place to find the new public key securely","msgtype":"m.text"},"ts":1484812948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why is the SSH culture so broken? Does nobody care?","msgtype":"m.text"},"ts":1484812959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: biting my tongue here","msgtype":"m.text"},"ts":1484814495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"don’t want to sound like a broken record but that and other problems would be solved if we fully controlled the environment we’re running things on","msgtype":"m.text"},"ts":1484814536000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oh yeah, I'm okay with exploring moving away from DreamHost for whatwg.org et al","msgtype":"m.text"},"ts":1484814594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: maybe open a whatwg/meta issue?","msgtype":"m.text"},"ts":1484814600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: but this is not specific to DreamHost I think","msgtype":"m.text"},"ts":1484814609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1484814617000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I fully agree about the general problem","msgtype":"m.text"},"ts":1484814627000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"accidents waiting to happen","msgtype":"m.text"},"ts":1484814643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well not accidents, but people waiting to get pwned and other people inadvertently training them to be ready to get pwned","msgtype":"m.text"},"ts":1484814689000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: OK https://github.com/whatwg/meta/issues/8 raised","msgtype":"m.text"},"ts":1484816036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think Pavel is considering breaking the 1:1 connection between the API and UI.  Eg. \"Info\" in the UI may become disabled by default, but console.info may still be on by default under the \"Log\" level in the UI.","msgtype":"m.text"},"ts":1484828186000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"I'm not sure he wants to add but-yet-another level in the UI below info.  Seems like this is impl defined in the console spec, but feel free to raise an issue against it to discuss and/or comment on the bug with your thoughts.","msgtype":"m.text"},"ts":1484828281000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"yoav: assuming all is okay now I'll be able to squash and merge in a bit","msgtype":"m.text"},"ts":1484836165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: kid got sick again so I'm a bit on and off","msgtype":"m.text"},"ts":1484836201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: fyi landing the syntax for mixins is on my high-priority list.","msgtype":"m.text"},"ts":1484836354000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: ooh great","msgtype":"m.text"},"ts":1484836366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: now that Domenic explained that it's basically sugar around [NoInterfaceObject], I'm much more confortable addressing it. :)","msgtype":"m.text"},"ts":1484836421000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah, it's basically about removing [NoInterfaceObject]","msgtype":"m.text"},"ts":1484836509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought it implied bikesheding  the semantics of mixins","msgtype":"m.text"},"ts":1484836518000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: so wasn't very keen on getting *that* started.","msgtype":"m.text"},"ts":1484836536000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I see, I was wondering why it was being postponed, since at TPAC we decided it was important I think","msgtype":"m.text"},"ts":1484836566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, the learning curve for WebIDL is quite something, tbh.","msgtype":"m.text"},"ts":1484836913000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: OK, thanks! (absolutely no rush, take good care of the kid :D)","msgtype":"m.text"},"ts":1484837153000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"For html (5) tags, is it recommended (or at least valid) to place a dir=\"ltr\" everywhere? (Except where the language is rtl)","msgtype":"m.text"},"ts":1484841032000,"senderName":"No_se","senderId":"No_se@irc"},
{"content":{"body":"Well, to be more precise: In the opening html tag itself","msgtype":"m.text"},"ts":1484841083000,"senderName":"No_se","senderId":"No_se@irc"},
{"content":{"body":"No_se: you can define it there, yes","msgtype":"m.text"},"ts":1484841544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No_se: if not specified at all it defaults to ltr, so not really recommended","msgtype":"m.text"},"ts":1484841630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My usecase: I want to avoid setting i.e.  float: right and overwrite it (via dir=rtl selector) with float: left","msgtype":"m.text"},"ts":1484841764000,"senderName":"No_se","senderId":"No_se@irc"},
{"content":{"body":"Dunno if anyone else has opinions on polyfills not deferring to native implementations given all the pain we've seen caused by that in the past (e.g. custom elements, shadow DOM) but if so feel free to chime in at https://github.com/w3ctag/polyfills/issues/2 . Maybe annevk or mathiasbynens.","msgtype":"m.text"},"ts":1484842186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I left a reply","msgtype":"m.text"},"ts":1484844701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I looked into the URL issue and I think it basically requires a redesign of many states","msgtype":"m.text"},"ts":1484844726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we basically lost the information of \"/\" by the time we are in the \"path state\" and we need to preserve it if we are to distinguish between \"\" and \"/\" for non-special URL paths","msgtype":"m.text"},"ts":1484844762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'm starting to think my earlier suggestion of separating empty paths and non-special hosts makes a lot of sense","msgtype":"m.text"},"ts":1484844806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/issues/2271 you should probably state you do support the API concept and the naming convention that would go with that","msgtype":"m.text"},"ts":1484845012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: might have been too subtle when you pointed that out the first time","msgtype":"m.text"},"ts":1484845045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1484846687000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Good luck with the URL stuff...","msgtype":"m.text"},"ts":1484846690000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I do think splitting the hostname and path changes might work out well","msgtype":"m.text"},"ts":1484846695000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that polyfill thread is kinda baffling","msgtype":"m.text"},"ts":1484848142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1484848161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I also noticed that new URL(\"///y\", \"foo://x/\") doesn't quite do what I think it should do","msgtype":"m.text"},"ts":1484848925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: you end up with foo://y rather than foo:///y (empty host)","msgtype":"m.text"},"ts":1484848974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: which seems like a plain bug","msgtype":"m.text"},"ts":1484848978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm I see","msgtype":"m.text"},"ts":1484848993000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so yeah, I'm going to split them up","msgtype":"m.text"},"ts":1484848994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"1) fix host handling for non-special URLs","msgtype":"m.text"},"ts":1484849006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"2) fix path handling for non-special URLs","msgtype":"m.text"},"ts":1484849022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And 2 requires  a revamp of path handling in general I suspect","msgtype":"m.text"},"ts":1484849036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hopefully all tomorrow","msgtype":"m.text"},"ts":1484849062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: re: polyfills, you said “ Defering to native implementations does not provide the desired interop” - polyfills defer to native implementations for performance, no?","msgtype":"m.text"},"ts":1484851862000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: I sure hope not, since native implementations are usually slower","msgtype":"m.text"},"ts":1484851935000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there a qualifier for “usually”? Is that blanket JS, or specific to some browser or even some field (like DOM)? Like, would using the ES5/6 polyfill for Array methods be faster than native? Or DOM4?","msgtype":"m.text"},"ts":1484852088000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"s/Or DOM4 … polyfills being faster than native implementations","msgtype":"m.text"},"ts":1484852153000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"It's especially try that polyfills are usually faster for ES","msgtype":"m.text"},"ts":1484853022000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's also true in many smaller cases in DOM","msgtype":"m.text"},"ts":1484853032000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wide-ranging stuff like custom elements or shadow DOM are where polyfills are slower, but also way less likely to follow the spec.","msgtype":"m.text"},"ts":1484853058000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"eyyy JonathanNeal","msgtype":"m.text"},"ts":1484854102000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"hiii innovati","msgtype":"m.text"},"ts":1484854161000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"fancy meeting you here ^^","msgtype":"m.text"},"ts":1484854173000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"CSS, JS, HTML; they’re all part of the web.","msgtype":"m.text"},"ts":1484854289000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: had you settled the question around [SameObject] and promise types with Boris?","msgtype":"m.text"},"ts":1484866089000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: i.e. can I merge this thing?","msgtype":"m.text"},"ts":1484866120000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: for ref, it's this thread I'm talking about: https://github.com/heycam/webidl/pull/217#discussion_r87079498","msgtype":"m.text"},"ts":1484866156000,"senderName":"tobie","senderId":"tobie@irc"}
]