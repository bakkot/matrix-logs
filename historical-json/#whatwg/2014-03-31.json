[
{"content":{"body":"so I understand that the attributeChanged callback is executed only when the custom element's own attribute chanegs","msgtype":"m.text"},"ts":1396248716000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"*changes","msgtype":"m.text"},"ts":1396248720000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"what if my custom element need to know when its size changes?","msgtype":"m.text"},"ts":1396248742000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"good morning","msgtype":"m.text"},"ts":1396250287000,"senderName":"cdan","senderId":"cdan@irc"},
{"content":{"body":"ondras: size as in rendered size?","msgtype":"m.text"},"ts":1396256550000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yes","msgtype":"m.text"},"ts":1396257119000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: my use case is an interactive map","msgtype":"m.text"},"ts":1396257129000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: the underlying JS api needs to be notified when the viewport size changes","msgtype":"m.text"},"ts":1396257140000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: use window.onresize","msgtype":"m.text"},"ts":1396257159000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what if the size of my element changes due to interaction with other elements in page?","msgtype":"m.text"},"ts":1396257260000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: is the map you want to be notified about a <canvas>?","msgtype":"m.text"},"ts":1396257296000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no, but it behaves similarly","msgtype":"m.text"},"ts":1396257309000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: think of a google maps api","msgtype":"m.text"},"ts":1396257314000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: so its container might have width:50%, but can be situated within other element whose size might change independently...","msgtype":"m.text"},"ts":1396257343000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"11:15 < ondras> zcorpan: no, but it behaves similarly","msgtype":"m.text"},"ts":1396258383000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"11:15 < ondras> zcorpan: think of a google maps api","msgtype":"m.text"},"ts":1396258384000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"11:15 < ondras> zcorpan: so its container might have width:50%, but can be situated within other element whose size might change independently...","msgtype":"m.text"},"ts":1396258384000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: can you point to a page that does that?","msgtype":"m.text"},"ts":1396258415000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ondras: i can think of ways to hack around it, e.g. use an iframe and onresize. or if you control the other things whose size might change, let them send a notification when they change their size","msgtype":"m.text"},"ts":1396258419000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(sorry for dropping off, i'm on the train)","msgtype":"m.text"},"ts":1396258451000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: well have a look at http://api4.mapy.cz/","msgtype":"m.text"},"ts":1396258583000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: I want to implement the map as a custom element","msgtype":"m.text"},"ts":1396258592000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: but I have no explicit control on its size and placement","msgtype":"m.text"},"ts":1396258605000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: so a user might want to put it in a sidebar with variable width or so","msgtype":"m.text"},"ts":1396258620000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: and the underlying mapping JS absolutely needs to know when its \"viewport\" size changes","msgtype":"m.text"},"ts":1396258637000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: ok, thanks","msgtype":"m.text"},"ts":1396258742000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"101 switching trains","msgtype":"m.emote"},"ts":1396258748000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ondras: it's not clear to me if this is something that's specific to custom elements or if we should provide it for elements in general","msgtype":"m.text"},"ts":1396260223000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: agreed.","msgtype":"m.text"},"ts":1396260273000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: also, is it OK if it's just an event that's queued after the fact, or does the JS need to be notified before the new layout actually happens?","msgtype":"m.text"},"ts":1396260286000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: anyway, without a custom element, the situation is more explicit","msgtype":"m.text"},"ts":1396260292000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: people are used to call JS API \"syncSize\" or so when situation changes","msgtype":"m.text"},"ts":1396260303000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but when the map becomes a declarative element","msgtype":"m.text"},"ts":1396260310000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"as in <our-map x=... y=... />","msgtype":"m.text"},"ts":1396260317000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1396260329000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"people might want to evade any further JS interaction at all","msgtype":"m.text"},"ts":1396260330000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: queued after the fact, it can be delayed","msgtype":"m.text"},"ts":1396260352000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"zcorpan: the JS API needs to fetch additional map tiles to fill in the viewport as it resizes","msgtype":"m.text"},"ts":1396260367000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1396260408000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ondras: i'd say bring up the use case to the custom element people. if it's something that should work for ordinary elements also then [cssom-view] on www-style","msgtype":"m.text"},"ts":1396260500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: okay, can you please point me to some directions? is this irc channel not sufficient?","msgtype":"m.text"},"ts":1396260569000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: see \"Participate\" at the top of http://w3c.github.io/webcomponents/spec/custom/","msgtype":"m.text"},"ts":1396262304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"okay, thanks","msgtype":"m.text"},"ts":1396262469000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"which one is the current promise spec","msgtype":"m.text"},"ts":1396264037000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"maybe http://promises-aplus.github.io/promises-spec/ ?","msgtype":"m.text"},"ts":1396264112000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but that doesn't define clearly how it all integrates with the event loop","msgtype":"m.text"},"ts":1396264295000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"benschwarz: Hi.","msgtype":"m.text"},"ts":1396267910000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"smaug____: https://people.mozilla.org/~jorendorff/es6-draft.html maybe?","msgtype":"m.text"},"ts":1396268030000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is it possible to get PDF-version of HTML5? :-)","msgtype":"m.text"},"ts":1396268966000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"I want to read it from my smartphone in offline. But I can't find actual offline-version or PDF.","msgtype":"m.text"},"ts":1396269010000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"promises spec will be better in a month, i'm told","msgtype":"m.text"},"ts":1396269932000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"kind of a disaster right now","msgtype":"m.text"},"ts":1396269937000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"IZh: there was for a while but is no longer because it took too much resources on the server or something. ask Hixie if you want to set up a web service he can run in the build process","msgtype":"m.text"},"ts":1396270128000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"IZh: There was, -- but the generators kept crashing when it was created. This was way back though, I haven't had an urge to read spec any other place than web these days.","msgtype":"m.text"},"ts":1396270133000,"senderName":"odinho_","senderId":"odinho_@irc"},
{"content":{"body":"also see https://hsivonen.fi/printing-wa10/ (this was earlier still)","msgtype":"m.text"},"ts":1396270262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Thanks. I will ask him.","msgtype":"m.text"},"ts":1396270330000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"odinho: I have most of the spare time on the road in train or subway where there is no Internet. :-) I tried to use single-page from W3C but it is too heavy for mobile devices. And it has an annoying banner on the left and more annoying button on top of the text.","msgtype":"m.text"},"ts":1396270456000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Also I tried to download developers.whatwg.org and tried to build it. It doesn't work offline.","msgtype":"m.text"},"ts":1396270543000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: You should try getting Hixie to add offline support for the multipage spec :)","msgtype":"m.text"},"ts":1396270608000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I think, yes. :-)","msgtype":"m.text"},"ts":1396270630000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Hixie: Hi.","msgtype":"m.text"},"ts":1396270637000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: (it is before 6am Hixie time)","msgtype":"m.text"},"ts":1396270667000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"By the way, http://archive.germanforblack.com/articles/html5-for-web-developers states: It features find-as-you-type search, offline access, beautiful typography, technical references pulled inline, and alternate styles for handheld devices or low resolution displays.","msgtype":"m.text"},"ts":1396270719000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Where is promised offline access? ;-)","msgtype":"m.text"},"ts":1396270736000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"That version, which isn't the whole spec, does seem to have offline access","msgtype":"m.text"},"ts":1396270780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I can't find it.","msgtype":"m.text"},"ts":1396270817000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"I mean, how to make it work offline?","msgtype":"m.text"},"ts":1396270828000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: At least on Desktop Firefox it does an offline sync when you first load it and then transparently keeps working when you put the browser in offline mode","msgtype":"m.text"},"ts":1396270886000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"YOu don't have to \"do\" anything","msgtype":"m.text"},"ts":1396270895000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Ahh... That offline... I used wget -r -p ;-)","msgtype":"m.text"},"ts":1396270963000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Yeah, the one targeted at people who, when confronted with a problem, don't think \"I know, I'll use wget\" ;)","msgtype":"m.text"},"ts":1396271076000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I thought about \"total offline\" where I will have static version on my disk, and could open it by any local browser.","msgtype":"m.text"},"ts":1396271159000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"does anyone know if http://test.csswg.org/harness/suite/css-multicol-1_dev is still in use? tests are 404","msgtype":"m.text"},"ts":1396271295000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"By the way, it there any document describing difference between W3C's and WHATWG's HTML5?","msgtype":"m.text"},"ts":1396271363000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: http://www.w3.org/html/landscape/","msgtype":"m.text"},"ts":1396271388000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"sangwhan: http://hg.csswg.org/test/file/ccd08e6ef255/approved/css3-multicol/src ?","msgtype":"m.text"},"ts":1396271458000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sangwhan: Thank you. Both standards says that there is no such document. :-)","msgtype":"m.text"},"ts":1396271506000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"there is no spoon","msgtype":"m.text"},"ts":1396271525000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks, so the suite i was looking at earlier is dead now?","msgtype":"m.text"},"ts":1396271551000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"knows nothing about css-wg or processes there, it seems quite different from the other groups","msgtype":"m.emote"},"ts":1396271572000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"sangwhan: no idea. ask in #css or #testing on irc.w3.org","msgtype":"m.text"},"ts":1396271573000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok, gotcha","msgtype":"m.text"},"ts":1396271599000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"sangwhan, the csswg likes Process. A lot.","msgtype":"m.text"},"ts":1396271807000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: process with a capital P?","msgtype":"m.text"},"ts":1396271828000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1396271890000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Although not with a capital PR, sadly","msgtype":"m.text"},"ts":1396272012000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"PROcess","msgtype":"m.text"},"ts":1396272042000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"for the pros","msgtype":"m.text"},"ts":1396272047000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"You have to have a recognised qualification in bureaucracy to get entry?","msgtype":"m.text"},"ts":1396272128000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1396279421000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Replacing lone surrogates with U+FFFD wouldn't corrupt much, if any, I'd think.","msgtype":"m.text"},"ts":1396284537000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: There is no way to MQ based on device pixels directly.  'resolution' is based on the device-pixel-to-px ratio, if that's helpful.","msgtype":"m.text"},"ts":1396284675000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: But then I have the fact there's no image-resolution supported, right? :(","msgtype":"m.text"},"ts":1396285019000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes. What are you trying to do?","msgtype":"m.text"},"ts":1396285030000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just have a header image that's high quality, and not always loading the full DPI one","msgtype":"m.text"},"ts":1396285060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/DPI/resolution/","msgtype":"m.text"},"ts":1396285068000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bleh","msgtype":"m.text"},"ts":1396285069000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"In CSS or HTML?","msgtype":"m.text"},"ts":1396285087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sounds like CSS.","msgtype":"m.text"},"ts":1396285091000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CSS really.","msgtype":"m.text"},"ts":1396285093000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Use -webkit-image-set().","msgtype":"m.text"},"ts":1396285094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What about other browsers? :(","msgtype":"m.text"},"ts":1396285103000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"File bugs for them to implement image-set(). It's in Images 4.","msgtype":"m.text"},"ts":1396285113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does image-set not still render stuff at the CSS 96dpi-apparent?","msgtype":"m.text"},"ts":1396285169000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't know what you're asking.  But it believes you when you tell it what resolution the image is, and renders appropriately.","msgtype":"m.text"},"ts":1396285202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I didn't see your original question, but *-device-pixel-ratio plus a background-size property usually gets the job done.","msgtype":"m.text"},"ts":1396285205000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Yeah, manual sizing works too.  Browsers'll downscale the high-DPI image to the size you specify, which is basically the same thing.","msgtype":"m.text"},"ts":1396285255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if he even has any high DPI hardware to test this on…","msgtype":"m.emote"},"ts":1396285304000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1396285304000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I recommend not doing anything at all if you don't have the ability to test it.","msgtype":"m.text"},"ts":1396285324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, my tablet does. Okay.","msgtype":"m.text"},"ts":1396285328000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sangwhan: note that that landscape document is woefully incomplete (e.g. misses all the editorial changes, and a number of (unintentional?) normative changes","msgtype":"m.text"},"ts":1396285334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: Oh, I can borrow stuff to test, just slower turn-around town. :)","msgtype":"m.text"},"ts":1396285355000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders how much overlap there is between \"high resolution hardware\" and (say) \"200% zoom\"","msgtype":"m.emote"},"ts":1396285355000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"s/town/time/","msgtype":"m.text"},"ts":1396285372000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What am I even thinking.","msgtype":"m.text"},"ts":1396285375000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I use manual sizing and queries on the banner with a person on it here: https://kreftforeningen.no/","msgtype":"m.text"},"ts":1396285392000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Hixie: it's better than nothing...","msgtype":"m.text"},"ts":1396285409000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"SamB: Ideally, a 2x device and a 1x device on 200% zoom should be treated identically by all the things that care about resolution.","msgtype":"m.text"},"ts":1396285411000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: exactly my thoughts","msgtype":"m.text"},"ts":1396285431000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"sangwhan: sure, just making sure people don't have the wrong expectations :-)","msgtype":"m.text"},"ts":1396285442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: point","msgtype":"m.text"},"ts":1396285524000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"gsnedders: (Actually, on that banner I have a ton of different images. I have a 1-column, 2-column and 3-column version of the image, depending on your screen width. Double that for 1x and 2x resolution of each. And then there's 7 different people it rotates between. :D )","msgtype":"m.text"},"ts":1396285566000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"i really wish i could work out what people are doing ot accidentially file copy-and-paste content as bugs","msgtype":"m.text"},"ts":1396285734000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"against html?","msgtype":"m.text"},"ts":1396285855000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"perhaps they use devices on which it is easy to accidentally paste?","msgtype":"m.text"},"ts":1396285909000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I dont' think those devices exist.","msgtype":"m.text"},"ts":1396285939000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so you don't think pocket-drag-and-drop is likely?","msgtype":"m.text"},"ts":1396285963000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't, no. ^_^","msgtype":"m.text"},"ts":1396285984000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wilhelm: Well ooooh, aren't you fancy. :P","msgtype":"m.text"},"ts":1396286006000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Unix middle click? (c:","msgtype":"m.text"},"ts":1396286008000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Hixie: do you have user-agent data?","msgtype":"m.text"},"ts":1396286044000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"gsnedders: Responsive photography is fun, mmkay.","msgtype":"m.text"},"ts":1396286045000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"I guess that goes into the bugs, doesn't it","msgtype":"m.text"},"ts":1396286071000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wilhelm: :)","msgtype":"m.text"},"ts":1396286074000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I know I'm not going to get this done in the week I have before exam panic time :(","msgtype":"m.text"},"ts":1396286125000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You're procastina-hacking?","msgtype":"m.text"},"ts":1396286143000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Nah, I put aside this week to do stuff *I* want to do and don't have external deadlines for.","msgtype":"m.text"},"ts":1396286170000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: yeah","msgtype":"m.text"},"ts":1396286171000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Except dealing with taxes. Have external deadline for that.","msgtype":"m.text"},"ts":1396286181000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And I have to file taxes *on paper*. Ergh.","msgtype":"m.text"},"ts":1396286195000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Pretty sure that's cruel or unusual punishment.","msgtype":"m.text"},"ts":1396286242000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is your government from the past?","msgtype":"m.text"},"ts":1396286259000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"It can be done: a) online (except if 1, 2, or 3 apply); b) using third-party commerical software; c) on paper.","msgtype":"m.text"},"ts":1396286291000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I refuse to pay for the third-party software, and I'm in one of the categories forbidden from online, so…","msgtype":"m.text"},"ts":1396286309000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hey, i found a bug in the tokeniser tests","msgtype":"m.text"},"ts":1396286807000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Bad named entity: Abreve without a semi-colon\" doesn't have a \"ParserError\"","msgtype":"m.text"},"ts":1396286829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"file a bug","msgtype":"m.text"},"ts":1396286913000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"To quote your normal retort :)","msgtype":"m.text"},"ts":1396286921000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i have a patch","msgtype":"m.text"},"ts":1396286957000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what do i do with it?","msgtype":"m.text"},"ts":1396286959000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(also, are none of you actually checking the parser errors in the tokeniser tests? how was this not caught earlier?)","msgtype":"m.text"},"ts":1396287003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: CSSOM doesn’t say anything about surrogate code point. Does that mean they’re valid in any input and end up untouched in selectors, property values, etc?","msgtype":"m.text"},"ts":1396287006000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"The same as you did for the last contribution you made to html5lib! Create a pull request on it.","msgtype":"m.text"},"ts":1396287007000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: html5lib definitely doesn't check parse errors, I think Nolan's Obj-C parser does, but I don't know if he uses the tokenizer tests","msgtype":"m.text"},"ts":1396287050000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The tokenizer tests are somewhat dead, everybody just uses the tree-construction tests.","msgtype":"m.text"},"ts":1396287064000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: do the tree-construction tests subsume all the tokeniser tests?","msgtype":"m.text"},"ts":1396287082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(would be good to put that in the README if it's true)","msgtype":"m.text"},"ts":1396287089000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Not quite. jgraham had a programmatic conversion to tree constructor tests which I believe is public somewhere.","msgtype":"m.text"},"ts":1396287104000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(how the heck do i do a pull thingy. the google isn't helping me.)","msgtype":"m.text"},"ts":1396287107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well right now my tokeniser is just entity parsing, so i'll keep using them for now and see how bad they are","msgtype":"m.text"},"ts":1396287148000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if they're actually useless, i'll propose killing them entirely.","msgtype":"m.text"},"ts":1396287156000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"They shouldn't be useless","msgtype":"m.text"},"ts":1396287175000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's also the difficulty that different impls rely on different amounts of feedback from the tree constructor","msgtype":"m.text"},"ts":1396287208000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"git commit, git push?","msgtype":"m.text"},"ts":1396287216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i.e., some make transitions defined in the tree construction in the tokenizer)","msgtype":"m.text"},"ts":1396287226000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: Yeah, then go onto GH and create a PR.","msgtype":"m.text"},"ts":1396287235000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah i never really understood why we had tokeniser tests at all, but since we have them i figured i'd use them","msgtype":"m.text"},"ts":1396287237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: On a branch","msgtype":"m.text"},"ts":1396287238000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: but if jgraham's around he can help","msgtype":"m.text"},"ts":1396287244000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because I need to go :)","msgtype":"m.text"},"ts":1396287248000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm not, really","msgtype":"m.text"},"ts":1396287258000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i miss the good old days where submitting a patch was just svn diff | email","msgtype":"m.text"},"ts":1396287259000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't :p","msgtype":"m.emote"},"ts":1396287281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jesus, you have to git add first","msgtype":"m.text"},"ts":1396287315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(this is a good thing)","msgtype":"m.text"},"ts":1396287337000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if you say so","msgtype":"m.text"},"ts":1396287343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what username is git push asking me for?","msgtype":"m.text"},"ts":1396287350000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You need to set up ssh keys for github","msgtype":"m.text"},"ts":1396287377000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"to _submit a patch_ i need an _ssh key_?!","msgtype":"m.text"},"ts":1396287422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1396287428000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok forget that","msgtype":"m.text"},"ts":1396287447000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll just send gsnedders a diff when i'm done","msgtype":"m.text"},"ts":1396287458000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I think you can push over https with your password","msgtype":"m.text"},"ts":1396287527000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: yes, it'd be better if you could just submit merge requests by email like you used to be able to do with bzr","msgtype":"m.text"},"ts":1396287535000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hm, actually, this whole patch is wrong anyway. turns out \"&Abreve\" alone isn't a parse error, since it's not a valid entity and there's no trailing semicolon","msgtype":"m.text"},"ts":1396287601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is a \"parse error\"","msgtype":"m.text"},"ts":1396287621000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: http://www.whatwg.org/specs/web-apps/current-work/#parse-error","msgtype":"m.text"},"ts":1396287720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess I should have checked for that before saying that","msgtype":"m.text"},"ts":1396287760000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: I think html5lib-python tests *number* of parse errors (but not order), so I think the number /should/ be right","msgtype":"m.text"},"ts":1396287855000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, i just misread the test","msgtype":"m.text"},"ts":1396287872000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my implementation had a big \"XXX need to only fire parse error in certain cases\" thing where my bug was","msgtype":"m.text"},"ts":1396287888000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't expect that to be one of the first things i'd run into","msgtype":"m.text"},"ts":1396287898000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"FR: source code should be in color","msgtype":"m.text"},"ts":1396287914000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so it could be a big *red* XXX","msgtype":"m.text"},"ts":1396287933000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"As the top of source shows, Hixie is a fan of text-mode","msgtype":"m.text"},"ts":1396287957000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm, actually that's not a very good joke, since you can actually do that ...","msgtype":"m.text"},"ts":1396287958000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"actually i'm using delphi-mode here.","msgtype":"m.text"},"ts":1396287984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though it really doesn't colour much","msgtype":"m.text"},"ts":1396287992000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can't you add more patterns like usual?","msgtype":"m.text"},"ts":1396288018000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: that would involve figuring out elisp...","msgtype":"m.text"},"ts":1396288252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<3 elisp","msgtype":"m.emote"},"ts":1396288995000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hixie, you don't do elisp? What kind of emacs user are you? :)","msgtype":"m.text"},"ts":1396289087000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"a busy one? :-)","msgtype":"m.text"},"ts":1396289098000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Github wants your login if you're submitting a patch.  It prefers if you've set up ssh keys for identity, but you can do un/pw if necessary.  You have to swap what url you're pushing to, though.","msgtype":"m.text"},"ts":1396290521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you want to pretend that git add doesn't exist, just always commit with the -a flag as well, like `git commit -am \"foo\"`.","msgtype":"m.text"},"ts":1396290546000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(This won't catch new files that get added - you still have to manually add them - but it'll catch all your edits.)","msgtype":"m.text"},"ts":1396290565000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"good to know","msgtype":"m.text"},"ts":1396290769000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"load average: 37.79, 27.83, 16.00","msgtype":"m.text"},"ts":1396291244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that explains why i was getting high latency...","msgtype":"m.text"},"ts":1396291256000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all seems to be blog traffic","msgtype":"m.text"},"ts":1396291276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lots of lines of:","msgtype":"m.text"},"ts":1396291284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"10372 25923 lhunt      1:19.59  1.3  265m  39m  2.6 ?         php53.cgi","msgtype":"m.text"},"ts":1396291288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like lots and lots of traffic from 50.56.236.169","msgtype":"m.text"},"ts":1396291673000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic_: around?","msgtype":"m.text"},"ts":1396293317000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22296 has lots of background here but as Hixie said it didn't exactly land at a complete conclusion","msgtype":"m.text"},"ts":1396293450000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"jochen__: some thoughts from Domenic_ in particular at https://www.w3.org/Bugs/Public/show_bug.cgi?id=22296#c36","msgtype":"m.text"},"ts":1396293522000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"i wonder how the spec sets up the execution context","msgtype":"m.text"},"ts":1396293702000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: for a bit yeah","msgtype":"m.text"},"ts":1396293861000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1396293866000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Domenic_: so my question is, in https://code.google.com/p/chromium/issues/detail?id=346167 you say that chrome violates the es spec","msgtype":"m.text"},"ts":1396293906000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"but I fail to understand which part","msgtype":"m.text"},"ts":1396293916000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: \"A new execution context is created whenever control is transferred from the executable code associated with the currently running execution context to executable code that is not associated with that execution context.\"","msgtype":"m.text"},"ts":1396293928000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"jochen__: I believe that was fixed looking at the code recently; I haven't re-run the tests yet though.","msgtype":"m.text"},"ts":1396293937000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"as the spec allows the embedder to schedule whatever other tasks it feels like","msgtype":"m.text"},"ts":1396293951000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: oh we are talking about the scheduler, not chrome's nonstandard tests, sorry.","msgtype":"m.text"},"ts":1396293963000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"s/tests/methods","msgtype":"m.text"},"ts":1396293969000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1396293988000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"the spec says the embedder might mix in arbitrary other tasks as long as the js tasks are executed FIFO","msgtype":"m.text"},"ts":1396294006000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: and [[Call]] creates one too: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-built-in-function-objects-call-thisargument-argumentslist","msgtype":"m.text"},"ts":1396294011000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: yes, I meant, are there any guarntess about the context","msgtype":"m.text"},"ts":1396294088000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: you may be right. but i am not sure an entire event loop turn is allowed to pass.","msgtype":"m.text"},"ts":1396294184000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"does the es spec talk about event loops at all?","msgtype":"m.text"},"ts":1396294222000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1396294232000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I guess if you pretended the entire rendering-etc-cycle was one Task","msgtype":"m.text"},"ts":1396294247000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so that the ES task queue never emptied","msgtype":"m.text"},"ts":1396294251000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"then you could interleave rendering between promise Tasks","msgtype":"m.text"},"ts":1396294270000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"maybe we shouldn't have mutation observers, but use object.observe on the javascript objects representing the dom nodes","msgtype":"m.text"},"ts":1396294341000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"then all tasks are speced by ES","msgtype":"m.text"},"ts":1396294354000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: heh","msgtype":"m.text"},"ts":1396294378000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"i think there are backcompat restrictions on mutation observer firing order that make any FIFO model fail","msgtype":"m.text"},"ts":1396294379000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"jochen__: does that work nicely with different objectspaces seeing the same DOM?","msgtype":"m.text"},"ts":1396294382000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"jochen__: actually the more I read the more it seems like we need a SetAutorunMicrotasks(false) for the ES6 spec just like rafaelw added for V8","msgtype":"m.text"},"ts":1396294407000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"i.e. in \"content scripts\"","msgtype":"m.text"},"ts":1396294417000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"jochen__: and then HTML would say how to treat the queues in ES","msgtype":"m.text"},"ts":1396294435000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"i generally think the fact that ES and HTML are both speccing this is a disgrace","msgtype":"m.text"},"ts":1396294453000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"as it is ES is trying to defer to HTML but isn't being specific enough","msgtype":"m.text"},"ts":1396294462000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"i'm happy to integrate or provide hooks or whatever is needed","msgtype":"m.text"},"ts":1396294493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, maybe HTML people need to rewrite that attempt to defer and send in the patch?","msgtype":"m.text"},"ts":1396294497000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"aklein: sure, if the es guys are ok with saying \"there's no guarantee about the tasks at all other that then the ones that get eventually executed are run in fifo order\"","msgtype":"m.text"},"ts":1396294498000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Domenic_: I don't see how that's avoidable given the existence of non-browser embedders","msgtype":"m.text"},"ts":1396294499000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Hixie: have you read the task queues stuff that's in the ES6 draft?","msgtype":"m.text"},"ts":1396294527000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: well, it would be nice to reduce the duplication as much as possible","msgtype":"m.text"},"ts":1396294529000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"aklein: i guess. do browser embedders actually act significantly different from the HTML spec?","msgtype":"m.text"},"ts":1396294534000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"er, non-browser embedders","msgtype":"m.text"},"ts":1396294539000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I guess you could just have ES say nothing about running tasks, just queueing them","msgtype":"m.text"},"ts":1396294579000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: i read it at some point. i was hoping to get contacted by whoever was writing it.","msgtype":"m.text"},"ts":1396294585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that would be kinda funny","msgtype":"m.text"},"ts":1396294587000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Hixie: I would hope that too :(. Allen seems pretty set on \"I'm just going to spec a general model, I don't need to collaborate\"","msgtype":"m.text"},"ts":1396294608000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"an alternative is that ES requires the tasks to run before any other embedder event","msgtype":"m.text"},"ts":1396294616000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Domenic_, sounds like Allen","msgtype":"m.text"},"ts":1396294642000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jochen__: amusingly that's what we had implemented while object.observe was behind a flag","msgtype":"m.text"},"ts":1396294671000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"just because it was convenient","msgtype":"m.text"},"ts":1396294683000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"why did you change it?","msgtype":"m.text"},"ts":1396294690000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"wonders how stable object.observe is","msgtype":"m.emote"},"ts":1396294767000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jochen__: see wycats__ asking for basically that behavior in https://www.w3.org/Bugs/Public/show_bug.cgi?id=22296#c16, and Rafael's response","msgtype":"m.text"},"ts":1396294816000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1396294978000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"but I disagree with that statement","msgtype":"m.text"},"ts":1396294984000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"fifo requires to run a nasty message loop at the end of each event","msgtype":"m.text"},"ts":1396294994000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"and appears to be hard to spec","msgtype":"m.text"},"ts":1396294999000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"(woot, i pass namedEntities.test!)","msgtype":"m.text"},"ts":1396295000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thus hard to explain","msgtype":"m.text"},"ts":1396295003000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"= error prone","msgtype":"m.text"},"ts":1396295018000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1396295020000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"sounds odd if ES tasks had higher priority","msgtype":"m.text"},"ts":1396295121000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jochen__: it sounds like you're arguing for something that's simpler to spec/simpler to implement and disregarding how weird the actual behavior is?","msgtype":"m.text"},"ts":1396295131000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"hum, i think it's also less weird","msgtype":"m.text"},"ts":1396295190000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"like, now, in what context are the promise tasks executed?","msgtype":"m.text"},"ts":1396295204000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"a mutation observer could just do document.write()","msgtype":"m.text"},"ts":1396295218000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: as I said in my email, I think that's colored because you're one of like 20 people on the planet who have a very secure grasp of what's \"javascript\" and what's \"embedder\"","msgtype":"m.text"},"ts":1396295223000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"and so the promise task gets an entirely different world","msgtype":"m.text"},"ts":1396295226000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"so could a promise task, though","msgtype":"m.text"},"ts":1396295244000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1396295252000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"maybe you're arguing that Promises should just go first?","msgtype":"m.text"},"ts":1396295261000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"but then it's a defined series of updates to the context","msgtype":"m.text"},"ts":1396295261000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"(defined as in pure ES defined)","msgtype":"m.text"},"ts":1396295268000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"yes, that's what i meant to say","msgtype":"m.text"},"ts":1396295285000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"what about Object.observe callbacks?","msgtype":"m.text"},"ts":1396295334000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"all ES tasks should go in FIFO order","msgtype":"m.text"},"ts":1396295363000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"(basically using the microtasks autorun = true mode in v8)","msgtype":"m.text"},"ts":1396295383000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"that sounds a bit overconstrained ...","msgtype":"m.text"},"ts":1396295403000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"jochen__: so my argument there is, what's special about ES tasks?","msgtype":"m.text"},"ts":1396295451000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"or I guess you mean tasks that are unblocked?","msgtype":"m.text"},"ts":1396295456000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"as smaug____ said above, it seems sort of odd just to choose ES tasks","msgtype":"m.text"},"ts":1396295476000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"why is it odd?","msgtype":"m.text"},"ts":1396295522000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"how are they different than embedder tasks?","msgtype":"m.text"},"ts":1396295538000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"or more odd to prefer es tasks and mutation observers over postMessage()","msgtype":"m.text"},"ts":1396295539000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"(i think postMessage is a better example than setTimeout because the latter is a delayed task)","msgtype":"m.text"},"ts":1396295561000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: so there's a whole argument about why observers want to go before postMessage","msgtype":"m.text"},"ts":1396295563000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"es tasks (= promises, object.observe) + mutation observers are microtasks","msgtype":"m.text"},"ts":1396295567000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"postMessage() is macrotask","msgtype":"m.text"},"ts":1396295571000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"sort of suspects that HTML would have some nasty cases which the rules ES would come up with wouldn't handle compatibly ...","msgtype":"m.emote"},"ts":1396295574000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"which I was hoping rafaelw would provide on the email thread since he's good at stating it","msgtype":"m.text"},"ts":1396295593000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"but it really goes back to the birth of MutationObservers","msgtype":"m.text"},"ts":1396295598000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"which were designed as a replacement for Mutation Events","msgtype":"m.text"},"ts":1396295605000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"so nobody already wrote up the argument somewhere?","msgtype":"m.text"},"ts":1396295616000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i know","msgtype":"m.text"},"ts":1396295627000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"we wanted them to run asynchronously (to avoid the performance and security problems of Mutation Events)","msgtype":"m.text"},"ts":1396295628000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"but not so asynchronously that there'd be a paint before they ran","msgtype":"m.text"},"ts":1396295646000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"(so they can be used, e.g., to polyfill custom elements)","msgtype":"m.text"},"ts":1396295656000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"eww","msgtype":"m.text"},"ts":1396295678000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I hope you mean \"new elements\"?","msgtype":"m.text"},"ts":1396295691000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"microtasks are a Good Thing","msgtype":"m.text"},"ts":1396295691000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"!","msgtype":"m.text"},"ts":1396295699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"they are one of the innovations of the web platform IMO","msgtype":"m.text"},"ts":1396295701000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"SamB: sure: polyfill DOM features","msgtype":"m.text"},"ts":1396295705000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"traditional async data binding frameworks suffer badly from having only macrotasks","msgtype":"m.text"},"ts":1396295719000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but you realize that this is not possible, right?","msgtype":"m.text"},"ts":1396295727000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"if I modify a polyfilled element and immediately query it, the polyfill didn't have a chance to run yet","msgtype":"m.text"},"ts":1396295745000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: I was just thinking that ...","msgtype":"m.text"},"ts":1396295759000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"also giving separate view of world for event listeners played part in microtask design","msgtype":"m.text"},"ts":1396295806000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jochen__: sure, there are some things you lose by not acting synchrously","msgtype":"m.text"},"ts":1396295832000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"mutation events have shown that doing stuff synchronously isn't just workable solution for everything. And we need good performance","msgtype":"m.text"},"ts":1396295884000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in Gecko MutationObservers were even initially 7x faster way to observer changes in DOM than Mutation Events","msgtype":"m.text"},"ts":1396295919000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and should be better now )","msgtype":"m.text"},"ts":1396295928000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i guess in the end, i'd just like this behavior to be specified","msgtype":"m.text"},"ts":1396295980000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"wonders if there are any attempts to standardize the treatment of \"content scripts\" which have their own javascript objects, but which nevertheless interact with the same DOM tree","msgtype":"m.emote"},"ts":1396296021000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"jochen__: indeed, that I can totally agree with, it sounds like we need to get Hixie and Allen in a room together","msgtype":"m.text"},"ts":1396296023000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"IMO someone (whether HTML or ES or heck a third spec why not) should spec out something that matches all existing implementations. Which will be closer to HTML than what ES has.","msgtype":"m.text"},"ts":1396296030000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Then both HTML and ES delegate to that","msgtype":"m.text"},"ts":1396296044000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"SamB: i don't think so","msgtype":"m.text"},"ts":1396296079000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"http://esdiscuss.org/topic/es6-tasks-and-taskqueues#content-3 if you guys haven't seen Allen's response","msgtype":"m.text"},"ts":1396296094000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"SamB: what is the context here?","msgtype":"m.text"},"ts":1396296118000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(In Gecko content script is a privileged script which has access to the top level window object)","msgtype":"m.text"},"ts":1396296155000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, I know that there are some big differences between how Gecko and Chromium treat such scripts","msgtype":"m.text"},"ts":1396296217000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or, mmm, maybe you mean a different top level","msgtype":"m.text"},"ts":1396296242000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"smaug____: anyway, the Grease-style scripts for starters","msgtype":"m.text"},"ts":1396296255000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't know what is \"content script\" in blink","msgtype":"m.text"},"ts":1396296256000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1396296259000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jochen__: I have to run, sorry (I realize it's much later for you :)","msgtype":"m.text"},"ts":1396296277000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"er, +Monkey","msgtype":"m.text"},"ts":1396296304000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"smaug____: anyway, https://developer.chrome.com/extensions/content_scripts describes them as they apply to Chrome extensions","msgtype":"m.text"},"ts":1396296447000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh, but they get totally different view from page's scripts, right?","msgtype":"m.text"},"ts":1396296488000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, as do GreaseMonkey scripts now","msgtype":"m.text"},"ts":1396296528000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"though with GreaseMonkey the scripts *can* actually mess with the page's objects too","msgtype":"m.text"},"ts":1396296572000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1396296579000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"gecko background shows up there, I guess","msgtype":"m.text"},"ts":1396296589000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Okay, some people are just crazy. Naming a browser \"Web\"? For real?","msgtype":"m.text"},"ts":1396296961000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"my, what lovely documentation Chrome has for userscripts: http://www.chromium.org/developers/design-documents/user-scripts/","msgtype":"m.text"},"ts":1396297277000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyone know where aryeh's innerText spec went? and tests? http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-February/030179.html","msgtype":"m.text"},"ts":1396298408000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: ^","msgtype":"m.text"},"ts":1396298429000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think he put it up somewhere and then nobody implemented it","msgtype":"m.text"},"ts":1396298464000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Looks like it was at http://aryeh.name/spec/innertext/innertext.html","msgtype":"m.text"},"ts":1396298500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think I have a copy","msgtype":"m.text"},"ts":1396298539000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Wayback has it at http://web.archive.org/web/20121127212525/http://aryeh.name/spec/innertext/innertext.html","msgtype":"m.text"},"ts":1396298669000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll email him","msgtype":"m.text"},"ts":1396298800000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is somebody here involved with MediaQueryListListeners?","msgtype":"m.text"},"ts":1396298830000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i wonder why MediaQueryList doesn't simple define an onchanged event or something","msgtype":"m.text"},"ts":1396298852000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"TabAtkins, by default, I guess","msgtype":"m.text"},"ts":1396298857000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but instead defines it's on kind of event that's completely different from the rest","msgtype":"m.text"},"ts":1396298868000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Probably because MQL is dumb and stupid.","msgtype":"m.text"},"ts":1396298880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can we update the spec","msgtype":"m.text"},"ts":1396298891000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"pretty please","msgtype":"m.text"},"ts":1396298894000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Mail www-style?","msgtype":"m.text"},"ts":1396298897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"with sugar on top","msgtype":"m.text"},"ts":1396298897000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1396298932000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1396299084000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Domenic_: re your exception \"proximate cause\" thing, what we could do is have each place that fires an exception get a unique ID (maybe even a real GUID, though that would be a bit overlong, maybe something shorter)","msgtype":"m.text"},"ts":1396299264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Where is MQL defined?","msgtype":"m.text"},"ts":1396299545000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, OM View","msgtype":"m.text"},"ts":1396299961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so what would be the process to make that change happen?","msgtype":"m.text"},"ts":1396300136000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I just responded. We figure out what to do, edit the spec accordingly, file bugs, done.","msgtype":"m.text"},"ts":1396300165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1396300174000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"SimonSapin: my thinking was to let them pass through as in the dom. but it's not explicit. also see https://www.w3.org/Bugs/Public/show_bug.cgi?id=25110","msgtype":"m.text"},"ts":1396300297000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well CSS backslash-escapes explicitly decode surrogates to U+FFFD","msgtype":"m.text"},"ts":1396300391000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but yeah, they otherwise pass through implicitly","msgtype":"m.text"},"ts":1396300420000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I wish we could change that","msgtype":"m.text"},"ts":1396300426000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: that's a JS-escape, not a CSS escape","msgtype":"m.text"},"ts":1396300438000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: quoting from the bug: \"CSS.escape('\\uD800')\"","msgtype":"m.text"},"ts":1396300466000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yep. JS escape","msgtype":"m.text"},"ts":1396300476000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok, yes, \\uD800 is a JS escape","msgtype":"m.text"},"ts":1396300496000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but CSS.escape() just lets it though","msgtype":"m.text"},"ts":1396300506000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1396300511000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"encoding it as \\D800 would not work","msgtype":"m.text"},"ts":1396300522000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1396300529000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but we could change it i guess","msgtype":"m.text"},"ts":1396300557000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i don't see the point if it's not possible to change in the dom","msgtype":"m.text"},"ts":1396300573000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is it?","msgtype":"m.text"},"ts":1396300589000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document.write() and innerHTML might be more constrained","msgtype":"m.text"},"ts":1396300626000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but still, I’d prefer rust-cssparser to work with UTF-8 input rather than UCS-2","msgtype":"m.text"},"ts":1396300646000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: you have to do better than that :-P","msgtype":"m.text"},"ts":1396300986000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"surrogates are evil and we should limit the spread of the infection as much as possible","msgtype":"m.text"},"ts":1396301016000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"now you're not making sense. evil is not a diseases","msgtype":"m.text"},"ts":1396301139000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/s//","msgtype":"m.text"},"ts":1396301148000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not making ense?","msgtype":"m.text"},"ts":1396301169000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"that's right","msgtype":"m.text"},"ts":1396301174000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"now you're not making ene. evil i not a dieae\"","msgtype":"m.text"},"ts":1396301990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well he didn’t use a s/s//g","msgtype":"m.text"},"ts":1396302250000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"s/// on irc always has dwim flags implied","msgtype":"m.text"},"ts":1396302387000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"dwim?","msgtype":"m.text"},"ts":1396302500000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"do what i mean","msgtype":"m.text"},"ts":1396302631000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1396302987000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i refactored my code, changing hundreds of lines, using a different approach, etc.","msgtype":"m.text"},"ts":1396303006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it fixed my test! U+0000 numeric character references now parse ok!","msgtype":"m.text"},"ts":1396303022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"next bug: U+0001.","msgtype":"m.text"},"ts":1396303026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"-_-","msgtype":"m.text"},"ts":1396303027000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sounds good re: exception IDs","msgtype":"m.text"},"ts":1396303286000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"do you think anyone would go for it?","msgtype":"m.text"},"ts":1396303420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess we haven't shown very compelling use cases yet. Although it's clearly better than the current \"name\" stuff.","msgtype":"m.text"},"ts":1396303515000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"well, it's interesting for loggin","msgtype":"m.text"},"ts":1396303550000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"g","msgtype":"m.text"},"ts":1396303551000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think blink-dev discussed doing something similar for app cache errors?","msgtype":"m.text"},"ts":1396303555000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(though i wonder if the messages aren't good enough in practice)","msgtype":"m.text"},"ts":1396303569000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1396303572000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think the relying-on-messages argument you made is a strong incentive to do something better.","msgtype":"m.text"},"ts":1396303673000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i'd be worried about how effective it would be. We have enough trouble getting people to just fire the right exception in the first place, let alone the right exception with the right unique code.","msgtype":"m.text"},"ts":1396303723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's true, hmm. perhaps because \"the right exception\" gives only incremental benefits so not worth the effort? the question is, would this be worth the effort.","msgtype":"m.text"},"ts":1396303835000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Blink has recently done a major exception message cleanup so at least their thoughts are with developers on these issues…","msgtype":"m.text"},"ts":1396303872000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Wait so innerText is not cross-browser yet?","msgtype":"m.text"},"ts":1396304311000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"innerText is a disaster","msgtype":"m.text"},"ts":1396304448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it depends on CSS, e.g.","msgtype":"m.text"},"ts":1396304453000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Do you mean .textContent, Domenic_ ?","msgtype":"m.text"},"ts":1396304491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nope I meant innerText. Didn't know it was a disaster…","msgtype":"m.text"},"ts":1396304568000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yup, total disaster.","msgtype":"m.text"},"ts":1396304582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"re: exception IDs + proximate cause: as long as we realize that the developer workflow is not \"see exception X, search the spec for X, gain enlightenment, fix bug\". Rather, it's  \"see exception X, google X, find the stackoverflow article, copy/paste the fix\" :)","msgtype":"m.text"},"ts":1396304616000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Either case benefits from a reasonably unique X, though.","msgtype":"m.text"},"ts":1396304632000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: yeah that's a good point to keep in mind. I was in particular thinking about more advanced use cases trying to recover from specific errors and let others bubble.","msgtype":"m.text"},"ts":1396304692000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"WebDriver specs how to get readable text from an element: https://dvcs.w3.org/hg/webdriver/raw-file/default/webdriver-spec.html#rendering-text","msgtype":"m.text"},"ts":1396304788000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"It's not pretty.","msgtype":"m.text"},"ts":1396304801000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"jsbell: i think the workflow for which this matters is more \"script catches unexpected exception x, logs it to server, author looks at aggregate data regarding exceptions to figure out what to fix next\"","msgtype":"m.text"},"ts":1396304893000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think a guid would be fine for this.  Why not do a full guid?","msgtype":"m.text"},"ts":1396305004000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ewww","msgtype":"m.text"},"ts":1396305012000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: It's just for identification purposes.","msgtype":"m.text"},"ts":1396305024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: full guid is a bit excessively verbose in a log and would make specs look ugly","msgtype":"m.text"},"ts":1396305043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: we probably only need a fraction of the digits","msgtype":"m.text"},"ts":1396305052000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok, I guess so.","msgtype":"m.text"},"ts":1396305064000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just want it large enough that I can randomly-generate it and still be assured that it's unique.","msgtype":"m.text"},"ts":1396305081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as an anecdotal data point, the freepascal compiler guys use YYYYMMDDNN for their internal errors.","msgtype":"m.text"},"ts":1396305100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think we should use that because we have less coordination","msgtype":"m.text"},"ts":1396305113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That doesn't help multiple specs, yeah.","msgtype":"m.text"},"ts":1396305119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but it's the kind of size identifier that i think would make sense","msgtype":"m.text"},"ts":1396305129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You can get much smaller if you can coordinate.  You need more than 10 digits for randomness to work.","msgtype":"m.text"},"ts":1396305157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"might be better for the IDs to be [spec author][whatever] where [spec author] is two digits and [whatever] is, well, whatever.","msgtype":"m.text"},"ts":1396305168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Still need coordination for that.","msgtype":"m.text"},"ts":1396305183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well some minimal coordination is fine","msgtype":"m.text"},"ts":1396305195000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, two digits should be enough for everyone","msgtype":"m.text"},"ts":1396305197000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(i mean, we have that today for exceptions)","msgtype":"m.text"},"ts":1396305203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: We have massive overlap today for exceptions, which is what we're trying to avoid.","msgtype":"m.text"},"ts":1396305224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we are?","msgtype":"m.text"},"ts":1396305238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: let \"digit\" be alphnum.","msgtype":"m.text"},"ts":1396305241000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought that was the point, yes.","msgtype":"m.text"},"ts":1396305246000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not sure what you mean by \"avoid overlap\"","msgtype":"m.text"},"ts":1396305258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought the goal here was just to provide uniquely identifiable IDs per exception throw site","msgtype":"m.text"},"ts":1396305277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Today, the \"coordination\" is \"fire one of the errors from this list\".","msgtype":"m.text"},"ts":1396305286000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"by coordination, i mean that today if you want a new exception you just ask anne to addi t","msgtype":"m.text"},"ts":1396305300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This list does not get extended by people. It's short and more or less static.","msgtype":"m.text"},"ts":1396305302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"clearly sha1:file:line:column","msgtype":"m.text"},"ts":1396305305000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: not great for discriminatory catching","msgtype":"m.text"},"ts":1396305318000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I'm not sure what you're replying to.","msgtype":"m.text"},"ts":1396305332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: i do like the idea of hashing the final result somehow so that the spec author part is not derivable","msgtype":"m.text"},"ts":1396305334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was kidding","msgtype":"m.text"},"ts":1396305343000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Sorry got offline for a bit, replying to guid idea","msgtype":"m.text"},"ts":1396305353000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I mean what is a \"throw site\"","msgtype":"m.text"},"ts":1396305356000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: That's why you choose enough digits that the ID can be randomly generated without fear of collision.","msgtype":"m.text"},"ts":1396305358000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: I thought the idea was to be able to tell better what place the exception came from.  A guid identifying each place that can throw an error does that, no?","msgtype":"m.text"},"ts":1396305388000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: A line in the spec that throws something.","msgtype":"m.text"},"ts":1396305399000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"another option is we just make a web service for ourselves that vends unique IDs","msgtype":"m.text"},"ts":1396305411000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then it could trivially avoid duplicates","msgtype":"m.text"},"ts":1396305416000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and without coordination, people *will* end up seeing values without being able to find out any indication of their meaning ...","msgtype":"m.text"},"ts":1396305433000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Yeah, that would let you be smaller without collision fear.","msgtype":"m.text"},"ts":1396305441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: my use case is being able to write catch clauses that only catch a specific expected error and let others bubble or hit window.onerror.","msgtype":"m.text"},"ts":1396305523000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(don't tell me you've never had a GUID for which you couldn't find any corresponding name ...)","msgtype":"m.text"},"ts":1396305525000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"So human readable, yet unique, names would give more readable catch code.","msgtype":"m.text"},"ts":1396305615000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"are we thinking integers here, or strings?","msgtype":"m.text"},"ts":1396305706000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was thinking strings","msgtype":"m.text"},"ts":1396305718000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Integers for IDs seems bad in general","msgtype":"m.text"},"ts":1396305727000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I love to learn, feel free to teach me what you are the most passionate about :)","msgtype":"m.text"},"ts":1396306086000,"senderName":"aretecode","senderId":"aretecode@irc"},
{"content":{"body":"the id generator could take 4 random words from this channel from the past 48h. then make sure that google brings up no results for that identifier, and that it hasn't been generated before.","msgtype":"m.text"},"ts":1396306452000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"choosecatchesalthoughpolyfill","msgtype":"m.text"},"ts":1396306553000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that doesn't help the reader to make any sense of anything","msgtype":"m.text"},"ts":1396306916000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: i didn't see that as a requirement above","msgtype":"m.text"},"ts":1396306964000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SamB: i guess it will make the reader go \"wtf\" and then google it and find relevant information, though","msgtype":"m.text"},"ts":1396307000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SamB: the .message is the way the reader makes sense of something","msgtype":"m.text"},"ts":1396307355000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: that's a bit long, ideally these should be short so the don't make specs unreadable","msgtype":"m.text"},"ts":1396307370000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Guru meditation number: 1314c98d-8667-4599-a4ac-ffc56420d7ba)","msgtype":"m.text"},"ts":1396307402000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Hixie: point ...","msgtype":"m.text"},"ts":1396307403000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"jsbell: yeah. but shorter. :-)","msgtype":"m.text"},"ts":1396307414000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, how to keep the search results from being flooded with people asking about the exceptions rather than what one might actually want to find?","msgtype":"m.text"},"ts":1396307469000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"A stack overflow link about it would be fine","msgtype":"m.text"},"ts":1396307497000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we set up google alerts for the ids and give useful answers on stackoverflow","msgtype":"m.text"},"ts":1396307549000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: the generator could just try fewer words or other words until it finds an id shorter than X characters","msgtype":"m.text"},"ts":1396307623000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/cgi/exception-id-generator/","msgtype":"m.text"},"ts":1396309339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all up to y'all now if we actually want to do this","msgtype":"m.text"},"ts":1396309372000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i checked and that won't generate any duplicates for at least the next 100,000 IDs.","msgtype":"m.text"},"ts":1396309396000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(after 100,000 it started getting a little crazy to check for duplicates the way i was doing it)","msgtype":"m.text"},"ts":1396309410000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ... what","msgtype":"m.text"},"ts":1396309447000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is it april 1 in your time, heh","msgtype":"m.text"},"ts":1396309460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hm?","msgtype":"m.text"},"ts":1396309488000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"re: link looks like joke","msgtype":"m.text"},"ts":1396309495000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1396309501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how does it not look like joke. heh","msgtype":"m.text"},"ts":1396309511000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well it's not very funny to start with? :-)","msgtype":"m.text"},"ts":1396309534000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"re: if an API expects me to use opaque strings in my source code as exception identifiers, API will be shot directly into sun","msgtype":"m.text"},"ts":1396309535000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"no april 1 \"jokes\" are funny","msgtype":"m.text"},"ts":1396309542000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sounds like you missed the earlier conversation","msgtype":"m.text"},"ts":1396309564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whatever it was, this result seems catastrophic enough to make me dubious of its conclusion :P","msgtype":"m.text"},"ts":1396309612000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie - Bikeshed style: The user agent must throw an <code>SyntaxError</code> exception with ID \"<dfn exception-code>3d7geaa26h</dfn>\".","msgtype":"m.text"},"ts":1396309622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but I will happily scroll back","msgtype":"m.text"},"ts":1396309624000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: thanks, added","msgtype":"m.text"},"ts":1396309742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1396309861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fixes the error in the bikeshed one where he'd hardcoded the code TabAtkins gave","msgtype":"m.emote"},"ts":1396309872000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1396309879000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok i generated 1,575,472 codes in the order it's going to generate them, and still no dupes","msgtype":"m.text"},"ts":1396310100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm pretty confident that this will work out ok, dupe-wise","msgtype":"m.text"},"ts":1396310114000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sounds like the core problem it's trying to solve is \"it's hard to find where the unexpected thing you're seeing is defined in a spec somewhere, so google for this magic thing\"","msgtype":"m.text"},"ts":1396310139000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that sort of sounds like an ineffective whack-a-mole, though; exceptions are one extremely tiny subset of \"can't find this thing in a spec\" (or on stackoverflow, or whatever)","msgtype":"m.text"},"ts":1396310177000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Yeah, you have to gen about 60M before you should expect the first dupe.","msgtype":"m.text"},"ts":1396310181000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: That's one reason, not all.","msgtype":"m.text"},"ts":1396310202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's not even Domenic_'s primary reason.","msgtype":"m.text"},"ts":1396310216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what i suspect would be the actual result (to describe my initial reaction) is that people would start using them in code as part of exception handlers, which would be completely horrible since they're not human-readable","msgtype":"m.text"},"ts":1396310221000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: the main reason is that right now, InvalidStateErr is fired from zillions of places","msgtype":"m.text"},"ts":1396310222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: and you don't know which is the proximate cause of a particular one you're holding onto","msgtype":"m.text"},"ts":1396310232000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not really clear what better way to solve this","msgtype":"m.text"},"ts":1396310250000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Especially if you grab it from window.error or the like.","msgtype":"m.text"},"ts":1396310252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1396310255000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: it's been my experience that if i don't actually check it, there'll be some error in my logic and the dupes will abound, so i felt better actually checking it :-)","msgtype":"m.text"},"ts":1396310314000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"closes all his related tabs and windows until Domenic_ manages to convince anyone else to use this","msgtype":"m.emote"},"ts":1396310341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i always just log a stack trace to the server (we really need better stack trace support) and moving on, since at least with the way I write things, if an exception gets to window (unless it's an event delegation thing, which it isn't for onerror), that's not the place where I'm going to examine the exception and try to recover from it","msgtype":"m.text"},"ts":1396310345000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Certainly, just letting you know what your expected range will be.","msgtype":"m.text"},"ts":1396310345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(some interesting half-edits in that run-on sentence)","msgtype":"m.text"},"ts":1396310368000,"senderName":"zewt","senderId":"zewt@irc"}
]