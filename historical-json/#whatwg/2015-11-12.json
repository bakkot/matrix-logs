[
{"content":{"body":"q2 2015, all your problems will be solved, and you'll have a freshly minted set of new problems","msgtype":"m.text"},"ts":1447299349000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"er, 2016 =]","msgtype":"m.text"},"ts":1447299363000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"gsnedders: could you have a look at https://github.com/whatwg/html/pull/329?","msgtype":"m.text"},"ts":1447316289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi annevk , all, I am having trouble with ServiceWorkers","msgtype":"m.text"},"ts":1447324931000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I have tried a few things","msgtype":"m.text"},"ts":1447324940000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"If I start a ServiceWorker locally at http://localhost:63342/rww-scala-js/root/html/foaf.html","msgtype":"m.text"},"ts":1447324970000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I can see it intercept local calls","msgtype":"m.text"},"ts":1447324981000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"But the serviceworker does not seem to catch a call to  https://joe.example:8443/2013/card#me","msgtype":"m.text"},"ts":1447325015000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"( without the hash )","msgtype":"m.text"},"ts":1447325030000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"$ curl -ik  https://joe.example:8443/2013/card | head","msgtype":"m.text"},"ts":1447325056000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"HTTP/1.1 401 Unauthorized","msgtype":"m.text"},"ts":1447325065000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Access-Control-Allow-Origin: *","msgtype":"m.text"},"ts":1447325065000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Content-Type: text/html; charset=utf-8","msgtype":"m.text"},"ts":1447325065000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"WWW-Authenticate: Signature realm=\"/\"","msgtype":"m.text"},"ts":1447325067000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Content-Length: 2374","msgtype":"m.text"},"ts":1447325069000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"If I run Chrome with `chromium --unsafely-treat-insecure-origin-as-secure=https://joe.example:8443 --user-data-dir=/tmp/hjs/ ` and start with a page  http:s//joe.example:8443/rww-scala-js/root/html/foaf.html","msgtype":"m.text"},"ts":1447325139000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"then the serviceworker won't load due to a TLS exception ( probably due to self signed cert )","msgtype":"m.text"},"ts":1447325171000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"What does call mean?","msgtype":"m.text"},"ts":1447325315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Self-signed certificates are a bad idea, just don't","msgtype":"m.text"},"ts":1447325333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"call = GET","msgtype":"m.text"},"ts":1447325349000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"That is not sufficient context","msgtype":"m.text"},"ts":1447325365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I am using self signed cert to run the server on my local machine","msgtype":"m.text"},"ts":1447325368000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"this is the call annevk https://github.com/read-write-web/rww-scala-js/blob/fcec7c88c78f626ec04d60e64999deda15633958/src/main/scala/rww/store/WebResourceActor.scala#L106","msgtype":"m.text"},"ts":1447325494000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"and this is the fetch event listener https://github.com/read-write-web/rww-scala-js/blob/fcec7c88c78f626ec04d60e64999deda15633958/src/main/scala/rww/auth/ServiceWorkerAuth.scala#L137","msgtype":"m.text"},"ts":1447325566000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I don't really understand this code","msgtype":"m.text"},"ts":1447325693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Are you saying that foaf.html has some JavaScript that uses fetch() to get to the joe.example resource and somehow that does not get intercepted?","msgtype":"m.text"},"ts":1447325745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes. fhttp://localhost:63342/rww-scala-js/root/html/foaf.html is a Single Page App written in Scala-JS compiled to JS that uses fetch ( first link above ) to get the joe.example card URL that I curled above. That fetch does not get intercepted.","msgtype":"m.text"},"ts":1447325856000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"does not get intercepted by the ServiceWorker.","msgtype":"m.text"},"ts":1447325889000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Not sure if that is an issue with ServiceWorkers only intercepting HTTPS calls, or what it could be due to.","msgtype":"m.text"},"ts":1447325954000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"this is a cross origin call.","msgtype":"m.text"},"ts":1447325976000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Also I am not even sure if I am meant to be able to do this.","msgtype":"m.text"},"ts":1447326023000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"That sounds like a bug. Are you sure the service worker is properly registered and used for the page?","msgtype":"m.text"},"ts":1447326049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well it does register and intercepts. Perhaps it needs to be tuned","msgtype":"m.text"},"ts":1447326144000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I have the following in my console","msgtype":"m.text"},"ts":1447326179000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":" ServiceWorker registered Thu Nov 12 2015 10:40:33 GMT+0000 (GMT) successfully : {\"installing\":null,\"waiting\":null,\"active\":{}}","msgtype":"m.text"},"ts":1447326179000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"btw. the initial non service worker Fetch code does receive a response and it knows it received a 401","msgtype":"m.text"},"ts":1447326291000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"but it only seems to get 1 header -> content-type:text/html; charset=utf-8","msgtype":"m.text"},"ts":1447326313000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"That is Chromium 48.0.2561.0 canary","msgtype":"m.text"},"ts":1447326391000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"perhaps I'll try Firefox to see","msgtype":"m.text"},"ts":1447326398000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Same in Firefox Developer edition 44.0a2 (2015-11-05)","msgtype":"m.text"},"ts":1447326604000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"If I fetch localhost content I get full headers in the fetch response, but with remote fetch I only get the content-type header","msgtype":"m.text"},"ts":1447326718000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Ms2ger: when you introduced /target override/, is it correct that everything else in the algorithm is then relative to target override?","msgtype":"m.text"},"ts":1447326824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: that seems wrong, because if that is the case, why would you not just set target to something else","msgtype":"m.text"},"ts":1447326839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: it's unclear whether that means the service worker is the active one for the document","msgtype":"m.text"},"ts":1447326908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, uh, not sure","msgtype":"m.text"},"ts":1447327034000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, the thing is that you need to set event.target to something else?","msgtype":"m.text"},"ts":1447327050000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, but the rest of the algorithm uses event.target for various things","msgtype":"m.text"},"ts":1447327092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1447327102000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I'm thinking the rest of the algorithm should probably use /target/ for that","msgtype":"m.text"},"ts":1447327105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: reviewing this","msgtype":"m.text"},"ts":1447327108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that may be the case, yes","msgtype":"m.text"},"ts":1447327118000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I'm in the process of making this all a bit more clear with more explicit arguments","msgtype":"m.text"},"ts":1447327131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I guess I'll fix that in a distinct commit","msgtype":"m.text"},"ts":1447327150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: somewhat surprised nobody catched it thus far","msgtype":"m.text"},"ts":1447327156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mhh, trying to test the ServiceWorker.","msgtype":"m.text"},"ts":1447327172000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Ms2ger: confirms that this is almost never read","msgtype":"m.text"},"ts":1447327175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if I remove all the code from the fetchListener except the log then I do see the service worker intercepting the call.","msgtype":"m.text"},"ts":1447327367000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"What it does not like is the  e.respondWith { ... }","msgtype":"m.text"},"ts":1447327375000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"it seems","msgtype":"m.text"},"ts":1447327378000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: what does it do?","msgtype":"m.text"},"ts":1447327434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well without e.respondWith  it tells me I made a call in the console. with it not even that happens.  https://github.com/read-write-web/rww-scala-js/blob/fcec7c88c78f626ec04d60e64999deda15633958/src/main/scala/rww/auth/ServiceWorkerAuth.scala#L137","msgtype":"m.text"},"ts":1447327567000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"annevk, do you have a test too? :)","msgtype":"m.text"},"ts":1447327646000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I haven't checked yet","msgtype":"m.text"},"ts":1447327668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: still refactoring","msgtype":"m.text"},"ts":1447327674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: did you create a test for the target override stuff?","msgtype":"m.text"},"ts":1447327684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good question","msgtype":"m.text"},"ts":1447327704000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"which is pretty weird...","msgtype":"m.text"},"ts":1447327822000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Ms2ger: cannot really find anything","msgtype":"m.text"},"ts":1447327866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, html/syntax/parsing/the-end.html has a check","msgtype":"m.text"},"ts":1447327893000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"  window.addEventListener(\"load\", this.step_func_done(function(e) {","msgtype":"m.text"},"ts":1447327901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"    assert_equals(e.target, document, \"target should be document\");","msgtype":"m.text"},"ts":1447327901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: so per the language in the spec right now, ignoring the obvious problems with talking about members directly rather than internal slots, that event would also dispatch on document","msgtype":"m.text"},"ts":1447327968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: and not only that, its phase on window would be BUBBLING and/or CAPTURE","msgtype":"m.text"},"ts":1447328031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it seems you chickened out of testing eventPhase though","msgtype":"m.text"},"ts":1447328078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, patches welcome, or file an issue :)","msgtype":"m.text"},"ts":1447328206000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: <script>document.onload=onload=x=>w(x.eventPhase)</script> is my minimal testcase","msgtype":"m.text"},"ts":1447328357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: returns 2 and only once","msgtype":"m.text"},"ts":1447328363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so yeah, /override target/ should only override event's target and nothing else","msgtype":"m.text"},"ts":1447328393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: haha","msgtype":"m.text"},"ts":1447328876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I just noticed I fixed this exactly two years after you broke it with https://github.com/whatwg/dom/commit/d0f2c0bbc940061ac2a4623553de5c26409cce96","msgtype":"m.text"},"ts":1447328888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://github.com/w3c/web-platform-tests/issues/2321","msgtype":"m.text"},"ts":1447329006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this actually works https://github.com/read-write-web/rww-scala-js/blob/fcb110260cf8fe39fa5260bae14d7a73181bdf9d/src/main/scala/rww/auth/ServiceWorkerAuth.scala#L137","msgtype":"m.text"},"ts":1447329163000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: you can keep sending me scala links, but my ability to comprehend them is not increasing","msgtype":"m.text"},"ts":1447329191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yep. It's probably to do with my trying to cast the scala promise in the andThen { } which returns a Promise[Any] to a Promise[Response] is the problem","msgtype":"m.text"},"ts":1447329233000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I'll ask the scala-js folks","msgtype":"m.text"},"ts":1447329281000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"yep.","msgtype":"m.text"},"ts":1447329404000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"there is a problem with scala-js that I need to work out with them, but I have found a workaround https://github.com/read-write-web/rww-scala-js/blob/b342c8f9c54825eab300ac264a4f26774ea31b52/src/main/scala/rww/auth/ServiceWorkerAuth.scala#L137","msgtype":"m.text"},"ts":1447329530000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"annevk: that actually works. The problem is here that I only get the Content-Type header, not the WWW-Authenticate one","msgtype":"m.text"},"ts":1447329556000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Ms2ger: is filing issues for tests that need to be created acceptable?","msgtype":"m.text"},"ts":1447329569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I guess I could do that more often","msgtype":"m.text"},"ts":1447329575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yes, please do","msgtype":"m.text"},"ts":1447329592000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bblfish: so you're using CORS?","msgtype":"m.text"},"ts":1447329598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps I have to add another header to cors.","msgtype":"m.text"},"ts":1447329615000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: are you using Access-Control-Expose-Headers?","msgtype":"m.text"},"ts":1447329624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nope. TimBl's card has also this one Access-Control-Allow-Credentials: true","msgtype":"m.text"},"ts":1447329651000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"curl  -i https://www.w3.org/People/Berners-Lee/card | less","msgtype":"m.text"},"ts":1447329690000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I'll try adding those. Perhaps then I won't actually need serviceworkers...","msgtype":"m.text"},"ts":1447329780000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"If you just want to inspect a networked resource, you don't need service workers","msgtype":"m.text"},"ts":1447329818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I added `Access-Control-Expose-Headers: WWW-Authenticate` and I can see it then from the normal fetch","msgtype":"m.text"},"ts":1447332948000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"thanks for the help.  Sitting on too many bleeding edges : Fetch, WebCrytpo, Scala-JS, ServiceWorkers, soon IndexDb ( to store the key at least. )","msgtype":"m.text"},"ts":1447333062000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"...cors,","msgtype":"m.text"},"ts":1447333110000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"... TLS","msgtype":"m.text"},"ts":1447333170000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"CORS is pretty old now","msgtype":"m.text"},"ts":1447334025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on the other hand, TLS…","msgtype":"m.text"},"ts":1447334309000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Well, yes","msgtype":"m.text"},"ts":1447335263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it possible to escape @mention and emoji with github flavored markdown? backslash doesn't work. `@`mention works but looks funny","msgtype":"m.text"},"ts":1447336151000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"html entity doesn't work either","msgtype":"m.text"},"ts":1447336300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: interested in providing another PR?","msgtype":"m.text"},"ts":1447336690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm taking a stab at adding that text.","msgtype":"m.text"},"ts":1447336717000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1447336788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: non-visible space?","msgtype":"m.text"},"ts":1447336797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep, thanks","msgtype":"m.text"},"ts":1447336919000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://github.com/jch/html-pipeline/issues/232","msgtype":"m.emote"},"ts":1447337334000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/whatwg/resources.whatwg.org/pull/10 https://github.com/whatwg/resources.whatwg.org/pull/11","msgtype":"m.text"},"ts":1447338937000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: should prolly get Domenic to review? Looks fine to me though","msgtype":"m.text"},"ts":1447339336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1447339421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: assuming you have smoke tested these LGTM","msgtype":"m.text"},"ts":1447341322000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i have yeah","msgtype":"m.text"},"ts":1447341337000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Seems like there should be a better way to do the first...","msgtype":"m.text"},"ts":1447341337000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But all I can think of is code-ifying everything","msgtype":"m.text"},"ts":1447341364000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"first what?","msgtype":"m.text"},"ts":1447341377000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Maybe there is a Markdown escaper algorithm somewhere","msgtype":"m.text"},"ts":1447341378000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The first PR","msgtype":"m.text"},"ts":1447341383000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, yeah i suppose you could have a state machine instead, but this is only 1000 characters","msgtype":"m.text"},"ts":1447341438000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i considered having a single replace(regexp, func) but i thought it looked too bloated","msgtype":"m.text"},"ts":1447341562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"this seems like simplest to maintain","msgtype":"m.text"},"ts":1447341576000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah seems good","msgtype":"m.text"},"ts":1447341662000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: sanity check, please :)  \"Let target be the MessagePort in whose port message queue the event e now finds itself.\" sounds odd to me in https://html.spec.whatwg.org/multipage/comms.html#dom-messageport-postmessage  e is a DOM event which has just been created, not put to any queue","msgtype":"m.text"},"ts":1447341812000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and \"port message queue \" is a task source, not some DOM event queue","msgtype":"m.text"},"ts":1447341830000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"am I missing something?","msgtype":"m.text"},"ts":1447341862000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://github.com/w3c/webvtt/pull/253 would like review from html folks on this. (i think the lack of \"parse error\" is technically wrong for a lone ampersand, but then webvtt parser doesn't discuss parse errors in the first place, yet...)","msgtype":"m.text"},"ts":1447341866000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/333","msgtype":"m.text"},"ts":1447342270000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: true, they are not all bleeding edge. :-) Still quite a lot of new tools to get a grip with.","msgtype":"m.text"},"ts":1447347637000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"smaug____: yeah that reads weird","msgtype":"m.text"},"ts":1447350639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: furthermore, it seems weird that the MessageEvent is created way before being dispatched","msgtype":"m.text"},"ts":1447350656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: since that means it might be created with the wrong prototype chain and such","msgtype":"m.text"},"ts":1447350666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: which doesn't seem like something we'd want","msgtype":"m.text"},"ts":1447350676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I was wondering that too, but then wasn't sure whether the spec actually defines which prototype should be used","msgtype":"m.text"},"ts":1447350703000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't think we really do at the moment, but we should down the line","msgtype":"m.text"},"ts":1447350978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It might fall out of IDL","msgtype":"m.text"},"ts":1447350985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But we should at least be creating objects in the correct place, not in something that could be a different thread","msgtype":"m.text"},"ts":1447351012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I love how DreamHost is now contacting me again about TLS issues since it appears my blogpost has been doing the rounds","msgtype":"m.text"},"ts":1447351093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: ah, thanks for filing an issue","msgtype":"m.text"},"ts":1447351578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: is there any reason there is no .registration on the window-side ServiceWorker object?","msgtype":"m.text"},"ts":1447357365000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"sigh i broke the quoting anyway","msgtype":"m.text"},"ts":1447357457000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1447357716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: so window could do navigator.serviceWorker.controller.registration.update()","msgtype":"m.text"},"ts":1447357746000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe because it would cause a cycle through the registration.installing attribute and friends?","msgtype":"m.text"},"ts":1447360486000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"fg","msgtype":"m.text"},"ts":1447362775000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1447362778000,"senderName":"wanderview","senderId":"wanderview@irc"}
]