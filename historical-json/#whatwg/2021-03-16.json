[
{"content":{"body":"hi annevk, reminding you the new Fetch/RT integration revision is waiting for another review pass :) thanks","msgtype":"m.text"},"ts":1615882206000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: thanks, I'll take a look now, got distracted yesterday somehow","msgtype":"m.text"},"ts":1615892396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks annevk, happens","msgtype":"m.text"},"ts":1615893059000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: I updated the small things. Still need to revive the PR template and investigate how we're doing with test coverage. Regarding the new \"streams for response\", not sure what the best course of action is - maybe export only the incremental one and \"update timing info\"? this way FETCH and other non-incremental clients can update the repsonse time themselves at the end instead of relying on the \"fully read\" operation","msgtype":"m.text"},"ts":1615896133000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"to do that for them","msgtype":"m.text"},"ts":1615896133000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I think it might help to write a PR for XHR (and in this PR add coverage for fetch()) to help answer that question; that way it's a little clearer what the cost for callers is and how we could minimize that and make the architecture fit","msgtype":"m.text"},"ts":1615896525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: also, if there's only one time remaining it seems we could update timings for a response earlier (right before we expose response to the caller), is there a reason you didn't pursue that?","msgtype":"m.text"},"ts":1615896640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A neck: We do update response timing earlier, at the fetch finale. We would have to take extra TAO care of decoded/encoded body size, but maybe that would be best, and we might not even need the stream override","msgtype":"m.text"},"ts":1615897462000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Annevk (was autocorrected :)) ^","msgtype":"m.text"},"ts":1615897482000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Let me prototype with xhr/fetch and see how that looks, maybe with a few options","msgtype":"m.text"},"ts":1615897514000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: that sounds good! So encoded/decoded size and response end are the tricky bits?","msgtype":"m.text"},"ts":1615897881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk : yes.","msgtype":"m.text"},"ts":1615899455000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"TabAtkins: I can file a separate bug for this, but I was wondering a similar thing about <url>","msgtype":"m.text"},"ts":1615916662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: presumably that's parsed as a URL, which requires a base URL, which comes from where?","msgtype":"m.text"},"ts":1615916683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: (I guess this would happen as the last step of parsing per your comments as the parser only seems to obtain a string from it.)","msgtype":"m.text"},"ts":1615916716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://drafts.csswg.org/css-values/#relative-urls","msgtype":"m.text"},"ts":1615916720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"url of the stylesheet","msgtype":"m.text"},"ts":1615916729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: right, but the parser stylesheet doesn't have any fields","msgtype":"m.text"},"ts":1615916764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, interpreting values happens outside the parser's responsibility. all it knows is that it emitted a function","msgtype":"m.text"},"ts":1615916791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so what calls the parser and handles that?","msgtype":"m.text"},"ts":1615916858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i dunno, the CSS implementation?","msgtype":"m.text"},"ts":1615916874000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I guess I don't understand why the parser doesn't create CSSOM objects, similar to the HTML parser","msgtype":"m.text"},"ts":1615916899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: it just seems like there's a bunch of details not really defined anywhere","msgtype":"m.text"},"ts":1615916921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh no, i absolutely wouldn't want to do that. The parser gets invoked by a lot of things that wouldn't want anything to do with CSSOM","msgtype":"m.text"},"ts":1615916928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus CSSOM doesn't have objects for most levels of \"things\" in CSS; beyond the basic outer stuff it's mostly strings","msgtype":"m.text"},"ts":1615916965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, creating intermediate data structure is indeed better, but it should at least be clear how these things end up being created","msgtype":"m.text"},"ts":1615917052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"an*","msgtype":"m.text"},"ts":1615917064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like ideally you can read <style>, follow links, and understand how it all works; and ideally we wouldn't have multiple definitions of stylesheet or if we need to have them at least it would be clear they are meant to be diff","msgtype":"m.text"},"ts":1615917198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: might have to avoid empty hosts too, come to think of it","msgtype":"m.text"},"ts":1615921851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am in the middle of typing a long response","msgtype":"m.text"},"ts":1615921884000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ðŸ˜Š","msgtype":"m.text"},"ts":1615922088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Looking forward to reading that tomorrow!","msgtype":"m.text"},"ts":1615922140000,"senderName":"annevk","senderId":"annevk@irc"}
]