[
{"content":{"body":"hey can anyone answer a question for me for the utf8 encoding spec?","msgtype":"m.text"},"ts":1385304257000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"werle: if you ask the question, maybe ;)","msgtype":"m.text"},"ts":1385304374000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"It may just be too early for my brain","msgtype":"m.text"},"ts":1385304403000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"but I'm having trouble with this step :\t7. Let bytes be a list of bytes whose first byte is code point / 64count + offset.","msgtype":"m.text"},"ts":1385304420000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"my implementation is in C","msgtype":"m.text"},"ts":1385304441000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"and my problem is understanding the formula from the verbiage","msgtype":"m.text"},"ts":1385304490000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"bytes[c++] = (code_point / pow(64.0, (float) count)) + offset;","msgtype":"m.text"},"ts":1385304541000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"is that correct?","msgtype":"m.text"},"ts":1385304550000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"annevk-cloud: thanks again","msgtype":"m.text"},"ts":1385304561000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"looks okay, not sure it's the most efficient to do it that way","msgtype":"m.text"},"ts":1385304597000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"In C you can do some bit shifting iirc, I recommend studying some implementations","msgtype":"m.text"},"ts":1385304651000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"The spec just describes a black box you need to be equivalent too, not identical","msgtype":"m.text"},"ts":1385304713000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"ah great thanks !","msgtype":"m.text"},"ts":1385304955000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"you definitely shouldn't have floating-point in utf-8-handling code :)","msgtype":"m.text"},"ts":1385307240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"meanwhile, boggling at python multiprocessing breaking atexit","msgtype":"m.text"},"ts":1385307279000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: yes very true :)","msgtype":"m.text"},"ts":1385309464000,"senderName":"werle","senderId":"werle@irc"},
{"content":{"body":"boggling at python twice in one day (where the hell is sigsetmask or sigprocmask)","msgtype":"m.text"},"ts":1385311474000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"new in version 3.3\" oh come on","msgtype":"m.text"},"ts":1385311672000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Then use 3.3, it's very nice :)","msgtype":"m.text"},"ts":1385312717000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: Not helpful :p","msgtype":"m.text"},"ts":1385317425000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"still votes for dropping Py2 support in html5lib, even though it's practically impossible to do :P","msgtype":"m.emote"},"ts":1385317753000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: No you don't","msgtype":"m.text"},"ts":1385317792000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it'd make all the changes I want to make to the input stream so much easier!","msgtype":"m.text"},"ts":1385317972000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Now with Django finally supporting Python 3, I'll start porting quite a lot of code :)","msgtype":"m.text"},"ts":1385318267000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Most of the stuff I support already runs on both, so it's now just a question of when I drop Py2.","msgtype":"m.text"},"ts":1385318293000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah. True dat. I fixed the few issues with the repatch scripts I have, in order to be able to run the tests on python 3.3. It has a nicer unittest module, with mocking.","msgtype":"m.text"},"ts":1385318361000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: Django eh? I'm sorry :p","msgtype":"m.text"},"ts":1385323702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"</troll>","msgtype":"m.text"},"ts":1385323745000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Django is good, if you want all the magic it does.","msgtype":"m.text"},"ts":1385323790000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Even the ORM?","msgtype":"m.text"},"ts":1385323807000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The ORM is okay, provided you don't want more than it does.","msgtype":"m.text"},"ts":1385323856000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also, sudo get me a drink.","msgtype":"m.text"},"ts":1385323870000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"been a couple years since i used it, but the main design failure i found in it was that it tried to give an API that pretends you're not on top of SQL at all","msgtype":"m.text"},"ts":1385323903000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so the instant you had to do something they didn't think of, you had to drop all the way to building queries yourself","msgtype":"m.text"},"ts":1385323924000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Right, my limited experience of these things is that the level of control offered by SQLAlchemy is the minimum you need for applications that use SQL in a serious way","msgtype":"m.text"},"ts":1385324017000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So the idea of using something that's known to be much more limited isn't that appealing","msgtype":"m.text"},"ts":1385324037000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"also having an API that allows running on SQL and non-SQL data stores without the application knowing about it is ... useless","msgtype":"m.text"},"ts":1385324087000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The ORM is awesome.","msgtype":"m.text"},"ts":1385325887000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"So much better than SQLAlchemy(puke)","msgtype":"m.text"},"ts":1385325895000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Lots of bugs. Took me ages to debug and find many of them.","msgtype":"m.text"},"ts":1385326034000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I'm porting all systems in Desktop previously built on flask and sqlalchemy to Django.","msgtype":"m.text"},"ts":1385326048000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I don't care about fighting with sqlalchemy anymore :)","msgtype":"m.text"},"ts":1385326095000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: I don't htink we can be friends","msgtype":"m.text"},"ts":1385328913000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sorry","msgtype":"m.text"},"ts":1385328916000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1385328918000,"senderName":"jgraham","senderId":"jgraham@irc"}
]