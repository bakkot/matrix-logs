[
{"content":{"body":"mkwst: hey, are you around?","msgtype":"m.text"},"ts":1542111960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if so, I'm wondering about CORS and navigations a bit","msgtype":"m.text"},"ts":1542111971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and https://wicg.github.io/cors-rfc1918/ might do some of that I guess","msgtype":"m.text"},"ts":1542112023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: but I'm not entirely convinced it handles enough of the details, esp for navigations","msgtype":"m.text"},"ts":1542112257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: or maybe the plan at this point is to wait for Origin Policy/Manifest, which would make this simpler?","msgtype":"m.text"},"ts":1542112279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi. I'm kinda around!","msgtype":"m.text"},"ts":1542114093000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'm 100% sure that that doc doesn't handle all the details. It's old and sketchy and hasn't gotten enough review because we collectively haven't been spending time on it.","msgtype":"m.text"},"ts":1542114126000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"What details are you interested in, in particular?","msgtype":"m.text"},"ts":1542114143000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"^^ annevk","msgtype":"m.text"},"ts":1542114146000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I'm wondering how difficult it is to patch navigation to use CORS, in a way that also makes sense for service workers, etc.","msgtype":"m.text"},"ts":1542114277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and I guess a little bit about what it would mean; it'd definitely not impact WindowProxy security checks for instance, so it's mostly about whether you maybe get to be in the same process","msgtype":"m.text"},"ts":1542114328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: (this might be interesting for Chrome on Android I suspect)","msgtype":"m.text"},"ts":1542114365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it seems you mostly tried to patch this entirely on Fetch's side, and maybe that works, I guess I should see if that does the right thing for redirects and if it does it's probably okay","msgtype":"m.text"},"ts":1542114423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm. I worry a bit about CORS becoming a gateway to process isolation, because I'm not actually sure it's a good thing for folks to open up cross-origin access to their resources more generally.","msgtype":"m.text"},"ts":1542114429000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"When I last looked at this in detail (2016?), it made sense to do all the work in Fetch.","msgtype":"m.text"},"ts":1542114495000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But the navigation algorithm has evolved since then. Some of the work might need to move to HTML for CORS-RFC1918 in particular.","msgtype":"m.text"},"ts":1542114518000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That model might work for process isolation as well, as it's really concerned with passing the _preflight_, not the actual resource response.","msgtype":"m.text"},"ts":1542114548000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Which means that the actual response value doesn't have to be opened up cross-origin. The server just needs to grant access to ask for the thing in the way it's being asked for.","msgtype":"m.text"},"ts":1542114586000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah, it might be that a simple flag is sufficient, but then the question is whether redirects can taint such a flag or not","msgtype":"m.text"},"ts":1542114652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I hope redirects properly taint sec-metadata, I haven't really looked at how that works","msgtype":"m.text"},"ts":1542114683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sec-metadata recalculates the value on each pass through fetch.","msgtype":"m.text"},"ts":1542114739000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"At least, that's what I remember writing down.","msgtype":"m.text"},"ts":1542114745000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: so A -> A' -> B -> A means same-site, cross-site, cross-site?","msgtype":"m.text"},"ts":1542114788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And in particular if there's another -> A it remains cross-site?","msgtype":"m.text"},"ts":1542114810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes. See https://mikewest.github.io/sec-metadata/#abstract-opdef-set-the-sec-metadata-header-for-a-request and https://mikewest.github.io/sec-metadata/#abstract-opdef-obtain-the-site-value.","msgtype":"m.text"},"ts":1542114844000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"The latter walks the whole URL list, with the intent of keeping the `cross-site` taint once anything in the redirect chain is cross-site.","msgtype":"m.text"},"ts":1542114867000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1542114910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't shipped it in Chrome yet mostly because of bugs in that redirect code that I haven't had time to fix.","msgtype":"m.text"},"ts":1542114922000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And because it apparently broke Switzerland.","msgtype":"m.text"},"ts":1542114937000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Anyway, that kind of thing but for response headers is more involved and often done wrong (e.g., see Timing-Allow-Origin)","msgtype":"m.text"},"ts":1542114940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it's involved for request headers too then, lol","msgtype":"m.text"},"ts":1542114959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Redirects...","msgtype":"m.text"},"ts":1542114961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Firefox still has bugs with Origin too around this kind of logic","msgtype":"m.text"},"ts":1542114980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(We have tests (that Chrome's currently failing) at https://wpt.fyi/results/fetch/sec-metadata/redirect?label=experimental)","msgtype":"m.text"},"ts":1542115009000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I can imagine that kind of bug being common. It's easy to forget redirects when specifying things like TAO.","msgtype":"m.text"},"ts":1542115034000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I did try to encourage them to carefully study CORS when doing that, but...","msgtype":"m.text"},"ts":1542115063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's some brokenness in this model too though in that for <iframe> and I think <img> cross-origin -> same-origin does end up meaning same-origin, but for fetch() it doesn't (and I suspect that in particular for <img> the spec might be wrong)","msgtype":"m.text"},"ts":1542115154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, maybe CORS-like stuff for navigations is more doable than I thought","msgtype":"m.text"},"ts":1542115195000,"senderName":"annevk","senderId":"annevk@irc"}
]