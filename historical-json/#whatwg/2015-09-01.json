[
{"content":{"body":"Wheee OK nobody needs to install FreePascal anymore https://github.com/domenic/wattsi-server","msgtype":"m.text"},"ts":1441066217000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Although I'm pretty sure as of this morning everyone already did, lol.)","msgtype":"m.text"},"ts":1441066233000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1441067300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1441067351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1441067353000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: you gonna work on a patch to make the build use this, or do you want me to?","msgtype":"m.text"},"ts":1441067398000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: already done :) https://github.com/whatwg/html-build/pull/10","msgtype":"m.text"},"ts":1441067418000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dang","msgtype":"m.text"},"ts":1441067442000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: but error handling is annoying... https://superuser.com/questions/965558/get-curl-to-output-non-2xx-to-stderr-but-2xxs-to-a-file","msgtype":"m.text"},"ts":1441067444000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1441067451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: still counting on you for the separate-directories patch though!","msgtype":"m.text"},"ts":1441067457000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK yeah will do that","msgtype":"m.text"},"ts":1441067486000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: about that superuser question, we should talk to Daniel","msgtype":"m.text"},"ts":1441067524000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about curl","msgtype":"m.text"},"ts":1441067532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he works a Mozilla now, right?","msgtype":"m.text"},"ts":1441067541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Daniel Stenberg","msgtype":"m.text"},"ts":1441067559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah people on Twitter are referring me to him","msgtype":"m.text"},"ts":1441067874000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I feel kind of bad bugging the creator of a program on usage info though, especially for something that popular","msgtype":"m.text"},"ts":1441067896000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dunno, he seems to be pretty enthusiastic about helping people solve problems","msgtype":"m.text"},"ts":1441068229000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and if it were any easy problem you'd already have an answer","msgtype":"m.text"},"ts":1441068249000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well a couple people pinged him so we'll see what happens","msgtype":"m.text"},"ts":1441068360000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1441070143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think @WHATWG should retweet https://twitter.com/mnot/status/638532265388019712","msgtype":"m.text"},"ts":1441073895000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Also MikeSmith I am 90% sure https://twitter.com/domenic/status/638531133274132481 will work, woo.","msgtype":"m.text"},"ts":1441073943000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: awesome","msgtype":"m.text"},"ts":1441074172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: heh, that mnot tweet is nice too","msgtype":"m.text"},"ts":1441074320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mnot, you have been assimilated","msgtype":"m.text"},"ts":1441074332000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: http://w3techs.com/technologies/details/en-utf16/all/all sees less than 0.007% of websites using UTF-16. Do we have telemetry on this? Do we have a threshold for dropping support of things?","msgtype":"m.text"},"ts":1441080474000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Domenic: retweeted","msgtype":"m.text"},"ts":1441080496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There is still a lot of low-hanging fruit","msgtype":"m.text"},"ts":1441082186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, I was going to fix base URLs but that's harder than expected","msgtype":"m.text"},"ts":1441082426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here is one minor tweak we made, https://github.com/tmpvar/jsdom/blob/master/lib/jsdom/living/helpers/document-base-url.js especially https://github.com/tmpvar/jsdom/blob/master/lib/jsdom/living/helpers/document-base-url.js#L34","msgtype":"m.text"},"ts":1441083121000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: i think i have another issue with the url spec :/","msgtype":"m.text"},"ts":1441085700000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"you have a minute?","msgtype":"m.text"},"ts":1441085713000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: sure","msgtype":"m.text"},"ts":1441087228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Awesome!","msgtype":"m.text"},"ts":1441087298000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Okay so, assume we have an object with mixed in urlutils. it calls set the input with some string as input, let's go with \"example\"","msgtype":"m.text"},"ts":1441087362000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: hmm so URLUtils has open issues","msgtype":"m.text"},"ts":1441087396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but okay","msgtype":"m.text"},"ts":1441087402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So set the input parses the stuff, calls get the base etc. and comes up with some resulting url: http://example.org/example","msgtype":"m.text"},"ts":1441087415000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"so we have an object, its input is set to example, and its url is set to http://example.org/example","msgtype":"m.text"},"ts":1441087446000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: yes","msgtype":"m.text"},"ts":1441087538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we now call the hash attribute setter with a string \"foobar\", it does the whole parsing spiel again, we get a resulting object: input is \"example\", url is \"http://example.org/example#foobar\"","msgtype":"m.text"},"ts":1441087541000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"when we now call the href attribute getter, it calls reset the input, which in turn calls set the input with \"example\" and \"http://example.org/example#foobar\"","msgtype":"m.text"},"ts":1441087629000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"set the input then sets input and url, but since input is non-null, it then re-parses the url with input, resulting in #foobar being dropped","msgtype":"m.text"},"ts":1441087667000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"and i really, really hope i didn't miss any part of the spec again :S","msgtype":"m.text"},"ts":1441087812000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: no you didn't","msgtype":"m.text"},"ts":1441087983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: the problem is that once you set the hash attribute the input also needs to be updated","msgtype":"m.text"},"ts":1441088004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: I fixed URLUtils the wrong way and I haven't really worked on specifying it in the right way yet since I didn't have access to update HTML directly, where we should probably put some of the logic","msgtype":"m.text"},"ts":1441088040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thank god, i was getting worried i'm constantly misreporting everything","msgtype":"m.text"},"ts":1441088065000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"well then, I'll wait until you're done with the new changes","msgtype":"m.text"},"ts":1441088089000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: https://github.com/whatwg/url/issues/62 and https://github.com/whatwg/url/issues/61","msgtype":"m.text"},"ts":1441088412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: it's quite the mess :-(","msgtype":"m.text"},"ts":1441088417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh right, those tie into the whole thing","msgtype":"m.text"},"ts":1441088744000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"I assumed the spec would be in a working state without those reworks :(","msgtype":"m.text"},"ts":1441088797000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Means I can put it off again though, so that's fine for me for now :D","msgtype":"m.text"},"ts":1441088850000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Maybe I should add a note to the API since it'll take me a couple of weeks before I'm going to get to that I think","msgtype":"m.text"},"ts":1441088875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Done","msgtype":"m.text"},"ts":1441089021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I had it happen again that a link to source became source","msgtype":"m.text"},"ts":1441090054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Locally building is pretty much a must it seems, looking forward to somebody making it faster","msgtype":"m.text"},"ts":1441090184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is it just the symlink to the `source` file that happens with? or others too?","msgtype":"m.text"},"ts":1441091198000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I haven't tested the others, they're mostly static so it doesn't matter","msgtype":"m.text"},"ts":1441091225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1441091266000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well *grumble grumble* we wouldn't have a problem at all with that if we just moved the build tools into the html repo","msgtype":"m.text"},"ts":1441091352000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think Domenic made some reasonable arguments against that","msgtype":"m.text"},"ts":1441091428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I think the problem would be gone too if we had an input and output directory","msgtype":"m.text"},"ts":1441091453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1441091462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: remind where we discussed how we wanted that to work? was it on IRC, or is there an open issue that details the proposal/requirement?","msgtype":"m.text"},"ts":1441091551000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/whatwg/html-build/issues/3","msgtype":"m.text"},"ts":1441091650000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1441091684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Source repository history should not be intermingled with build tool revisions.\"","msgtype":"m.text"},"ts":1441091687000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I actualy agree with that","msgtype":"m.text"},"ts":1441091696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I'm surprised/disappointed that I didn't think come to that conclusion on my own already","msgtype":"m.text"},"ts":1441091749000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I blame lack of sleep","msgtype":"m.text"},"ts":1441091754000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: anyway, thanks for the citation","msgtype":"m.text"},"ts":1441091850000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"stares at the dozens of unread github notifications in his inbox","msgtype":"m.emote"},"ts":1441091892000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"As long as he's doing the work, I don't care. But it seems strange to pretend that these are really separate projects. *shrug* Whatever. I like green bikesheds! :)","msgtype":"m.text"},"ts":1441091921000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"MikeSmith: i checked the \"Popular sites using UTF-16\" and afaict they're not using utf-16","msgtype":"m.text"},"ts":1441091982000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g. Epoker.com has Content-Type:·text/html;·charset=utf-8 and then <meta·http-equiv=\"Content-Type\"·content=\"text/html;·charset=utf-16\">","msgtype":"m.text"},"ts":1441092051000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so i wouldn't give much weight to that statistic","msgtype":"m.text"},"ts":1441092075000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"eh?","msgtype":"m.text"},"ts":1441092139000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmmm. sorry MikeSmith. i meant SimonSapin ^","msgtype":"m.text"},"ts":1441092145000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1441092150000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wake up, SimonSapin!","msgtype":"m.text"},"ts":1441092162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: ^","msgtype":"m.text"},"ts":1441092168000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mkwst: what is an endpoint origin?","msgtype":"m.text"},"ts":1441094917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given: `fetch(\"https://example.com/endpoint\", { body: fd })`, it would be `example.com`.","msgtype":"m.text"},"ts":1441094971000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Basically, I'd like to be able to lock submissions down to a certain origin. The previous draft did so by overriding `fetch(url)` with `send(url)`, processing the URL there, and then setting a bunch of flags which prevented redirects.","msgtype":"m.text"},"ts":1441095045000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"So, my thought at the moment is that I could put some flags on the FormData object which would govern the ways in which Fetch can use it.","msgtype":"m.text"},"ts":1441095085000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://code.google.com/p/chromium/codesearch#chromium/src/net/base/mime_util.cc&rcl=1427945811&l=384 a curious reference to w3schools","msgtype":"m.text"},"ts":1441095105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah. No idea. Let's git blame that, shall we? :)","msgtype":"m.text"},"ts":1441095129000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"also, there used to be a list of JavaScript MIME types there per https://www.w3.org/Bugs/Public/show_bug.cgi?id=28397 but they are now gone","msgtype":"m.text"},"ts":1441095155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://codereview.chromium.org/3311016 *shrug*","msgtype":"m.text"},"ts":1441095179000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"more like *shudder*","msgtype":"m.text"},"ts":1441095314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://blink.lc/chromium/tree/components/mime_util/mime_util.cc#n59","msgtype":"m.text"},"ts":1441095368000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"which doesn't seem to match HTML, but also doesn't seem to have generated compatibility issues, since it hasn't changed in a long time,","msgtype":"m.text"},"ts":1441095407000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Domenic: annevk: so what should i do differently to make PRs automatically close as merged?","msgtype":"m.text"},"ts":1441095409000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think the git push --force to the branch must have failed","msgtype":"m.text"},"ts":1441095435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"$ git push --force","msgtype":"m.text"},"ts":1441095520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Everything up-to-date","msgtype":"m.text"},"ts":1441095520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it said","msgtype":"m.text"},"ts":1441095527000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: did you do git checkout branch-name too?","msgtype":"m.text"},"ts":1441095828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1441095841000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and then git push --force and then git checkout master","msgtype":"m.text"},"ts":1441095843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1441095846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1441095849000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I haven't tried this new approach myself yet so I'm not a 100% that Domenic gave the correct instructions","msgtype":"m.text"},"ts":1441095884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but when you update the branch that should appear on the GitHub site","msgtype":"m.text"},"ts":1441095906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok. yeah i didn't know what message to expect so i figured \"Everything up-to-date\" meant things were going a-OK","msgtype":"m.text"},"ts":1441095972000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: do you want to merge 69 or can I make an attempt?","msgtype":"m.text"},"ts":1441096583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do it","msgtype":"m.text"},"ts":1441096592000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so yeah, I've had the same problem as you, I think Domenic's instructions are incomplete","msgtype":"m.text"},"ts":1441096707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You probably want `git push --force origin <branch>`","msgtype":"m.text"},"ts":1441096791000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"A more complete syntax is git push [options] <remote> <local_ref>:<remote_branch>","msgtype":"m.text"},"ts":1441097991000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the behaviour of bare git push depends on the defaults which depend on the version of git you are running","msgtype":"m.text"},"ts":1441098021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(unless you changed them)","msgtype":"m.text"},"ts":1441098039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: e.g., you already forgot you can iterate FormData, see https://xhr.spec.whatwg.org/#formdata","msgtype":"m.text"},"ts":1441099185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: but you working through it SGTM","msgtype":"m.text"},"ts":1441099224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: s/forgot/didn't know/. But it's nice of you to assume competence.","msgtype":"m.text"},"ts":1441099244000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1441099254000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":":-) >it's nice of you to assume competence","msgtype":"m.text"},"ts":1441099806000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"one of the things that has always made me feel nice when hsivonen reviews code I write is that he always assumes I must have had a good rational reason for writing something in the way I did (instead of not actually having known the better way until he told me).","msgtype":"m.text"},"ts":1441099957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, annevk: window.focus() works on Chrome as well. Thanks :)","msgtype":"m.text"},"ts":1441101013000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"MikeSmith: seems more folks are confused by the caniuse.com panel: https://www.w3.org/Bugs/Public/show_bug.cgi?id=28709","msgtype":"m.text"},"ts":1441101495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I wonder if we can adjust the stylesheet or closing mechanism somewhat to make it easier","msgtype":"m.text"},"ts":1441101516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: another thing that happens to me in Firefox is that once the scrollbar appears it goes right over the thing that allows you to close the widget, making it particularly hard to close","msgtype":"m.text"},"ts":1441101568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, changing that requires changing Wattsi","msgtype":"m.text"},"ts":1441101929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Should `toX` methods return a `Promise<X>` or `X`? It seems like some APIs do the one and some the other.","msgtype":"m.text"},"ts":1441103253000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: depends on whether IO is involved I guess","msgtype":"m.text"},"ts":1441103297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm. Ok.","msgtype":"m.text"},"ts":1441103319000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I guess it's safer, but more cumbersome, to return a Promise.","msgtype":"m.text"},"ts":1441103332000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"safer == future proof.","msgtype":"m.text"},"ts":1441103343000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: if this is for FormData synchronous is fine","msgtype":"m.text"},"ts":1441103381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is.","msgtype":"m.text"},"ts":1441103388000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"ok. that's simpler then.","msgtype":"m.text"},"ts":1441103393000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I wonder if I can get the HTML bug count to be <300 by the end of the week","msgtype":"m.text"},"ts":1441103438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's easy. WONTFIX, WONTFIX, WONTFIX.","msgtype":"m.text"},"ts":1441103456000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"nah, with WONTFIX it is considered etiquette to at least explain why; which takes time","msgtype":"m.text"},"ts":1441103621000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"INVALID, INVALID, INVALID is much more efficient","msgtype":"m.text"},"ts":1441103630000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1441103635000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That is how we got from ~500 to <400","msgtype":"m.text"},"ts":1441103703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's a bit trickier now","msgtype":"m.text"},"ts":1441103708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As in, it involves work","msgtype":"m.text"},"ts":1441103729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: if you're around, can you please give me push access to w3c/gh-backup?","msgtype":"m.text"},"ts":1441105770000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1441105813000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gimme a minute, on from my mobile","msgtype":"m.text"},"ts":1441105834000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"darobin: should be good to go now","msgtype":"m.text"},"ts":1441106068000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: it seems like you can provide a PR for https://www.w3.org/Bugs/Public/show_bug.cgi?id=27852 right? It didn't break the web...","msgtype":"m.text"},"ts":1441107763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was looking at that yesterday. It's not clear to me where the sniffing is actually done in HTML.","msgtype":"m.text"},"ts":1441107782000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"If you point me to the right spot, I'm happy to submit a PR.","msgtype":"m.text"},"ts":1441107792000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Somewhere around https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script ?","msgtype":"m.text"},"ts":1441107940000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: <script> doesn't do any sniffing","msgtype":"m.text"},"ts":1441107996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it just takes the response and executes it","msgtype":"m.text"},"ts":1441108002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And things like importScripts?","msgtype":"m.text"},"ts":1441108009000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: what you want is to prevent that","msgtype":"m.text"},"ts":1441108013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it seems importScripts() also does some non-2xx check","msgtype":"m.text"},"ts":1441108034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I guess it needs to be somewhere in https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block but Ms2ger is correct that'd we also want to affect importScripts() and new Worker/new SharedWorker","msgtype":"m.text"},"ts":1441108240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I guess a fix is not very straightforward","msgtype":"m.text"},"ts":1441108272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess we'd need to start by factoring out \"fetch a script source\" or something","msgtype":"m.text"},"ts":1441108312000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: doing it in Fetch might actually be easier, but I'm not sure if that's a good idea","msgtype":"m.text"},"ts":1441108316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: yeah, that kind of refactoring before doing the greater Fetch refactoring might be a good idea","msgtype":"m.text"},"ts":1441108356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't really figured out how to best tackle Fetch refactoring yet","msgtype":"m.text"},"ts":1441108370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"requires so many changes","msgtype":"m.text"},"ts":1441108377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah :/","msgtype":"m.text"},"ts":1441108623000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, I'm happy to give you a PR. I'm even happier to wait until you've done a lot of work to make my PR easy. :)","msgtype":"m.text"},"ts":1441108648000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"doing it in Fetch seems simple. just return a network error given a set of properties on the request and the response mime type.","msgtype":"m.text"},"ts":1441108671000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"but it's probably the wrong layer.","msgtype":"m.text"},"ts":1441108678000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I think so, yes","msgtype":"m.text"},"ts":1441108694000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SimonSapin, zcorpan: I think zcorpan has previously shown w3techs.com to be bogus, but browser-based telemetry would be interesting","msgtype":"m.text"},"ts":1441109350000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so we don’t have telemetry for that yet?","msgtype":"m.text"},"ts":1441109385000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: what's the recommended way to test non-UTF encoders without relying on a server and using Web-exposed functionality only?","msgtype":"m.text"},"ts":1441109395000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SimonSapin: AFAIK, we don't","msgtype":"m.text"},"ts":1441109404000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: philipj asked me to expose the `opaque` flag to the web so we can test it in layout tests (and, I suppose, so folks could construct excitingly opaque FormData objects). Before I do that, how strongly do you feel about changing from `FormData` with a flag to `CredentialFormData`?","msgtype":"m.text"},"ts":1441109418000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: well I didn't ask you to expose it, just if it should be exposed :)","msgtype":"m.text"},"ts":1441109604000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"well, that seems to be an implicit request to expose it, right? :)","msgtype":"m.text"},"ts":1441109620000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"surely something should cause it to become set, which isn't currently the case","msgtype":"m.text"},"ts":1441109621000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"thanks MikeSmith!","msgtype":"m.text"},"ts":1441109624000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"philipj: right. that's the second patch I sent you. :)","msgtype":"m.text"},"ts":1441109639000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: eh, well OK :)","msgtype":"m.text"},"ts":1441109647000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"ah there it is, fd->makeOpaque()","msgtype":"m.text"},"ts":1441109667000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah. basically, i don't mind exposing that. i can't think of much of a use case, other than transferring a FormData object to a new context via `postMessage()`.","msgtype":"m.text"},"ts":1441109709000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"but not being able to think of a use case is probably just my small-mindedness.","msgtype":"m.text"},"ts":1441109725000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"maybe exposing every flag ever is good!","msgtype":"m.text"},"ts":1441109731000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(note, though, that it needs to be a one-way operation; JS shouldn't be able to unopaqueify an opaque object)","msgtype":"m.text"},"ts":1441109759000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: is there something smarter than http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3609 for accessing encoders purely on the client and using public APIs only?","msgtype":"m.text"},"ts":1441110173000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*sigh* why is testharness so wrong about the ordering of expected and actual values?","msgtype":"m.text"},"ts":1441110481000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"ask jgraham :)","msgtype":"m.text"},"ts":1441110504000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"what is the right order, agin?","msgtype":"m.text"},"ts":1441110511000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I get those wrong *every* time","msgtype":"m.text"},"ts":1441110527000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"the right order is expected, actual.","msgtype":"m.text"},"ts":1441110529000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"testharness's order is backwards.","msgtype":"m.text"},"ts":1441110535000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1441110546000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1441110576000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"actual, expected is the only sensibler order","msgtype":"m.text"},"ts":1441110596000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: incidentally I was confused about why gtest has the \"wrong\" order not long ago, being very used to testharness","msgtype":"m.text"},"ts":1441110600000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: Does https://codereview.chromium.org/1323043002 do what you wanted?","msgtype":"m.text"},"ts":1441110681000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"let me see if it induces happiness","msgtype":"m.text"},"ts":1441110704000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"mkwst: FWIW I agree as you will see if you examine presto-testo for the testharnesses I wrote before testharness.js. It just turns out that the rest of the world largely disagrees.","msgtype":"m.text"},"ts":1441110729000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Ok! So let's sneakily change it back and see if anyone notices!","msgtype":"m.text"},"ts":1441110774000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I see you haven't worked with Ms2ger for long enough","msgtype":"m.text"},"ts":1441110795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanders up to mkwst ","msgtype":"m.emote"},"ts":1441110901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I haven't, actually, though I've gotten some good ms2ger feedback on various specs. :)","msgtype":"m.text"},"ts":1441111003000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Probably rather grumpy feedback :)","msgtype":"m.text"},"ts":1441111035000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: I don't think so, hadn't even thought of that approach, neat","msgtype":"m.text"},"ts":1441111043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all feedback is good feedback. like, really. it's tough to get any feedback until something's shipping, and then it's somewhat late. :/","msgtype":"m.text"},"ts":1441111070000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: how do you envision changing the FormData constructor?","msgtype":"m.text"},"ts":1441111085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't.","msgtype":"m.text"},"ts":1441111092000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://w3c.github.io/webappsec/specs/credentialmanagement/#dom-formdata-makeopaque is my current thought.","msgtype":"m.text"},"ts":1441111121000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: isn't that extremely fragile from a security perspective?","msgtype":"m.text"},"ts":1441111188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you pick up https://github.com/whatwg/html/issues/62, that would change the `FormData(HTMLFormElement)` constructor.","msgtype":"m.text"},"ts":1441111194000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"yes? i don't think `makeOpaque()` has any security value; it has explanatory value.","msgtype":"m.text"},"ts":1441111244000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"currently, opaque FormData objects only make sense in the context of the credential management API, or write-only form fields.","msgtype":"m.text"},"ts":1441111271000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ms2ger: I recommend not replying to the <keygen> issue","msgtype":"m.text"},"ts":1441111273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\" see if anyone notices\" where Ms2ger ∈ anyone is always true","msgtype":"m.text"},"ts":1441111274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk, but someone is wrong on the internet!","msgtype":"m.text"},"ts":1441111299000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"there's no other case I know of in which they offer any value, as all the data's already available to JavaScript.","msgtype":"m.text"},"ts":1441111307000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(point taken)","msgtype":"m.text"},"ts":1441111319000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: I think if we expose anything it should be part of the constructor","msgtype":"m.text"},"ts":1441111351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how does that help?","msgtype":"m.text"},"ts":1441111373000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: seems more robust","msgtype":"m.text"},"ts":1441111414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is, how is `FormData(form, { opaque: true })` better than `var fd = FormData(form); fd.makeOpaque();`? I suppose it's prettier?","msgtype":"m.text"},"ts":1441111415000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"robust against what? :)","msgtype":"m.text"},"ts":1441111422000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: e.g., you can use a different data structure for the internals then","msgtype":"m.text"},"ts":1441111440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: anyway, I don't think we should expose the slot for v1","msgtype":"m.text"},"ts":1441111485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: seems like feature creep","msgtype":"m.text"},"ts":1441111490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what do you mean?","msgtype":"m.text"},"ts":1441111503000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: it adds complexity in the design process while not solving any problems","msgtype":"m.text"},"ts":1441111523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not following. We need to somehow expose the password to something, otherwise the user can't sign in with it.","msgtype":"m.text"},"ts":1441111556000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"What does the password have to do with exposing opaque to JavaScript?","msgtype":"m.text"},"ts":1441111644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I see. You're calling the flag a slot. Got it.","msgtype":"m.text"},"ts":1441111712000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I don't think we need to expose opaque to JavaScript, but doing so make it possible to write DOM-based layout tests instead of just unit tests for the C++ code.","msgtype":"m.text"},"ts":1441111748000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Also: this was philipj's idea. :)","msgtype":"m.text"},"ts":1441111761000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"See https://codereview.chromium.org/1323043002/#ps20001.","msgtype":"m.text"},"ts":1441111780000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"It's fine with me if it isn't web-exposed, should still be possible to test opaque-ness by using toFormData I think","msgtype":"m.text"},"ts":1441112542000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: Yeah. It's a bit roundabout, but since that's the only thing that creates an opaque FormData object, it's a totally reasonable way of testing the feature. I'll drop it. Adding it back is trivial if annevk changes his mind. :)","msgtype":"m.text"},"ts":1441112619000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk never changes his mind, he was born with all the right opinions","msgtype":"m.text"},"ts":1441112661000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"lucky guy.","msgtype":"m.text"},"ts":1441112675000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"agree it's a bad idea to feed that keygen troll","msgtype":"m.text"},"ts":1441112696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So. Anyone have a thesaurus handy? I need a word that means \"credential\" but that isn't \"credential\". :)","msgtype":"m.text"},"ts":1441113342000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"http://www.thesaurus.com/browse/credential","msgtype":"m.text"},"ts":1441113495000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: for notification actions (https://github.com/whatwg/notifications/pull/48), I've realised the event delivered to pages shouldn't inherit from ExtendableEvent.","msgtype":"m.text"},"ts":1441116326000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"annevk: Should I rename NotificationEvent to PersistentNotificationEvent, and introduce a new NonPersistentNotificationEvent?","msgtype":"m.text"},"ts":1441116328000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: interesting, does this feature even make sense for toast-like notifications?","msgtype":"m.text"},"ts":1441116394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might depend on the platform","msgtype":"m.text"},"ts":1441116411000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: provided you want to keep it, I suggest not renaming NotificationEvent, but only introducing NonPersistentNotificationEvent, or perhaps ToastNotificationEvent...","msgtype":"m.text"},"ts":1441116448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1441116501000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"(I checked github and could find almost zero mentions of NotificationEvent)","msgtype":"m.text"},"ts":1441116540000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"mkwst: johnme: do you know who does autocomplete in Chrome? https://www.w3.org/Bugs/Public/show_bug.cgi?id=28952 has a suggestion","msgtype":"m.text"},"ts":1441116837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wow. I thought Heidegger died. And I didn't know he built websites.","msgtype":"m.text"},"ts":1441116939000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Oh no.","msgtype":"m.text"},"ts":1441116976000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"TBL on www-tag@. :(","msgtype":"m.text"},"ts":1441116998000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/www-tag/2015Sep/0000.html","msgtype":"m.text"},"ts":1441117045000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Maybe someone should tell timbl that you need HTTPS for <keygen>","msgtype":"m.text"},"ts":1441117240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1441117244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mathp & thestig (both @chromium.org) are probably good people to talk to about autofill","msgtype":"m.text"},"ts":1441117495000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"annevk: after chatting to peter, I think I'll drop actions from non-persistent notifications for now (due to the uncertainty around moving to toast notifications)","msgtype":"m.text"},"ts":1441117734000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"I wonder if there are numbers on frequency of http vs https in keygen usage","msgtype":"m.text"},"ts":1441118177000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"johnme: thank you, pinged them","msgtype":"m.text"},"ts":1441118928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: annevk: I don't support either of you have an opinion on this issue before we change our tests to do one or the other? https://github.com/slightlyoff/ServiceWorker/issues/742","msgtype":"m.text"},"ts":1441121007000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so is scriptURL the final after redirects URL?","msgtype":"m.text"},"ts":1441121279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1441121310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: it appears the scriptURL is set before fetching the script... so I would say before any redirects","msgtype":"m.text"},"ts":1441121360000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: as far as I can tell the script URL is never updated based on the final redirected URL","msgtype":"m.text"},"ts":1441121476000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm","msgtype":"m.text"},"ts":1441121618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so for Request it returns the URL without the fragment","msgtype":"m.text"},"ts":1441121627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1441121639000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: but there's also a dozen other APIs that will return it with","msgtype":"m.text"},"ts":1441121640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so maybe Request is wrong","msgtype":"m.text"},"ts":1441121647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think this uses Request in the register() path","msgtype":"m.text"},"ts":1441121650000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: you're making me sad right now","msgtype":"m.text"},"ts":1441121664000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we just fixed Request to strip the fragment :-\\","msgtype":"m.text"},"ts":1441121674000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that doesn't really matter when looking for consistency though","msgtype":"m.text"},"ts":1441121675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I don't know, the fragment is useless...","msgtype":"m.text"},"ts":1441121721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can't see a reason to keep the fragment... and it appears chrome strips it for the script URL","msgtype":"m.text"},"ts":1441121796000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Good morning/afternoon/evening WHATWG crew 😎","msgtype":"m.text"},"ts":1441124877000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/dom/issues/61#issuecomment-136773368","msgtype":"m.text"},"ts":1441125123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The base URL story changes yet again","msgtype":"m.text"},"ts":1441125141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah...","msgtype":"m.text"},"ts":1441125148000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: couldn't in theory it still be lazy though? e.g. if selector matching just looked at .href?","msgtype":"m.text"},"ts":1441125187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: oh no i get it","msgtype":"m.text"},"ts":1441125198000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Sebmaster ^","msgtype":"m.text"},"ts":1441125270000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh :(","msgtype":"m.text"},"ts":1441125520000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"well, could still do parsing lazily i guess","msgtype":"m.text"},"ts":1441125526000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"i guess it depend how the pseudo-class is implemented, but I think it could be done lazily anyways","msgtype":"m.text"},"ts":1441125588000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"I thought about that","msgtype":"m.text"},"ts":1441125708000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It would be very convoluted. You'd want to re-compute the pseudo class matching every frame for drawing.","msgtype":"m.text"},"ts":1441125738000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So, not really an option.","msgtype":"m.text"},"ts":1441125749000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Plus you'd need to make sure it gets recomputed whenever someone does selector matching.)","msgtype":"m.text"},"ts":1441125765000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I found https://github.com/whatwg/html/commit/78f1994463a1f19685ea2ca5beb335ca2a91ca14","msgtype":"m.text"},"ts":1441125773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"href can still be lazy","msgtype":"m.text"},"ts":1441125777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what is the correct GitHub syntax to link that?","msgtype":"m.text"},"ts":1441125791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: 78f1994463a1f19685ea2ca5beb335ca2a91ca14","msgtype":"m.text"},"ts":1441125801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Something where we actually care about W3C's patent policy: https://blog.mozilla.org/blog/2015/09/01/forging-an-alliance-for-royalty-free-video/","msgtype":"m.text"},"ts":1441127588000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"It is not actually developed within W3C though.","msgtype":"m.text"},"ts":1441127772000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"As far as I can tell the winning codec is the one that gets all the chipset manufacturers to build hardware decoders","msgtype":"m.text"},"ts":1441127865000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I can't figure out how to change the commit message","msgtype":"m.text"},"ts":1441127987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: git commit --amend -m \"new message\" should do the trick","msgtype":"m.text"},"ts":1441128004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that will not change the title?","msgtype":"m.text"},"ts":1441128028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: title is a human concept...","msgtype":"m.text"},"ts":1441128048000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh you mean of the PR itself?","msgtype":"m.text"},"ts":1441128060000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That doesn't end up mattering","msgtype":"m.text"},"ts":1441128065000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no I meant of the commit","msgtype":"m.text"},"ts":1441128072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah title just means first line of message","msgtype":"m.text"},"ts":1441128081000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: how I handle newlines? Does \\n work?","msgtype":"m.text"},"ts":1441128082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good question...","msgtype":"m.text"},"ts":1441128096000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1441128110000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"just git commit --amend and then you'll get a text editor","msgtype":"m.text"},"ts":1441128115000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah not one I can use though... I guess I can try","msgtype":"m.text"},"ts":1441128149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"git config --global core.editor subl","msgtype":"m.text"},"ts":1441128170000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(I think subl = sublime text on macs...)","msgtype":"m.text"},"ts":1441128196000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, is that the command-line way to launch your editor?","msgtype":"m.text"},"ts":1441128212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mine responds to \"edit resource\"","msgtype":"m.text"},"ts":1441128220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So would I use git config --global core.editor edit?","msgtype":"m.text"},"ts":1441128239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1441128259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1441128262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm that didn't work","msgtype":"m.text"},"ts":1441128362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so it opens the editor with .git/COMMIT_EDITMSG which I modify and save and then I run git push --force but nothing","msgtype":"m.text"},"ts":1441128493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-_-","msgtype":"m.text"},"ts":1441128750000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://stackoverflow.com/a/15008335/3191","msgtype":"m.text"},"ts":1441128795000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Looks like this --wait option is important","msgtype":"m.text"},"ts":1441128820000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Want to give it a try? Otherwise I can do it.","msgtype":"m.text"},"ts":1441128828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay","msgtype":"m.text"},"ts":1441128845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"git relies on the exit code from whatever editor it spawns","msgtype":"m.text"},"ts":1441128891000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1441129041000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"finds http://stackoverflow.com/questions/13257519/how-to-change-the-default-editor-for-git","msgtype":"m.emote"},"ts":1441129047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which seems to have worked, yay","msgtype":"m.text"},"ts":1441129078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so currently your selectors-attribute-value is not on top of master","msgtype":"m.text"},"ts":1441129136000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay, so that is what went wrong?","msgtype":"m.text"},"ts":1441129245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I needed to amend and do git rebase then?","msgtype":"m.text"},"ts":1441129297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah rebase is the trick","msgtype":"m.text"},"ts":1441129331000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rebase then push","msgtype":"m.text"},"ts":1441129342000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(force push)","msgtype":"m.text"},"ts":1441129345000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Do you do the rebase before running pr?","msgtype":"m.text"},"ts":1441129366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So the problem with pr is that it works in this other temporary branch, named pr/74","msgtype":"m.text"},"ts":1441129393000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We need to write down the explicit steps under merge policy I think","msgtype":"m.text"},"ts":1441129397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is mainly because when other people without access to the repo do PRs, there is no corresponding whatwg/selectors-attribute-values branch","msgtype":"m.text"},"ts":1441129427000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In your case what you could have done (but again this is all kind of silly) is manually done these three steps from pr(): https://gist.github.com/domenic/11371574#file-bashrc-L4-L6","msgtype":"m.text"},"ts":1441129516000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"just instead of `pr/$1` you'd do it with your local `selectors-attribute-values`","msgtype":"m.text"},"ts":1441129538000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i can make this easier with more scripts, let me see.","msgtype":"m.text"},"ts":1441129574000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Would you mind adding both set of steps to the README?","msgtype":"m.text"},"ts":1441129586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For external branches and local branches?","msgtype":"m.text"},"ts":1441129594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yet another person missing the \"element refer to element in the HTML namespace\" in the terminology section. I wonder if it's worthwhile revisiting that, given it causes so many bugs.","msgtype":"m.text"},"ts":1441129629000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1441129743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(to adding steps)","msgtype":"m.text"},"ts":1441129757000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders: if you have suggestions or a PR :-)","msgtype":"m.text"},"ts":1441129891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well the only real option is to explicitly state \"HTML element\" everywhere, which seems pretty bad. It simultaneously reduces readibility and improves it (verbosing v. redefining common terms)","msgtype":"m.text"},"ts":1441129989000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: html:select","msgtype":"m.text"},"ts":1441130031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but no, let's not do that","msgtype":"m.text"},"ts":1441130044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: perhaps we could have \"select element\" and have \"element\" here link to \"HTML element\"","msgtype":"m.text"},"ts":1441130105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's caused enough bugs in enough things, though. like, the confusion from redefining the term is real, and is a problem. :|","msgtype":"m.text"},"ts":1441130627000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"linking in the url spec was pretty sweet to differentiate between local vs state variables. I thought that was pretty nice","msgtype":"m.text"},"ts":1441132184000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Domenic: more Map/Set fixes in cloining in https://github.com/whatwg/html/pull/82","msgtype":"m.text"},"ts":1441138378000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: great, will review by tomorrow at the latest; really gotta work on some other stuff today :P","msgtype":"m.text"},"ts":1441138794000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: np, just feel bad that I didn't fix it properly the first time","msgtype":"m.text"},"ts":1441140691000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"annevk: hi, is it worth me opening issues for author conformance and advice differences between whatwg/w3c html?","msgtype":"m.text"},"ts":1441140805000,"senderName":"Stevef_","senderId":"Stevef_@irc"},
{"content":{"body":"annevk: for example, I filed this one https://github.com/whatwg/html/issues/83","msgtype":"m.text"},"ts":1441140916000,"senderName":"Stevef_","senderId":"Stevef_@irc"}
]