[
{"content":{"body":"curses lxml","msgtype":"m.emote"},"ts":1550233656000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"curses absurdly poor performance of parsing HTML in python no matter what python HTML parser you use","msgtype":"m.emote"},"ts":1550234078000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"lxml works really great as long as youâ€™re not in a hurry","msgtype":"m.text"},"ts":1550234116000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kuchiki by SimonSapin is great if you can use Rust.","msgtype":"m.text"},"ts":1550234428000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"ato, indeed it is, but I doubt TabAtkins wants to integrate rust into bikeshed :(","msgtype":"m.text"},"ts":1550241611000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, context is king! (-:","msgtype":"m.text"},"ts":1550241680000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"TabAtkins and I actually talked about moving bikeshed to rust before, but thatâ€™s a larger project","msgtype":"m.text"},"ts":1550242517000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: If you feel like musing about data URLs, I would be interested in your comments on crbug.com/807562#c9 - thanks! :)","msgtype":"m.text"},"ts":1550242687000,"senderName":"smcgruer","senderId":"smcgruer@irc"},
{"content":{"body":"smcgruer: so the whitespace change earlier seems concerning as the data URL processor can only see U+0020 when I last checked","msgtype":"m.text"},"ts":1550242847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smcgruer: data://test:test should fail in the URL parser due to incorrect port","msgtype":"m.text"},"ts":1550242967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smcgruer: base64 was done per RFC and matches Safari at least?","msgtype":"m.text"},"ts":1550243048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smcgruer: doing it differently would end up quite involved as the MIME type parser drops it, iirc","msgtype":"m.text"},"ts":1550243093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wow Safari matching something! :P","msgtype":"m.text"},"ts":1550245323000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"SimonSapin, TabAtkins: If you ever work on that, count me in.","msgtype":"m.text"},"ts":1550245333000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Def still my plan at some point","msgtype":"m.text"},"ts":1550245362000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith, Ms2ger: Fun that you are cursing Python,","msgtype":"m.text"},"ts":1550245366000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"curses nox","msgtype":"m.emote"},"ts":1550245373000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"some Mozilla people were just today cursing Python because it coordinates invoking clang-format in mozilla-central,","msgtype":"m.text"},"ts":1550245387000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and apparently it causes a huge overhead just existing.","msgtype":"m.text"},"ts":1550245397000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Tho this year I'm gonna drop lxml and integrate Markdown parsing directly into HTML parsing, so using kuchiki to parse prob isn't gonna work","msgtype":"m.text"},"ts":1550245435000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nox: Safari matches a lot of things","msgtype":"m.text"},"ts":1550245443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: eg, URL parser","msgtype":"m.text"},"ts":1550245454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Using Kuchiki no, but using html5ever's tokenizer could maybe work.","msgtype":"m.text"},"ts":1550245479000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins, please do, it's segfaulting","msgtype":"m.text"},"ts":1550245489000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I need to look into that","msgtype":"m.text"},"ts":1550245507000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: yeah, I saw. Haven't been able to dig in yet, but wtf","msgtype":"m.text"},"ts":1550245532000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is it for all Travis?","msgtype":"m.text"},"ts":1550245543000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno, it was locally for me","msgtype":"m.text"},"ts":1550245557000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Woah!","msgtype":"m.text"},"ts":1550245632000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fresh install or something, or out of nowhere?","msgtype":"m.text"},"ts":1550245667000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oddly, it seems to be installing 4.3.1 while your requirements.txt has lxml>=4.2.5<4.3","msgtype":"m.text"},"ts":1550245675000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, fresh","msgtype":"m.text"},"ts":1550245688000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's a good hint, thanks. Will dig in today","msgtype":"m.text"},"ts":1550245991000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, https://github.com/tabatkins/bikeshed/pull/1433 ; seems to help locally, at least","msgtype":"m.text"},"ts":1550246171000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you're great, merging","msgtype":"m.text"},"ts":1550246196000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we'll see if this fixes the travis failures","msgtype":"m.text"},"ts":1550246210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, btw, is there a way to silence \"WARNING: This specification has neither a 'Security Considerations' nor a 'Privacy Considerations' section.\"?","msgtype":"m.text"},"ts":1550247761000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes, put that section in.","msgtype":"m.text"},"ts":1550247773000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ðŸ˜‚","msgtype":"m.text"},"ts":1550247787000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gives TabAtkins a smartass cookie","msgtype":"m.emote"},"ts":1550247812000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I mean, why does your W3C-group spec not have one? It's required for publication.","msgtype":"m.text"},"ts":1550247844000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WebIDL doesn't get published, afaik :)","msgtype":"m.text"},"ts":1550247896000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TECHNICALLY true","msgtype":"m.text"},"ts":1550247906000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But still, just drop in a \"This spec introduces no privacy or security considerations, as it is defining a meta-language that actually-useful specs use to write themselves.\"","msgtype":"m.text"},"ts":1550247954000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...in a section titled \"Privacy & Security Considerations\"","msgtype":"m.text"},"ts":1550247975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, that's an easy way to finish the week","msgtype":"m.text"},"ts":1550248035000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Iâ€™m not sure that should pass review though","msgtype":"m.text"},"ts":1550248443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If not implemented carefully there would be a number of security issues","msgtype":"m.text"},"ts":1550248471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's a line that could be added to literally every specification, tho.","msgtype":"m.text"},"ts":1550248669000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Expanding: I think that the P&S section is for things to be careful about or consider *due to the feature itself*. Mis-implementing a feature is always a possible source of problems, \"be sure not to mess up when implementing this\" doesn't need to be added.","msgtype":"m.text"},"ts":1550249007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...that's not true, tho; some features are *really* sensitive to being misimplemented in ways that totally ruin them. They're a rarity, tho. I suppose WebIDL might qualify for that, for some of the stuff specifying realms and such.","msgtype":"m.text"},"ts":1550250420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right, I think the binding layer qualifies, as itâ€™s a security boundary of sorts","msgtype":"m.text"},"ts":1550251896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"All right, so it sounds like an S&P section would actually be *useful* to write. As a side-effect it will then silence the warning. ^_^","msgtype":"m.text"},"ts":1550253394000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smcgruer: hope that helped btw?","msgtype":"m.text"},"ts":1550253939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It did, thanks. Sorry for not being around, was in meetings all morning. I believe this is quite late for you so happy to punt discussing further till Monday (also feel free to comment on the Chrome issue)","msgtype":"m.text"},"ts":1550255887000,"senderName":"smcgruer","senderId":"smcgruer@irc"},
{"content":{"body":"annevk: For the whitespace question, my gut feeling is that Chrome's URL parser is probably allowing non-U+0020 whitespace characters in general, but when checking the spec (https://url.spec.whatwg.org/#concept-basic-url-parser) I do only see a step to remove TAB, LF and CR but not FF. (steps 2, 3). It's possible I missed a step that would remove FF.","msgtype":"m.text"},"ts":1550256707000,"senderName":"smcgruer","senderId":"smcgruer@irc"},
{"content":{"body":"annevk: The port point is a good one, I will make a note of that in the bug.","msgtype":"m.text"},"ts":1550256809000,"senderName":"smcgruer","senderId":"smcgruer@irc"},
{"content":{"body":"annevk: And finally for base64, it's a reasonable argument. You would have to search for all occurrences in mimeType, remove them, and then pass the remaining content to the MIME type parser. I was just responding my best guess to foolip's question :)","msgtype":"m.text"},"ts":1550256854000,"senderName":"smcgruer","senderId":"smcgruer@irc"},
{"content":{"body":"smcgruer: thanks, Iâ€™ll investigate Monday","msgtype":"m.text"},"ts":1550261957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"By the way, Bikeshed in Rust would be amazing","msgtype":"m.text"},"ts":1550265869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We could maybe switch HTML then","msgtype":"m.text"},"ts":1550265884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Would love to help if I can","msgtype":"m.text"},"ts":1550265910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"After I do the parser rewrite, I can consider it. It's already going to be such a huge change to the internals, I'd like to get it done in a language I\"m familiar with first.","msgtype":"m.text"},"ts":1550266907000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]