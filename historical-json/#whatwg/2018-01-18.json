[
{"content":{"body":"Hi HTML folks. aboxhall is working on AOM, and part of that seems to be reflecting ARIA attributes into WebIDL properties. Some \"boolean\" ARIA attributes have 3 states, true, false, and not-present. For example, <elem aria-expanded=\"false\"> is semantically different from <elem>. Our current guess for how to express this is to make ariaExpanded a `boolean?` attribute on Element, where 'null' means the attribute is","msgtype":"m.text"},"ts":1516233613000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"not-present. What do the reflection experts think? annevk, Domenic","msgtype":"m.text"},"ts":1516233613000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"also note that <elem aria-expanded> is not valid","msgtype":"m.text"},"ts":1516233787000,"senderName":"aboxhall","senderId":"aboxhall@irc"},
{"content":{"body":"at least as currently specced.","msgtype":"m.text"},"ts":1516233801000,"senderName":"aboxhall","senderId":"aboxhall@irc"},
{"content":{"body":"aboxhall: We'll need to specify the value of the property when the attribute has an empty value. I'm inclined to follow https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#keywords-and-enumerated-attributes, pretending that the ARIA attributes are enumerated between \"true\", \"false\", and missing. Then ARIA's defined default value is the missing value default, and that's what's used for the invalid \"\"","msgtype":"m.text"},"ts":1516234445000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"value.","msgtype":"m.text"},"ts":1516234445000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: aboxhall: I would reflect as a DOMString. The fact that some of the states use the English words \"true\" or \"false\" should not mislead you into thinking they are booleans.","msgtype":"m.text"},"ts":1516237095000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sgtm","msgtype":"m.text"},"ts":1516237125000,"senderName":"aboxhall","senderId":"aboxhall@irc"},
{"content":{"body":"I was also told some of them use more than those two states (+missing) so that factors into it","msgtype":"m.text"},"ts":1516237156000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: 'k.","msgtype":"m.text"},"ts":1516237274000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Learn from CSS's rule: NO BOOLEANS","msgtype":"m.text"},"ts":1516238598000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"else be haunted by the specter of `enum { \"true\", \"false\", \"file_not_found\" }`","msgtype":"m.text"},"ts":1516238623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://bugs.webkit.org/show_bug.cgi?id=181778 webkit adding deprecation warning for documens that use appcache","msgtype":"m.text"},"ts":1516247748000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> ApplicationCache is deprecated. Please use ServiceWorkers instead","msgtype":"m.text"},"ts":1516247803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"@TabAtkins I think the ship sailed on that one already","msgtype":"m.text"},"ts":1516248627000,"senderName":"aboxhall","senderId":"aboxhall@irc"},
{"content":{"body":"At least they're Boolean strings right now. 😀","msgtype":"m.text"},"ts":1516248683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"some of them :)","msgtype":"m.text"},"ts":1516248863000,"senderName":"aboxhall","senderId":"aboxhall@irc"},
{"content":{"body":"https://www.w3.org/TR/wai-aria-1.1/#aria-invalid","msgtype":"m.text"},"ts":1516248888000,"senderName":"aboxhall","senderId":"aboxhall@irc"},
{"content":{"body":"It's somewhat unfortunate ARIA never addressed my feedback on those types back when it was still feasible","msgtype":"m.text"},"ts":1516253180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, strings indeed seem better than nullable booleans","msgtype":"m.text"},"ts":1516253203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: yeah, though multiple <main> is three times as high as <main> in <form>, but I guess it might still be worth looking what the actual usage is like","msgtype":"m.text"},"ts":1516253579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok later today I can bundle up all the logs and then run them through `sort` and `uniq` on them","msgtype":"m.text"},"ts":1516253971000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe after it’s been collecting for a full 24 hours","msgtype":"m.text"},"ts":1516253983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to account for getting a range of local differences and what across a whole day","msgtype":"m.text"},"ts":1516254034000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s at around the 14 hours mark now","msgtype":"m.text"},"ts":1516254048000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: can you share the URLs later too?","msgtype":"m.text"},"ts":1516254063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that’s what I mean actually","msgtype":"m.text"},"ts":1516254076000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: okido","msgtype":"m.text"},"ts":1516254084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that’s what’s in the logs that’s not on the stats page","msgtype":"m.text"},"ts":1516254096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also by 24 hours it will have collected data for nearly a million requests (there are 5 separate instances of backend running, each handling 8000+ requests an hour)","msgtype":"m.text"},"ts":1516254351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: in other news, dunno if you looked at https://stackoverflow.com/questions/47158940/include-authorization-header-using-fetch-api-post-method but if/when you do, been wondering if you might have any insight","msgtype":"m.text"},"ts":1516254611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: added a comment, seems like an impl bug","msgtype":"m.text"},"ts":1516254918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1516255036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1516255037000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: HTML build just reported \"Error: Could not find or load main class nu.validator.client.SimpleCommandLineValidator\"","msgtype":"m.text"},"ts":1516265459000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: it also says wattsi is out of date","msgtype":"m.text"},"ts":1516265478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://travis-ci.org/whatwg/html/builds/330258050","msgtype":"m.text"},"ts":1516265481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1516266844000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will get it fixed asap","msgtype":"m.text"},"ts":1516266858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1516267848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking at whatwg/html#3370. How can I help?","msgtype":"m.text"},"ts":1516268031000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I guess there's two questions; how to best go about a [LegacyNonObjectIsNull] for this argument","msgtype":"m.text"},"ts":1516268116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and if you've seen the other requests about a method that takes dictionaries of various types and the type depends on some other argument of the method","msgtype":"m.text"},"ts":1516268145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I vaguely recall the permissions API needing that","msgtype":"m.text"},"ts":1516268158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and some other API having a similar pattern","msgtype":"m.text"},"ts":1516268166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that definitely rings a bell","msgtype":"m.text"},"ts":1516268175000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it might be time to start thinking about an abstraction?","msgtype":"m.text"},"ts":1516268179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in the form of an abstract operation specs could call?","msgtype":"m.text"},"ts":1516268211000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I haven't thought this through, but that doesn't seem trivial to organize in a way that's generic enough and yet still easier on the editor than writing the thing from scratch","msgtype":"m.text"},"ts":1516268347000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: pushed new jar to https://sideshowbarker.net/nightlies/jar/vnu.jar so maybe restart the build","msgtype":"m.text"},"ts":1516268373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk:  as far as the message about the wattsi version, dunno why that would happen","msgtype":"m.text"},"ts":1516268395000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but in teh travis log I see:","msgtype":"m.text"},"ts":1516268403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Step 3/18 : ADD wattsi /whatwg/wattsi","msgtype":"m.text"},"ts":1516268406000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" ---> Using cache","msgtype":"m.text"},"ts":1516268406000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" ---> 0bb32c4da856","msgtype":"m.text"},"ts":1516268406000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Step 4/18 : RUN cd /whatwg/wattsi &&     /whatwg/wattsi/build.sh","msgtype":"m.text"},"ts":1516268407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" ---> Using cache","msgtype":"m.text"},"ts":1516268407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":" ---> ca6e77bba158","msgtype":"m.text"},"ts":1516268409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"“using cache”, not sure what that means","msgtype":"m.text"},"ts":1516268426000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: k, I'll restart the build","msgtype":"m.text"},"ts":1516268646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I was thinking of associating the arguments somehow","msgtype":"m.text"},"ts":1516268753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: you make it accept a union of dictionaries or some such, but only if the dictionaries contain a value that another argument needs to be for them to be used","msgtype":"m.text"},"ts":1516268806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I dread to think of which algorithms you need to touch to enable that.","msgtype":"m.text"},"ts":1516268863000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but it's certainly doable","msgtype":"m.text"},"ts":1516268884000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: … if you got a twisted mind and a knack for complexity.","msgtype":"m.text"},"ts":1516268929000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah, maybe prose is better, I just noticed that in https://w3c.github.io/permissions/#permissions-interface it actually depends on a dictionary member","msgtype":"m.text"},"ts":1516268984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah that was my concern, the \"thing that helps pick the type\" might have too many different shapes to allow for a simple enough solution","msgtype":"m.text"},"ts":1516269093000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: fancy reviewing https://github.com/whatwg/wattsi/pull/67 if it's not too late?","msgtype":"m.text"},"ts":1516272414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: could you otherwise review it? And do you know that if we land it, would it be picked up by the HTML build process immediately?","msgtype":"m.text"},"ts":1516273093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: changes in wattsi will be automatically used by html-build, yes","msgtype":"m.text"},"ts":1516277573000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: is it the extra commit you want review of, or all of it?","msgtype":"m.text"},"ts":1516277600000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: the complete PR as it is now would be best","msgtype":"m.text"},"ts":1516278990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: thanks, that comment can be addressed, but is more tricky than you might have thought as later on there is also a conditional for a span element that does something else","msgtype":"m.text"},"ts":1516279327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: so I'd have to bring that up a bit","msgtype":"m.text"},"ts":1516279334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: but I'll see about doing that","msgtype":"m.text"},"ts":1516279347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: that too longer than desired...","msgtype":"m.text"},"ts":1516280590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: verifying results now","msgtype":"m.text"},"ts":1516280604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: please take another look","msgtype":"m.text"},"ts":1516280686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, that isn't what I thought would happen :)","msgtype":"m.text"},"ts":1516280757000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: oh, so it's a huge if-else branch and that change made the second branch unreachable? makes sense, did we have tests to catch that?","msgtype":"m.text"},"ts":1516280810000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: reviewed","msgtype":"m.text"},"ts":1516280834000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: we don't have tests around wattsi other than running html-build","msgtype":"m.text"},"ts":1516280854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: this is the main thing why I don't like not committing the output in Git somewhere as it's unclear when we regress something","msgtype":"m.text"},"ts":1516280881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I haven't tried running the code though where that second branch would be unreachable as I had already read ahead at some point and knew I'd have to change that","msgtype":"m.text"},"ts":1516280954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we could commit all output to the whatwg.org repo and deploy from that, but we'd only look at it after things have broken","msgtype":"m.text"},"ts":1516281041000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I would not particularly mind such a setup","msgtype":"m.text"},"ts":1516281101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: can also help catch bikeshed regressions","msgtype":"m.text"},"ts":1516281137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if we do it for everything)","msgtype":"m.text"},"ts":1516281148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: it's weird that the build log claims wattsi is out-of-date, despite it using the latest wattsi","msgtype":"m.text"},"ts":1516281407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebIDL says: \"The global environment that a given platform object is associated with can change after it has been created.\" When does that happen?","msgtype":"m.text"},"ts":1516286888000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: window.open can do that, I think.","msgtype":"m.text"},"ts":1516287473000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Err, document.open, sorry.","msgtype":"m.text"},"ts":1516287486000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: thanks (I've never used document.open iirc, have to look it up)","msgtype":"m.text"},"ts":1516287627000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I implemented part of it in Servo, my opinion is that the less you know about it, the better your life will be.","msgtype":"m.text"},"ts":1516287660000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hmm, I need to respond to a fetch from the main window, do I just postMessage everything back and forth or is there any ETA on being able to create a stream and transfer it?","msgtype":"m.text"},"ts":1516287678000,"senderName":"benjamingr_","senderId":"benjamingr_@irc"},
{"content":{"body":"nox: the problem is this can pretty much be said about all parts of WebIDL","msgtype":"m.text"},"ts":1516287688000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think document.open is pretty special in that way","msgtype":"m.text"},"ts":1516287933000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: in the way of being a net negative to your quality of life?","msgtype":"m.text"},"ts":1516288042000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jgraham: or in the way its mucks around with realms?","msgtype":"m.text"},"ts":1516288059000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jgraham: or maybe both","msgtype":"m.text"},"ts":1516288066000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"FWIW, only Firefox replaces the global for document.open()","msgtype":"m.text"},"ts":1516288189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm no longer convinced that's the best way forward","msgtype":"m.text"},"ts":1516288199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though I also haven't done enough research into the other implementations to make that go away","msgtype":"m.text"},"ts":1516288211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"benjamingr_: https://github.com/whatwg/streams/issues/244 and https://github.com/whatwg/streams/issues/276 seem to touch on that","msgtype":"m.text"},"ts":1516288294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"benjamingr_: ricea might know if there's anything recent on transferable streams","msgtype":"m.text"},"ts":1516288324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks, I saw those but wasn't sure if those were the most recent","msgtype":"m.text"},"ts":1516288372000,"senderName":"benjamingr_","senderId":"benjamingr_@irc"},
{"content":{"body":"It would really make our lives easier, we're (re)building a large product on top of ServiceWorkers that intercept video requests and deliver them over WebRTC DataChannels instead of over HTTP","msgtype":"m.text"},"ts":1516288452000,"senderName":"benjamingr_","senderId":"benjamingr_@irc"},
{"content":{"body":"benjamingr_: can't find anything else and that repo would be the place to have the discussion I think","msgtype":"m.text"},"ts":1516288477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Of course, WebRTC on the service worker would be even better, but that's a much bigger thing to request and it looks like it didn't progress a lot since it was last asked 2 years ago.","msgtype":"m.text"},"ts":1516288568000,"senderName":"benjamingr_","senderId":"benjamingr_@irc"},
{"content":{"body":"tobie, both","msgtype":"m.text"},"ts":1516290185000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So looking at https://heycam.github.io/webidl/#es-interface, and in particular:","msgtype":"m.text"},"ts":1516290500000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"\"The result of converting an IDL interface type value to an ECMAScript value is the Object value that represents a reference to the same object that the IDL interface type value represents.\"","msgtype":"m.text"},"ts":1516290511000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Boy, I'm so confused about what the above implies, I can't even formulate a question","msgtype":"m.text"},"ts":1516290758000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Does that imply that the \"platform object\" is an underlying object that both WebIDL and ES bindings talk to?","msgtype":"m.text"},"ts":1516290900000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Or put differently: If I were to specify an abstract operation \"create a platform object\" that could be called from a WebIDL constructor, how would there be ES objects mapping these WebIDL-created platform objects that could be used in the conversion process quoted above?","msgtype":"m.text"},"ts":1516291406000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So I guess there's two ways to approach it","msgtype":"m.text"},"ts":1516292665000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"One is that the platform object is something separate from the JS Object value, and there's bidirectional pointers between them","msgtype":"m.text"},"ts":1516292697000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The other is that a platform object is \"just\" a JS Object with some extra [[Slot]]s","msgtype":"m.text"},"ts":1516292716000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not sure which would be best","msgtype":"m.text"},"ts":1516292726000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: so when a spec says: \"create a new Foo object\" (where Foo is a WebIDL interface) what *is* the object created?","msgtype":"m.text"},"ts":1516294021000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: \"an interface type value\"?","msgtype":"m.text"},"ts":1516294044000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Both? :)","msgtype":"m.text"},"ts":1516294071000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you mean both an interface type value AND an JS \"platform object\" are created?","msgtype":"m.text"},"ts":1516294142000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think that's a reasonable way to spec it","msgtype":"m.text"},"ts":1516294178000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: or do you mean a single object that is both these things is created?","msgtype":"m.text"},"ts":1516294182000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: oh, the former.","msgtype":"m.text"},"ts":1516294192000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well, that depends on which of my two approaches you pick","msgtype":"m.text"},"ts":1516294200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: are you saying the WebIDL spec currently is ambiguous about that?","msgtype":"m.text"},"ts":1516294245000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1516294280000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But it doesn't really matter which way you go; they should be indistinguishable from outside","msgtype":"m.text"},"ts":1516294325000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I'd want to be consistent with the rest of the spec","msgtype":"m.text"},"ts":1516294390000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: and when I read something like: https://heycam.github.io/webidl/#idl-objects","msgtype":"m.text"},"ts":1516294398000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: I'm quite confused.","msgtype":"m.text"},"ts":1516294413000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: this really seems to describe platform objects as the ES stuff","msgtype":"m.text"},"ts":1516294483000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: but then it's not in the bindings section","msgtype":"m.text"},"ts":1516294508000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think the problem is that WebIDL doesn't really know how it wants to approach this","msgtype":"m.text"},"ts":1516294521000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: note this is the same for the {{object}} WebIDL type","msgtype":"m.text"},"ts":1516294585000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: which remains somewhat of a mistery to me","msgtype":"m.text"},"ts":1516294598000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: and feels more like: \"I couldn't use a dictionary or a record here, so fuck it.\"","msgtype":"m.text"},"ts":1516294638000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: looking at https://heycam.github.io/webidl/#es-platform-objects it really seems platform objects designate the JS objects and not the WebIDL ones","msgtype":"m.text"},"ts":1516294889000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger:  so this feels like we need on one hand a \"create a interface type value\" abstract op","msgtype":"m.text"},"ts":1516294925000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: and on the other, and \"create platform object\" abstract op that takes an interface type value and a realm as argument","msgtype":"m.text"},"ts":1516294979000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/and/a/","msgtype":"m.text"},"ts":1516294991000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But what realm would you use? I think you always want to define the realm at the point where you'd use the  \"create a interface type value\" abstract op","msgtype":"m.text"},"ts":1516295044000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess my question is: what is the benefit of having both algorithms be distinct","msgtype":"m.text"},"ts":1516295240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: well, if you want to be able to create a new Foo object in the constructor of Foo, then what you want to be playing with is a WebIDL object, and not a Es object, no?","msgtype":"m.text"},"ts":1516295312000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: in a spec, that is.","msgtype":"m.text"},"ts":1516295334000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But you haven't clearly defined the difference between those two yet :)","msgtype":"m.text"},"ts":1516295402000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think you either need to say that a WebIDL object \"is a\" JS object or a WebIDL object \"has a\" JS object","msgtype":"m.text"},"ts":1516295466000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And then your \"create a platform object\" algorithm either creates an object that is both, or it creates two objects and associates them with each other","msgtype":"m.text"},"ts":1516295531000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"However, I need to run","msgtype":"m.text"},"ts":1516295543000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Good luck :)","msgtype":"m.text"},"ts":1516295546000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: :D see you","msgtype":"m.text"},"ts":1516295595000,"senderName":"tobie","senderId":"tobie@irc"}
]