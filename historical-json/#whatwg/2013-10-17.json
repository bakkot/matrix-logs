[
{"content":{"body":"annevk-cloud: does https://twitter.com/briankardell/status/390635642407124992 mean copy-paste from WHATWG to W3C?","msgtype":"m.text"},"ts":1381972887000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: what it means will be up to slightlyoff and Robin, but I think you know them well enough to know they may not just going to be doing copy-paste","msgtype":"m.text"},"ts":1381973259000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"more forking? :-/","msgtype":"m.text"},"ts":1381973313000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"though really I'm just speculating because I don't actually know what the details of the plan are","msgtype":"m.text"},"ts":1381973317000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic_: yeah, one way or the other","msgtype":"m.text"},"ts":1381973430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic_: but really if you want more than speculation I guess you should ask slightlyoff and robin what the plan is :)","msgtype":"m.text"},"ts":1381973737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: indeed, I forgot they lurked here sometimes.","msgtype":"m.text"},"ts":1381973776000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i feel like i'm missing some context or the lastest w3c meme :-)","msgtype":"m.text"},"ts":1381981657000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"lol latest one is gold.","msgtype":"m.text"},"ts":1381981771000,"senderName":"nimbu1","senderId":"nimbu1@irc"},
{"content":{"body":"I get all my news from w3c memes","msgtype":"m.text"},"ts":1381983166000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"ahahhahahah","msgtype":"m.text"},"ts":1381983611000,"senderName":"nimbu1","senderId":"nimbu1@irc"},
{"content":{"body":"that can be a meme cabanier","msgtype":"m.text"},"ts":1381983614000,"senderName":"nimbu1","senderId":"nimbu1@irc"},
{"content":{"body":"So I interpret that w3c meme as coded language that's basically saying, \"Hakon should be the chair of the CSS WG\"","msgtype":"m.text"},"ts":1381986793000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in which case, +1","msgtype":"m.text"},"ts":1381986798000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-style/2013Oct/0385.html","msgtype":"m.text"},"ts":1381987217000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"lol MikeSmith","msgtype":"m.text"},"ts":1381987301000,"senderName":"nimbu1","senderId":"nimbu1@irc"},
{"content":{"body":"karlcow: it's the bottom text i don't understand, and the caption at the bottom","msgtype":"m.text"},"ts":1381988691000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I don't know if the context of the caption at all but even out of whatever the intended context is, It's just funny","msgtype":"m.text"},"ts":1381988922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic_: you'll have to ask darobin and slightlyoff as I've no idea","msgtype":"m.text"},"ts":1381989665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: W3C just forks, they don't really communicate about it with the original author","msgtype":"m.text"},"ts":1381989705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: see http://lists.w3.org/Archives/Public/public-i18n-core/2013OctDec/0013.html","msgtype":"m.text"},"ts":1381989735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: so if i understand correctly, the objection with DOMRectReadOnly wasn't that nobody is allowed to mutate it, but that DOMRect inherits from DOMRectReadOnly and so a mutable object has DOMRectReadOnly in the prototype chain which looks like a lie","msgtype":"m.text"},"ts":1381999240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: so I thought <iframe></iframe><script>window[0].document.body.innerHTML = \"bah\"</script> was required to work","msgtype":"m.text"},"ts":1381999281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but it seems it's not...","msgtype":"m.text"},"ts":1381999292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I haven't had time to mess around with the non-spec parsing idea further. I think where we had left it, it seems like my hacks were causing the script end tag to not get emitted as expected. Because the script element was still on the stack of open elements at the point where it crashed (where it's supposed to be handling the body start tag)","msgtype":"m.text"},"ts":1382000043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok. i guess it's clear that none of us know what we're doing :-P","msgtype":"m.text"},"ts":1382000199000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't understand how the handling of the script end tag is affected by the changes","msgtype":"m.text"},"ts":1382000260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah I looked back at the code and I don't understand either how it would be affecting it. Honestly it could just be that the hack I put in to serialize the stack out to","msgtype":"m.text"},"ts":1382000475000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...stdout is broken too","msgtype":"m.text"},"ts":1382000493000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: so a subclass should not be able to access private state?","msgtype":"m.text"},"ts":1382000565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: is that the contention?","msgtype":"m.text"},"ts":1382000574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but yeah I don't really know what I'm doing with that code","msgtype":"m.text"},"ts":1382000576000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: see http://lists.w3.org/Archives/Public/public-script-coord/2013OctDec/0126.html","msgtype":"m.text"},"ts":1382000606000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: all I read in that email is Mark Miller agreeing","msgtype":"m.text"},"ts":1382000656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yet he objects to the name ReadOnly, so i must have misunderstood the argument. also see http://www.w3.org/mid/CABHxS9j_HshM-sHBL1cxpk+ACf91eKhvcihrLYtGJxCWEE=yBQâŠ™mgc","msgtype":"m.text"},"ts":1382000812000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: interesting, I wonder if he's willing to expand on that, I'll reply","msgtype":"m.text"},"ts":1382000944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe role=region by default for <section> is a mistake?","msgtype":"m.text"},"ts":1382002960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"aria's definition of region seems like a good match (except \"large\" i guess) http://www.w3.org/TR/wai-aria/roles#region","msgtype":"m.text"},"ts":1382003130000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Authors SHOULD ensure that a region has a heading referenced by aria-labelledby.\"","msgtype":"m.text"},"ts":1382003248000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Game of Thrones fans: http://www.youtube.com/watch?v=5Krz-dyD-UQ","msgtype":"m.text"},"ts":1382004339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(fwiw I note that using \"readonly\" to mean \"not user editable\" appears to be very common in GUI framworks e.g. both win32 and Qt seem to use that terminology)","msgtype":"m.text"},"ts":1382005677000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: I assume the argument against making DOMRect extends DOMRectReadOnly is that DOMRect violates the contract of DOMRectReadOnly so it doesn't follow the LSP","msgtype":"m.text"},"ts":1382005749000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: right","msgtype":"m.text"},"ts":1382005828000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It's an argument of the form \"you can't have Square extends Rectangle because doing sqaure.width = 4 will also set square.height = 4, which violates the invariants of Rectangle","msgtype":"m.text"},"ts":1382005841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Personally I'm not convinced that it's a more-than-theoretical concern","msgtype":"m.text"},"ts":1382005888000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Especially in JS","msgtype":"m.text"},"ts":1382005894000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I don't really see how you could have any inheritance between a Foo and a Foo[View|ReadOnly] and conform with the LSP, so I think the only theoretically pure solution is to have two entirely seperate interfaces)","msgtype":"m.text"},"ts":1382006029000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, use mixins or some such","msgtype":"m.text"},"ts":1382006053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(even if they access the same underlying data)","msgtype":"m.text"},"ts":1382006072000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, what roc suggested early on in the thread works too.","msgtype":"m.text"},"ts":1382006291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOMRectBase; DOMRectReadonly extends DOMRectBase; DOMRect extends DOMRectBase;","msgtype":"m.text"},"ts":1382006314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it might be a completely stupid idea, but could frozen objects be used instead here?","msgtype":"m.text"},"ts":1382006350000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I mean, you just define DOMRect, which is mutable and all","msgtype":"m.text"},"ts":1382006360000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: frozen doesn't mean what you think it means","msgtype":"m.text"},"ts":1382006372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and when you need to return a readonly one, you say [Frozen] DOMRect","msgtype":"m.text"},"ts":1382006376000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh, right, not the values","msgtype":"m.text"},"ts":1382006387000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Best to mostly forget about Object.freeze() et al. They're only useful for Caja...","msgtype":"m.text"},"ts":1382006415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wrong term, but the idea still holds","msgtype":"m.text"},"ts":1382006424000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I was thinking frozen as in, you know, frozen; not Object.freeze()","msgtype":"m.text"},"ts":1382006446000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: TabAtkins explored that idea, same fread","msgtype":"m.text"},"ts":1382006449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thread, evne","msgtype":"m.text"},"ts":1382006456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah. missed that","msgtype":"m.text"},"ts":1382006457000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"even, even","msgtype":"m.text"},"ts":1382006459000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for the info about JSIDL","msgtype":"m.text"},"ts":1382006763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hope somebody takes an interest in working on it","msgtype":"m.text"},"ts":1382006775000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yes, an abstract base class works","msgtype":"m.text"},"ts":1382006808000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: apparently Domenic_ was planning to, but then we hijacked him to work on Promises & Streams, which seems much more useful anyway","msgtype":"m.text"},"ts":1382006818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But javascript doesn't have any real concept of abstract classes","msgtype":"m.text"},"ts":1382006830000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: I thought you guys were done on Promises","msgtype":"m.text"},"ts":1382006859000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw what is XHR referencing for Streams now?","msgtype":"m.text"},"ts":1382006871000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I kinda like my idea of last night to have the ECMAScript standard library defined in IDL. Anyway...","msgtype":"m.text"},"ts":1382006895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: nothing at the moment","msgtype":"m.text"},"ts":1382006899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"last I remember CHrome had implemented some support for Feras's spec","msgtype":"m.text"},"ts":1382006904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ES5 promises is done, ES6 promises requires subclassing, which is tricky so there's a few issues left in the spec","msgtype":"m.text"},"ts":1382006921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: to have them be ES6-acceptable they need to work well with ES6 subclassing, so that's what's currently undergoing work. They are complete at the ES5 level","msgtype":"m.text"},"ts":1382006923000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"thinks JSIDL seems like a waste of time","msgtype":"m.emote"},"ts":1382006929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha jinx","msgtype":"m.text"},"ts":1382006929000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: I like that idea to, for sure.","msgtype":"m.text"},"ts":1382006943000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"getting Domenic_ and annevk in stereo :)","msgtype":"m.text"},"ts":1382006957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so is Feras's Streams spec dead?","msgtype":"m.text"},"ts":1382007026000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah and the discussion on public-webapps is mostly being ignored too","msgtype":"m.text"},"ts":1382007050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1382007057000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: it's not helpful to be so negative all the time","msgtype":"m.text"},"ts":1382007103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not being negative all the time","msgtype":"m.text"},"ts":1382007133000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: about JSIDL you are","msgtype":"m.text"},"ts":1382007141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that JSIDL has lots of costs and very little value","msgtype":"m.text"},"ts":1382007148000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: there are some smart people out there that want to explore it, let them be, just saying \"it's a waste of time\" isn't helping anyone","msgtype":"m.text"},"ts":1382007169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for any person that's qualified to work on it, there are half a dozen more useful things that they could be doing","msgtype":"m.text"},"ts":1382007179000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the same could be said for working on Fetch","msgtype":"m.text"},"ts":1382007203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: improvements to the immediate status quo are marginal","msgtype":"m.text"},"ts":1382007215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you really believe that, I urge you to stop working on Fetch","msgtype":"m.text"},"ts":1382007222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't believe that, but if there's someone out there that would keep saying \"it's a waste of time\", I fould find that hugely irritating","msgtype":"m.text"},"ts":1382007246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not very helpful","msgtype":"m.text"},"ts":1382007269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well if people are determined to work on it then nothing I can say is going to stop them. But so far the arguments in favour of it have been very weak. \"Syntax slightly more like JS\" doesn't seem like a big win.","msgtype":"m.text"},"ts":1382007354000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And there is a huge cost if specs start using something that isn't supported by bindings generators for implementations","msgtype":"m.text"},"ts":1382007399000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you think that's the main argument...","msgtype":"m.text"},"ts":1382007417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because you either need to implement a second set of bindings generators or port everything to WebIDL","msgtype":"m.text"},"ts":1382007423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the cost isn't in the binding generators","msgtype":"m.text"},"ts":1382007438000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"the cost is in remembering what a given WebIDL construct actually does in JS when the match doesn't line up all that well","msgtype":"m.text"},"ts":1382007455000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"It's the main argument that I've heard that couldn't be achieved by incremental improvements to WebIDL","msgtype":"m.text"},"ts":1382007460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"darobin: Those seem like costs for quite different people","msgtype":"m.text"},"ts":1382007519000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, for the people writing and reading specs; they tend to be a pretty important constituency for this stuff :)","msgtype":"m.text"},"ts":1382007546000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and anyway, when people are working on something that doesn't seem very useful to me, there are two situations","msgtype":"m.text"},"ts":1382007640000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"1) they're smart, so they probably know why they're doing it","msgtype":"m.text"},"ts":1382007649000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"2) they're dumb, so it doesn't matter","msgtype":"m.text"},"ts":1382007655000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin++","msgtype":"m.text"},"ts":1382007673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think those are an active characterisation of the possibilities at all","msgtype":"m.text"},"ts":1382007683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For example there is 3) They are smart but haven't considered the oppertunity costs of the work","msgtype":"m.text"},"ts":1382007709000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no, but you have to admit that it makes for neat little boxes","msgtype":"m.text"},"ts":1382007715000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(and a whole bunch more about oppertunity costs and so on that I won't type out)","msgtype":"m.text"},"ts":1382007743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"there clearly would be an opportunity cost in you typing more about opportunity costs","msgtype":"m.text"},"ts":1382007770000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"If the world was full of smart people doing useful things and dumb people doing irrelevent things it would be a lot better","msgtype":"m.text"},"ts":1382007781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Playing the conservative card is not helpful. Disruption is good.","msgtype":"m.text"},"ts":1382007792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But instead you have lots of smart people doing irrelevant things","msgtype":"m.text"},"ts":1382007795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smart people shaving yaks have been known to produce useful things once in a while","msgtype":"m.text"},"ts":1382007837000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"makes some tea for grumpy jgraham","msgtype":"m.emote"},"ts":1382007846000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"like yak fur","msgtype":"m.text"},"ts":1382007849000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"mmmm, a yak fur pillow","msgtype":"m.text"},"ts":1382007861000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'm not really grumpy. If there's one thing I'm sure of it's that the people who talk about JSIDL don't give a fuck what I think","msgtype":"m.text"},"ts":1382007899000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway, with these fine words about smart people doing irrelevant things let me get back to work","msgtype":"m.text"},"ts":1382007905000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: i dunno, your words are more hurtful/discouraging than you might imagine.","msgtype":"m.text"},"ts":1382007924000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah, being negative on the premise that people don't care runs the risk that they actually do","msgtype":"m.text"},"ts":1382007965000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"But I don't want all discussions in the present to be dragged through \"but in the future JSIDLâ€¦\"","msgtype":"m.text"},"ts":1382007972000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I have invested time in JSIDL and I care","msgtype":"m.text"},"ts":1382007983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is very much a fair (and constructive) point","msgtype":"m.text"},"ts":1382007985000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"And I do think it's useful to think about what things might look like five years from now. And how a world where C++ is an implementation detail would work, and what that would simplify at the IDL level.","msgtype":"m.text"},"ts":1382008068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And whether we call that JSIDL or an iteration over IDL I care less about. I have been pushing changes to the latter in the absence of the former, but it's the same thing imo.","msgtype":"m.text"},"ts":1382008110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think it's the same thing at all","msgtype":"m.text"},"ts":1382008137000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"One is iterative improvement","msgtype":"m.text"},"ts":1382008142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The other is \"throw it all out and start again\"","msgtype":"m.text"},"ts":1382008154000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Even heycam thinks he might have to do a bunch of drastic changes at once which would require a bunch of down-level work.","msgtype":"m.text"},"ts":1382008180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"those aren't the only two options jgraham","msgtype":"m.text"},"ts":1382008187000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: for instance, you can have \"look, we figured out where we want to get that's a nice place, now we can move WebIDL closer to that in increments\"","msgtype":"m.text"},"ts":1382008217000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"And having some people work on a clean slate approach helps informing the iterative movement.","msgtype":"m.text"},"ts":1382008229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"figuring out what works and how to get there are different things","msgtype":"m.text"},"ts":1382008230000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I have already said that I think iterative improvements are good","msgtype":"m.text"},"ts":1382008261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What *does* make me grumpy is crap like they are pulling with ServiceWorker where people refuse to use WebIDL and end up externalising the cost onto vendors and ultimately users through poorer interop.","msgtype":"m.text"},"ts":1382008336000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Both are good. Just like having many programming languages is good. Temporary competition here can be great I think.","msgtype":"m.text"},"ts":1382008349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ServiceWorker isn't even a specification... It's just a set of notes and a TypeScript file...","msgtype":"m.text"},"ts":1382008364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And yet it is being implemented","msgtype":"m.text"},"ts":1382008375000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That is exactly what is annoying about it","msgtype":"m.text"},"ts":1382008389000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"IDL or JSIDL has nothing to do with that.","msgtype":"m.text"},"ts":1382008398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"didn't I just see that there was IDL somewhere that was gonna be contributed there?","msgtype":"m.text"},"ts":1382008405000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Yeah, jdm created some IDL.","msgtype":"m.text"},"ts":1382008417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It does if some specs are written in one dialect and some are written in another dialect and people only implement a single dialect","msgtype":"m.text"},"ts":1382008446000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ServiceWorker is not a spec","msgtype":"m.text"},"ts":1382008460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You are not making it better","msgtype":"m.text"},"ts":1382008472000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: and do you honestly think that's going to be the end situation?","msgtype":"m.text"},"ts":1382008479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It is a technology that is being put in browsers","msgtype":"m.text"},"ts":1382008482000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: transitions are always messy","msgtype":"m.text"},"ts":1382008486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really care if it gets a spec months after the implementations have shipped","msgtype":"m.text"},"ts":1382008500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because by then the damage is done","msgtype":"m.text"},"ts":1382008508000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"IDL is not going to make the damage any less, I can tell you that","msgtype":"m.text"},"ts":1382008517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seriously?","msgtype":"m.text"},"ts":1382008531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Especially since IDL is not interoperably implemented at the moment","msgtype":"m.text"},"ts":1382008535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There are two reasons it would","msgtype":"m.text"},"ts":1382008538000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"One is that IDL is directly supported by browsers so you can quickly get some level of interop at the bindings layer","msgtype":"m.text"},"ts":1382008565000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"All the issues are going to be in the processing model. Lifetime and such.","msgtype":"m.text"},"ts":1382008568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And the second is that being prepared to write a spec and IDL suggests an interest in working with the community on their own terms, rather than doing your own thing because you can't hold your nose and use a technology you don't like","msgtype":"m.text"},"ts":1382008663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems your beef is with ServiceWorker and not the idea of JSIDL...","msgtype":"m.text"},"ts":1382008712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did you email Alex?","msgtype":"m.text"},"ts":1382008718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I specifically said that this complaint was about ServiceWorker","msgtype":"m.text"},"ts":1382008748000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"about IDL not being interoperably implemented, does that mainly mean not implemented per spec in Blink?","msgtype":"m.text"},"ts":1382009582000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because Gecko now prety much follows the current spec, right?","msgtype":"m.text"},"ts":1382009615000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, Blink and WebKit I suppose","msgtype":"m.text"},"ts":1382012754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though to be fair to them, there's a bunch of bugs against the spec, too","msgtype":"m.text"},"ts":1382012776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah but modulo those bugs I've heard there's some problem that prevents them from implementing it per spec","msgtype":"m.text"},"ts":1382012835000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"performance issue or something?","msgtype":"m.text"},"ts":1382012842000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I know there's some intentional difference with extended attributes","msgtype":"m.text"},"ts":1382012901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, there might be something like that with respect to getting the prototype chain correct","msgtype":"m.text"},"ts":1382012906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and commas","msgtype":"m.text"},"ts":1382012909000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"trailing commas","msgtype":"m.text"},"ts":1382012920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I forgot the details, but yeah, that rings true","msgtype":"m.text"},"ts":1382012922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would be nice if the future IDL work (incremental or otherwise) finds some way to address that","msgtype":"m.text"},"ts":1382012979000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because it would really suck to have people do a bunch of new work on IDL in any form and then it still doesn't get implemented in Blink and WebKit per spec","msgtype":"m.text"},"ts":1382013024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think this is something Blink and WebKit have agreed to figure out, because what they have now doesn't make much sense ES-wise","msgtype":"m.text"},"ts":1382013054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1382013575000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm, HTML's fetching algorithm doesn't deal with termination","msgtype":"m.text"},"ts":1382013614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I'll say that fetching can be <dfn>terminated</dfn> with a /reason/","msgtype":"m.text"},"ts":1382013840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then annotate response objects with <dfn>termination</dfn> = /reason/","msgtype":"m.text"},"ts":1382013858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then XHR can check if response.termination == \"end-user abort\" or some such","msgtype":"m.text"},"ts":1382013881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: for dfn.js, it'd be kinda neat if references from obvious non-normative places were styled differently","msgtype":"m.text"},"ts":1382015646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: I like to reference algorithms all over, but when looking up where an algorithm is used I only care about none-.note related usage","msgtype":"m.text"},"ts":1382015700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least darobin is sensible enough to not let the new dom fork rot","msgtype":"m.text"},"ts":1382022154000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Another one?","msgtype":"m.text"},"ts":1382022180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why not? forking is fun","msgtype":"m.text"},"ts":1382022213000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Clearly","msgtype":"m.text"},"ts":1382022414000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The W3C needs more spooning","msgtype":"m.text"},"ts":1382023014000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham here here","msgtype":"m.text"},"ts":1382023911000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hear?","msgtype":"m.text"},"ts":1382024015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1382024017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably","msgtype":"m.text"},"ts":1382024514000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"can someone look at this and please tell me if this a problem with firefox/chrome http://jsfiddle.net/4KbML/","msgtype":"m.text"},"ts":1382025340000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"niloy: 1 is not an IDENT","msgtype":"m.text"},"ts":1382025643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"niloy: so you need quotes or an escape","msgtype":"m.text"},"ts":1382025655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, got it, thanks","msgtype":"m.text"},"ts":1382025678000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"[data-cid=\\31] should work","msgtype":"m.text"},"ts":1382025696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"niloy: see http://mothereff.in/css-escapes","msgtype":"m.text"},"ts":1382025704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, [data-cid=\\1] failed","msgtype":"m.text"},"ts":1382025741000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"niloy: well that's not what I suggested","msgtype":"m.text"},"ts":1382025756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"niloy: That's because that's an escape for u+0001","msgtype":"m.text"},"ts":1382025759000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But using quotes is better.  Don't do escapes for this, it's silly.","msgtype":"m.text"},"ts":1382025777000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes got it","msgtype":"m.text"},"ts":1382025870000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"annevk: there's a \"nobackref\" class or something that lets you exclude them from dfn.js, if you that works","msgtype":"m.text"},"ts":1382025924000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oooh","msgtype":"m.text"},"ts":1382025935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: ah, and it can also be applied on the parent","msgtype":"m.text"},"ts":1382025983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if that works for you, even. not sure what my word happened.","msgtype":"m.text"},"ts":1382026005000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: seems like adding && links[k].parentNode.className != \"note\" would be trivial","msgtype":"m.text"},"ts":1382026021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i use it in the <input type=foo> sections to exclude the \"doesn't apply\" sections","msgtype":"m.text"},"ts":1382026024000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: yeah i'm happy to add something else if you want it","msgtype":"m.text"},"ts":1382026031000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I'll play with this first I suppose","msgtype":"m.text"},"ts":1382026041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow, i didn't realise the w3c even forked the URL spec","msgtype":"m.text"},"ts":1382026116000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's special","msgtype":"m.text"},"ts":1382026120000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why would they not fork it when it was in the IETF but would fork it when it was at the WHATWG???","msgtype":"m.text"},"ts":1382026131000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, that's crazy. we fork the IETF spec, and they then fork the WHATWG spec.","msgtype":"m.text"},"ts":1382026159000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's forking all the way down","msgtype":"m.text"},"ts":1382026229000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"We technically didn't fork. I wrote the whole thing from scratch to prevent issues.","msgtype":"m.text"},"ts":1382026266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i don't mean that the spec text was forked","msgtype":"m.text"},"ts":1382026343000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and i guess the IETF had said they wouldn't maintain it, so it was more like HTML4->WHATWG HTML","msgtype":"m.text"},"ts":1382026368000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i just don't get it.","msgtype":"m.text"},"ts":1382026389000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"So there's http://www.w3.org/TR/url/","msgtype":"m.text"},"ts":1382026391000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"right; rebooting something frozen isn't forking","msgtype":"m.text"},"ts":1382026395000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"I remember Charles at some point saying he was going to write the URL spec","msgtype":"m.text"},"ts":1382026403000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"it's like the w3c's desire to piss off the whatwg is greater than their desire for to not piss off the ietf.","msgtype":"m.text"},"ts":1382026425000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"He was quite explicit about it not going to be a fork, but I think at the moment it's nothing...","msgtype":"m.text"},"ts":1382026439000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"Nothing is not a fork","msgtype":"m.text"},"ts":1382026449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So he was true to his word","msgtype":"m.text"},"ts":1382026456000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's a spork!","msgtype":"m.text"},"ts":1382026477000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"waits for URL naming bikeshedding so he can update his table. ","msgtype":"m.emote"},"ts":1382026837000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"for *more","msgtype":"m.text"},"ts":1382026856000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I'd like for http://url.spec.whatwg.org/ to be final, as a bunch of specs depend on that now","msgtype":"m.text"},"ts":1382026912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: also, I guess people can bikeshed, but at this point they'll need bargaining chips to get change","msgtype":"m.text"},"ts":1382026960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Fine with me.","msgtype":"m.text"},"ts":1382027075000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"In other news: https://blog.mozilla.org/research/2013/10/17/studying-lossy-image-compression-efficiency/","msgtype":"m.text"},"ts":1382027238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The right feedback for that study is \"graphs without axis labels? Really?\"","msgtype":"m.text"},"ts":1382027552000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"declaring php the ultimate failure","msgtype":"m.text"},"ts":1382027836000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"re: syntax changes depending on configuration","msgtype":"m.text"},"ts":1382027846000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: nrrr fix https://github.com/annevk/url/issues/1","msgtype":"m.text"},"ts":1382028162000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"file:/// should never exist on Windows systems.","msgtype":"m.text"},"ts":1382028190000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so many special casing for that","msgtype":"m.text"},"ts":1382028209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: so people run Node.js on top of Windows?","msgtype":"m.text"},"ts":1382028225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if a CORS-enabled fetch is in Anonymous mode, the 'omit credentials flag' is set. What is it set to?","msgtype":"m.text"},"ts":1382028228000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: a flag is either set or unset","msgtype":"m.text"},"ts":1382028245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"astearns: it's the English equivalent of a boolean","msgtype":"m.text"},"ts":1382028266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, I'm looking for the omit credentials mode","msgtype":"m.text"},"ts":1382028274000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: ooh, mode would be set to CORS","msgtype":"m.text"},"ts":1382028285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, good","msgtype":"m.text"},"ts":1382028292000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1382028294000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"annevk: yeah, it's pretty big on Windows","msgtype":"m.text"},"ts":1382028296000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"poor Node","msgtype":"m.text"},"ts":1382028328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Most of the web runs on Windows, all you elitist Mac users forget that :P","msgtype":"m.text"},"ts":1382028354000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(most of the web's users, I mean)","msgtype":"m.text"},"ts":1382028370000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I thought most of the web ran on Linux","msgtype":"m.text"},"ts":1382028408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"runs, even","msgtype":"m.text"},"ts":1382028414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a big chunk of the back end is linux; most of the front end remains windows","msgtype":"m.text"},"ts":1382028621000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"though windows 8 could fix that *cough*","msgtype":"m.text"},"ts":1382028666000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"annevk: the mode being set to CORS makes sense, but I'm not seeing the part in the spec that says this","msgtype":"m.text"},"ts":1382028694000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: http://fetch.spec.whatwg.org/#requests has CORS as a value","msgtype":"m.text"},"ts":1382028739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does, and HTML fetch says what it's set to, but none of the other fetch steps mention setting the value","msgtype":"m.text"},"ts":1382028815000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: the algorithm only reads it","msgtype":"m.text"},"ts":1382028838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's a few fields on a Request that are supposed to be writable, but most is only ever read","msgtype":"m.text"},"ts":1382028922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just want to make sure that what I define here: http://dev.w3.org/csswg/css-shapes/#shape-outside-property has the mode set to CORS and not 'never'","msgtype":"m.text"},"ts":1382028992000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"and I'm not seeing the spec text that tells me one way or the other","msgtype":"m.text"},"ts":1382029023000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: oh wait, it sets it to /always/","msgtype":"m.text"},"ts":1382029084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"astearns: which is good","msgtype":"m.text"},"ts":1382029092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it follows the HTML fetch steps?","msgtype":"m.text"},"ts":1382029109000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"so it's a slight change for same-origin requests","msgtype":"m.text"},"ts":1382029182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and that change was made after Hixie_ said he intended for it to be modeled after XHR anonymous mode","msgtype":"m.text"},"ts":1382029223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I suppose we might need to change that back at some point","msgtype":"m.text"},"ts":1382029234000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meeting, biab","msgtype":"m.text"},"ts":1382029242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gonna discuss JSON with the TAG","msgtype":"m.text"},"ts":1382029255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cannot really think of anything more exciting","msgtype":"m.text"},"ts":1382029260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1382030121000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"still doesn't understand what's wrong with DOMRectReadOnly","msgtype":"m.emote"},"ts":1382031750000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Me neither. :/  But DOMRectView is fine, I suppose.  Way better than DOMRectRead.","msgtype":"m.text"},"ts":1382031823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Isn't DOMRectView confusing with ArrayBufferView?","msgtype":"m.text"},"ts":1382031903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(since afacit ArrayBufferViews are not read-only)","msgtype":"m.text"},"ts":1382032009000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is there a quick way to add tests to the html5lib test suite?","msgtype":"m.text"},"ts":1382032009000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or do i need to check it out or something","msgtype":"m.text"},"ts":1382032015000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"YOu can probably edit it directly on github, if that's your thing","msgtype":"m.text"},"ts":1382032037000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You still need to make a pull request though","msgtype":"m.text"},"ts":1382032046000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonder if i have hg","msgtype":"m.text"},"ts":1382032060000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's git","msgtype":"m.text"},"ts":1382032066000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests","msgtype":"m.text"},"ts":1382032092000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh it moved to github? k","msgtype":"m.text"},"ts":1382032097000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"google search found the google code repo","msgtype":"m.text"},"ts":1382032105000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"we should probably close that if it's dead","msgtype":"m.text"},"ts":1382032118000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"NOTE: html5lib is now hosted at github: https://github.com/html5lib\"","msgtype":"m.text"},"ts":1382032166000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is there some way to test my test?","msgtype":"m.text"},"ts":1382032390000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Like what?","msgtype":"m.text"},"ts":1382032498000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"YOu can run the testsuite in html5lib","msgtype":"m.text"},"ts":1382032506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It might fail of course","msgtype":"m.text"},"ts":1382032514000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Depending on what you are testing","msgtype":"m.text"},"ts":1382032522000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"guess i'd better get html5lib too","msgtype":"m.text"},"ts":1382032536000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i just want to make sure my syntax is right :-)","msgtype":"m.text"},"ts":1382032551000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: Hmm, maybe, yeah.","msgtype":"m.text"},"ts":1382032590000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The whole conversation is ridiculous.  LSP isn't dependent on the name of a class, so being okay with subtyping under one name but not another is silly.","msgtype":"m.text"},"ts":1382032765000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wait, what?","msgtype":"m.text"},"ts":1382032776000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume he still wasn't OK with subtyping because that would make no sense","msgtype":"m.text"},"ts":1382032793000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"man, i've no idea what i'm doing with these newfangled source repos and stuff","msgtype":"m.text"},"ts":1382032848000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if i've got a local copy of the html5lib repo, how do i run it?","msgtype":"m.text"},"ts":1382032869000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't want to install it...","msgtype":"m.text"},"ts":1382032874000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well I don't think you can anymore because it needs a compat library to work in both Python 2 and 3","msgtype":"m.text"},"ts":1382032943000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so how does an html5lib developer, like, develop it?","msgtype":"m.text"},"ts":1382032970000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"But you should use a python virtualenvironment that you can blow away when you are done","msgtype":"m.text"},"ts":1382032972000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i miss the old days of just downloading a tarball, running \"make\", and then sending the devs a diff.","msgtype":"m.text"},"ts":1382033009000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: No, no, subtyping is fine.","msgtype":"m.text"},"ts":1382033042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://simononsoftware.com/virtualenv-tutorial/ \"Installation is very easy.\" first example involves sudo.","msgtype":"m.text"},"ts":1382033061000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: You do something like \"virtualenv html5lib; source html5lib/bin/activate; cd /path/to/html5lib/clone; pip install -e ./\"","msgtype":"m.text"},"ts":1382033084000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Virtually everything requires sudo.  That's not a marker of \"not easy\".","msgtype":"m.text"},"ts":1382033087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Is fine in principle or in practice?","msgtype":"m.text"},"ts":1382033108000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Don't care, because practice is good enough for me.","msgtype":"m.text"},"ts":1382033122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wow, i actually have virtualenv installed on this box.","msgtype":"m.text"},"ts":1382033129000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: thanks","msgtype":"m.text"},"ts":1382033133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: You can do almost everything without sudo.","msgtype":"m.text"},"ts":1382033151000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Except installing things.","msgtype":"m.text"},"ts":1382033162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Just install into non-standard locations.","msgtype":"m.text"},"ts":1382033172000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm pretty sure that DOMRect extends DOMRectReadOnly violates the LSP. I'm not convinved that's a real problem in js, but I don't have a convincing argument","msgtype":"m.text"},"ts":1382033177000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which i susually more difficult.","msgtype":"m.text"},"ts":1382033183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Why would it violate the LSP?","msgtype":"m.text"},"ts":1382033203000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Only if you consider \"can't be modified by me, but might be modified by something else\" an ability which you lose, in which case LSP would prevent virtually all subclassing.","msgtype":"m.text"},"ts":1382033216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe the other way around?","msgtype":"m.text"},"ts":1382033220000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"great, i have virtualenv, but not pip. sigh.","msgtype":"m.text"},"ts":1382033223000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: easy_install pip!","msgtype":"m.text"},"ts":1382033229000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: see above re sudo. :-)","msgtype":"m.text"},"ts":1382033245000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Because part of the contract of the superclass is to be ReadOnly, surely?","msgtype":"m.text"},"ts":1382033253000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_: (what's pip? a package manager. how do I install it? `easy_install pip`. what's easy_install? a package manager)","msgtype":"m.text"},"ts":1382033264000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"What's pip?\" \"A python package manager.\" \"How do I install it?\" \"easy_install pip\" \"What's easy_install?\" \"A python package manager.\"","msgtype":"m.text"},"ts":1382033266000,"senderName":"Osmose1000","senderId":"Osmose1000@irc"},
{"content":{"body":"gsnedders++","msgtype":"m.text"},"ts":1382033275000,"senderName":"Osmose1000","senderId":"Osmose1000@irc"},
{"content":{"body":"(Yes, this is A Thing.)","msgtype":"m.text"},"ts":1382033282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Although I guess, since this is actually mutable, it doesn't matter","msgtype":"m.text"},"ts":1382033289000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OK, I am mildly convinced","msgtype":"m.text"},"ts":1382033300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok let's pretend i tested this test and it's good...","msgtype":"m.text"},"ts":1382033312000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1382033339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: Yeah, it's already mutable, just not by *you*.","msgtype":"m.text"},"ts":1382033341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hm, i guess i haven't put in the right #errors","msgtype":"m.text"},"ts":1382033344000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: Typically mutation isn't considered part of the contract, as there are (at a high level) no setters","msgtype":"m.text"},"ts":1382033351000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So it's a *very weak* thing to depend on if you're trying to design by contracts.","msgtype":"m.text"},"ts":1382033354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not gonna be able to guess what those should be","msgtype":"m.text"},"ts":1382033356000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Does anyone care about errors?","msgtype":"m.text"},"ts":1382033360000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"most of the tests seem to list them","msgtype":"m.text"},"ts":1382033376000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1382033394000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So inheriting from DOMRectReadOnly is fine, and ReadOnly is a better name than View","msgtype":"m.text"},"ts":1382033412000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wait hold on. if i'm using virtualenv, why does easy_install want to install as root.","msgtype":"m.text"},"ts":1382033441000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"isn't the whole point here that i don't have to do that?","msgtype":"m.text"},"ts":1382033452000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That seems wrong","msgtype":"m.text"},"ts":1382033491000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OTOH installing pip as root makes more sense. I would do it with your system package manager","msgtype":"m.text"},"ts":1382033512000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'd rather not screw around with my root on this machine, at least not for something this minor","msgtype":"m.text"},"ts":1382033538000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: The only thing you should need installed as root is virtualenv","msgtype":"m.text"},"ts":1382033578000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well then if you activated the virtualenv easy_install pip should work","msgtype":"m.text"},"ts":1382033584000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, i have that","msgtype":"m.text"},"ts":1382033585000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ait","msgtype":"m.text"},"ts":1382033589000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Wait","msgtype":"m.text"},"ts":1382033593000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Doesn't venv automatically install pip?","msgtype":"m.text"},"ts":1382033611000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, i see.","msgtype":"m.text"},"ts":1382033615000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"activation is a per-shell thing.","msgtype":"m.text"},"ts":1382033618000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Are you sure that it is activated?","msgtype":"m.text"},"ts":1382033621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"YEs","msgtype":"m.text"},"ts":1382033627000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"my bad.","msgtype":"m.text"},"ts":1382033631000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It is just setting environment variables really","msgtype":"m.text"},"ts":1382033640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"there we go.","msgtype":"m.text"},"ts":1382033653000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah it makes sense, i just didn't realise what it was doing.","msgtype":"m.text"},"ts":1382033665000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Mutating PATH and a couple of other things, basically","msgtype":"m.text"},"ts":1382033681000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok, making progress now.","msgtype":"m.text"},"ts":1382033736000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I'm going home, so I will leave you in the capable, if slightly dirty, hands of gsnedders","msgtype":"m.text"},"ts":1382033779000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1382033787000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"thanks for the help","msgtype":"m.text"},"ts":1382033789000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so, how do i run the tests now that it's installed?","msgtype":"m.text"},"ts":1382033848000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"nosetests\"?","msgtype":"m.text"},"ts":1382033868000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok, that worked.","msgtype":"m.text"},"ts":1382033916000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham: â€¦","msgtype":"m.text"},"ts":1382033925000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jesus we have a lot of tests","msgtype":"m.text"},"ts":1382034156000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"are these Fs expected?","msgtype":"m.text"},"ts":1382034173000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"boo, it didn't tell me what #errors i should put in","msgtype":"m.text"},"ts":1382034217000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I think the issue is `function f(rect) { if (!(rect instanceof DOMRectReadOnly)) { throw new Error(\"Anyone can modify this, I don't want to give it to untrusted consumers\"); } else { untrustedConsumer.useRect(rect); /* can assume rect was not modified */ } }`","msgtype":"m.text"},"ts":1382034298000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or more simply, `if (rect instanceof DOMRectReadOnly) { untrustedConsumer.useRect(rect); /* subsequent code can assume rect was not modified */ }`","msgtype":"m.text"},"ts":1382034408000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"gsnedders: so... what should i do with respect to #errors?","msgtype":"m.text"},"ts":1382034421000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"does hsivonen have code that tells me what they should be?","msgtype":"m.text"},"ts":1382034429000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1382034431000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, ignore them, I think","msgtype":"m.text"},"ts":1382035169000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_, people who care will fix them up","msgtype":"m.text"},"ts":1382035177000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, there's been some work on the Blink side at least to get prototypes set up per webidl","msgtype":"m.text"},"ts":1382035207000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: As in what strings should they be?","msgtype":"m.text"},"ts":1382037731000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_: And what failures where?","msgtype":"m.text"},"ts":1382037739000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_: Up-to-date html5lib git should fail nothing, as should the latest release.","msgtype":"m.text"},"ts":1382037800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: as in what strings, yeah","msgtype":"m.text"},"ts":1382038248000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(the Fs were errors in my test)","msgtype":"m.text"},"ts":1382038248000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders: so... how do i submit a pull request? i'm guessing that \"git clone\" does a local clone, which you probably can't get to...","msgtype":"m.text"},"ts":1382038296000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"follows https://help.github.com/articles/fork-a-repo","msgtype":"m.emote"},"ts":1382038439000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why on earth does git diff try to paginate","msgtype":"m.text"},"ts":1382039534000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm in an emacs buffer, i'm good for pagination thanks","msgtype":"m.text"},"ts":1382039554000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You might find that git and UX don't exactly get on well","msgtype":"m.text"},"ts":1382039621000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i'm using emacs, i'm not expecting anything impressive in terms of UX :-P","msgtype":"m.text"},"ts":1382039655000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but seriously, this is unix, who runs a pager by default. sheesh.","msgtype":"m.text"},"ts":1382039670000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(/me learns of  git config --global core.pager cat)","msgtype":"m.text"},"ts":1382039677000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wow, really? |git diff| and |git commit| work on different sets?","msgtype":"m.text"},"ts":1382039773000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"...yes?","msgtype":"m.text"},"ts":1382039791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For good reason, so you don't have to put stuff into the staging area just to get a diff, and so you actually have a staging area, respectively.","msgtype":"m.text"},"ts":1382039827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what's a \"staging area\" if it's not my working repository?","msgtype":"m.text"},"ts":1382039858000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"seems weird to assume that i'd want changes from only some files, but that i'd want all the changes in those files.","msgtype":"m.text"},"ts":1382039889000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You've got your working files, which are the shit you're actively editing. The staging area, which are the edits you're prepping for commit.  And then the actual repo, which contains the commited stuff.","msgtype":"m.text"},"ts":1382039892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand the difference between the first two of those","msgtype":"m.text"},"ts":1382039911000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That way you can easily commit only some files, or only parts of some files, etc etc.","msgtype":"m.text"},"ts":1382039914000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do you only commit a part of a file?","msgtype":"m.text"},"ts":1382039924000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"`git add -p`","msgtype":"m.text"},"ts":1382039927000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"funku","msgtype":"m.text"},"ts":1382039944000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It rolls through all the edited chunks of the chosen file, asking whether to stage it or not.","msgtype":"m.text"},"ts":1382039946000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"funky, even","msgtype":"m.text"},"ts":1382039946000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I've been using that a lot today.","msgtype":"m.text"},"ts":1382039952000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah it's something you end up not being able to live without","msgtype":"m.text"},"ts":1382039973000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"As I make general improvement to some functions while in the middle of edits to unrelated stuff that I dont' want to commit yet.","msgtype":"m.text"},"ts":1382039973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"does seem weird and useless at first though","msgtype":"m.text"},"ts":1382039986000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"with other source control systems, i just create a different tree for each different working environment.","msgtype":"m.text"},"ts":1382039986000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that way i can build each thing separately.","msgtype":"m.text"},"ts":1382039991000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I could live without git very well :)","msgtype":"m.text"},"ts":1382039996000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"otherwise, how do you test it?","msgtype":"m.text"},"ts":1382039997000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, you don't test","msgtype":"m.text"},"ts":1382040004000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sure, you can do that with git too, just branch more eagerly. But that's a lot of effort that you don't always want to go to.","msgtype":"m.text"},"ts":1382040016000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think you can tell diff to look at the staging area instead of the active files.","msgtype":"m.text"},"ts":1382040051000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In case that's what you want.","msgtype":"m.text"},"ts":1382040058000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well i have to say the number of times i have more than one edit going on at once is basically never, so it's not clear i'd care either way, but ok","msgtype":"m.text"},"ts":1382040066000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"y'all have fun with your -p :-)","msgtype":"m.text"},"ts":1382040071000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I used to think that too, then I didn't.  Shrug.","msgtype":"m.text"},"ts":1382040080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In any case, you can ignore the staging area entirely if you just always do `git commit -a`.","msgtype":"m.text"},"ts":1382040094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Well, almost.  When adding brand new files to the repo, you still have to add them manually.  Or maybe -A does that? I haven't looked recently.)","msgtype":"m.text"},"ts":1382040119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: It's really handy if you've done a chunk of work that, in retrospect, deserves to be documented as separate commits","msgtype":"m.text"},"ts":1382040149000,"senderName":"JakeA_","senderId":"JakeA_@irc"},
{"content":{"body":"Eg, if you're adding a new feature & spot a typo in another feature","msgtype":"m.text"},"ts":1382040209000,"senderName":"JakeA_","senderId":"JakeA_@irc"},
{"content":{"body":"gsnedders: https://github.com/html5lib/html5lib-tests/pull/23","msgtype":"m.text"},"ts":1382040212000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"closes all his github windows and nukes his local copies and goes back to hug his subversion","msgtype":"m.emote"},"ts":1382040230000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"SourceTree is a really nice GUI that does the -p stuff betterer","msgtype":"m.text"},"ts":1382040277000,"senderName":"JakeA_","senderId":"JakeA_@irc"},
{"content":{"body":"(for the record, despite my sarcastic whining above, git seems to be no worse than svn or cvs or perforce or any of the other repo systems i've interacted with)","msgtype":"m.text"},"ts":1382040426000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh, it is ;)","msgtype":"m.text"},"ts":1382040467000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(there's something about the problem of version control that just seems to result in weird UX all around)","msgtype":"m.text"},"ts":1382040472000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: it's definitely no worse than perforce.","msgtype":"m.text"},"ts":1382040648000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: or cvs","msgtype":"m.text"},"ts":1382040649000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it being worse than svn or not probably boils down to whether you like distributed repos or not","msgtype":"m.text"},"ts":1382040678000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and i could see that going either way","msgtype":"m.text"},"ts":1382040689000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: FY","msgtype":"m.text"},"ts":1382040793000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Every source control system is absolutely terrible when you initially compare it to what you're used to.","msgtype":"m.text"},"ts":1382040801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: *FYI, the error strings are meaningless, currently.","msgtype":"m.text"},"ts":1382040803000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_: One line per parse error. That's the syntax. Content is meaningless.","msgtype":"m.text"},"ts":1382040815000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: well in the pull request i put up, i put no errors. no idea how many errors there should be, but i expect more than one.","msgtype":"m.text"},"ts":1382040850000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Ideally we'd have position and message assertions, but it's hard to know what to do (what position should a parse error be triggered? probably where the input stream is when the tokenizer/tree builder says parse error","msgtype":"m.text"},"ts":1382041129000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1382041146000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: and what message do we check for to make they've got the right parse error?)","msgtype":"m.text"},"ts":1382041148000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"In theory Nolan got all the positions and numbers up to date. His impl is the only one that has used the parse errors in the tests in years, though.","msgtype":"m.text"},"ts":1382041223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"When I update html5lib-python to match the spec I'll do something.","msgtype":"m.text"},"ts":1382041309000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_, so it this a test for a change you're making?","msgtype":"m.text"},"ts":1382041346000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no, mostly just an excuse to see if i can add a test.","msgtype":"m.text"},"ts":1382041379000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Okay","msgtype":"m.text"},"ts":1382041389000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"reviews","msgtype":"m.emote"},"ts":1382041391000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: The format hasn't changed since you last wrote any!","msgtype":"m.text"},"ts":1382041398000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, but the source code repo has changed twice since then :-P","msgtype":"m.text"},"ts":1382041415000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"This is true.","msgtype":"m.text"},"ts":1382041428000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_, let's see if the spec confuses me as much as the last time I tried this ;)","msgtype":"m.text"},"ts":1382041438000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1382041445000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"is currently trying to implement the spec using CSP!","msgtype":"m.emote"},"ts":1382041453000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1382041767000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"did i screw up?","msgtype":"m.text"},"ts":1382041778000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"In <svg><x>, how does x end up in the svg namespace?","msgtype":"m.text"},"ts":1382041865000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why would it not?","msgtype":"m.text"},"ts":1382041880000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#tree-construction","msgtype":"m.text"},"ts":1382041921000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It should","msgtype":"m.text"},"ts":1382041930000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://whatwg.org/html#tree-construction","msgtype":"m.text"},"ts":1382041931000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"As each token is emitted from the tokenizer\"","msgtype":"m.text"},"ts":1382041941000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ends up in \"Otherwise\"","msgtype":"m.text"},"ts":1382041952000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Aha","msgtype":"m.text"},"ts":1382041956000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"-> foreign content","msgtype":"m.text"},"ts":1382041956000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"-> Any other start tag","msgtype":"m.text"},"ts":1382041964000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"-> Insert a foreign element for the token, in the same namespace as the adjusted current node.","msgtype":"m.text"},"ts":1382041975000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham / gsnedders: I've reviewed it, but it doesn't seem like I have access to merge it","msgtype":"m.text"},"ts":1382042672000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes you do.","msgtype":"m.text"},"ts":1382042742000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"... now :)","msgtype":"m.text"},"ts":1382042756000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1382042759000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1382042772000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyone else you think who should be added as reviewer?","msgtype":"m.text"},"ts":1382042794000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Not off hand","msgtype":"m.text"},"ts":1382042819000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Okay. Then I'll leave it as is for now.","msgtype":"m.text"},"ts":1382042835000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Not sure how Content Security Policy would help you implement a parser :p","msgtype":"m.text"},"ts":1382042927000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: CSP is far too overloaded!","msgtype":"m.text"},"ts":1382042998000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Don't you mean CPS?","msgtype":"m.text"},"ts":1382043045000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If not I have no idea what you do mean?","msgtype":"m.text"},"ts":1382043058000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DOMRECTS!!!","msgtype":"m.text"},"ts":1382043285000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"And on that note, I'm out :)","msgtype":"m.text"},"ts":1382043301000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: Communicating sequential processes","msgtype":"m.text"},"ts":1382044081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Everything I'm doing seems to resolve around CSP at the moment. Under at least five different definitions of CSP.)","msgtype":"m.text"},"ts":1382044115000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok what should devicePixelRatio return if there's no screen at all?","msgtype":"m.text"},"ts":1382045411000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or if there is a screen but it doesn't have a concept of pixels?","msgtype":"m.text"},"ts":1382045559000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Every screen has some notion of resolution.","msgtype":"m.text"},"ts":1382046310000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(and d-p-r is just the inverse of resolution)","msgtype":"m.text"},"ts":1382046319000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If there's no screen at all, I dunno.","msgtype":"m.text"},"ts":1382046344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if my screen is a guy painting on a canvas with a brush, what's the resolution? :-)","msgtype":"m.text"},"ts":1382046405000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I dunno, you'd have to test him.  How tiny can he paint?","msgtype":"m.text"},"ts":1382046789000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Approximate resolutions are fine - printers have fuzzy resolutions in some cases too.)","msgtype":"m.text"},"ts":1382046808000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"FWIW, if anyone wants IRCCloud, let me know","msgtype":"m.text"},"ts":1382048756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think i'll return 1 for the no-screen case, i guess it's less likely to confuse scripts than returning e.g. 0","msgtype":"m.text"},"ts":1382050316000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there. now bed time","msgtype":"m.text"},"ts":1382050734000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]