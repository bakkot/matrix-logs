[
{"content":{"body":"Domenic: so there's an interesting case here relating to `await` and the new EnqueuePromise change","msgtype":"m.text"},"ts":1582955815000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"This shows up here (Chrome-only as Chrome's the only one that implements it) https://github.com/web-platform-tests/wpt/blob/master/wake-lock/wakelock-type.https.any.js","msgtype":"m.text"},"ts":1582955837000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"essentially we have `await p` in the main frame, where `p` is a promise that comes from another frame that has since navigated away","msgtype":"m.text"},"ts":1582955934000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"but `await` does a PromiseResolve on `p`, which due to arcane JavaScript rules actually treats `p` as a non-promise thenable. But `p.then` is from the frame that is no longer active, so `await` will never actually return","msgtype":"m.text"},"ts":1582956079000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"On the other hand, `p.then(() => {})` works totally fine in the main frame, since the microtask is queued on the main frame.","msgtype":"m.text"},"ts":1582956133000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I guess the question is 0) does this sound right, given the current spec? and if so 1) is this behavior desirable?","msgtype":"m.text"},"ts":1582956198000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Actually I'm gonna file an issue","msgtype":"m.text"},"ts":1582956375000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"}
]