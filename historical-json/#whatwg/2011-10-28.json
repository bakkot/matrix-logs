[
{"content":{"body":"Hixie: fwiw, I'd vote for dropping the term \"xhtml document\" altogether","msgtype":"m.text"},"ts":1319761740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: if you need an alternative, consider \"document in the XHTML syntax\"","msgtype":"m.text"},"ts":1319762040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or \"conforming document in the XHTML syntax\" or \"document conforming to the XHTML syntax\"","msgtype":"m.text"},"ts":1319762100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hober: gotta represent!","msgtype":"m.text"},"ts":1319763120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: i think hsivonen convinced me we should give the term lip service","msgtype":"m.text"},"ts":1319763121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: OK","msgtype":"m.text"},"ts":1319763540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i just looked up \"complicated\" in the thesaurus to find a better word to use somewhere in the spec and wow, that's just a long list of words to describe HTML","msgtype":"m.text"},"ts":1319763900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1319763901000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"byzantine?","msgtype":"m.text"},"ts":1319763902000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"baroque?","msgtype":"m.text"},"ts":1319763903000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"intricate... bewildering... perplexing... labrynthine... tortuous...","msgtype":"m.text"},"ts":1319763960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tricky... knotty... thorny... tangled...","msgtype":"m.text"},"ts":1319763961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"intertwingly","msgtype":"m.text"},"ts":1319763962000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other news","msgtype":"m.text"},"ts":1319764080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"turns out i'd never specced how input.width and input.height actually worked","msgtype":"m.text"},"ts":1319764081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they were hyperlinked to a section that described a bunch of other width and height IDL attributes, but didn't list <input>","msgtype":"m.text"},"ts":1319764082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, oops","msgtype":"m.text"},"ts":1319764083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how the blazes am i supposed to test http://www.w3.org/Bugs/Public/show_bug.cgi?id=14526","msgtype":"m.text"},"ts":1319764140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That's what you get for using the word \"just\" before \"build one\" :p","msgtype":"m.text"},"ts":1319764620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1319764680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But, uh, doesn't OSX use NFD for filenames? So test what browsers on OSX do with a filename that could contain a decomposed character, maybe?","msgtype":"m.text"},"ts":1319764800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://damowmow.com/playground/demos/filename-upload/ leads me to be even more confused","msgtype":"m.text"},"ts":1319765760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some used 0xCC 0x88 and some used 0xC3 0xBC","msgtype":"m.text"},"ts":1319765820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh sorry","msgtype":"m.text"},"ts":1319765880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some used u 0xCC 0x88 and some used 0xC3 0xBC. that makes more sense.","msgtype":"m.text"},"ts":1319765881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hi","msgtype":"m.text"},"ts":1319766900000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"the DOM3 spec has following line:","msgtype":"m.text"},"ts":1319766901000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"\"Authors should use the KeyboardEvent.char and KeyboardEvent.key attributes instead of the charCode and keyCode attributes, respectively.\"","msgtype":"m.text"},"ts":1319766902000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"is this really what developers should do currently? KeyboardEvent.char and KeyboardEvent.key does not seem to be supported by latest version of Chrome","msgtype":"m.text"},"ts":1319766960000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"s/does/do","msgtype":"m.text"},"ts":1319766961000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"DOM3 events?","msgtype":"m.text"},"ts":1319766962000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319766963000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"That spec is not noted for being useful","msgtype":"m.text"},"ts":1319767020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"did you cut out the \"... if they don't want anything to work\" part","msgtype":"m.text"},"ts":1319767021000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"uhm... let me check :)","msgtype":"m.text"},"ts":1319767080000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"jarek: Anyway, you are all good per RFC2119","msgtype":"m.text"},"ts":1319767081000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, it says something between those lines...","msgtype":"m.text"},"ts":1319767140000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"I was worried because it called keyCode and charCode as legacy","msgtype":"m.text"},"ts":1319767200000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"dom3 events can't really call anything else legacy","msgtype":"m.text"},"ts":1319767560000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: http://www.w3.org/TR/DOM-Level-3-Events/#legacy-key-attributes","msgtype":"m.text"},"ts":1319767561000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Seeriously, I wouldn't expect DOM3 events to be accurate","msgtype":"m.text"},"ts":1319767920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jarek, what i meant is that dom3 events is so old and incorrect you should ignore it","msgtype":"m.text"},"ts":1319768100000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"d3e isn't old","msgtype":"m.text"},"ts":1319768101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jarek, what i meant is that dom3 events is so old and incorrect you should ignore it","msgtype":"m.text"},"ts":1319768102000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"sorry, mistaken","msgtype":"m.text"},"ts":1319768103000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jgraham, well it has many old parts","msgtype":"m.text"},"ts":1319768104000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"some parts are newly edited","msgtype":"m.text"},"ts":1319768160000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1319768161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"many important parts are not","msgtype":"m.text"},"ts":1319768162000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"and it's a total mystery to me why anyone bothers editing it","msgtype":"m.text"},"ts":1319768163000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"is there any other specification that would describe keyboard events?","msgtype":"m.text"},"ts":1319768220000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"afair there was something on touch events","msgtype":"m.text"},"ts":1319768221000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"but that's different story","msgtype":"m.text"},"ts":1319768280000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"http://www.w3.org/TR/touch-events/","msgtype":"m.text"},"ts":1319768340000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"^ why it is not part of DOM3 events?","msgtype":"m.text"},"ts":1319768400000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"is it going to be merged in the future?","msgtype":"m.text"},"ts":1319768401000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Hixie: above I asked why the new form validation events don't bubble","msgtype":"m.text"},"ts":1319769540000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"(ask again) Is there any problem if browsers ignore media type of a manifest? I think this was probably discussed to death but I would be grateful if someone reminds me again.","msgtype":"m.text"},"ts":1319771040000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"wycats: in case the form control is in a form that isn't the form it's associated with","msgtype":"m.text"},"ts":1319771760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kennyluck: well it would violate the HTTP spec...","msgtype":"m.text"},"ts":1319771761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it basically breaks event delegation though","msgtype":"m.text"},"ts":1319771762000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"event delegation is a pretty standard way to build apps","msgtype":"m.text"},"ts":1319771763000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"event delegation?","msgtype":"m.text"},"ts":1319772000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's common for people to register for events in entire regions of the page","msgtype":"m.text"},"ts":1319772240000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"and use event.target to identify where the event came from","msgtype":"m.text"},"ts":1319772241000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"this has two positive effects","msgtype":"m.text"},"ts":1319772242000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"1) no need to register handlers for all elements you are interested in (performance)","msgtype":"m.text"},"ts":1319772243000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"2) ability to dynamically generate markup without having to worry about also binding events","msgtype":"m.text"},"ts":1319772300000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"http://api.jquery.com/delegate/ jQuery provides widely-used facilities for this","msgtype":"m.text"},"ts":1319772301000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1319772302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can still do that","msgtype":"m.text"},"ts":1319772303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just register a capture listener on whatever element you want to do it on","msgtype":"m.text"},"ts":1319772304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: almost no existing delegation facilities use capture","msgtype":"m.text"},"ts":1319772420000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"and further, capture has the reverse intended effect","msgtype":"m.text"},"ts":1319772421000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"namely, it bubbles backwards from the expected direction","msgtype":"m.text"},"ts":1319772480000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"if all you want to do is delegate, it doesn't matter what direction it goes in","msgtype":"m.text"},"ts":1319772540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it matters if you want to avoid conflicting with event handlers that some other code may have registered","msgtype":"m.text"},"ts":1319772780000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"i don't really understand the use case here","msgtype":"m.text"},"ts":1319772781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you can always work around it by adding a capture handler on the root that refires the event as a bubbling event :-)","msgtype":"m.text"},"ts":1319772782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"refiring isn't particularly reliable, especially with events with native handling","msgtype":"m.text"},"ts":1319772960000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Hixie: trust me when I say \"events that don't bubble are broken to most developers\"","msgtype":"m.text"},"ts":1319772961000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"https://groups.google.com/forum/#!topic/jquery-standards/SKdrgth7igY","msgtype":"m.text"},"ts":1319772962000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Hixie, can you elaborate on this a little bit? (re. it would violate the HTTP spec) Is that a strong reason given how many times \"willful violation\" appears in the spec?","msgtype":"m.text"},"ts":1319773260000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"wycats: i don't see why refiring wouldn't work if you really needed it","msgtype":"m.text"},"ts":1319778240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: bubbling would be broken too, for this particular feature","msgtype":"m.text"},"ts":1319778241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: if there are specific uses cases you want me to look at, though, that might show that i am wrong, which would be useful","msgtype":"m.text"},"ts":1319778242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: it's hard to discuss in the abstract","msgtype":"m.text"},"ts":1319778243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kennyluck: the wilful violations are all because i had no choice, e.g. because the other spec contradicts reality","msgtype":"m.text"},"ts":1319778300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I have an interesting spec philosophy question","msgtype":"m.text"},"ts":1319780940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"choice of font?","msgtype":"m.text"},"ts":1319781060000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah right","msgtype":"m.text"},"ts":1319781061000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I have an API that lets a Worker generate data for a MediaStream. This is done by periodically firing an event at the Worker to fetch more data. Suppose the MediaStream isn't connected to anything and is eventually GCed.","msgtype":"m.text"},"ts":1319781062000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Should I keep firing events at the Worker to preserve the non-observability of GC?","msgtype":"m.text"},"ts":1319781120000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(Which means, of course, keeping the Worker alive)","msgtype":"m.text"},"ts":1319781121000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hmm, well are you required to fire the event at any particular rate?","msgtype":"m.text"},"ts":1319781122000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"can the worker tell that the worker should have fired an event by a particular time?","msgtype":"m.text"},"ts":1319781123000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"not really","msgtype":"m.text"},"ts":1319781180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but I think it'd be reasonable to expect the event to fire *eventually*","msgtype":"m.text"},"ts":1319781181000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah. is it just theoretical observability that you're worried about? or practical web compat problems due to different gc strategies?","msgtype":"m.text"},"ts":1319781240000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I don't understand what events would be fired once the stream wasn't connected to anything","msgtype":"m.text"},"ts":1319781241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"conceptually the stream keeps playing, but no-one's listening","msgtype":"m.text"},"ts":1319781242000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I haven't thought about Web compat problems","msgtype":"m.text"},"ts":1319781300000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i know: kill the worker, then it won't know a thing ;)","msgtype":"m.text"},"ts":1319781301000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I have written a test that accidentally broke because the stream got GCed and my worker stopped getting called, and I was waiting for it to get through a certain amount of work","msgtype":"m.text"},"ts":1319781302000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"fwiw you could get the same effect (logically) without workers complicating the question, if you were firing progress events on a stream and the same thing happened","msgtype":"m.text"},"ts":1319781303000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Can't you make that explicit?","msgtype":"m.text"},"ts":1319781304000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"make what explicit?","msgtype":"m.text"},"ts":1319781360000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(on an abstract stream--not talking about any particular API, not sure if there are any that fit)","msgtype":"m.text"},"ts":1319781361000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"one possibility I just thought of is that I could try making MediaStreams that aren't connected to anything block","msgtype":"m.text"},"ts":1319781420000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"then if a MediaStream gets GCed, it must have been blocked, in which case it's correct to stop firing processmedia events at the worker","msgtype":"m.text"},"ts":1319781480000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i don't know that API, but that seems better than requesting info and throwing it away if nobody's connected to it; that just seems wasteful","msgtype":"m.text"},"ts":1319781481000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but that means if you want a ProcessedMediaStream whose worker just analyzes input samples and doesn't produce anything, you'll need to nevertheless connect it to a dummy muted audio element :-(","msgtype":"m.text"},"ts":1319781600000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"from an I/O-pin-based API perspective that's not too horrible","msgtype":"m.text"},"ts":1319781601000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"roc: That sounds OK to me. Conceptually having no low if there is no sink sounds reasonable","msgtype":"m.text"},"ts":1319781720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*flow","msgtype":"m.text"},"ts":1319781721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm ho","msgtype":"m.text"},"ts":1319781722000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"out of curiosity, if you start a chain like that, and drop all references to the objects, is there any way to get it back (eg. a \"array of currently playing streams\" attribute somewhere), or is it effectively leaked and playing forever?","msgtype":"m.text"},"ts":1319781780000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(leaking like that isn't too bad--don't do that--but a little unusual on the platform)","msgtype":"m.text"},"ts":1319781840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(of course, you can't say \"the input element gets GC'd and it stops\", since then you're back at square one with exposed GC behavior :)","msgtype":"m.text"},"ts":1319781841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"in this API I use media elements for output","msgtype":"m.text"},"ts":1319781900000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and media elements already handle this issue","msgtype":"m.text"},"ts":1319781960000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"basically you can go (new Audio(...)).play();","msgtype":"m.text"},"ts":1319781961000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"dropping the reference to the element","msgtype":"m.text"},"ts":1319781962000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and it will play until the stream ends","msgtype":"m.text"},"ts":1319781963000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and then everything gets cleaned up","msgtype":"m.text"},"ts":1319781964000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"of course, the stream might not end, but whatever","msgtype":"m.text"},"ts":1319781965000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"also, if the document becomes \"inactive\" (which is very carefully defined), the element pauses automatically, and since there's no reference to it there's no way to start it again so again we can clean up","msgtype":"m.text"},"ts":1319782020000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jgraham: thanks for the reassurance, I'll probably go that way :-)","msgtype":"m.text"},"ts":1319782080000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie: can you explain the use-case for it not bubbling better?","msgtype":"m.text"},"ts":1319782560000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: if someone were to use the fact that it bubbled to put a handler on a <form>, that handler would fire even for controls that were children of the form but had a form=\"\" attribute and were thus associated with another form.","msgtype":"m.text"},"ts":1319783040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"them's the breaks with bubbling in general","msgtype":"m.text"},"ts":1319783100000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"we could fire a different event on associated forms","msgtype":"m.text"},"ts":1319783101000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"invalidform","msgtype":"m.text"},"ts":1319783102000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"or we could just not bubble, since there doesn't seem to be a use case for it :-)","msgtype":"m.text"},"ts":1319783103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's inconsistent","msgtype":"m.text"},"ts":1319783160000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"other events bubble","msgtype":"m.text"},"ts":1319783161000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"not all of them","msgtype":"m.text"},"ts":1319783162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and look what jQuery does -- it creates bubbling versions of the non-bubbling events","msgtype":"m.text"},"ts":1319783220000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"nobody wants non-bubbling events","msgtype":"m.text"},"ts":1319783221000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"clearly not nobody","msgtype":"m.text"},"ts":1319783222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe jquery's authors don't","msgtype":"m.text"},"ts":1319783223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"web authors don't :)","msgtype":"m.text"},"ts":1319783224000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"some web authors do","msgtype":"m.text"},"ts":1319783225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which ones?","msgtype":"m.text"},"ts":1319783226000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"me, for one","msgtype":"m.text"},"ts":1319783227000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the fact that focus doesn't bubble, for instance, is the source of considerable pain","msgtype":"m.text"},"ts":1319783280000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"and if 'invalid' were to bubble, _that_ would cause pain","msgtype":"m.text"},"ts":1319783340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I wonder what would be the most effective way to get the person implementing HTML parsing in IE take a look at http://hsivonen.iki.fi/test/moz/bug696651-1.html and compare with Gecko/WebKit/Ragnarök","msgtype":"m.text"},"ts":1319783341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: in the case where people use form=\"...\"?","msgtype":"m.text"},"ts":1319783342000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: yup","msgtype":"m.text"},"ts":1319783343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: what's the use case for looking at the 'invalid' event anywhere but the control?","msgtype":"m.text"},"ts":1319783400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: using the standard event delegation infrastructure that people use for every other event","msgtype":"m.text"},"ts":1319783401000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"hsivonen: is that related to a potential spec change?","msgtype":"m.text"},"ts":1319783402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: AFAIK, no","msgtype":"m.text"},"ts":1319783403000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wycats: that's not a use case, that's a bunch of buzzwords.","msgtype":"m.text"},"ts":1319783404000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: thank god.","msgtype":"m.text"},"ts":1319783405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: that test case looks scary.","msgtype":"m.text"},"ts":1319783406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: rather, it seems to me IE is failing to follow the spec","msgtype":"m.text"},"ts":1319783407000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i was worried i might have to understand it. :-P","msgtype":"m.text"},"ts":1319783408000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"event delegation\" how is that a buzzword?","msgtype":"m.text"},"ts":1319783409000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"what you're saying is that people should build their own event delegation specifically for the invalid event","msgtype":"m.text"},"ts":1319783460000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"using capture","msgtype":"m.text"},"ts":1319783461000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"which isn't available in all browsers, so it would fail on polyfills","msgtype":"m.text"},"ts":1319783462000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: no, i'm saying that there hasn't been any description of a use case for event delegation for the 'invalid' event on form controls","msgtype":"m.text"},"ts":1319783463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I explained above why people want event delegation - it's to make it easy to dynamically insert markup without having to worry about also binding events","msgtype":"m.text"},"ts":1319783520000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: that makes no sense for a form control's invalid event","msgtype":"m.text"},"ts":1319783521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: the whole point of that event is to do different things for each control","msgtype":"m.text"},"ts":1319783522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the point of event delegation libraries is to have an event that behaves as-if it was bound directly, but without having to bind it","msgtype":"m.text"},"ts":1319783580000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"$(document).delegate(\"input.something\", function() { /* handle invalid events for elements with \"something\" class here */ })","msgtype":"m.text"},"ts":1319783640000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"show me a use case for giving multiple controls the same oninvalid handler","msgtype":"m.text"},"ts":1319783700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one moment please","msgtype":"m.text"},"ts":1319783701000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"what, in your mind, is the use case for the invalid event on individual elements","msgtype":"m.text"},"ts":1319783940000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"maybe I should submit the test I mentioned above to html5lib test suite (in one of the scripted tree builder test files)","msgtype":"m.text"},"ts":1319784000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: the \"dynamic elements\" case doesn't need multiple controls with the same behavior, fwiw","msgtype":"m.text"},"ts":1319784180000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sighs at av_param. ","msgtype":"m.emote"},"ts":1319784181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks like I will have to write a counter change proposal if that one is submitted to the WG","msgtype":"m.text"},"ts":1319784182000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or was it submitted already?","msgtype":"m.text"},"ts":1319784183000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not very familiar with form validation just yet, but i could easily see the same \"invalid data\" behavior for eg. multiple phone numbers (work, home, mobile) in the same form (\"awooga, bad phone number\")","msgtype":"m.text"},"ts":1319784240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Risks: None identified","msgtype":"m.text"},"ts":1319784241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: I'm honestly at a loss for how to explain this to you -- do you understand that you may find that you want the same behavior on the case of invalidity in several places on a page? and that you might now want all of the annotated elements to have to be present on that page when you initially register the handlers?","msgtype":"m.text"},"ts":1319784242000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: s/now/not/, presumably :)","msgtype":"m.text"},"ts":1319784243000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"right. as if I didn't identify a risk in the bug. :-( how hard would it have been to copy and paste it over?","msgtype":"m.text"},"ts":1319784244000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: keeping in mind that you have access to the target element no matter where the event itself was bound","msgtype":"m.text"},"ts":1319784245000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Negative Effects: None identified","msgtype":"m.text"},"ts":1319784300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Conformance Classes Changes: None identified","msgtype":"m.text"},"ts":1319784301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"seriously?","msgtype":"m.text"},"ts":1319784302000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wycats: sorry, was afk","msgtype":"m.text"},"ts":1319784420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: pretty much the only use case is displaying very specialised error notifications, e.g. on a field with a complicated pattern, displaying a graphic showing the allowed pattern.","msgtype":"m.text"},"ts":1319784421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you assume CSS will handle all other cases you care about?","msgtype":"m.text"},"ts":1319784480000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"hsivonen: fwiw in the past when a decision has been made that browsers haven't wanted to implement, it's been dealt with quite quickly without much work from vendors","msgtype":"m.text"},"ts":1319784481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: no need for CSS even","msgtype":"m.text"},"ts":1319784540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the invalid event allows you to customize the behavior / style of invalid elements - it's only irrelevant if CSS picks up all the remaining slack","msgtype":"m.text"},"ts":1319784541000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: why would you style anything at all? just let the browser do it","msgtype":"m.text"},"ts":1319784600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: styling the error messages is like styling the form controls, it's bad ui","msgtype":"m.text"},"ts":1319784601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: just trust the browser to use platform conventions","msgtype":"m.text"},"ts":1319784602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm honestly at a loss; I'll compose an email","msgtype":"m.text"},"ts":1319784660000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"and let others chime in","msgtype":"m.text"},"ts":1319784661000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1319784662000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"e-mail and bugs are the only way changes are going to be made anyway :-)","msgtype":"m.text"},"ts":1319784663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yep","msgtype":"m.text"},"ts":1319784664000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"but make sure to give use cases","msgtype":"m.text"},"ts":1319784665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's pretty much all i look at","msgtype":"m.text"},"ts":1319784666000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that and what the browsers are doing)","msgtype":"m.text"},"ts":1319784720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm seriously baffled that you think that the entire problem of form validation and the related UI is now a solved problem","msgtype":"m.text"},"ts":1319784721000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"I would love for that to be true","msgtype":"m.text"},"ts":1319784722000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"why would it not be true?","msgtype":"m.text"},"ts":1319784723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(for common controls, that is)","msgtype":"m.text"},"ts":1319784724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because the semantics of what invalidity actually means can differ","msgtype":"m.text"},"ts":1319784780000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"(obviously for complicated cases there are needs for scripted ui, but that's why we have oninvalid)","msgtype":"m.text"},"ts":1319784781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and I'll bet dollars to donuts that we didn't hit even close to every case","msgtype":"m.text"},"ts":1319784782000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"can you possibly give a concrete example","msgtype":"m.text"},"ts":1319784783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I will email the list","msgtype":"m.text"},"ts":1319784784000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"make sure to include concrete examples and use cases","msgtype":"m.text"},"ts":1319784785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no problem","msgtype":"m.text"},"ts":1319784786000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"it's _some_ problem, i've been asking for them for over 30 minutes now without luck :-/","msgtype":"m.text"},"ts":1319784840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I need to figure out how to articulate what you think are \"buzzwords\" in a way that you will consider valid","msgtype":"m.text"},"ts":1319784900000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"so I will think about it and send an email","msgtype":"m.text"},"ts":1319784901000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"a use case is something like \"on this web page i'm writing at http://foobar.example.net/bla/quux.html, you'll notice there's an airline seat chart, and when the user clicks on the seat i fill in an input field, and...\" etc","msgtype":"m.text"},"ts":1319784960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"referencing common development methodologies isn't a use case, however you phrase it","msgtype":"m.text"},"ts":1319784961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it needs to be a real-world actual problem","msgtype":"m.text"},"ts":1319784962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"faced by a specific author and user","msgtype":"m.text"},"ts":1319784963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is the user allowed to be using popular libraries?","msgtype":"m.text"},"ts":1319785080000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"or are they required to be writing everything by hand using the raw DOM API?","msgtype":"m.text"},"ts":1319785081000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"use cases do not have to be real-world actual problems; realistic, theoretical uses are also use cases","msgtype":"m.text"},"ts":1319785140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you mean the author? the user doesn't use libraries :-)","msgtype":"m.text"},"ts":1319785141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"otherwise you'd never have any use cases for apis that don't exist yet, and you couldn't create any new apis :)","msgtype":"m.text"},"ts":1319785142000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: yes, the author","msgtype":"m.text"},"ts":1319785200000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: doesn't matter, doesn't affect the use case","msgtype":"m.text"},"ts":1319785201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so as long as the author can solve their problem without libraries, it's invalid?","msgtype":"m.text"},"ts":1319785260000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: author = author code + library code","msgtype":"m.text"},"ts":1319785261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: (abviously any problem that can be solved with libraries can be solved without libraries)","msgtype":"m.text"},"ts":1319785320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes that is true mathematically","msgtype":"m.text"},"ts":1319785321000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: if you mean \"is a problem caused by a library a valid problem\", the answer is obviously no, since it's far easier to fix the library than every browser","msgtype":"m.text"},"ts":1319785380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure why common development techniques for working with events are irrelevant","msgtype":"m.text"},"ts":1319785381000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Hixie: it's a new event","msgtype":"m.text"},"ts":1319785382000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"and it may not be easy to fix libraries, if you're asking them to deviate from their standard practice for one specific event","msgtype":"m.text"},"ts":1319785383000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"Hixie: my point is purely that people use bubbling to bind events to elements that don't exist yet, based on some annotation on the element","msgtype":"m.text"},"ts":1319785440000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"your point is that the invalid event is largely useless anyway","msgtype":"m.text"},"ts":1319785441000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"honestly i don't see much point in using a library to hook an event, unless it's to work around browser differences","msgtype":"m.text"},"ts":1319785442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not like dom events is a difficult api to use","msgtype":"m.text"},"ts":1319785443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you're trolling me right?","msgtype":"m.text"},"ts":1319785444000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1319785445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: let's get drinks with Alex Russell and discuss this some time","msgtype":"m.text"},"ts":1319785500000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"if you were talking about indexeddb that would be different","msgtype":"m.text"},"ts":1319785501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"alex and i have rather different views of how the web should work","msgtype":"m.text"},"ts":1319785502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in your mind, users should type as much as possible and pass as many boolean flags as possible?","msgtype":"m.text"},"ts":1319785503000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"( and every time we talk about it, he convinces me further that he's wrong :-) )","msgtype":"m.text"},"ts":1319785504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"users shouldn't type anything","msgtype":"m.text"},"ts":1319785505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"authors","msgtype":"m.text"},"ts":1319785506000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"not sure what you mean by \"boolean flags\" here","msgtype":"m.text"},"ts":1319785560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ajax sync/async, capture/bubbling phase","msgtype":"m.text"},"ts":1319785561000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"APIs have mandatory boolean flags where 99.999% of usage is one or the other","msgtype":"m.text"},"ts":1319785562000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"neither of those requires passing any boolean flags","msgtype":"m.text"},"ts":1319785563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as the last argument to addEventListener() is optional","msgtype":"m.text"},"ts":1319785564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and XMLHttpRequest defaults to async","msgtype":"m.text"},"ts":1319785565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wycats: i think you're getting distracted--not having to pass flags to a function isn't why delegation is useful (if that was all it was for, you'd just use a helper function)","msgtype":"m.text"},"ts":1319785620000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I am in fact getting distracted","msgtype":"m.text"},"ts":1319785680000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"zewt: I'm just getting frustrated by the need to provide a use-case for event delegation being useful","msgtype":"m.text"},"ts":1319785800000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"I'm going to organize my thoughts and try to apply them clearly to the invalid event","msgtype":"m.text"},"ts":1319785860000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"and then send an email","msgtype":"m.text"},"ts":1319785861000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"wycats: by the way, there's no reason to frame use cases for delegation in terms of delegation","msgtype":"m.text"},"ts":1319785920000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"use cases for delegation are all really use cases for event bubbling, since delegation is just bubbling with some helpers wrapped around it","msgtype":"m.text"},"ts":1319785980000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(so you can strip a layer of abstraction away from what you're talking about by putting that aside)","msgtype":"m.text"},"ts":1319785981000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: event delegation is bubbling that makes use of event.target","msgtype":"m.text"},"ts":1319786100000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1319786101000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1319786102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: that's what I mean by \"event delegation\"","msgtype":"m.text"},"ts":1319786103000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"i know","msgtype":"m.text"},"ts":1319786104000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think without the target property, bubbling would in fact not be very useful here","msgtype":"m.text"},"ts":1319786105000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"if there is a case for direct binding, there defacto is a case for bubbling + target","msgtype":"m.text"},"ts":1319786160000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"but I need to figure out how to clearly explain that","msgtype":"m.text"},"ts":1319786161000,"senderName":"wycats","senderId":"wycats@irc"},
{"content":{"body":"foolip, I keep forgetting that Microdata has no relationship to the rest of the page","msgtype":"m.text"},"ts":1319791260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder whether I'm the only one","msgtype":"m.text"},"ts":1319791320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip, your Live Microdata has a giant XSS hole","msgtype":"m.text"},"ts":1319791860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip, not sure if that's problematic for your site or not","msgtype":"m.text"},"ts":1319791861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Argh. DOM Level 3 Events also changes the way dispatchEvent() works from DOM Level 2 Events","msgtype":"m.text"},"ts":1319792220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And http://w3c-test.org/webapps/DOMEvents/tests/submissions/Microsoft/converted/dispatchEvent.NOT_SUPPORTED_ERR.html tests one of those new silly conditions...","msgtype":"m.text"},"ts":1319792221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the Microdata API encourages the kind of thinking that Microdata has a relationship to the DOM structure :-/","msgtype":"m.text"},"ts":1319792460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So actually Hixie didn't think of it either when he made that new Microdata-inspired Atom example","msgtype":"m.text"},"ts":1319792580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aargh. http://lists.w3.org/Archives/Public/public-rdfa-wg/2011Oct/0051.html","msgtype":"m.text"},"ts":1319792700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: which one?","msgtype":"m.text"},"ts":1319792701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: i'm sure he feels the same way in reverse :-)","msgtype":"m.text"},"ts":1319792760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: oh the pubdate thing","msgtype":"m.text"},"ts":1319792820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: interesting point","msgtype":"m.text"},"ts":1319792821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, http://www.w3.org/Bugs/Public/show_bug.cgi?id=14202","msgtype":"m.text"},"ts":1319792822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319792823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip spotted it","msgtype":"m.text"},"ts":1319792824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I had forgotten about it again","msgtype":"m.text"},"ts":1319792825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it makes perfect sense to use RDFa in XML Schema and XSLT","msgtype":"m.text"},"ts":1319792880000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i wonder what the use case is for pubdate. is it just a replacement for Atom, for syndication?","msgtype":"m.text"},"ts":1319793060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: if so, we can just also tell people to specify a \"url\" and make sure that the permalink is what is used","msgtype":"m.text"},"ts":1319793120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: and then say that syndicators should grab all the items of type Blog or whatever and then find their URLs and look those up and get the <article>s that they point to, or something","msgtype":"m.text"},"ts":1319793121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: r6773 - you can't bind Esc with accesskey","msgtype":"m.text"},"ts":1319793240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not yet, no","msgtype":"m.text"},"ts":1319793241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the example is confusing because it implies that you can","msgtype":"m.text"},"ts":1319793242000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, I don't know really; I just thought Microdata might be a nice way to solve this rather niche case but then it turns out I don't understand Microdata...","msgtype":"m.text"},"ts":1319793420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: can you think of another example that would have a different last symbol in windows and mac that _is_ possible with the first version of this new accesskey?","msgtype":"m.text"},"ts":1319793480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1319793540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"could someone tell me when the canvas was integrated into html5? Thanks","msgtype":"m.text"},"ts":1319793541000,"senderName":"FlorianX","senderId":"FlorianX@irc"},
{"content":{"body":"2007? around when safari first came out with it.","msgtype":"m.text"},"ts":1319793542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/2005-09-01/#dynamic","msgtype":"m.text"},"ts":1319793600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: thank this limited the search in your commits  :-)","msgtype":"m.text"},"ts":1319793601000,"senderName":"FlorianX","senderId":"FlorianX@irc"},
{"content":{"body":"zcorpan: Thanks!","msgtype":"m.text"},"ts":1319793660000,"senderName":"FlorianX","senderId":"FlorianX@irc"},
{"content":{"body":"2005 there was no svn","msgtype":"m.text"},"ts":1319793661000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"2005, wow","msgtype":"m.text"},"ts":1319793662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"canvas has been in the spec longer than the w3c had existed by the time it decided html was dead","msgtype":"m.text"},"ts":1319793663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok thanks","msgtype":"m.text"},"ts":1319793720000,"senderName":"FlorianX","senderId":"FlorianX@irc"},
{"content":{"body":"ok i really have to go to bed","msgtype":"m.text"},"ts":1319793721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1319793722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gn8","msgtype":"m.text"},"ts":1319793723000,"senderName":"FlorianX","senderId":"FlorianX@irc"},
{"content":{"body":"what's the objective of this channel?","msgtype":"m.text"},"ts":1319797200000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"allow people to communicate?","msgtype":"m.text"},"ts":1319797320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to what end?","msgtype":"m.text"},"ts":1319797440000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"creating standards typically","msgtype":"m.text"},"ts":1319797560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've reached the beginning?","msgtype":"m.text"},"ts":1319797800000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"Margle: its a loop.  there is no beginning","msgtype":"m.text"},"ts":1319798040000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and thus: standards immatate time.","msgtype":"m.text"},"ts":1319798220000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"well, time is a cube","msgtype":"m.text"},"ts":1319798221000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: and standards are a donut?","msgtype":"m.text"},"ts":1319798222000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"Margle: no. standards suck","msgtype":"m.text"},"ts":1319798700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what ever happened to standards suck?","msgtype":"m.text"},"ts":1319798701000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"maybe there will be new ones after TPAC?","msgtype":"m.text"},"ts":1319798702000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1319798760000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"so… why does everyone come here to talk about stuff that sucks?","msgtype":"m.text"},"ts":1319798761000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"can't be just talk about other stuff?","msgtype":"m.text"},"ts":1319798820000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"seems like it hasn't been active in two years","msgtype":"m.text"},"ts":1319798821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tried making one with hasather but that really didn't go anywhere","msgtype":"m.text"},"ts":1319798822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you should interview abarth :)","msgtype":"m.text"},"ts":1319798880000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"can you explain how web security works in three sentences?\"","msgtype":"m.text"},"ts":1319798940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it doesn't","msgtype":"m.text"},"ts":1319798941000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"(sort interview)","msgtype":"m.text"},"ts":1319798942000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"short","msgtype":"m.text"},"ts":1319798943000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1319798944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The classList methods would be more useful if they took a space separated list of class names","msgtype":"m.text"},"ts":1319801640000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: file a bug","msgtype":"m.text"},"ts":1319801760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yea","msgtype":"m.text"},"ts":1319801820000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"http://raven.io/","msgtype":"m.text"},"ts":1319802420000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"awesome, logos in CSS: http://www.ecsspert.com/twitter.php","msgtype":"m.text"},"ts":1319805000000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"Pity the site references w3schools though :(","msgtype":"m.text"},"ts":1319805001000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"nessy, I'm making some tweaks to http://www.w3.org/html/wg/wiki/ChangeProposals/issue-179_no_change","msgtype":"m.text"},"ts":1319812200000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"oh, I am still working on it","msgtype":"m.text"},"ts":1319812201000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"give me about 10 min","msgtype":"m.text"},"ts":1319812202000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ok, will do","msgtype":"m.text"},"ts":1319812260000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"ok, it's still a bit raw, but I am grateful you want to chip in","msgtype":"m.text"},"ts":1319812920000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"go for it :-)","msgtype":"m.text"},"ts":1319812921000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ok, I just changed the formatting a bit, it was way too wide for me","msgtype":"m.text"},"ts":1319813340000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"ah, oops","msgtype":"m.text"},"ts":1319813940000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy, do you know what the appropriate way of entering complaints about the original proposal is?","msgtype":"m.text"},"ts":1319814120000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"for example, I want to complain that it doesn't have any implementation details, but under which section of the counter proposal does that belong?","msgtype":"m.text"},"ts":1319814180000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I don't know either","msgtype":"m.text"},"ts":1319814660000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I thought I'd put it under \"Details\", but that's really for proposing what to enter into the spec","msgtype":"m.text"},"ts":1319814661000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"http://dev.w3.org/html5/decision-policy/decision-policy.html#change-proposal <- doesn't really describe what a counter change proposal should include","msgtype":"m.text"},"ts":1319814720000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"looking at this http://www.w3.org/html/wg/wiki/ChangeProposals/KeepMicrodata it seems the \"Rationale\" section needs to contain the details","msgtype":"m.text"},"ts":1319814780000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"let's remove the \"Details\" header then","msgtype":"m.text"},"ts":1319814840000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"are you editing?","msgtype":"m.text"},"ts":1319814841000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"not right now","msgtype":"m.text"},"ts":1319814960000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'm done for today I think, but I'm monitoring it and might throw and some stuff if you don't object","msgtype":"m.text"},"ts":1319814961000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1319815020000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"throw in, as in add, not throw as in remove :)","msgtype":"m.text"},"ts":1319815021000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1319815080000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I am about to go to bed, so will likely not edit anything in about 15 hours (have to take my son to Basketball in the morning)","msgtype":"m.text"},"ts":1319815081000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"have a nice weekend, then :)","msgtype":"m.text"},"ts":1319815260000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks :-) you, too","msgtype":"m.text"},"ts":1319815380000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I'll monitor the situation :-)","msgtype":"m.text"},"ts":1319815381000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1319815382000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"... g+ seriously doesn't do rss? what?","msgtype":"m.text"},"ts":1319815680000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: ... seriously why using g+? what?","msgtype":"m.text"},"ts":1319817360000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"... i'm not?","msgtype":"m.text"},"ts":1319817780000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Has there been any suggestions for a relative tabindex based on the current section? For example, a form that you know what order you want each field to be selected, but you don't know the placement on the actual page?","msgtype":"m.text"},"ts":1319819460000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"Code example: http://bit.ly/vxrjt5 -- obviously with a different attribute or format for doing it relatively instead","msgtype":"m.text"},"ts":1319819520000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"I haven't heard such suggestions, but it would make sense.","msgtype":"m.text"},"ts":1319819820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's been the one thing I never liked about tabindex (and the only reason I almost never use it). Because, quite frankly, websites are built in sections. Back when every page was simple and linear, the tabindex the way it is made sense (to an extent), but with websites nowadays, there needs to at least be an option for relative tabindex.","msgtype":"m.text"},"ts":1319819940000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"And I believe it may be good enough to simply rely on the outline algorithm, but some may want it to take into account fieldsets and the like as well.","msgtype":"m.text"},"ts":1319820120000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"Or have an attribute like accesskeyscope, similar to itemscope and undoscope, which indicates that all descendants' accesskeys are to be interpreted as relative.","msgtype":"m.text"},"ts":1319820180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, in a limited way, that could work. But that makes it impossible to mark an item with an absolute tabindex.","msgtype":"m.text"},"ts":1319820720000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"Why would you want to mix relative and absolute in the same subtree?  We don't have to satisfy all use-cases if that will make things more complicated.","msgtype":"m.text"},"ts":1319820780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you want to do fancy stuff, you can always work out absolute tabindexes.","msgtype":"m.text"},"ts":1319820781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, if you had two forms, both of which you wanted to have relative tabindexes, but the second form to be accessed first, you would be limited there as well.","msgtype":"m.text"},"ts":1319820782000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"Oh, just thinking up all use-cases cause my mind is terrible like that.","msgtype":"m.text"},"ts":1319820783000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"But honestly, for my needs, accesskeyscope would be more than enough","msgtype":"m.text"},"ts":1319820840000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"tabindexscope, no?","msgtype":"m.text"},"ts":1319820841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, yeah, just using the attribute AryehGregor provided","msgtype":"m.text"},"ts":1319820842000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"I misspoke, obviously.","msgtype":"m.text"},"ts":1319820900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The only issue with tabindexscope (and piggybacking off of tabindex) is backward compatibility with older browsers. Get two or more forms on the same page using tabindexscope, and it makes it a huge pain to fill out a form using tab.","msgtype":"m.text"},"ts":1319820960000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"(tab goes to first field in second form, instead of second in first)","msgtype":"m.text"},"ts":1319821020000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"True.","msgtype":"m.text"},"ts":1319821021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So, even if everyone was using an updated browser, we would have to wait until every major browser supported it before it could be used (and not piss off a lot of other people).","msgtype":"m.text"},"ts":1319821080000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"And that's in a perfect world. Can't imagine how it would work in this world ;)","msgtype":"m.text"},"ts":1319821140000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"It doesn't seem worth it, really.","msgtype":"m.text"},"ts":1319821141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"especially since keyboards are sort of moving away from being the dominant way to browse the web","msgtype":"m.text"},"ts":1319821320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ehh","msgtype":"m.text"},"ts":1319821321000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yes, but someday we may talk to our websites. \"Next field\" for example","msgtype":"m.text"},"ts":1319821380000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"the existance of other input methods does not mean it's okay to ignore keyboard accessibility as if keyboards are somehow going away","msgtype":"m.text"},"ts":1319821381000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"bfrohs: mobile browsers already use \"next field\" during form inputs, btw","msgtype":"m.text"},"ts":1319821440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wow, way to go from does not seem worth it to optimize for to ignore them altogether","msgtype":"m.text"},"ts":1319821441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1319821442000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you suggested that improvements should not be made to keyboard navigation [because of touchscreens], which is a terrible idea","msgtype":"m.text"},"ts":1319821500000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"improvements -> this improvement","msgtype":"m.text"},"ts":1319821560000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"this is not an even an improvement to keyboard navigation","msgtype":"m.text"},"ts":1319821620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's an improvement to authoring for it, but whatever","msgtype":"m.text"},"ts":1319821621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same thing, IMO","msgtype":"m.text"},"ts":1319821622000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Well, in a way, it is an improvement. Because, right now, people rarely do tabindex on more than one form.","msgtype":"m.text"},"ts":1319821623000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"If they do it for one at all","msgtype":"m.text"},"ts":1319821624000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"Example: Facebook has it for their log in form. They don't use it for any other form on their site that I can find.","msgtype":"m.text"},"ts":1319821680000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"oh, Apple is \"only\" charging EUR 700","msgtype":"m.text"},"ts":1319822820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as for touchscreens, tabindex might still be useful to consider when some browsers (Safari on iOS comes to mind) do have \"previous field / next field\" buttons when filling forms","msgtype":"m.text"},"ts":1319823000000,"senderName":"michel_v","senderId":"michel_v@irc"},
{"content":{"body":"<zewt> bfrohs: mobile browsers already use \"next field\" during form inputs, btw <- :)","msgtype":"m.text"},"ts":1319823060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh, sorry. missed that line while reading the backlog","msgtype":"m.text"},"ts":1319823120000,"senderName":"michel_v","senderId":"michel_v@irc"},
{"content":{"body":"With these touchscreen/mobile/keyboard-is-dead arguments, should 'tabindex' be rethought entirely with the knowledge we now have of some of the new technologies that have come out (and will come out)? Because tabindexscope is only to fix the 'documents are no longer basic and linear' problem. Would there be another solution that would be better suited for touchscreens/non-keyboard-based-technologies?","msgtype":"m.text"},"ts":1319823540000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"bfrohs: for inspiration there might be things to check into http://www.w3.org/standards/techs/multimodal#w3c_all","msgtype":"m.text"},"ts":1319824140000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"bfrohs, I actually think CSS is probably the better place to put these kind of things","msgtype":"m.text"},"ts":1319824200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bfrohs, the UI module has nav-index and some similar properties already","msgtype":"m.text"},"ts":1319824260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bfrohs: if you tie it markup it might not make sense if you apply a different style sheet that reorders some controls","msgtype":"m.text"},"ts":1319824261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"karlcow: I'm not inspired by that page","msgtype":"m.text"},"ts":1319824262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1319824320000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"will inspire MikeSmith in a few days","msgtype":"m.emote"},"ts":1319824321000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://www.w3.org/wiki/MeetingTaxis#Arrivals","msgtype":"m.text"},"ts":1319824620000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"oh interesting","msgtype":"m.text"},"ts":1319824980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I arrive an hour before you and dom","msgtype":"m.text"},"ts":1319825040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"btw, have you noted that there is a summer time change those weeks?","msgtype":"m.text"},"ts":1319825041000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"jgraham, did you ever review the assert_throws patch I posted here?","msgtype":"m.text"},"ts":1319825160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(we really need to set up a better patch review system than me pastebinning stuff and pinging you on IRC)","msgtype":"m.text"},"ts":1319825161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"you guys should share a taxi","msgtype":"m.text"},"ts":1319825162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"costed about $100 for a taxi I took last night","msgtype":"m.text"},"ts":1319825163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is nuts","msgtype":"m.text"},"ts":1319825164000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they have this thing of charging 150% over what the meter shows","msgtype":"m.text"},"ts":1319825165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if the trip is farther than 15 miles","msgtype":"m.text"},"ts":1319825166000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw, on http://platform.html5.org/, should I just change \"DOM4\" to \"DOM\"?","msgtype":"m.text"},"ts":1319825167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and still link to the DOM4 spec of course","msgtype":"m.text"},"ts":1319825168000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ↑","msgtype":"m.text"},"ts":1319825220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk, nav-index has the same problem as tabindex in that it is absolute. If there was a nav-index-scope, AND counter() could be used as the value for nav-index, then it would be sufficient.","msgtype":"m.text"},"ts":1319825280000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"MikeSmith, yeah","msgtype":"m.text"},"ts":1319825340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(where nav-index-scope was 'absolute' (or inherit) by default, with 'absolute' or 'relative' as values)","msgtype":"m.text"},"ts":1319825460000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"annevk, OK, done","msgtype":"m.text"},"ts":1319825520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I'm adding you the mail I'm sending to dom","msgtype":"m.text"},"ts":1319825700000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Where would be the best place to suggest adding nav-index-scope to css ui? And making sure counter() values can be used for nav-index?","msgtype":"m.text"},"ts":1319825760000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"rha my mail is  in French :D","msgtype":"m.text"},"ts":1319825761000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"retranslating in English","msgtype":"m.text"},"ts":1319825762000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: mail sent.","msgtype":"m.text"},"ts":1319826120000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1319826180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my pleasure","msgtype":"m.text"},"ts":1319826240000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"is out ","msgtype":"m.emote"},"ts":1319826241000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk, what's the procedure for updating DOM4?  Should I just push to both dvcs.w3.org and bitbucket.org?","msgtype":"m.text"},"ts":1319826300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319826600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1319826601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Should isPointInRange() throw IndexSizeError if the offset is too large or negative, or should it return false?  WebKit throws, Gecko returns false.","msgtype":"m.text"},"ts":1319826900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll go with WebKit here, since it's more consistent with other Range APIs, unless anyone has objections.","msgtype":"m.text"},"ts":1319826901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(the API was never standardized before now, it's not in DOM 2 Range)","msgtype":"m.text"},"ts":1319826902000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd go for false","msgtype":"m.text"},"ts":1319826960000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Why?  The other Range APIs all throw IndexSizeError in those cases, right?","msgtype":"m.text"},"ts":1319826961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"because of the reason you gave yesterday ;)","msgtype":"m.text"},"ts":1319826962000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"reviews the other APIs for inspiration","msgtype":"m.emote"},"ts":1319826963000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but, need to go now","msgtype":"m.text"},"ts":1319827020000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"If the point is in a different document, it makes sense to return false.  It's a legitimate point that's not in the range.","msgtype":"m.text"},"ts":1319827021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If the point isn't a valid boundary point at all, the question doesn't even make sense.","msgtype":"m.text"},"ts":1319827022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's not clear that false is the right answer.","msgtype":"m.text"},"ts":1319827023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If I do range.isPointInRange(node, -1) and node is entirely contained within range, is false really the correct answer?","msgtype":"m.text"},"ts":1319827024000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, wait.","msgtype":"m.text"},"ts":1319827080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Gecko actually returns true in that case . . .","msgtype":"m.text"},"ts":1319827081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tests a bit more","msgtype":"m.emote"},"ts":1319827082000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For an invalid offset, Gecko seems to return true if the node is entirely contained in the range, like with selectNode.  But false if it's not, even if every legitimate boundary point in it is contained, like with selectNodeContents.","msgtype":"m.text"},"ts":1319827140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Too weird.","msgtype":"m.text"},"ts":1319827141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll go with WebKit.","msgtype":"m.text"},"ts":1319827142000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, throwing is more useful than false.","msgtype":"m.text"},"ts":1319827620000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"from a dev point of view","msgtype":"m.text"},"ts":1319827621000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Agreed.","msgtype":"m.text"},"ts":1319827622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"no error console will log false","msgtype":"m.text"},"ts":1319827680000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"“should asking for the fifth element in a list with four elements return an empty string or crash the program” is actually an interesting question to ask people, even those who have nothing to do with programming.","msgtype":"m.text"},"ts":1319827740000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i think it tells me something about their approach to solving problems.","msgtype":"m.text"},"ts":1319827800000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"my little sister, who is 10 and only recently learned a tiny bit of python was convinced that such a program should crash.","msgtype":"m.text"},"ts":1319827860000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"because it would help her to fix the program.","msgtype":"m.text"},"ts":1319827861000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"my mother says it should return empty or null or just something.","msgtype":"m.text"},"ts":1319827862000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"to not interrupt the flow of things.","msgtype":"m.text"},"ts":1319827863000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"What should isPointInRange() do if passed a doctype?  WebKit throws InvalidNodeTypeError, while Gecko ignores the offset and returns true or false depending on whether the doctype is in the range or not.","msgtype":"m.text"},"ts":1319828220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1319828280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Kind of like with bogus offsets.","msgtype":"m.text"},"ts":1319828281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think I'll go with WebKit for consistency.","msgtype":"m.text"},"ts":1319828282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It seems like if the point isn't a valid boundary point, Gecko just ignores the offset and tests whether the node itself is in the range.","msgtype":"m.text"},"ts":1319828340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ooh, WebKit treats the second argument as optional.","msgtype":"m.text"},"ts":1319828341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tests that","msgtype":"m.emote"},"ts":1319828342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It just defaults to 0.","msgtype":"m.text"},"ts":1319828400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think I won't allow that.","msgtype":"m.text"},"ts":1319828401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What should a function throw if passed too few arguments, per spec?","msgtype":"m.text"},"ts":1319828820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess that's in WebIDL?","msgtype":"m.text"},"ts":1319828821000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or shouldn't it?","msgtype":"m.text"},"ts":1319828822000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What is R here?  http://dev.w3.org/2006/webapi/WebIDL/#dfn-overload-resolution-algorithm","msgtype":"m.text"},"ts":1319829000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't see it defined.","msgtype":"m.text"},"ts":1319829001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Umm, maybe?","msgtype":"m.text"},"ts":1319829240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We need a better review tool for sure","msgtype":"m.text"},"ts":1319829241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'd start with *any* review system.","msgtype":"m.text"},"ts":1319829360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah :)","msgtype":"m.text"},"ts":1319829420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like, attaching patches to Bugzilla.","msgtype":"m.text"},"ts":1319829421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd do that if there were a Bugzilla component.","msgtype":"m.text"},"ts":1319829422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think there is","msgtype":"m.text"},"ts":1319829423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't know if I get email from it though","msgtype":"m.text"},"ts":1319829424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can probably set it up if not","msgtype":"m.text"},"ts":1319829425000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where is it?","msgtype":"m.text"},"ts":1319829720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't know, I never needed to file a bug :p","msgtype":"m.text"},"ts":1319829780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe MikeSmith or plh knows","msgtype":"m.text"},"ts":1319829781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"bugzilla component for what?","msgtype":"m.text"},"ts":1319829840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"WebIDL?","msgtype":"m.text"},"ts":1319829841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"testharness.js","msgtype":"m.text"},"ts":1319829842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1319829960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, we have component for it","msgtype":"m.text"},"ts":1319829961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"finds it","msgtype":"m.emote"},"ts":1319829962000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/enter_bug.cgi?product=Testing&component=testharness.js","msgtype":"m.text"},"ts":1319829963000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Where would be the best place to suggest adding nav-index-scope to css ui? And making sure counter() values can be used for nav-index? Anyone?","msgtype":"m.text"},"ts":1319830200000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"bfrohs, www-style is for CSS changes.","msgtype":"m.text"},"ts":1319830440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"CC the editor of the relevant spec.","msgtype":"m.text"},"ts":1319830441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, thank ya","msgtype":"m.text"},"ts":1319830500000,"senderName":"bfrohs","senderId":"bfrohs@irc"},
{"content":{"body":"AryehGregor, extra arguments are ignored","msgtype":"m.text"},"ts":1319830560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"AryehGregor, and that last line should be \"Return candidates\"","msgtype":"m.text"},"ts":1319830561000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"though I thought I'd already fixed that...","msgtype":"m.text"},"ts":1319830562000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam, but passing too few throws a TypeError, if I'm reading right?","msgtype":"m.text"},"ts":1319830563000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, yeah","msgtype":"m.text"},"ts":1319830620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"There's another mention of R a couple lines before, by the way.","msgtype":"m.text"},"ts":1319830621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1319830622000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"notes it down","msgtype":"m.emote"},"ts":1319830623000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, http://www.w3.org/Bugs/Public/show_bug.cgi?id=14589","msgtype":"m.text"},"ts":1319831160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You're the assignee, so I assume you got e-mail.","msgtype":"m.text"},"ts":1319831161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll commit the patch if you like, just give me the okay.","msgtype":"m.text"},"ts":1319831220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm.  Can we kill detach()?  It seems utterly, absolutely useless.","msgtype":"m.text"},"ts":1319833140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And it adds a line to every single Range attribute/method.","msgtype":"m.text"},"ts":1319833141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"how do i create a file on windows with a specific set of bytes as the file name?","msgtype":"m.text"},"ts":1319833380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i want to do the equivalent of:","msgtype":"m.text"},"ts":1319833381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"echo -e '\\xE1\\xBA\\x9B\\xCC\\xA3\\xE2\\x84\\xAB.txt' | xargs touch","msgtype":"m.text"},"ts":1319833382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Are Windows filenames sequences of bytes?","msgtype":"m.text"},"ts":1319833440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They're not UCS-2 or something?","msgtype":"m.text"},"ts":1319833441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i can do sequences of unicode characters if there's a way to do that too","msgtype":"m.text"},"ts":1319833442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"U+1E9B U+0323 U+212B . t x t","msgtype":"m.text"},"ts":1319833500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't want, e.g., notepad.exe to be doing any munging of the characters before i save","msgtype":"m.text"},"ts":1319833501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i don't want to use a text box to do it","msgtype":"m.text"},"ts":1319833502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if i can avoid it","msgtype":"m.text"},"ts":1319833503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(how would i even do it there?)","msgtype":"m.text"},"ts":1319833620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you could use emacs","msgtype":"m.text"},"ts":1319833621000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hixie i recomend you install msys","msgtype":"m.text"},"ts":1319833680000,"senderName":"_bga","senderId":"_bga@irc"},
{"content":{"body":"msys?","msgtype":"m.text"},"ts":1319833681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: no emacs (and don't really want to install anything if i can help it)","msgtype":"m.text"},"ts":1319833740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie http://www.mingw.org/wiki/MSYS","msgtype":"m.text"},"ts":1319833741000,"senderName":"_bga","senderId":"_bga@irc"},
{"content":{"body":"i wouldn't trust such a system not to futz with the bytes between the shell and the file system","msgtype":"m.text"},"ts":1319833742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"too many levels of indirection involved","msgtype":"m.text"},"ts":1319833743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: filenames on ntfs are stored in UTF-16 (actually, just arbitrary 16-bit characters), so you can't use a \"specific set of bytes\"","msgtype":"m.text"},"ts":1319834340000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"learning about https://wiki.mozilla.org/Auto-tools/Projects/Marionette","msgtype":"m.text"},"ts":1319834400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: also, notepad is a pretty safe way to create filenames in unicode, because it's a unicode application itself (most programs are ANSI, which will trigger locale-specific conversions)","msgtype":"m.text"},"ts":1319835060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: 16 codepoints are bytes too :-)","msgtype":"m.text"},"ts":1319835120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: my concern is over unicode normalisation","msgtype":"m.text"},"ts":1319835121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: see http://www.w3.org/Bugs/Public/show_bug.cgi?id=14526","msgtype":"m.text"},"ts":1319835122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, i created \\u03D3\\u03D2\\u0301.txt in File Explorer, and it doesn't appear to have normalized it at all","msgtype":"m.text"},"ts":1319835360000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah that was my experience too, see the last comment on the bug","msgtype":"m.text"},"ts":1319835361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for real headaches: illegal code sequences in filenames exposed to JS ...","msgtype":"m.text"},"ts":1319835540000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(a question FileAPI will have to figure out at some point)","msgtype":"m.text"},"ts":1319835541000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Philip`: would be good to have tests like http://test.w3.org//html/tests/submission/PhilipTaylor/canvas/security.pattern.canvas.fillStyle.html that check interaction with document.domain (i'm about to change the spec on this to use the effective origin)","msgtype":"m.text"},"ts":1319835720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm.. the mbox archive output by whatwg.org doesn't do >From quotation.","msgtype":"m.text"},"ts":1319842800000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Hixie: is the case-sensitivity of attribute names for svg in html specified anywhere?","msgtype":"m.text"},"ts":1319843160000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: i'm having trouble finding it in the html spec","msgtype":"m.text"},"ts":1319843161000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"case-sensitivity in what sense?","msgtype":"m.text"},"ts":1319843162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in regular html, attribute names are lowercased","msgtype":"m.text"},"ts":1319843220000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"you mean when parsing?","msgtype":"m.text"},"ts":1319843221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in regular svg, attribute names keep their case","msgtype":"m.text"},"ts":1319843222000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: yeah","msgtype":"m.text"},"ts":1319843223000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"aah","msgtype":"m.text"},"ts":1319843224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah that's in the parser","msgtype":"m.text"},"ts":1319843280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hold on","msgtype":"m.text"},"ts":1319843281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll give you a search string","msgtype":"m.text"},"ts":1319843282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: great","msgtype":"m.text"},"ts":1319843283000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"search for \"adjust SVG attributes\"","msgtype":"m.text"},"ts":1319843284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so basically, we parse it ignoring case and then spit out the case-sensitive result?","msgtype":"m.text"},"ts":1319843400000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319843401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1319843402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we spit out a case-normalised result","msgtype":"m.text"},"ts":1319843403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: e.g. paThLength -> pathLength ?","msgtype":"m.text"},"ts":1319843404000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1319843405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok...here's the problem we're running into...","msgtype":"m.text"},"ts":1319843406000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"paThLength in the markup becomes pathlength in the parser becomes pathLength in the DOM","msgtype":"m.text"},"ts":1319843460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: selector parsing says the case-sensitivity of attirbute name/value parsing depends on the document type","msgtype":"m.text"},"ts":1319843461000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: so, webkit always lowercases attribute names in html documents","msgtype":"m.text"},"ts":1319843462000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"that's changed iirc","msgtype":"m.text"},"ts":1319843520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so now *[pathLength] doesn't match <svg pathLength=\"...\">","msgtype":"m.text"},"ts":1319843521000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"because the attribute name in the selector is lowercased and the one on the svg element isn't","msgtype":"m.text"},"ts":1319843522000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: it doesn't seemd changed to me in the selectors 4 spec","msgtype":"m.text"},"ts":1319843523000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"hmm, i may be thinking of attribute _values_","msgtype":"m.text"},"ts":1319843580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: http://dev.w3.org/csswg/selectors4/#attribute-case","msgtype":"m.text"},"ts":1319843581000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah i'm thinking of values, don't mind me","msgtype":"m.text"},"ts":1319843582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's see","msgtype":"m.text"},"ts":1319843583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok so the HTML spec says that \"and element names of HTML elements in HTML documents must be treated as ASCII case-insensitive for the purposes of selector matching\"","msgtype":"m.text"},"ts":1319843640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so [pathLength] should match <div pathlength> but not <svg pathlength>","msgtype":"m.text"},"ts":1319843641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes...but the problem is that it's currently impossible as speced to match <svg pathlength>","msgtype":"m.text"},"ts":1319843700000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"[pathLength] would match it","msgtype":"m.text"},"ts":1319843760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since the parser would convert it to pathLength in the DOM","msgtype":"m.text"},"ts":1319843761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh...i guess it's technically wrong that webkit lowercases the attribute name in the css parser","msgtype":"m.text"},"ts":1319843820000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"it should just be doing a case-insensitive compare","msgtype":"m.text"},"ts":1319843821000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"for html elements","msgtype":"m.text"},"ts":1319843822000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319843823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"html elements in html documents","msgtype":"m.text"},"ts":1319843824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1319843825000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1319843826000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: arv is suggesting that selector attribute matching in an HTML document shoudl always be case-insensitive regardless of what element you're matching","msgtype":"m.text"},"ts":1319844240000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: why not make svg attributes in html documents lowercase like all other attributes?","msgtype":"m.text"},"ts":1319844360000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"well the attributes being lowercase would mean that there'd be two SVG vocabularies","msgtype":"m.text"},"ts":1319844361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one with lowercase names and one not","msgtype":"m.text"},"ts":1319844362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which would have rammifications i can't even fully imagine","msgtype":"m.text"},"ts":1319844363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ojan: DOM Consistency, basically","msgtype":"m.text"},"ts":1319844420000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"but would certainly be a disaster for implementors","msgtype":"m.text"},"ts":1319844421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"consider the confusion that would result from taking an SVG file and moving the nodes to an HTML file and finding it all stopped working, e.g.","msgtype":"m.text"},"ts":1319844422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, that's one thing","msgtype":"m.text"},"ts":1319844423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the other thing is case-sensitivity","msgtype":"m.text"},"ts":1319844480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't really mind what we do there, that's an issue for the css and svg groups to decide","msgtype":"m.text"},"ts":1319844481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i expect css would say it's up to svg, css just delegates to the host language","msgtype":"m.text"},"ts":1319844482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i've no idea what the svg group would want","msgtype":"m.text"},"ts":1319844483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i haven't worked out what their operating principles are","msgtype":"m.text"},"ts":1319844484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I could ask them","msgtype":"m.text"},"ts":1319844485000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"for SVG2, we are not claiming it is an XML syntax, but a DOM one","msgtype":"m.text"},"ts":1319844540000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"ojan, shepazu; shepazu, ojan.","msgtype":"m.text"},"ts":1319844541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"steps back :-0","msgtype":"m.emote"},"ts":1319844542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(though there is, of course, an XML parsing)","msgtype":"m.text"},"ts":1319844543000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"Hixie, shepazu: people here are suggesting that maybe we should do the HTML normalization of svg attribute names at attribute matching time","msgtype":"m.text"},"ts":1319844600000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: at least, that's what I said in the charter that's up for review now","msgtype":"m.text"},"ts":1319844601000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"ojan: what would that mean?","msgtype":"m.text"},"ts":1319844602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is not sure what the implications of that are, ojan ","msgtype":"m.emote"},"ts":1319844603000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"Hixie: fyi http://www.w3.org/Graphics/SVG/2011/charter.html","msgtype":"m.text"},"ts":1319844720000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"[[","msgtype":"m.text"},"ts":1319844721000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"The SVG WG develops the following technologies:    A markup syntax, compatible with XML and HTML5 parsing, for describing shapes, text, and painting effects, including gradients, filters, and other graphical effects, through a set of elements and attributes.","msgtype":"m.text"},"ts":1319844722000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"]]","msgtype":"m.text"},"ts":1319844723000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"so, I don't say \"DOM\", but that's the implication","msgtype":"m.text"},"ts":1319844780000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"(or something)","msgtype":"m.text"},"ts":1319844781000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"shepazu: the implication is that *[pathlength] would match <svg pathLength=5>","msgtype":"m.text"},"ts":1319844840000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: would it match <div pathlength>?","msgtype":"m.text"},"ts":1319844900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ojan: seems friendly to me, but not sure about the implementation fallout","msgtype":"m.text"},"ts":1319844901000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"Hixie: yeah","msgtype":"m.text"},"ts":1319844902000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"shepazu: \"a markup syntax, compatible with XML and HTML5 parsing\" is, like, the opposite of a \"DOM\"...","msgtype":"m.text"},"ts":1319844903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok, patches welcome","msgtype":"m.text"},"ts":1319844904000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"it's a performance tradeoff as far as implementation is concerned","msgtype":"m.text"},"ts":1319844905000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"shepazu: i think charters are irrelevant, so i don't mind either way, i'm just saying that if you meant to say DOM, you should be aware that what you just quoted says the opposite :-)","msgtype":"m.text"},"ts":1319844960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ojan: I'm more concerned about backward-compatibility","msgtype":"m.text"},"ts":1319844961000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"ojan: i don't understand what \"do the HTML normalization of svg attribute names at attribute matching time\" means then.","msgtype":"m.text"},"ts":1319844962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with *[pathlength] matching <svg pathLength=5>, you can store only the lower-cased copy of the attribute name and for html elements, the name comparison is very fast, but it's slower for svg elements","msgtype":"m.text"},"ts":1319844963000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: too jetlagged to follow you, but interested to hear an explanation I could unpack later","msgtype":"m.text"},"ts":1319844964000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"Hixie: basically...when parsing *[pathLenGTH] we'd normalize it to *[pathlength]...","msgtype":"m.text"},"ts":1319845020000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"shepazu: sure, ping me if you want to talk about it","msgtype":"m.text"},"ts":1319845021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ojan: how do you know to normalize it?","msgtype":"m.text"},"ts":1319845022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: then when doing selector matching, if it's an SVG element we'd actually compare to pathLength","msgtype":"m.text"},"ts":1319845023000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan, but pathLenGTH is WRONG","msgtype":"m.text"},"ts":1319845024000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"oh okey","msgtype":"m.text"},"ts":1319845025000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: for HTML elements, it would match","msgtype":"m.text"},"ts":1319845026000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"i hate every single member of your working group for that","msgtype":"m.text"},"ts":1319845080000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1319845081000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"ojan: i mean, what if MathML had a \"foobar\" attribute and SVG had a \"fooBar\" attribute?","msgtype":"m.text"},"ts":1319845082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, namespac- oh wait.","msgtype":"m.text"},"ts":1319845083000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"ojan: and would you match [pathlength] to an <svg> element that had a \"pathlength\" attribute manually set in the DOM? (lowercase, so not the real pathLength one?)","msgtype":"m.text"},"ts":1319845140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what about it? *[foobAr] would match both of them","msgtype":"m.text"},"ts":1319845141000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: yeah...i guess that doens't make sense","msgtype":"m.text"},"ts":1319845142000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: sigh...svg in html... :(","msgtype":"m.text"},"ts":1319845143000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"well, seems “claiming SVG is not XML, but a DOM syntax” needs some work.","msgtype":"m.text"},"ts":1319845144000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"ojan: \"just\" do the comparison case-insensitively against HTML elements and case-sensitively against non-HTML elements","msgtype":"m.text"},"ts":1319845200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah...fine.","msgtype":"m.text"},"ts":1319845201000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: it means having both strings in the comparison function, and one extra pointer check for each node","msgtype":"m.text"},"ts":1319845202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ojan: not the end of the world","msgtype":"m.text"},"ts":1319845203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah","msgtype":"m.text"},"ts":1319845204000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"perf-wise","msgtype":"m.text"},"ts":1319845205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah...it means storing an extra string if you want to keep the performance for html element matching","msgtype":"m.text"},"ts":1319845260000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah but you have that extra string anyway today, right","msgtype":"m.text"},"ts":1319845261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but attribute selectors are not widely used enought for it to really matter","msgtype":"m.text"},"ts":1319845262000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"why not something like *[html:pathlenght|svg:pathLength]","msgtype":"m.text"},"ts":1319845263000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"or are you flattening it during parsing?","msgtype":"m.text"},"ts":1319845264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no, right now webkit only stores the lowercased string","msgtype":"m.text"},"ts":1319845265000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"what am i missing?","msgtype":"m.text"},"ts":1319845266000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"css parsing","msgtype":"m.text"},"ts":1319845267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319845268000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1319845269000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah that's unfortunate","msgtype":"m.text"},"ts":1319845270000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are you atom-ifying these strings?","msgtype":"m.text"},"ts":1319845271000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"meh, like you said it's not a big deal","msgtype":"m.text"},"ts":1319845272000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: atom-ifying?","msgtype":"m.text"},"ts":1319845320000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"whatever terminology webkit uses... converting them to a pointer rather than storing the literal string","msgtype":"m.text"},"ts":1319845321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ah. yes.","msgtype":"m.text"},"ts":1319845322000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ok so it's really just one extra pointer","msgtype":"m.text"},"ts":1319845323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plus a pointer check","msgtype":"m.text"},"ts":1319845324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plus you get to flatten the logic for xml and html","msgtype":"m.text"},"ts":1319845380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i'm not sure we'd atomify the non-lowercased string","msgtype":"m.text"},"ts":1319845381000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1319845440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: creating AtomicStrings isn't free","msgtype":"m.text"},"ts":1319845441000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hixie: the main reason you do it is so you can have quick string comparisons","msgtype":"m.text"},"ts":1319845442000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah but the cost has to be offset against the many comparisons you're going to be doing","msgtype":"m.text"},"ts":1319845443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the same string will likely exist in the DOM too, right","msgtype":"m.text"},"ts":1319845444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1319845445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what do i know :-)","msgtype":"m.text"},"ts":1319845500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh...i guess for the non-lowercase one we'd still just be doing a case-senstiive comapre...so we probably would. you're right","msgtype":"m.text"},"ts":1319845501000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah...so in the common case it would not be considerably more memroy","msgtype":"m.text"},"ts":1319845502000,"senderName":"ojan","senderId":"ojan@irc"}
]