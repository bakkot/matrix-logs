[
{"content":{"body":"heycam: Great, thanks.","msgtype":"m.text"},"ts":1458696161000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: I accidentally fixed the \"using [[DOM]] puts [WHATWG-DOM] in the biblio index\" problem, while fixing another bug.","msgtype":"m.text"},"ts":1458697254000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Whatever form you use in an explicit biblio ref is now used automatically by anything else that grabs the same biblio ref, whether through an aliased term or what-have-you.)","msgtype":"m.text"},"ts":1458697304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is GitHub super slow today?","msgtype":"m.text"},"ts":1458715341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"terinjokes: is https://github.com/whatwg/fetch/issues/259 something that's worth standardizing language for in the Console Standard?","msgtype":"m.text"},"ts":1458722282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, can I bug you about https://github.com/w3c/csswg-test/pull/1066 ?","msgtype":"m.text"},"ts":1458724127000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: looking","msgtype":"m.text"},"ts":1458726130000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what does this construct do again? https://github.com/w3c/csswg-test/pull/1066/files#diff-c8670d7412c9acf48f69da4f9aa995c0R39","msgtype":"m.text"},"ts":1458726144000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I suspect it returns matrix after calling f() on it, but do complain about it :)","msgtype":"m.text"},"ts":1458726211000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok reviewed","msgtype":"m.text"},"ts":1458728105000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1458728513000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: philipj: https://www.w3.org/Bugs/Public/show_bug.cgi?id=29018","msgtype":"m.text"},"ts":1458737447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Woohoo, less than 200 open legacy bugs","msgtype":"m.text"},"ts":1458741408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: uh, yes, not sure what to do about that one, would need to redo testing to refresh my memory","msgtype":"m.text"},"ts":1458742393000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"gsnedders: jgraham: some of my <menuitem> tests fail in html5lib even though the Expected: and Received: are the same. Is that due to #errors being different, or something else?","msgtype":"m.text"},"ts":1458743765000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think we might check the number of errors still?","msgtype":"m.text"},"ts":1458743930000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/pull/72","msgtype":"m.text"},"ts":1458744721000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"happy eastern everyone! see y'all on wednesday","msgtype":"m.text"},"ts":1458744814000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: if you get a sec, can you confirm that step 8 here should not copy the destination or type from the original request? https://fetch.spec.whatwg.org/#dom-request","msgtype":"m.text"},"ts":1458744893000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: or maybe it should copy them... the fetch() method invokes the constructor immediately...  is it intentional to lose those values if a service worker does fetch(evt.request)?","msgtype":"m.text"},"ts":1458745016000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'll write an issue... you can close if I'm just confused","msgtype":"m.text"},"ts":1458745114000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://github.com/whatwg/fetch/issues/262","msgtype":"m.text"},"ts":1458745317000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that was intentional","msgtype":"m.text"},"ts":1458745841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: since destination affects the CSP policy","msgtype":"m.text"},"ts":1458745848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, but doesn't that break CSP for passthrough service worker requests?","msgtype":"m.text"},"ts":1458745867000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I can add a note about the things we don't copy intentionally I guess","msgtype":"m.text"},"ts":1458745870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I don't think so","msgtype":"m.text"},"ts":1458745881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: the document that initiates the fetch will get the CSP policy applied it asked for, and then in the worker you'll get the CSP policy corresponding to destination \"\"","msgtype":"m.text"},"ts":1458745928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so this assumes the worker has a different CSP policy?","msgtype":"m.text"},"ts":1458745974000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: a service worker will always have its own policy afaik","msgtype":"m.text"},"ts":1458746015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I think all workers do","msgtype":"m.text"},"ts":1458746023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, ok... not sure why marcos wanted the destination/type to propagate... might need you to comment on the gecko bug at some point","msgtype":"m.text"},"ts":1458746204000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: left a comment","msgtype":"m.text"},"ts":1458746437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where?","msgtype":"m.text"},"ts":1458746482000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Under the mat before your back door","msgtype":"m.text"},"ts":1458746529000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wanderview: I got a collision with your comment, so I think I'll leave it now since you said effectively the same","msgtype":"m.text"},"ts":1458746532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I'll add the extra bit I added to GitHub instead","msgtype":"m.text"},"ts":1458746547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1458746577000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/html/issues/929 seems bogus to me; can you take a look? The client is the worker, right? Which is a fine place to inherit HTTPS state from.","msgtype":"m.text"},"ts":1458747272000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the problem is that it does not have state yet, I discussed that case earlier with jwatt","msgtype":"m.text"},"ts":1458747861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: gotta go for a bit, one last thing","msgtype":"m.text"},"ts":1458747996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it'd be ideal for Mozilla if custom elements was all done and sorted within the next couple of weeks","msgtype":"m.text"},"ts":1458748015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm ok, good to know. can do, but why?","msgtype":"m.text"},"ts":1458748036000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if there's anything I can do let me know, I'll let it take precedence over the Shadow DOM work I've been doing","msgtype":"m.text"},"ts":1458748049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it'll probably just be agressive reviews as I move things to HTML.","msgtype":"m.text"},"ts":1458748069000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: next week has some TC39 meetings that might slow things down but rest of this week and the week after next I can make it my top focus","msgtype":"m.text"},"ts":1458748101000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: there's a large number of Mozillians in Taipei that'll be doing more Gecko work and in a couple of weeks I believe wchen will be there to help them get started with this","msgtype":"m.text"},"ts":1458748146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: some of them, anyway","msgtype":"m.text"},"ts":1458748159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so if the spec is mostly done, that's ideal","msgtype":"m.text"},"ts":1458748176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'll do another review tomorrow then","msgtype":"m.text"},"ts":1458748184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: biggest missing piece is still the custom element callbacks :-/. I'll hopefully at least get a start on that today/tomorrow","msgtype":"m.text"},"ts":1458748212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what timezone is TC39 in?","msgtype":"m.text"},"ts":1458751039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: San Francisco","msgtype":"m.text"},"ts":1458751050000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there a best practice for when you should be putting the dfn within WebIDL, compared to out of it?","msgtype":"m.text"},"ts":1458754776000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"If you're specifically defining something, put the dfn near it, so the IDL will link to it.  You want anyone visiting the anchor to land on the definition.","msgtype":"m.text"},"ts":1458754927000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If it's more trivial, feel free to leave it in the IDL.","msgtype":"m.text"},"ts":1458754942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ty","msgtype":"m.text"},"ts":1458755053000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: asking because now my WebIDL in another spec references the dfn rather than the IDL, which is weird.","msgtype":"m.text"},"ts":1458755110000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Why weird?","msgtype":"m.text"},"ts":1458755123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well, in interface AmbientLightSensor : Sensor {}; Sensor links to the dfn and not the IDL, which seems weird, no?","msgtype":"m.text"},"ts":1458755236000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Again, why weird?","msgtype":"m.text"},"ts":1458755307000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Also, Sensor isn't in Bikeshed's db - you using local refs? Should I add something to Bikeshed's d?","msgtype":"m.text"},"ts":1458755458000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*db","msgtype":"m.text"},"ts":1458755462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: that would be weird, yes","msgtype":"m.text"},"ts":1458755516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Oh, so that might explain it.","msgtype":"m.text"},"ts":1458755524000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: OK, I thought so too.","msgtype":"m.text"},"ts":1458755534000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: class names should reference IDL","msgtype":"m.text"},"ts":1458755535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I agree that an interface name isn't something that should be separated from its definition.","msgtype":"m.text"},"ts":1458755561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, annevk: sorry this is a combination of me not being super familiar with Bikeshed + me not being super familiar with spec editing. :)","msgtype":"m.text"},"ts":1458755584000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"The most pertinent definition of \"what this interface is\" is the interface itself.  It's just a name given an object shape, unlike methods and attributes.","msgtype":"m.text"},"ts":1458755586000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: no need to apologize, we're all here to learn","msgtype":"m.text"},"ts":1458755627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: You're talking about this dfn, right? https://w3c.github.io/sensors/#sensor","msgtype":"m.text"},"ts":1458755678000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes.","msgtype":"m.text"},"ts":1458755718000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: it's extra confusing because I have a \"sensor concept\" which doesn't map the Sensor interface 1:1.","msgtype":"m.text"},"ts":1458755761000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Alright, so (a) Imma go pop that into Shepherd, and (b) feel free to file a bug asking for them to change that <dfn> to an <a>.","msgtype":"m.text"},"ts":1458755776000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can ref me and Anne saying that interface dfns should be in the IDL, as the most useful \"definition\" of the term. ^_^","msgtype":"m.text"},"ts":1458755806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, I wrote both, so I can go fix it myself. :)","msgtype":"m.text"},"ts":1458755898000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ah, kk. ^_^","msgtype":"m.text"},"ts":1458755929000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that case, is the desired shortname \"sensor\" or \"generic-sensor\"?","msgtype":"m.text"},"ts":1458755939000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the latter.","msgtype":"m.text"},"ts":1458755991000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"you might want to wait before I pushed changes to fix this, then.","msgtype":"m.text"},"ts":1458756041000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: ^","msgtype":"m.text"},"ts":1458756050000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Nah, it'll pick up the differences after you push them, it's fine.","msgtype":"m.text"},"ts":1458756064000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Specs that aren't in its CI notification structure get reparsed like once a day or something.","msgtype":"m.text"},"ts":1458756087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is still sincerely wondering if he should take this part of Bikeshed on his own, rather than relying on Shepherd.","msgtype":"m.emote"},"ts":1458756125000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: cool, so how does it work, though. Will the IDL in the AmbientLightSensor spec, automatically link to the Generic Sensor one?","msgtype":"m.text"},"ts":1458756161000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh, you'll need to rebuild at some point to make that work.","msgtype":"m.text"},"ts":1458756180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But right now you're probably relying on a local <pre class=anchors> block anyway, so wtv.","msgtype":"m.text"},"ts":1458756192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Mmm. I'm not sure I understand all of those subtleties.","msgtype":"m.text"},"ts":1458756268000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Okay. So.","msgtype":"m.text"},"ts":1458756300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just added the Generic Sensor spec to Shepherd a few minutes ago.  Shepherd will parse the spec and extract all its definitions, and repeat this about once a day or so iirc in case things change.","msgtype":"m.text"},"ts":1458756352000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK, I figured that part. :)","msgtype":"m.text"},"ts":1458756374000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Your Ambient Light Sensor spec was already linking to Generic Sensor.  Since it wasn't in Shepherd yet, it wasn't relying on Bikeshed's built-in autolinking database.  It was either doing a manual link (ewwwwww) or was using a <pre class=anchors> block to tell Bikeshed about some additional cross-spec refs it should know about, for the purpose of processing","msgtype":"m.text"},"ts":1458756418000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this spec.","msgtype":"m.text"},"ts":1458756418000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK, now I get it.","msgtype":"m.text"},"ts":1458756443000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I guess what makes it weird is that I don't know upfront what spec is in shepherd in which isn't.","msgtype":"m.text"},"ts":1458756476000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/in/and/","msgtype":"m.text"},"ts":1458756493000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So sometimes the magic works and sometimes it doesn't.","msgtype":"m.text"},"ts":1458756517000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, that's a bit of a problem.","msgtype":"m.text"},"ts":1458756540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For example, the permissions-API isn't in Shepherd, right?","msgtype":"m.text"},"ts":1458756545000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"The interface isn't publicly available.","msgtype":"m.text"},"ts":1458756547000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, it's not.","msgtype":"m.text"},"ts":1458756564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: got it.","msgtype":"m.text"},"ts":1458756575000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"You can always ask Bikeshed if it knows about a particular reference or not.  Just run: `bikeshed refs` (-h to see the arguments) and it'll list everything it knows matching that ref request.","msgtype":"m.text"},"ts":1458756617000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK, I see.","msgtype":"m.text"},"ts":1458756632000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: rootNode can be consider stable, right?","msgtype":"m.text"},"ts":1458759674000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is suddenly tempted to bikeshed the name","msgtype":"m.emote"},"ts":1458759710000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ha","msgtype":"m.text"},"ts":1458759743000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: don't even think about or I'll start complaining about Custom Element's callback names and functionality ;)","msgtype":"m.text"},"ts":1458759798000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: hahaha you got me","msgtype":"m.text"},"ts":1458759816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/consider/considered","msgtype":"m.text"},"ts":1458760028000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes","msgtype":"m.text"},"ts":1458761009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Can Shepherd handle ReSpec editors' drafts at all? It'd be nice to get the permissions API in there even if we have to use link-defaults a lot.","msgtype":"m.text"},"ts":1458763970000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"TabAtkins: Also, where's Shepherd's list of specs? I'd be happy to send pull requests instead of bugging you for each new spec.","msgtype":"m.text"},"ts":1458763992000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: Only if the ReSpec spec has explicitly added decent metadata that Bikeshed understands. The format is well-documented now, but it's rather annoying to add by hand, so ~0 specs have done so.","msgtype":"m.text"},"ts":1458764301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: (Or if they happen to be using patterns similar to what Shepherd is using to extract definitions from CSS/SVG/HTML/a few others.)","msgtype":"m.text"},"ts":1458764332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It works better than I'd expect, but not \"well\".)","msgtype":"m.text"},"ts":1458764344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The list of specs is stored in Shepherd's DB, only accessible via the admin interface which is obviously not public. :/","msgtype":"m.text"},"ts":1458764364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can also see it in processed form in Bikeshed's data files, the bikeshed/spec-data/specs.json file.","msgtype":"m.text"},"ts":1458764383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But there's no PR bridge to it; I have to add things manually.","msgtype":"m.text"},"ts":1458764406000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I'm wondering how to fix it, and will bug plinss about it today.)","msgtype":"m.text"},"ts":1458764419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well actually, that's not true, there's a public API to read the spec data from Shepherd.","msgtype":"m.text"},"ts":1458764471000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah. IIUC, from ReSpec specs we'd get a lot of non-exported 'dfn' references, but they wouldn't be marked as IDL.","msgtype":"m.text"},"ts":1458764524000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"https://api.csswg.org/shepherd/ is the human-readable endpoint that describes the REST api.","msgtype":"m.text"},"ts":1458764568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: Exactly.","msgtype":"m.text"},"ts":1458764572000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If people did what they were *supposed* to and actually published the *processed* ReSpec documents, instead of their source files and a JS converter, this would be easy. ReSpec could use the same sorts of shorthands and such that Bikeshed does, and mark things up well.","msgtype":"m.text"},"ts":1458764630000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I'm looking more for a place to send PRs.","msgtype":"m.text"},"ts":1458764632000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"But nah, people lazy.","msgtype":"m.text"},"ts":1458764634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Presumably Shepherd could run the JS for a page and then process the result.","msgtype":"m.text"},"ts":1458764686000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Theoretically, sure.","msgtype":"m.text"},"ts":1458764783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Would require running things in Node and hoping that jsdom is up to the task, tho.  Shepherd is written in Python, so it'd need a language bridge, too.","msgtype":"m.text"},"ts":1458764813000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm bugging plinss now to see if we can have a GH repo be the \"canonical\" storage for the spec list.","msgtype":"m.text"},"ts":1458764848000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: think you could take a quick look at https://github.com/w3c/ambient-light/pull/7/commits/fd7548a","msgtype":"m.text"},"ts":1458766971000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: and tell me whether I should be getting auto links to SensorReading SensorOptions and the like? I'm clearly doing something wring and I have no idea what.","msgtype":"m.text"},"ts":1458767021000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"*wrong","msgtype":"m.text"},"ts":1458767028000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Will check in a few, currently walking to Starbucks to avoid the cleaners","msgtype":"m.text"},"ts":1458767044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ty","msgtype":"m.text"},"ts":1458767055000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jsdom is always up to the task! <3","msgtype":"m.text"},"ts":1458767229000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1458767268000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"TabAtkins: src file has now been merged here: https://github.com/w3c/ambient-light/blob/gh-pages/index.bs","msgtype":"m.text"},"ts":1458767642000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: note the index.html is the old Respec doc, so don't be surprised if the two are disconnected for now.","msgtype":"m.text"},"ts":1458767688000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jsbell: can you remind me where in the chromium tree your wpt service worker tests are?","msgtype":"m.text"},"ts":1458767804000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I can't seem to find the right path and the source viewer doesn't seem to have a search box any more","msgtype":"m.text"},"ts":1458767828000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: third_party/WebKit/LayoutTests/http/tests/serviceworkers and cachestorage","msgtype":"m.text"},"ts":1458767849000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1458767853000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://cs.chromium.org (cs=codesearch)","msgtype":"m.text"},"ts":1458767876000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: ah, that helps... I followed the \"browse source\" link by accident","msgtype":"m.text"},"ts":1458767896000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"instead of the search source","msgtype":"m.text"},"ts":1458767899000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"np!","msgtype":"m.text"},"ts":1458767908000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: btw, I am close to upstreaming our tests... are you ok if I just do that and then we can hash out any differences in PRs?","msgtype":"m.text"},"ts":1458767941000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I've probably asked you this before... sorry for the repeat","msgtype":"m.text"},"ts":1458767949000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep, sounds good","msgtype":"m.text"},"ts":1458767964000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"thanks again!","msgtype":"m.text"},"ts":1458767993000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"tobie: How do you want comments, now that it's been merged?","msgtype":"m.text"},"ts":1458768069000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: can't you still comment on the PR?","msgtype":"m.text"},"ts":1458768101000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I can, yeah. Just asking you whether that was good. Sounds like it is. ^_^","msgtype":"m.text"},"ts":1458768114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, whatever's more convenient for you.","msgtype":"m.text"},"ts":1458768148000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"here's fine too, depending on what it is you need to say","msgtype":"m.text"},"ts":1458768193000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"oh!! dfn","msgtype":"m.text"},"ts":1458768452000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: dfns aren't exported by default","msgtype":"m.text"},"ts":1458768472000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Now I get it.","msgtype":"m.text"},"ts":1458768477000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"dfn-type dfns.","msgtype":"m.text"},"ts":1458768492000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Which <dfn>s are if you dont' specify a different type.)","msgtype":"m.text"},"ts":1458768492000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"When fully expanded, <dfn data-dfn-type=dfn>. ^_^","msgtype":"m.text"},"ts":1458768512000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I--","msgtype":"m.text"},"ts":1458768572000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Maybe I should re-read the doc another 3 times.","msgtype":"m.text"},"ts":1458768605000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, I know. Badly named. Can't fix it now.","msgtype":"m.text"},"ts":1458768607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Really annoying to talk about and I hate it.","msgtype":"m.text"},"ts":1458768614000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Something like <dfn interface> (or when expanded, <dfn data-dfn-type=interface>) *are* exported by default.  It's just the \"dfn\"-type ones that are treated different for exporting.","msgtype":"m.text"},"ts":1458768663000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"BTW, I wasn't really asking for a review of this src file, more of an explanation as to why there wasn't auto-links to the stuff defined in the generic sensor spec.","msgtype":"m.text"},"ts":1458768682000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"And it seems that's because I've using DFN's for interfaces, and those aren't exported by default","msgtype":"m.text"},"ts":1458768723000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"They're the wrong type, and *also* as a result of that they aren't exported, yeah.","msgtype":"m.text"},"ts":1458768752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The fact that they're not exported isn't why your autolinks are failing, tho, it's that they're not the right type.","msgtype":"m.text"},"ts":1458768773000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/w3c/sensors/blob/gh-pages/index.bs#L648","msgtype":"m.text"},"ts":1458768805000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But it looks ok in the source - Sensor is defined with an \"interface\" type, as it should be.","msgtype":"m.text"},"ts":1458768807000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Are you generating your spec with a local copy of Bikeshed, or the remote version?","msgtype":"m.text"},"ts":1458768871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"local","msgtype":"m.text"},"ts":1458768882000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Have you run `bikeshed update` some time after I put Sensors in the db?","msgtype":"m.text"},"ts":1458768901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mmm","msgtype":"m.text"},"ts":1458768946000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah-ish","msgtype":"m.text"},"ts":1458768954000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"May have been too early.  I just did it, and SensorReading is definitely in the db now. Update again and it should get picked up.","msgtype":"m.text"},"ts":1458768979000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Amazing if it is.","msgtype":"m.text"},"ts":1458768993000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Why amazing?","msgtype":"m.text"},"ts":1458769000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because it's 10:30pm and I'm tired. :)","msgtype":"m.text"},"ts":1458769034000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh, amazing as in \"I'll be happy if so\", not \"that would be surprising\"","msgtype":"m.text"},"ts":1458769061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah--sorry.","msgtype":"m.text"},"ts":1458769098000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It works.","msgtype":"m.text"},"ts":1458769102000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Also it's amazing because it's actually pretty cool tech.","msgtype":"m.text"},"ts":1458769118000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1458769119000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Cross-spec autolinking is literally the reason I wrote Bikeshed.  It is pretty cool. ^_^","msgtype":"m.text"},"ts":1458769165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"indeed.","msgtype":"m.text"},"ts":1458769183000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"OK, so I'll need to export dfns I want to reference in the AmbientLight spec","msgtype":"m.text"},"ts":1458769223000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"And should leave the dfn with the WebIDL for the interfaces","msgtype":"m.text"},"ts":1458769245000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah. If you don't you can still link them, but you need to declare that you really do mean to link that spec, usually through a link-defaults block.","msgtype":"m.text"},"ts":1458769253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then it'll be all good.","msgtype":"m.text"},"ts":1458769254000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Which is annoying if the term is *meant* to be generally useful for other specs.","msgtype":"m.text"},"ts":1458769269000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK. Got it.","msgtype":"m.text"},"ts":1458769284000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Thanks so much for your help.","msgtype":"m.text"},"ts":1458769291000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1458769376000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Glad to help the ecosystem grow.","msgtype":"m.text"},"ts":1458769382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Woo. https://w3c.github.io/webstorage/#dom-localstorage points to https://html.spec.whatwg.org/multipage/webstorage.html","msgtype":"m.text"},"ts":1458771876000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"TabAtkins: curious as to why https://w3c.github.io/sensors/#high-vs-low-level [GEOLOCATION-API] ends up as [geolocation-API] in the ref section.","msgtype":"m.text"},"ts":1458772453000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: https://w3c.github.io/sensors/#biblio-geolocation-api","msgtype":"m.text"},"ts":1458772467000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: sure, the shortname is mixed-cased, but my local ref isn't.","msgtype":"m.text"},"ts":1458772602000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Because the ref index uses the casing from SpecRef if it's mixed-case, in case that's important.","msgtype":"m.text"},"ts":1458775744000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It uppercases things that are all-lowercase.)","msgtype":"m.text"},"ts":1458775754000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, right, because you're not using the specref service","msgtype":"m.text"},"ts":1458775828000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well, I'm calling SpecRef for its data.","msgtype":"m.text"},"ts":1458775853000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the service is case-insensitive and generates an alias on the fly","msgtype":"m.text"},"ts":1458775858000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"duuuuude, store the casing you want *in the db*.","msgtype":"m.text"},"ts":1458775874000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well... depending on the use case, having the actual shortname casing is important","msgtype":"m.text"},"ts":1458775924000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Then don't complain when I preserve it. ^_^","msgtype":"m.text"},"ts":1458775942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Bikeshed is also case-insensitive for *looking up* refs. It just preserves the casing for display if it surmises that it's important, such as when the casing is mixed.)","msgtype":"m.text"},"ts":1458775977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, sticking references in a spec isn't one of those use cases. :P","msgtype":"m.text"},"ts":1458775983000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Mang I can't tell that.","msgtype":"m.text"},"ts":1458775998000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's not that important tbh, but I do think the casing displayed in the ref section should match that used in the body of the spec","msgtype":"m.text"},"ts":1458776110000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"i.e. those references are internal","msgtype":"m.text"},"ts":1458776132000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I can probably do that, given the way I'm handling \"preferred\" names now.","msgtype":"m.text"},"ts":1458776167000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]