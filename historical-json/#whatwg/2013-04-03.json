[
{"content":{"body":"so does the HTML parser","msgtype":"m.text"},"ts":1364947205000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I guess some there's some irony in you holding up W3C organizational (mis)usage of <h2> as a precedent that needs to limit how we can properly define it now :)","msgtype":"m.text"},"ts":1364947230000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie_: hence my confusion","msgtype":"m.text"},"ts":1364947246000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"MikeSmith: well it's not just the w3c","msgtype":"m.text"},"ts":1364947288000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rillian: aah, ok. yeah, parsers can't collapse the white space, since if they did then 'white-space: pre' would have no way to \"un\"collapse it","msgtype":"m.text"},"ts":1364947316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"rillian: people tend to use nbsp in whitespace collapsing-related hacks (&nbsp;&nbsp;&nbsp;&nbsp;), but that's not its real purpose","msgtype":"m.text"},"ts":1364947328000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"MikeSmith: my point is just that it's common usage","msgtype":"m.text"},"ts":1364947343000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"MikeSmith: <hgroup> just makes that usage less theoretically wrong","msgtype":"m.text"},"ts":1364947356000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: *node*","msgtype":"m.text"},"ts":1364947368000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"*parent*","msgtype":"m.text"},"ts":1364947400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: ok I concede that it's common usage but I don't think it necessarily follows that we need to add a new element to the language in order to handle a particular case of processing that's only needed for documents that follow that usage","msgtype":"m.text"},"ts":1364947508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to paraphrase Brendan, I think the bar needs to be higher than that","msgtype":"m.text"},"ts":1364947528000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: why?","msgtype":"m.text"},"ts":1364947606000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: because the default answer for new elements is No, and I think there are other cases where the answer has been No and remained No that had relatively more merit than hgroup","msgtype":"m.text"},"ts":1364947671000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zewt: I think I might be out of productive work time for the day :)","msgtype":"m.text"},"ts":1364947675000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"MikeSmith: like what?","msgtype":"m.text"},"ts":1364947839000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_:< time>","msgtype":"m.text"},"ts":1364947960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I am not a fan of <time>","msgtype":"m.text"},"ts":1364947968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"despite implementing validator support for it in all its baroqueness","msgtype":"m.text"},"ts":1364947990000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I know other people seem to be almost fanatical about it","msgtype":"m.text"},"ts":1364948006000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<time> is in","msgtype":"m.text"},"ts":1364948022000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1364948025000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah but witness the fact that when you tried to drop it, they almost came and burned the castle down","msgtype":"m.text"},"ts":1364948037000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'd rather you had dropped it and it had stayed out","msgtype":"m.text"},"ts":1364948053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but anyway, I think if we drop <hgroup> there is not going to be any insurrection like we had with <time>","msgtype":"m.text"},"ts":1364948085000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there's two <time> elements","msgtype":"m.text"},"ts":1364948089000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"there's the old one, which we dropped, and a new one, which solves entirely different use cases","msgtype":"m.text"},"ts":1364948101000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I think the general reaction if <hgroup> is dropped is just going to be \"meh\"","msgtype":"m.text"},"ts":1364948118000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie_: OK","msgtype":"m.text"},"ts":1364948124000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well people need _something_ to do subheadings","msgtype":"m.text"},"ts":1364948133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"<hgroup> seems like the best solution for it so far","msgtype":"m.text"},"ts":1364948148000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the only <eim> I care about much personally is the one I have to implement validator support for","msgtype":"m.text"},"ts":1364948158000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie_: I guess it doesn't seem to me that <hgroup> is the best solution and we still have a chance to come up with something better","msgtype":"m.text"},"ts":1364948212000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not that I have any better suggestion myself right now","msgtype":"m.text"},"ts":1364948227000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if there's only one proposal, it's by definition the best one :_P","msgtype":"m.text"},"ts":1364948243000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"personally i think it works fine, solves all the use cases, and is nice and simple and backwards compatible and basically has no problems","msgtype":"m.text"},"ts":1364948284000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't really understand what the fuss is about","msgtype":"m.text"},"ts":1364948290000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I guess if there's only one proposal, it's by definition the worst one","msgtype":"m.text"},"ts":1364948310000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1364948315000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1364948316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"there's an infinite number of proposals that we'd all readily admit are worse","msgtype":"m.text"},"ts":1364948336000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. introducing an <hgroup_9821518357> element","msgtype":"m.text"},"ts":1364948344000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: on thing I'm aware of as a problem is that per the current spec, AT munges the subheading into the main heading, with no pause or nothing in between. Which seems bad for screen-reader useers.","msgtype":"m.text"},"ts":1364948386000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"If you can have the spec address that problem, maybe we could get agreement","msgtype":"m.text"},"ts":1364948421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wait, what?","msgtype":"m.text"},"ts":1364948436000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why would they do anything different than they used to","msgtype":"m.text"},"ts":1364948443000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"dunno but that is what I remember hearing from the discussions","msgtype":"m.text"},"ts":1364948500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the why is because I think the spec requires AT to handle them differently if they are in hgroup","msgtype":"m.text"},"ts":1364948532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or I assume so","msgtype":"m.text"},"ts":1364948542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if the ATs are so dumb as to actively regress their behaviour intentionally, then it's a lost cause.","msgtype":"m.text"},"ts":1364948561000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"because otherwise like you said, the spec would not be introducing any behavior change with respect to AT","msgtype":"m.text"},"ts":1364948571000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what I'm saying is that I think the (unintended) effect of the current spec is that the text of the headings ends up munged together in the accessibility tree","msgtype":"m.text"},"ts":1364948642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well that's a bug they should fix if they care about their users","msgtype":"m.text"},"ts":1364948656000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guarantee that the spec doesn't say they should do that. even if it did, it'd be ridiculous to implement such a thing.","msgtype":"m.text"},"ts":1364948690000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"god, i can't believe accessibility advocates are still arguing for longdesc","msgtype":"m.text"},"ts":1364949240000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's so utterly disheartening to see a community that paints itself as advocates for another community be so incompetent and so utterly fail that community.","msgtype":"m.text"},"ts":1364949320000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: in that case of longdesc it's not even the community overall that's advocated for it","msgtype":"m.text"},"ts":1364950136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"instead it's a very vocal and aggressive faction within the community","msgtype":"m.text"},"ts":1364950163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"a faction that's well connected enough that it can ignore and override objections about longdesc that come from their closest colleagues","msgtype":"m.text"},"ts":1364950222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so sad","msgtype":"m.text"},"ts":1364950245000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yuup","msgtype":"m.text"},"ts":1364950388000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"In the department of silly ideas, <h1><ruby><rb>HEADING</rb><rt>SUBHEADING</rt></ruby></h1>","msgtype":"m.text"},"ts":1364954278000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1364954454000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i would support longdesc if the referenced file had to contain exactly 1,000 words.","msgtype":"m.text"},"ts":1364954567000,"senderName":"chee","senderId":"chee@irc"},
{"content":{"body":"death to target=_blank","msgtype":"m.text"},"ts":1364957134000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"needs to be whitelist-only, except for actual web apps they're nothing but \"please don't leave our site!\" intrusive crap","msgtype":"m.text"},"ts":1364957230000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins, ping","msgtype":"m.text"},"ts":1364964596000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(mailed)","msgtype":"m.text"},"ts":1364964861000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: you got my email about 'undefined'","msgtype":"m.text"},"ts":1364967456000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1364967458000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, I did and it's the next thing I'll get to when I switch to Web IDL stuff","msgtype":"m.text"},"ts":1364967480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sicking, sorry for not replying to indicate that!","msgtype":"m.text"},"ts":1364967484000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: no worries. I actually prefer that people don't send the 'ok' replies. Too much inbox churn","msgtype":"m.text"},"ts":1364967518000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1364967524000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: but since i saw you here...","msgtype":"m.text"},"ts":1364967525000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"MikeSmith: this sums up average response from twitterverse on dropping hgroup: \"W3C remove hgroup tag from HTML5 spec, representing the first time anyone heard of it\"","msgtype":"m.text"},"ts":1364971544000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"MikeSimth: https://twitter.com/codepo8/status/319207945122504704","msgtype":"m.text"},"ts":1364971894000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"MikeSmith: there are a number of proposals of replacements on replacements/mods for hgroup","msgtype":"m.text"},"ts":1364972049000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hixie: on the acc layer semantics you blocked any attempt to make the mappings sane","msgtype":"m.text"},"ts":1364972122000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hixie: but we don't have to argue that on hgroup anymore :-)","msgtype":"m.text"},"ts":1364972172000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"hixie: the <hx><hx> pattern to markup subheadings is about as common as longdesc in the wild, developers use a wide variety of elements to mark up subheadings/subtitles/taglines etc","msgtype":"m.text"},"ts":1364972377000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"has anyone tried to remove mutation events yet?","msgtype":"m.text"},"ts":1364972584000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why don't we use <script> for HTML Imports?","msgtype":"m.text"},"ts":1364974282000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: css-syntax: <p>The document has moved <a href=\"https://cgi.w3.org/member-bin/process.cgi\">here</a>.</p>","msgtype":"m.text"},"ts":1364976707000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: do we need to discuss background-repeat round(N+0.5) on the conf call? http://lists.w3.org/Archives/Public/www-style/2013Mar/0760.html","msgtype":"m.text"},"ts":1364976761000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hmm, seems like grep has changed since https://twitter.com/zcorpan/status/198020760927866880","msgtype":"m.text"},"ts":1364976829000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't see a flag to do null byte-based search instead of line-based","msgtype":"m.text"},"ts":1364976867000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: gnu grep vs. bsd grep?","msgtype":"m.text"},"ts":1364976920000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"dunno. got a new mac.","msgtype":"m.text"},"ts":1364976938000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm on Mac OS X 10.8.3 now","msgtype":"m.text"},"ts":1364976969000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what i want to do is join the files in this data set http://webdevdata.org/ into a single file that also contains the filenames, null-byte separated, similar to http://dotnetdotcom.org/#inde","msgtype":"m.text"},"ts":1364977081000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"man grep says BSD General Commands Manual","msgtype":"m.text"},"ts":1364977282000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: pr","msgtype":"m.text"},"ts":1364977433000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(that's a command, not PR)","msgtype":"m.text"},"ts":1364977451000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"yeah, reading the man page now :-)","msgtype":"m.text"},"ts":1364977503000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hixie:MikeSmith: in fact it appears much more common to use p or div rather than hx to mark up a subheading, subtitle or tagline https://dl.dropbox.com/u/377471/tests/subhead-class.html","msgtype":"m.text"},"ts":1364978081000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"too many files","msgtype":"m.text"},"ts":1364978105000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gives up","msgtype":"m.emote"},"ts":1364978524000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: You must be able to install the gnu tools in some way e.g. via homebrew or macports or something","msgtype":"m.text"},"ts":1364979263000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i think i got it working now, with ls -1 and cat","msgtype":"m.text"},"ts":1364979377000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"darobin, your idl parser upgrade really is a gift that keeps on giving...","msgtype":"m.text"},"ts":1364985325000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: context?","msgtype":"m.text"},"ts":1364985486000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"SteveF: saw the email, still catching up after my break","msgtype":"m.text"},"ts":1364985513000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"if (member.type == \"const\") ... assert_equals(window[this.name][member.name], eval(member.value))","msgtype":"m.text"},"ts":1364985534000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin:no problem","msgtype":"m.text"},"ts":1364985535000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Ms2ger: that's not my code...","msgtype":"m.text"},"ts":1364985553000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Where suddenly, member.value turned into {type:\"number\", value:25}","msgtype":"m.text"},"ts":1364985560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1364985565000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"well yeah","msgtype":"m.text"},"ts":1364985568000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"there were ample warnings that the parser's AST would change","msgtype":"m.text"},"ts":1364985592000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that seems like an easy fix :)","msgtype":"m.text"},"ts":1364985598000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: it was either that, or stick with a version of WebIDL that simply wasn't relevant anymore","msgtype":"m.text"},"ts":1364985642000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"or, you know, wait until REC to implement","msgtype":"m.text"},"ts":1364985664000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Or, hey, backward compatibility","msgtype":"m.text"},"ts":1364985686000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"there were too many cases in which it simply wasn't possible","msgtype":"m.text"},"ts":1364985701000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"So what can this member.value thing actually be?","msgtype":"m.text"},"ts":1364985708000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"WebIDL is not backwards compatible with previous versions of itself","msgtype":"m.text"},"ts":1364985712000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I forget, but unless I made a mistake the changes were motivated rather than gratuitous","msgtype":"m.text"},"ts":1364985730000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"type can be boolean, number,","msgtype":"m.text"},"ts":1364985746000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"null, Infinity, NaN?","msgtype":"m.text"},"ts":1364985756000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"string?","msgtype":"m.text"},"ts":1364985774000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"as I said, it's possible that I made some mistakes in some cases","msgtype":"m.text"},"ts":1364985802000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Apparently not, if I'm looking at the right code","msgtype":"m.text"},"ts":1364985804000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but most of the changes were motivated by test cases that I couldn't represent correctly without changing the AST","msgtype":"m.text"},"ts":1364985829000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"most of idlharness kept on working...","msgtype":"m.text"},"ts":1364985841000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"So...","msgtype":"m.text"},"ts":1364985885000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"in any case, let me load up idlharness and make you a fix, since you ask so graciously","msgtype":"m.text"},"ts":1364985886000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Why is Infinity not a number?","msgtype":"m.text"},"ts":1364985902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it doesn't JSONify","msgtype":"m.text"},"ts":1364985935000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"All I want is to get the JS value I need to compare to","msgtype":"m.text"},"ts":1364985939000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"... why should it?","msgtype":"m.text"},"ts":1364985957000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"again, dim memory from 6 months ago, but when I included Infinity it broke code that was expecting the AST to be JSONifiable","msgtype":"m.text"},"ts":1364985992000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"which didn't strike me as necessarily a wrong expectation, and happened to be something that real people were using","msgtype":"m.text"},"ts":1364986018000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Lovely","msgtype":"m.text"},"ts":1364986028000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"would have been happy with the string","msgtype":"m.emote"},"ts":1364986043000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"guess you should've been there then","msgtype":"m.text"},"ts":1364986058000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: are there any API proposals using futures?","msgtype":"m.text"},"ts":1364986887000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: not yet I think, was a bit of a chicken and egg problem","msgtype":"m.text"},"ts":1364986934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1364986971000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I suggested people start using them though, e.g. http://lists.w3.org/Archives/Public/public-media-capture/2013Apr/0008.html","msgtype":"m.text"},"ts":1364986982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To make it more compelling I need to define Future.first and Future.when (statics) and write an introduction I suppose","msgtype":"m.text"},"ts":1364987014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then convert the world, or something","msgtype":"m.text"},"ts":1364987034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will need to decide whether he likes Futures :)","msgtype":"m.emote"},"ts":1364987210000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: an introduction with a sample API would be helpful for understanding how it works. i read the spec and didn't get it. :-)","msgtype":"m.text"},"ts":1364987254000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: did you get the DOMFuture intro?","msgtype":"m.text"},"ts":1364987298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://msdn.microsoft.com/en-gb/library/windows/apps/br211867.aspx","msgtype":"m.text"},"ts":1364987346000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1364987352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: pointer?","msgtype":"m.text"},"ts":1364987410000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/slightlyoff/DOMFuture/blob/master/README.md","msgtype":"m.text"},"ts":1364987424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think in my example I'll show how you could wrap XMLHttpRequest and then get convenient code for when two requests complete or when either completes","msgtype":"m.text"},"ts":1364987472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so do you have a test case for the problem you're seeing?","msgtype":"m.text"},"ts":1364988433000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"https://w3c-test.org/webapps/DOMCore/tests/approved/interfaces.html","msgtype":"m.text"},"ts":1364988444000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"NodeFilter interface: constant SHOW_NOTATION on interface object, say","msgtype":"m.text"},"ts":1364988450000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1364988457000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: that was more understandable","msgtype":"m.text"},"ts":1364988752000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: cool","msgtype":"m.text"},"ts":1364988777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: done() and catch() are just sugar, right?","msgtype":"m.text"},"ts":1364988778000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: catch() is; done() is useful end-of-chain as the exceptions thrown will actually get to window.onerror","msgtype":"m.text"},"ts":1364988802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"adds a note to the spec for that","msgtype":"m.emote"},"ts":1364988939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"done\" in the IDL is not a link","msgtype":"m.text"},"ts":1364989726000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: the algorithms for then and catch have some bogus italics","msgtype":"m.text"},"ts":1364989808000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"lots of copypasta","msgtype":"m.text"},"ts":1364989910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks, fixed now","msgtype":"m.text"},"ts":1364990141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i don't understand how done() is different wrt onerror","msgtype":"m.text"},"ts":1364990304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g. then(callbackthatthrow) will invoke reject on the returned future's resolver","msgtype":"m.text"},"ts":1364990362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done(callbackthatthrow) will just throw which is eventually catched by window.onerror","msgtype":"m.text"},"ts":1364990382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah done doesn't have the \"future wrapper callback\"","msgtype":"m.text"},"ts":1364990473000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so without done() there would be no way of knowing about exceptions in the callback at the end of the chain","msgtype":"m.text"},"ts":1364990632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: when you have time, please take a look at http://bugzilla.validator.nu/show_bug.cgi?id=970","msgtype":"m.text"},"ts":1364991136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"specifically http://bugzilla.validator.nu/show_bug.cgi?id=970#c1","msgtype":"m.text"},"ts":1364991176000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"patch to fix the problem that the table-integrity checker hits when being run under Java 7","msgtype":"m.text"},"ts":1364991214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The funny thing is the specification of thead and tfoot states that it might be useful to repeat the elements on each page. Sadly no browser vendor implemented this yet.\" http://drublic.de/blog/printing-the-web/","msgtype":"m.text"},"ts":1364991913000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i thought firefox did? was it dropped?","msgtype":"m.text"},"ts":1364991920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"We did?","msgtype":"m.text"},"ts":1364991984000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tested now. still works.","msgtype":"m.text"},"ts":1364992018000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"data:text/html,<table><thead><tr><th>foo<tbody><tr><td>bar<tr><td>bar.......","msgtype":"m.text"},"ts":1364992038000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hi. Where does the HTML spec define that <title> can't contain comments?","msgtype":"m.text"},"ts":1364996454000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":" (Or, rather, that <!-- blah --> inside <title> is literal text, not a comment.)","msgtype":"m.text"},"ts":1364996455000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: apart from the parser you mean?","msgtype":"m.text"},"ts":1364996496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes. Where for HTML authors?","msgtype":"m.text"},"ts":1364996520000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"I've just encountered somebody trying to put a comment in <title>, and I couldn't find the bit of the spec that says you can't do that.","msgtype":"m.text"},"ts":1364996548000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: Currently, 12.1.2 Elements","msgtype":"m.text"},"ts":1364996553000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Smylers: \"RCDATA elements can have text and character references […]\"","msgtype":"m.text"},"ts":1364996569000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Thanks.","msgtype":"m.text"},"ts":1364996635000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#content-models says “... comment nodes ... must be   ignored when establishing whether an element's contents match the element's content model or not, and must be ignored when following algorithms that define document and element semantics.”","msgtype":"m.text"},"ts":1364996675000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Together they suggest that if you did but a comment node in <title> then it would be ignored.","msgtype":"m.text"},"ts":1364996722000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"There is no comment node involved","msgtype":"m.text"},"ts":1364996741000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Smylers: No, 12.1.2 says that you cannot have a comment in a valid <title> element. It makes no statement about what you can have otherwise.","msgtype":"m.text"},"ts":1364996759000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"There is something in your source code that look like a comment, but isn't one","msgtype":"m.text"},"ts":1364996759000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks*","msgtype":"m.text"},"ts":1364996774000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Smylers: The parser then states that anything that looks like a comment in <title> is just the literal string \"<!--\" etc.","msgtype":"m.text"},"ts":1364996795000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Smylers: 3.2.5 merely defines comments to be meaningless, but with the HTML serialization you cannot get a comment in the title element from the parser.","msgtype":"m.text"},"ts":1364996843000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(You can however get one through <title>foo</title><script>document.querySelector(\"title\").appendChild(document.createComment())</script> or something similar)","msgtype":"m.text"},"ts":1364996878000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(But scripting is the only way to get one there in the HTML serialization)","msgtype":"m.text"},"ts":1364996892000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger, gsnedders: Yeah, I know it isn't a comment node. But I can't see why it isn't, without reading bits of the spec that are supposed to be only for implementers.","msgtype":"m.text"},"ts":1364996922000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"\"RCDATA elements can have text and character references [�]\"","msgtype":"m.text"},"ts":1364996934000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Smylers: Because \"RCDATA can have text and character references\". Comments are not text or character references.","msgtype":"m.text"},"ts":1364996947000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"<!-- foo -->\" is text.","msgtype":"m.text"},"ts":1364997031000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Sure, I can see that it is text!","msgtype":"m.text"},"ts":1364997047000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: Nowhere in the non-parser spec says that it isn't a comment node, merely that you are not allowed comments in RCDATA elements.","msgtype":"m.text"},"ts":1364997105000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Smylers: tl;dr: It matches the unrestricted definition of text (constrast with the forbidding of < elsewhere in normal elements) and hence the definition of a comment is irrelevant.","msgtype":"m.text"},"ts":1364997179000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger can probably explain better. :P","msgtype":"m.text"},"ts":1364997196000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I can?","msgtype":"m.text"},"ts":1364997218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tries to figure out why two of his tests are suddenly passing, while they weren't yesterday","msgtype":"m.emote"},"ts":1364997261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: I can see that 12.1.2 says RCDATA elements can only contain text and character references, and that that doesn't include comments. But 3.2.5 says that if a <title> did contain a comment node, then that comment would be ignored for the purposes of determining whether the contents of the <title> matches its content model. So surely a (theoretical) comment node in a <title> wouldn't contravene 12.1.2, because by 3.2.5 it","msgtype":"m.text"},"ts":1364997783000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"The problem is that “<!-- foo -->”, _isn't_ a comment node, but mere text. And I don't see where an author can find that out.","msgtype":"m.text"},"ts":1364997784000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Relatedly, is there a way of navigating from http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#the-title-element to the RCDATA definition by following plausible-looking links?","msgtype":"m.text"},"ts":1364997835000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: The author finds that out by the fact that it is text, as defined.","msgtype":"m.text"},"ts":1364997883000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Smylers: I think not, because that defines the semantics of the title element in the HTML namespace, as an abstract concept, unrelated to any serialization. Perhaps they should be linked some how.","msgtype":"m.text"},"ts":1364997926000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: In practice it turns out the author finds it out by asking me why it isn't working!","msgtype":"m.text"},"ts":1364997932000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: The answer is because \"<!-- foo -->\" is text and hence not a comment.","msgtype":"m.text"},"ts":1364997966000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which is all 12.1.2","msgtype":"m.text"},"ts":1364997972000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"3.2.5 has no effect on the serialization, just on the parsed tree.","msgtype":"m.text"},"ts":1364998005000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That makes sense to me.","msgtype":"m.text"},"ts":1364998067000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Oh oh, new workplace dubbed me the HTML5 guy, so you guys get to hear more of my insane prattling :P","msgtype":"m.text"},"ts":1364998116000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"asmodai: Oh dear god no ;_;","msgtype":"m.text"},"ts":1364998201000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"asmodai: :P","msgtype":"m.text"},"ts":1364998204000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"grins","msgtype":"m.emote"},"ts":1364998208000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"Ms2ger: patch landed, adds lots of green","msgtype":"m.text"},"ts":1364998273000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"should sync with the next cron run","msgtype":"m.text"},"ts":1364998281000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Thank you","msgtype":"m.text"},"ts":1364998284000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: They also tossed JavaScript and JSON my way, not sure how to feel about that though. :P","msgtype":"m.text"},"ts":1364998327000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"I was dubbed not-HTML5 guy, hence I keep mostly quiet ;D","msgtype":"m.text"},"ts":1365000979000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"asmodai: what's left?","msgtype":"m.text"},"ts":1365001058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If one wants to store a fragment of HTML for later use in an HTML page the current recommended practice would still be to use an XML fragment rather then an HTML fragment as the HTML fragment parsing algorithm doesn't do exactly what one might expect. (Adds a root html element and other elements) Is that correct still?","msgtype":"m.text"},"ts":1365001128000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: yeah, although once <template> is integrated you should probably switch to the parsing model of that element","msgtype":"m.text"},"ts":1365001491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"time line for template?","msgtype":"m.text"},"ts":1365001533000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gsnedders: Sorry, got distracted. That makes sense to me ... but I'm still not sure I can explain it to somebody who doesn't know (and doesn't need to know) what the DOM is.","msgtype":"m.text"},"ts":1365001537000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"annevk: Hehe, various security protocols and standards :)","msgtype":"m.text"},"ts":1365001543000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"gavinc: dunno, might be landing in browsers about now? not sure when it'll be integrated into HTML proper","msgtype":"m.text"},"ts":1365001578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gavinc: six months seems like a safish bet","msgtype":"m.text"},"ts":1365001586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: usual process pain of rec referring to non rec, etc etc :(","msgtype":"m.text"},"ts":1365001590000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#the-title-element says that <title> has a content model of Text, which links to 3.2.5.1.","msgtype":"m.text"},"ts":1365001604000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"gavinc: that's only a pain if you make it so","msgtype":"m.text"},"ts":1365001624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gavinc: W3C bullshit is very much opt-in","msgtype":"m.text"},"ts":1365001660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"3.2.5.1 says Text can have Text nodes, which links to the DOM spec's Text interface.","msgtype":"m.text"},"ts":1365001703000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: you should look in section 12","msgtype":"m.text"},"ts":1365001865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Smylers: which says <title> is RCDATA","msgtype":"m.text"},"ts":1365001871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Smylers: and RCDATA cannot contain anything but text or &...;","msgtype":"m.text"},"ts":1365001886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Smylers: \"content model\" is a conformance criteria, e.g. if you append a bunch of elements to <title> via the DOM it'll be non-conforming","msgtype":"m.text"},"ts":1365001931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Smylers: \"content model\" is not a constrain as to what's actually possible when writing HTML or scripting","msgtype":"m.text"},"ts":1365001962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK.","msgtype":"m.text"},"ts":1365001984000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"annevk: What kind of thing is RCDATA?","msgtype":"m.text"},"ts":1365002032000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Smylers: prolly leftover term from SGML, but feel free to read it as if it said \"bananas\"","msgtype":"m.text"},"ts":1365002069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Smylers: what matters is how it's defined","msgtype":"m.text"},"ts":1365002080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Now nobody looks at HTML4 anymore we might want to rename those obscure terms to something more useful... If you feel like that'd be good Smylers, maybe file a bug to suggest that.","msgtype":"m.text"},"ts":1365002127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thank you — that answers the next question I was about to ask!","msgtype":"m.text"},"ts":1365002328000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"annevk: But what I actually meant was: what is the term for the category of item that RCDATA is an instance of?","msgtype":"m.text"},"ts":1365002365000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"annevk: As in “The X of the <title> element is RCDATA.” What is X?","msgtype":"m.text"},"ts":1365002395000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"\"category\"? :)","msgtype":"m.text"},"ts":1365002403000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Smylers: There's elements. <title> is a RCDATA element.","msgtype":"m.text"},"ts":1365002412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Smylers: An element being of a particular category places restrictions on how you can write it.","msgtype":"m.text"},"ts":1365002449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.whatwg.org/C#elements-0","msgtype":"m.text"},"ts":1365002474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, “kind” appears to be the term.","msgtype":"m.text"},"ts":1365002508000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"Thanks, all.","msgtype":"m.text"},"ts":1365002521000,"senderName":"Smylers","senderId":"Smylers@irc"},
{"content":{"body":"\"kind\" is most definitely not a term. That's just language. It might as well have said \"type\" there.","msgtype":"m.text"},"ts":1365002553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or \"categories\".","msgtype":"m.text"},"ts":1365002582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the state of art for doing retina/adaptive/responsive/etc images these days?","msgtype":"m.text"},"ts":1365011216000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<picture srcset>","msgtype":"m.text"},"ts":1365011343000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hehe.","msgtype":"m.text"},"ts":1365011362000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: fwiw, futures are discussed in that repo and on www-dom and Bugzilla... now public-webapps too teehee","msgtype":"m.text"},"ts":1365011383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ooh and various JavaScript places I guess, like the ES wiki","msgtype":"m.text"},"ts":1365011397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WHATEVER","msgtype":"m.text"},"ts":1365011479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe you people should, you know, actually post that info somewhere in the gh repo.","msgtype":"m.text"},"ts":1365011508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I should probably join www-dom.","msgtype":"m.text"},"ts":1365011528000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i mean what's best for authors to use today, not what a browser should implement","msgtype":"m.text"},"ts":1365011559000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<img>","msgtype":"m.text"},"ts":1365011627000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: dom.spec.whatwg.org is pretty clear about it I think, dunno about GH, that's outside my jurisdiction","msgtype":"m.text"},"ts":1365012431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: but yeah, WHATEVER works, I'll read it either way :)","msgtype":"m.text"},"ts":1365012459000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Since I was specifically talking about a strawman that I don't think is in DOM yet, I wasn't looking there. ^_^","msgtype":"m.text"},"ts":1365012513000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think ProgressFuture as is makes sense though, no need to put a bunch of events in there too","msgtype":"m.text"},"ts":1365012588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I'd make progress() accept a ProgressEvent","msgtype":"m.text"},"ts":1365012606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not a bunch of events.  No API-level stuff needs to change at all.","msgtype":"m.text"},"ts":1365012611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, do that, and make it an event target so addEventListener('progress', ...) works on it.","msgtype":"m.text"},"ts":1365012627000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"eww","msgtype":"m.text"},"ts":1365012633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not that that's particular useful, but existing infrastructure that cares about events may use it.","msgtype":"m.text"},"ts":1365012641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No reason to completely reinvent events.","msgtype":"m.text"},"ts":1365012650000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what part is being made less complex by adding that?","msgtype":"m.text"},"ts":1365012695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The part where you're breaking compat with existing things in a specialized, custom way.","msgtype":"m.text"},"ts":1365012767000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which, given that Future is all about trying to make some cases less specialized and custom...","msgtype":"m.text"},"ts":1365012790000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like I said, though, keep the existing convenience APIs.  They're great.  Just *also* make it actually use events like the rest of the platform does, rather than reinventing them in a custom way.","msgtype":"m.text"},"ts":1365012895000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We're not trying to replace events with futures, after all, just replace *bad uses of events* with them.","msgtype":"m.text"},"ts":1365012896000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Btw, should I resend my thread to www-dom?","msgtype":"m.text"},"ts":1365012904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If something does not need to be an EventTarget but needs to report progress going forward, I think just having ProgressFuture would be better (or something like that)","msgtype":"m.text"},"ts":1365012905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That doesn't mean we're suddenly replacing events...","msgtype":"m.text"},"ts":1365012916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right.  What I'm saying is that the progress part of ProgressFuture *is an event*, in every meaningful sense.","msgtype":"m.text"},"ts":1365012947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: nah it's fine I think","msgtype":"m.text"},"ts":1365012962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Except, currently, the technical sense.","msgtype":"m.text"},"ts":1365012965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It should just be a Future that reports progress events as well.","msgtype":"m.text"},"ts":1365012985000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree that ProgressFuture is better in general for progress-event-related things, because it lets you listen for completion in the better Future manner.","msgtype":"m.text"},"ts":1365013062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I still don't see why. Sure it's a callback that's invoked multiple times. Does not necessarily make it an event...","msgtype":"m.text"},"ts":1365013064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's a callback that's invoked multiple times, and which can have multiple distinct callbacks attached to it.","msgtype":"m.text"},"ts":1365013085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's an event in everything but name.","msgtype":"m.text"},"ts":1365013089000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not really sure if the latter is established. But we have other systems such as MediaQueryList (or whatever it was) that reinvent parts of events","msgtype":"m.text"},"ts":1365013157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it makes sense to have something like events, but not quite, it doesn't immediately follow to copy all of the event infrastructure to it","msgtype":"m.text"},"ts":1365013194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In the current strawman, future.progress just returns the future again, so you can keep registering them.","msgtype":"m.text"},"ts":1365013331000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It doesn't make sense to limit it to only a single listener.","msgtype":"m.text"},"ts":1365013359000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So I take it you're looking at the font loading API and want to use this pattern?","msgtype":"m.text"},"ts":1365013434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup, writing up a post to www-style about it now.","msgtype":"m.text"},"ts":1365013446000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because we haven't really decided and I think the JS community hasn't either, how best to do progress notifications.","msgtype":"m.text"},"ts":1365013465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can you do without them for now?","msgtype":"m.text"},"ts":1365013473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Been talking with slightlylate about it, but he's got enough misconceptions about how css fonts work that it wasn't that useful.","msgtype":"m.text"},"ts":1365013483000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, I can do without them.  I'm only using them right now for the loading of individual fonts, where it's actually tri-state (unloaded, loading, loaded).","msgtype":"m.text"},"ts":1365013575000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it would be better to just propose the accept/reject pattern for now. We can always upgrade later.","msgtype":"m.text"},"ts":1365013583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you remember maybe cc me on that email","msgtype":"m.text"},"ts":1365013600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fine with me.","msgtype":"m.text"},"ts":1365013693000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So yeah, the other great thing about it not being events is that you can garbage collect the hell out of it.","msgtype":"m.text"},"ts":1365014898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You're not hostile to someone creating a synthetic event out of spite at some point and relying on that to work.","msgtype":"m.text"},"ts":1365014920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So you don't need removeListener and things like that. It simplifies so much.","msgtype":"m.text"},"ts":1365014945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, hm. That's interesting.","msgtype":"m.text"},"ts":1365016993000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Oh, though, wait.  I assume that ProgressFuture will be specced to kill all listeners when the future resolves.","msgtype":"m.text"},"ts":1365017019000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And not fire any more progress events.","msgtype":"m.text"},"ts":1365017025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's alien towards events.","msgtype":"m.text"},"ts":1365017066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Really?  Normal objects have a lifetime when they stop firing progress events.","msgtype":"m.text"},"ts":1365017099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You coudl technically fire synthethic events after that point, but I suspect that's mostly just because nobody bothered to stop it.","msgtype":"m.text"},"ts":1365017117000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Events listeners are never automatically cleared.","msgtype":"m.text"},"ts":1365017170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Typically also such objects can be reused for other loads, so it doesn't necessarily make sense to clear them.","msgtype":"m.text"},"ts":1365017203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"True, but that's not the case for a Future.","msgtype":"m.text"},"ts":1365017293000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Shrug.","msgtype":"m.text"},"ts":1365017295000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah. The other big question is here is what the use case would be. Why would you register for events?","msgtype":"m.text"},"ts":1365017343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because that's what you're doing when you call future.progress(cb)?","msgtype":"m.text"},"ts":1365017663000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The progress notifications are functionally events.","msgtype":"m.text"},"ts":1365017682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Anyway, sicking is saying the same thing as you, so I'm acquiescing on the thread.","msgtype":"m.text"},"ts":1365017946000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"embrace the future(s)","msgtype":"m.text"},"ts":1365018009000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"TabAtkins: Events aren't actully author friendly. That's not the reason we've been using them. The main reason we've been using them is inertia","msgtype":"m.text"},"ts":1365018138000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: Okay, so the idea is that Events should continue to be used for Node stuff, and the rare thing with similar constraints.  Otherwise, use Futures if they fit, or just use a callback registration mechanism if they don't.","msgtype":"m.text"},"ts":1365018205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just want a name for the \"lightweight events\" that ProgressFuture uses, so that when other things want the same kind of event-like behavior, there's an easy thing to copy from rather than them inventing something vaguely incompatible.","msgtype":"m.text"},"ts":1365018255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: approximately yes. IMO. There are no clear cut rules though","msgtype":"m.text"},"ts":1365018369000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":";_;","msgtype":"m.text"},"ts":1365018375000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wants clear-cut rules.","msgtype":"m.emote"},"ts":1365018379000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"When possible, at least.","msgtype":"m.text"},"ts":1365018385000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cuts off TabAtkins's nose","msgtype":"m.emote"},"ts":1365018388000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"lightweight events\" == callbacks","msgtype":"m.text"},"ts":1365018392000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: But that's not enough!  ProgressFuture has a *specific* API structure that mimics events in a lightweight way.  Other ways of doing callbacks have various other shapes, with upsides and downsides.","msgtype":"m.text"},"ts":1365018429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For example, just passing the callbacks into the future constructor is one way that's fairly common, but which prevents multiple callbacks from being registered.","msgtype":"m.text"},"ts":1365018464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: API design has changed a lot over time, we're not there yet and I somewhat doubt we'll get there soon","msgtype":"m.text"},"ts":1365021212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sure.","msgtype":"m.text"},"ts":1365021237000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i really want to go hate on your www-style thread names","msgtype":"m.text"},"ts":1365021741000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: ???","msgtype":"m.text"},"ts":1365021769000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I have to say the [subject] stuff makes things barely readable","msgtype":"m.text"},"ts":1365021894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Especially combined with Re: [subject] stuff","msgtype":"m.text"},"ts":1365021911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Re: [subject] Re: Blah blah blah","msgtype":"m.text"},"ts":1365022132000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"The [subject] stuff is necessary on a list with such a wide range of topics.","msgtype":"m.text"},"ts":1365022134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's used on webapps too, frex.","msgtype":"m.text"},"ts":1365022143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The Re: stuff is just people with busted clients.","msgtype":"m.text"},"ts":1365022150000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I stopped using it on webapps fwiw. I typically use DOM: x or File API: x","msgtype":"m.text"},"ts":1365022206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like [#tag] myself ;)","msgtype":"m.text"},"ts":1365022322000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I thought you didn't like support forums?","msgtype":"m.text"},"ts":1365022385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahahaa","msgtype":"m.text"},"ts":1365022408000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: That's functionally equivalent. ^_^","msgtype":"m.text"},"ts":1365022712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you may note I did not mention function, but readability","msgtype":"m.text"},"ts":1365022741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"[css-cascade] it a sucks\" vs \"Cascade: it a sucks\"","msgtype":"m.text"},"ts":1365022791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Must be personal choice - I find the former more readable.","msgtype":"m.text"},"ts":1365022901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it also functions as a good search term.","msgtype":"m.text"},"ts":1365022908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sounds like you're conditioned :)","msgtype":"m.text"},"ts":1365022974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah.","msgtype":"m.text"},"ts":1365023013000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Congrats Google guys with Blink","msgtype":"m.text"},"ts":1365023140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's awesome","msgtype":"m.text"},"ts":1365023143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1365023182000,"senderName":"fishd_","senderId":"fishd_@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1365023221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wonder how long this has been in the works, since you all kept perfectly quiet each time I brought it up :-)","msgtype":"m.text"},"ts":1365023234000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what’s Blink?","msgtype":"m.text"},"ts":1365023387000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"http://www.chromium.org/blink","msgtype":"m.text"},"ts":1365023405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You may be the one I was on about in the first paragraph https://plus.google.com/u/0/116237864387312784020/posts/d62jMDKXcLb","msgtype":"m.text"},"ts":1365023450000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"SimonSapin: it's WebKit forked with goals more in line with Gecko (e.g. removing legacy cruft and such)","msgtype":"m.text"},"ts":1365023467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, beverloo just reminded me :-)","msgtype":"m.text"},"ts":1365023510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow.","msgtype":"m.text"},"ts":1365023659000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"When Opera says they use Chromium, does that mean the chromium port of WebKit, or will they also follow Blink? Or is that not decided yet?","msgtype":"m.text"},"ts":1365023800000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin, Bruce commented on that here: http://www.brucelawson.co.uk/2013/hello-blink/","msgtype":"m.text"},"ts":1365023818000,"senderName":"beverloo`","senderId":"beverloo`@irc"},
{"content":{"body":"To the best of my knowledge, they'll be following Chromium, which contains Blink.","msgtype":"m.text"},"ts":1365023821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We will be encouraging people to fork Chromium at the content layer, not the Blink layer.","msgtype":"m.text"},"ts":1365023834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're already basically there, so it's not too bad for them.","msgtype":"m.text"},"ts":1365023851000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How did I miss that? Oh right, I haven’t looked at Twitter in 4 hours.","msgtype":"m.text"},"ts":1365023877000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"We only announced it ~20 minutes ago.","msgtype":"m.text"},"ts":1365023885000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"eh","msgtype":"m.text"},"ts":1365023896000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: content layer, what does that mean?","msgtype":"m.text"},"ts":1365023906000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I dunno, it's some term of art that people who actually care about things outside of WebKit say.","msgtype":"m.text"},"ts":1365023925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"delete more than 7,000 …\" that’s about the number of lines of code in WeasyPrint \"… files—comprising more than 4.5 million lines.\" Oh.","msgtype":"m.text"},"ts":1365023970000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"content layer\" -->  src/content/public/ from the chromium repository","msgtype":"m.text"},"ts":1365024037000,"senderName":"fishd_","senderId":"fishd_@irc"},
{"content":{"body":"TabAtkins: I suppose this was already going on when I visited in February?","msgtype":"m.text"},"ts":1365024050000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Removing prefixes after features land unprefixed: \\o/","msgtype":"m.text"},"ts":1365024128000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"So basically WebKit becomes (again?) basically an Apple project?","msgtype":"m.text"},"ts":1365024273000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'm sure Apple will be welcome to migrate :)","msgtype":"m.text"},"ts":1365024323000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"SimonSapin: no -blink- !","msgtype":"m.text"},"ts":1365024664000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"at least we can get pointer events to chrome !","msgtype":"m.text"},"ts":1365024672000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and apple can stay with touch events","msgtype":"m.text"},"ts":1365024685000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyways, interesting times","msgtype":"m.text"},"ts":1365025212000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"an operation that is ongoing, has yet to start, or has completed\"","msgtype":"m.text"},"ts":1365026535000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"because \"an operation\" would be too brief? :-P","msgtype":"m.text"},"ts":1365026550000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's calling out all the cases specifically because events only handle one of those (or two, if you count multiple events as handling an \"ongoing\" operation).","msgtype":"m.text"},"ts":1365026630000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"perhaps it omits operations that are taking a nap","msgtype":"m.text"},"ts":1365026634000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"TabAtkins: yeah, i would have written it the same way, i'm just teasing :-P","msgtype":"m.text"},"ts":1365026652000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"is there a tutorial for futures?","msgtype":"m.text"},"ts":1365026659000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's not entirely clear from the spec how it's envisaged to be used by APIs","msgtype":"m.text"},"ts":1365026673000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Closest is https://github.com/slightlyoff/DOMFuture","msgtype":"m.text"},"ts":1365026693000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I'm trying to write up some API-design guidance for futures vs events vs lightweight events vs whatever.","msgtype":"m.text"},"ts":1365026725000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I'll throw some pull requests at DOM to add fluff explanatory text.","msgtype":"m.text"},"ts":1365026748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks, the examples at the bottom of that page are helpful","msgtype":"m.text"},"ts":1365026974000,"senderName":"Hixie_","senderId":"Hixie_@irc"}
]