[
{"content":{"body":"nm, /me reads backlog","msgtype":"m.text"},"ts":1199059260000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"I have some Koss Spark Plugs lying around","msgtype":"m.text"},"ts":1199059261000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"they're pretty horrible, and I've just always ended up using my Grados instead","msgtype":"m.text"},"ts":1199059262000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"which are everything but in-ear","msgtype":"m.text"},"ts":1199059263000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"virtuelv: If you have any insight I'm still very much interested","msgtype":"m.text"},"ts":1199059264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: sound-quality-wise, they are supposed to be among the better in-ear solutions you can get","msgtype":"m.text"},"ts":1199059320000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"Which ones?","msgtype":"m.text"},"ts":1199059321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"problem is, they have an associated price tag","msgtype":"m.text"},"ts":1199059322000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"jgraham: shure in general","msgtype":"m.text"},"ts":1199059323000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"I only know shure from microphones","msgtype":"m.text"},"ts":1199059324000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"(the SM58 is a fantastic piece of kit, but that's beside the point)","msgtype":"m.text"},"ts":1199059380000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"My audiophile credentials are severely limited so I wonder how much sound quality issues will affect me","msgtype":"m.text"},"ts":1199059440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: while there is a lot of bollock science in audiophile circles, they at least have understood the quality of not getting tired listening to headphones","msgtype":"m.text"},"ts":1199059500000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"my golden rule is something like this: Don't buy audio equipment by mail order, unless you have pre-listened to them extensively","msgtype":"m.text"},"ts":1199059560000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"example: I recently (a week ago), got rid of my old DVD/CD player, and bought one with a darker sound","msgtype":"m.text"},"ts":1199059561000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"less impressive at first, but it allows me to listen for more extensive periods of time","msgtype":"m.text"},"ts":1199059620000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"(in this regard, ipods suck, they cause listening fatigue)","msgtype":"m.text"},"ts":1199059621000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"so it's not really about being \"audiophile\", it's about \"which pair of headphones would I want to use for eight hours on end\"","msgtype":"m.text"},"ts":1199059622000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"I don't think I would ever want to use headphones for 8 hours on end regardless of how comfortable they were :)","msgtype":"m.text"},"ts":1199059680000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"virtuelv: whilst that sounds eminently sensible, I have difficulty imaganing where I could go to try on in ear headphones","msgtype":"m.text"},"ts":1199059740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: your nearest hi-fi-pusher","msgtype":"m.text"},"ts":1199059741000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"and by that, I mean people who are serious about it","msgtype":"m.text"},"ts":1199059742000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"fwiw, http://www.stereophile.com/headphones/504shure/","msgtype":"m.text"},"ts":1199059743000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"you just have to get over the possible trauma of having someone else's earwax shared","msgtype":"m.text"},"ts":1199059860000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"I guess it's worth a try.","msgtype":"m.text"},"ts":1199059980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: is there any specific reason for going with in-ear?","msgtype":"m.text"},"ts":1199059981000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"virtuelv: They seem to be effective at cutting down background noise. At least that's the impression I get. ","msgtype":"m.text"},"ts":1199060100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yes, but so are active solutions, like Sennheiser PXC 450","msgtype":"m.text"},"ts":1199060160000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"looks ridiculous walking around town, but on flights and similar, they are guaranteed to be much more comfortable","msgtype":"m.text"},"ts":1199060161000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"http://www.sennheiser.com/nl/icm_nl.nsf/root/500643","msgtype":"m.text"},"ts":1199060162000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"350's are slightly cheaper, but I haven't read any reviews yet","msgtype":"m.text"},"ts":1199060280000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"virtuelv: There seem to be to problems with the active noise cancelling things - they are comparatively expensive for the same level of background reduction, and the active cancelling /seems/ to be more low-frequency-specific","msgtype":"m.text"},"ts":1199060281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I was originally looking at the active noise canceling ones)","msgtype":"m.text"},"ts":1199060282000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"-> bed","msgtype":"m.emote"},"ts":1199060460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as long as you are aware of the disadvantages, though","msgtype":"m.text"},"ts":1199060461000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"listening fatigue being one","msgtype":"m.text"},"ts":1199060462000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"it's about optimizing the solution for the use-case","msgtype":"m.text"},"ts":1199060520000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"<erg> git pull http://littledan.onigirihouse.com/factor.git","msgtype":"m.text"},"ts":1199075340000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"you can also: git pull git://onigirihouse.com/git/littledan.git","msgtype":"m.text"},"ts":1199075341000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"it's faster","msgtype":"m.text"},"ts":1199075342000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"oops, wrong channel","msgtype":"m.text"},"ts":1199075820000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"53 more tests to write","msgtype":"m.text"},"ts":1199076720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone got any tests they know that safari, mozilla, or opera fail?","msgtype":"m.text"},"ts":1199076780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.css3.info/selectors-test/test.html fails some in safari","msgtype":"m.text"},"ts":1199077020000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"wow, sweet test suite","msgtype":"m.text"},"ts":1199077021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and firefox","msgtype":"m.text"},"ts":1199077022000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"i really want primarily dom and js tests, but these will definitely be useful","msgtype":"m.text"},"ts":1199077080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by js testing, do you mean like testing compliance with the ECMAScript spec?","msgtype":"m.text"},"ts":1199077260000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"oh and of course http://bugs.webkit.org/attachment.cgi?id=9554","msgtype":"m.text"},"ts":1199077440000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"which i think only opera handles nicely right now","msgtype":"m.text"},"ts":1199077441000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1199077442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JS spec and DOM specs","msgtype":"m.text"},"ts":1199077500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i actually had a question for you about the same-origin policy","msgtype":"m.text"},"ts":1199077620000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"should you be able enumerate variables across domains?","msgtype":"m.text"},"ts":1199077621000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"webkit gets http://bugs.webkit.org/attachment.cgi?id=9554 correct","msgtype":"m.text"},"ts":1199077622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(though i initially was confused sicne red and yellow are typically fail colours :-) )","msgtype":"m.text"},"ts":1199077680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1199077681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or wait","msgtype":"m.text"},"ts":1199077682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what do you mean?","msgtype":"m.text"},"ts":1199077683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: they re-broke it in the latest nightly","msgtype":"m.text"},"ts":1199077684000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"ok, so","msgtype":"m.text"},"ts":1199077685000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"well actually, test case: http://bugs.webkit.org/attachment.cgi?id=9554","msgtype":"m.text"},"ts":1199077686000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"erps","msgtype":"m.text"},"ts":1199077687000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"http://mapseekret.com/staticmedia/document_a.html","msgtype":"m.text"},"ts":1199077688000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"that","msgtype":"m.text"},"ts":1199077689000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"basically, should a document from one domain be able to use a for..in loop to find the names of the variables in the window from another domain?","msgtype":"m.text"},"ts":1199077740000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"opera and firefox don't let you","msgtype":"m.text"},"ts":1199077741000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"safari currently does","msgtype":"m.text"},"ts":1199077742000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"safari does stop you from getting the actually values, but not the variable names","msgtype":"m.text"},"ts":1199077743000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"well actually, i put it better in this bug: http://bugs.webkit.org/show_bug.cgi?id=16387","msgtype":"m.text"},"ts":1199077744000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"but is that actually a same-origin violation?","msgtype":"m.text"},"ts":1199077800000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"i thought i was using the latest nightly","msgtype":"m.text"},"ts":1199077801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the second test case does indeed fail","msgtype":"m.text"},"ts":1199077802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"takes note of it","msgtype":"m.emote"},"ts":1199077803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well alright the latest one i just compiled is a little wonkey in general","msgtype":"m.text"},"ts":1199077860000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"waiiit","msgtype":"m.text"},"ts":1199077861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought 9554 was a different attachment","msgtype":"m.text"},"ts":1199077862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's the same one","msgtype":"m.text"},"ts":1199077863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it failed once and succeeded the other time","msgtype":"m.text"},"ts":1199077864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1199077865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are you sure you're not mixing up builds?","msgtype":"m.text"},"ts":1199077866000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"re the same-origin thing, yes that's a security bug","msgtype":"m.text"},"ts":1199077867000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, only one build","msgtype":"m.text"},"ts":1199077868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kdoke","msgtype":"m.text"},"ts":1199077920000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"is surprsied we'd break an existing test","msgtype":"m.emote"},"ts":1199078280000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"would suggest that the test never got landed","msgtype":"m.text"},"ts":1199078281000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"it seems intermittent","msgtype":"m.text"},"ts":1199078460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://build.webkit.org/waterfall is generally quite good about catching regressions","msgtype":"m.text"},"ts":1199078461000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: http://bugs.webkit.org/show_bug.cgi?id=16387 :)","msgtype":"m.text"},"ts":1199084220000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Hixie: that's what you get for commenting in a bug that I should have fixed already","msgtype":"m.text"},"ts":1199084221000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"damnit, my test suggestion is foiled","msgtype":"m.text"},"ts":1199084222000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"i should get hixie to CC all my bugs. :)","msgtype":"m.text"},"ts":1199084280000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"can anyone think of a way of detecting if an element is matching a selector without using some 2004-or-earlier standards-based mechanism other than getComputedStyle()?","msgtype":"m.text"},"ts":1199088660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, in IE there is _hasLayout :)","msgtype":"m.text"},"ts":1199088840000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"certain styles would certainly change the DOM behavior","msgtype":"m.text"},"ts":1199088841000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"maybe you don't fully understand \"2004-or-earlier standards-based mechanism\" :-P","msgtype":"m.text"},"ts":1199088842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er wait","msgtype":"m.text"},"ts":1199088843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i misspoke","msgtype":"m.text"},"ts":1199088844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i meant to ask \"can anyone think of a way of detecting if an element is matching a selector using some 2004-or-earlier standards-based mechanism other than getComputedStyle()?\"","msgtype":"m.text"},"ts":1199088845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the without was a misedit","msgtype":"m.text"},"ts":1199088900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"appologies","msgtype":"m.text"},"ts":1199088901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah,I understood the firstime","msgtype":"m.text"},"ts":1199088902000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"Imust have read betweent he lines","msgtype":"m.text"},"ts":1199088903000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"Hixie: I would use a style which I knew changed dom behavior","msgtype":"m.text"},"ts":1199088960000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"things like height","msgtype":"m.text"},"ts":1199088961000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"display","msgtype":"m.text"},"ts":1199088962000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"etc.","msgtype":"m.text"},"ts":1199088963000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"right but how can i tell the style has changed, without using getComputedStyle?","msgtype":"m.text"},"ts":1199089020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and still following the specs?","msgtype":"m.text"},"ts":1199089021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(from script)","msgtype":"m.text"},"ts":1199089022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you set a height with the selector, wouldn't element.height change?","msgtype":"m.text"},"ts":1199089080000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"element.innerHeight isn't standards-based","msgtype":"m.text"},"ts":1199089081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://trac.webkit.org/projects/webkit/browser/trunk/WebCore/dom/Element.idl","msgtype":"m.text"},"ts":1199089140000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"I can't think of a standards based method","msgtype":"m.text"},"ts":1199089200000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"Hixie: since all the useful properties on element in that file, are non-standards based","msgtype":"m.text"},"ts":1199089260000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"bummer","msgtype":"m.text"},"ts":1199089261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't like breaking IE on a whole series of tests just for not having getComputedStyle","msgtype":"m.text"},"ts":1199089262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wasn't getComputedStyle back in like 2000?","msgtype":"m.text"},"ts":1199089380000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1199089381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm totally using it at least once","msgtype":"m.text"},"ts":1199089382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ViewCSS","msgtype":"m.text"},"ts":1199089383000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"just feels a bit over the top to totally screw IE on 16 tests in a row just for one bug","msgtype":"m.text"},"ts":1199089384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1199089440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not really targetting IE anyway","msgtype":"m.text"},"ts":1199089441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sorta sucks that IE screws developers over based on one bug :)","msgtype":"m.text"},"ts":1199089442000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"or rather... one thousand bugs","msgtype":"m.text"},"ts":1199089443000,"senderName":"MacDomeSleep","senderId":"MacDomeSleep@irc"},
{"content":{"body":"me giggles as he discovers his selectorTest() function works","msgtype":"m.text"},"ts":1199089444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"^/","msgtype":"m.text"},"ts":1199089445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok this is awesome","msgtype":"m.text"},"ts":1199089620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have a little framework for selectors tests","msgtype":"m.text"},"ts":1199089621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now i can go crazy!","msgtype":"m.text"},"ts":1199089622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mwuhahahaha","msgtype":"m.text"},"ts":1199089623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"he's a mad man","msgtype":"m.text"},"ts":1199089624000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"someone sedate him","msgtype":"m.text"},"ts":1199089625000,"senderName":"G0k","senderId":"G0k@irc"},
{"content":{"body":"flails wildly in Hixie's direction, utterly failing.","msgtype":"m.emote"},"ts":1199089680000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ends up sedating himself","msgtype":"m.emote"},"ts":1199089681000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1199089682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: If you set an img width with CSS, then get the width DOM attribute and test if it equals the width set with CSS (to see if the selector matched), is that standards-based or is it just an undocumented feature?","msgtype":"m.text"},"ts":1199100480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"standards-based per HTML5","msgtype":"m.text"},"ts":1199100540000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"IIRC, what the getComputedStyle spec says about returned units is utterly bogus","msgtype":"m.text"},"ts":1199101140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that's different from the width DOM attribute of <img> though","msgtype":"m.text"},"ts":1199101141000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"so if you want to build a test that is both Good for the Web and adheres to specs as of 2004, it might be hard","msgtype":"m.text"},"ts":1199101142000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, like that","msgtype":"m.text"},"ts":1199101200000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"it's also pretty vague, so...","msgtype":"m.text"},"ts":1199101201000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"hopes to fix getComputedStyle in due course","msgtype":"m.emote"},"ts":1199101202000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"\"The CSSStyleDeclaration is read-only and contains only absolute values.\"","msgtype":"m.text"},"ts":1199101260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"my recollection was that it said absolute lengths","msgtype":"m.text"},"ts":1199101261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if absolute values means something else, please disregard my comment above","msgtype":"m.text"},"ts":1199101262000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"IIRC, the sensible approach is to normalize lengths to px which CSS calls \"relative\" not \"absolute\"","msgtype":"m.text"},"ts":1199101320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"per CSS the computed value for border-top-width is the absolute length...","msgtype":"m.text"},"ts":1199101440000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"so I guess that's what getComputedStyle means too","msgtype":"m.text"},"ts":1199101441000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"it's not what getComputedStyle does though","msgtype":"m.text"},"ts":1199101442000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"hsivonen: btw validator (local build) is giving me a \"Caused by: org.xml.sax.SAXException: Malformed spec: Expected dt to be context dt but it was not.\" error whenever I run it, in case you know what that's about","msgtype":"m.text"},"ts":1199109240000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: try starting with --html5load=http://about.validator.nu/spec.html","msgtype":"m.text"},"ts":1199111460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"webben: evidently, I need to bundle a known-good copy of the spec with the software","msgtype":"m.text"},"ts":1199111461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"webben: sorry about the inconvenience","msgtype":"m.text"},"ts":1199111520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"python build/build.py run --html5load=http://about.validator.nu/spec.html gives me the same error.","msgtype":"m.text"},"ts":1199111521000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"Philip`: I pushed out a vastly updated http://about.validator.nu/","msgtype":"m.text"},"ts":1199111580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"webben: you need python build/build.py --html5load=http://about.validator.nu/spec.html run","msgtype":"m.text"},"ts":1199111581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, you missed the other error Philip` pointed out","msgtype":"m.text"},"ts":1199111582000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"\"but only it if the DTD\"","msgtype":"m.text"},"ts":1199111583000,"senderName":"anne-mac","senderId":"anne-mac@irc"},
{"content":{"body":"anne-mac: thanks","msgtype":"m.text"},"ts":1199111640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Ah great, that works. Thank you. :)","msgtype":"m.text"},"ts":1199111641000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"anne-mac: fixed","msgtype":"m.text"},"ts":1199111642000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"div[align=left] {","msgtype":"m.text"},"ts":1199115300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1199115301000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<div align='LEFT'></div>","msgtype":"m.text"},"ts":1199115302000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The CSS selector should match the HTML fragment because the value of the align attribute should be case insensitive in a HTML document","msgtype":"m.text"},"ts":1199115303000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"-- http://www.css3.info/selectors-test/test-attribute-equal.html#attribute-equal","msgtype":"m.text"},"ts":1199115304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1199115305000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"html5 needs to define this","msgtype":"m.text"},"ts":1199115360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: ^","msgtype":"m.text"},"ts":1199115361000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"would like to run the selectors tests in quirks mode","msgtype":"m.emote"},"ts":1199115480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"bah, it doesn't test case sensitivity of .class","msgtype":"m.text"},"ts":1199115660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, There's a list of which attributes count for that in CSS2.1, I think.","msgtype":"m.text"},"ts":1199116080000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"zcorpan, although actually it's defined in HTML4 as well...","msgtype":"m.text"},"ts":1199116081000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"i think html5 needs to define it","msgtype":"m.text"},"ts":1199116140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also for xhtml5","msgtype":"m.text"},"ts":1199116141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hrm, actually not -- we just implement using the [CI] / [CS] in HTML4","msgtype":"m.text"},"ts":1199116200000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"does that mean ascii case insensitive or unicode case insensitive?","msgtype":"m.text"},"ts":1199116260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"usemap=\"\" is unicode case insensitive, iirc. some others are ascii case insensitive. although i haven't tested their case sensitivity wrt selectors","msgtype":"m.text"},"ts":1199116320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: why is usemap case-insensitive in any way?","msgtype":"m.text"},"ts":1199116380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: dunno","msgtype":"m.text"},"ts":1199116440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: aren't @id normally case-insensitive?","msgtype":"m.text"},"ts":1199116441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"usemap points to name=\"\"","msgtype":"m.text"},"ts":1199116442000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: have you tested selector case-insensitivity of with enumerated-value attributes in XHTML?","msgtype":"m.text"},"ts":1199116443000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(per html4 anyway)","msgtype":"m.text"},"ts":1199116444000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: no","msgtype":"m.text"},"ts":1199116445000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: id is supposed to be case-sensitive","msgtype":"m.text"},"ts":1199116500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: and HTML is supposed to be SGML. What things are supposed to mean is irrelevant :)","msgtype":"m.text"},"ts":1199116501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: is usemap case-insensitive only when comparing againts name or also with id?","msgtype":"m.text"},"ts":1199116502000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i guess i'll make a thorough test suite for this in due course","msgtype":"m.text"},"ts":1199116560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: in ie and opera it's insensitive for both","msgtype":"m.text"},"ts":1199116561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: in saf and moz it's insensitive for name (html only) and sensitive for id (xhtml only)","msgtype":"m.text"},"ts":1199116562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I currently implement usemap checking using code-point-for-code-point equality ","msgtype":"m.text"},"ts":1199116620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: fun","msgtype":"m.text"},"ts":1199116680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: but WebKit supports name in XHTML, too, doesn't it?","msgtype":"m.text"},"ts":1199116681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah","msgtype":"m.text"},"ts":1199116740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: not last time i tested, iirc","msgtype":"m.text"},"ts":1199121900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: \"If you the automatic choice of parser ...\" s/you // in http://about.validator.nu/","msgtype":"m.text"},"ts":1199122200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: btw, i'm not sure about the utility of allowing text/xsl as a lax content type, considering that iirc moz and ie don't actually accept it as a content type","msgtype":"m.text"},"ts":1199122320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(but ie requires \"text/xsl\" in the type pseudo-attribute)","msgtype":"m.text"},"ts":1199122321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can understand why one might want to treat name as ID in HTML for IE compat, but can't see the point in corrupting NAME in XHTML in the same way.","msgtype":"m.emote"},"ts":1199122380000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"webben_: for HTML compat :)","msgtype":"m.text"},"ts":1199122440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It's a silly habit in HTML to begin with, given that NAME is not unique.","msgtype":"m.text"},"ts":1199122441000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"<a name> or <map name> must be unique per html4","msgtype":"m.text"},"ts":1199122500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<div id=\"foo\"><map name=\"foo\"> is not conforming html4","msgtype":"m.text"},"ts":1199122501000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Do you mean getElementById never returns <input type=\"radio\" name=\"foo\"> ?","msgtype":"m.text"},"ts":1199122502000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"that's not what i meant, and i don't see how you make that connection, but it might well do in ie","msgtype":"m.text"},"ts":1199122560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(it shouldn't, though)","msgtype":"m.text"},"ts":1199122620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: If it's not the case that getElementById is special-cased for A and MAP, then I'm not sure how that uniqueness restriction helps.","msgtype":"m.text"},"ts":1199122621000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"webben_: How is getElementById on a duplicate id any different from on a duplicate name?","msgtype":"m.text"},"ts":1199122680000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: You're not supposed to have duplicate IDs.","msgtype":"m.text"},"ts":1199122681000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"That's not enforced, though","msgtype":"m.text"},"ts":1199122682000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"webben_: there are other interfaces than gEBI","msgtype":"m.text"},"ts":1199122683000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Not much is enforced.","msgtype":"m.text"},"ts":1199122684000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"You are supposed to have duplicate NAMEs for radio buttons however.","msgtype":"m.text"},"ts":1199122685000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"Besides, many uses of name are also supposed to be unique","msgtype":"m.text"},"ts":1199122686000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"webben_: such as <img usemap>","msgtype":"m.text"},"ts":1199122687000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"webben_: There's not much of a use case for using gEBI on a radio button name, though","msgtype":"m.text"},"ts":1199122800000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I don't see any usecase for using gEBI on NAMEs full-stop, especially in XML.","msgtype":"m.text"},"ts":1199122860000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"Easy access to form elements is one","msgtype":"m.text"},"ts":1199122861000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I can see the backwards compat argument in HTML, although it's not massively strong given that relying on such behavior would break webapps in a lot of browsers.","msgtype":"m.text"},"ts":1199122862000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"Dashiva: dom0 has simpler access to form elements","msgtype":"m.text"},"ts":1199122863000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think ID makes form access pretty easy actually.","msgtype":"m.text"},"ts":1199122920000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"Sure, if you have a reference to the form","msgtype":"m.text"},"ts":1199122921000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"you need ID for form labels anyhow","msgtype":"m.text"},"ts":1199122922000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"(well, if you want them to actually work)","msgtype":"m.text"},"ts":1199122923000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"*field labels","msgtype":"m.text"},"ts":1199122924000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"If you use labels, and don't use containing labels, yes","msgtype":"m.text"},"ts":1199122980000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Either way, I think that's a stronger argument for a getElementByAttributeValue('name','foo') or something","msgtype":"m.text"},"ts":1199122981000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"getElementsByName exists, yes","msgtype":"m.text"},"ts":1199122982000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"at least that would do what it says on the tin, and be usable for many more situations","msgtype":"m.text"},"ts":1199122983000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"e.g. getting all password inputs in a form.","msgtype":"m.text"},"ts":1199123040000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"s/password/text (probably a better example)","msgtype":"m.text"},"ts":1199123041000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"text inputs might not have a type attribute :)","msgtype":"m.text"},"ts":1199123100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"They might not. That's an argument for something like getElementsBy (http://developer.yahoo.com/yui/docs/YAHOO.util.Dom.html)","msgtype":"m.text"},"ts":1199123160000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"http://geekninja.blogspot.com/2007/12/html5s-canvas-tag-are-we-using-it.html","msgtype":"m.text"},"ts":1199143860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"as webcore is lgpl and canvas is a part of webcore and lgpl has a patent release clause...","msgtype":"m.text"},"ts":1199144520000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Philip`: .width doesn't just reflect the content attribute?","msgtype":"m.text"},"ts":1199144940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cimg%20src%3Dimage%20style%3Dwidth%3A100%25%20onload%3Dw(this.width)%3E","msgtype":"m.text"},"ts":1199145060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"At least Opera and Firefox return the rendered width, and I think I remember IE doing that too","msgtype":"m.text"},"ts":1199145061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well crap","msgtype":"m.text"},"ts":1199145062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does html5 require that?","msgtype":"m.text"},"ts":1199145063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it does","msgtype":"m.text"},"ts":1199145064000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"HTML5 says \"The DOM attributes height and width must return the rendered height and width of the image, in CSS pixels, if the image is being rendered, and is being rendered to a visual medium, or 0 otherwise. [CSS21]\"","msgtype":"m.text"},"ts":1199145120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(As far as I could see when I last wanted to do this, it's impossible to find the actual bitmap size of the image, which is a bit irritating)","msgtype":"m.text"},"ts":1199145180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"((except for maybe adding it to the document and having it rendered and then seeing how big it is, but that's nasty))","msgtype":"m.text"},"ts":1199145240000,"senderName":"Philip`","senderId":"Philip`@irc"}
]