[
{"content":{"body":"there's various drafts for various proposals, afaik","msgtype":"m.text"},"ts":1406592010000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah that all fragmented. There's a pointer-events wg although I don't know if they still do stuff","msgtype":"m.text"},"ts":1406592035000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-pointer-events/","msgtype":"m.text"},"ts":1406592063000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i've been mostly ignoring new proposals on the basis that without a spec for 'keydown' and 'mouseup' and so on, there's not much point looking at making new events","msgtype":"m.text"},"ts":1406592070000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, I don't think that's true. There is still value in speccing new events rather than having people go off and do their own things.","msgtype":"m.text"},"ts":1406592163000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i mean \"making new events\" in the sense of implementing new ones, let alone speccing them","msgtype":"m.text"},"ts":1406592216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: [Un]fortunately people violently disagree with you on that","msgtype":"m.text"},"ts":1406592313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, clearly :-)","msgtype":"m.text"},"ts":1406592344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hence the 17 different efforts to specify touch events","msgtype":"m.text"},"ts":1406592349000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OTOH if we want the web to do well on touch-based devices, saying \"oh we can't figure out touch because we haven't managed to figure out keyboards in the last 20 years\" isn't going to cut it","msgtype":"m.text"},"ts":1406592405000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'm saying \"let's describe what browsers have to implement for keyboard, mouse, and touch events, since those have already shipped, then let's design an input event system that is media-independent so we don't have to do this again in two years\"","msgtype":"m.text"},"ts":1406592581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"keyboard events is a great way to get embroiled in accessibility and internationalization issue processing. at least that was my experience with the CSS \"key-equivalent\" property","msgtype":"m.text"},"ts":1406592915000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the key (oops) is to scope your work to exclusively be \"specify what needs to be implemented to be interoperable\"","msgtype":"m.text"},"ts":1406592952000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then there's no bikeshedding possible","msgtype":"m.text"},"ts":1406592968000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interoperable across which devices with which set of keys or buttons? which year of mobile devices with which buttons do you wish to spec?","msgtype":"m.text"},"ts":1406593037000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"or which year of which laptop(s) or qwertyish handhelds?","msgtype":"m.text"},"ts":1406593058000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"good times.","msgtype":"m.text"},"ts":1406593062000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"in which countries?","msgtype":"m.text"},"ts":1406593073000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Since we can't get specific input systems right, the chance of abstracting over all existing and  possible future input systems and producing something useful seems remote","msgtype":"m.text"},"ts":1406593194000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"enjoy: http://www.bing.com/images/search?q=japanese+handheld+keyboards","msgtype":"m.text"},"ts":1406593254000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"It's unfortunate that we have always had to be reactive, but not that surprising","msgtype":"m.text"},"ts":1406593315000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: I don't see how not having the old events specced makes having what new events may come into use specced any less useful?","msgtype":"m.text"},"ts":1406600728000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: not much progress on mutation events so far","msgtype":"m.text"},"ts":1406615851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: sad that your query got no replies, but we do need to address that question somehow","msgtype":"m.text"},"ts":1406619580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: did you get the answers you needed in the \"Fullscreen API and out-of-process <iframe>\" thread?","msgtype":"m.text"},"ts":1406621151000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah I guess, still a bit unsure how to spec it","msgtype":"m.text"},"ts":1406621175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it specifically the racy requestFullscreen problem, or something more general I'm not seeing?","msgtype":"m.text"},"ts":1406621237000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: something like requestFullscreen() does a request to resize the browser window; that request either returns it failed, returns it's already done, or returns it succeeds (maybe returns it's in progress for someone else?)","msgtype":"m.text"},"ts":1406621253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was mostly just wondering what the best way was to update state and such","msgtype":"m.text"},"ts":1406621291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you mean structure it so that the internal resize request can fail, and deal with that by firing fullscreenerror?","msgtype":"m.text"},"ts":1406621310000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yeah, that'd be an error I guess","msgtype":"m.text"},"ts":1406621346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure about the other conditions","msgtype":"m.text"},"ts":1406621351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well it's actually not the resize that would fail, but another element would already be in fullscreen when we're notified of success","msgtype":"m.text"},"ts":1406621375000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"what I was also worried is about resizing has completed, but state has not changed and then something happens","msgtype":"m.text"},"ts":1406621383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"am*","msgtype":"m.text"},"ts":1406621397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1406621441000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"it would be nice to treat two racy requests by imposing an arbitrary order on them, determined by IPC or whatever","msgtype":"m.text"},"ts":1406621470000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the \"pending element\" thing is sorta global in a way too","msgtype":"m.text"},"ts":1406621483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then make them do the same thing that this order of requests would do with plenty of time in between them","msgtype":"m.text"},"ts":1406621497000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"well the request to resize would be that I guess","msgtype":"m.text"},"ts":1406621499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the pending element is per-document, no more global than that, surely?","msgtype":"m.text"},"ts":1406621518000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if A and B are same-origin and invoke requestFullscreen right after each other, what happens?","msgtype":"m.text"},"ts":1406621567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are they sibling or parent-child?","msgtype":"m.text"},"ts":1406621587000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess the first resizes the window, the second is notified the window is already changed, then the first notifies state change, then the second","msgtype":"m.text"},"ts":1406621615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"parent-child","msgtype":"m.text"},"ts":1406621621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I also realized we cannot really make the checks asynchronous, that'd be racy","msgtype":"m.text"},"ts":1406621661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think the answer ought to be different than for cross-origin A and B, even if it's possible to implement differently","msgtype":"m.text"},"ts":1406621662000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"you mean the fail-checks that will fire fullscreenerror?","msgtype":"m.text"},"ts":1406621822000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: about IPv4 address syntax? Iâ€™ll try to find Mozilla people who work on related stuff and ask them","msgtype":"m.text"},"ts":1406622580000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"foolip: yeah","msgtype":"m.text"},"ts":1406625165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: say B invokes requestFullscreen and A removes B's container","msgtype":"m.text"},"ts":1406625250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not knowing how to spec it, I'd say it should either enter fullscreen sucessfully and then exit again, or fail to enter fullscreen, depending on which event is considered first","msgtype":"m.text"},"ts":1406627494000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but... sigh","msgtype":"m.text"},"ts":1406627498000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"-> lunch","msgtype":"m.emote"},"ts":1406627550000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yes, sigh :-)","msgtype":"m.text"},"ts":1406627661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The servo people are looking at HTTP at the moment because the Rust HTTP ecosystem is very immature and they have been using a library that doesn't really work","msgtype":"m.text"},"ts":1406631125000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So they are likely very interested in a HTTP spec that you could write an implementation from and actually have it work with real websites","msgtype":"m.text"},"ts":1406631155000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, no doubt. I don't have the bandwidth","msgtype":"m.text"},"ts":1406631187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The other options is to make Manishearth write the spec","msgtype":"m.text"},"ts":1406631219000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"option*","msgtype":"m.text"},"ts":1406631222000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm keeping notes on the WHATWG Wiki","msgtype":"m.text"},"ts":1406631226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/HTTP Not very elaborate so far though","msgtype":"m.text"},"ts":1406631246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not saying \"you have to write the spec\"","msgtype":"m.text"},"ts":1406631261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm saying \"they have an interest in this work\"","msgtype":"m.text"},"ts":1406631274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: If WorkerGlobalScope is [Exposed=Worker] and `interface ServiceWorkerGlobalScope : WorkerGlobalScope {` and FormData `Exposed=(Window,Worker)`, doesn't that mean FormData is exposed in ServiceWorkerGlobalScope?","msgtype":"m.text"},"ts":1406631281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Which might indeed by a way of finding someone else who can justify writing the spec","msgtype":"m.text"},"ts":1406631291000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: you would need [Global=Worker] but that also makes XMLHttpRequest exposed","msgtype":"m.text"},"ts":1406631327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which I thought was one of the things we didn't want? And we did not want FileReaderSync which would also have Exposed=Worker","msgtype":"m.text"},"ts":1406631351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if you know the relevant people you could point them to http://lists.w3.org/Archives/Public/ietf-http-wg/2014JulSep/1542.html","msgtype":"m.text"},"ts":1406631389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't have a problem with XMLHttpRequest, but yeah, FileReaderSync isn't great","msgtype":"m.text"},"ts":1406631410000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you have Global=Worker all those *Sync APIs would be available in service workers too","msgtype":"m.text"},"ts":1406631444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if you don't, we'll need to add Exposed=ServiceWorker to some APIs","msgtype":"m.text"},"ts":1406631467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I'm not drowning him in IETF :)","msgtype":"m.text"},"ts":1406631510000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: we could potentially only use Worker for sane interfaces, and introduce SyncWorker or some such as alias for dedicated worker / shared worker that APIs such as FileReaderSync can use","msgtype":"m.text"},"ts":1406631546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm or move the sync APIsâ€¦ yeah, what you said","msgtype":"m.text"},"ts":1406631556000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Why don't you want those *Sync interfaces?","msgtype":"m.text"},"ts":1406631583000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: if you have a plan email public-script-coordâŠ™wo","msgtype":"m.text"},"ts":1406631592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: service workers can't be blocking","msgtype":"m.text"},"ts":1406631602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: Pretty much the same reason they're not great in a sharedworker. You're blocking","msgtype":"m.text"},"ts":1406631611000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1406631622000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"actually, they're not great in any worker","msgtype":"m.text"},"ts":1406631623000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: now would be the time to propose such a change, need to get Hixie on board; everyone needs to update syntax usage of [Exposed] a bit anyway","msgtype":"m.text"},"ts":1406631952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: however, we'll still need to decide what gets to use Worker and what gets to use SyncWorker or some such","msgtype":"m.text"},"ts":1406631969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm struggling to find the docs on [Exposed]","msgtype":"m.text"},"ts":1406631976000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"SyncWorker should be considered lagacy really","msgtype":"m.text"},"ts":1406631998000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: http://heycam.github.io/webidl/ defines it","msgtype":"m.text"},"ts":1406632003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh, or even legacy","msgtype":"m.text"},"ts":1406632006000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1406632020000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: HTML defines Global=Window, Global=Worker, Global=DedicatedWorker, Global=SharedWorker","msgtype":"m.text"},"ts":1406632030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: basically we should ask Hixie to also define Sync/LegacyWorker as synonym for DedicatedWorker/SharedWorker","msgtype":"m.text"},"ts":1406632074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and then go through all APIs and ensure they are annotated in the correct way","msgtype":"m.text"},"ts":1406632094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and SW would define [Global=(Worker,ServiceWorker)] on its global","msgtype":"m.text"},"ts":1406632122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why [Global=(Worker,ServiceWorker)] rather than [Global=(ServiceWorker)]?","msgtype":"m.text"},"ts":1406632314000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I thought you wanted FormData to be exposed as is, and not require updating it to say Exposed=(Window,Worker,ServiceWorker)","msgtype":"m.text"},"ts":1406632347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, starting to get my head around how [Global]","msgtype":"m.text"},"ts":1406632720000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"â€¦works","msgtype":"m.text"},"ts":1406632799000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"[Global] indicates the name of the global, [Exposed] indicates what is exposed on it","msgtype":"m.text"},"ts":1406633904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"[Global] also indicates the class is a global","msgtype":"m.text"},"ts":1406633928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: so I tried to figure out how this would work in JS. In JS, you'd request the resize. Get an event when that's done (stable state) and from there you'd change state and potentially dispatch another event to tell other observers.","msgtype":"m.text"},"ts":1406634584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: the only problem is communicating with the cross-origin bits.","msgtype":"m.text"},"ts":1406634605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I read your email as well","msgtype":"m.text"},"ts":1406638527000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"is there anything I can do to help figure this out? I'm not coming up with any brilliant solutions TBH","msgtype":"m.text"},"ts":1406638563000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess I need to find out what invariants we are trying to preserve","msgtype":"m.text"},"ts":1406638798000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. if you have A -> B -> A'. Are A and A' synchronous?","msgtype":"m.text"},"ts":1406638839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you mean if it's possible to do the checks synchronously, or if events should fire in the same task, or something else?","msgtype":"m.text"},"ts":1406638874000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"If A and A' were same-origin, should they be updated in the same animation frame, yes","msgtype":"m.text"},"ts":1406638898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"didn't someone comment that animation frames were synchronized across frames already?","msgtype":"m.text"},"ts":1406638929000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"They are, but not across origins...","msgtype":"m.text"},"ts":1406638968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And A' cannot reach A I think due to B, though I'm not a 100% sure","msgtype":"m.text"},"ts":1406638983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure about that either","msgtype":"m.text"},"ts":1406639042000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"can A and A' get each others windows or documents in some way? if not, then it doesn't matter","msgtype":"m.text"},"ts":1406639081000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"It matters a bit for how we phrase things in the specification I guess","msgtype":"m.text"},"ts":1406639105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for the sake of sanity, it's probably best to assume that no two iframes are in the same process, even if they're same-origin","msgtype":"m.text"},"ts":1406639182000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"So the case I'm concerned with is that a descendant puts something in the animation frame queue of its parent, but then the parent navigates or removes the <iframe> of the descendant","msgtype":"m.text"},"ts":1406639196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose the question is if an API designed around that will have observable racy behavior for same-origin iframes","msgtype":"m.text"},"ts":1406639211000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess before you update state in an animation frame, you need to make sure your document is still \"sane\"","msgtype":"m.text"},"ts":1406639228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right...","msgtype":"m.text"},"ts":1406639261000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"when one believes that a document is in fullscreen, queue the task that is synchronized with animation frames","msgtype":"m.text"},"ts":1406639286000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"when we get to that task, we will know if the frame we're about to paint is actually a fullscreen frame or not","msgtype":"m.text"},"ts":1406639313000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I suppose one could base some decisions on that, and at least let each individual frame have a consistent view of things","msgtype":"m.text"},"ts":1406639337000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"If you have A -> B -> C","msgtype":"m.text"},"ts":1406639397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"B invokes requestFullscreen(), C invokes exitFullscreen()","msgtype":"m.text"},"ts":1406639417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it possible that A gets messages about updating its state to exit fullscreen before it updates to fullscreen, whereas the others get it in a different order?","msgtype":"m.text"},"ts":1406639479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if C invokes exitFullscreen() before B has successfully entered fullscreen, it won't do anything, right?","msgtype":"m.text"},"ts":1406639536000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Well B could have entered fullscreen, but that does not say anything about A per se","msgtype":"m.text"},"ts":1406639567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, unless the IPC queue is global","msgtype":"m.text"},"ts":1406639587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if B has successfully entered fullscreen, then A will have an iframe on the fullscreen element stack and can't enter fullscreen","msgtype":"m.text"},"ts":1406639603000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"And the IPC queue is ordered","msgtype":"m.text"},"ts":1406639609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the races will be between requests to enter I think, not between enter and exit","msgtype":"m.text"},"ts":1406639621000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"JakeA, ping","msgtype":"m.text"},"ts":1406639624000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"foolip: B can have entered fullscreen, but A does not need to have the message processed that updates its fullscreen element stack","msgtype":"m.text"},"ts":1406639654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: pong!","msgtype":"m.text"},"ts":1406639671000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"foolip: the \"worry\" was that the message from C could arrive in A before B's message arrives","msgtype":"m.text"},"ts":1406639680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yes","msgtype":"m.text"},"ts":1406639681000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"But assuming a global ordered non-racy IPC queue...","msgtype":"m.text"},"ts":1406639703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well it's ordered for sure, but non-racy in what sense?","msgtype":"m.text"},"ts":1406639730000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if two frames wait for Date.now() to be a whole minute or something and then post events, then those two events aren't in a predictable order","msgtype":"m.text"},"ts":1406639789000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess that's not what you mean thouhg","msgtype":"m.text"},"ts":1406639798000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"maybe something can be gained from the fact that a request must come from a trusted input event","msgtype":"m.text"},"ts":1406639898000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"those come from the top-level process after all, so any requests must happen while it's being processed","msgtype":"m.text"},"ts":1406639932000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"although I'm pretty clueless about input event handling","msgtype":"m.text"},"ts":1406639963000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"So B invokes requestFullscreen and after some time posts messages to A and C. Then after C gets its message it can invoke exitFullscreen() and post messages to B and A.","msgtype":"m.text"},"ts":1406639967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can A get C's before B's?","msgtype":"m.text"},"ts":1406639982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, that helps masking the problem","msgtype":"m.text"},"ts":1406640002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think no, if B first posts a message to A and after that posts a message to C, nothing that C does in that message can arrive at A before B's message","msgtype":"m.text"},"ts":1406640128000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if that's not true assumption, then sanity is nowhere to be found I think","msgtype":"m.text"},"ts":1406640148000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess we should be okay then... Apart from working out how to synchronize with animation frames","msgtype":"m.text"},"ts":1406640191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds promising","msgtype":"m.text"},"ts":1406640262000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I can dig up the order of things in Blink's event synchronizing code if needed","msgtype":"m.text"},"ts":1406640288000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the most basic thing is that all events for an animation frame are fired before the requestAnimationFrame callback, but you could probably guess that much","msgtype":"m.text"},"ts":1406640326000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'd be shocked if it's actually spec'd though","msgtype":"m.text"},"ts":1406640349000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"It is kind of unfortunate that no one apart from bz seems to have held the web-perf people to account","msgtype":"m.text"},"ts":1406640486000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: what's that about?","msgtype":"m.text"},"ts":1406640535000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: What's what about?","msgtype":"m.text"},"ts":1406640594000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"webperf","msgtype":"m.text"},"ts":1406640603000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The web-perf people did rAF and various other specs","msgtype":"m.text"},"ts":1406640622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But is lacking people who are sufficiently aware of the quality requirements for modern web specs","msgtype":"m.text"},"ts":1406640651000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I am unsurprised that you would be shocked if they had spec something","msgtype":"m.text"},"ts":1406640679000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*speced","msgtype":"m.text"},"ts":1406640685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wonder what /*sealed*/ means in HTML","msgtype":"m.text"},"ts":1406640827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nothing","msgtype":"m.text"},"ts":1406640871000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's just a reminded to himself that you can't inherit from global objects","msgtype":"m.text"},"ts":1406640884000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Document has it too","msgtype":"m.text"},"ts":1406640968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Huh","msgtype":"m.text"},"ts":1406641126000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, hi","msgtype":"m.text"},"ts":1406641175000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1406641181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, web notifications and service workers","msgtype":"m.text"},"ts":1406641183000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"jake found this document: https://gist.github.com/jungkees/3154398b8deee7c70139","msgtype":"m.text"},"ts":1406641200000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"annevk: the latter half on events is relevant","msgtype":"m.text"},"ts":1406641253000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it answers the event question indeed, and suggest methods to accept an optional service worker argument","msgtype":"m.text"},"ts":1406641278000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"since the web notification api would define a property in the init dictionary instead, we could require it to be a ServiceWorker instance","msgtype":"m.text"},"ts":1406641308000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: it should be the ServiceWorkerRegistration instance, now we have those","msgtype":"m.text"},"ts":1406641352000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(we didn't when the doc was first created)","msgtype":"m.text"},"ts":1406641360000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that seems a bit nicer than a scope","msgtype":"m.text"},"ts":1406641390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: the event name should be notificationclick","msgtype":"m.text"},"ts":1406641536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The alternative is new serviceWorkerRegistration.Notifiation(), but feels silly to duplicate","msgtype":"m.text"},"ts":1406641537000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk, yes","msgtype":"m.text"},"ts":1406641542000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"(not activate as per email)","msgtype":"m.text"},"ts":1406641555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agreed :)","msgtype":"m.text"},"ts":1406641569000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"notificationDOMActivate","msgtype":"m.text"},"ts":1406641594000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"if you created the Notification object in the service worker","msgtype":"m.text"},"ts":1406641594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what happens then?","msgtype":"m.text"},"ts":1406641601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should it automatically set its serviceWorker member?","msgtype":"m.text"},"ts":1406641619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are events dispatched to both places?","msgtype":"m.text"},"ts":1406641639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"given that the lifetime of a service worker cannot be relied upon, we'd default to serviceWorker=[active ServiceWorkerRegistration]","msgtype":"m.text"},"ts":1406641642000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"it does raise questions for |onerror| though","msgtype":"m.text"},"ts":1406641654000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"is ServiceWorkerRegistration available inside the service worker global environment?","msgtype":"m.text"},"ts":1406641684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it could be. Not an unreasonable request.","msgtype":"m.text"},"ts":1406641719000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: events should only be dispatched to one","msgtype":"m.text"},"ts":1406641737000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"For the API it does not matter much, as long as there's some abstract concept I can associate with","msgtype":"m.text"},"ts":1406641748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: to either the SW or the object?","msgtype":"m.text"},"ts":1406641762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a running serviceworker knows its registration, that's not a problem","msgtype":"m.text"},"ts":1406641775000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: currently events are dispatched to all associated objects","msgtype":"m.text"},"ts":1406641778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I could see an argument for only dispatching events to an SW if one was provided at registration time or if it was created in an SW","msgtype":"m.text"},"ts":1406641811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, it should be one or the other. If the notification has an associated serviceworker, it should only fire the event in the serviceworker","msgtype":"m.text"},"ts":1406641812000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1406641818000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"However, that'd argue for exposing all events in the SW, not just two","msgtype":"m.text"},"ts":1406641823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: what's the issue with firing all events within the sw?","msgtype":"m.text"},"ts":1406641886000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"there's a hypothetical issue with onnotificationshow -- if we'd ever allow delayed notifications it could be used to set precise timers","msgtype":"m.text"},"ts":1406641914000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"If someone could summarize this on the list that'd be great. I think this works, still trying to sort out some other spec issues, so much to do :/","msgtype":"m.text"},"ts":1406641916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unless there's more?","msgtype":"m.text"},"ts":1406641927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but that's purely hypothetical at this point. there's no issues with onnotificationerror as far as I'm aware","msgtype":"m.text"},"ts":1406641942000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"Ooh, we probably don't want to boot up the SW for show either","msgtype":"m.text"},"ts":1406641969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is that a security issue?","msgtype":"m.text"},"ts":1406642003000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Just wasteful I guess","msgtype":"m.text"},"ts":1406642013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if people don't addEventListener for it, we don't have to wake it up. But I guess we'll be talking about that later :)","msgtype":"m.text"},"ts":1406642043000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But maybe we should do it, yes","msgtype":"m.text"},"ts":1406642054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'll go into history as the guy who abused the event system beyond repair","msgtype":"m.text"},"ts":1406642071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can always set which events you want as part of the install event, but I'd rather not","msgtype":"m.text"},"ts":1406642145000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"beverloo: JakeA: each event would implement NotificationEvent I take it which has a pointer to a Notification object?","msgtype":"m.text"},"ts":1406643624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep","msgtype":"m.text"},"ts":1406643641000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"could reuse CustomEvent event, but bit weird","msgtype":"m.text"},"ts":1406643659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: are there any other *Sync APIs aside from filesystem?","msgtype":"m.text"},"ts":1406644319000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I notice the IDB ones have been burned to the ground","msgtype":"m.text"},"ts":1406644330000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I thought IDB was implemented in Firefox","msgtype":"m.text"},"ts":1406644344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: XMLHttpRequest has a sync API","msgtype":"m.text"},"ts":1406644353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we could disable the sync part of XMLHttpRequest in service workers, or we could not expose XMLHttpRequest at all...","msgtype":"m.text"},"ts":1406644386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm happy with disabling the sync part. Losing all of xhr could mean already-existing libraries can't be used in importScripts. (but I can't find any useful worker-compatible scripts that use XHR)","msgtype":"m.text"},"ts":1406644469000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, if existing libraries use it synchronously that'd break too","msgtype":"m.text"},"ts":1406644500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1406644510000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Would you expose importScripts?","msgtype":"m.text"},"ts":1406644612000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: only during install or some such... not entirely sure how that is going to be monkey patched up the chain","msgtype":"m.text"},"ts":1406644638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1406645577000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ms2ger: which spec? HTTP?","msgtype":"m.text"},"ts":1406648111000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I can ... co-write, maybe.","msgtype":"m.text"},"ts":1406648121000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Write a whole spec? I'll end up with security bugs in the spec itself. No thanks, don't want to be the next Heartbleed. :P","msgtype":"m.text"},"ts":1406648148000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Ah, HTTP header parsing errors. Hmm","msgtype":"m.text"},"ts":1406648264000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"That is where all the security errors would be, mind you ;-)","msgtype":"m.text"},"ts":1406649125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: The possibility of writing security bugs into the spec is a terrible reason not to write the spec. Typically more people read the spec than particular implementations, and having one spec that defines how to handle all possible inputs is a huge net good for reducing security errors","msgtype":"m.text"},"ts":1406649449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yeah, but neither am I (a) experienced with spec writing, nor (b) *that* knowledgeable about HTTP headers -- The security bugs was a joke, but seriously speaking I don't think I'd be able to do this alone","msgtype":"m.text"},"ts":1406649627000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: Sure, I wouldn't expect you to","msgtype":"m.text"},"ts":1406649786000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would love to be part of a joint effort :)","msgtype":"m.text"},"ts":1406649814000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: let mnot know","msgtype":"m.text"},"ts":1406649827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: Usually the way these things work is N people express an interest in editing. Then between N and N-1 of them find out that they don't have the time or the inclination, so 0 or 1 people do 100% of the writing","msgtype":"m.text"},"ts":1406649841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't have the time, but I ought to be able to make time.","msgtype":"m.text"},"ts":1406649865000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(other people still contribute feedback ofc)","msgtype":"m.text"},"ts":1406649870000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"shh, jgraham - don't scare him off","msgtype":"m.text"},"ts":1406649881000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1406649885000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I have a tendency of overloading myself. Already overloaded, and today I decided to TA a course. Blah.","msgtype":"m.text"},"ts":1406649904000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"what would a \"Sync\" worker be?","msgtype":"m.text"},"ts":1406651188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: THat exists?","msgtype":"m.text"},"ts":1406651218000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"i dunno, some people were talking about it earlier","msgtype":"m.text"},"ts":1406651231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't follow the conversation","msgtype":"m.text"},"ts":1406651235000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, dedicated worker","msgtype":"m.text"},"ts":1406651236000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"how is a dedicated worker \"sync\"?","msgtype":"m.text"},"ts":1406651243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a sync worker makes no sense","msgtype":"m.text"},"ts":1406651249000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1406651250000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"and how is a shared worker any less \"sync\"?","msgtype":"m.text"},"ts":1406651254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, in the sense that it gets access to FooSync APIs","msgtype":"m.text"},"ts":1406651255000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Shared too","msgtype":"m.text"},"ts":1406651261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But not ServiceWorker","msgtype":"m.text"},"ts":1406651266000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1406651269000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1406651271000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why would service worker not get the same apis?","msgtype":"m.text"},"ts":1406651276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hooray for nomenclature","msgtype":"m.text"},"ts":1406651280000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Because it's not supposed to block","msgtype":"m.text"},"ts":1406651289000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why would it matter if it blocks? and how would you stop it from blocking?","msgtype":"m.text"},"ts":1406651308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are service workers going to have script timeouts like main thread scripts?","msgtype":"m.text"},"ts":1406651324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk, ^","msgtype":"m.text"},"ts":1406651327000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not sure, they might die at any point","msgtype":"m.text"},"ts":1406651368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but that seems like a good question to ask in that thread","msgtype":"m.text"},"ts":1406651374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so are we going to give up on killing mutation events? or what?","msgtype":"m.text"},"ts":1406652252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: smaug____ still has hope, so I haven't given up just yet","msgtype":"m.text"},"ts":1406652655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd certainly like to not implement them in Servo","msgtype":"m.text"},"ts":1406652749000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie, er... *goes off to check the spec*","msgtype":"m.text"},"ts":1406652798000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie, no, I think I'm right","msgtype":"m.text"},"ts":1406652873000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The :disabled pseudo-class must match any element that is actually disabled.","msgtype":"m.text"},"ts":1406652888000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"An element is said to be actually disabled if it falls into one of the following categories:","msgtype":"m.text"},"ts":1406652897000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"button elements that are disabled","msgtype":"m.text"},"ts":1406652900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A form control is disabled if its disabled attribute is set, or if it is a descendant of a fieldset element whose disabled attribute is set and is not a descendant of that fieldset element's first legend element child, if any.","msgtype":"m.text"},"ts":1406652906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Stop","msgtype":"m.text"},"ts":1406652909000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm talking about fieldsets","msgtype":"m.text"},"ts":1406652916000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what about them?","msgtype":"m.text"},"ts":1406652929000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh nested ones?","msgtype":"m.text"},"ts":1406652935000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1406652937000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ohhh","msgtype":"m.text"},"ts":1406652940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iteresting","msgtype":"m.text"},"ts":1406652942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"int...","msgtype":"m.text"},"ts":1406652944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"fieldset descendant of a disabled fieldset\"","msgtype":"m.text"},"ts":1406652948000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i interpreted \"fieldset descendant\" in the same sense as \"italian descendant\", as in, a descendant of a fieldset","msgtype":"m.text"},"ts":1406652978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1406652981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Fair :)","msgtype":"m.text"},"ts":1406653001000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"man, i'm so bad at being a human. i came into this room an hour ago to get a drink. then i sat down just to see what was going on online, and an hour later, i still haven't gotten a drink.","msgtype":"m.text"},"ts":1406653170000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Mutation events sure are in my list to kill","msgtype":"m.text"},"ts":1406653225000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"seems like if we manage to kill showModalDialog() before mutation events, mutation events are a bit too hardy to kill.","msgtype":"m.text"},"ts":1406653253000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think MutationEvents will die slowly over the next few years, event-by-event","msgtype":"m.text"},"ts":1406653326000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"we don't have much history of usage of a feature going down over time.","msgtype":"m.text"},"ts":1406653349000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm I thought I recalled some chromestatus graphs indicating otherwise","msgtype":"m.text"},"ts":1406653380000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think loud deprecation warnings help actually","msgtype":"m.text"},"ts":1406653391000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"having those is relatively new, so yeah, maybe they have an effect","msgtype":"m.text"},"ts":1406653405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though honestly i'd be surprised","msgtype":"m.text"},"ts":1406653410000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"One can hope ;)","msgtype":"m.text"},"ts":1406653496000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: for validator reasons, be aware of https://www.w3.org/Bugs/Public/show_bug.cgi?id=25572","msgtype":"m.text"},"ts":1406653732000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: yaaaay for removing the *","msgtype":"m.text"},"ts":1406654242000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jamesr__: that email was somewhat depressing","msgtype":"m.text"},"ts":1406654393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr__: I believe roc still holds hope for the storage mutex in Servo","msgtype":"m.text"},"ts":1406654409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the status quo is a bit depressing, but once you accept it the possibilities are much freer","msgtype":"m.text"},"ts":1406654629000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"jamesr__: and the apps harder to debug?","msgtype":"m.text"},"ts":1406655089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"theoretically, yes, in practice, it doesn't seem so","msgtype":"m.text"},"ts":1406655129000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"jamesr__: also, my problem in that thread is mostly what state the browser will end up in, not so much the page's app","msgtype":"m.text"},"ts":1406655247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the page can't tell about any of this for the most part. if a page calls requestFullscreen(), the UA is allowed to do any number of async steps before deciding to accept or reject the promise","msgtype":"m.text"},"ts":1406655544000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"so from the page's POV it just gets an accepted or rejected promise at some point later","msgtype":"m.text"},"ts":1406655559000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"jamesr__: if the updating of document state races can't the page get in a state where when it's first notified it's fullscreen it's for a different element from the one it requested?","msgtype":"m.text"},"ts":1406656167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't that happen without races?","msgtype":"m.text"},"ts":1406656264000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"i.e. i ask for fullscreen on X, the ua pops an infobar asking the user if they want to allow X, then somebody request fullscreen on Y, the ua pops an infobar asking for permission, the user allows Y ?","msgtype":"m.text"},"ts":1406656289000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"I thought we had no infobars. Hmm","msgtype":"m.text"},"ts":1406657383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: yeah, it's late in the day to be removing that, but needed to go","msgtype":"m.text"},"ts":1406658084000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"surely every ua would have a \"yes always stop bothering me every time\" button","msgtype":"m.text"},"ts":1406658193000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"though browsers today are pretty bad about fullscreen, iirc no way to stop the obnoxious \"you're fullscreen now\" thing every single time","msgtype":"m.text"},"ts":1406658237000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"What do people use for http fetching in python nowadays?","msgtype":"m.text"},"ts":1406660153000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"requests","msgtype":"m.text"},"ts":1406660281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tries that","msgtype":"m.emote"},"ts":1406660344000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, shouldn't root.find(\"span[@id='summary']\") work?","msgtype":"m.text"},"ts":1406661108000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Which treebuilder? If it's ElementTree it only supports a bastardised subset of XPath","msgtype":"m.text"},"ts":1406661167000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"the default\"","msgtype":"m.text"},"ts":1406661203000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh and .find only seems to look at children","msgtype":"m.text"},"ts":1406661215000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Doh","msgtype":"m.text"},"ts":1406661270000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh wait I lied","msgtype":"m.text"},"ts":1406661295000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The documentation is self-contradictory","msgtype":"m.text"},"ts":1406661306000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You porbably want a // though","msgtype":"m.text"},"ts":1406661313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"//span[@id='summary']\"","msgtype":"m.text"},"ts":1406661337000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SyntaxError: cannot use absolute path on element","msgtype":"m.text"},"ts":1406661349000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Add a . then","msgtype":"m.text"},"ts":1406661359000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":".//","msgtype":"m.text"},"ts":1406661361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Then it doesn't find anything :/","msgtype":"m.text"},"ts":1406661372000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Does it find anything without the attribute selector?","msgtype":"m.text"},"ts":1406661395000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"With \".//[@id='summary']\" it manages to raise SyntaxError(\"invalid descendant\")","msgtype":"m.text"},"ts":1406661407000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Aha","msgtype":"m.text"},"ts":1406661429000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, that's not valid XPath","msgtype":"m.text"},"ts":1406661432000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\".//*[@id='summary']\" seems to find something","msgtype":"m.text"},"ts":1406661440000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Looks like perl to me, but oh well","msgtype":"m.text"},"ts":1406661477000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"To be fair CSS Selectors look even more like Perl for non-trivial cases","msgtype":"m.text"},"ts":1406661520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"XPath is mostly consistent, it's just complex for any case","msgtype":"m.text"},"ts":1406661536000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Had I just used regexps rather than html5lib, I'd probably have cursed less now","msgtype":"m.text"},"ts":1406661573000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(And more later, of course)","msgtype":"m.text"},"ts":1406661579000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, there's no API to get at the summary of w3.org bugs, right?","msgtype":"m.text"},"ts":1406663867000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: bugzilla has an api","msgtype":"m.text"},"ts":1406664199000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Does it work on the w3.org installation?","msgtype":"m.text"},"ts":1406664218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah, it's what i use to graph total bugs","msgtype":"m.text"},"ts":1406664283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Pointer?","msgtype":"m.text"},"ts":1406664331000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1406664371000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1406664440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can't see any comments in my code pointing to anything useful :-)","msgtype":"m.text"},"ts":1406664450000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"try putting ctype=xml on the query string for a bug","msgtype":"m.text"},"ts":1406664491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Aha","msgtype":"m.text"},"ts":1406664639000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie, this seems to be reacting terrible slowly","msgtype":"m.text"},"ts":1406665744000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah i noticed that too","msgtype":"m.text"},"ts":1406665765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno if it's always that slow","msgtype":"m.text"},"ts":1406665768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: you around?","msgtype":"m.text"},"ts":1406666910000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: i was wondering how easy it would be to instrument the validator, or have something on the validator that would catch certain specific errors and encourage users to comment on the relevant bug","msgtype":"m.text"},"ts":1406666941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: e.g. https://www.w3.org/Bugs/Public/show_bug.cgi?id=12990 is asking for us to allow nested <footer>. Would we be able to detect this case and ask people to comment on that bug about why they need it, possibly linking to their page?","msgtype":"m.text"},"ts":1406666969000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, thanks for the pointer :)","msgtype":"m.text"},"ts":1406667198000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"there's something you can do for queries too, iirc","msgtype":"m.text"},"ts":1406667242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This was sufficient :)","msgtype":"m.text"},"ts":1406667484000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"foolip: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=25573","msgtype":"m.text"},"ts":1406668870000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... hmm, is it possible to scale an image to fit in a given box, keeping the aspect ratio, without knowing the dimensions of the image?","msgtype":"m.text"},"ts":1406671278000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: from JS, or in general?","msgtype":"m.text"},"ts":1406671754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or in CSS?","msgtype":"m.text"},"ts":1406671758000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSS","msgtype":"m.text"},"ts":1406671764000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, there's some property for that","msgtype":"m.text"},"ts":1406671773000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"background-cover or something","msgtype":"m.text"},"ts":1406671787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with JS, you could of course cheat and wait for the image to load","msgtype":"m.text"},"ts":1406671794000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well, HTML + CSS; it's not an issue if it needs an extra box inside the main box","msgtype":"m.text"},"ts":1406671884000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: background-size comes up when I search for that, and looks relevant","msgtype":"m.text"},"ts":1406671934000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: hmm, looks like that has values \"cover\", which will avoid any blank parts at the expense of chopping off other bits, and \"contain\", which avoids cutting anything off at the expense of having blank spaces?","msgtype":"m.text"},"ts":1406672161000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wonders how it is possible to have one intrinsic dimension AND an intrinsic proportion","msgtype":"m.emote"},"ts":1406672237000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: sounds about right","msgtype":"m.text"},"ts":1406674853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=25555","msgtype":"m.text"},"ts":1406676534000,"senderName":"Hixie","senderId":"Hixie@irc"}
]