[
{"content":{"body":"Domenic: Chrome seems to implement the onshow event?","msgtype":"m.text"},"ts":1500868960000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: check canary","msgtype":"m.text"},"ts":1500868968000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It was left in for like one release longer than the context menu code","msgtype":"m.text"},"ts":1500868989000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, oops, didn't realize I was running stock","msgtype":"m.text"},"ts":1500869013000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I created a bare bones polyfill for AbortController+fetch, PRs welcome if I screwed it up somehow --> https://git.io/v7Loc","msgtype":"m.text"},"ts":1500892304000,"senderName":"molsson","senderId":"molsson@irc"},
{"content":{"body":"molsson: FWIW, the idea behind AbortController is also that it spreads to all kinds of APIs","msgtype":"m.text"},"ts":1500892825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"molsson: so it'll be either that or the TC39 proposal that will eventually be used","msgtype":"m.text"},"ts":1500892872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the TC39 proposal takes hold, will the DOM implement that as well then?","msgtype":"m.text"},"ts":1500892968000,"senderName":"molsson","senderId":"molsson@irc"},
{"content":{"body":"molsson: yeah, I'd expect some changes in that case, seems a bit unlikely given how long we've waited on TC39, but who knows, should know more at the end of this week","msgtype":"m.text"},"ts":1500893088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1500893115000,"senderName":"molsson","senderId":"molsson@irc"},
{"content":{"body":"It'd need to be clonable across workers for instance, which the doc doesn't seem to cover","msgtype":"m.text"},"ts":1500893385000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Seems like it's a long time away in TC39 terms","msgtype":"m.text"},"ts":1500893405000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: thanks for the heads-up (re https://www.w3.org/Bugs/Public/show_bug.cgi?id=24379)","msgtype":"m.text"},"ts":1500894652000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"annevk: yes, lets not wait on tc39 for canceling again","msgtype":"m.text"},"ts":1500903918000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: in spec language, does resolving or rejecting a promise implicitly queue a task to the correct target realm thread?","msgtype":"m.text"},"ts":1500906168000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if you are in a parallel section, etc","msgtype":"m.text"},"ts":1500906181000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: in theory, but it's very poorly defined since it doesn't define the task source and such","msgtype":"m.text"},"ts":1500906555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: there's some language to that effect in the promises guide which should be uplifted to HTML/IDL and then appropriately refactored to also take a source into account","msgtype":"m.text"},"ts":1500906582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, it might be confusing since accessing other js objects in parallel sections I guess is bad","msgtype":"m.text"},"ts":1500906621000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I don't think it's good practice","msgtype":"m.text"},"ts":1500906649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I think folks should always queue a task and resolve/reject from that task","msgtype":"m.text"},"ts":1500906663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: then it's also clear you need to define a task source","msgtype":"m.text"},"ts":1500906693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers: I know its out of your hands, but its kind of frustrating to do spec work to make stuff feature detectable and then have one of the spec participants still use UA sniffing instead... in reference to https://bugzilla.mozilla.org/show_bug.cgi?id=1128959#c140","msgtype":"m.text"},"ts":1500910382000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: also, I'm curious how the site can't support firefox at all without streams API","msgtype":"m.text"},"ts":1500910915000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I totally understand, I'm frustrated to.  dknox and I are increasing investments to try to improve things here within Google.","msgtype":"m.text"},"ts":1500912402000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... related: you're not too far from Toronto IIRC, right?","msgtype":"m.text"},"ts":1500912546000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... Mike Taylor is bringing a couple Mozilla folks to Google Waterloo in a couple weeks to do a web compat hackathon, you might be interested in joining: https://docs.google.com/document/d/1FIUk5Y5_VmZ8rqHEsFEoXaysJUCRzf3RbvcyuYpim9c/edit","msgtype":"m.text"},"ts":1500912575000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"And FWIW it's probably the case that the  site in question _could_ support Firefox without streams, it's high on their list of reasons why supporting Firefox with high quality is too expensive to currently be worth it for them.  I see it as part of my job to help eliminate all such reasons :-)","msgtype":"m.text"},"ts":1500912923000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: is this streams within service workers?","msgtype":"m.text"},"ts":1500913617000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: waterloo is about a 3 hour drive (depending on the bridge)... I could run it by my wife","msgtype":"m.text"},"ts":1500913667000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think so, just fetch API.  I don't actually know details myself (just trying to relay discussions I'm following).","msgtype":"m.text"},"ts":1500913701000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... Your call on the compat hackathon.  I'm convinced we can make the web work better for everyone through more Mozilla/Google collaboration (eg. shifting more of the burden from Gecko to chromium engineers as we're working to do with our web-platform-test requirements).","msgtype":"m.text"},"ts":1500913775000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"... But I don't know concretely what things will have the biggest impact.","msgtype":"m.text"},"ts":1500913968000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: fwiw, I am doubtful streams will hit release channel until september or november... we're close, but have some thorny details to iron out","msgtype":"m.text"},"ts":1500918556000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: although we will probably have a configuration someone could use to test with before then... install nightly and flip a pref... if that would allow your web devs to enable FF UA with feature detection","msgtype":"m.text"},"ts":1500918608000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Thanks.  I'll mention that to them.","msgtype":"m.text"},"ts":1500919783000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"wanderview: Are there specific spec/test quality issues that you wish Google folks were more engaged in addressing?","msgtype":"m.text"},"ts":1500919898000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: bz might have more answers to that question","msgtype":"m.text"},"ts":1500923711000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: the work on WPT tests recently has been very helpful... and fixing problems those have revealed... so that is good","msgtype":"m.text"},"ts":1500927201000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: I think it would be great if blink implementors and reviewers were more keyed into when the spec is missing information... if you are implementing something and the spec doesn't actually say what to do, then please file an issue... I feel like we uncover this kind of thing all the time as the second implementor","msgtype":"m.text"},"ts":1500927268000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Thanks.  Yeah I don't know how to systematize and scale more spec-conformance diligence during implementation.  We're trying for sure, but I'm determined to come up with something scalable that relies more on tooling and infrastructure and less on individual heroics.  Making WPT first-class in our engineering processes is our primary strategy (glad to hear you're feeling the improvements) but it's definitely","msgtype":"m.text"},"ts":1500929297000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"not enough on it's own...","msgtype":"m.text"},"ts":1500929297000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: IMO, the code review process is the easiest place to inject this sort of thing... but I guess I don't know what that looks like in blink","msgtype":"m.text"},"ts":1500929419000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I find it pretty hard when reviewing somebodies code to figure out how hard to push back on the \"the spec you're implementing doesn't seem to actually describe any of the behavior you're implementing in enough detail to figure out if the code you wrote matches the spec\"","msgtype":"m.text"},"ts":1500931290000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"ultimately it's not (just) the code author's fault that the spec they're implementing isn't anywhere near a state where it is implementable, and I can see how trying to implement something can be valuable in actually figuring out these gaps in the specs","msgtype":"m.text"},"ts":1500931335000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"so I'm often not sure what the right balance is between \"fix the spec before you land this code\" and \"as long as the spec and implementation match before shipping, it's probably okay to land this\"","msgtype":"m.text"},"ts":1500931371000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: its important to file a spec issue and note what your internal decision for now is... the spec doesn't have to block moving forward, but filing a spec allows it to get visibility","msgtype":"m.text"},"ts":1500931486000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"IMO, anyway","msgtype":"m.text"},"ts":1500931504000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I often write review comments like \"write a spec issue, link to it here in a comment\", etc","msgtype":"m.text"},"ts":1500931530000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, that's what I generally end up doing as well (or filing some spec issues myself...)","msgtype":"m.text"},"ts":1500931545000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"and I actually came here to rant and wonder what it means when a spec says \"When X happens the user agent MUST run the Foo algorithm. The exact defails of the Foo algorithm are left to implementers.\" How can running a completely unspecified algorithm be a MUST requirement...","msgtype":"m.text"},"ts":1500931555000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"pretty sure that means to wipe the hard drive","msgtype":"m.text"},"ts":1500931572000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, you must run an undefined algorithm","msgtype":"m.text"},"ts":1500931620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and we can test that you run an unspecified algorthim by observing that you do… something","msgtype":"m.text"},"ts":1500931637000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"undefined is not a function","msgtype":"m.text"},"ts":1500931646000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Including crashing, I guess. An algorithm could just be the ud2 instruction, after all.","msgtype":"m.text"},"ts":1500931670000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]