[
{"content":{"body":"Domenic, for botie, I think you currently need to use \"inform\" instead of \"tell\" (I'll try to hack my copy of its source to add support for \"tell\", or maybe it's already been added upstream and I just need to pull it)","msgtype":"m.text"},"ts":1437959297000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie: tell Domenic botie now understands \"tell\"","msgtype":"m.text"},"ts":1437972604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1437972604000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"TabAtkins: https://fetch.spec.whatwg.org/#dom-global-fetch uses that style","msgtype":"m.text"},"ts":1437974972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: https://storage.spec.whatwg.org/#dom-storagemanager-requestpersistent does too","msgtype":"m.text"},"ts":1437974993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: given that \"in parallel\" is defined I don't think it matters much","msgtype":"m.text"},"ts":1437975026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I can't assign issues to TabAtkins so I don't think that works","msgtype":"m.text"},"ts":1437975668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we'd have to actually give contributors access to a set of repositories for that","msgtype":"m.text"},"ts":1437975683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Of course it matters! It doesn't matter if there's a link to the full meaning if the plain English reads completely wrong.","msgtype":"m.text"},"ts":1437976255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, I guess we disagree on the plain English reading wrong","msgtype":"m.text"},"ts":1437976805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least in my ideolect, \"Do the following Xs in parallel\" means that they'll all execute at the same time.  (Not that they'll run in series, in parallel with the surrounding context.)","msgtype":"m.text"},"ts":1437977451000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that case \"Run the remaining Xs in parallel\" would mean the same thing","msgtype":"m.text"},"ts":1437977576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So neither would be clear with such an interpretation","msgtype":"m.text"},"ts":1437977616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which is why I'm not suggesting either.  There's another phrasing, used in Font Loading, which isn't possible to misunderstand.","msgtype":"m.text"},"ts":1437977973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, except it doesn't define \"asynchronously\" and we've had a bunch of concerns raised over the word \"asynchronous\" which is why it's \"in parallel\" (and is somewhat defined) now","msgtype":"m.text"},"ts":1437978305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You also update internal slots from asynchronous thread which seems all kinds of wrong","msgtype":"m.text"},"ts":1437978413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"an*","msgtype":"m.text"},"ts":1437978419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I was thinking, we could also restrict requestFullscreen() on <iframe> by doing an inclusive ancestor check for <iframe> in the ready check, but I guess now Microsoft ships an \"iframe fullscreen flag\" we should just go with that","msgtype":"m.text"},"ts":1437979641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: also, is it a problem the specification does not deal with <frame>, <object>, and <embed> in some way?","msgtype":"m.text"},"ts":1437979679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess those don't support allowfullscreen","msgtype":"m.text"},"ts":1437979702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I would be quite happy just ignoring the iframe.requestFullscreen() followed by elementInIframe.requestFullscreen() problem","msgtype":"m.text"},"ts":1437980882000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I do wonder if it's been an issue in reality","msgtype":"m.text"},"ts":1437980892000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Unless my fix is wrong, it does seem relatively easy to fix","msgtype":"m.text"},"ts":1437980913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think <frame> and friends matter, there was support in WebKit/Blink that was removed,","msgtype":"m.text"},"ts":1437980956000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I have seen one bug report where the reason fullscreen didn't work was because of <frame>, though","msgtype":"m.text"},"ts":1437980988000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: fixing it with a flag is fine too, since apparently Microsoft was concerned enough to invent their own solution without telling anyone","msgtype":"m.text"},"ts":1437981031000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: did you ever look at https://www.w3.org/Bugs/Public/show_bug.cgi?id=16502?","msgtype":"m.text"},"ts":1437981135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: yeah, my thinking was that since they went through the trouble of implementing that and telling us about it (somewhat belatedly) it's okay for us to accept the cost this one time","msgtype":"m.text"},"ts":1437981180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I have seen that bug, but am not sure what to make of it.","msgtype":"m.text"},"ts":1437981215000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: although if they keep doing it that way I won't be as nice about it I think","msgtype":"m.text"},"ts":1437981218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I guess I'll wait to see if the Presentation API folks have anything to say","msgtype":"m.text"},"ts":1437981248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Trying to close all Bugzilla bugs are you?","msgtype":"m.text"},"ts":1437981261000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Yeah, was thinking of marking the other one MOVED","msgtype":"m.text"},"ts":1437981274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I guess I can wait a little longer, there's no particular rush","msgtype":"m.text"},"ts":1437981289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1437981305000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: it might interest you to know that there's something weird going on with optional arguments and addEventListener()","msgtype":"m.text"},"ts":1437981504000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"All of the arguments are optional in Blink, an attempt to fix it a long time ago was reverted due to something breaking, and now the use counters don't look very promising.","msgtype":"m.text"},"ts":1437981534000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I don't suppose you've seen any reports in Gecko about this?","msgtype":"m.text"},"ts":1437981553000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: nope","msgtype":"m.text"},"ts":1437981732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: a servo guy who was trying to run the wpt DOM ChildeNode tests today was wondering why https://codereview.chromium.org/1234813003/ was reverted","msgtype":"m.text"},"ts":1437984171000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(the related wpt tests came from blink upstream, from that changeset)","msgtype":"m.text"},"ts":1437984208000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that review cites https://code.google.com/p/chromium/issues/detail?id=509461","msgtype":"m.text"},"ts":1437984233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"@@unscopeables?","msgtype":"m.text"},"ts":1437984242000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"philipj: but I get a 403 trying to view that bug so I assume it's a security issue","msgtype":"m.text"},"ts":1437984256000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it introduced a crash which is being fixed, not a problem with the spec if that's the concern","msgtype":"m.text"},"ts":1437984372000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: ah yeah maybe he had been wondering if it was spec issue","msgtype":"m.text"},"ts":1437984457000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway thanksーI'll pass on the info if/when I chat with him","msgtype":"m.text"},"ts":1437984485000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: np","msgtype":"m.text"},"ts":1437984491000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Thanks for the info philipj","msgtype":"m.text"},"ts":1437984740000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"is the 'servo guy'","msgtype":"m.emote"},"ts":1437984750000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"frewsxcv: are Nodes refcounted in Servo or what's the general story for keeping them alive across an event dispatch that may run GC?","msgtype":"m.text"},"ts":1437984807000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Garbage collection!","msgtype":"m.text"},"ts":1437984817000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/servo/servo/blob/7235500db6778371abe1d1f727a6d0b24205d5c5/components/script/docs/JS-Servos-only-GC.md","msgtype":"m.text"},"ts":1437984872000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not entirely up-to-date (which I should fix), but fairly","msgtype":"m.text"},"ts":1437984886000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Then you will not have the particular crash we did :)","msgtype":"m.text"},"ts":1437984900000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"We should be entirely safe :)","msgtype":"m.text"},"ts":1437984961000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I presume that having the equivalent of a this pointer on the stack will also protect it from GC?","msgtype":"m.text"},"ts":1437984975000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Were those mutation events?","msgtype":"m.text"},"ts":1437984975000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Last words by every software developer...","msgtype":"m.text"},"ts":1437984981000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1437984999000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don't remember, but seems likely.","msgtype":"m.text"},"ts":1437985003000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"mutation events FTW","msgtype":"m.text"},"ts":1437985017000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Fortunately we don't have those either :)","msgtype":"m.text"},"ts":1437985023000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Feel like removing them in Gecko?","msgtype":"m.text"},"ts":1437985095000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"wow https://github.com/servo/servo/blob/7235500db6778371abe1d1f727a6d0b24205d5c5/components/script/docs/JS-Servos-only-GC.md is nice stuff","msgtype":"m.text"},"ts":1437985101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"UseCounter says no: https://www.chromestatus.com/metrics/feature/timeline/popularity/144","msgtype":"m.text"},"ts":1437985108000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Ohgodno","msgtype":"m.text"},"ts":1437985115000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sad","msgtype":"m.text"},"ts":1437985197000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how high those numbers are stil","msgtype":"m.text"},"ts":1437985209000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That's the highest of them, but even the lowest isn't negligible: https://www.chromestatus.com/metrics/feature/timeline/popularity/146","msgtype":"m.text"},"ts":1437985274000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"doubly sad","msgtype":"m.text"},"ts":1437985451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wait but that's below 0.03 at least","msgtype":"m.text"},"ts":1437985482000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also JS-Servos-only-GC.md is nicely worded","msgtype":"m.text"},"ts":1437985583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: who wrote that?","msgtype":"m.text"},"ts":1437985588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Josh Matthews and Keegan McAllister\"","msgtype":"m.text"},"ts":1437985624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1437985631000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"With a little editing from me, but mostly them","msgtype":"m.text"},"ts":1437985654000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1437985660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good on you as well then","msgtype":"m.text"},"ts":1437985675000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe I should finish it toay","msgtype":"m.text"},"ts":1437985753000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"window move up","msgtype":"m.text"},"ts":1437986500000,"senderName":"hugoh","senderId":"hugoh@irc"},
{"content":{"body":"Hey! Where'd my window go?","msgtype":"m.text"},"ts":1437986541000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sorry! forgot the /","msgtype":"m.text"},"ts":1437986586000,"senderName":"hugoh","senderId":"hugoh@irc"},
{"content":{"body":"philipj: we might be able to change mutation event timing","msgtype":"m.text"},"ts":1437991211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: e.g. give them the same timing as custom element callbacks","msgtype":"m.text"},"ts":1437991227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except DOMNodeRemoved","msgtype":"m.text"},"ts":1437992316000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: what do you mean?","msgtype":"m.text"},"ts":1437992365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: note that DOMNodeRemoved has much less usage too","msgtype":"m.text"},"ts":1437992373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOMNodeRemoved happens before the mutation","msgtype":"m.text"},"ts":1437992388000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: btw, I can't get blur to dispatch at all in Gecko for removed nodes","msgtype":"m.text"},"ts":1437992389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"known issue, IIRC","msgtype":"m.text"},"ts":1437992417000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: sure, per \"spec\" most of them fire at rather problematic times","msgtype":"m.text"},"ts":1437992421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though","msgtype":"m.text"},"ts":1437992421000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1437992422000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though, we do have code which should trigger blur","msgtype":"m.text"},"ts":1437992438000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: so the plan is now to have sync ctors?","msgtype":"m.text"},"ts":1437992480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"for custom elements?","msgtype":"m.text"},"ts":1437992485000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: <p>x<input onblur=alert(1) onfocus=this.parentNode.remove()> is my test","msgtype":"m.text"},"ts":1437992491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: we don't have a plan yet","msgtype":"m.text"},"ts":1437992505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: could you file a bug. CC enndeakin too","msgtype":"m.text"},"ts":1437992553000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Google would really like to avoid more synchronous JavaScript during DOM and editing algorithms","msgtype":"m.text"},"ts":1437992557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1437992567000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: so the current plan is exploring whether blur and beforeunload can be made to dispatch using custom element callback timing","msgtype":"m.text"},"ts":1437992595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think we'd mind that either","msgtype":"m.text"},"ts":1437992596000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was also thinking that maybe we could postpone blur/beforeunload happening during range operations to happen on nanotask","msgtype":"m.text"},"ts":1437992596000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(which is better than script runners)","msgtype":"m.text"},"ts":1437992602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and selection operations would be a nano task or something","msgtype":"m.text"},"ts":1437992608000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right, nanotask","msgtype":"m.text"},"ts":1437992611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the thing that doesn't run during compound range operations either","msgtype":"m.text"},"ts":1437992626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't know what is the difference between \"custom element callback timing\" and script runners","msgtype":"m.emote"},"ts":1437992660000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: DOM component?","msgtype":"m.text"},"ts":1437992667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: afaik script runners run during a single range operation","msgtype":"m.text"},"ts":1437992680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: nanotask is always at the end of an IDL method or attribute","msgtype":"m.text"},"ts":1437992693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"script runners run when the outermost script blocker goes away from the stack","msgtype":"m.text"},"ts":1437992711000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't know what that means","msgtype":"m.text"},"ts":1437992728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there can be nested script blockers","msgtype":"m.text"},"ts":1437992728000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"In C++ you have ScriptBlocker object on stack. When it is created, scriptblocking level is increased","msgtype":"m.text"},"ts":1437992773000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"when that object is deleted, level is decreased","msgtype":"m.text"},"ts":1437992785000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and when level becomes 0, scriptrunners run","msgtype":"m.text"},"ts":1437992795000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I understand that much, but it's unclear whether they can run during https://dom.spec.whatwg.org/#dom-range-extractcontents for instance","msgtype":"m.text"},"ts":1437992813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"those script runners which were posted while the level was != 0","msgtype":"m.text"},"ts":1437992814000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"currently yes","msgtype":"m.text"},"ts":1437992831000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right, which makes them less safe than nanotasks","msgtype":"m.text"},"ts":1437992844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but we could effectively put a scriptblocker to selection/editing level code","msgtype":"m.text"},"ts":1437992859000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not sure why we keep revisiting this discussion :-)","msgtype":"m.text"},"ts":1437992860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"scriptblockers are nanotasks","msgtype":"m.text"},"ts":1437992873000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not if they run during an IDL block","msgtype":"m.text"},"ts":1437992888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, in gecko we'd just put scriptblock in the idl block then","msgtype":"m.text"},"ts":1437992907000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"scriptblocker","msgtype":"m.text"},"ts":1437992912000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sure, currently ScriptBlockers are used somewhat ad hoc in Gecko","msgtype":"m.text"},"ts":1437992956000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"once you've made that change we can start calling them nanotasks too","msgtype":"m.text"},"ts":1437992958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"until that time the distinction is useful","msgtype":"m.text"},"ts":1437992962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1437992967000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://bugzilla.mozilla.org/show_bug.cgi?id=1187848","msgtype":"m.text"},"ts":1437993117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1437993177000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders how this nanotask approach will deal with DOMNodeRemoved","msgtype":"m.emote"},"ts":1437993192000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/whatwg/dom/issues/57 has some details from Edge","msgtype":"m.text"},"ts":1437993997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: seems they do some other things for tree operations compared to other browsers","msgtype":"m.text"},"ts":1437994017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looks like custom element callbacks are kind of like microtasks but their processed at the boundary between native and script?","msgtype":"m.text"},"ts":1437995179000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: only the return boundary","msgtype":"m.text"},"ts":1437995207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: the nickname nanotasks came from that being possible multiple times within a microtask","msgtype":"m.text"},"ts":1437995257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/their/they're/ unforgivable typo","msgtype":"m.text"},"ts":1437995292000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: would there be any benefit to delaying these callback ever so slightly?","msgtype":"m.text"},"ts":1437995473000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: \"these\"?","msgtype":"m.text"},"ts":1437995862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mutation events I mean","msgtype":"m.text"},"ts":1437995881000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: yes, all the code that deals with mutation events changing the world view would go away","msgtype":"m.text"},"ts":1437995908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: and any undiscovered security bugs in those paths would go away too","msgtype":"m.text"},"ts":1437995938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, that does sound nice, but mutation events have been annoying for a long time, is any browser willing to attempt the change?","msgtype":"m.text"},"ts":1437996140000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: it seems Blink is","msgtype":"m.text"},"ts":1437996154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: see also https://github.com/whatwg/dom/issues/57","msgtype":"m.text"},"ts":1437996173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps I'm overestimating the amount of interop there currently is for these events","msgtype":"m.text"},"ts":1437996180000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: it seems Edge has a somewhat different model per that issue","msgtype":"m.text"},"ts":1437996272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah...","msgtype":"m.text"},"ts":1437996343000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Some details on that would be nice.","msgtype":"m.text"},"ts":1437996356000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Like how would those invariants be enforced, what is it that causes a nested removeChild() call to fail, etc.","msgtype":"m.text"},"ts":1437996383000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"\"https://bugzilla.mozilla.org/show_bug.cgi?id=559561 is pretty ugly","msgtype":"m.text"},"ts":1437996395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would be interesting to know how common it is for mutation event listeners to actually mutate the DOM again","msgtype":"m.text"},"ts":1437996457000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"And if it isn't common at all, if there's a cheap check that could be done to simply disallow that.","msgtype":"m.text"},"ts":1437996495000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"That would make the problems go away I suppose.","msgtype":"m.text"},"ts":1437996505000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Gecko fires non-DOMNodeRemoved mutation events using script runners, so if nano task gets defined, and gecko makes a nano task to be a script blocker, non-DOMNodeRemoved would be fired a bit later in editor/selection case","msgtype":"m.text"},"ts":1437996533000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and range case","msgtype":"m.text"},"ts":1437996632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1437996666000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so we only run complicated code for DOMNodeRemoved at the moment? and for range operations?","msgtype":"m.text"},"ts":1437996713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1437996718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that's still less than if custom elements could run code in a bunch of these places","msgtype":"m.text"},"ts":1437996743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I guess DOMNodeRemoved firing after is problematic because the tree is gone","msgtype":"m.text"},"ts":1437996779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'd have to do something weird to notify parents","msgtype":"m.text"},"ts":1437996802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sync custom element ctor case would add yet another new problematic case, cloneNode","msgtype":"m.text"},"ts":1437996852000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: if you already need to code defensively for insertions and removals, is cloning making it much worse?","msgtype":"m.text"},"ts":1437996956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps not much. But it is yet another case","msgtype":"m.text"},"ts":1437996983000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"maybe we'd be better with cloneNode than we were with other cases","msgtype":"m.text"},"ts":1437997021000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but would be nice to remove the sync stuff from everywhere","msgtype":"m.text"},"ts":1437997064000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that would simplify code","msgtype":"m.text"},"ts":1437997069000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"...but DOMNodeRemoved...","msgtype":"m.text"},"ts":1437997077000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no disagreement there","msgtype":"m.text"},"ts":1437997084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kicks DOM WG around DOM 2 Events era ;)","msgtype":"m.emote"},"ts":1437997112000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm somewhat surprised they got away with just specifying these events without defining their processing model","msgtype":"m.text"},"ts":1437997137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"processing model\" in the web before 2004?","msgtype":"m.text"},"ts":1437997217000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1437997369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should <applet> be considered a potential client request?","msgtype":"m.text"},"ts":1438003301000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no","msgtype":"m.text"},"ts":1438003314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: though <applet> is underspecified","msgtype":"m.text"},"ts":1438003324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should it be intercepted?  (I guess I need to ask Matt what chrome does)","msgtype":"m.text"},"ts":1438003344000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it's unclear whether Java does the fetch or the browser and whether all Java fetches are browser-mediated","msgtype":"m.text"},"ts":1438003350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: there's one open bug against HTML on this, which blocks defining an \"applet\" context","msgtype":"m.text"},"ts":1438003374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if we have no applet context, that implies to me we should not intercept... safe thing to do for now","msgtype":"m.text"},"ts":1438003436000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: we should probably work through the <object> and <embed> cases some more too","msgtype":"m.text"},"ts":1438003690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, for now they are spec'd not to be intercepted","msgtype":"m.text"},"ts":1438003704000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"which is at least not a security problem","msgtype":"m.text"},"ts":1438003717000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I guess its an interesting question for things like amazon.com... they have tons of <object> tags... would they have to rewrite their site to offline it?","msgtype":"m.text"},"ts":1438003925000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah","msgtype":"m.text"},"ts":1438003944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: the problem with <object> is that its both a client and resource context","msgtype":"m.text"},"ts":1438003956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so you don't really know what service worker to use until after you got the response...","msgtype":"m.text"},"ts":1438003980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if that sounds confusing, it's because it is)","msgtype":"m.text"},"ts":1438004000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: its ok... I put it in the bucket of \"try to understand after we ship v1\" for now","msgtype":"m.text"},"ts":1438004020000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"<applet> doesn't really have that problem, but I'm fine deferring all plugin-like stuff for a bit","msgtype":"m.text"},"ts":1438004037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea, makes sense","msgtype":"m.text"},"ts":1438004060000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It does sound like Gecko at least manages some of the <applet> requests so I guess I should define a context for it","msgtype":"m.text"},"ts":1438004068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if anyone can confirm whether that's the case in Chrome too; beverloo maybe?","msgtype":"m.text"},"ts":1438004080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps mkwst is online? \\o/","msgtype":"m.text"},"ts":1438004104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I asked Matt Falkenhagen (irc name?)","msgtype":"m.text"},"ts":1438004107000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think matto","msgtype":"m.text"},"ts":1438004124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"he said he would help dig up chrome's behavior for this stuff last week","msgtype":"m.text"},"ts":1438004125000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or maybe his last name, not sure","msgtype":"m.text"},"ts":1438004146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"of course... timezones","msgtype":"m.text"},"ts":1438004152000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in theory he's had his first work day, but maybe he took a day off, dunno","msgtype":"m.text"},"ts":1438004187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi! Scrolling back, but the question isn't clear to me. What do you want to know about applet?","msgtype":"m.text"},"ts":1438004203000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: basically whether Chrome or Java is in control of fetching","msgtype":"m.text"},"ts":1438004225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, I just sent him the email... he's probably just going to bed now :-)","msgtype":"m.text"},"ts":1438004226000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(other than that Sun doesn't seem to be publishing a PPAPI version of Java so maybe we can kill the tag entirely?)","msgtype":"m.text"},"ts":1438004235000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"aah","msgtype":"m.text"},"ts":1438004235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: does chrome do any service worker interception for <applet>","msgtype":"m.text"},"ts":1438004246000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(that'd be great)","msgtype":"m.text"},"ts":1438004246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well that's a different question, but I agree it would be good to know the answer to that one too","msgtype":"m.text"},"ts":1438004279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We certainly trigger the request for the applet itself in Blink, and I suspect we have control over the whole request now that we've killed NPAPI.","msgtype":"m.text"},"ts":1438004290000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But, again, that's fairly theoretical, as I don't think there's any way of running Java in Chrome in Canary. Maybe even stable, I've lost track...","msgtype":"m.text"},"ts":1438004327000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"For object and embed it's the same story, except insofar as Flash can open sockets.","msgtype":"m.text"},"ts":1438004344000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Sockets are outside Fetch, so it can do pretty much whatever it likes with the connection.","msgtype":"m.text"},"ts":1438004364000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: https://java.com/en/download/faq/chrome.xml claims it is still available","msgtype":"m.text"},"ts":1438004364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: outside of Linux, anyway","msgtype":"m.text"},"ts":1438004376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ooh, that actually tells people to switch the NPAPI flag...","msgtype":"m.text"},"ts":1438004413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We might have killed the flag by now.","msgtype":"m.text"},"ts":1438004419000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"well, object and embed are explicitly not sw intercepted per the current spec","msgtype":"m.text"},"ts":1438004420000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Sure. I don't know off the top of my head whether the folks responsible for SW set the bypass flags when making requests. Give me a sec.","msgtype":"m.text"},"ts":1438004457000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"wanderview: you're saying that Gecko is also in control over the fetch for <applet>, right?","msgtype":"m.text"},"ts":1438004460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I haven't looked, but this bug implies it does: https://bugzilla.mozilla.org/show_bug.cgi?id=1187766","msgtype":"m.text"},"ts":1438004497000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mkwst: https://github.com/whatwg/fetch/issues/73 is blocking on you","msgtype":"m.text"},"ts":1438004506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: https://github.com/whatwg/fetch/issues/52 too","msgtype":"m.text"},"ts":1438004534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and https://github.com/whatwg/fetch/issues/45","msgtype":"m.text"},"ts":1438004548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mentioned to me somewhere that sicking suggested redesigning context to better handle navigation/worker/client concepts...  but you said it was too late... why is it too late?","msgtype":"m.text"},"ts":1438004582000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I figured since Chrome shipped we might not want to change context","msgtype":"m.text"},"ts":1438004606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think they implement .context yet","msgtype":"m.text"},"ts":1438004617000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"just a sec","msgtype":"m.text"},"ts":1438004619000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sicking argued that we basically wanted a single context for everything that creates a browsing context","msgtype":"m.text"},"ts":1438004623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and have a distinct flag for \"comes from a form\" that CSP can use","msgtype":"m.text"},"ts":1438004638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: they are just implementing it now: https://code.google.com/p/chromium/issues/detail?id=455116","msgtype":"m.text"},"ts":1438004654000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm okay","msgtype":"m.text"},"ts":1438004684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not that I really want to rewrite a bunch of stuff... ehsan might be annoyed :-)","msgtype":"m.text"},"ts":1438004703000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but if its really better... we should consider it","msgtype":"m.text"},"ts":1438004711000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: this would only be for all contexts that mean \"navigation\"","msgtype":"m.text"},"ts":1438004742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I can investigate then, although I hope that doesn't cost too much time :/","msgtype":"m.text"},"ts":1438004760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, that sounds like less of a change","msgtype":"m.text"},"ts":1438004773000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: if you have higher priority stuff... I don't think having the more granular values we do now is bad...  just need this extra \"is it a navigation\" helper","msgtype":"m.text"},"ts":1438004824000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: blocking on me is a seriously bad idea because I am overloaded and behind on everything. But I'll comment on the bugs anyway. :)","msgtype":"m.text"},"ts":1438004830000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: is there a qualified fallback person?","msgtype":"m.text"},"ts":1438004856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: this is what you get with all those \"small\" specs :p","msgtype":"m.text"},"ts":1438004869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: given that... if you are busy don't worry about the applet... I emailed mattto about it","msgtype":"m.text"},"ts":1438004870000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think I'm abarth's qualified fallback person.","msgtype":"m.text"},"ts":1438004881000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: we can't have abarth' go MIA too :p","msgtype":"m.text"},"ts":1438004917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I should ask fishd about abarth''","msgtype":"m.text"},"ts":1438004949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should the SW spec be doing stuff like step 11 here?  or should that be in fetch: http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#on-fetch-request-algorithm","msgtype":"m.text"},"ts":1438004963000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think that's fine","msgtype":"m.text"},"ts":1438005028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: everything about picking a service worker is left up to SW","msgtype":"m.text"},"ts":1438005040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1438005054000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"seems security related which makes me think of those other checks in fetch","msgtype":"m.text"},"ts":1438005067000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think at some point we might need to figure out the layering again, but for now let's leave it like this","msgtype":"m.text"},"ts":1438005146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In general anything Fetch being part of service workers directly is somewhat dirty from a layering perspective","msgtype":"m.text"},"ts":1438005174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, looking at public attributes on Request should be ok","msgtype":"m.text"},"ts":1438005214000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"its just annoying to spread security checks between specs where not necessary","msgtype":"m.text"},"ts":1438005234000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"goes to fetch a baby.","msgtype":"m.emote"},"ts":1438005266000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: oh, I guess it should not look at the public properties","msgtype":"m.text"},"ts":1438005298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: that seems bad","msgtype":"m.text"},"ts":1438005307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and I agree with that, but this is about deciding where to handle the fetch, it's not a decision on the response","msgtype":"m.text"},"ts":1438005335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: where to handle the fetch is not really a security decision per se","msgtype":"m.text"},"ts":1438005356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: ta","msgtype":"m.text"},"ts":1438005489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm a seriously poor abarth`. At least, I have been this quarter, and August isn't looking any better. Hopefully the next one will be better.","msgtype":"m.text"},"ts":1438005622000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: it's alright, the only thing that's making me nervous is wanderview alluding to us not shipping service workers due to CSP not being ready","msgtype":"m.text"},"ts":1438005717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what, what?","msgtype":"m.text"},"ts":1438005730000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"who would be crazy enough to do that? :)","msgtype":"m.text"},"ts":1438005739000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I guess we'll have to wait for wanderview to confirm or deny","msgtype":"m.text"},"ts":1438005768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Tell me what pieces of CSP are blocking SW, and I will make them go away. Unless it's \"This doesn't make sense in terms of Fetch.\", in which case, yes, I know, and ugh and I'm working on it. Slowly.","msgtype":"m.text"},"ts":1438005845000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: going to go through https://github.com/whatwg/fetch/issues/79 while I've got a spare moment. Anything else that's particularly blocking?","msgtype":"m.text"},"ts":1438005972000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no not really","msgtype":"m.text"},"ts":1438006038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: well one issue we have is that it's unclear what the CSP check on responses will be and indeed whether the service worker can set CSP, etc.","msgtype":"m.text"},"ts":1438006085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: there's a great many unanswered questions, but perhaps I'm wrong about that blocking us shipping though","msgtype":"m.text"},"ts":1438006123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"need to ask wanderview","msgtype":"m.text"},"ts":1438006132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm back","msgtype":"m.text"},"ts":1438006140000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mkwst: annevk: I believe some form of CSP is a blocker for use service workers in firefoxos","msgtype":"m.text"},"ts":1438006159000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I mean, there's a great number of things I'd like to see resolved, such as range requests","msgtype":"m.text"},"ts":1438006162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which means its a near time requirement for us","msgtype":"m.text"},"ts":1438006167000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mkwst: annevk: specifically... being able to say if src is constrained to a server... synthetic responses are not allowed... so you can't bypass the no-eval restrictions","msgtype":"m.text"},"ts":1438006235000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: as in, how they appear in a fetch event, how a complete response may be handled, what the cache returns in response to a range, should the browser accept range parts from different sources?","msgtype":"m.text"},"ts":1438006308000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, those type of questions","msgtype":"m.text"},"ts":1438006333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: media elements already make them, so I guess to some extent browsers handle them already","msgtype":"m.text"},"ts":1438006352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, and it feels like having a cache able to produce partial results would be the most compatible and performant way to deal with those","msgtype":"m.text"},"ts":1438006408000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1438006445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if this overlaps with returning partial responses that are still streaming in for cache.match() of \"fetching entry\"","msgtype":"m.text"},"ts":1438006631000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: not sure… we wouldn't want to return an http partial response in response to a non-range request","msgtype":"m.text"},"ts":1438006913000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think that'd be a failure case","msgtype":"m.text"},"ts":1438006924000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"although we might have some magic the other way around","msgtype":"m.text"},"ts":1438006935000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess the question becomes... do partial responses become a combined complete response when all the pieces are cached?","msgtype":"m.text"},"ts":1438006947000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if the request is a range, and I respond with new Response(\"hello world\"), should SW or Fetch attempt to create an appropriate partial response (I think it should)","msgtype":"m.text"},"ts":1438006988000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: ohh I see. Yeah, that seems really difficult. We could reject in that case","msgtype":"m.text"},"ts":1438007065000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh... so Cache stores the whole thing... but might slice it given a range request?","msgtype":"m.text"},"ts":1438007065000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, that's what I was thinking","msgtype":"m.text"},"ts":1438007077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that seems reasonable","msgtype":"m.text"},"ts":1438007078000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1438007099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess I'm trying to understand what to do in a read-through-cache scenario where a partial request comes... what gets stored in the cache","msgtype":"m.text"},"ts":1438007126000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, I'm thinking the same","msgtype":"m.text"},"ts":1438007136000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"aren't you on PTO?","msgtype":"m.text"},"ts":1438007151000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah but all my friends are asleep so I'm stuck with you guys","msgtype":"m.text"},"ts":1438007188000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1438007189000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ha","msgtype":"m.text"},"ts":1438007198000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so, cache.put(videoRequest.url, fetch(videoRequest.url)).then(r => {)","msgtype":"m.text"},"ts":1438007244000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"shit","msgtype":"m.text"},"ts":1438007246000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hit enter too soon","msgtype":"m.text"},"ts":1438007250000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cache.put(videoRequest.url, fetch(videoRequest.url)).then(_ => cache.get(videoRequest))","msgtype":"m.text"},"ts":1438007283000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do range requests become less important once we get real streams?","msgtype":"m.text"},"ts":1438007288000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"because that snippet of code seems reasonable in a Stream API world","msgtype":"m.text"},"ts":1438007354000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(if requiring some work to implement)","msgtype":"m.text"},"ts":1438007376000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The above would work if the user watched the video sequentially. But if they scrubbed, they'd be waiting for the sequential download to catch up, which isn't great.","msgtype":"m.text"},"ts":1438007414000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right, ok","msgtype":"m.text"},"ts":1438007434000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: with streams, wouldn't there be a lot of code effort to turn those into range responses?","msgtype":"m.text"},"ts":1438007444000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess the question is whether the cache should be that high level","msgtype":"m.text"},"ts":1438007458000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(I'm thinking it should)","msgtype":"m.text"},"ts":1438007494000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"maybe we should just look at what http cache offers","msgtype":"m.text"},"ts":1438007510000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if it just treats ranges as any other request","msgtype":"m.text"},"ts":1438007522000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or if it does magic","msgtype":"m.text"},"ts":1438007525000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"note that for at least some media, we seek to the last set of bytes","msgtype":"m.text"},"ts":1438007695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some containers are broken like that","msgtype":"m.text"},"ts":1438007702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ideally we cleanly handle all those scenarios","msgtype":"m.text"},"ts":1438007714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"section 13.5.4 here suggests that combining is allowed per the spec... who knows if anyone implements it: http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html","msgtype":"m.text"},"ts":1438007750000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and streams doesn't solve seek and such","msgtype":"m.text"},"ts":1438007777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.5.4","msgtype":"m.text"},"ts":1438007784000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think we're stuck with both","msgtype":"m.text"},"ts":1438007787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think I might just make the Cache API matching algorithm include range comparisons so they are unique... and then offer a .merge(reqList) to combine them if the client code wants","msgtype":"m.text"},"ts":1438007897000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so read-through-caching works","msgtype":"m.text"},"ts":1438007910000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if they want to optimize and merge they can","msgtype":"m.text"},"ts":1438007917000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and then do your auto-slicing thing on match","msgtype":"m.text"},"ts":1438007936000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"can't we auto-merge them?","msgtype":"m.text"},"ts":1438007944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it seems to me we try to let script control how the Cache works instead of being magical like http cache","msgtype":"m.text"},"ts":1438008002000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so I'd rather give them an API to do it if they want","msgtype":"m.text"},"ts":1438008013000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm, the Cache API is fairly high-level","msgtype":"m.text"},"ts":1438008019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: e.g. the whole match algorithm","msgtype":"m.text"},"ts":1438008031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for starters","msgtype":"m.text"},"ts":1438008034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but we explicitly don't do any *modification* of the cache automatically... its all script controlled","msgtype":"m.text"},"ts":1438008051000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess, but it does seem fairly silly if range requests/responses require a bunch of make work whereas everything else just works","msgtype":"m.text"},"ts":1438008103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the rfc suggests you don't always want to merge... if one part of the range is newer than the rest, etc","msgtype":"m.text"},"ts":1438008140000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway... happy to let Jake figure this out while his friends are asleep :-)","msgtype":"m.text"},"ts":1438008189000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I mean, in that case it says you must discard the older bits","msgtype":"m.text"},"ts":1438008216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If they're not equivalent cache-wise","msgtype":"m.text"},"ts":1438008234000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and we explicitly don't discard things automatically in Cache API...","msgtype":"m.text"},"ts":1438008247000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the whole point of the API was to let the script decide","msgtype":"m.text"},"ts":1438008269000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"fair, but sounds fairly complicated to combine that with ranges","msgtype":"m.text"},"ts":1438008301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and keep the API convenient","msgtype":"m.text"},"ts":1438008306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they can .match() all the ranges, manually combine into a new Response, and then Cache put it back... the .merge() was a convenience to do that efficiently in the platform","msgtype":"m.text"},"ts":1438008372000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"you're assuming ranges are non-overlapping","msgtype":"m.text"},"ts":1438008440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"am I? it would be a pain, but script could do it with current primitives","msgtype":"m.text"},"ts":1438008485000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or maybe you're saying I need to make a side-table to store all the ranges","msgtype":"m.text"},"ts":1438008539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not entirely clear to me how  to get ranges out of the cache if all I have is a URL","msgtype":"m.text"},"ts":1438008561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh... well that would need to be added, yea...  I thought we were talking about a world where you could pass range requests to .match()","msgtype":"m.text"},"ts":1438008607000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway, if it can be done automatically without losing data then thats cool with me","msgtype":"m.text"},"ts":1438008705000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm kinda happy with cache being high level, hopefully idb will become the place to do it if you need lower level","msgtype":"m.text"},"ts":1438008833000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but I need to think about it more","msgtype":"m.text"},"ts":1438008841000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: why do we even have CORS responses if they can be so easily converted to synthetic responses?  should we just have one type?","msgtype":"m.text"},"ts":1438008983000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://fetch.spec.whatwg.org/#concept-filtered-response-cors","msgtype":"m.text"},"ts":1438009026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"prevents copying the headers I guess","msgtype":"m.text"},"ts":1438009041000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if you ignore some set of data, everything is the same type","msgtype":"m.text"},"ts":1438009069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's how you end up with == and security bugs","msgtype":"m.text"},"ts":1438009096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea, I forgot about the headers... seems we spend all our time worrying about cross-origin body content","msgtype":"m.text"},"ts":1438009182000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that's also what leads people to think ReadableStream is all we need","msgtype":"m.text"},"ts":1438009220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might even be the same people","msgtype":"m.text"},"ts":1438009227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1438009232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I didn't follow that navigation attack scenario from JakeA btw, seems wrong?)","msgtype":"m.text"},"ts":1438009300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Am I right in thinking the attack is exposed when a client request is made to the \"infected\" url?","msgtype":"m.text"},"ts":1438009428000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that's when the cross-origin code is executing","msgtype":"m.text"},"ts":1438009445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The bad stuff goes into the cache via a cors request, and comes back out via a client request - that was my understanding, but I haven't seen the attack work (in a while) so I'm not sure","msgtype":"m.text"},"ts":1438009521000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh wait, the Cache API would follow redirects whereas navigation doesn't?","msgtype":"m.text"},"ts":1438009631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, I think the Cache API is somewhat broken here, in storing the redirected response but still with the original request URL...","msgtype":"m.text"},"ts":1438009661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the cache would end up with an entry where the key was \"good site\" and the value was \"bad site\". Then when the navigation happens, the \"bad site\" entry is pulled out","msgtype":"m.text"},"ts":1438009721000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I mean, they can both be synthetic","msgtype":"m.text"},"ts":1438009732000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, understood","msgtype":"m.text"},"ts":1438009738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cache API should store the final URL property on the Response, no?","msgtype":"m.text"},"ts":1438009741000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1438009748000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that seems like a problem with usage of the Cache API","msgtype":"m.text"},"ts":1438009749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or design of the Cache API...","msgtype":"m.text"},"ts":1438009765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it should be some kind of explicit action to persist a redirect in the cache","msgtype":"m.text"},"ts":1438009805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, if we're nervous about it, we could consider rejecting if the request/response have different origins. You could still do it with synthetics though","msgtype":"m.text"},"ts":1438009806000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"A synthetic is explicit","msgtype":"m.text"},"ts":1438009823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Different origins seems ugly","msgtype":"m.text"},"ts":1438009834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And doesn't work for same-origin -> cross-origin -> same-origin","msgtype":"m.text"},"ts":1438009856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this would be a breaking change, no?","msgtype":"m.text"},"ts":1438009860000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1438009885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what about fetch(redirectingURL).then(function(response) { cache.put(sameOriginURL, response) }); ?","msgtype":"m.text"},"ts":1438009922000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that's fairly explicit too","msgtype":"m.text"},"ts":1438009954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where the fetch is done external to Cache","msgtype":"m.text"},"ts":1438009960000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: we don't even change contexts in that case","msgtype":"m.text"},"ts":1438009967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so you just want to block redirects in cache.add()?","msgtype":"m.text"},"ts":1438009969000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: dunno","msgtype":"m.text"},"ts":1438009992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I don't really think the design of the cache should result in further restrictions in Fetch","msgtype":"m.text"},"ts":1438010087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that seems quite backwards","msgtype":"m.text"},"ts":1438010091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not actually solving the problem","msgtype":"m.text"},"ts":1438010104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which will popup elsewhere if left unsolved","msgtype":"m.text"},"ts":1438010120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why does this need Cache API?  can't the service worker just do a fetch(url, {mode: 'cors'}) and respondWith immediately?","msgtype":"m.text"},"ts":1438010182000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"unclear to me why Cache is relevant here","msgtype":"m.text"},"ts":1438010194000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: why do you need Cache for this?  it seems a standalone fetch() could result in \"bad stuff\"... which is then returned for a client request","msgtype":"m.text"},"ts":1438010264000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, but it's the cache that may be making it easier for this to happen by accident","msgtype":"m.text"},"ts":1438010319000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right, I'm heading out, just as it was getting interesting. Sorry!","msgtype":"m.text"},"ts":1438010331000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess I was asking in reference to annevk's \"I don't really think the design of the cache should result in further restrictions in Fetch\"","msgtype":"m.text"},"ts":1438010344000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I’m writing about @font-face and type foundries, but I’m having trouble distinguishing between a distributor like “The League of Movable Type” and “Google Fonts”. Both fulfill the definition, but one doesn’t really produce their own fonts. What do I call something like Google Fonts or TypeKit?","msgtype":"m.text"},"ts":1438013230000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JakeA: annevk: our http cache behavior for range requests: https://pastebin.mozilla.org/8840726","msgtype":"m.text"},"ts":1438013859000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JonathanNeal: why not just say that some are X, some are Y, some are both?","msgtype":"m.text"},"ts":1438015454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I haven’t found anywhere that really does both.","msgtype":"m.text"},"ts":1438015499000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"wanderview: whoa, if you do a range request and you get a 200 we refetch?","msgtype":"m.text"},"ts":1438015505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I guess that's one case that's not currently considered","msgtype":"m.text"},"ts":1438015523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: so font foundry vs CDN?","msgtype":"m.text"},"ts":1438015540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What I’ve learned (or so I think I’ve learned) is that Google Fonts and TypeKit are “typeface directories”.","msgtype":"m.text"},"ts":1438015569000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I don't think there's any authority on the terms for those things","msgtype":"m.text"},"ts":1438015591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess you could look at Wikipedia","msgtype":"m.text"},"ts":1438015599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeap, Wikipedia and Googling for some kind of blog consensus. TypeKit never refers to themselves as such, since they describe themselves for their service and not their collection.","msgtype":"m.text"},"ts":1438015645000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"wanderview: also, that seems like an oversimplification, unless we really don't do any validation of the various ranges we have in the cache","msgtype":"m.text"},"ts":1438015648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and “directory” is a tricky name, since I think of a typeface directory as the place I put my self hosted fonts for a relative path @font-face rule.","msgtype":"m.text"},"ts":1438015682000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: it probably is a simplification... but I don't think its surprising that implementations do something simpler that might be faster and less complex to implement","msgtype":"m.text"},"ts":1438015716000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JonathanNeal: I would just go with font CDN and font foundry personally","msgtype":"m.text"},"ts":1438016367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: or just do something weird :-)","msgtype":"m.text"},"ts":1438016396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I’ll consider that, yea. I now appreciate how brew abstracted the whole thing to “taps”.","msgtype":"m.text"},"ts":1438016464000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: you can always go ask mayhemer to clarify in #necko","msgtype":"m.text"},"ts":1438017448000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I take it you're no longer in #necko :-)","msgtype":"m.text"},"ts":1438017468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am... but I don't look at it often... I see you're harassing him now","msgtype":"m.text"},"ts":1438017488000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: do you have useful copy-and-paste for IRC?","msgtype":"m.text"},"ts":1438017544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just copy to pastebin I guess","msgtype":"m.text"},"ts":1438017570000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: would love to have everything from your question down into https://github.com/whatwg/fetch/issues/38 somehow","msgtype":"m.text"},"ts":1438017581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll copy it","msgtype":"m.text"},"ts":1438017594000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: but whenever I copy-and-paste the formatting around the nickname goes all bonkers","msgtype":"m.text"},"ts":1438017600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1438017616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think irccloud works ok for this","msgtype":"m.text"},"ts":1438017616000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"LimeChat--","msgtype":"m.text"},"ts":1438017625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1438017684000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: mozilla instance of irccloud works pretty well","msgtype":"m.text"},"ts":1438017695000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah, I guess I should switch, mostly been putting it off due to inertia","msgtype":"m.text"},"ts":1438017716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm... it did lose the names on the log when I pasted it","msgtype":"m.text"},"ts":1438017793000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'll fix it","msgtype":"m.text"},"ts":1438017830000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I guess irccloud messed up too... put names in brackets like <bkelly>... which markdown just treats as html and hides","msgtype":"m.text"},"ts":1438018037000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: use ``` and ``` around it?","msgtype":"m.text"},"ts":1438018060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: GitHub might even support ```irc for IRC highlighting...","msgtype":"m.text"},"ts":1438018075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I already modified it to show in markdown","msgtype":"m.text"},"ts":1438018102000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ait","msgtype":"m.text"},"ts":1438018135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what does \"ait\" mean?","msgtype":"m.text"},"ts":1438018181000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"alright","msgtype":"m.text"},"ts":1438018195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ait","msgtype":"m.text"},"ts":1438018216000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1438018231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if there is a defined RequestContext enum value in fetch... does that mean it should be intercepted?  or just that you think it might be reasonable to intercept if someone wants to spec it?","msgtype":"m.text"},"ts":1438018659000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: in principle I think everything should be intercepted","msgtype":"m.text"},"ts":1438018783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I feel I can usefully take this statement out of context... thanks","msgtype":"m.text"},"ts":1438018854000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1438019141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wants to joke about annevk and the NSA","msgtype":"m.emote"},"ts":1438019521000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: joking aside, on to spec editing style questions","msgtype":"m.text"},"ts":1438019656000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"evening hallvors","msgtype":"m.text"},"ts":1438019673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like having a prose description of what we're up to","msgtype":"m.text"},"ts":1438019691000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: so one problem with the before* not being integrated is that it's not very clear when they fire in relation to the other events","msgtype":"m.text"},"ts":1438019711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: and whether they fire from different tasks or not","msgtype":"m.text"},"ts":1438019720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1438019727000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: and what happens if you launch a copy operation from one of them","msgtype":"m.text"},"ts":1438019733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: etc.","msgtype":"m.text"},"ts":1438019735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there is a \"processing model\" section for them, but *when* they fire is not spec'ed","msgtype":"m.text"},"ts":1438019764000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"https://w3c.github.io/clipboard-apis/#processing-model-for-before-events","msgtype":"m.text"},"ts":1438019767000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: if you don't have a very clear set of steps, it's super easy to poke holes","msgtype":"m.text"},"ts":1438019774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: so those fiddle with a command state in the end, which requires more than just firing an event","msgtype":"m.text"},"ts":1438019842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: they require execution of some command","msgtype":"m.text"},"ts":1438019849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"exactly when to fire them is left up to the implementation.. they aren't really about commands, they are about UI","msgtype":"m.text"},"ts":1438019860000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: currently you'd get a nullpointer exception","msgtype":"m.text"},"ts":1438019864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: well presumably they fire in response to some action by the user, from a task","msgtype":"m.text"},"ts":1438019888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I may need a better word than \"command\"..","msgtype":"m.text"},"ts":1438019911000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"it's up to the UA when to fire them, but typically it would happen for example when the user opens the \"Edit\" menu","msgtype":"m.text"},"ts":1438019958000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ah right, they're unrelated to firing of the non-before events","msgtype":"m.text"},"ts":1438019987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so the UA is about to show the user a menu containing \"copy\"/\"cut\"/\"paste\" commands, and wants to enable or disable them","msgtype":"m.text"},"ts":1438020003000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"exactly. They are sort of completely unrelated to those other clipboard events..","msgtype":"m.text"},"ts":1438020027000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"so what you actually want to define then is a set of steps for displaying \"edit UI\"","msgtype":"m.text"},"ts":1438020035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then you have an algorithm whenever you \"display edit UI\"","msgtype":"m.text"},"ts":1438020052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To figure out how you display it","msgtype":"m.text"},"ts":1438020062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It happens to run some script from a queued task to figure that out","msgtype":"m.text"},"ts":1438020072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do you get distinct tasks for each event? Or do they share a task?","msgtype":"m.text"},"ts":1438020086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's the kind of thing that should be obvious from that algorithm","msgtype":"m.text"},"ts":1438020096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1438020111000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"will report a github issue on the spec","msgtype":"m.emote"},"ts":1438020132000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"spent way too much time on this today already due to git doing things I didn't understand..","msgtype":"m.text"},"ts":1438020160000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ah sorry :-(","msgtype":"m.text"},"ts":1438020172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tooling issues are the worst","msgtype":"m.text"},"ts":1438020183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it's not your fault :)","msgtype":"m.text"},"ts":1438020189000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I assume :)","msgtype":"m.text"},"ts":1438020198000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I guess sympathize is a better word","msgtype":"m.text"},"ts":1438020205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks! appreciated. I got into some weird state where a submodule was there but wasn't there. somehow.","msgtype":"m.text"},"ts":1438020249000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"#-]","msgtype":"m.text"},"ts":1438020276000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I usually lazy-IRC for all git issues I encounter","msgtype":"m.text"},"ts":1438020287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's a surprising number of people on #whatwg who know what's what","msgtype":"m.text"},"ts":1438020298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, MikeSmith helped me out in irc.w3's#testing","msgtype":"m.text"},"ts":1438020327000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"back later, time for a break","msgtype":"m.text"},"ts":1438020540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o/ whatwg","msgtype":"m.text"},"ts":1438023403000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"writing this blog post is triggering all my worst procrastination tendencies from school","msgtype":"m.text"},"ts":1438023522000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Is there a name for the css pattern seen as url(), local(), and format() ?","msgtype":"m.text"},"ts":1438024232000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Function?","msgtype":"m.text"},"ts":1438024255000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Something like \"In parallel with the rest of the algorithm, run the following steps:\" would work. As it's written, the \"in parallel\" part is implied to apply over the \"following steps\" not over the rest of the algorithm as it should be.","msgtype":"m.text"},"ts":1438025811000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: Yes, function.  Or functional notation, either works.","msgtype":"m.text"},"ts":1438025828000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thank you, Ms2ger, TabAtkins. :)","msgtype":"m.text"},"ts":1438025909000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: shrug, file bugs?","msgtype":"m.text"},"ts":1438032761000,"senderName":"annevk","senderId":"annevk@irc"}
]