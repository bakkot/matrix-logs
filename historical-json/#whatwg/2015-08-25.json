[
{"content":{"body":"Firefox tail in Firefox logo seems to have gotten more firey recently","msgtype":"m.text"},"ts":1440470542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=29083","msgtype":"m.text"},"ts":1440486727000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1440486808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://codereview.chromium.org/1154373005/ looks like good news","msgtype":"m.text"},"ts":1440487083000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: except, it seems there haven't been any movement in that review in 2 months","msgtype":"m.text"},"ts":1440487384000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it's committed, no?","msgtype":"m.text"},"ts":1440487587000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is it? That review tool is awful at actually communicating anything to the uninitiated","msgtype":"m.text"},"ts":1440487955000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh yeah maybe I just missed the fact that it was committed","msgtype":"m.text"},"ts":1440488084000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but also, what Ms2ger said","msgtype":"m.text"},"ts":1440488113000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, it's good news for sure","msgtype":"m.text"},"ts":1440488169000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn't mean to be the wet blanket","msgtype":"m.emote"},"ts":1440488204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well the review tool does seem to put (Closed) in the title and the last comment is from the commit bot, so I think that aspect could be less clear. I have never heard anyone say they actually like that review tools though. At least not anyone who used another review tool.","msgtype":"m.text"},"ts":1440488788000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OTOH we are still getting requests rom Chromium engineers to make tests work over file:// so something is clearly wrong still","msgtype":"m.text"},"ts":1440488953000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it seems those engineers are not informed about Chromium moving to a stricter origin policy for file URLs","msgtype":"m.text"},"ts":1440489237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well I think a lot of their tests rely on the current behaviour, so GLWT, I guess","msgtype":"m.text"},"ts":1440489313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But my concern was more that no one has communicated how to run tests using wptserve or, better yet, constructed a coherent system where all wpt tests are run in the same way","msgtype":"m.text"},"ts":1440489361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"discovers https://developer.mozilla.org/en-US/docs/Template:SpecName and finds that it looks pretty thorough and up to date","msgtype":"m.emote"},"ts":1440490512000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: except for CORS :-)","msgtype":"m.text"},"ts":1440490723000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and all the links lacking HTTPS","msgtype":"m.text"},"ts":1440490734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and \"DOM4\"","msgtype":"m.text"},"ts":1440490746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's a wiki? :)","msgtype":"m.text"},"ts":1440490946000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: can't 386 all the things","msgtype":"m.text"},"ts":1440490999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but we *can* complain about all the things","msgtype":"m.text"},"ts":1440491054000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: or memeify","msgtype":"m.text"},"ts":1440491174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, I put together a MDN article on Subresource Integrity https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity","msgtype":"m.text"},"ts":1440491367000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I already spent far more time on it than I should have, so anybody else feel free to \"improve\" it","msgtype":"m.text"},"ts":1440491402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you haven't defined fetch(url, {integrity: ...}) it seems","msgtype":"m.text"},"ts":1440491450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: might want to mention it in #mdn on Mozilla's IRC","msgtype":"m.text"},"ts":1440491464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah will send a heads-up there","msgtype":"m.text"},"ts":1440491484000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nicely done MikeSmith","msgtype":"m.text"},"ts":1440491834000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: so has that whole \"Modifications to Fetch\" monkey-patch in the SRI spec be superseded by it actually having been folded into the Fetch spec now?","msgtype":"m.text"},"ts":1440492113000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tantek: thanks","msgtype":"m.text"},"ts":1440492116000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: there's an open PR that removes it","msgtype":"m.text"},"ts":1440492142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: Fetch already has it included","msgtype":"m.text"},"ts":1440492159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1440492167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"could use some help on https://github.com/whatwg/url/issues/62#issuecomment-134530442","msgtype":"m.emote"},"ts":1440492838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with*","msgtype":"m.text"},"ts":1440492846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: btw https://w3c.github.io/webappsec/specs/subresourceintegrity/#does-varresponsevar-match-varmetadatalistvar","msgtype":"m.text"},"ts":1440493411000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: seems broken?","msgtype":"m.text"},"ts":1440493430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...is a link to the SRI spec that I found in the Fetch spec","msgtype":"m.text"},"ts":1440493431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oh, I guess they changed links then, pretty sure I tested it","msgtype":"m.text"},"ts":1440493448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah seems like a Bikeshed problem","msgtype":"m.text"},"ts":1440493448000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1440493456000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the \"varresponsevar\" part looks wrong though","msgtype":"m.text"},"ts":1440493476000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like, <var> markup crept into the anchor","msgtype":"m.text"},"ts":1440493507000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That's... not a Bikeshed spec.","msgtype":"m.text"},"ts":1440493537000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, they have something weird","msgtype":"m.text"},"ts":1440493555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ReSpec with markdown","msgtype":"m.text"},"ts":1440493563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh ..","msgtype":"m.text"},"ts":1440493575000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well they seem to have fixed it https://w3c.github.io/webappsec/specs/subresourceintegrity/#does-response-match-metadatalist","msgtype":"m.text"},"ts":1440493584000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Fix deployed","msgtype":"m.text"},"ts":1440493642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the status on css-selectors-4?","msgtype":"m.text"},"ts":1440493966000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Is the terminology in it mostly viable?","msgtype":"m.text"},"ts":1440493978000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Drop the \"css-\". It's cleaner.","msgtype":"m.text"},"ts":1440494012000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yes.","msgtype":"m.text"},"ts":1440494014000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What terminology are you looking for specifically?","msgtype":"m.text"},"ts":1440494023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and the -4","msgtype":"m.text"},"ts":1440494025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, the spec's name is selectors-4","msgtype":"m.text"},"ts":1440494039000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sorry, selectors4","msgtype":"m.text"},"ts":1440494044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":-/","msgtype":"m.text"},"ts":1440494047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, it's \"selectors\" :)","msgtype":"m.text"},"ts":1440494057000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No it's becky","msgtype":"m.text"},"ts":1440494064000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: can you look at https://www.w3.org/Bugs/Public/show_bug.cgi?id=28796 pls?","msgtype":"m.text"},"ts":1440494419000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: har du tid?","msgtype":"m.text"},"ts":1440494697000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: ja","msgtype":"m.text"},"ts":1440494716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ska alla prata Svenska nu?","msgtype":"m.text"},"ts":1440494809000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"japp","msgtype":"m.text"},"ts":1440494851000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Njet","msgtype":"m.text"},"ts":1440494913000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: see also https://www.w3.org/Bugs/Public/show_bug.cgi?id=29061","msgtype":"m.text"},"ts":1440495074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it's a bit more complicated due to DOMTokenList","msgtype":"m.text"},"ts":1440495088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thx. we have relList so values can be feature-checked with that api without the case-folding idea","msgtype":"m.text"},"ts":1440495262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, both sandbox and this seem to require the same thing","msgtype":"m.text"},"ts":1440495308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Compound selectors, complex selectors, are these names going to stay?","msgtype":"m.text"},"ts":1440496433000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The terminology in selectors3 was confusing.","msgtype":"m.text"},"ts":1440496448000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yeah, that terminology is solid.","msgtype":"m.text"},"ts":1440496725000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: in https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send step 4, will an implementation never handle input that is *neither* Document nor BodyInit ?","msgtype":"m.text"},"ts":1440496984000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: IDL will stringify it","msgtype":"m.text"},"ts":1440497011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Cool, thanks.","msgtype":"m.text"},"ts":1440497013000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: OK, thx","msgtype":"m.text"},"ts":1440497023000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Is \"Content-Type: charset=UTF-8\" a valid content-type header?","msgtype":"m.text"},"ts":1440497686000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: yes","msgtype":"m.text"},"ts":1440497723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: oh wait, no it isn't","msgtype":"m.text"},"ts":1440497742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: I read text/plain; in there somehow","msgtype":"m.text"},"ts":1440497757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK.. so the test expects such headers to be sent as they are set because it doesn't have a proper charset attribute to rewrite.. Did I get that right?","msgtype":"m.text"},"ts":1440498408000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(Trying to annotate the test file a bit - this is rather obscure stuff)","msgtype":"m.text"},"ts":1440498426000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: yeah, I guess if it can't parse the Content-Type header it should leave it alone","msgtype":"m.text"},"ts":1440498530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: right, the XHR spec contains a \"valid MIME type\" check","msgtype":"m.text"},"ts":1440498569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes - I think the tests are up-to-date and match the spec carefully, it's just that they are not commented so it's hard to figure out the actual logic ;)","msgtype":"m.text"},"ts":1440498627000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I'll have you review the PR in a moment..","msgtype":"m.text"},"ts":1440498656000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"should be an easy review :)","msgtype":"m.text"},"ts":1440498668000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Anyone have any novel URL security concerns? https://www.w3.org/Bugs/Public/show_bug.cgi?id=27642#c2","msgtype":"m.text"},"ts":1440500498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe something about data URLs?","msgtype":"m.text"},"ts":1440500840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: http://log.csswg.org/irc.w3.org/css/2015-08-25/#e581689 seems like it's the route of maximum complexity","msgtype":"m.text"},"ts":1440506259000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in the long run","msgtype":"m.text"},"ts":1440506271000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: does this happen that often?","msgtype":"m.text"},"ts":1440506353000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I don't know","msgtype":"m.text"},"ts":1440506378000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what would be a better way to deal with this?","msgtype":"m.text"},"ts":1440506404000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(I want strong arguments if I’m gonna re-open this topic)","msgtype":"m.text"},"ts":1440506463000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Not making backwards-incompatible changes? Not allowing implementations to optionally support older versions of the spec?","msgtype":"m.text"},"ts":1440506483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean I don't think these will be winning arguments in CSS-land","msgtype":"m.text"},"ts":1440506494000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway, if this doesn't happen very often I guess it's not a huge concern, but the current setup seems to either require implementations to (potentially) compare both refs on each test run, which is unnecessarily slow, or have additional metadata about which ref they expect to match, which is unmaintainable","msgtype":"m.text"},"ts":1440506654000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wptrunner will do the former fwiw","msgtype":"m.text"},"ts":1440506667000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't think the intent is to allow implementations to optionally support older versions","msgtype":"m.text"},"ts":1440506706000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"If that's not the intent why wouldn't you just update the tests to require the new behaviour?","msgtype":"m.text"},"ts":1440506731000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in addition to changing the old test to allow either result, a new test for the new result should be added to a new test suite","msgtype":"m.text"},"ts":1440506731000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Literally the entire CSS levels system seems to be designed around that concept","msgtype":"m.text"},"ts":1440506794000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"a 2.1 implementation will pass with the old behavior, and a new implementation will pass the old test *and* the new test","msgtype":"m.text"},"ts":1440506820000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"There's no such thing as \"a 2.1 implementation\"","msgtype":"m.text"},"ts":1440506837000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the initial suggestion was to remove the old test and add a new test to the level 3 test suite. fantasai countered with allowing both results in the old test","msgtype":"m.text"},"ts":1440506964000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"So what's the plan for testing css-color-4? Spreading tests around in css21/, css-color-3/, css-color/4?","msgtype":"m.text"},"ts":1440507089000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"-4*","msgtype":"m.text"},"ts":1440507092000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"css/color/ ?","msgtype":"m.text"},"ts":1440507135000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"No, that would make sense","msgtype":"m.text"},"ts":1440507183000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"right, sorry","msgtype":"m.text"},"ts":1440507193000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Does css still require repo-wide unique file names?","msgtype":"m.text"},"ts":1440507298000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1440507304000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: quickie for you :) https://critic.hoppipolla.co.uk/r/5750","msgtype":"m.text"},"ts":1440507406000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"TabAtkins: why does <a spec=html for=/>origin</a> still get confused with an <dfn>origin</dfn> in a document that is not HTML?","msgtype":"m.text"},"ts":1440507561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: why do I even need for=/ to make that work?","msgtype":"m.text"},"ts":1440507572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...interesting","msgtype":"m.text"},"ts":1440507582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hallvors: r+","msgtype":"m.text"},"ts":1440507688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1440507736000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"TabAtkins: also, \"unicode serialisation of an origin\" from HTML appears not to be indexed","msgtype":"m.text"},"ts":1440507759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry annevk http://w3cmemes.tumblr.com/post/127554590107/lazy-college-senior-csswg-continues-to-not-go","msgtype":"m.text"},"ts":1440507791000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: also, many terms in DOM that are used elsewhere lack export... I guess that's the reason I cannot use them elsewhere...","msgtype":"m.text"},"ts":1440507791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: not a very interesting resolution","msgtype":"m.text"},"ts":1440507834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Nobody has done work.\" \"Let's decide to continue to not do work.\"","msgtype":"m.text"},"ts":1440507871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Film at 11","msgtype":"m.text"},"ts":1440507884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: To be fair, I gave the explicit reason of \"to annoy Anne\"","msgtype":"m.text"},"ts":1440507988000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: meh","msgtype":"m.text"},"ts":1440508006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so apparently <a spec=html for=/> ends up pointing to https://html.spec.whatwg.org/multipage/infrastructure.html#concept-url-origin","msgtype":"m.text"},"ts":1440508022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so it's not quite where I need it to end up","msgtype":"m.text"},"ts":1440508042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: HTML defines two indistinguishable \"origin\" terms.","msgtype":"m.text"},"ts":1440508085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bikeshed, unfortunately, has no way to distinguish between indistinguishable definitions, which is why it throws a fatal error if you try to define such.","msgtype":"m.text"},"ts":1440508110000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`bikeshed refs --text=\"origin\" --type=\"dfn\"`","msgtype":"m.text"},"ts":1440508137000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so they only way to reference all of HTML from Bikeshed is to use an anchors block? Which won't show up in the terms defined by this specification block...","msgtype":"m.text"},"ts":1440508287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML's definitions aren't exported, and they're marked up shittily in the first place (which is why we're not exporting them by default; they'd stomp all over everything)","msgtype":"m.text"},"ts":1440508378000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, they're not marked up at all, and so Shepherd can't do much inference for them.","msgtype":"m.text"},"ts":1440508393000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Their markup isn't shitty for the purpose it was originally intended.","msgtype":"m.text"},"ts":1440508408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The same is true for DOM which you converted...","msgtype":"m.text"},"ts":1440508412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, I *converted* DOM.","msgtype":"m.text"},"ts":1440508429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And forgot to add export et al","msgtype":"m.text"},"ts":1440508437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, yeah, sure.  Want me to fix all that?","msgtype":"m.text"},"ts":1440508446000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I often forget.  I've struggled for some time to figure out a non-annoying way to get Bikeshed to let you know you should export things.)","msgtype":"m.text"},"ts":1440508467000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno, I'd prefer you fix some of the other lingering issues I guess","msgtype":"m.text"},"ts":1440508470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Working on those.","msgtype":"m.text"},"ts":1440508497000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It does suck that HTML is hard to ref. :/","msgtype":"m.text"},"ts":1440508515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Don't know what else I can do, tho - there is literally no way to distinguish between the two \"origin\" terms besides their url.","msgtype":"m.text"},"ts":1440508547000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess the scraper for HTML could use the IDs","msgtype":"m.text"},"ts":1440508606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or we could attempt to change the markup for HTML in some way to accommodate the scraper","msgtype":"m.text"},"ts":1440508635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The latter would be the best, but it's a big job.","msgtype":"m.text"},"ts":1440508765000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We don't need a full conversion or anything, tho, just add some decent markup to the dfns.","msgtype":"m.text"},"ts":1440508787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like for origin, export both and put for=url on one and for=http on the other, or something.","msgtype":"m.text"},"ts":1440508815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or give it lt=\"http origin\"","msgtype":"m.text"},"ts":1440508830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not really HTTP, but I'm not sure what it would be otherwise either","msgtype":"m.text"},"ts":1440508904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's sort of the definition of the core security concept of the web","msgtype":"m.text"},"ts":1440508913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure, I was just going off of the IDs.","msgtype":"m.text"},"ts":1440508965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, I guess that might be the Origin header","msgtype":"m.text"},"ts":1440509028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for=http would make sense there I suppose","msgtype":"m.text"},"ts":1440509038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah yeah, I was thinking of adding a \"header\" definition category. Mike West asked for it.","msgtype":"m.text"},"ts":1440509234000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1440509288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I've established host, hostsyntax, url, and urlsyntax categories btw","msgtype":"m.text"},"ts":1440509311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hm?","msgtype":"m.text"},"ts":1440509334000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"for=urlsyntax and such","msgtype":"m.text"},"ts":1440509350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but maybe you meant something else","msgtype":"m.text"},"ts":1440509363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I meant type=header","msgtype":"m.text"},"ts":1440509379000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<dfn header>Origin</dfn>, that kind of thing","msgtype":"m.text"},"ts":1440509391000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So they're not \"dfn\" type terms.","msgtype":"m.text"},"ts":1440509403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aw","msgtype":"m.text"},"ts":1440509429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jeez, HTML has *three* \"origin\" dfns.","msgtype":"m.text"},"ts":1440509519000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1440509528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"#concept-url-origin, #http-origin, and #origin-2","msgtype":"m.text"},"ts":1440509533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1440509535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also https://html.spec.whatwg.org/multipage/browsers.html#origin","msgtype":"m.text"},"ts":1440509549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, that's the heading","msgtype":"m.text"},"ts":1440509572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"#origin-2 is the definition you want for the core \"origin\" concept.","msgtype":"m.text"},"ts":1440509584000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1440509587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Do you have the ability to fix HTML? We can at least spot-fix things as we go.  Any time you need to put an HTML term in an anchors block, we can fix it in the spec.","msgtype":"m.text"},"ts":1440509788000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, back from holiday, I'll be picking up the PR today. Sorry I didn't get to it before I left!","msgtype":"m.text"},"ts":1440510698000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: no rush!","msgtype":"m.text"},"ts":1440511063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what's the status of URL comparison? came up for the context of @document rule","msgtype":"m.text"},"ts":1440511084000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://url.spec.whatwg.org/#url-equivalence no API yet","msgtype":"m.text"},"ts":1440511114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: if you have specific use cases, I recommend filing issues","msgtype":"m.text"},"ts":1440511133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1440511157000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: looks like some spaces are missing, is that in the source or bikeshed's fault?","msgtype":"m.text"},"ts":1440511256000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: looks like TabAtkins' new serializer's fault :-/","msgtype":"m.text"},"ts":1440511332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sorry, iterating back towards success here.  Almost done!","msgtype":"m.text"},"ts":1440511367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Working on that specific issue right now, since I noticed it in another spec.","msgtype":"m.text"},"ts":1440511565000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I know exactly what's causing it, but I'm trying to fix it without regressing in certain other matters.","msgtype":"m.text"},"ts":1440511576000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: in https://github.com/whatwg/url/issues/62#issuecomment-134530442 do <a>/<area> have non-relative flags?","msgtype":"m.text"},"ts":1440515281000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: I am really concerned by Bikeshed's lack of regression tests... You fix things now, but we have no guarantee they stay fixed :(","msgtype":"m.text"},"ts":1440516159000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess we can start checking out specific bikeshed revisions and using those to build the spec on ci","msgtype":"m.text"},"ts":1440516191000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and only upgrade periodically","msgtype":"m.text"},"ts":1440516223000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Yeah, I (a) need to start producing tagged revisions, and (b) greatly increase my test suite.","msgtype":"m.text"},"ts":1440516677000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sucks having to be a grown-up about this now. ;_;","msgtype":"m.text"},"ts":1440516787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: welcome to my world :-p","msgtype":"m.text"},"ts":1440516932000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Domenic: non-relative flag is a property of a URL, blob URLs would typically have it set","msgtype":"m.text"},"ts":1440518095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, then I don't understand which URL the reset algorithm is consulting the non-relative flag of","msgtype":"m.text"},"ts":1440518421000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: if anyone asks about progress events in fetch, I made a thing. https://gist.github.com/domenic/95e689d0be5e24fb08ec","msgtype":"m.text"},"ts":1440518553000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: s/URL/url/","msgtype":"m.text"},"ts":1440518557000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It looks into the url set in set the input.","msgtype":"m.text"},"ts":1440518568000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: in the new scheme there is no set the input","msgtype":"m.text"},"ts":1440518585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Sorry, I can't hear you from the late train.","msgtype":"m.text"},"ts":1440518602000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: ohh, cheers","msgtype":"m.text"},"ts":1440518903000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: the internal url","msgtype":"m.text"},"ts":1440519109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see","msgtype":"m.text"},"ts":1440519141000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think maybe inlining reset into each algorithm would be clearer tbh.","msgtype":"m.text"},"ts":1440519193000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that's a lot of duplication","msgtype":"m.text"},"ts":1440519553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the main question I have though is whether it would make sense to separate out Location setters","msgtype":"m.text"},"ts":1440519575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: those are so different from all the other setters that it doesn't really make sense to handle them in a single algorithm","msgtype":"m.text"},"ts":1440519594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's one line: if internal url's non-relative flag is not set, let internal url = parse URL using get the base / get the input","msgtype":"m.text"},"ts":1440519595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: separating them out seems very reasonable.","msgtype":"m.text"},"ts":1440519627000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I was anticipating three separate interface definitions","msgtype":"m.text"},"ts":1440519645000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I see","msgtype":"m.text"},"ts":1440519656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I was kind of hoping to keep them together","msgtype":"m.text"},"ts":1440519670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think it's much clearer separate... they act on different \"this\" types","msgtype":"m.text"},"ts":1440519691000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, but it's a lot of redundancy and a new source for bugs","msgtype":"m.text"},"ts":1440519959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1440519968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see basically zero redundancy... they're just different functions","msgtype":"m.text"},"ts":1440519975000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Think about the implementation","msgtype":"m.text"},"ts":1440519985000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes I have :-)","msgtype":"m.text"},"ts":1440519993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No implementation is going to implement this as one class with each algorithm having a three-way switch statement","msgtype":"m.text"},"ts":1440519998000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"They'll have three separate classes","msgtype":"m.text"},"ts":1440520006000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"most of these algorithms don't need a three-way switch","msgtype":"m.text"},"ts":1440520012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g., other getter can be shared across all pretty easily","msgtype":"m.text"},"ts":1440520033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"by just making reset conditional on \"get the input\" as well","msgtype":"m.text"},"ts":1440520053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But that kind of conditional is not fun","msgtype":"m.text"},"ts":1440520064000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Prefer polymorphism over branching","msgtype":"m.text"},"ts":1440520072000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://sourcemaking.com/refactoring/replace-conditional-with-polymorphism","msgtype":"m.text"},"ts":1440520100000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"having a \"reset\" step that is meaningless 2/3 of the time is not great","msgtype":"m.text"},"ts":1440520133000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hard to follow the resulting algorithm","msgtype":"m.text"},"ts":1440520145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so I guess what you'd argue for is that we define them separately in URL and HTML","msgtype":"m.text"},"ts":1440520651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: share them between <a> and <area>","msgtype":"m.text"},"ts":1440520666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: put the members directly on URL.prototype","msgtype":"m.text"},"ts":1440520674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well, that already happens, just through a different technique)","msgtype":"m.text"},"ts":1440520691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess we could do that, it's a bit of duplication, but nothing too bad I suppose","msgtype":"m.text"},"ts":1440520706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that sounds right.","msgtype":"m.text"},"ts":1440520707000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I was kind of hoping we could make these properties more consistent by defining them in a single place, but so far I failed at that, so...","msgtype":"m.text"},"ts":1440520739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just think what we've learned is that they're irreducibly different","msgtype":"m.text"},"ts":1440520845000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Getters for Location/WorkerLocation/URL could still be shared somehow, but IDL doesn't let you define getters and setters separately","msgtype":"m.text"},"ts":1440521154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is bugs.webkit.org really slow for anyone else?","msgtype":"m.text"},"ts":1440524856000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well they're slow to fix the bugs, so… </rimshot>","msgtype":"m.text"},"ts":1440525151000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well yes, I am getting annoyed by a bug first reported in 2008, and still UNCONFIRMED","msgtype":"m.text"},"ts":1440525350000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://bugs.webkit.org/show_bug.cgi?id=18954 specifically","msgtype":"m.text"},"ts":1440525363000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: loads fine here","msgtype":"m.text"},"ts":1440525523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"table[border] { border-style: outset; } /* only if border is not equivalent to zero */\"","msgtype":"m.text"},"ts":1440541292000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Can't that be expressed properly with selectors4's :not() and :has()?","msgtype":"m.text"},"ts":1440541318000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Mmmh, I guess attribute selectors aren't powerful enough.","msgtype":"m.text"},"ts":1440541430000,"senderName":"nox","senderId":"nox@irc"}
]