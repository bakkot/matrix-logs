[
{"content":{"body":"TabAtkins, \"style sheet!!as conformance class, ??\" appears in the css-variables index","msgtype":"m.text"},"ts":1368667733000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hallvors: hi","msgtype":"m.text"},"ts":1368693470000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"hi :)","msgtype":"m.text"},"ts":1368693488000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"thanks for your review!","msgtype":"m.text"},"ts":1368693559000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"wanted to explain a few things about how the organisation of the tests into files etc. ended up like this, and hear from you where we should go with this","msgtype":"m.text"},"ts":1368693586000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"so - as you realized, tests originally came from FF, where they are run all in one","msgtype":"m.text"},"ts":1368693702000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"or in two parts, one for workers, one for document context","msgtype":"m.text"},"ts":1368693714000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"but the test execution is very long, ~3 minutes or so","msgtype":"m.text"},"ts":1368693783000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"webkit layouttests don't support this long execution time","msgtype":"m.text"},"ts":1368693795000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"so i extracted the logic into the xhrtimeout-tests.js (IIRC) - what you called the framework code","msgtype":"m.text"},"ts":1368693819000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"and run it from separate files","msgtype":"m.text"},"ts":1368693828000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"now, there is this groupFromFilename() function that does as the name says, extracts the group of tests that should be run in these split files","msgtype":"m.text"},"ts":1368693890000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"if i understood your feedback correctly, you'd like the code for each file that runs a group of tests to be more close to that file","msgtype":"m.text"},"ts":1368693948000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"but several test.html files share code in the framework, since they each run only a few of a group of similar tests","msgtype":"m.text"},"ts":1368693978000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"so if i unroll/fold-out the groupFromFilename() and put the group to be executed into the files explicitly, we have duplicated the name from the filename to the content of the test - i don't know how much we gain by that","msgtype":"m.text"},"ts":1368694059000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"and the second thing, separating the code out, making it less \"frameworky\" duplicates code too, since each individual test file would need a copy of what's in the xhrtimeout-tests.js","msgtype":"m.text"},"ts":1368694109000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"drott: sorry for not responding, I had some phone calls..","msgtype":"m.text"},"ts":1368694825000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"for most tests, I'd suggest splitting the code into a \"common.js\" file that all test cases load, and a \"testNNN.js\" file that has the code that executes the actual test","msgtype":"m.text"},"ts":1368694964000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"now, I'm not very familiar with workers","msgtype":"m.text"},"ts":1368694985000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"can a worker \"include\" or \"require\" another .js file?","msgtype":"m.text"},"ts":1368695000000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"so do something like this at the top of a test: if(typeof document == 'undefined') require('common.js') ?","msgtype":"m.text"},"ts":1368695034000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"good question re workers and require","msgtype":"m.text"},"ts":1368695056000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#importing-scripts-and-libraries","msgtype":"m.text"},"ts":1368695235000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, so the xhrtimeout-tests.js contains the logic for callbacks etc. - actually running the tests - at the top","msgtype":"m.text"},"ts":1368695274000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"and a lower section that defines the groups","msgtype":"m.text"},"ts":1368695283000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"and which tests to run","msgtype":"m.text"},"ts":1368695289000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"We have importScripts(): http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#dom-workerglobalscope-importscripts","msgtype":"m.text"},"ts":1368695304000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"so most of it is like you suggest \"common.js\" - the rest would be per-test or per-test group","msgtype":"m.text"},"ts":1368695335000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"I think that approach would be simpler for both developers debugging some problem exposed by the tests, and for future maintenance of the tests.","msgtype":"m.text"},"ts":1368695351000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(I was also somewhat concerned about whether the complexity would make tests unstable, but I haven't had time to really investigate that so I don't know.)","msgtype":"m.text"},"ts":1368695412000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Have you run these tests systematically over time somewhere?","msgtype":"m.text"},"ts":1368695433000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"they run as part of the webkit layout tests several tens of times per day","msgtype":"m.text"},"ts":1368695447000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"OK, that sounds good","msgtype":"m.text"},"ts":1368695455000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"To be fair, so do a lot of unstable tests :)","msgtype":"m.text"},"ts":1368695507000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1368695534000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"jgraham: i don't disagree with that - but these ones here are not flaky, they've proven quite reliable","msgtype":"m.text"},"ts":1368695545000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"is there some place to review the results?","msgtype":"m.text"},"ts":1368695550000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"anyway, given that I'll only argue that refactoring is good for debugging and maintenance ;-)","msgtype":"m.text"},"ts":1368695562000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"drott: Good to know :)","msgtype":"m.text"},"ts":1368695572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hallvors: the webkit waterfall has test execution logs, which marks them as \"Passed\", which means, they match the expected result, which has a few PASS lines matching the output of testharness.js","msgtype":"m.text"},"ts":1368695717000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"here's for example a log of the http://build.webkit.org/builders/GTK%20Linux%2064-bit%20Release%20WK2%20%28Tests%29/builds/6753/steps/layout-test/logs/stdio","msgtype":"m.text"},"ts":1368695727000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"GTK build and test run","msgtype":"m.text"},"ts":1368695732000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"you see lines like http/tests/xmlhttprequest/timeout/xmlhttprequest-timeout-simple.html passed","msgtype":"m.text"},"ts":1368695742000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"hallvors: debugging might be a bit easier since you don't have to figure out the launch logic","msgtype":"m.text"},"ts":1368695795000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"hallvors: but maintenance i actually find easier with the approach of just having thin files that you don't need to touch - instead, the logic is in the \"framework\", in one place","msgtype":"m.text"},"ts":1368695827000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"well - imagine that you're not familiar with the setup, and want to add a new test - it's significantly harder if you have to figure out this \"launch logic\" and then search through the files to find groupFromLocation() and then figure out where it gets its data from.. ;-)","msgtype":"m.text"},"ts":1368696036000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"It's also confusing while trying to understand the setup that the RequestTracker constructor is called so many times, because it defines all the objects for each test, even those that won't be used in this test but will be used in others.","msgtype":"m.text"},"ts":1368696118000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: okay, I'll see what I can do","msgtype":"m.text"},"ts":1368696184000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"hallvors: again, thanks for the feedback","msgtype":"m.text"},"ts":1368696196000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"It shouldn't be too hard (I hope) - basically copy the code that defines the arrays in TestRequestGroups into separate \"testNNN.js\" files corresponding to the HTML files..","msgtype":"m.text"},"ts":1368696248000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"add an importScripts statement for the worker case","msgtype":"m.text"},"ts":1368696264000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: maybe along with the requestTracker (and other objects) that each of them needs","msgtype":"m.text"},"ts":1368696274000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"no, the RequestTracker definition should be in common.js","msgtype":"m.text"},"ts":1368696298000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"the class","msgtype":"m.text"},"ts":1368696305000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1368696306000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"IMHO","msgtype":"m.text"},"ts":1368696311000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"but the instances could move into NN.js","msgtype":"m.text"},"ts":1368696314000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1368696321000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"alright","msgtype":"m.text"},"ts":1368696342000,"senderName":"drott","senderId":"drott@irc"},
{"content":{"body":"so somebody not familiar with the tests looks at timeout-twice.html, sees link to timeout-twice.js, and gets the three RequestTracker instance definitions instantly","msgtype":"m.text"},"ts":1368696422000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"and thank you for listening and discussing this feedback :)","msgtype":"m.text"},"ts":1368696567000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hello nimbu :)","msgtype":"m.text"},"ts":1368696608000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"gsnedders: Where do I put this example? I want to fix this -> http://www.bpaste.net/show/OHlEpp27lbdawO2thfbR/","msgtype":"m.text"},"ts":1368697603000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"WTF. When did we break that?","msgtype":"m.text"},"ts":1368697666000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sighs","msgtype":"m.emote"},"ts":1368697668000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Definitely a 1.0 blocker ;-)","msgtype":"m.text"},"ts":1368697686000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: so, where does the example go? http://www.bpaste.net/show/clrC8KkPoLQ385vnwDEN/","msgtype":"m.text"},"ts":1368697876000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"drott: Sorry for the spam","msgtype":"m.text"},"ts":1368698805000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hello there, James!","msgtype":"m.text"},"ts":1368698841000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"jgraham: gsnedders: can you scroll through the slides to see whether everything's fine? https://dl.dropboxusercontent.com/u/4830253/html5lib.pdf","msgtype":"m.text"},"ts":1368699656000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: You just need to change the test harness so it doesn't outright ignore tests the cause DataLossWarning. Like, they should have a pass condition of \"does not raise an exception\".","msgtype":"m.text"},"ts":1368699985000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ambv: Instead of the current situation of \"DataLossWarning? Well, we'll ignore you entirely\"","msgtype":"m.text"},"ts":1368700007000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Implementor comments sought: is it hard to allow XHR overrideMimeType() to fix content type / encoding info in HEADERS_RECEIVED mode?","msgtype":"m.text"},"ts":1368700032000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ambv: I'm always dubious about using affiliations for open source projects, but if you do, get the (current) Opera logo! http://business.opera.com/press/resources has it in all kinds of formats.","msgtype":"m.text"},"ts":1368700094000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ambv: Also has several vector formats, which is probably a good idea","msgtype":"m.text"},"ts":1368700114000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, I don't really know to what extent this is an \"Opera\" thing","msgtype":"m.text"},"ts":1368700147000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Somehow I missed the fact that you're using a four-year-old logo","msgtype":"m.text"},"ts":1368700173000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean, both of us were working on it pre-Opera","msgtype":"m.text"},"ts":1368700220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Could be nice to have an example of using html5lib other than a blurry screenshot of the documentation","msgtype":"m.text"},"ts":1368700245000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since you have lots of examples of using !html5lib","msgtype":"m.text"},"ts":1368700256000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: haha, sure.","msgtype":"m.text"},"ts":1368700291000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"On the lxml slide \"It's a C extension\" should probably be \"lxml is a C extension\"","msgtype":"m.text"},"ts":1368700326000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: raising on DataLossWarning breaks 98 tests currently","msgtype":"m.text"},"ts":1368700346000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: Yay.","msgtype":"m.text"},"ts":1368700370000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's not surprising; it was used to hide things that simply aren't supported in some treebuilders iirc","msgtype":"m.text"},"ts":1368700452000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: https://github.com/jsocol/bleach/blob/master/bleach/sanitizer.py","msgtype":"m.text"},"ts":1368700469000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Maybe a more pragmatic approach for now would be to fix the direct issue (fun fact: it works on 3.2+ and PyPy)","msgtype":"m.text"},"ts":1368700517000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"jgraham: If something didn't get lost in communication, 98 tests raise exceptions (not warnings) whilewarning DataLossWarning.","msgtype":"m.text"},"ts":1368700726000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: We should never throw an exception, we should just not check what tree we get","msgtype":"m.text"},"ts":1368700743000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tests/test_parser.py catch DataLossWarnings as exceptions and ignore them which means such tests don't ever run anything useful","msgtype":"m.text"},"ts":1368700887000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: duh, the bug is really basic","msgtype":"m.text"},"ts":1368701131000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"unicode_literals means that the second argument in hex(123).rjust(5, \"0\") is unicode, should be bytes","msgtype":"m.text"},"ts":1368701183000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"I was guessing it was something stupid.","msgtype":"m.text"},"ts":1368701199000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yay, another case where we want the native str type, whatever that is","msgtype":"m.text"},"ts":1368701233000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'll just fix that up, but we lack a test for escapeChar and friends","msgtype":"m.text"},"ts":1368701240000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Would \"%05x\" not do the right thing?","msgtype":"m.text"},"ts":1368701286000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which seems simpler than hacking around with string types.","msgtype":"m.text"},"ts":1368701297000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, I was going","msgtype":"m.text"},"ts":1368701335000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"to try that","msgtype":"m.text"},"ts":1368701337000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"but \"%05x\" is still unicode with unicode literals ;-)","msgtype":"m.text"},"ts":1368701350000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Do we not want that?","msgtype":"m.text"},"ts":1368701359000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ambv: Everything in/out of there should be unicode","msgtype":"m.text"},"ts":1368701400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"        replacement = (\"U%05x\" % (ord(char),)).upper()","msgtype":"m.text"},"ts":1368701503000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Why not just %05X?","msgtype":"m.text"},"ts":1368701535000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"because I forgot it exists. ha.","msgtype":"m.text"},"ts":1368701633000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"but I want a test for that breaking example I pasted you just for regressions.","msgtype":"m.text"},"ts":1368701643000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"I expect that's the only issue breaking all the DataLossWarning hidden problems?","msgtype":"m.text"},"ts":1368701669000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the only one we're aware of at the moment","msgtype":"m.text"},"ts":1368701690000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":";-)","msgtype":"m.text"},"ts":1368701695000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Would be worth trying to see how much effort it is to fix any exception raised, currently hidden behind DataLossWarning.","msgtype":"m.text"},"ts":1368701718000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because we have tests that will hit that exact case.","msgtype":"m.text"},"ts":1368701729000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes, but let me do that after 1.0b1","msgtype":"m.text"},"ts":1368701935000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"has Flake fail on master, and wonders how that never showed up before","msgtype":"m.emote"},"ts":1368701943000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"we should have flake invocations converted to Bash scripts so that I can connect them to tox","msgtype":"m.text"},"ts":1368701992000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"this way I'll be running them everytime locally","msgtype":"m.text"},"ts":1368702002000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Oh, merge broke it somehow. :(","msgtype":"m.text"},"ts":1368702027000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ambv: That's been on my to-do list for a while :P","msgtype":"m.text"},"ts":1368702293000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Sure thing.","msgtype":"m.text"},"ts":1368702308000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"Now only a test to check we don't have a regression. It's tricky ;-)","msgtype":"m.text"},"ts":1368702358000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"http://www.bpaste.net/show/Na6TZMB4H6PkT1Wype11/","msgtype":"m.text"},"ts":1368702359000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"jgraham: https://critic.hoppipolla.co.uk/5056ff57?review=106","msgtype":"m.text"},"ts":1368702385000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: (it's a single CHANGELOG entry)","msgtype":"m.text"},"ts":1368702394000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders how tests have got so much slower","msgtype":"m.emote"},"ts":1368702543000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nah, I'm just imagining them being quicker :P","msgtype":"m.text"},"ts":1368702826000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"PULLDOM Y U SO MEAN! http://www.bpaste.net/show/8ePI4jZLClouWS6Ua106/","msgtype":"m.text"},"ts":1368703248000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"zcorpan: you there?","msgtype":"m.text"},"ts":1368703325000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: yes","msgtype":"m.text"},"ts":1368703333000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: have you made a publication snapshot of the diffs doc?","msgtype":"m.text"},"ts":1368703346000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: no, but i can do it now","msgtype":"m.text"},"ts":1368703359000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I can't see to see it in GH or CVS","msgtype":"m.text"},"ts":1368703361000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that would be wunderbar","msgtype":"m.text"},"ts":1368703365000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"what's the date?","msgtype":"m.text"},"ts":1368703371000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"2805","msgtype":"m.text"},"ts":1368703375000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"heh, and people were upset about 2022!","msgtype":"m.text"},"ts":1368703416000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1368703428000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"what does Google Play Music All Access use for playing music on the Web? Chrome-only? Cross-browser?","msgtype":"m.text"},"ts":1368703853000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i don't recall what command i should use to specify a date for make... but i can fix it up manually","msgtype":"m.text"},"ts":1368703947000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"figured it out","msgtype":"m.text"},"ts":1368704087000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"make tr PUBDATE=\"28 May 2013\"","msgtype":"m.text"},"ts":1368704098000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"darobin: https://rawgithub.com/whatwg/html-differences/master/TR.html","msgtype":"m.text"},"ts":1368704511000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you're a star, thanks!","msgtype":"m.text"},"ts":1368704607000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I wish all editors were like you :)","msgtype":"m.text"},"ts":1368704612000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"i try not to imagine what the implications of that would be :-P","msgtype":"m.text"},"ts":1368704732000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: well, except for the bit where you used <hgroup> :)","msgtype":"m.text"},"ts":1368704795000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh, is that not OK?","msgtype":"m.text"},"ts":1368704942000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"are w3c specs only allowed to use w3c html5?","msgtype":"m.text"},"ts":1368704965000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, they use what the validator says is good","msgtype":"m.text"},"ts":1368705132000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but that's not a big deal, I just replaced it","msgtype":"m.text"},"ts":1368705141000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"i'll fix it anyway","msgtype":"m.text"},"ts":1368705181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i see the w3c html spec uses <p> for the subheading","msgtype":"m.text"},"ts":1368705192000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ambv: Will push out 1.0b1 some time after lunch","msgtype":"m.text"},"ts":1368705346000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Speaking of which, to lunch!","msgtype":"m.text"},"ts":1368705351000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no no no!","msgtype":"m.text"},"ts":1368705356000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: push it with this -> https://github.com/html5lib/html5lib-python/pull/51","msgtype":"m.text"},"ts":1368705370000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"That being said, bon appetit!","msgtype":"m.text"},"ts":1368705541000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"darobin: fixed","msgtype":"m.text"},"ts":1368705688000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ambv: Follow style elsewhere and don't use a tuple with a single item (i.e., use `\"…\" % ord(…)`)","msgtype":"m.text"},"ts":1368705694000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: super, thanks!","msgtype":"m.text"},"ts":1368705703000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: using <p> for the subheading is a very recent addition","msgtype":"m.text"},"ts":1368705719000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's from Steve's work on replacing hgroup","msgtype":"m.text"},"ts":1368705732000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"ambv: And if all tests pass with that with DataLossWarning not hiding exceptions, I'd much rather change test_parser.py than adding another test.","msgtype":"m.text"},"ts":1368705735000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think only the HTML spec uses that at the moment","msgtype":"m.text"},"ts":1368705739000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: yeah","msgtype":"m.text"},"ts":1368705753000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: I will change the styling as you wish. Just note that in general leaving out the tuple is incorrect (what if your single element ends up being a tuple?).","msgtype":"m.text"},"ts":1368705817000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: as for the test, putting this in html5lib-tests breaks PullDOM as seen here -> http://www.bpaste.net/show/8ePI4jZLClouWS6Ua106/ and I don't want to deal with that just now","msgtype":"m.text"},"ts":1368705868000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: Yeah, I know that it's wrong in general.","msgtype":"m.text"},"ts":1368712654000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The tests failed on Travis, lemme just fix it up.","msgtype":"m.text"},"ts":1368712675000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: can I easily commit stuff on submodules? I mean, I have a clone of a submodule but I changed some test data in the html5lib working copy to see if they work at all","msgtype":"m.text"},"ts":1368712781000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"what's your workflow for that case?","msgtype":"m.text"},"ts":1368712793000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: Is there a nice submodule workflow given GitHub's permission mode?","msgtype":"m.text"},"ts":1368713093000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"this is why I'm asking. I hardly ever use submodules because of that.","msgtype":"m.text"},"ts":1368713119000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/xhr/pull/6","msgtype":"m.text"},"ts":1368713172000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ambv: If we change the submodule to be GitHub over HTTP you can checkout master in there and commit/push in it","msgtype":"m.text"},"ts":1368713755000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which is probably better","msgtype":"m.text"},"ts":1368713759000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1368713780000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: in related news, I fixed the failing tests","msgtype":"m.text"},"ts":1368713816000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"gsnedders: and Travis agrees, it works. https://github.com/html5lib/html5lib-python/pull/51","msgtype":"m.text"},"ts":1368714592000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: Does your test actually check that you get the right tree?","msgtype":"m.text"},"ts":1368714671000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: for that I have another test that goes in html5lib-tests","msgtype":"m.text"},"ts":1368714721000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"because I want to test whether the tree is good regardless of the builder","msgtype":"m.text"},"ts":1368714749000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"currently it fails for PullDOM (where the \"xml:\" prefix is discarded) which is why I don't want to have it in just now","msgtype":"m.text"},"ts":1368714794000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"jgraham: sof's bug seems to be hidden by DataLossWarning currently, BTW","msgtype":"m.text"},"ts":1368714835000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: here's the test - https://github.com/html5lib/html5lib-tests/pull/6 we'll merge it when I fix PullDOM but this will be after DjangoCon","msgtype":"m.text"},"ts":1368714998000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"(unless you do it first, of course :))","msgtype":"m.text"},"ts":1368715014000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: OK, fine, might want a comment to that effect","msgtype":"m.text"},"ts":1368715018000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Should it not be the ihatexml name?","msgtype":"m.text"},"ts":1368715037000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i.e., the infoset coerction name?","msgtype":"m.text"},"ts":1368715044000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: what are you referring to?","msgtype":"m.text"},"ts":1368715091000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"\"So, largely, implementations don't let you do cross-origin XHR auth at all..\" I recall saying exactly that. Good it's backed up by tests though.","msgtype":"m.text"},"ts":1368715142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ambv: https://github.com/html5lib/html5lib-tests/blob/master/tree-construction/tests14.dat#L34 seems to test xml:lang in HTML already?","msgtype":"m.text"},"ts":1368715156000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so it has to be cancelled out by catching DataLossWarning","msgtype":"m.text"},"ts":1368715182000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"I don't think PullDOM can repesent xml:lang as an attribute?","msgtype":"m.text"},"ts":1368715222000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what should we do with it then? skip the test for PullDOM? make it an expected failure? the test autogeneration doesn't seem to support this now.","msgtype":"m.text"},"ts":1368715265000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: Where did you add the catching warnings? test_parser.py?","msgtype":"m.text"},"ts":1368715526000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because with your fix I'm only seeing six more failures, and that tempts me to fix them all now.","msgtype":"m.text"},"ts":1368715541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"in the test itself","msgtype":"m.text"},"ts":1368715561000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"https://github.com/ambv/html5lib-python/commit/add2c558a1c27e8237e2501c3850c178966ad0ee","msgtype":"m.text"},"ts":1368715582000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"this way when the warning goes away in the future, we will have a failure and know that something changed","msgtype":"m.text"},"ts":1368715601000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"jgraham: ihateihatexml","msgtype":"m.text"},"ts":1368716316000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"We all do. But less than we hate xml","msgtype":"m.text"},"ts":1368716389000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which didn't have to have all these stupid limitations","msgtype":"m.text"},"ts":1368716403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: jgraham: I'm doing the LT tomorrow at 5:00 PM CEST, it would be great if 1.0b1 is up by then.","msgtype":"m.text"},"ts":1368717470000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"tell me if you need anything else","msgtype":"m.text"},"ts":1368717478000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"jgraham: What's the best approach for coercing public and system ids?","msgtype":"m.text"},"ts":1368718223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Note the allowed set of chars differs between single and double quoted strings","msgtype":"m.text"},"ts":1368718235000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, you called yesterday?","msgtype":"m.text"},"ts":1368718235000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Get my email?","msgtype":"m.text"},"ts":1368718243000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1368718247000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1368718251000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: In that \" isn't allowed if it's double quoted and ' isn't allowed if it's single quoted?","msgtype":"m.text"},"ts":1368718474000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yes.","msgtype":"m.text"},"ts":1368718745000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aaronpk I heard about the Google's \"email actions\" but hadn't seen the details til that link","msgtype":"m.text"},"ts":1368718773000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"oops wrong channel","msgtype":"m.text"},"ts":1368718785000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jgraham: Well, a PubidLiteral can never contain \"","msgtype":"m.text"},"ts":1368719446000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: But ' is allowed when double quoted, but not when single quoted.","msgtype":"m.text"},"ts":1368719463000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't remember how doctype and lxml work off the top of my head. I have recollections of a terrible hack","msgtype":"m.text"},"ts":1368719566000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: We serialize the doctype as XML then parse it","msgtype":"m.text"},"ts":1368719610000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I was hoping that I had misremembered :(","msgtype":"m.text"},"ts":1368719660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So always double quoting and escaping any remaining invalid cahracters in the normal way should be enough?","msgtype":"m.text"},"ts":1368719714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Escaping meaning what?","msgtype":"m.text"},"ts":1368719725000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: You cannot escape characters in pubid/sysid","msgtype":"m.text"},"ts":1368719742000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The U+12345 stuff","msgtype":"m.text"},"ts":1368719761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1368719816000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's either that or drop the characters I guess","msgtype":"m.text"},"ts":1368719851000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think this is a little better","msgtype":"m.text"},"ts":1368719878000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or return it quoted from ihatexml","msgtype":"m.text"},"ts":1368719880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which at least allows it somewhat.","msgtype":"m.text"},"ts":1368719892000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Return waht quoted?","msgtype":"m.text"},"ts":1368719927000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Have coercePubid(value) return the quoted value.","msgtype":"m.text"},"ts":1368720569000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: boom. https://github.com/html5lib/html5lib-python/pull/52","msgtype":"m.text"},"ts":1368720961000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"ambv: There's an identical commit on the dom2sax PR :)","msgtype":"m.text"},"ts":1368721659000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"dang","msgtype":"m.text"},"ts":1368721676000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"heycam|away: Yeah, I need to just remove those dfns from my boilerplate.  They don't seem to accomplish anything, and they clutter up the index.","msgtype":"m.text"},"ts":1368724443000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And are the only instance of \"sub-terms\" in most specs, which is what the !! thing is about.)","msgtype":"m.text"},"ts":1368724461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: in unrelated news, sanitizer fails for a document like \"<p><script>alert('Boo!')</script>Surprise!\"","msgtype":"m.text"},"ts":1368728111000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"serialization breaks with TypeError: unhashable type: 'slice' on line 183 of html5lib/sanitizer.py","msgtype":"m.text"},"ts":1368728151000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"will look into it later","msgtype":"m.text"},"ts":1368728156000,"senderName":"ambv","senderId":"ambv@irc"},
{"content":{"body":"dglazkov: ping?","msgtype":"m.text"},"ts":1368736821000,"senderName":"mrbkap","senderId":"mrbkap@irc"}
]