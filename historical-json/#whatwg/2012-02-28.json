[
{"content":{"body":"(just wondering, since I don't how that works)","msgtype":"m.text"},"ts":1330387200000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: there's no hard-and-fast rule, I'd say.","msgtype":"m.text"},"ts":1330387201000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1330387260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aklein: I started to think about this when the DRM proposal was posted... I could imagine some developers are against it and some aren't","msgtype":"m.text"},"ts":1330387261000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"drawing text _to_ a path isn't that useful if you can't fiddle with the path more than just adding stuff...","msgtype":"m.text"},"ts":1330387320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though, perhaps DRM will go to Chrome only, if even there","msgtype":"m.text"},"ts":1330387321000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: you okay with removing that readystatechange event?","msgtype":"m.text"},"ts":1330387380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: see public-webapps archive","msgtype":"m.text"},"ts":1330387440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: from where?","msgtype":"m.text"},"ts":1330387441000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the one that doesn't change state and is dispatched at the beginning of the send() method","msgtype":"m.text"},"ts":1330387442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XHR baby","msgtype":"m.text"},"ts":1330387443000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"smaug____: doesn't signal change","msgtype":"m.text"},"ts":1330387444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hot","msgtype":"m.text"},"ts":1330387445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I need to look at bugzilla","msgtype":"m.text"},"ts":1330387500000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"my condolences","msgtype":"m.text"},"ts":1330387560000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think it has been used for something","msgtype":"m.text"},"ts":1330387561000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: The addHitRegion sketch looks okay.","msgtype":"m.text"},"ts":1330387680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Why distinguish between elements and ids?  Can't you just discriminate by type already, and fuse the two together?","msgtype":"m.text"},"ts":1330387681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I'm assuming that one would never use an Element as an id for their object.)","msgtype":"m.text"},"ts":1330387682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: please do","msgtype":"m.text"},"ts":1330387740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can't find anything right now","msgtype":"m.text"},"ts":1330387920000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1330387921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you find something let the list know","msgtype":"m.text"},"ts":1330387980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I'll make the change soonish","msgtype":"m.text"},"ts":1330387981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, so the first event is dispatched in open()","msgtype":"m.text"},"ts":1330388040000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"horrible API","msgtype":"m.text"},"ts":1330388100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1330388101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"open changes from UNSENT to OPEN","msgtype":"m.text"},"ts":1330388102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, ok","msgtype":"m.text"},"ts":1330388103000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"would be good to get feedback from MS","msgtype":"m.text"},"ts":1330388160000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: yeah, that's not a bad idea","msgtype":"m.text"},"ts":1330389420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: hmm","msgtype":"m.text"},"ts":1330389480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what would you call the field?","msgtype":"m.text"},"ts":1330389481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm...","msgtype":"m.text"},"ts":1330389780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"refersTo","msgtype":"m.text"},"ts":1330389781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"actually, given the various weird ways these things interact, i think it's fine to have two fields","msgtype":"m.text"},"ts":1330389960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not like merging those two would make it magically nicer","msgtype":"m.text"},"ts":1330390020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it'd still be a mess of interdependencies","msgtype":"m.text"},"ts":1330390021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I suppose, it just means you have to deal with the results when people specify both of them.","msgtype":"m.text"},"ts":1330390080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Alternately, why can't someone specify both of them?","msgtype":"m.text"},"ts":1330390140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Getting both a target and a hitid or whatever on the mouseevent?","msgtype":"m.text"},"ts":1330390141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This might be useful if you've got an object backing some fancy behavior on your input.","msgtype":"m.text"},"ts":1330390142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you give an element, i'm thinking i should redirect the events to the element","msgtype":"m.text"},"ts":1330390200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or at least duplicate events to the element","msgtype":"m.text"},"ts":1330390201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if i duplicate i guess you can have an id also","msgtype":"m.text"},"ts":1330390202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but there's plenty of other nonsensical combinations","msgtype":"m.text"},"ts":1330390260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. an element and a label, or an element and a role","msgtype":"m.text"},"ts":1330390261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or a parentid that doens't exist, or a parentid and an element, or parentid and no role...","msgtype":"m.text"},"ts":1330390262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ooh, here's a use-case. You want to do a text input with a button in it for bringing up a unique input helper, sorta like how type=date is handled in some places.","msgtype":"m.text"},"ts":1330390380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You want the button to have a parentid pointing to the input.","msgtype":"m.text"},"ts":1330390381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So you need to give the input's hittesting zone an id.","msgtype":"m.text"},"ts":1330390382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or else pass an Element as a parentid.","msgtype":"m.text"},"ts":1330390383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you lost me at \"text input\" :-)","msgtype":"m.text"},"ts":1330391100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1330391101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you have a good point","msgtype":"m.text"},"ts":1330391102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure how the ATs would handle that...","msgtype":"m.text"},"ts":1330391103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Canvas#Path_primitives","msgtype":"m.text"},"ts":1330392060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder how to modify fillText() and strokeText() to make it easier to find text on canvas","msgtype":"m.text"},"ts":1330392540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at first glance adding an ARIA role argument seems obvious, but in practice there's never really an appropriate role for that kind of thing","msgtype":"m.text"},"ts":1330392600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"adding a boolean argument \"yes make this text into a region implicitly\" seems a bit non-intuitive","msgtype":"m.text"},"ts":1330392601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's the behaviour one really wants","msgtype":"m.text"},"ts":1330392602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Also: boolean args are the devil.","msgtype":"m.text"},"ts":1330392603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's what i mean by non-intuitive","msgtype":"m.text"},"ts":1330392604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just add an options object. YOU KNOW YOU WANT TO.","msgtype":"m.text"},"ts":1330392605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(or do boolean args have other problems?)","msgtype":"m.text"},"ts":1330392606000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"An anonymous bool floating around in your call signature is unreadable.","msgtype":"m.text"},"ts":1330392660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's the only problem.","msgtype":"m.text"},"ts":1330392661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, optional args are usually the devil.","msgtype":"m.text"},"ts":1330392662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fillText('April', 230, 55, { generateImplicitRegion: true })","msgtype":"m.text"},"ts":1330392663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...seems like a non-starter to me","msgtype":"m.text"},"ts":1330392664000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Except for the name, sure.","msgtype":"m.text"},"ts":1330392665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nothin' wrong with boolean arguments :)","msgtype":"m.text"},"ts":1330392720000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(was: re: we've had that discussion)","msgtype":"m.text"},"ts":1330392721000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"That sentence was typed before your last sentence.  Treat it as the opposite if you want to read it in the provided context.","msgtype":"m.text"},"ts":1330392722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: tell that to the initMouseEvent() method","msgtype":"m.text"},"ts":1330392723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: heh","msgtype":"m.text"},"ts":1330392724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe the default should be to generate a region, and so you'd have to say:","msgtype":"m.text"},"ts":1330392725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that has nothing to do with booleans; foo(0, 1, 0, 0, 1, 0, 1) is just as unreadable","msgtype":"m.text"},"ts":1330392726000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"fillText('April', 230, 55, { generateImplicitRegion: false })","msgtype":"m.text"},"ts":1330392780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: yeah series of numeric arguments are equally bad","msgtype":"m.text"},"ts":1330392781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or nullables","msgtype":"m.text"},"ts":1330392782000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yes. But virtually anyting else is at least *somewhat* more likely to imply a context than a bool.","msgtype":"m.text"},"ts":1330392783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: That would meant that J. Clueless Coder generates a ton of regions for their manual text shadow.  That okay?","msgtype":"m.text"},"ts":1330392840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...to continue my train of thought: then it doesn't matter if it's ugly","msgtype":"m.text"},"ts":1330392841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: unclear","msgtype":"m.text"},"ts":1330392842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: i'm guessing it's suboptimal, certainly","msgtype":"m.text"},"ts":1330392843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: might be better than nothing","msgtype":"m.text"},"ts":1330392844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Probably.  I suspect the vast majority of text is okay for this.","msgtype":"m.text"},"ts":1330392845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: if they exactly overlap then the regions would get obliterated by each other","msgtype":"m.text"},"ts":1330392846000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"They won't, in general - the point of a text-shadow is that you can see pixels of it around the text.","msgtype":"m.text"},"ts":1330392900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"one thing that would be weird with this is that it means AT users get more data than visual users in cases where lots of text is drawn almost overlapping","msgtype":"m.text"},"ts":1330392901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since AT users could read even the overlapped text","msgtype":"m.text"},"ts":1330392902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That seems like a good problem to have.","msgtype":"m.text"},"ts":1330392903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah i'm certainly not crying about it","msgtype":"m.text"},"ts":1330392904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just an interesting effect to consider","msgtype":"m.text"},"ts":1330392960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe 'decorative' for the argument name?","msgtype":"m.text"},"ts":1330392961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"probably about as clear as \"generateImpliedRegion\", and certainly cleaner...","msgtype":"m.text"},"ts":1330392962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's easy to explain it, and to use it religiously without knowing its intent.","msgtype":"m.text"},"ts":1330393020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is a good property for this kind of thing, I think.","msgtype":"m.text"},"ts":1330393080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do you mean \"use it religiously without knowing its intent\"?","msgtype":"m.text"},"ts":1330393200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i kinda expect that whatever we call it, 50% of usage will be wrong","msgtype":"m.text"},"ts":1330393201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's better than 100% of usage being inaccessible","msgtype":"m.text"},"ts":1330393202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You don't need to know a damned thing about AT and clickable regions to understand what someone means when they say \"use it on text that's purely decorative, not meant to be read\".","msgtype":"m.text"},"ts":1330393203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As opposed to generateImplicitRegion, where you must first understand what a region is, why one may be generated implicitly, and in what case you want to suppress that.","msgtype":"m.text"},"ts":1330393260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(\"text that isn't meant to be read\" is sort of a tricky concept, heh)","msgtype":"m.text"},"ts":1330393320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"eula","msgtype":"m.text"},"ts":1330393321000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Heh, yeah.  But with a simple example like text-shadow, I think it's obvious what's meant.","msgtype":"m.text"},"ts":1330393322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or, like, drawing lots of text on a background just as a visual effect.","msgtype":"m.text"},"ts":1330393323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah that's fair enough","msgtype":"m.text"},"ts":1330393620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok bbl","msgtype":"m.text"},"ts":1330393680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Also, I couldn't come up with an equally simple/short way to say the opposite in an option name.","msgtype":"m.text"},"ts":1330393681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: dunno if you around, but about the security issue of pywebsocket being able to run arbitrary python code, that's only true of the standalone.py thing, as far as I can see","msgtype":"m.text"},"ts":1330396860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because it uses CGIHTTPServer","msgtype":"m.text"},"ts":1330396920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but what I have installed on w3c-test.org is run through Apache+mod_python","msgtype":"m.text"},"ts":1330397160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: just sent comments on your wording of the vars syntax issue","msgtype":"m.text"},"ts":1330398780000,"senderName":"nattokirai","senderId":"nattokirai@irc"},
{"content":{"body":"New to the IRC, I understand from the Web site this is an alternative to W3C and a living version of HTML5. I'd like to ask a question on coding on a very simple Web site I use for bookmarks. How does one now \"float:right\" (from the old align) an image? Is ... style=\"width:88px;height:31px;float:right\" src=... alt=\"...\"> the correct syntax? TIA.","msgtype":"m.text"},"ts":1330399800000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"did you try it","msgtype":"m.text"},"ts":1330399860000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"yes, and it works, but I'm not sure if that is the correct format.","msgtype":"m.text"},"ts":1330399861000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"Just trying to make my template complete.","msgtype":"m.text"},"ts":1330399920000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"w2xq.com, StoneCypher.","msgtype":"m.text"},"ts":1330400040000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"honestly","msgtype":"m.text"},"ts":1330400041000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"if you can't even look up how a property is written","msgtype":"m.text"},"ts":1330400042000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"prolly not the time to be making re-usable templates","msgtype":"m.text"},"ts":1330400043000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"I have looked it up, numerous places, but I guess I haven't found the right site to answer the questions. I first started coding in 1993, but haven't kept up after closing my p/t biz in 1998.","msgtype":"m.text"},"ts":1330400160000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"cool story.","msgtype":"m.text"},"ts":1330400161000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"try the css documentation","msgtype":"m.text"},"ts":1330400162000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"20 years should be enough to pick up on where to look, honestly","msgtype":"m.text"},"ts":1330400220000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"w2xq: correct syntax.","msgtype":"m.text"},"ts":1330400221000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"bought/been reading \"CSS3\" by Teague.","msgtype":"m.text"},"ts":1330400222000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"Thank you karlcow.","msgtype":"m.text"},"ts":1330400223000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"no you haven't.","msgtype":"m.text"},"ts":1330400224000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"StoneCypher: no need to be arrogant, just ignore if you don't think you want to answer.","msgtype":"m.text"},"ts":1330400225000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"sighs","msgtype":"m.emote"},"ts":1330400280000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1330400281000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Stonecypher, sorry to insult you, just trying to get back up to reasonable speed.","msgtype":"m.text"},"ts":1330400282000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"no you aren't","msgtype":"m.text"},"ts":1330400283000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"but karlcow the enforcer is here to sling insults","msgtype":"m.text"},"ts":1330400284000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"so have fun","msgtype":"m.text"},"ts":1330400285000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"<sigh>","msgtype":"m.text"},"ts":1330400286000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"\"I've been reading this book on physics.  What's a particle again?  I need to work on my full matter simulation.  Don't be arrogant, just ignore me\"","msgtype":"m.text"},"ts":1330400340000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Thanks again karlcow. gn","msgtype":"m.text"},"ts":1330400460000,"senderName":"w2xq","senderId":"w2xq@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1330400520000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Is this used in a surprising way or is this just very incomplete? https://github.com/h5bp/html5please-api/blob/master/agents.json","msgtype":"m.text"},"ts":1330411320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: divya would be the one to ask I suppose","msgtype":"m.text"},"ts":1330411500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"op_mini and op_mob seem to have their sniffers swapped","msgtype":"m.text"},"ts":1330411620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: call it ariaHidden:true","msgtype":"m.text"},"ts":1330413060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"interesting idea","msgtype":"m.text"},"ts":1330413061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: In that case, it sounds excellent","msgtype":"m.text"},"ts":1330415400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hey","msgtype":"m.text"},"ts":1330415401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"one caveat is that it's not actually in Debian testing yet, so hasn't gone through Debian security review","msgtype":"m.text"},"ts":1330415460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but there are no open Debian bugs around it","msgtype":"m.text"},"ts":1330415461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see. I could only find one documented exploit on the web, and that seemed to be fixed","msgtype":"m.text"},"ts":1330415520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1330415521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the Jetty version I have installed now is more likely to have security bugs than that python stuff","msgtype":"m.text"},"ts":1330415522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the only version of Jetty packaged for Debian is version 6 something","msgtype":"m.text"},"ts":1330415523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it's more than a year old","msgtype":"m.text"},"ts":1330415580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe two years old","msgtype":"m.text"},"ts":1330415581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and doesn't have WebSocket support at all, let alone any up to date with the current protocol spec","msgtype":"m.text"},"ts":1330415582000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I had to install 7.6 from a .deb at http://repo2.maven.org/maven2/org/mortbay/jetty/dist/jetty-deb/","msgtype":"m.text"},"ts":1330415700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i hate it when this happens. https://github.com/h5bp/html5please-api/issues/53","msgtype":"m.text"},"ts":1330415701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"how does github even manage to get *that*?","msgtype":"m.text"},"ts":1330415702000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ?","msgtype":"m.text"},"ts":1330415760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what i wrote was:","msgtype":"m.text"},"ts":1330415761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what you did?","msgtype":"m.text"},"ts":1330415762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"html\": \"&shy;<style>....... <\\/style><div class=\\\"caniuse\\\">....\"","msgtype":"m.text"},"ts":1330415763000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"This is invalid HTML. Why the &shy;? Since the next thing is a block box, it doesn't do anything anyway.","msgtype":"m.text"},"ts":1330415764000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It should be more like:","msgtype":"m.text"},"ts":1330415765000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"html\": \"<div class=\\\"caniuse\\\"><style scoped>....... <\\/style>....\"","msgtype":"m.text"},"ts":1330415766000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In unrelated questions about github, how do they think that swallowing the / key for their own search is acceptable?","msgtype":"m.text"},"ts":1330415820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: weird","msgtype":"m.text"},"ts":1330415821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"github--","msgtype":"m.text"},"ts":1330415822000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: ah they will get flamed for that","msgtype":"m.text"},"ts":1330415823000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Thanks for doing all the hard work for the WebSockets stuff btw","msgtype":"m.text"},"ts":1330415880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Maybe they thought \"Google Code's issue tracker already intercepts '/' and irritates Opera users hugely, why shouldn't we do the same\"","msgtype":"m.text"},"ts":1330415881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Alexis was doing that with the control-f key on caniuse.com but he finally changed it. which, glad he did because it was fucking annoying","msgtype":"m.text"},"ts":1330415882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Philip`: It's not just opera, it's also Firefox","msgtype":"m.text"},"ts":1330415940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"has always used Ctrl+F when using Firefox, for some unknown reason","msgtype":"m.emote"},"ts":1330415941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In fact Opera is a little better because you can use . instead. Although it is annoying to have to remember to switch of course","msgtype":"m.text"},"ts":1330416000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: didn't do much so far. though Jetty install was a PITA due to the fact that the init.d script is installs runs Jetty as root by default and the hooks it provides for making it it run as another user doesn't actually work","msgtype":"m.text"},"ts":1330416001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so btw, I'm starting jetty on w3c-test.org like this: \"sudo su -m -c /etc/init.d/jetty jetty\"","msgtype":"m.text"},"ts":1330416120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I hope that's not as bad as running it as root","msgtype":"m.text"},"ts":1330416121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there a trick to make github not scramble my comments in the future? like a [noparse] tag or [don'tfuckeverythingupsothisfuckerisn'tdiscouragedfromfilingfurtherbugs]","msgtype":"m.text"},"ts":1330416122000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i should just always use krijn as a proxy","msgtype":"m.text"},"ts":1330416240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That miht not be very reliable if krijn stops hosting the logs in a few months","msgtype":"m.text"},"ts":1330416300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, i was hoping the domain would be moved to another machine","msgtype":"m.text"},"ts":1330416301000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In this specific case you could just hound Divya directly and mercilessly until she fixes the issue","msgtype":"m.text"},"ts":1330416360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: Seems to work better if you indent code by four spaces (at least when testing on http://github.github.com/github-flavored-markdown/preview.html)","msgtype":"m.text"},"ts":1330416480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: thanks. i guess i should write a userjs that indents all my lines on github","msgtype":"m.text"},"ts":1330416540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh, just noticed that page is deprecated, so don't trust it","msgtype":"m.text"},"ts":1330416541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan: that is the case","msgtype":"m.text"},"ts":1330417560000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"jgraham: I'm not going to stop hosting them","msgtype":"m.text"},"ts":1330417620000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Small chance I'll not be able to add new ones, but the old archives will be up for as long as I can. Also talking to annevk5 about backups and a new service. No worries!","msgtype":"m.text"},"ts":1330417680000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"krijn: cool!","msgtype":"m.text"},"ts":1330417740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"krijn: Good good :)","msgtype":"m.text"},"ts":1330418100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: has there been no change in status on the licensing of the IANA language-subtags and charset registries?","msgtype":"m.text"},"ts":1330419060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, or actually, maybe there doesn't need to be","msgtype":"m.text"},"ts":1330419061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"krijn: let me know if i can do something to help out, i have plenty free time on my hands at the moment","msgtype":"m.text"},"ts":1330419720000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"Hey charlvn!","msgtype":"m.text"},"ts":1330419721000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"You're also still around :)","msgtype":"m.text"},"ts":1330419722000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"krijn: i'm a hard bastard to get rid of :P","msgtype":"m.text"},"ts":1330419723000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1330419724000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Didn't I take it over from you like 5 years ago?","msgtype":"m.text"},"ts":1330419780000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"krijn: yes that's correct! i used to host the logs on a server that was running below my desk - we had public ips on every box at the office","msgtype":"m.text"},"ts":1330419781000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"krijn: then i left the company and that's why you took it over if i remember correctly","msgtype":"m.text"},"ts":1330419782000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1330419840000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Now I'm having the same problem ;)","msgtype":"m.text"},"ts":1330419841000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"heh!","msgtype":"m.text"},"ts":1330419842000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"Way too much of the internet is running on home servers!","msgtype":"m.text"},"ts":1330419843000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"i'm finishing with my current job tomorrow and then starting with my new job at the UT on thursday","msgtype":"m.text"},"ts":1330419844000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"there we also have a public ip on every machine","msgtype":"m.text"},"ts":1330419900000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"but i have a linux box at hetzner as well (running irssi+screen to do this irc) so i can use that","msgtype":"m.text"},"ts":1330419901000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"So far it looks like our internet connection is moving with us, so I'll just move the server and go on with it","msgtype":"m.text"},"ts":1330419902000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"We should stop letting random individuals run servers, and get someone trusted like Google to host the whole internet","msgtype":"m.text"},"ts":1330419960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"right Philip` :P","msgtype":"m.text"},"ts":1330419961000,"senderName":"charlvn","senderId":"charlvn@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1330420020000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"hmm. html5.validator.nu is down...","msgtype":"m.text"},"ts":1330420021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and it's back now","msgtype":"m.text"},"ts":1330420620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is started to wonder if hsivonen has been replaced by a bot","msgtype":"m.emote"},"ts":1330420680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: there's a bot that watches html5.validator.nu and sends me an SMS when it seems to have crashed","msgtype":"m.text"},"ts":1330420980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: can you make a forward-lookings statement about <iframe sandbox> to respond to bz's question in https://bugzilla.mozilla.org/show_bug.cgi?id=729030#c1","msgtype":"m.text"},"ts":1330425180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why does https://github.com/h5bp/html5please-api/blob/master/agents.json match on lower-cased UA strings?","msgtype":"m.text"},"ts":1330425240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if lower-casing makes you match more stuff, aren't you just adding false positives?","msgtype":"m.text"},"ts":1330425300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can one of the dom editors make the \"This box is non-normative. Implementation requirements are given below this box.\" styling less obnoxious? (copy the styling from html spec)","msgtype":"m.text"},"ts":1330425720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it currently looks like XXX WE HAVE AN UNRESOLVED ISSUE RIGHT HERE WE HAVE NO IDEA WHAT TO DO IF YOU HAVE ANY IDEAS WE'RE ALL EARS KTHXBYE","msgtype":"m.text"},"ts":1330425840000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"they also seem to need some more top padding to not make the text overlap","msgtype":"m.text"},"ts":1330425900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hey, has anyone ever suggested standardising something similar to what apple-touch-icon does?","msgtype":"m.text"},"ts":1330427100000,"senderName":"craigbarnes","senderId":"craigbarnes@irc"},
{"content":{"body":"craigbarnes: yes. rel=icon sizes='...'. already in the spec!","msgtype":"m.text"},"ts":1330427160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh awesome, thanks","msgtype":"m.text"},"ts":1330427161000,"senderName":"craigbarnes","senderId":"craigbarnes@irc"},
{"content":{"body":"I tried searching but I guess not well enough","msgtype":"m.text"},"ts":1330427220000,"senderName":"craigbarnes","senderId":"craigbarnes@irc"},
{"content":{"body":"Is it okay to be overwhelmed when reading the Web Components document?","msgtype":"m.text"},"ts":1330432920000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"sure. you just need to read it a few times more. then in random order, following any xrefs. then backwards at least once.","msgtype":"m.text"},"ts":1330433040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hehe.","msgtype":"m.text"},"ts":1330433160000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"Is that specific to Web Components? It seems to apply to all specifications.","msgtype":"m.text"},"ts":1330433220000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"The thing with Web Components though is that it's hard to image its full impact.","msgtype":"m.text"},"ts":1330433221000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"You can practically do a lot of the back-end implementations using that.","msgtype":"m.text"},"ts":1330433280000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"I can define all the product html in a custom element, stuff all the product info in an array and assemble both on client side.","msgtype":"m.text"},"ts":1330433400000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"Or am I talking jibberish?","msgtype":"m.text"},"ts":1330433520000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"ouch. the async livemark stuff rotted my bookmark import patch","msgtype":"m.text"},"ts":1330434780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"If I'm using html5lib to validate HTML documents, does it matter which tree builder is used?","msgtype":"m.text"},"ts":1330436460000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"If you are using html5lib to validate html documents you are doing something wrong","msgtype":"m.text"},"ts":1330436700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I thought we removed all the validation bits apart from parse errors","msgtype":"m.text"},"ts":1330436760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you only care about parse errors, it doesn't matter much, no","msgtype":"m.text"},"ts":1330436761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"does anybody recall if there was ever a bug raised to propose the capture attribute on input@type=file?","msgtype":"m.text"},"ts":1330438260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: Is there a better tool to use for a CLI validator?","msgtype":"m.text"},"ts":1330438320000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"I looked into the code for validator.w3. but it looks like it's specifically for CGI.","msgtype":"m.text"},"ts":1330438321000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"scott_gonzalez: the first person to want a CLI validator hard enough writes a CLI wrapper for validator.nu","msgtype":"m.text"},"ts":1330439160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"scott_gonzalez: there's already a CLI tool that sends the data to a Web service instance of validator.nu","msgtype":"m.text"},"ts":1330439161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I looked at that too, but only briefly.","msgtype":"m.text"},"ts":1330439220000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"a local CLI wrapper for validator.nu being a mock servlet container that talks with local streams instead of HTTP","msgtype":"m.text"},"ts":1330439221000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Would I only need the validator repo in that case? https://bitbucket.org/validator/validator","msgtype":"m.text"},"ts":1330439700000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"hsivonen: the mock-servlet approach is pretty much exactly what some members of the W3C systems team are looking at implementing","msgtype":"m.text"},"ts":1330440000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Do you have a timeline for that?","msgtype":"m.text"},"ts":1330440360000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"scott_gonzalez: no, I don't","msgtype":"m.text"},"ts":1330440361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's pretty clear how to do it","msgtype":"m.text"},"ts":1330440362000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, pretty clear from looking at the code","msgtype":"m.text"},"ts":1330440420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you want to work on it yourself I would be glad to help","msgtype":"m.text"},"ts":1330440421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't think any of the systems team have started working on it","msgtype":"m.text"},"ts":1330440422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thanks, I'll let you know if we decide to do this.","msgtype":"m.text"},"ts":1330440480000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"I'm trying to find a way to validate all of the demo and test files for jQuery UI.","msgtype":"m.text"},"ts":1330440540000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"We don't generally have java developers though :-/","msgtype":"m.text"},"ts":1330440541000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"This probably doesn't help: https://bitbucket.org/validator/validator/src/6315b45b4827/sample/html5check.py#cl-149","msgtype":"m.text"},"ts":1330440660000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"I guess that's just a sample page though, and we wouldn't need to handle any of that redirect logic anyway.","msgtype":"m.text"},"ts":1330440720000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"scott_gonzalez: I think that html5check.py script is just using the REST interface to the service","msgtype":"m.text"},"ts":1330440960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so it still requires you to have the service up and listening on some por","msgtype":"m.text"},"ts":1330441020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it would still get you what you need","msgtype":"m.text"},"ts":1330441080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually, you don't really even need a script for this","msgtype":"m.text"},"ts":1330441081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you can use curl or whatever","msgtype":"m.text"},"ts":1330441082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'd prefer if we could avoid HTTP.","msgtype":"m.text"},"ts":1330441140000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1330441141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1330441142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the service is pretty easy to build and install and run","msgtype":"m.text"},"ts":1330441143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you prefer to not use HTTP, then it would help to have some Java developers :)","msgtype":"m.text"},"ts":1330441200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Honestly, I'd prefer if there was no install process. I'm not sure if we'll get there though, after looking at the existing tools.","msgtype":"m.text"},"ts":1330441201000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"you can use the service from the command line with zero-install on your client side","msgtype":"m.text"},"ts":1330441260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you just use the REST interface to http://validator.nu remotly","msgtype":"m.text"},"ts":1330441261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'd prefer something that works offline.","msgtype":"m.text"},"ts":1330441262000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"There will probably be a lot of overhead using REST too.","msgtype":"m.text"},"ts":1330441263000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"curl -s -F laxtype=yes -F parser=html5 -F level=error -F out=gnu -F doc=@SOME_DOCUMENT.html http://validator.nu","msgtype":"m.text"},"ts":1330441380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"scott_gonzalez: it would not be a large amount of work for a competent Java programmer to write a wrapper along the lines hsivonen described","msgtype":"m.text"},"ts":1330441440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I know I could do it myself and I'm not even a competent Java programmer","msgtype":"m.text"},"ts":1330441441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the wrapper passes a request object to that code and gets a response object back","msgtype":"m.text"},"ts":1330441560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which looks like an HTTP response","msgtype":"m.text"},"ts":1330441561000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the wrapper code just examines that response object and takes out what it needs and spits out the appropriate stuff to standard out","msgtype":"m.text"},"ts":1330441620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/scrooloose/syntastic/blob/master/syntax_checkers/html.vim#L40","msgtype":"m.text"},"ts":1330444440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1330447200000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"good afternoon dglazkov","msgtype":"m.text"},"ts":1330447560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://omploader.org/vY3cydQ/ie.png http://omploader.org/vY3cydA/chrome.PNG","msgtype":"m.text"},"ts":1330447680000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"not loading","msgtype":"m.text"},"ts":1330447860000,"senderName":"ksweeney","senderId":"ksweeney@irc"},
{"content":{"body":"arv: MikeSmith is maintaining the URL spec now","msgtype":"m.text"},"ts":1330450380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arv: not sure if he's cc'd to that bug","msgtype":"m.text"},"ts":1330450381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arv: my network is to slow to load the bug","msgtype":"m.text"},"ts":1330450382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"too*","msgtype":"m.text"},"ts":1330450383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll add him","msgtype":"m.text"},"ts":1330450384000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"\"I stumble across the RDF work in W3C. I was wondering if that make sense for WebKit.\"","msgtype":"m.text"},"ts":1330452900000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"trolling like it's '99","msgtype":"m.text"},"ts":1330453080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh haha","msgtype":"m.text"},"ts":1330453140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"someone actually posted that to webkit-dev","msgtype":"m.text"},"ts":1330453141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1330453142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://paul.kinlan.me/we-need-to-kill-off-the-localstorage-api","msgtype":"m.text"},"ts":1330453200000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"what is it with all the premature strikes?","msgtype":"m.text"},"ts":1330453260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cf. deprecate registerProtocolHandler() & friend","msgtype":"m.text"},"ts":1330453261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s","msgtype":"m.text"},"ts":1330453262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Indexed DB works in no browser without prefix yet... Saying to use caution with localStorage okay, but you cannot really avoid it at this point...","msgtype":"m.text"},"ts":1330453380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let's just kill the whole thing while we're at it","msgtype":"m.text"},"ts":1330453740000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"adios web, it's been fun","msgtype":"m.text"},"ts":1330453741000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Yeah, HTML5 features are so useless. Let's work on speccing pixel rounding in CSS.","msgtype":"m.text"},"ts":1330454220000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Hixie: fantasai and I are discussing the CSSElementMap, and think that there's no good reason to make it specific to CSS.  Any objection to renaming it ElementMap and just making it a generic additional way for elements to match id selectors?","msgtype":"m.text"},"ts":1330454760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kennyluck: someone should","msgtype":"m.text"},"ts":1330455000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"switches on angryness filter and tries to read public-html","msgtype":"m.emote"},"ts":1330455060000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: i don't have a strong opinion on it, but note that we _just_ decided to once and for all ensure Element nodes would only ever have one ID","msgtype":"m.text"},"ts":1330457040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: so i recommend looping in some DOM Core people first and seeing how angry they get, and basing your decision on that :-)","msgtype":"m.text"},"ts":1330457041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what's CSSElementMap?","msgtype":"m.text"},"ts":1330457042000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that feature always seemed a bit ugly to me","msgtype":"m.text"},"ts":1330457100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: http://www.whatwg.org/specs/web-apps/current-work/#dom-document-csselementmap","msgtype":"m.text"},"ts":1330457101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: making it generic, would that affect getElementById()?","msgtype":"m.text"},"ts":1330457160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there an email or other reference that explains the use case for this?","msgtype":"m.text"},"ts":1330457220000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think there might be on the WHATWG list","msgtype":"m.text"},"ts":1330457340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I never really looked into it much, hoping it would go away","msgtype":"m.text"},"ts":1330457341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No opinion.  If it affects querySelector, though, it should probably affect gEBID too.","msgtype":"m.text"},"ts":1330457342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that seems very silly","msgtype":"m.text"},"ts":1330457400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16142","msgtype":"m.text"},"ts":1330457401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, those are very much perf-sensitive","msgtype":"m.text"},"ts":1330457402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: (see my comment)","msgtype":"m.text"},"ts":1330457403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: will try to load...","msgtype":"m.text"},"ts":1330457404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"network here is good times","msgtype":"m.text"},"ts":1330457405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"skiing is way better :)","msgtype":"m.text"},"ts":1330457406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok let me paste it here","msgtype":"m.text"},"ts":1330457407000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh right you're skiing","msgtype":"m.text"},"ts":1330457460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dude","msgtype":"m.text"},"ts":1330457461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"get on the slope","msgtype":"m.text"},"ts":1330457462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1330457463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heading to lunch, will be back to discuss shortly","msgtype":"m.text"},"ts":1330457464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: no rush, don't worry about it","msgtype":"m.text"},"ts":1330457465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, I see, otherwise element() can't reference elements that are not in the document","msgtype":"m.text"},"ts":1330457466000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: no worries, it's dark now, we're about to get some food","msgtype":"m.text"},"ts":1330457520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on another note, i think 'decorative:true' is probably better than 'ariaHidden:true'","msgtype":"m.text"},"ts":1330457521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"upon reflection","msgtype":"m.text"},"ts":1330457522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ah, I'll look into making such an algorithm later this week","msgtype":"m.text"},"ts":1330457640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: just got the email, bug still loading :)","msgtype":"m.text"},"ts":1330457641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: not going to make DOM depend on HTML","msgtype":"m.text"},"ts":1330457880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1330458000000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't want MutationObservers to html spec","msgtype":"m.text"},"ts":1330458001000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"HTML is just going to contain \"invoke observers\" or some such","msgtype":"m.text"},"ts":1330458060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and DOM will contain a non-normative pointer to that","msgtype":"m.text"},"ts":1330458061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hey hey hey! with this addHitRegion() thing on canvas we can have the UA automatically set the cursor based on where over the image you are!","msgtype":"m.text"},"ts":1330458240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1330458241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because the cursor is not there?","msgtype":"m.text"},"ts":1330458300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because we already have regions, and i can just add 'cursor' to the dictionary","msgtype":"m.text"},"ts":1330458360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"from the canvas feedback: \"An advantage canvas has over SVG is that it shares the same DOM and keyboard navigation model as HTML.\"","msgtype":"m.text"},"ts":1330458361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders if the commenter is confused or if i'm just misunderstanding","msgtype":"m.emote"},"ts":1330458420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: heh, just saw glazou's reply. i guess css specs had better stop refering to RFCs...","msgtype":"m.text"},"ts":1330458840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SVG might have defined some kind of keyboard navigation at some point","msgtype":"m.text"},"ts":1330458900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/#!/robert_sinclair/status/174583309203013634","msgtype":"m.text"},"ts":1330459380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: thanks for responding on the frame disabling bug","msgtype":"m.text"},"ts":1330459440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What's a term I can use to refer to the \"standard\" fragment syntax, where it refers to the id of an element in the document?","msgtype":"m.text"},"ts":1330460460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm trying to generically define that if that syntax is used but there is no element with the given id in the document, it's an invalid image.","msgtype":"m.text"},"ts":1330460461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And thus triggers fallback for image().)","msgtype":"m.text"},"ts":1330460462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think such a thing exists","msgtype":"m.text"},"ts":1330460580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could maybe look at what HTML has for usemap=\"\" and adapt that","msgtype":"m.text"},"ts":1330460581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On further review, it looks like I don't need to handle this case explicitly, though I do need to file a bug on SVG.","msgtype":"m.text"},"ts":1330460820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa: just curious, if you move input element in DOM, do you think undo/redo should still contain the data it contained in the original place in DOM","msgtype":"m.text"},"ts":1330462320000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or can we reset undo/redo","msgtype":"m.text"},"ts":1330462321000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I think not, but I don't know what webkit does)","msgtype":"m.text"},"ts":1330462322000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(haven't tested anything yet)","msgtype":"m.text"},"ts":1330462380000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: you mean undo/redo inside the input element?","msgtype":"m.text"},"ts":1330464120000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: or undo/redo of input.value?","msgtype":"m.text"},"ts":1330464121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yes","msgtype":"m.text"},"ts":1330464180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes... which?","msgtype":"m.text"},"ts":1330464181000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"inside input element","msgtype":"m.text"},"ts":1330464182000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think so","msgtype":"m.text"},"ts":1330464183000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: isn't what browsers do today?","msgtype":"m.text"},"ts":1330464184000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"isn't that*","msgtype":"m.text"},"ts":1330464185000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"looks like so","msgtype":"m.text"},"ts":1330464240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm just debugging a gmail leak","msgtype":"m.text"},"ts":1330464300000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think that's also what the spec implices","msgtype":"m.text"},"ts":1330464301000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"implies*","msgtype":"m.text"},"ts":1330464302000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"where something keeps stuff alive, and since there is also input and textarea elements with huge transaction lists, plenty of stuff is kept in memory","msgtype":"m.text"},"ts":1330464303000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"rniwa: btw does chrome have some tools to check what all objects are kept alive","msgtype":"m.text"},"ts":1330464360000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"js objects and dom nodes etc","msgtype":"m.text"},"ts":1330464361000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: developer time -> memory profiler?","msgtype":"m.text"},"ts":1330464420000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I mean","msgtype":"m.text"},"ts":1330464480000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"","msgtype":"m.text"},"ts":1330464481000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"Profiles\" and heap snapshot","msgtype":"m.text"},"ts":1330464482000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"anyone using http://www.iwebinspector.com with xcode 4.3 & lion?","msgtype":"m.text"},"ts":1330464483000,"senderName":"cboyle","senderId":"cboyle@irc"},
{"content":{"body":"or could point me in the direction of someone who does","msgtype":"m.text"},"ts":1330464484000,"senderName":"cboyle","senderId":"cboyle@irc"},
{"content":{"body":"can't see anything like that","msgtype":"m.text"},"ts":1330464485000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I might have just checked whether the gmail leak shows up in chrome too...","msgtype":"m.text"},"ts":1330464540000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: so... you open the developer tools","msgtype":"m.text"},"ts":1330464600000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: and then go to Profiles tab","msgtype":"m.text"},"ts":1330464601000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"click the eye-mark","msgtype":"m.text"},"ts":1330464602000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I may have old chrome","msgtype":"m.text"},"ts":1330464603000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1330464604000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: and then it'll give you a snapshot","msgtype":"m.text"},"ts":1330464605000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"latest chrome doesn't run on this machine","msgtype":"m.text"},"ts":1330464606000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: oh oops :(","msgtype":"m.text"},"ts":1330464607000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: which machine?","msgtype":"m.text"},"ts":1330464608000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"64bit Fedora 15","msgtype":"m.text"},"ts":1330464660000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"don't recall now what the problem is...","msgtype":"m.text"},"ts":1330464661000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: huh... odd.","msgtype":"m.text"},"ts":1330464720000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: I think we normally support Fedora","msgtype":"m.text"},"ts":1330464721000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: /highfives another fedora user","msgtype":"m.text"},"ts":1330464722000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"highfives*","msgtype":"m.emote"},"ts":1330464723000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"although i use ubuntu on my work machine these days  :\\","msgtype":"m.text"},"ts":1330464780000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1330464781000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I've been using Redhat since 5.0","msgtype":"m.text"},"ts":1330464782000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh well, only once a month or less...","msgtype":"m.text"},"ts":1330464783000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: that's about the time I started using I think...","msgtype":"m.text"},"ts":1330464784000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"maybe it was 6","msgtype":"m.text"},"ts":1330464785000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah I think it was 6","msgtype":"m.text"},"ts":1330464840000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: As well, I believe CSSElementMap was introduced during a feature-freeze for HTML, so it's only in the WHATWG copy.  Do you see any problem with throwing it into the HTMLWG copy?","msgtype":"m.text"},"ts":1330465380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: probably not but I can't always predict what would be controversial","msgtype":"m.text"},"ts":1330465440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah, of course.  Was just checking for Process-related hangups.","msgtype":"m.text"},"ts":1330465441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you can reduce risk of drama by filing a bug and sending mail to the group about it, to reduce risk of anyone bitching after the fact","msgtype":"m.text"},"ts":1330465442000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Pretty sure there's already a bug about it.","msgtype":"m.text"},"ts":1330465443000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"From when Hixie first added it.","msgtype":"m.text"},"ts":1330465500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, no, I only requested it in an email to WHATWG.","msgtype":"m.text"},"ts":1330465860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll file a bug I guess.","msgtype":"m.text"},"ts":1330465861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is sad we don't get emails for all bugs anymore.","msgtype":"m.emote"},"ts":1330465920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Should I file the bug in the \"HTML5 spec\" component or \"LC1 HTML5 spec\"?","msgtype":"m.text"},"ts":1330465980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTML5 spec","msgtype":"m.text"},"ts":1330466040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i ignore the component entirely","msgtype":"m.text"},"ts":1330466041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you do HTML5 spec there'll be an email and satisfy what othermaciej mentioned above","msgtype":"m.text"},"ts":1330466100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I forgot about bugmail","msgtype":"m.text"},"ts":1330466101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"does anyone know if svg defines how you parse errorneous d=\"\" attributes for paths?","msgtype":"m.text"},"ts":1330466160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can't find it defined anywhere","msgtype":"m.text"},"ts":1330466161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in SVG 1.1 you are not allowed to display the SVG","msgtype":"m.text"},"ts":1330466162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"</trollmode>","msgtype":"m.text"},"ts":1330466220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i wonder how to define this without having to respecify everything","msgtype":"m.text"},"ts":1330466221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(this = a method on canvas that takes a d=\"\" specification)","msgtype":"m.text"},"ts":1330466222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: by filing a bug on SVG and making sure it gets fixed","msgtype":"m.text"},"ts":1330466280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: sounds like something they need to fix anyway and they can probably give you an answer as to what the interface will be a little quicker","msgtype":"m.text"},"ts":1330466281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i didn't mean the parsing, though that's another issue","msgtype":"m.text"},"ts":1330466340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i meant just in general, how do i make the canvas path be manipulated","msgtype":"m.text"},"ts":1330466341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1330466342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm yeah dunno","msgtype":"m.text"},"ts":1330466343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shepazu: yt?","msgtype":"m.text"},"ts":1330466344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: on phone… gimme a few, please","msgtype":"m.text"},"ts":1330466400000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"shepazu: np","msgtype":"m.text"},"ts":1330466401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonder what to call it","msgtype":"m.text"},"ts":1330466402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"path\" is a big ambiguous","msgtype":"m.text"},"ts":1330466403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"svg path\" is wrong, since this would be making it a non-svg path as well","msgtype":"m.text"},"ts":1330466404000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"addPathByDescription\" is a bit long","msgtype":"m.text"},"ts":1330466405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"addPathData() ?","msgtype":"m.text"},"ts":1330466460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: ah, it does define it actually. if the path doesn't match the bnf, then the path is treated as empty.","msgtype":"m.text"},"ts":1330466461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tracePath?","msgtype":"m.text"},"ts":1330466520000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"sounds like it would mean the same as stroke()","msgtype":"m.text"},"ts":1330466521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1330466522000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"which does something quite differnet :-)","msgtype":"m.text"},"ts":1330466523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just addPath(string) ?","msgtype":"m.text"},"ts":1330466580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe littleThumbling","msgtype":"m.text"},"ts":1330466581000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: addPath() sounds like it describes what addFile() does","msgtype":"m.text"},"ts":1330466582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1330466583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"addFill","msgtype":"m.text"},"ts":1330466584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which i only called addFill() rather than addPath() because i also needed to add addStroke()","msgtype":"m.text"},"ts":1330466640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so what is the context for this method?","msgtype":"m.text"},"ts":1330466641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"could it be new Path(string) ?","msgtype":"m.text"},"ts":1330466642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same as .rect() or .moveTo()","msgtype":"m.text"},"ts":1330466643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except it does everything in the path description","msgtype":"m.text"},"ts":1330466644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1330466645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah no no annev\bk. It is Path(addressbook) :p","msgtype":"m.text"},"ts":1330466700000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":".addToPath ?","msgtype":"m.text"},"ts":1330466701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":".addWhatToPath? :-)","msgtype":"m.text"},"ts":1330466702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"addPathData() is fine, i think","msgtype":"m.text"},"ts":1330466703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the d=\"\" values are called \"path data\" in scg","msgtype":"m.text"},"ts":1330466704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"svg","msgtype":"m.text"},"ts":1330466705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1330466760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: yt?","msgtype":"m.text"},"ts":1330467180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok, what's up?","msgtype":"m.text"},"ts":1330467240000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"shepazu: i've gotten requests for adding a mechanism to add paths to canvas using the svg path data syntax","msgtype":"m.text"},"ts":1330467241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shepazu: i was wondering if you had any advice on how best i could do that without duplicating lots of requirements","msgtype":"m.text"},"ts":1330467300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: happy to help, but not sure what you mean by duplicating requirements","msgtype":"m.text"},"ts":1330467360000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"annevk: per Hixie's comment on the microtask bug, sounds like we need some description of delivery in DOM4; is that something you can handle or shall I write something up?","msgtype":"m.text"},"ts":1330467361000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"shepazu: well the easiest way to do it is just to not refer to svg but \"reimplement\" the parsing and drawing rules in the html spec, but referring to arguments and canvas subpaths rather than attributes and svg paths","msgtype":"m.text"},"ts":1330467420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shepazu: but clearly that's suboptimal, because they might get out of sync, etc","msgtype":"m.text"},"ts":1330467421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: would it help if SVG2 included some specific mapping/algos?","msgtype":"m.text"},"ts":1330467480000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"fwiw, I've done this in script pretty trivially","msgtype":"m.text"},"ts":1330467481000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"shepazu: depends on the timeframe, but yeah, that might be good","msgtype":"m.text"},"ts":1330467482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: we could put a priority on it","msgtype":"m.text"},"ts":1330467483000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"aklein: if you can scribble some thoughts in the bug on adding a list of MutationObservers I can do the rest I think","msgtype":"m.text"},"ts":1330467484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shepazu: that woudl be cool. should i write something up and send it to www-svg when i have a better idea what would be needed from this end?","msgtype":"m.text"},"ts":1330467540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aklein: I can probably do it either way, but there's more chance of it being right in one go if you add some insight","msgtype":"m.text"},"ts":1330467541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I'm juggling 17 cats right now, but if you were to write a short but detailed summary email to www-svg, I can make sure we talk about it on Thursday and write it up ASAP","msgtype":"m.text"},"ts":1330467542000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1330467543000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1330467544000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1330467600000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"shepazu: awesome, will do","msgtype":"m.text"},"ts":1330467601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shepazu: no, thank you!","msgtype":"m.text"},"ts":1330467602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm pretty sure there's a lot of interest in the SVG WG to do something like this","msgtype":"m.text"},"ts":1330467603000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1330467604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: may have to wait till next week, I'm shepherding the webkit -> chromium merge this week, but I'd be happy to add more on the bug if I get some free cycles","msgtype":"m.text"},"ts":1330467720000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"annevk: do you know what i'm supposed to do instead of having an attribute with type double[]?","msgtype":"m.text"},"ts":1330467780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i want you to be able to set it via   path.lineDash = [0,1,2,3]","msgtype":"m.text"},"ts":1330467781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aklein: k, I might get to it first then at the end of this week","msgtype":"m.text"},"ts":1330467782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: what's wrong with using double[]?","msgtype":"m.text"},"ts":1330467840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i thought we weren't supposed to have attributes that returned arrays","msgtype":"m.text"},"ts":1330467841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no such attributes are fine","msgtype":"m.text"},"ts":1330467900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"afaik","msgtype":"m.text"},"ts":1330467901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1330467902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what was it i wasn't supposed to do with array then?","msgtype":"m.text"},"ts":1330467903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can not return sequences I think","msgtype":"m.text"},"ts":1330467904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ooh wait, maybe that is wrong because arrays can be mutated","msgtype":"m.text"},"ts":1330467960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1330467961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1330467962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe i should just use explicit methods for getting and setting","msgtype":"m.text"},"ts":1330468080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it does seem way nicer to just set it to an array","msgtype":"m.text"},"ts":1330468081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's what we should have done for fillStyle instead of CSS colors in retrospect I think","msgtype":"m.text"},"ts":1330468082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: ^^","msgtype":"m.text"},"ts":1330468140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, shepazu, +1 to avoiding duplicating (and probably ending up with slightly different) path objects etc.!","msgtype":"m.text"},"ts":1330468200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: if i have an attribute that takes an array (path.lineDash = [0,1,2,3]) what type should i give it, assuming double[] is not a good answer?","msgtype":"m.text"},"ts":1330468201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah sequence<T> means JS array, and you can't have attributes of that type. T[] means a special object that behaves like an object with index getters/getters and has a .length property","msgtype":"m.text"},"ts":1330468260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, hmm","msgtype":"m.text"},"ts":1330468261000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(or is double[] a good answer?)","msgtype":"m.text"},"ts":1330468262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, double[] would work -- its behaviour would be that you can assign a JS array, and that would be converted to an IDL array type.","msgtype":"m.text"},"ts":1330468320000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but","msgtype":"m.text"},"ts":1330468321000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it would mean that when you get the attribute again, it returns that platform array object, and not the JS array object you passed in","msgtype":"m.text"},"ts":1330468322000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"presumably the path object will never modify the array that is assigned there?","msgtype":"m.text"},"ts":1330468323000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1330468380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i also don't want the js author to be able to modify a random other array he created and have it change the path dash pattern","msgtype":"m.text"},"ts":1330468381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, interesting","msgtype":"m.text"},"ts":1330468382000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so i think what you describe is the behaviour i want?","msgtype":"m.text"},"ts":1330468383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course i might be wrong to want that behaviour :-)","msgtype":"m.text"},"ts":1330468440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe i should just use a setter/getter?","msgtype":"m.text"},"ts":1330468441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would do. it might be surprising that a different object (and not a JS Array) would be returned from getting the property.","msgtype":"m.text"},"ts":1330468442000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"a getter/setter might be clearer...","msgtype":"m.text"},"ts":1330468443000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1330468444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what kind of array would be returned then?","msgtype":"m.text"},"ts":1330468445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"getter and setter could both take sequence<double>","msgtype":"m.text"},"ts":1330468500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"then you get a JS Array object returned","msgtype":"m.text"},"ts":1330468501000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"getter/setter seems somewhat ugly for JavaScript","msgtype":"m.text"},"ts":1330468502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not the same one you put in","msgtype":"m.text"},"ts":1330468503000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, yeah I kind of agree...","msgtype":"m.text"},"ts":1330468504000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"why can't we return a JS array?","msgtype":"m.text"},"ts":1330468505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, you mean from a double[] attribute?","msgtype":"m.text"},"ts":1330468560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"gets surprised when things like path.lineDash[1]=2 don't work","msgtype":"m.emote"},"ts":1330468561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, yeah that's the reason sequence<T> isn't allowed as the type of an attribute","msgtype":"m.text"},"ts":1330468562000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1330468563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, well because double[] means this platform array object. in most cases you want the DOM object to respond to changes to the array(-like) object, or to dynamically expose array elements","msgtype":"m.text"},"ts":1330468620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, and you can't do that with a regular JS Array","msgtype":"m.text"},"ts":1330468621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh you cannot observe changes to it or something? okay","msgtype":"m.text"},"ts":1330468740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"returning a JS Array from a function I think makes it clearer that if you modified it it's not necessarily going to cause the DOM object to do anything","msgtype":"m.text"},"ts":1330468741000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1330468742000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I still think the path.lineDash attribute idea makes sense","msgtype":"m.text"},"ts":1330468743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if there should be a write-only lineDash property :)","msgtype":"m.emote"},"ts":1330468744000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you will just iterate over the values","msgtype":"m.text"},"ts":1330468745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yeah… it would look weird if you need to use a function to set that, but a property for everything else","msgtype":"m.text"},"ts":1330468800000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and maybe assign an array to it","msgtype":"m.text"},"ts":1330468801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"especially if it has some default value most use will just be lineDash[x] = y","msgtype":"m.text"},"ts":1330468802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah if you don't declare the platform array object that it returns read only or fixed length, then that should work too","msgtype":"m.text"},"ts":1330468860000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and since it inherits from Array.prototype, even path.lineDash.push(10) will work","msgtype":"m.text"},"ts":1330468861000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah but then why would  lineDash = a; a[0] = 2;  not work","msgtype":"m.text"},"ts":1330468920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just that (path.lineDash = someArray) != someArray… :)","msgtype":"m.text"},"ts":1330468921000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"unless someArray was previously a lineDash value","msgtype":"m.text"},"ts":1330468922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, because the \"a\" there is a JS Array, and the type of value lineDash returns is a platform array object","msgtype":"m.text"},"ts":1330468923000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's very confusing","msgtype":"m.text"},"ts":1330468924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I agree it might be too confusing","msgtype":"m.text"},"ts":1330468980000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but you said yourself you don't want the JS array to change and to affect the path","msgtype":"m.text"},"ts":1330468981000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if i changed my mind on that would there be a way to support it?","msgtype":"m.text"},"ts":1330468982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not as nicely as you might like. what you could do is define the attribute to be of type \"object\", and then explain in prose what to do when you have a JS Array object in tehre","msgtype":"m.text"},"ts":1330469040000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yikes","msgtype":"m.text"},"ts":1330469100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think setLineDash() and getLineDash() are sounding better by the minute","msgtype":"m.text"},"ts":1330469160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"getLineDash() can even return a mutable double[], and setLineDash() can just be defined to always clone its argument","msgtype":"m.text"},"ts":1330469161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you can do getLineDash()[1] = 2","msgtype":"m.text"},"ts":1330469162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or whatnot","msgtype":"m.text"},"ts":1330469163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah -- that would be just like an attribute of type double[], but maybe more understandable in terms of what's happening with the objects","msgtype":"m.text"},"ts":1330469220000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so new WebSocket takes DOMString[]","msgtype":"m.text"},"ts":1330469280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe that should be sequence instead?","msgtype":"m.text"},"ts":1330469340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yeah, I tend to use sequence<> in those cases because it's clearer a copy is going to be made","msgtype":"m.text"},"ts":1330469341000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but if it's just use as an argument, the behaviour will be the same","msgtype":"m.text"},"ts":1330469342000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1330469343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only differences is","msgtype":"m.text"},"ts":1330469344000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*difference","msgtype":"m.text"},"ts":1330469345000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if you can possible get DOMString[] objects elsewhere","msgtype":"m.text"},"ts":1330469400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"which I guess you might be able to here!","msgtype":"m.text"},"ts":1330469401000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you might want to write your prose so you don't save a reference to that platform array object","msgtype":"m.text"},"ts":1330469402000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"there are some proposals","msgtype":"m.text"},"ts":1330469403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if you happened to word it that way)","msgtype":"m.text"},"ts":1330469404000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah I saw","msgtype":"m.text"},"ts":1330469405000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"+1 for that","msgtype":"m.text"},"ts":1330469406000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I still like the lineDash attribute better for consistency","msgtype":"m.text"},"ts":1330469460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I sort of think we'll reuse that pattern at some point","msgtype":"m.text"},"ts":1330469461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"consistency with fillStyle, miterLimit etc. that is","msgtype":"m.text"},"ts":1330469520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it might be worth thinking about a type -- maybe even call it Array! -- in IDL that means just a reference to a JS Array","msgtype":"m.text"},"ts":1330469521000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: except it's not really consistent with those","msgtype":"m.text"},"ts":1330469522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: if it clones on setting","msgtype":"m.text"},"ts":1330469523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that you're responsible for describing when the values get read out of it","msgtype":"m.text"},"ts":1330469524000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: but returns a reference","msgtype":"m.text"},"ts":1330469525000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: yt?","msgtype":"m.text"},"ts":1330469580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it seems somewhat unlikely many people will make that observation though unless they look at the specifics","msgtype":"m.text"},"ts":1330469700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though if we really think that's a bad pattern we should add something to Web IDL...","msgtype":"m.text"},"ts":1330469701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: if i want to encrypt something over the wire (say, video), is the best option AES256? I'm looking for something cryptographically sound, with low CPU requirements to decode, low memory requirements to decode, that can be done in streaming mode; i don't need integrity checking or authentication","msgtype":"m.text"},"ts":1330469760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also not worried about side-channel attacks over the wire (e.g. in particular discovering the file size is not an issue)","msgtype":"m.text"},"ts":1330469940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: other than compatibility, can you think of any reason why we shouldn't treat zero-length subpaths as points that get a line cap on either end? (for lineCap of round and square; butt would still not show anything)","msgtype":"m.text"},"ts":1330472580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: What would be the orientation of square caps?","msgtype":"m.text"},"ts":1330472700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"interesting question","msgtype":"m.text"},"ts":1330472820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess we'd just define it as x-axis aligned, pre-transformation","msgtype":"m.text"},"ts":1330472880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That sounds arbitrary","msgtype":"m.text"},"ts":1330472881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"completely so","msgtype":"m.text"},"ts":1330472882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://home.comcast.net/~urbanjost/canvas/vogle4.html is a page asking for this","msgtype":"m.text"},"ts":1330472940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wow, svg has a _lot_ of prose for text along a path","msgtype":"m.text"},"ts":1330473120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll have to study this closer to see how much of this i actually need","msgtype":"m.text"},"ts":1330473180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my naive impression is that this is not as complicated a problem as the svg text suggests...","msgtype":"m.text"},"ts":1330473181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no idea how SVG compares, but the text-on-path implementations I've worked on were both crazily complicated","msgtype":"m.text"},"ts":1330473360000,"senderName":"astearns","senderId":"astearns@irc"}
]