[
{"content":{"body":"Domenic: Ah yes, agreed. Not sure what the best way to handle that would be unless the default was to censor ALL scripts from a module graph. Might be a bit much though","msgtype":"m.text"},"ts":1515629695000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Why does c.whatwg.org redirect to the HTML spec? Just curious","msgtype":"m.text"},"ts":1515629727000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"hysterial raisins","msgtype":"m.text"},"ts":1515630429000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(historical reasons)","msgtype":"m.text"},"ts":1515630435000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not sure what they were, exactly...","msgtype":"m.text"},"ts":1515630453000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1515631220000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: there were redirects to all specs at whatwg.org/[xxx] added at [xxx].whatwg.org, and there were a bunch of short URLs for specific versions of HTML","msgtype":"m.text"},"ts":1515631960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"IIRC","msgtype":"m.text"},"ts":1515631963000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Only HTML ever got subdomain redirects","msgtype":"m.text"},"ts":1515648775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://lists.mozilla.org/pipermail/dev-platform/2018-January/021028.html 🎉","msgtype":"m.text"},"ts":1515668818000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> JS module scripts (<script type=\"module\">) have been enabled in nightly builds.","msgtype":"m.text"},"ts":1515668834000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nice!","msgtype":"m.text"},"ts":1515669049000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Can anyone enlighten me on what the purpose of the first paragraph of https://heycam.github.io/webidl/#es-operations is?","msgtype":"m.text"},"ts":1515679070000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: whatbot looking good","msgtype":"m.text"},"ts":1515679306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: re: https://github.com/heycam/webidl/pull/494#discussion_r160318258, does that mean that the way operations are defined on namespaces is also slightly incorrect  (https://heycam.github.io/webidl/#namespace-object) ?","msgtype":"m.text"},"ts":1515679579000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: that first paragraph makes sense until \"unless\"","msgtype":"m.text"},"ts":1515692266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(to me)","msgtype":"m.text"},"ts":1515692269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: there must at least be a typo of sorts there","msgtype":"m.text"},"ts":1515692309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: heh, yeah, I could have been more precise.","msgtype":"m.text"},"ts":1515692376000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: that's precisely the part I wanted help understanding.","msgtype":"m.text"},"ts":1515692389000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but you knew that already. :D","msgtype":"m.text"},"ts":1515692424000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: in particular the double \"and\" makes that hard to parse","msgtype":"m.text"},"ts":1515692468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: beyond the specifics, I don't understand what it's trying to do","msgtype":"m.text"},"ts":1515692556000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Like what's the purpose of this? What is it trying to guard against.","msgtype":"m.text"},"ts":1515692586000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I guess file an issue, ping heycam?","msgtype":"m.text"},"ts":1515692604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: thoughts on \"topic: document lifecycle\" label?","msgtype":"m.text"},"ts":1515692630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1515692630000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: if you have lots of issues to tag with it, seems reasonable.","msgtype":"m.text"},"ts":1515692650000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: has lots of overlap with navigation issues, but it's a big problem","msgtype":"m.text"},"ts":1515692667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I often end up tagging them with navigation today","msgtype":"m.text"},"ts":1515692698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: BS spec says common conjugations are supported by default when linking to dfns, so is `lt=...` *only* necessary when you're using something that doesn't autolink, or is it just always recommended","msgtype":"m.text"},"ts":1515697900000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"context: `<a>navigating</a>` autolinks to HTML navigate algorithm, is `lt=navigate` just to make it future-proof in case `navigating` where to be later defined?","msgtype":"m.text"},"ts":1515697969000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it depends what you want exposed in the exported terms index, really.","msgtype":"m.text"},"ts":1515698029000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"domfarolino: (at least, that's how I reason about it)","msgtype":"m.text"},"ts":1515698060000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Hm i'm not sure I understand. Is there a reason to use <a lt=navigate>navigating</a> over <a>navigating</a> if they both link correctly? Just a preference?","msgtype":"m.text"},"ts":1515698523000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: oh, I assumed you meant in the DFN itself. Apologies.","msgtype":"m.text"},"ts":1515698563000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"domfarolino: no reason that I know of otherwise.","msgtype":"m.text"},"ts":1515698587000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Ok I was wondering if that'","msgtype":"m.text"},"ts":1515698701000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"that's what you thoght I meant. My bad! Ok that's what I assumed, though I do like the lt just for clarity I think. Thanks!","msgtype":"m.text"},"ts":1515698731000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: <a>navigating</a> seems nicer to me","msgtype":"m.text"},"ts":1515699838000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ok I saw in your review on my fetch PR you included ‘lt’ and I was wondering if it was necessary since linked correctly for me w/o","msgtype":"m.text"},"ts":1515700128000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Ah OK, I goofed I guess","msgtype":"m.text"},"ts":1515700187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Nice https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fwhatwg.org%2F","msgtype":"m.text"},"ts":1515700375000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Encoding defines encoding and encode","msgtype":"m.text"},"ts":1515702583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is the main case I know about that complicates this general rule","msgtype":"m.text"},"ts":1515702614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No worries I just wanted to make sure I understood :)","msgtype":"m.text"},"ts":1515702713000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: I'll get on writing tests for that latest Console PR. Will open some browser bugs too (hm, wondering if this should have been done earlier)","msgtype":"m.text"},"ts":1515708396000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"@domfarolino Bikeshed will conjugate to and from the base form, but it does *not* do \"two-step\" conjugations - if your dfn is \"fooed\", it won't autolink \"fooing\" to it. But if you do `<dfn lt=foo>fooed</dfn>`, then `<a>fooing</a>` will work just fine.","msgtype":"m.text"},"ts":1515708968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The only reason to conjugate yourself in an <a> is if the conjugated work is not the last term in the definition - like if you have `<dfn>foo a bar</dfn>`, `<a>fooing a bar</a>` does *not* automatically work. You have to do `<a lt=\"foo a bar\">fooing a bar</a>` (or with the shorthand, `[=foo a bar|fooing a bar=]`).","msgtype":"m.text"},"ts":1515709065000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Or, of course, manually provide some conjugations in the `<dfn lt>` for convenience.)","msgtype":"m.text"},"ts":1515709343000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, what guarantees does \"in parallel\" in specs really give... i.e. if two different algorithms are run, one after the other, and both do some work \"in parallel\" at some point, is anything guaranteed with the ordering between the two in parallel blocks?","msgtype":"m.text"},"ts":1515714052000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"I guess the answer is no, and parallel queue's were invented to do give some ordering guarantees","msgtype":"m.text"},"ts":1515714088000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"@Mek: Correct. Absolutely no ordering guarantees (which is the point), and ordering queues to recover that when necessary.","msgtype":"m.text"},"ts":1515714210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fun... although I suspect that wasn't always what people had in mind when writing specs... i.e. methods that are defined to \"return a new primse and run the following steps in parallel\", where that would mean that it is completely undefined what order multiple consecutive calls of that method are processed in...","msgtype":"m.text"},"ts":1515714478000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"(of course it is bad code to call the same method twice without waiting for the promise returned by the first to resolve...)","msgtype":"m.text"},"ts":1515714582000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Not necessarily?","msgtype":"m.text"},"ts":1515714593000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]