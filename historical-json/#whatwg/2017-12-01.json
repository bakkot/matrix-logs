[
{"content":{"body":"annevk: are you able to own reviewing https://github.com/whatwg/html/pull/3260 ? (inputmode)","msgtype":"m.text"},"ts":1512087643000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: also ping on https://github.com/whatwg/html/pull/3221#issuecomment-347262185 (img decoding=\"\")","msgtype":"m.text"},"ts":1512089835000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I was planning on reviewing inputmode once the high-level questions are addressed","msgtype":"m.text"},"ts":1512102093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, OK, seems like it's on dtapuska's plate for now, just wanted to know if you'd review once he gets back to it or if I should feel responsible :)","msgtype":"m.text"},"ts":1512102177000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess the decoding thread concluded in a follow-up issue for possibly a third new feature, but not in changes to the decoding attribute; that should probably be stated though and then an issue raised. Then on Monday or Tuesday we can merge imo","msgtype":"m.text"},"ts":1512102295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I’m happy to take on inputmode","msgtype":"m.text"},"ts":1512102332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yay. I'm excited about inputmode (and autocapitalize/autocorrect); they're long overdue updates to make the spec match reality","msgtype":"m.text"},"ts":1512102375000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that MIME type parser patch looks cool (will get to GitHub a couple hours from now)","msgtype":"m.text"},"ts":1512103315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: interesting that you went with a tearoff for parameters","msgtype":"m.text"},"ts":1512103348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it seemed a bit nicer, like searchParams","msgtype":"m.text"},"ts":1512103388000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: the current file-api spec has a ton of informative background/discussion around how they ended up with this particular format for blob URLs. While interesting background (maybe), it doesn't seem to add much. I'm tempted to just rip most of that out, does that sound sensible?","msgtype":"m.text"},"ts":1512124123000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Also of course all the informative text around resolving/parsing/fetching that is now superseded by the fetch and url specs seems to do more harm then good","msgtype":"m.text"},"ts":1512124163000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: yeah","msgtype":"m.text"},"ts":1512124170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: do it as a PR though so folks have a notice of a day or so","msgtype":"m.text"},"ts":1512124218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, definitely don't want to do any major changes without some amount of review","msgtype":"m.text"},"ts":1512124268000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: FWIW, most WHATWG stuff basically protects the master branch and requires (reviewed) PRs","msgtype":"m.text"},"ts":1512124357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tooling is such a wonderful thing","msgtype":"m.text"},"ts":1512124381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"quesiton about valid date/month strings","msgtype":"m.text"},"ts":1512128743000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-date-string","msgtype":"m.text"},"ts":1512128744000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"so a date string is considered valid if it consists of the components outlined by that part of the spec","msgtype":"m.text"},"ts":1512128772000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"is it valid ONLY if it contains those components?","msgtype":"m.text"},"ts":1512128789000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"in other words, would \"2014-01-01-1\" be valid date string?","msgtype":"m.text"},"ts":1512128810000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: how could that be valid?","msgtype":"m.text"},"ts":1512129229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: KiChjang wants the spec to say \"consists ONLY of the components …\".","msgtype":"m.text"},"ts":1512129252000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think that would require rewording a lot of factual statements which I'm not sure would be beneficial","msgtype":"m.text"},"ts":1512129315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yeah, because i'm reading it as \"as long as a string consists of these components, then it's a valid date string\"","msgtype":"m.text"},"ts":1512129355000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"\"A URL's port is a 16-bit unsigned integer\" vs \"A URL's port is ONLY a 16-bit unsigned integer\"","msgtype":"m.text"},"ts":1512129361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've never seen uses of 'consist of' to refer only to a subset of the parts.","msgtype":"m.text"},"ts":1512129362000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If it refers to a subset, you usually read \"mainly consist of\" or something similar.","msgtype":"m.text"},"ts":1512129380000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I could see rephrasing these though","msgtype":"m.text"},"ts":1512129481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"'Attributes are placed inside the start tag, and consist of a name and a value, separated by an \"=\" character.'","msgtype":"m.text"},"ts":1512129490000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Just make it \"A valid month string is X followed by Y followed by Z\"","msgtype":"m.text"},"ts":1512129496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's no need for these variables in the definition and such","msgtype":"m.text"},"ts":1512129510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, i'm thinking of it in terms of exhaustiveness","msgtype":"m.text"},"ts":1512129517000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"because it seems to me that it allows for additiona characters at the end","msgtype":"m.text"},"ts":1512129531000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: Why?","msgtype":"m.text"},"ts":1512129559000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Does the thing I pasted let you think that 'a=\"b\"c' is an attribute too?","msgtype":"m.text"},"ts":1512129582000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"KiChjang: I don't think that's true with the current language (though I'll note again I'd support simplifying it)","msgtype":"m.text"},"ts":1512129599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: yes, because a is the name, and \"b\"c is the value","msgtype":"m.text"},"ts":1512129684000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"Not sure I understand what you mean.","msgtype":"m.text"},"ts":1512129724000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Looking at https://www.google.fr/search?q=inurl:https://html.spec.whatwg.org/multipage/+%22consist+of%22 I feel like you don't interpret 'consist of' correctly.","msgtype":"m.text"},"ts":1512129801000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: that code coverage thing is so great","msgtype":"m.text"},"ts":1512136044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1512137137000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ideas on how to deal with the code points? Some contexts cannot deal with non-latin1. Should we ignore those tests in the respective harness or encode that in the test somehow?","msgtype":"m.text"},"ts":1512137992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems important to test... what contexts, and what does \"not deal with\" mean?","msgtype":"m.text"},"ts":1512138025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The parser will fail for such code points anyway, right?","msgtype":"m.text"},"ts":1512138057000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: consider the Content-Type header","msgtype":"m.text"},"ts":1512138088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it takes 0x00 to 0xFF","msgtype":"m.text"},"ts":1512138099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so if you pass it U+0100 you cannot really express that","msgtype":"m.text"},"ts":1512138118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: you could UTF-8 encode it, but then you're testing something else","msgtype":"m.text"},"ts":1512138126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the parser will ignore the parameters or fail if part of type/subtype","msgtype":"m.text"},"ts":1512138155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So why not test it just like any other invalid code point though","msgtype":"m.text"},"ts":1512138253000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1512138263000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: strings <> bytes","msgtype":"m.text"},"ts":1512138268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This is in bytes-only contexts","msgtype":"m.text"},"ts":1512138269000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1512138273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lemme look at the test code, since I don't think we tested any APIs that use ArrayBuffers...","msgtype":"m.text"},"ts":1512138295000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Note that Request/Response are such a context too","msgtype":"m.text"},"ts":1512138301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Due to ByteString","msgtype":"m.text"},"ts":1512138314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see, this is mainly about what happens on the Python side hmm","msgtype":"m.text"},"ts":1512138352000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Blob/File are not though and I'm not convinced MIMEType should use ByteString","msgtype":"m.text"},"ts":1512138357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1512138377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess Blob/File are not for compat reasons","msgtype":"m.text"},"ts":1512138391000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But new APIs should, I'd think","msgtype":"m.text"},"ts":1512138397000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: MIMEType would end up with lots of double conversion","msgtype":"m.text"},"ts":1512138402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Only on a spec level","msgtype":"m.text"},"ts":1512138422000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: unless someone redefines the parser to operate on byte sequences, but then it gets weird for non byte input","msgtype":"m.text"},"ts":1512138432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't you have a byte parser?","msgtype":"m.text"},"ts":1512138445000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It just isomorphic encodes","msgtype":"m.text"},"ts":1512138449000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess we can do it and hope impl are better (and hope Infra at some point abstracts)","msgtype":"m.text"},"ts":1512138474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess MIMEType would throw anyway if you gave it invalid code points","msgtype":"m.text"},"ts":1512138484000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, I think it should","msgtype":"m.text"},"ts":1512138493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So it doesn't need to use ByteString, since that just moves most of the checks, but not all, to the IDL layer","msgtype":"m.text"},"ts":1512138500000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and since I get to do it most likely it would just throw TypeError","msgtype":"m.text"},"ts":1512138505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway back to the question","msgtype":"m.text"},"ts":1512138530000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So can't use navigable as a distinguisher due to Request/Response","msgtype":"m.text"},"ts":1512138556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The best thing I can come up with is that the harness needs to filter","msgtype":"m.text"},"ts":1512138566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm yeah I guess that's better than adding it to the data file","msgtype":"m.text"},"ts":1512138587000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"For Request/Response we'd also want to add a filter that it throws for 0x00 and 0x0C/0x0A","msgtype":"m.text"},"ts":1512138603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Same for Content-Type, but there's some additional bytes that won't work due to WPT limitations","msgtype":"m.text"},"ts":1512138633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems reasonable","msgtype":"m.text"},"ts":1512138647000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay, so I'll go with that and attempt at some documentation in the README","msgtype":"m.text"},"ts":1512138666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I still feel like we should be testing what happens when you send invalid/weird Content-Type headers to servers... but I guess that's really just a test of your server-side framework and whether it does any canonicalization...","msgtype":"m.text"},"ts":1512138765000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: there are such tests","msgtype":"m.text"},"ts":1512139276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: did you look at the other PRs? https://github.com/w3c/web-platform-tests/pull/8422","msgtype":"m.text"},"ts":1512139301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that sends e.g. \"charset=ascii\" to the server and verifies that the browser doesn't change it","msgtype":"m.text"},"ts":1512139344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I guess that's testing that wptserve doesn't do any canonicalization","msgtype":"m.text"},"ts":1512139369000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://drafts.csswg.org/ seems down for me?","msgtype":"m.text"},"ts":1512139955000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"works now, shrug","msgtype":"m.text"},"ts":1512140701000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"Domenic: looks like generated tests are not getting done today","msgtype":"m.text"},"ts":1512144958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but I've some Python locally that is going in the right direction","msgtype":"m.text"},"ts":1512144979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: exhaustive means a thousand tests or so though; not sure if we want browsers to run all of those all the time...","msgtype":"m.text"},"ts":1512145000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, the next format I come up with will have !/! or +/- or some such as MIME type","msgtype":"m.text"},"ts":1512145347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does Bitcoin have some kind of format? $/$ is valid...","msgtype":"m.text"},"ts":1512145364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Change quote style in lipfuzz example\"","msgtype":"m.text"},"ts":1512145530000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wonders what \"lipfuzz\" is...","msgtype":"m.emote"},"ts":1512145536000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: see if you get it after reading the example: https://streams.spec.whatwg.org/#example-ts-lipfuzz","msgtype":"m.text"},"ts":1512149278000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: script I have locally generates 885 tests","msgtype":"m.text"},"ts":1512149822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: gonna try integrate it later and see what blows up, but have to do some other things for a bit","msgtype":"m.text"},"ts":1512149851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how does one rename a user account on the wiki?","msgtype":"m.text"},"ts":1512150389000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"GPHemsley: Krinkle: any idea how to rename accounts on MediaWiki?","msgtype":"m.text"},"ts":1512150531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"See question by hober above","msgtype":"m.text"},"ts":1512150548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think maybe it requires this extension: https://www.mediawiki.org/wiki/Extension:Renameuser","msgtype":"m.text"},"ts":1512151150000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: ah, it might be best to email GPHemsley directly then","msgtype":"m.text"},"ts":1512151324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not entirely sure when he's online","msgtype":"m.text"},"ts":1512151347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1512151353000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1512151355000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: Yep, Renameuser it is. It's bundled by default in most distros, so might already be there.","msgtype":"m.text"},"ts":1512153251000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"or not :) - https://wiki.whatwg.org/wiki/Special:Version","msgtype":"m.text"},"ts":1512153268000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Yeah, alas","msgtype":"m.text"},"ts":1512153292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: worker script loads don't get a manual redirect mode, right?  we only do that for windows to support their weird redirect logic?","msgtype":"m.text"},"ts":1512154146000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I thought redirects weren't allowed. Anyway, in India, will catch up with messages next week.","msgtype":"m.text"},"ts":1512154235000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, ok... I believe same-origin redirects are legal for worker scripts... good night","msgtype":"m.text"},"ts":1512154278000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"service worker scripts are not allowed to redirect, but dedicated workers can","msgtype":"m.text"},"ts":1512154303000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yup, shared same as dedicated","msgtype":"m.text"},"ts":1512154912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: is https://api.csswg.org/bikeshed/ having issues?","msgtype":"m.text"},"ts":1512156109000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Dunno, don't use it. It seems to load correctly, at least. What problem are you having?","msgtype":"m.text"},"ts":1512156149000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm getting a 400 for this: https://api.csswg.org/bikeshed/?url=https%3A%2F%2Fraw.githubusercontent.com%2Ftobie%2Fwebidl%2F79a0f335ea4420a9092a27fdd10f349f35e64a3e%2Findex.bs&md-warning=not%20ready","msgtype":"m.text"},"ts":1512156163000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll ping plinss, he's the maintainer of that server.","msgtype":"m.text"},"ts":1512156187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I probably did something silly","msgtype":"m.text"},"ts":1512156192000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: cool thanks","msgtype":"m.text"},"ts":1512156200000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"html.spec.whatwg.org is down?","msgtype":"m.text"},"ts":1512156246000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: you seeing that? ^^^","msgtype":"m.text"},"ts":1512156475000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"stuck on TLS handshake...","msgtype":"m.text"},"ts":1512156498000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm, foolip, MikeSmith ^^","msgtype":"m.text"},"ts":1512156754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: plinss reports it's an issue on his side, he'll work on it","msgtype":"m.text"},"ts":1512156826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, cool :) ty","msgtype":"m.text"},"ts":1512156837000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: for your reading next week: https://github.com/w3c/ServiceWorker/issues/1239","msgtype":"m.text"},"ts":1512157545000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"tobie: Ahahahaha, I read your comment in #css and thought it was from plinss. The error was def on your side, sorry. ^_^","msgtype":"m.text"},"ts":1512160733000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I thought so","msgtype":"m.text"},"ts":1512160750000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: seems it's an update to bikeshed that's causing an error to something that was working fine before","msgtype":"m.text"},"ts":1512160774000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll check it out, I've been working on indents lately (fixing some bugs).","msgtype":"m.text"},"ts":1512160800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: looks like it's related","msgtype":"m.text"},"ts":1512160846000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, I checked the error message. ^_^","msgtype":"m.text"},"ts":1512160868000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wanderview: works for me, plus http://downforeveryoneorjustme.com/html.spec.whatwg.org , but we are switching some hosting around, so it could be DNS fun times...","msgtype":"m.text"},"ts":1512162303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: wfm now","msgtype":"m.text"},"ts":1512162364000,"senderName":"wanderview","senderId":"wanderview@irc"}
]