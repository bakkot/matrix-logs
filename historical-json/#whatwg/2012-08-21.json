[
{"content":{"body":"zcorpan: Since it looks like the quirks only need to be handled at the \"top level\" of a property, I was able to put together a much simpler version.  Just made a small addition to the declaration-value mode, and then defined two variants of \"consume a primitive\" that do the quirky things.","msgtype":"m.text"},"ts":1345507546000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Your version was slightly wrong anyway - it was written like there was only a single \"quirks-function\" flag, when you really need a stack to handle nested functions.)","msgtype":"m.text"},"ts":1345507592000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: yt?","msgtype":"m.text"},"ts":1345508704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I bit late for hsivonen, I guess","msgtype":"m.text"},"ts":1345509066000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, but we can always hope :-)","msgtype":"m.text"},"ts":1345509325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hi, WHATWG!","msgtype":"m.text"},"ts":1345519717000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: hey man","msgtype":"m.text"},"ts":1345522077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kennyluck: we don't have component-watching support in the version of bugzilla we're running","msgtype":"m.text"},"ts":1345522102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it's a bugzilla 4 feature","msgtype":"m.text"},"ts":1345522120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie (or anybody else who's awake): It's possible for a single assertion in the spec to have multiple test cases associated with it, right?","msgtype":"m.text"},"ts":1345522180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, hmm… ok. I won't be the person pushing for it.","msgtype":"m.text"},"ts":1345522189000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: I'd love to have it too but I don't think we are going to be migrating to v4 any time soon","msgtype":"m.text"},"ts":1345522220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about the test-case question, I'm working on a how-to that attempts to explain how to determine what to test in a spec","msgtype":"m.text"},"ts":1345522433000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, of course","msgtype":"m.text"},"ts":1345524823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: e.g. \"if the user agent receives a value between 25 and 30, it must show blue\" would have at least a dozen tests","msgtype":"m.text"},"ts":1345524867000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah sorry I was thinking out loud","msgtype":"m.text"},"ts":1345524878000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(-1, 0, 1, 24..31, an arbitrary number above 31, 2**31-1, 2**32, 2**63, not a number...)","msgtype":"m.text"},"ts":1345524914000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1345524925000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm using \"On setting, if the new value is one of “none”, “copy”, “link”, or “move”, then the attribute’s current value must be set to the new value\" for dropEffect as an example","msgtype":"m.text"},"ts":1345524957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that one has many test assertions in one since it applies to many modes, iirc","msgtype":"m.text"},"ts":1345525003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1345525085000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"honestly for most assertions one can come up with a near infinite number of tests","msgtype":"m.text"},"ts":1345525226000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the key is to only come up with as many as is required to keep the engineers busy :-)","msgtype":"m.text"},"ts":1345525240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: :-)","msgtype":"m.text"},"ts":1345526061000,"senderName":"MikeSmith_","senderId":"MikeSmith_@irc"},
{"content":{"body":"MikeSmith: In HTML lots of the musts are \"must run the following steps\" followed by a multistep algorithm that invokes several other multistep algorithms","msgtype":"m.text"},"ts":1345532227000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In such cases it doesn't even make sense to say that you are testing the top-level \"must:","msgtype":"m.text"},"ts":1345532248000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You are typically trying to test that a particular set of steps in the algorithm are correctly implemented","msgtype":"m.text"},"ts":1345532277000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah, understood","msgtype":"m.text"},"ts":1345532281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about those","msgtype":"m.text"},"ts":1345532283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"plh and I working on a W3C \"Testing how-to\"","msgtype":"m.text"},"ts":1345532313000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"current source is at https://github.com/w3c/testing-how-to","msgtype":"m.text"},"ts":1345532347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you care to take a look and have any comments","msgtype":"m.text"},"ts":1345532360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm going to be working on the rest of it in the next few hours","msgtype":"m.text"},"ts":1345532380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1345532436000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: I think Hixie tries to write so that \"foo is bar\" statements are always just factual i.e. they fall out of some other part of the spec","msgtype":"m.text"},"ts":1345532659000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But others are not so careful","msgtype":"m.text"},"ts":1345532667000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah I know","msgtype":"m.text"},"ts":1345532672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when I see that pattern in the HTML spec, I can be confident it's just stating a fact for which the actual requirements are stated elsewhere","msgtype":"m.text"},"ts":1345532741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but no such confidence for most other specs","msgtype":"m.text"},"ts":1345532762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Also, it's basically impossible to write tests that just test one thing. I mean as soon as you depend on the parser, or the DOM, or whatever that's making the assumption that many other things work","msgtype":"m.text"},"ts":1345532807000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The trick is to be clear about what is acceptable to assume and what is not","msgtype":"m.text"},"ts":1345532844000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can probably assume that the parser works, as long as you are not doing anything funky. But you might have to be careful around less interoperable bits of the spec or bits more closely related to the subject of your test","msgtype":"m.text"},"ts":1345532929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1345532945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/reading the entire spec/reading the spec/","msgtype":"m.text"},"ts":1345533009000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There is *some* modularity, even in something like HTML ;)","msgtype":"m.text"},"ts":1345533041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k :-)","msgtype":"m.text"},"ts":1345533059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The testharness.js example with firstElementChild is horrible","msgtype":"m.text"},"ts":1345533163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"assert_true(!!something) is ugly because it's deliberately undermining the test harness","msgtype":"m.text"},"ts":1345533215000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The right tests to use there would be assert_idl_attribute","msgtype":"m.text"},"ts":1345533264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But people don't like that because the interoperability on where the attributes go on the prototype chain is so poor","msgtype":"m.text"},"ts":1345533292000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't use assert_idl_attribute because I always forget it exists :)","msgtype":"m.text"},"ts":1345533416000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: I will pass that on to plh","msgtype":"m.text"},"ts":1345533427000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he wrote that part","msgtype":"m.text"},"ts":1345533430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Also the link to the navigation timing tests is not optimal","msgtype":"m.text"},"ts":1345533465000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"blames these tests being manual before","msgtype":"m.emote"},"ts":1345533477000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1345533477000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Because they add a layer of indirection on top of the testing framework","msgtype":"m.text"},"ts":1345533485000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For some reason","msgtype":"m.text"},"ts":1345533499000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hardly the most obvious example to lean from","msgtype":"m.text"},"ts":1345533509000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*learn","msgtype":"m.text"},"ts":1345533513000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1345533558000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't know what is the *best* example to use","msgtype":"m.text"},"ts":1345533626000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My tests, duh :)","msgtype":"m.text"},"ts":1345533896000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Something like Opera's classList tests or something","msgtype":"m.text"},"ts":1345533929000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: You submitted so many it was hard to find a nice self-contained example with > 1 test per page and not too much extraneous stuff","msgtype":"m.text"},"ts":1345533963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well I don't mean extraneous","msgtype":"m.text"},"ts":1345533977000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean \"extra functions and stuff that are not just direct use of the test harness\"","msgtype":"m.text"},"ts":1345534011000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And testing something you don't have to read four specs to understand? :)","msgtype":"m.text"},"ts":1345534034000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I wasn't so concerned with whether people would understand the pass condition ;)","msgtype":"m.text"},"ts":1345534144000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe something from DOM?","msgtype":"m.text"},"ts":1345534152000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1345535451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, is jl someone you can forward questions to?","msgtype":"m.text"},"ts":1345535492000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes, in general. No now in specific (he is on vacation)","msgtype":"m.text"},"ts":1345535515000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hm","msgtype":"m.text"},"ts":1345535529000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Then, do you know why new Event(\"foo\").eventPhase is AT_TARGET in Opera?","msgtype":"m.text"},"ts":1345535568000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's NONE in Chrome and Gecko","msgtype":"m.text"},"ts":1345535585000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And afaict in the spec","msgtype":"m.text"},"ts":1345535600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It could just be a bug","msgtype":"m.text"},"ts":1345535613000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, I guess I shouldn't use assert_idl_attribute for methods","msgtype":"m.text"},"ts":1345535701000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1345535820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Opera doesn't have Event.NONE?","msgtype":"m.text"},"ts":1345535825000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yeah, seem to remember something like that.","msgtype":"m.text"},"ts":1345535910000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Ms2ger: sof just fixed `contains` on Node not Element, btw. Thanks for the heads up. :)","msgtype":"m.text"},"ts":1345535951000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Ah, nice","msgtype":"m.text"},"ts":1345535964000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: So... Are you writing this test just now?","msgtype":"m.text"},"ts":1345536218000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Which?","msgtype":"m.text"},"ts":1345536291000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm adding a bit to http://localhost/tests/webapps/DOMCore/tests/submissions/Ms2ger/Event-constructors.html","msgtype":"m.text"},"ts":1345536303000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(With obvious substitution to get a URL you can access :))","msgtype":"m.text"},"ts":1345536334000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"odinho, so about those IDB tests...","msgtype":"m.text"},"ts":1345536458000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, dunno what you were looking at for the example, but maybe http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Event-constructors.html ?","msgtype":"m.text"},"ts":1345536732000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: We simply never added support for Event.NONE, so no.","msgtype":"m.text"},"ts":1345536845000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, do you have a bug?","msgtype":"m.text"},"ts":1345536860000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: odinho claimed not","msgtype":"m.text"},"ts":1345537004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"odinho was thinking about making it when having a test to add to it :P","msgtype":"m.text"},"ts":1345537035000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: Work quicker!","msgtype":"m.text"},"ts":1345537123000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/Event-constants.html","msgtype":"m.text"},"ts":1345537134000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: Imma like multitasking, you might steal that task.","msgtype":"m.text"},"ts":1345537139000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Ms2ger: What about those?","msgtype":"m.text"},"ts":1345537170000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho, are Microsoft's tests completely redundant?","msgtype":"m.text"},"ts":1345537261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yeah, -- and they're wrong.","msgtype":"m.text"},"ts":1345537277000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho, can we get rid of them?","msgtype":"m.text"},"ts":1345537490000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Microsoft?","msgtype":"m.text"},"ts":1345537558000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Those tests might be OK, although the pattern of having multiple independent asserts in the same test is mildly troubling","msgtype":"m.text"},"ts":1345537752000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Some places)","msgtype":"m.text"},"ts":1345537760000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"They get 40% pass on my version of their own tests. While they get 100% on their own.","msgtype":"m.text"},"ts":1345537760000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Or they're probably just not as strict. I should investigate why they get such a low score. Sshouldnt be like that.","msgtype":"m.text"},"ts":1345537760000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I mean it's not bad and I do it too, but it isn't the nicest bit of testharness.js","msgtype":"m.text"},"ts":1345537804000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Hmm. Well, it's Alex that's test facilitator for IDB, -- so guess there'll be hurt feelings etc if you just remove them :P","msgtype":"m.text"},"ts":1345537889000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"And I guess they're updating them some more behind the scenes.","msgtype":"m.text"},"ts":1345537901000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"TabAtkins: unitless needs to work in rect(10 10 10 10)","msgtype":"m.text"},"ts":1345538100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: http://packages.python.org/six/","msgtype":"m.text"},"ts":1345538681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Still not sure it helps me.","msgtype":"m.text"},"ts":1345538978000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Have looked before, etc","msgtype":"m.text"},"ts":1345538982000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan, it's only the terms defined in html.json that get into html-generated.json... Would be nice to get them pulled out of the spec somehow","msgtype":"m.text"},"ts":1345545778000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1345545856000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe the spec splitter can output a json with all the terms and their urls?","msgtype":"m.text"},"ts":1345545918000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or i guess the splitter doesn't care about terms","msgtype":"m.text"},"ts":1345545935000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but anolis itself knows what the terms are when it generates the spec","msgtype":"m.text"},"ts":1345545963000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: Heh, did you actually have AT_TARGET in the test before there? Why? Only tested in Opera ( ;-) ).","msgtype":"m.text"},"ts":1345547191000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho, I blame annevk / jl","msgtype":"m.text"},"ts":1345547252000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lol, I wonder how that happened","msgtype":"m.text"},"ts":1345547427000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"zcorpan, I guess jgraham runs that instance...","msgtype":"m.text"},"ts":1345547446000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"odinho, \"hey, let's test the initial values of some stuff\"","msgtype":"m.text"},"ts":1345547472000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"odinho, \"let's check what Opera returns\"","msgtype":"m.text"},"ts":1345547480000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(I assume)","msgtype":"m.text"},"ts":1345547484000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Ah, so you say you didn't write it. That makes it clearer :-)","msgtype":"m.text"},"ts":1345547507000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Yeah, my name in the URL is a lie","msgtype":"m.text"},"ts":1345547523000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=18631 was filed on whatwg/html but is now moved to htmlwg/canvas. not that i understand the bug really and i'll be happy to not get emails for the spam he generates, but what's our story with bugs filed on the w3c specs?","msgtype":"m.text"},"ts":1345558332000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess someone(tm) should keep an eye on the w3c bugs and clone the ones that are relevant","msgtype":"m.text"},"ts":1345558636000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also, MikeSmith, can you ask that user to behave in bugzilla (not spam)","msgtype":"m.text"},"ts":1345558763000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, fwiw, he also filed https://bugzilla.mozilla.org/show_bug.cgi?id=783942","msgtype":"m.text"},"ts":1345559598000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"[Great Idea]","msgtype":"m.text"},"ts":1345559624000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah, shows the same behavior","msgtype":"m.text"},"ts":1345559697000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'll just send him an email","msgtype":"m.text"},"ts":1345559892000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, things shouldn't get moved from whatwg/html to an htmlwg component; they should be cloned.","msgtype":"m.text"},"ts":1345562758000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: feel free to move it back and clone it (or say it should be cloned in a comment)","msgtype":"m.text"},"ts":1345562854000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(cloning bugs is a pretty great way to fragment discussion and confuse everyone)","msgtype":"m.text"},"ts":1345562900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Well yeah, but so is having two specs developing in parallel that are mostly the same but have subtle differences","msgtype":"m.text"},"ts":1345563026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The only thing it's better than (in this case) is *not* doing that","msgtype":"m.text"},"ts":1345563052000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doing two horrible things is generally considered worse than doing one horrible thing","msgtype":"m.text"},"ts":1345563067000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"You have a proposal for how to organise the bugs so taht no cloning is needed but the specs aren't coupled in the way they were before?","msgtype":"m.text"},"ts":1345563113000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you ask that as if cloning bugs is actually a \"solution\"","msgtype":"m.text"},"ts":1345563452000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zcorpan: Ah, you're right, I missed that.  I'll add that in.","msgtype":"m.text"},"ts":1345569464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"abarth: ping","msgtype":"m.text"},"ts":1345570025000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: hi","msgtype":"m.text"},"ts":1345570031000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: just curious, how does webkit handle expandos on DOM nodes","msgtype":"m.text"},"ts":1345570046000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"element.fooproperty = element; for example","msgtype":"m.text"},"ts":1345570083000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is quite amazed that cycles are so hard for webkit","msgtype":"m.emote"},"ts":1345570096000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm not sure I understand your question","msgtype":"m.text"},"ts":1345570169000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"expandos are handled inside the javascript engine","msgtype":"m.text"},"ts":1345570180000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and are not represented in C++","msgtype":"m.text"},"ts":1345570184000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but C++ object doesn't keep the JS wrapper alive?","msgtype":"m.text"},"ts":1345570198000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not directly","msgtype":"m.text"},"ts":1345570259000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"we use the C++ object graph to inform the JS engine about connections between the wrappers","msgtype":"m.text"},"ts":1345570276000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the JS engine then decides whether those connections mean that the wrappers should be kept alive","msgtype":"m.text"},"ts":1345570287000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1345570339000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so there is mini cycle analyzer somewhere","msgtype":"m.text"},"ts":1345570366000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"kind of","msgtype":"m.text"},"ts":1345570369000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"cycle or connection analysis ...","msgtype":"m.text"},"ts":1345570383000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://docs.google.com/presentation/d/1OFG81taxgjOGU43sv9WHvPZkt5--KnM6gSijWN8NMcU/edit?disco=AAAAAECHbXY#slide=id.g16a516bb_1_53","msgtype":"m.text"},"ts":1345570384000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"see slide 53 and onwards in that presentation","msgtype":"m.text"},"ts":1345570394000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the JavaScript garbage collector can deal with cycles","msgtype":"m.text"},"ts":1345570413000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"because it uses mark-and-sweep","msgtype":"m.text"},"ts":1345570418000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"however, cycles cause leaks in the C++ heap","msgtype":"m.text"},"ts":1345570428000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"WebKit has a separate heap for C++ objects and for JavaScript objects","msgtype":"m.text"},"ts":1345570437000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"sure, same with Gecko","msgtype":"m.text"},"ts":1345570471000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but Gecko just can deal with cycle in C++ too","msgtype":"m.text"},"ts":1345570481000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and C++->JS->C++ cycles","msgtype":"m.text"},"ts":1345570487000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and based on the comments, also Opera and IE can deal with C++->JS->C++ cycles easily","msgtype":"m.text"},"ts":1345570510000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so I'm rather reluctant to change APIs because of one engine","msgtype":"m.text"},"ts":1345570551000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sadly, WebKit isn't that smart","msgtype":"m.text"},"ts":1345570552000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Yet.","msgtype":"m.text"},"ts":1345570559000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, then we won't be able to implement the API","msgtype":"m.text"},"ts":1345570561000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"its not possible to do without massive changes to the engine","msgtype":"m.text"},"ts":1345570577000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or memory leaks","msgtype":"m.text"},"ts":1345570581000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"TabAtkins: yeah, I assume webkit will have to be changed to handle cycles","msgtype":"m.text"},"ts":1345570594000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that's not going to happen","msgtype":"m.text"},"ts":1345570604000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1345570615000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Kentaro is investigating moving DOM to JS.","msgtype":"m.text"},"ts":1345570616000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: are you volunteering to do the work?","msgtype":"m.text"},"ts":1345570631000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"no :)","msgtype":"m.text"},"ts":1345570639000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: because it's quite difficult","msgtype":"m.text"},"ts":1345570643000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I have enough fun with Gecko's cycle collector","msgtype":"m.text"},"ts":1345570647000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: kentaro concluded that we shouldn't do it because it would be slower, at least based on current designs","msgtype":"m.text"},"ts":1345570681000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"smaug____: I don't intend to be a stick in the mud, it's just not something that's possible to implement in a feasible amount of time","msgtype":"m.text"},"ts":1345570724000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I don't believe Kentaro is set on that, and others in the thread are more optimistic about experimenting with this.","msgtype":"m.text"},"ts":1345570725000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well, blocking UndoManager on DOM-in-JS basically means UndoManager won't happen anytime soon","msgtype":"m.text"},"ts":1345570758000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Ah, I didn't know the context of this discussion.","msgtype":"m.text"},"ts":1345570783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"abarth: oh, sure, something like CC isn't a trivial task. Has taken ages to get performance to reasonable level in Gecko.","msgtype":"m.text"},"ts":1345570836000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but still, limiting Web APIs just because one engine hasn't been updated to have such a core memory management functionality would be odd","msgtype":"m.text"},"ts":1345571014000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: You're welcome to have whatever opinion you like on that topic.  The facts on the ground are that we cannot implement the API as specified.  Therefore, if you'd like WebKit to implement the API, the specification needs to change.","msgtype":"m.text"},"ts":1345571082000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or someone needs to fix webkit to handle cycles and implement undomanager after that","msgtype":"m.text"},"ts":1345571177000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: right, but the schedule for that is basically \"not any time soon\", so it's the same as not implementing it","msgtype":"m.text"},"ts":1345571247000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"doesn't agree :)","msgtype":"m.emote"},"ts":1345571269000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's not a matter of opinion","msgtype":"m.text"},"ts":1345571287000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"what part don't you agree with?","msgtype":"m.text"},"ts":1345571293000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you think someone is going to change WebKit's memory model sometime soon?","msgtype":"m.text"},"ts":1345571305000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"\"it's the same as not implementing it\"","msgtype":"m.text"},"ts":1345571314000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"you can implement UndoManager next year","msgtype":"m.text"},"ts":1345571331000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it won't happen","msgtype":"m.text"},"ts":1345571336000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"(there must be some huge pressure inside Google to get UndoManager to Chrome)","msgtype":"m.text"},"ts":1345571369000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"why do you say that?","msgtype":"m.text"},"ts":1345571455000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"just wondering","msgtype":"m.text"},"ts":1345571464000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"why you can't implement UndoManager later","msgtype":"m.text"},"ts":1345571471000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you have to implement a cycle collector to implement UndoManager i can't imagine why we would ever do it","msgtype":"m.text"},"ts":1345571472000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"and try to fix memory management first","msgtype":"m.text"},"ts":1345571479000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: later => never","msgtype":"m.text"},"ts":1345571492000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"if this is the only thing in the web platform that requires it, why would we do something so complicated and slow?","msgtype":"m.text"},"ts":1345571501000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"because it's unlikely we'll ever implement this new memory management model","msgtype":"m.text"},"ts":1345571508000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"jamesr: I'm pretty sure there will be plenty of web APIs which will cause similar cycle issues","msgtype":"m.text"},"ts":1345571508000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not that will be implemented in WebKit","msgtype":"m.text"},"ts":1345571526000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"jamesr: cycle collector doesn't need to be slow","msgtype":"m.text"},"ts":1345571607000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but it is","msgtype":"m.text"},"ts":1345571618000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"in normal cases it isn't","msgtype":"m.text"},"ts":1345571627000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"when optimized","msgtype":"m.text"},"ts":1345571631000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: please feel free to contribute a patch","msgtype":"m.text"},"ts":1345571655000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"smaug____: without code, I don't believe you","msgtype":"m.text"},"ts":1345571661000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"as far as I can tell, it requires at least one extra brach for every Node edge write","msgtype":"m.text"},"ts":1345571687000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or at least, we haven't figured out a design that can avoid that branch","msgtype":"m.text"},"ts":1345571698000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"maybe one exists","msgtype":"m.text"},"ts":1345571705000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"now, it's possible we can get that speed back by removing an increment operation, but we've optimized out almost all of the increment operations","msgtype":"m.text"},"ts":1345571740000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"smaug____, abarth: I'm skeptical of multiple UndoManagers per document anyway","msgtype":"m.text"},"ts":1345571869000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Oh, that is different thing","msgtype":"m.text"},"ts":1345571885000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the use case provided (vector graphics editor embedded in a rich text editor) doesn't work the way it's proposed in real apps","msgtype":"m.text"},"ts":1345571892000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we certainly need one UndoManager per input field","msgtype":"m.text"},"ts":1345571897000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"for example, Keynote lets you edit vector graphics and text in the same document","msgtype":"m.text"},"ts":1345571909000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and it exposes a single undo list per window","msgtype":"m.text"},"ts":1345571918000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in fact, it's the norm for all Mac apps to have a single undo list per window","msgtype":"m.text"},"ts":1345571935000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even if the window holds a compound document, or multiple text fields","msgtype":"m.text"},"ts":1345571944000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't know for sure about other platforms","msgtype":"m.text"},"ts":1345571954000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but at least as proposed, the API would result in web apps violating the Mac HI guidelines","msgtype":"m.text"},"ts":1345571971000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(mac UIs make me want to cut myself)","msgtype":"m.text"},"ts":1345571991000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1345571998000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"are there any platforms where native apps really do have separate modal undo lists?","msgtype":"m.text"},"ts":1345572015000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"rniwa: you were testing this","msgtype":"m.text"},"ts":1345572027000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and yes, there are such apps","msgtype":"m.text"},"ts":1345572042000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the use cases document that I looked at didn't seem to list real-world examples (but I may have overlooked it)","msgtype":"m.text"},"ts":1345572081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in any case, even if apps like that are the norm on Windows, you'd want to design the API so that you can have either modal undo lists or a single interleaved undo list depending on local platform conventions","msgtype":"m.text"},"ts":1345572114000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"smaug____: testing what?","msgtype":"m.text"},"ts":1345572530000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"native apps and undo handling","msgtype":"m.text"},"ts":1345572560000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"othermaciej: even on Mac, each text field has its own undo maanger","msgtype":"m.text"},"ts":1345572652000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: because each text field is implemented as a seprate view.","msgtype":"m.text"},"ts":1345572661000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: i'm open to amend the spec if you have a concrete proposal.","msgtype":"m.text"},"ts":1345572705000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: What's the state of running testharness.js/W3C tests in webkit?","msgtype":"m.text"},"ts":1345574688000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it runs :)","msgtype":"m.text"},"ts":1345574699000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: testharness.js has been imported to WebKit","msgtype":"m.text"},"ts":1345574706000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: and W3C reftests are supported to some extent.","msgtype":"m.text"},"ts":1345574716000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: we're still discussing the process by which we import tests","msgtype":"m.text"},"ts":1345574728000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: we've found that we have to make a bunch of imporvements to our testing infrastrucutre first","msgtype":"m.text"},"ts":1345574740000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: in order to import more tests.","msgtype":"m.text"},"ts":1345574744000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1345574754000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you can see some tests for regions and undo manager written using testharness.js already","msgtype":"m.text"},"ts":1345574776000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: those can be upstreamed directly to W3C repository","msgtype":"m.text"},"ts":1345574792000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: do you mean each text field has its own undo manager in reality, or in your proposal?","msgtype":"m.text"},"ts":1345574990000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yes.","msgtype":"m.text"},"ts":1345574999000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: in realitiy on mac","msgtype":"m.text"},"ts":1345575004000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: when I open a test document with two <input type=text>, I get a single unified undo list","msgtype":"m.text"},"ts":1345575008000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: on native Mac apps","msgtype":"m.text"},"ts":1345575022000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: not on WebKit","msgtype":"m.text"},"ts":1345575024000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: if you have text fields on Mac app, undos in each text field aren't usually put int a single undo stack.","msgtype":"m.text"},"ts":1345575135000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: ok, I can repro that sort of, but what I actually see is that changing focus from one text field to another (e.g. in Mail prefs) wipes the undo stack","msgtype":"m.text"},"ts":1345575194000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"rniwa: in other words, switching focus back doesn't get you the old undo list","msgtype":"m.text"},"ts":1345575207000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: that's a good point.","msgtype":"m.text"},"ts":1345575273000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I don't know of any app where you truly have multiple independent undo lists in one window","msgtype":"m.text"},"ts":1345575294000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think the text field behavior may not be fully intended, I think it is an artifact of the fact that the real editable text field only exists temporarily while you have focus, and gets recycled when you change focus","msgtype":"m.text"},"ts":1345575325000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"WebKit doesn't have that issue which is why actually we let you undo across multiple fields","msgtype":"m.text"},"ts":1345575346000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: possibly.","msgtype":"m.text"},"ts":1345575357000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: but we can't have one undo manager per page","msgtype":"m.text"},"ts":1345575363000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: that'll lead to the said cross-origin problem","msgtype":"m.text"},"ts":1345575373000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: so we need to have at least one undo manager per document.","msgtype":"m.text"},"ts":1345575390000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"you pointed me to a security bug that said it might be a problem, but it didn't identify an actual problem","msgtype":"m.text"},"ts":1345575396000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that being said, one per document is much closer to reasonable UI, and much saner to implement","msgtype":"m.text"},"ts":1345575420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so it would still be a big improvement","msgtype":"m.text"},"ts":1345575424000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: the problem is that you can trigger undo/redo on a cross-origin document","msgtype":"m.text"},"ts":1345575428000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: given that we have seamless iframe","msgtype":"m.text"},"ts":1345575480000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: it might be okay.","msgtype":"m.text"},"ts":1345575487000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right, and that seems bad in theory, but I'm not totally sure what the real danger of that is","msgtype":"m.text"},"ts":1345575502000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: restricting undo manager to be per-document will solve a whole bunch of problems we've had.","msgtype":"m.text"},"ts":1345575532000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"security problems? or implementation problems?","msgtype":"m.text"},"ts":1345575550000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: what is?","msgtype":"m.text"},"ts":1345575560000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"restricting undo manager to be per-document will solve a whole bunch of problems we've had\"","msgtype":"m.text"},"ts":1345575570000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"what kind of problems?","msgtype":"m.text"},"ts":1345575574000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: reference cycle problem","msgtype":"m.text"},"ts":1345575584000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: having to \"disconnect\" undo manager when the node moves from one place to another in the same document","msgtype":"m.text"},"ts":1345575597000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: or having to adopt an undo manager from one document to another","msgtype":"m.text"},"ts":1345575606000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: undoscope also depends on contenteditable because it doesn't make any sense to have multiple undo managers in the same editable region","msgtype":"m.text"},"ts":1345575633000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh, you mean relative to per-node","msgtype":"m.text"},"ts":1345575638000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: that also adds a lot of complications for us because content-editability is specified by CSS in WebKit","msgtype":"m.text"},"ts":1345575654000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I thought you meant per-document relative to per-top-level","msgtype":"m.text"},"ts":1345575656000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah.","msgtype":"m.text"},"ts":1345575657000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: I'm saying that per-document is much better implementation wise","msgtype":"m.text"},"ts":1345575676000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: it'll solve all sorts of problems we face","msgtype":"m.text"},"ts":1345575682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah, it's simpler to implement, and probably better in terms of user experience","msgtype":"m.text"},"ts":1345575690000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: potentially.","msgtype":"m.text"},"ts":1345575697000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: could you reply to the public-webapps thread we have?","msgtype":"m.text"},"ts":1345576312000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: i breifly talked with ojan about this","msgtype":"m.text"},"ts":1345576319000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"othermaciej: and we both agreed that we can just get rid of undoscope attribute","msgtype":"m.text"},"ts":1345576329000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah, I can","msgtype":"m.text"},"ts":1345576332000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"adds a TODO item","msgtype":"m.emote"},"ts":1345576337000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it simplieis a lot of thigns, and it seems like an overall win.","msgtype":"m.text"},"ts":1345576344000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"D'oh, I hate responding to a very long well-intentioned suggestion email with \"You're wrong in every way.  Sorry.\".","msgtype":"m.text"},"ts":1345577486000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"welcome to my life","msgtype":"m.text"},"ts":1345577618000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you start to get a large portfolio of ways to say \"no\"","msgtype":"m.text"},"ts":1345577640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still no hsivonen about? is he on vacation or something? anyone know?","msgtype":"m.text"},"ts":1345577842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Pretty sure he is never here at this time even when he is about","msgtype":"m.text"},"ts":1345578101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the stats page confirms this)","msgtype":"m.text"},"ts":1345578193000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"he's been idle for four days","msgtype":"m.text"},"ts":1345578402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm not sure regular hours apply :-)","msgtype":"m.text"},"ts":1345578411000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"note to self: don't use *scratch* when generating editor boilerplate replies.","msgtype":"m.text"},"ts":1345581658000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"You didn't manage to make the editor bilerplate valid elisp?","msgtype":"m.text"},"ts":1345581740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"+o","msgtype":"m.text"},"ts":1345581767000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: fallback leads to authors not noticing the problem which leads to more network traffic for lower quality results than the ideal result the author wanted","msgtype":"m.text"},"ts":1345584684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, but lack of fallback means the user is punished by not having an image when a less-good substitute is available.","msgtype":"m.text"},"ts":1345584717000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I'm for dropping the fallback, but the CSSWG wanted me to pursue requesting a change to HTML first.)","msgtype":"m.text"},"ts":1345584730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"These two positions appear to be the fundamental argument.","msgtype":"m.text"},"ts":1345584748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's what we settled into at the f2f.","msgtype":"m.text"},"ts":1345584758000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if the author sees the problem, they'll likely fix it, so the user will get the high quality image","msgtype":"m.text"},"ts":1345584788000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so no fallback seems net better for the user in the longer term","msgtype":"m.text"},"ts":1345584799000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Fallback = better user experience when there's a minor problem, No Fallback = less network traffic and better chance of noticing the problem.","msgtype":"m.text"},"ts":1345584801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are there script-visible effects from srcset that might change asynchronously if a fallback happens? (if so, that would be a significant complication)","msgtype":"m.text"},"ts":1345585034000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: sure, the image dimensions would change","msgtype":"m.text"},"ts":1345585065000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"technically btw the html spec allows fallback today, iirc","msgtype":"m.text"},"ts":1345585079000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be very bad, I think (since it's one of those rare things that nobody would ever handle, even if we gave them a way)","msgtype":"m.text"},"ts":1345585081000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"since you can arbitrarily decide to rerun the algorithm and arbitrarily pick anything from the list","msgtype":"m.text"},"ts":1345585092000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's just like technically the spec allows the UA to not show the image inline at all but to project it onto a second monitor with the colours reversed, or whatnot","msgtype":"m.text"},"ts":1345585126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: Added the rect() quirk to the doc as well.","msgtype":"m.text"},"ts":1345588045000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so svn blame tells me what revision a line was added in","msgtype":"m.text"},"ts":1345590045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there some way to find out when it was removed?","msgtype":"m.text"},"ts":1345590050000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a kind of reverse blame?","msgtype":"m.text"},"ts":1345590059000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh jeez, view this in WebKit: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1706","msgtype":"m.text"},"ts":1345591001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Uninitialized memory reads ahoy!","msgtype":"m.text"},"ts":1345591008000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ooof. what's the bug #?","msgtype":"m.text"},"ts":1345591858000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"esprehn is working on it already, I think.","msgtype":"m.text"},"ts":1345591868000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"He showed me the problem a few minutes ago.","msgtype":"m.text"},"ts":1345591882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boggles, \"Anyone every heard of chrome consolidating ajax POST requests?\"","msgtype":"m.emote"},"ts":1345592622000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Click 10 times, 10 events fired, only 3 requests really made. Now THAT in unexpected.","msgtype":"m.text"},"ts":1345593522000,"senderName":"gavinc","senderId":"gavinc@irc"}
]