[
{"content":{"body":"TabAtkins, can srcset handle switching of both size and resolution (2x, 3x) for a single image?","msgtype":"m.text"},"ts":1414032539000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"JosephSilber: Yes, you can use multiple <source srcset> elements, one for each media query.","msgtype":"m.text"},"ts":1414035417000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, Is that for picture or img?","msgtype":"m.text"},"ts":1414035438000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"I'm talking about image srcset. No art direction.","msgtype":"m.text"},"ts":1414035461000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"If you dont' care about art direction, what did you mean by \"switching of size\"?","msgtype":"m.text"},"ts":1414035507000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from define how Array.from should handle primatives?","msgtype":"m.text"},"ts":1414035729000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I am having trouble understanding http://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject - what happens a Boolean, for instance?","msgtype":"m.text"},"ts":1414035793000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JosephSilber: If you mean that you don't know how large the image will be (because its size is a percentage, or uses other units that might not be resolvable to pixels ahead of time), then you use the w unit rather than x; srcset will handle things for you.","msgtype":"m.text"},"ts":1414035842000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, Apple *still* doesn't support width based srcset :(","msgtype":"m.text"},"ts":1414035875000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Even in iOS8","msgtype":"m.text"},"ts":1414035880000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"JonathanNeal: It returns a Boolean object.  That's different from a boolean value, note.","msgtype":"m.text"},"ts":1414035887000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JosephSilber: Yeah, they haven't finished things out yet. :/","msgtype":"m.text"},"ts":1414035896000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does anyone remember when the iPhone launched, and it had the most advanced mobile browser?","msgtype":"m.text"},"ts":1414035907000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"What a joke that is now.","msgtype":"m.text"},"ts":1414035912000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"They don't even do validation :/","msgtype":"m.text"},"ts":1414035920000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"How long has that been around for...?","msgtype":"m.text"},"ts":1414035936000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"I see, so it’s like `Object(true)`. No keys, but somehow still true.","msgtype":"m.text"},"ts":1414035945000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: Boolean(false) is truthy. ^_^","msgtype":"m.text"},"ts":1414035964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(All objects are truthy.)","msgtype":"m.text"},"ts":1414035968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fun!","msgtype":"m.text"},"ts":1414035979000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yeah, it's great.","msgtype":"m.text"},"ts":1414035985000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why doesn't srcset support infinite sizes, with a server-side script rendering whatever size the client needs?","msgtype":"m.text"},"ts":1414036174000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"JosephSilber: Client Hints is an effort to work on that.","msgtype":"m.text"},"ts":1414036218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which will work nicely with srcset.","msgtype":"m.text"},"ts":1414036227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I'm saying that I want the client to decide, not the server.","msgtype":"m.text"},"ts":1414036283000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Let the client tell the server what size it wants.","msgtype":"m.text"},"ts":1414036299000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"The server can do whatever it wants.  All we can do is tell it what the resolution/etc is, which is what Client Hints does.","msgtype":"m.text"},"ts":1414036318000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The server shouldn't care about dpr, network speed or whatever else","msgtype":"m.text"},"ts":1414036324000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"srcset is built so that the browser can take into account everything it know to and pick the correct image.","msgtype":"m.text"},"ts":1414036345000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Why not let it pick from an infinite pool?","msgtype":"m.text"},"ts":1414036356000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"That's literally what I'm saying.","msgtype":"m.text"},"ts":1414036402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Client Hints would have the server do a reimplementation of srcset's algorithms, of which many factors can't even be sent to the server.","msgtype":"m.text"},"ts":1414036412000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"What I'm saying is: \"Hello, I'm a server. I have an image that is 3000px x 4000px. Tell me which size you want.\"","msgtype":"m.text"},"ts":1414036470000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"That's what you end up with, yes.","msgtype":"m.text"},"ts":1414036488000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"I don't care about your dpr. I don't care about your network speed. I don't care about your viewport size. I don't care about your element size. Just give me dimensions.\"","msgtype":"m.text"},"ts":1414036519000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"Then I misread this: https://github.com/igrigorik/http-client-hints","msgtype":"m.text"},"ts":1414036530000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"I don't see anything in there that would support this.","msgtype":"m.text"},"ts":1414036539000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"client hints can certainly vary what it gives in the rw and dpr values to match exactly what it wants.","msgtype":"m.text"},"ts":1414036680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Am I to assume that Array.from is enumerable or not enumerable when it does not specify?","msgtype":"m.text"},"ts":1414037035000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"The method? built-ins generally aren't enumerable.","msgtype":"m.text"},"ts":1414037182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If it doesnt' actaully specify, it's a spec bug, but I'll bet it does, just in a confusing and indirect way.","msgtype":"m.text"},"ts":1414037200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"test262 seems to assert certain properties for functions of builtins that don't seem to be specified anywhere","msgtype":"m.text"},"ts":1414037470000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"well, maybe it does say \"function properties of builtin types don't have prototypes\" somewhere, but I haven't found it :c","msgtype":"m.text"},"ts":1414037509000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Last question. When Array.from converts length to a number, and the length is Infinity, should it throw an error? I don’t see something to throw that. Instead, it looks like it passes it along before it gets capped by min(length, 253-1).","msgtype":"m.text"},"ts":1414037843000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"e.g. If number is +0, −0, +∞, or −∞, return number … Return min(len, 253-1)","msgtype":"m.text"},"ts":1414037892000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Sorry for the formatting change on 2(little 53).","msgtype":"m.text"},"ts":1414037929000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"caitp-: JonathanNeal: the spec says things about built-in functions having no prototype, and built-in methods being nonenumerable","msgtype":"m.text"},"ts":1414040007000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: doesn't Array.from use ToLength? I thought that capped Infinity.","msgtype":"m.text"},"ts":1414040054000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it does","msgtype":"m.text"},"ts":1414040072000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"When does ToLength cap Infinity?","msgtype":"m.text"},"ts":1414040143000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"it caps at 2^53-1 iirc","msgtype":"m.text"},"ts":1414040157000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"step 5, Return min(len, 253-1).","msgtype":"m.text"},"ts":1414040168000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"min(Infinity, 2^53 - 1) is 2^53 - 1","msgtype":"m.text"},"ts":1414040178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yea, so it won’t throw.","msgtype":"m.text"},"ts":1414040179000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"so yeah it shouldn't throw","msgtype":"m.text"},"ts":1414040194000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It will cap, am I understanding that right?","msgtype":"m.text"},"ts":1414040194000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1414040200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it won't go higher","msgtype":"m.text"},"ts":1414040204000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"There’s really no way to pass an invalid length, then.","msgtype":"m.text"},"ts":1414040227000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"yeah isn't it great?","msgtype":"m.text"},"ts":1414040260000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"not true","msgtype":"m.text"},"ts":1414040282000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you could pass { valueOf() { throw new Error(\"boo!\"); } }","msgtype":"m.text"},"ts":1414040290000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"not sure that's a compelling useful thing to do though =)","msgtype":"m.text"},"ts":1414040331000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"built-in defaults defined in https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-standard-built-in-objects","msgtype":"m.text"},"ts":1414040353000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(hmm that \"ECMAScript\" prefix seems redundant on the section heading)","msgtype":"m.text"},"ts":1414040370000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: okay, in 99% of the cases other than explicitly telling the thing to throw, it will not.","msgtype":"m.text"},"ts":1414040384000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I mean, yes, it generally avoids throwing.","msgtype":"m.text"},"ts":1414040403000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just like +x generally avoids throwing","msgtype":"m.text"},"ts":1414040414000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or parseInt","msgtype":"m.text"},"ts":1414040422000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Thanks, Domenic.","msgtype":"m.text"},"ts":1414040690000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"“generally” made me laugh out loud.","msgtype":"m.text"},"ts":1414040720000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"there are cases where @@toStringTag will cause things to throw, and i worry how that will affect dev tools :( but I guess there's nothing you can do about it","msgtype":"m.text"},"ts":1414040981000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Ugh, index in array fails when array[index] = undefined in IE6-8.","msgtype":"m.text"},"ts":1414042336000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"fails?","msgtype":"m.text"},"ts":1414042510000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"index in array returns false","msgtype":"m.text"},"ts":1414042747000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"when that index has a value of undefined","msgtype":"m.text"},"ts":1414042754000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Likewise, for (index in array) will skip indexes/keys with a value of undefined.","msgtype":"m.text"},"ts":1414042989000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"In short, 0 in [undefined] is false","msgtype":"m.text"},"ts":1414043099000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Reading all about the fun here https://github.com/es-shims/es5-shim/issues/190","msgtype":"m.text"},"ts":1414043317000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"that's interesting","msgtype":"m.text"},"ts":1414043442000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Yea, that’s a pretty major flaw.","msgtype":"m.text"},"ts":1414043836000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"well it won't be long before people stop caring about ie8","msgtype":"m.text"},"ts":1414044289000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"one imagines","msgtype":"m.text"},"ts":1414044295000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Yes, huzzah, the end times are near, ie8, they always are.","msgtype":"m.text"},"ts":1414044436000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: arv: your call: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26178","msgtype":"m.text"},"ts":1414048383000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"oh, lowercase fetch","msgtype":"m.text"},"ts":1414059847000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: what was the reason to go with fetch() and not with some less-likely-to-be-used-in-web-pages name?","msgtype":"m.text"},"ts":1414059885000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I don't recall","msgtype":"m.text"},"ts":1414059926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is super annoying that we need to think about existing pages when exposing new APIs","msgtype":"m.text"},"ts":1414060318000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"try to stay positive :-)","msgtype":"m.text"},"ts":1414060666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA_: https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#register-algorithm are \"Get Registration\" and \"Get Newest Worker\" supposed to run synchronously?","msgtype":"m.text"},"ts":1414064979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA_: is it clear that if 7.2.2.2 returns 7.4/5 are no longer run?","msgtype":"m.text"},"ts":1414065012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, step 7 onwards should be async","msgtype":"m.text"},"ts":1414065235000,"senderName":"JakeA_","senderId":"JakeA_@irc"},
{"content":{"body":"JakeA_: filed an issue","msgtype":"m.text"},"ts":1414065252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That Google managed to implement something speaks volumes of how closely the specification has been read...","msgtype":"m.text"},"ts":1414065293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, 7.2.2.3 should be \"abort these steps\"","msgtype":"m.text"},"ts":1414065318000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I'm pretty sure those steps used to be async, I think they've changed","msgtype":"m.text"},"ts":1414065340000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you make t hem asynchronous, be sure to return the promise on time...","msgtype":"m.text"},"ts":1414065370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and be sure to check the registration stuff in a non-racy way","msgtype":"m.text"},"ts":1414065386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, drag me kicking and screaming into understanding this url issue. I need the URL for assigning a serviceworker registration on navigation. I also need a snapshot of it when we provide request.client, or the BrowsingContent instances from clients.getAll(). I don't understand why the active document changing will break things, or why a url entry","msgtype":"m.text"},"ts":1414079877000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"on the environment settings concept wouldn't have exactly the same issues","msgtype":"m.text"},"ts":1414079877000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The relationship between Window objects and documents, ignoring corner cases, is 1:1","msgtype":"m.text"},"ts":1414079980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The relationship between browsing contexts and documents, is 1:N","msgtype":"m.text"},"ts":1414079995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The current document in a browsing context is the active document","msgtype":"m.text"},"ts":1414080019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What a service worker has a relationship with is a Window object/document","msgtype":"m.text"},"ts":1414080035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So what we want to return is a document's url, and not a document's browsing context's active document's url","msgtype":"m.text"},"ts":1414080069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ah, and an environment settings object is 1:1:1 with a Window object and document","msgtype":"m.text"},"ts":1414080171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and you can't use an environment settings object's responsible document since it would not return a worker's url","msgtype":"m.text"},"ts":1414080245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if an environment settings object is 1:1:1 with a Window & document, what's the problem with getting a url from a client's global's location? (considering a request client is an environment settings object)","msgtype":"m.text"},"ts":1414080614000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"ignoring corner cases\"","msgtype":"m.text"},"ts":1414080617000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ahh ok","msgtype":"m.text"},"ts":1414080625000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"document.write isn't that faraway in a corner","msgtype":"m.text"},"ts":1414080639000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The url doesn't change in that case though, does it?","msgtype":"m.text"},"ts":1414080677000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"document doesn't change with document.write, but Window changes","msgtype":"m.text"},"ts":1414080702000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: a Location object observes document's browsing context's active document's url for various silly legacy reasons that I don't know","msgtype":"m.text"},"ts":1414080737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the other corner case is reusing Window object for another Document after the initial about:blank)","msgtype":"m.text"},"ts":1414080743000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I thought for a minute you were suggesting the global got reused too. What's the practical impact of window reuse between about:blank and next url?","msgtype":"m.text"},"ts":1414080958000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that your reference to the object is still valid","msgtype":"m.text"},"ts":1414081006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you do window.open() and can set event listener to the window object even before the document has been loaded","msgtype":"m.text"},"ts":1414081034000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: it means you can synchronously access an <iframe>'s Window from script while it's navigating to the page you actually requested","msgtype":"m.text"},"ts":1414081037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I seeeeeee","msgtype":"m.text"},"ts":1414081048000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The web's complicated isn't it?","msgtype":"m.text"},"ts":1414081063000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"about:blank is really complicated","msgtype":"m.text"},"ts":1414081076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the web is okay in comparison :p","msgtype":"m.text"},"ts":1414081087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So if the env settings obj concept gets a \"document url\", which document would that be defined as?","msgtype":"m.text"},"ts":1414081815000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the URL that caused it to be created, I would imagine","msgtype":"m.text"},"ts":1414081864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that means request.client.url wouldn't reflect changes made by pushState… *ponders on if that's a good or bad thing*","msgtype":"m.text"},"ts":1414081973000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: perhaps for document-based environments there should be currentURL as well?","msgtype":"m.text"},"ts":1414082130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or perhaps for document-based environments it should return the document's url","msgtype":"m.text"},"ts":1414082235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: either way, definitely not the active document","msgtype":"m.text"},"ts":1414082267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if I got a push message, I wouldn't show a notification if a relevant tab was focused & visible. For this case, pushState matters, I want the \"location bar\" url. For clients.takeControl(), if we go by post-pushState url, you get a weird edge-case where documents that were originally loaded out-of-scope could become controlled, so creationURL feels","msgtype":"m.text"},"ts":1414082695000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"less hacky. Yeah, we need both, and should expose both.","msgtype":"m.text"},"ts":1414082695000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: does this make sense https://www.w3.org/Bugs/Public/show_bug.cgi?id=27146 ?","msgtype":"m.text"},"ts":1414083939000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sounds good","msgtype":"m.text"},"ts":1414083981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think Mike West also wants these hooks","msgtype":"m.text"},"ts":1414083995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cheers & thanks for persevering. If I continue to not get it, feel free to declare me not fit for spec writing :D","msgtype":"m.text"},"ts":1414084076000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA, eh, we'll take anybody :)","msgtype":"m.text"},"ts":1414084108000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Web Better Than Native Spec 1.0\" Algorithms: 1. Be better than native. 2. Abort these steps.","msgtype":"m.text"},"ts":1414084272000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: You're right, that's a terrible spec","msgtype":"m.text"},"ts":1414084297000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Step 2 should be \"Goto 1\"","msgtype":"m.text"},"ts":1414084313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Probably should be… ahh beat me to it","msgtype":"m.text"},"ts":1414084322000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or 2. Be even more better","msgtype":"m.text"},"ts":1414084370000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, glad we solved that one","msgtype":"m.text"},"ts":1414084412000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Someone make a press release","msgtype":"m.text"},"ts":1414084418000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: not sure how you managed to pull this off https://github.com/slightlyoff/ServiceWorker/issues/468#issuecomment-60276779 but kudos","msgtype":"m.text"},"ts":1414086061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: there's nothing I won't do to save https://jakearchibald.github.io/trained-to-thrill/","msgtype":"m.text"},"ts":1414086107000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"actually I'll need to change the script location","msgtype":"m.text"},"ts":1414086117000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hahahaha","msgtype":"m.text"},"ts":1414086130000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but that's easy vs getting Github to change headers","msgtype":"m.text"},"ts":1414086137000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes exactly","msgtype":"m.text"},"ts":1414086143000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i was/am really worried about any solution that prevents creating SW sites on GitHub pages","msgtype":"m.text"},"ts":1414086159000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, GitHub pages were the sweetener to the https restriction","msgtype":"m.text"},"ts":1414086212000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: so, what's the protocol now, shall I edit the serviceworker spec assuming those url things are on the env settings object? Are there annotation patterns for this stuff?","msgtype":"m.text"},"ts":1414086477000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems reasonable","msgtype":"m.text"},"ts":1414087487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: annotate as monkey patch","msgtype":"m.text"},"ts":1414087514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ta","msgtype":"m.text"},"ts":1414087564000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So glad Hixie pioneered this space several years ago","msgtype":"m.text"},"ts":1414089337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: thanks again for the help with Array.from.","msgtype":"m.text"},"ts":1414090103000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"array.from is pretty neat","msgtype":"m.text"},"ts":1414090202000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I am not a fan","msgtype":"m.text"},"ts":1414090437000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"[...arrayLike] wins for me","msgtype":"m.text"},"ts":1414090442000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well it would be more fun to implement","msgtype":"m.text"},"ts":1414090478000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but there are things I like about not turning the language into some more ubiquitous version of python","msgtype":"m.text"},"ts":1414090513000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"python is hard to read","msgtype":"m.text"},"ts":1414090516000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: and we learned about more issues with IE8. Yay for no distinguishment between dense and sparse arrays.","msgtype":"m.text"},"ts":1414091131000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"you gotta figure sparse arrays are probably not very common for most use cases though","msgtype":"m.text"},"ts":1414091194000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"its one of the reasons why people often use for loops instead of forEach --- because forEach will care about sparse-ness and skip properties that aren't in the collection, which is significantly more expensive than just invoking the callback with an undefined value","msgtype":"m.text"},"ts":1414091294000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"What was the reason it was called .forEach instead of .each?","msgtype":"m.text"},"ts":1414091477000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: which space was i pioneering? :-)","msgtype":"m.text"},"ts":1414091599000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: minting new global objects and defining their infrastructure","msgtype":"m.text"},"ts":1414091626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1414091668000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wouldn't say pioneering","msgtype":"m.text"},"ts":1414091672000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"more like i fell into a sewer","msgtype":"m.text"},"ts":1414091680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Now I want to play Mario","msgtype":"m.text"},"ts":1414091935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: given https://github.com/slightlyoff/ServiceWorker/issues/445#issuecomment-60297625 I at least would take up slightlyoff on the idea of reopening the event listeners issue :). that's the worst part to me.","msgtype":"m.text"},"ts":1414094746000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i think i would prefer fetch not being a special snowflake---the argument there doesn't hold IMO, since having a fetch hook doesn't mean anything about your offline capabilities---but that battle doesn't seem worth fighting","msgtype":"m.text"},"ts":1414094791000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nooo, zcorpan broke the build","msgtype":"m.text"},"ts":1414094885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's a guarantee that setTimeout(f, x) and setTimeout(g, x) runs f then g in any order, right? Hixie?","msgtype":"m.text"},"ts":1414094897000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1414094898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: <var>image request</span>","msgtype":"m.text"},"ts":1414094901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in that order","msgtype":"m.text"},"ts":1414094901000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i believe so, but i'd have to check the spec to be sure","msgtype":"m.text"},"ts":1414094916000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"another benefit of html.spec.whatwg.org subdomain---googling \"setTimeout site:html.spec.whatwg.org\"","msgtype":"m.text"},"ts":1414094943000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah yep \"Wait until any invocations of this algorithm that had the same method context, that started before this one, and whose timeout is equal to or less than this one's, have completed.\"","msgtype":"m.text"},"ts":1414094986000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: losing permissions for other things if you decide to enlarge the scope of your app seems pretty bad too","msgtype":"m.text"},"ts":1414103171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: tweets are still not working?","msgtype":"m.text"},"ts":1414103665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh well, nn","msgtype":"m.text"},"ts":1414103735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow so apparently you used to be able to put default attributes in your DTD and when you did createElement(\"tagname\") with that it would actually create an element with .attributes pre-populated???","msgtype":"m.text"},"ts":1414106175000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and .specified used to be a thing??","msgtype":"m.text"},"ts":1414106470000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wow the DOM was effed up","msgtype":"m.text"},"ts":1414106473000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(I'm looking through old dom level 1 tests which jsdom still has in its corpus... we're trying to kill the level1/level2/level3 structure and it's causing a bunch of level1 tests to fail.)","msgtype":"m.text"},"ts":1414106507000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \"be able to\" is maybe the wrong way to put it","msgtype":"m.text"},"ts":1414107737000,"senderName":"Hixie","senderId":"Hixie@irc"}
]