[
{"content":{"body":"heycam|away: ping https://github.com/w3ctag/promises-guide/issues/15#issuecomment-37483172","msgtype":"m.text"},"ts":1395273753000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, will reply today","msgtype":"m.text"},"ts":1395276858000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"does anything actually use meta description anymore?","msgtype":"m.text"},"ts":1395278183000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Yeah, it's used by Google for the site description, if there's no better signals.","msgtype":"m.text"},"ts":1395278366000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you mean the blurb in the results?","msgtype":"m.text"},"ts":1395278386000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or actual search matching?","msgtype":"m.text"},"ts":1395278401000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I'd presume it's used for search matching if it's used as the blurb","msgtype":"m.text"},"ts":1395280018000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The blurb.","msgtype":"m.text"},"ts":1395280752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it does indeed contribute to search matching, as well, but I have no real insight into that.","msgtype":"m.text"},"ts":1395280764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mathiasbynens: hmm now i need to look into making that up to date again","msgtype":"m.text"},"ts":1395301449000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: https://critic.hoppipolla.co.uk/r/924","msgtype":"m.text"},"ts":1395303625000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: does things get confused if a reftest includes testharness.js?","msgtype":"m.text"},"ts":1395304072000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"how do reftests work, when is the screenshot snapped? onload? xhr doesn't delay onload, does it? is there a way to delay the snapshot? (this is on web-platform-tests)","msgtype":"m.text"},"ts":1395304441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: jgraham: ^","msgtype":"m.text"},"ts":1395304454000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, I know Gecko has something... class=reftest-wait on the root?","msgtype":"m.text"},"ts":1395307986000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not sure if wpt has something","msgtype":"m.text"},"ts":1395307999000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: Yes, they get confused if you include testharness.js","msgtype":"m.text"},"ts":1395308561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ok","msgtype":"m.text"},"ts":1395308575000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"At least in an obvious way","msgtype":"m.text"},"ts":1395308582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you really need it in some way you can include it at runtime","msgtype":"m.text"},"ts":1395308609000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We don","msgtype":"m.text"},"ts":1395308614000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"'t have a reftest-wait equivalent at the moment","msgtype":"m.text"},"ts":1395308628000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But we probably need one (unless we can convince all browsers to implement something like Presto","msgtype":"m.text"},"ts":1395308688000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"had to determine when the event queue was empty)","msgtype":"m.text"},"ts":1395308710000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(which we can't)","msgtype":"m.text"},"ts":1395308723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah personally i prefer a class on the root","msgtype":"m.text"},"ts":1395308769000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: \"This pipe can also be enabled by using a filename *.sub.ext, e.g. the file above could be called xhr.sub.js.\" does that sound good to add to pipes.rst ?","msgtype":"m.text"},"ts":1395309003000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Well despite my skepticism the Presto solution worked rather well","msgtype":"m.text"},"ts":1395309004000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it isn't at all portable","msgtype":"m.text"},"ts":1395309028000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: Yeah","msgtype":"m.text"},"ts":1395309034000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ok then i'll commit it. i thought i was going to be given a \"create PR\" button but it was \"commit changes\" so...","msgtype":"m.text"},"ts":1395309094000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i should create a new github user that is not an owner of anything","msgtype":"m.text"},"ts":1395309121000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or whine to github to give me two buttons","msgtype":"m.text"},"ts":1395309131000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonder where to file a bug about github","msgtype":"m.text"},"ts":1395309379000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: somewhere in https://github.com/github/ I suspect","msgtype":"m.text"},"ts":1395309418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks... so which repo? :-P","msgtype":"m.text"},"ts":1395309661000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: \"somewhere\" :-P","msgtype":"m.text"},"ts":1395309673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I still got a couple open PRs for changes to URL tests","msgtype":"m.text"},"ts":1395309696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"one's pretty easy https://github.com/w3c/web-platform-tests/pull/768","msgtype":"m.text"},"ts":1395309705000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/commit/3a6bf6d2023053ad42c6a02c80ea4b1313becfaa","msgtype":"m.text"},"ts":1395309719000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the other one is just a port of more webkit URL tests https://github.com/w3c/web-platform-tests/pull/771","msgtype":"m.text"},"ts":1395309748000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for host canonicalization","msgtype":"m.text"},"ts":1395309760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"by way of smola","msgtype":"m.text"},"ts":1395309774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: looks good, be aware that some of this may change","msgtype":"m.text"},"ts":1395309857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I guess it's better to have tests to compare the changes against than nothing at all","msgtype":"m.text"},"ts":1395309885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: reviewed through critic","msgtype":"m.text"},"ts":1395309926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1395309931000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: i used the contact form instead","msgtype":"m.text"},"ts":1395309967000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: support⊙gc or contact form is The Right Way™","msgtype":"m.text"},"ts":1395314668000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: excellent","msgtype":"m.text"},"ts":1395314703000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: i got a gold star so maybe i did something right","msgtype":"m.text"},"ts":1395314728000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess \"FUUUUUUUUUUUUUUUUUUUUUUUUUU U SUCK\" was less than 140 chars","msgtype":"m.text"},"ts":1395314806000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"We should offer such stars to Kyle Simpson on the mailing list","msgtype":"m.text"},"ts":1395314933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But with \"Less than 140 thousand words\"?","msgtype":"m.text"},"ts":1395316015000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"are wpt PRs still mirrored on w3c-test.org somewhere?","msgtype":"m.text"},"ts":1395318774000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah","msgtype":"m.text"},"ts":1395318851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, under submissions/","msgtype":"m.text"},"ts":1395318854000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah there, thx","msgtype":"m.text"},"ts":1395318886000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"about exceptions, I see the label \"Legacy code exception field value\" used in the DOM spec, can I assume that I shouldn't use those in current code?","msgtype":"m.text"},"ts":1395322463000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean http://dom.spec.whatwg.org/#error-names-0","msgtype":"m.text"},"ts":1395322477000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I should use SyntaxError instead of SYNTAX_ERR","msgtype":"m.text"},"ts":1395322504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1395322531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this is in the context of what I should use with assert_throws","msgtype":"m.text"},"ts":1395322539000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: OK","msgtype":"m.text"},"ts":1395322542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there somewhere this it more explicitly stated?","msgtype":"m.text"},"ts":1395322585000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean where it's stated that the name should be used rather than the \"Legacy code exception field value\"","msgtype":"m.text"},"ts":1395322627000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It may be in the th.js docs?","msgtype":"m.text"},"ts":1395322708000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1395322754000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1395322760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the thrown exception must be a DOMException with the given * name, e.g., \"TimeoutError\" (for compatibility with existing * tests, a constant is also supported, e.g., \"TIMEOUT_ERR\")","msgtype":"m.text"},"ts":1395322844000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1395332121000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: is there a way to get tracker to show more lines on its home page?","msgtype":"m.text"},"ts":1395335289000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ?limit=","msgtype":"m.text"},"ts":1395335330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1395335333000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: use -1 with caution ;-)","msgtype":"m.text"},"ts":1395335341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh i misunderstood what it did and set it to 7000 :-)","msgtype":"m.text"},"ts":1395335369000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in other news, anyone got a good example of a simple table i could add to the spec that demonstrates sortable=\"\"?","msgtype":"m.text"},"ts":1395335439000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i need some data that has maybe six lines with multiple numeric columns that aren't all in order and aren't all the same","msgtype":"m.text"},"ts":1395335465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: http://annevankesteren.nl/2007/09/tmb-overview","msgtype":"m.text"},"ts":1395335545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although that's not a great example","msgtype":"m.text"},"ts":1395335574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: WebIDL says \"When a specification says to perform some steps once a promise is settled, the following steps MUST be followed:\"","msgtype":"m.text"},"ts":1395338247000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"however, the promises guide doesn't speak of \"settling a promise\"","msgtype":"m.text"},"ts":1395338265000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: yeah, WebIDL kind of swooped in and started incorporating some of the stuff I envisioned the promises guide doing","msgtype":"m.text"},"ts":1395338328000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"promises guide's \"upon fulfillment\"/\"upon rejection\" <-> WebIDL's \"once a promise is settled\"","msgtype":"m.text"},"ts":1395338350000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1395338363000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"the WebIDL is really impenetrable with regards to Promises :(","msgtype":"m.text"},"ts":1395338390000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Domenic_: not blaming you, obviously","msgtype":"m.text"},"ts":1395338423000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"blames marcosc ","msgtype":"m.emote"},"ts":1395338444000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I also often blame myself","msgtype":"m.text"},"ts":1395338452000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"if only I had not been dropped so much as a baby...","msgtype":"m.text"},"ts":1395338474000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"You'd blame yourself a lot more?","msgtype":"m.text"},"ts":1395338495000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"probably... it's like in one of those TV shows where someone gets hit on the head and they suddenly become much smarter","msgtype":"m.text"},"ts":1395338535000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"go on, Ms2ger, try it!","msgtype":"m.text"},"ts":1395338548000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"sicking: glad someone said what i was thinking about push apis","msgtype":"m.text"},"ts":1395344432000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: :)","msgtype":"m.text"},"ts":1395344446000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Domenic_: actually, glad you pinged. I talked to our perf guys yesterday about IO perf","msgtype":"m.text"},"ts":1395344487000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Domenic_: His first reaction was \"Use node.js streams, those guys understood perf\".","msgtype":"m.text"},"ts":1395344536000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hah! :D","msgtype":"m.text"},"ts":1395344545000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"that is basically what we are doing","msgtype":"m.text"},"ts":1395344560000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: though he was actually a bit sceptical to the whole idea of using streams to do disk IO","msgtype":"m.text"},"ts":1395344568000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"interestingly i think node streams are just starting to deal with the out-of-main-thread idea","msgtype":"m.text"},"ts":1395344569000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or at least not-pass-through-the-C++/JS-barrier, which might be equivalent","msgtype":"m.text"},"ts":1395344595000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"hmm i wonder why","msgtype":"m.text"},"ts":1395344606000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"his argument was that often time when people stream, rather than read the whole file and then process, was that the \"read small chunks at a time\" adds so much overhead that it's a net perf loss","msgtype":"m.text"},"ts":1395344642000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i.e. he was saying that if you are reading a file that's in the order of < 50MB, then reading that in 1K chunks adds so much overhead to the individual read calls, that the read calls turns into a bottleneck","msgtype":"m.text"},"ts":1395344698000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hmm. my impression from node people is that the threshold is much less than 50 MB.","msgtype":"m.text"},"ts":1395344725000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"this does seem to vary from OS to OS. OSX is particularly bad apparently","msgtype":"m.text"},"ts":1395344756000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"there's also issues like how long it takes to parse 1 MB of JSON vs. incremental work on 100 1K chunks of JSON","msgtype":"m.text"},"ts":1395344770000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(though i would have thought that windows was worse, but we didn't spend too much time on it)","msgtype":"m.text"},"ts":1395344773000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1395344798000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"though he was also saying that if you read in 32-64kB chunks this is less of an issue","msgtype":"m.text"},"ts":1395344815000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well, yeah, optimal chunk size is up to the implementation","msgtype":"m.text"},"ts":1395344826000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so it's possible that simply increasing the default chunk (is that right word?) size that would help a bunch","msgtype":"m.text"},"ts":1395344845000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so it's up to each individual stream to decide how big the chunks they want to vend are","msgtype":"m.text"},"ts":1395344870000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so if browser/firefox OS streams want to vend 32 kB chunks, that is totally cool","msgtype":"m.text"},"ts":1395344887000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but if your files was large enough, then switching to something like a 2MB chunk size was needed for good perf","msgtype":"m.text"},"ts":1395344892000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that works too","msgtype":"m.text"},"ts":1395344900000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"it's not part of the streams spec; the streams spec just says \"here is how you queue up data; and here is how people can get data out of that queue\"","msgtype":"m.text"},"ts":1395344920000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but how big the data chunks are that you queue up is up to the individual stream","msgtype":"m.text"},"ts":1395344931000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah, so maybe we can make the current API work","msgtype":"m.text"},"ts":1395344953000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it'd make perfect sense for FS streams to be specified, either loosely to let implementations choose, or with some kind of algorithm like you're describing","msgtype":"m.text"},"ts":1395344954000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"the other thing he was saying was that reusing chunks, rather than always allocating new ones, also makes a big difference perf-wise","msgtype":"m.text"},"ts":1395344990000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hmm what does that mean...","msgtype":"m.text"},"ts":1395345020000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(api-wise)","msgtype":"m.text"},"ts":1395345034000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"arg, crap, gotta get food before next meeting","msgtype":"m.text"},"ts":1395345056000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i have two proposals for how that can be done, but i'll have to get back to you","msgtype":"m.text"},"ts":1395345072000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1395345080000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i'm free after 4pm","msgtype":"m.text"},"ts":1395345081000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"pacific","msgtype":"m.text"},"ts":1395345085000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what timezone are you in btw?","msgtype":"m.text"},"ts":1395345089000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"eastern. but tonight i gotta speak at a meetup","msgtype":"m.text"},"ts":1395345105000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk-cloud: Can you do something about deprecating Selectors API 2, now that it's all been swallowed into DOM?","msgtype":"m.text"},"ts":1395350981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So it totally seems possible that authors will rely on the size of chunks that they get back from streams","msgtype":"m.text"},"ts":1395352341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(assuming it's detectable by the author, which I guess it must be)","msgtype":"m.text"},"ts":1395352375000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So if it's implementation defined that seems like a problem","msgtype":"m.text"},"ts":1395352392000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic_: ^","msgtype":"m.text"},"ts":1395352395000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah, I agree it's a concern.","msgtype":"m.text"},"ts":1395352450000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but then again, do authors depend on how much they get back from \"streaming\" XHR?","msgtype":"m.text"},"ts":1395352462000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I'm not sure. Is that as \"reliable\" as this (in the sense that a single implementation is always likely to return data in the same sized blocks)?","msgtype":"m.text"},"ts":1395352606000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'm not sure either.","msgtype":"m.text"},"ts":1395352630000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"although it sounds like it could vary here, even per-platform perhaps","msgtype":"m.text"},"ts":1395352640000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"e.g. macs vs. pcs","msgtype":"m.text"},"ts":1395352642000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or big files vs. small files","msgtype":"m.text"},"ts":1395352673000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I'm not sure that makes it better. If it was *always* different people probably wouldn't rely on it. But if people expected 1kB from testing on WebKit/Mac they might well get unexpected breakage if IE/Windows returned 1Mb. Or if they got 1kB consistently for small test data and suddenly got 64kB for larger files in production.","msgtype":"m.text"},"ts":1395352821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: i seem to recall pointing out at some point that if we have a stream API, it should be based on requesting blocks of data with a given size and getting a callback when that amount is available, to ensure that block sizes of the implementation are never exposed","msgtype":"m.text"},"ts":1395354771000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"can't recall where (not that it matters)","msgtype":"m.text"},"ts":1395354895000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seems like an obvious interop requirement though","msgtype":"m.text"},"ts":1395355012000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"might have been talking about streaming out (eg. streaming JS to the browser), which is also a problem (exposing the number of bytes the implementation requests at a time, etc. could cause interop issues), but a different one","msgtype":"m.text"},"ts":1395355216000,"senderName":"zewt","senderId":"zewt@irc"}
]