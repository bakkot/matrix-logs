[
{"content":{"body":"Mek: if you found a spec issue, please file a bug here: https://bugzilla.mozilla.org/enter_bug.cgi?format=guided#h=dupes|Core|DOM","msgtype":"m.text"},"ts":1463617357000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Well, if it's in reasonable ways, we could change the spec","msgtype":"m.text"},"ts":1463628453000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: do you care about a clean merge for https://github.com/whatwg/html/pull/1181? Some more whitespace nits that I'm happy to fix while merging","msgtype":"m.text"},"ts":1463642494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Go for it","msgtype":"m.text"},"ts":1463642514000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm, the try/catch thing is something i hadn't considered before. http://blog.getsentry.com/2016/05/17/what-is-script-error.html","msgtype":"m.text"},"ts":1463644754000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wonder if there's still a good reason to mute runtime script errors","msgtype":"m.text"},"ts":1463644814000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"would like to ask the same","msgtype":"m.emote"},"ts":1463644823000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"maybe if you manage to load a script file that you have no idea what it contains, you could learn things from onerror but not with try/catch (if you don't know what to call)","msgtype":"m.text"},"ts":1463644924000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: indeed, that is what is being protected","msgtype":"m.text"},"ts":1463644968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: does the try/catch approach reveal line numbers and such though? That might be somewhat problematic","msgtype":"m.text"},"ts":1463645009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, isn't the point more when loading non-script files in script elements?","msgtype":"m.text"},"ts":1463645432000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yes, that's when you hit a compile-time script error. but the spec also protects runtime ones","msgtype":"m.text"},"ts":1463645724000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if the external script uses (function() { ... })(); and doesn't expose any functions then there's nothing you can call with try/catch","msgtype":"m.text"},"ts":1463645803000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4210","msgtype":"m.text"},"ts":1463645989000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: \"@http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4210:5:3\" is what I get in Firefox","msgtype":"m.text"},"ts":1463646105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: so I guess it's not really revealing then or really the same level of detail?","msgtype":"m.text"},"ts":1463646141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so firefox doesn't include the part of the stack that came from another origin","msgtype":"m.text"},"ts":1463646185000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Part of the problem might be e.stack not being defined","msgtype":"m.text"},"ts":1463646214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But what Firefox does seems good","msgtype":"m.text"},"ts":1463646221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if that code in Firefox is also CORS-aware","msgtype":"m.text"},"ts":1463646243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't get cross-origin stacks in safari/chrome/opera","msgtype":"m.text"},"ts":1463646276000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Good","msgtype":"m.text"},"ts":1463646369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CORS seems to reveal the stack (even without crossorigin=\"\") http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4211","msgtype":"m.text"},"ts":1463646449000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Without crossorigin?!","msgtype":"m.text"},"ts":1463646516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Argh","msgtype":"m.text"},"ts":1463646518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How does that even make sense? Are you sending both credentials allowed and an explicit origin?","msgtype":"m.text"},"ts":1463646553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You are not, whoa","msgtype":"m.text"},"ts":1463646570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is a bug","msgtype":"m.text"},"ts":1463646580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Security bug even","msgtype":"m.text"},"ts":1463646597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why is it a security bug?","msgtype":"m.text"},"ts":1463646638000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: because <script> requests are made with credentials, so if the cookies introduce user-sensitive data in the script, those can now leak","msgtype":"m.text"},"ts":1463646694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: whereas the publisher of the script only wanted to share the script when it was requested without credentials","msgtype":"m.text"},"ts":1463646714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm ok","msgtype":"m.text"},"ts":1463646755000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't know who did this, but CORS should really remain opt-in so there's one layer responsible for handling the security checks","msgtype":"m.text"},"ts":1463646758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This kind of adhoc thing is just dangerous","msgtype":"m.text"},"ts":1463646766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: do you want to file security bugs or should I?","msgtype":"m.text"},"ts":1463647462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I guess I'll file one against Gecko and copy you for credit","msgtype":"m.text"},"ts":1463647482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you can file, i should start writing a presentation :-)","msgtype":"m.text"},"ts":1463647526000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is there any spec that replaces the RFCs for CONNECT and HTTP requests made to proxies, btw?","msgtype":"m.text"},"ts":1463650279000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'd like to have apple's feedback for https://github.com/w3c/webcomponents/issues/184 ...","msgtype":"m.text"},"ts":1463652582000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"kochi1: best to ping rniwa in the issue again","msgtype":"m.text"},"ts":1463652794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi1: btw, if you can nudge tyoshino to review https://github.com/whatwg/fetch/pull/298 that'd be appreciated","msgtype":"m.text"},"ts":1463652978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is the back and forth division and multiplication really the best way to encode a 4-byte gb18030 sequence?","msgtype":"m.text"},"ts":1463656960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I think it might depend on whether you care about memory or speed","msgtype":"m.text"},"ts":1463657110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but it's been a while","msgtype":"m.text"},"ts":1463657115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: the algorithm in the specification optimizes for not storing a lot of data","msgtype":"m.text"},"ts":1463657152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you mean it tries to minimize temporary values even if they'd fit in registers on a typical CPU?","msgtype":"m.text"},"ts":1463657235000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I care about speed as long as memory is \"fits in registers\")","msgtype":"m.text"},"ts":1463657265000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I meant that you could have more comprehensive backing tables and less math","msgtype":"m.text"},"ts":1463657294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: e.g., I don't think ICU's implementation uses the 127 entries trick","msgtype":"m.text"},"ts":1463657326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"127 entries?","msgtype":"m.text"},"ts":1463657347000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"207 it seems, https://encoding.spec.whatwg.org/index-gb18030-ranges.txt","msgtype":"m.text"},"ts":1463657383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that part is fine","msgtype":"m.text"},"ts":1463657417000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: but when you have a ranges pointer, the way you go to 4 bytes looks on the surface like it'd benefit from the % operator","msgtype":"m.text"},"ts":1463657455000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1463657463000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what I'm asking is if it really needs to be the way it's written","msgtype":"m.text"},"ts":1463657475000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: my bad, that could probably be done differently, yes","msgtype":"m.text"},"ts":1463657499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: this is from the time when the specification didn't try to use those operators directly","msgtype":"m.text"},"ts":1463657526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if a pattern a = x / y; b = x % y; is hidden in there, it might be better to use that","msgtype":"m.text"},"ts":1463657531000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok. I guess I'll just make a note to revisit the math","msgtype":"m.text"},"ts":1463657584000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"By stated goals, I shouldn't care about the encoder speed for encoders other than UTF-8 anyway...","msgtype":"m.text"},"ts":1463657650000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So yeah, http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml has far less ranges, but that doesn't say much about the math of course","msgtype":"m.text"},"ts":1463657789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have written code that assumes that gb18030 can encode all of unicode","msgtype":"m.text"},"ts":1463659349000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that's wrong. there's one code point that it can't","msgtype":"m.text"},"ts":1463659364000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks like I will have to revisit the code where I made the assumption that gb18030 encodes all of Unicode","msgtype":"m.text"},"ts":1463659394000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Doh","msgtype":"m.text"},"ts":1463659411000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"UTF8 does that right? :)","msgtype":"m.text"},"ts":1463659537000,"senderName":"Cablegunmaster","senderId":"Cablegunmaster@irc"},
{"content":{"body":"Well, unless you are MySQL, yes","msgtype":"m.text"},"ts":1463659558000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But for hsivonen that's not really the point :)","msgtype":"m.text"},"ts":1463659576000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Cablegunmaster: UTF-8 is the only encoding in the Encoding Standard whose output encoding can encode all of Unicode.","msgtype":"m.text"},"ts":1463659677000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah, gb18030 was intended to be a UTF, but browsers messed that up","msgtype":"m.text"},"ts":1463659773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So next time you say that everyone should use Unicode in order to avoid data loss in form submission and a pedant says \"What about gb18030?\", you can answer \"U+E5E5!!!!!\"","msgtype":"m.text"},"ts":1463659779000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what one code point can it not?","msgtype":"m.text"},"ts":1463659781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"argh. s/Unicode/UTF-8/","msgtype":"m.text"},"ts":1463659792000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, that","msgtype":"m.text"},"ts":1463659792000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen, I love utf8 =) only one im using for my websites.","msgtype":"m.text"},"ts":1463660155000,"senderName":"Cablegunmaster","senderId":"Cablegunmaster@irc"},
{"content":{"body":"always wondered why should there still be other unicodes out there? :o","msgtype":"m.text"},"ts":1463660192000,"senderName":"Cablegunmaster","senderId":"Cablegunmaster@irc"},
{"content":{"body":"Cablegunmaster: no good reason, but at some point the thought was that UTF-16 was going to be it","msgtype":"m.text"},"ts":1463662015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cablegunmaster: not sure why they bothered with UTF-32 though","msgtype":"m.text"},"ts":1463662033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cablegunmaster: anyway, UTF-8 is the only one with good ecosystem support so best to stick with that","msgtype":"m.text"},"ts":1463662068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that be true as well annevk thanks for the clear answer :)!","msgtype":"m.text"},"ts":1463662706000,"senderName":"Cablegunmaster","senderId":"Cablegunmaster@irc"},
{"content":{"body":"annevk: What's wrong with UTF-32?","msgtype":"m.text"},"ts":1463662940000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: doesn't solve an actual problem?","msgtype":"m.text"},"ts":1463662969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cablegunmaster: Unicode is least worst encoding we have currently, but it's clearly Latin-centric and kinda bad for CJK.","msgtype":"m.text"},"ts":1463662972000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Unicode is not an encoding...","msgtype":"m.text"},"ts":1463662985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: True, s/encoding/standard/","msgtype":"m.text"},"ts":1463663022000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: A friend of mine that lives in China explained to me that for texts with a lot of person names and old ideograms, it gets quite slow to decode UTF-8 and UTF-32 isn't much bigger in memory.","msgtype":"m.text"},"ts":1463663076000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: slow to this day? Seems spurious","msgtype":"m.text"},"ts":1463663132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: that'd mean emoji slow down stuff too","msgtype":"m.text"},"ts":1463663158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It was 3 years ago or so.","msgtype":"m.text"},"ts":1463663166000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Well they don't make things faster for sure, but yeah, didn't experience that myself.","msgtype":"m.text"},"ts":1463663180000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Wonder if http://emojitracker.com had to do anything fancy for decoding.","msgtype":"m.text"},"ts":1463663207000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I can see how Han Unification is bad, but I don't think using four bytes for a code point is really that bad","msgtype":"m.text"},"ts":1463663212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: it doesn't seem to list emoji that use more than one code point","msgtype":"m.text"},"ts":1463663290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's a thing? ( ._.)","msgtype":"m.text"},"ts":1463663302000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"cries.","msgtype":"m.emote"},"ts":1463663307000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: sure, e.g., all flags use two (and there's proposal for flags that use more)","msgtype":"m.text"},"ts":1463663328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, the ones with variant modifiers?","msgtype":"m.text"},"ts":1463663329000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you can compose families out of half a dozen code points, etc.","msgtype":"m.text"},"ts":1463663342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh right I remember the flag drama.","msgtype":"m.text"},"ts":1463663345000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I don't think it's a drama? It's a pretty neat design","msgtype":"m.text"},"ts":1463663362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I remember that before this neat design,","msgtype":"m.text"},"ts":1463663460000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Taiwan wanted a code point for its flag, and China wasn't amused, or something like that.","msgtype":"m.text"},"ts":1463663474000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"taiwan isn't really recognized by many countries","msgtype":"m.text"},"ts":1463664954000,"senderName":"stennowork","senderId":"stennowork@irc"},
{"content":{"body":"UTF-8 is incredibly fast for something that clever. Slower than UTF-32 of course, because that's no decoding at all.","msgtype":"m.text"},"ts":1463668719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But unless the page is *incredibly* text-heavy, UTF-8 gives significant space-savings even over 2-byte chinese-specialized encodings, let alone UTF-32.","msgtype":"m.text"},"ts":1463668769000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, and UTF-32 gives more memory traffic","msgtype":"m.text"},"ts":1463669027000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'd love to see some benchmarks","msgtype":"m.text"},"ts":1463669352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: and more IO-traffic too","msgtype":"m.text"},"ts":1463669390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"emojitracker does support multiple code point emoji, just hasn't been updated for new emoji added in Unicode 8.0+\"","msgtype":"m.text"},"ts":1463669923000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I didn't spot any flags, and those have been there since 6","msgtype":"m.text"},"ts":1463669955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: didn't look carefully though","msgtype":"m.text"},"ts":1463669966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: never mind, spotted a flag just now","msgtype":"m.text"},"ts":1463670003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1463670014000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hi, I had a question about `<script type=\"module\">`. I've looked through the spec and saw this question: https://github.com/whatwg/html/pull/443#issuecomment-167904832 but wanted confirmation on something: If I have a `<script type=\"module\" src=\"a.js\">`, where \"a.js\" will `export` a module, and I also have `<script type=\"module\" src=\"b.js\">`, and \"b.js\" will `import \"./a\";`, will the same instance of the module created by the former","msgtype":"m.text"},"ts":1463675859000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"`<script type=\"module\" src=\"a.js\">` be used?","msgtype":"m.text"},"ts":1463675859000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"Jackson_: if they're in the same document, yes","msgtype":"m.text"},"ts":1463675924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks. Do you know where that is stated in the spec?","msgtype":"m.text"},"ts":1463676005000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"Jackson_: it's part of the \"module map\" semantics","msgtype":"m.text"},"ts":1463676033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jackson_: https://html.spec.whatwg.org/multipage/webappapis.html#fetch-a-single-module-script makes this quite explicit","msgtype":"m.text"},"ts":1463676101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jackson_: I forgot if there's also an easier summary of this or an example of some sort","msgtype":"m.text"},"ts":1463676123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jackson_: seems like the script element section could use an example that illustrates this... willing to contribute one?","msgtype":"m.text"},"ts":1463676195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I can contribute one. To clarify further (this is what prompted me to ask this): In https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script, step 18, where \"Fetch a module script tree\" receives \"settings\": That is where a per-Document module map is provided to each `<script type=\"module\">`, correct? https://html.spec.whatwg.org/multipage/webappapis.html#fetch-a-module-script-tree says the module map is","msgtype":"m.text"},"ts":1463676575000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"\"optional,\" so I did know precisely where the module map came from.","msgtype":"m.text"},"ts":1463676575000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"* I did not know...","msgtype":"m.text"},"ts":1463676603000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"Jackson_: if \"module map settings object\" is not given, it uses the \"fetch client settings object\"","msgtype":"m.text"},"ts":1463676656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jackson_: the settings object holds a reference to the actual \"module map\"","msgtype":"m.text"},"ts":1463676667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jackson_: this setup is also used by workers, which is why the algorithms are rather abstract","msgtype":"m.text"},"ts":1463676703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So, the reason the modules are shared, is because the \"fetch client settings object\" is per-Document? (I did not see where the \"fetch client settings object\" was defined.)","msgtype":"m.text"},"ts":1463676902000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"Jackson_: that will fail since \"/.a\" is a 404","msgtype":"m.text"},"ts":1463679771000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Jackson_: but if you correct it to \"./a.js\" it will indeed use the memoized module map","msgtype":"m.text"},"ts":1463679793000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Jackson_: \"fetch client settings object\" is an argument to the algorithm, and passed in by all the call sites. It is per-Window.","msgtype":"m.text"},"ts":1463679827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thanks for these clarifications.","msgtype":"m.text"},"ts":1463680046000,"senderName":"Jackson_","senderId":"Jackson_@irc"},
{"content":{"body":"If folks are interested in the future web stuff Google's excited about, https://events.google.com/io2016/ has cwilso and fbeaufort live.","msgtype":"m.text"},"ts":1463688490000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Mek: thanks for filing the BroadcastChannel bug!","msgtype":"m.text"},"ts":1463692716000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bugs","msgtype":"m.text"},"ts":1463692734000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"LOL: https://twitter.com/shinypb/status/733302396995010561","msgtype":"m.text"},"ts":1463693875000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"When developers turn their problems into users' problems: AMP, following in XHTML's proud footsteps.\" cc: gsnedders","msgtype":"m.text"},"ts":1463693892000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(see photo)","msgtype":"m.text"},"ts":1463693897000,"senderName":"tantek","senderId":"tantek@irc"}
]