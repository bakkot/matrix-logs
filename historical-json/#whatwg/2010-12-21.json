[
{"content":{"body":"Yay, done. http://code.google.com/p/chromium/issues/detail?id=67629","msgtype":"m.text"},"ts":1292889600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"prz to file in bugs.webkit.org kthxbai","msgtype":"m.text"},"ts":1292889840000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Goddammit.","msgtype":"m.text"},"ts":1292890020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1292890021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr_: https://bugs.webkit.org/show_bug.cgi?id=51362","msgtype":"m.text"},"ts":1292890260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"member:Hixie: when using <time datetime=\"\"> is it ok to use a datetime without a timezone (floating time), or is a timezone (or Z) required?","msgtype":"m.text"},"ts":1292890380000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1292890381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"boblet: does the element have a pubdate attribute?","msgtype":"m.text"},"ts":1292890440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not that i think it matters in this case)","msgtype":"m.text"},"ts":1292890441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(but it'll simplify my answer)","msgtype":"m.text"},"ts":1292890442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"possibly :) this was an enquiry on html5doctor","msgtype":"m.text"},"ts":1292890443000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"hm actually it does matter","msgtype":"m.text"},"ts":1292890500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"spec says requires “valid date string with optional time” which to me would make timezone optional, but links to 2.5.5.7 (timezone required)","msgtype":"m.text"},"ts":1292890501000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"why would \"valid date string with optional time\" mean the timezone was optional?","msgtype":"m.text"},"ts":1292890502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a valid date string with optional time is a string that is either a valid date string, or a valid global date and time string","msgtype":"m.text"},"ts":1292890560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. it's the time that's optional, not the time zone","msgtype":"m.text"},"ts":1292890620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: aah ok. I initially read it as any of the datetime microsyntaxes would be ok","msgtype":"m.text"},"ts":1292890621000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"but the link indicated I was wrong","msgtype":"m.text"},"ts":1292890622000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"no, only the ones it says are ok are ok :-)","msgtype":"m.text"},"ts":1292890623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's why it says which one is ok :-)","msgtype":"m.text"},"ts":1292890680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1292890681000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"so, for instance, it can be 2010-12-20, or 2010-12-20T16:24:00-08:00","msgtype":"m.text"},"ts":1292890682000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"does that include non-pubdate uses of <time>?","msgtype":"m.text"},"ts":1292890740000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"to answer your original question, the answer is \"it depends\" -- if it has a pubdate attribute, then datetime must be a date or a date+time+timezone; if it has no pubdate attribute, then datetime must be either a date, or a time, or a date+time+timezone.","msgtype":"m.text"},"ts":1292890741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is all defined here: http://www.whatwg.org/specs/web-apps/current-work/#attr-time-datetime","msgtype":"m.text"},"ts":1292890742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh! so when would a non-timezone datetime (local datetime) be used?","msgtype":"m.text"},"ts":1292890743000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"<p>I usually have a snack at <time>16:00</time>.</p>","msgtype":"m.text"},"ts":1292890800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2.5.5.4 Local dates and times specs a date + time with no timezone","msgtype":"m.text"},"ts":1292890860000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(so you can style it to be \"I usually have a snack at 4pm.\")","msgtype":"m.text"},"ts":1292890861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1292890920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is it possible to use 2.5.5.4-style datetimes with <time>?","msgtype":"m.text"},"ts":1292890921000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"<p>I had a snack <time datetime=\"2010-12-20T16:00:00\">this afternoon</time>.</p>","msgtype":"m.text"},"ts":1292890980000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"not sure if that's OK per spec","msgtype":"m.text"},"ts":1292891040000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"boblet: not currently, no","msgtype":"m.text"},"ts":1292891041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: that conflicts with what Hixie wrote above (“ if it has no pubdate attribute, then datetime must be either a date, or a time, or a date+time+timezone.”)","msgtype":"m.text"},"ts":1292891042000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: yeah","msgtype":"m.text"},"ts":1292891043000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"the spec seems pretty clear cut on all this to me :-)","msgtype":"m.text"},"ts":1292891044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok thanks. Appreciate you clearing that up","msgtype":"m.text"},"ts":1292891045000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"what is it about the spec that makes this confusing?","msgtype":"m.text"},"ts":1292891046000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i really should make the spec clearer if all this can't be determined straight from following th elinks in the spec","msgtype":"m.text"},"ts":1292891047000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, I didn’t write the article, so I don’t know if it was a misreading or if the spec changed to make local datetimes invalid for @datetime","msgtype":"m.text"},"ts":1292891100000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"could also be that microformat datetimes are generally local (no-timezone) oners","msgtype":"m.text"},"ts":1292891101000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"will update our article","msgtype":"m.text"},"ts":1292891160000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"I don't think that assertion makes sense re: microformat datetimes","msgtype":"m.text"},"ts":1292891280000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Most hAtom I've seen in the wild uses Atom-like RFC3339 productions, including tz","msgtype":"m.text"},"ts":1292891281000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I know that I just use date('c') for my stuff, which produces a tz.","msgtype":"m.text"},"ts":1292891400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(From PHP.)","msgtype":"m.text"},"ts":1292891460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there aren't really that many use cases for timezone-less datetimes in output, from what i can tell","msgtype":"m.text"},"ts":1292891461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's not clear that <time> has enough use cases to really justify it anyway","msgtype":"m.text"},"ts":1292891520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it might end up being dropped","msgtype":"m.text"},"ts":1292891521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"The ball starts to drop at <time datetime=2010-12-31T23:59:50>10 seconds before midnight!</time>.\"","msgtype":"m.text"},"ts":1292891522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's not really right","msgtype":"m.text"},"ts":1292891523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's 10 seconds before midnight EST :-)","msgtype":"m.text"},"ts":1292891580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think <time> is useful enough just for being a carrier of datetime information for microformats/microdata.","msgtype":"m.text"},"ts":1292891581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All of the balls drop at the same local time.","msgtype":"m.text"},"ts":1292891582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: any hand-authored hEvent probably won’t contain tiemzone, because like all i18n no one thinks of if","msgtype":"m.text"},"ts":1292891583000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"there are multiple balls?","msgtype":"m.text"},"ts":1292891584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lots of places do a ball drop, not just Times Square.","msgtype":"m.text"},"ts":1292891640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And everyone likes to count down from 10, so...","msgtype":"m.text"},"ts":1292891641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boblet: maybe. I hand-author hevents surprisingly frequently, so I have an Emacs command that inserts the correctly-formatted now timestamp for me","msgtype":"m.text"},"ts":1292891880000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I freely acknowledge I'm an outlier. :)","msgtype":"m.text"},"ts":1292891881000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: yeah, I agree anyone hand-authoring should be using snippets (I do the same), but a surprising number of microformatters think that the brevity allowed is a good thing (eg implied n optimisation and the resulting i18n problems it has)","msgtype":"m.text"},"ts":1292891940000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"snippets ftw!","msgtype":"m.text"},"ts":1292892000000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"the instructions for this lighter i am using say \"do not use near fire, flame, or sparks\"","msgtype":"m.text"},"ts":1292892540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how the heck else am i supposed to use it","msgtype":"m.text"},"ts":1292892541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The flame is part of use, so it doesn't count as something the lighter is used *near*.","msgtype":"m.text"},"ts":1292892542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok but once i've lit what i'm lighting... then it's on fire","msgtype":"m.text"},"ts":1292892660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, so stop using it near that then.","msgtype":"m.text"},"ts":1292892661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but it explicitly has a feature for lighting multiple things in a row","msgtype":"m.text"},"ts":1292892662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like a bunch of candles","msgtype":"m.text"},"ts":1292892663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Then I guess the definition of \"near\" comes into question.","msgtype":"m.text"},"ts":1292892664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The idea is presumably that you're meant to disregard their instructions","msgtype":"m.text"},"ts":1292893200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but that if you e.g. carry it into a burning building and it explodes then you can't sue them since they warned you in advance","msgtype":"m.text"},"ts":1292893201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: why would a hash function be slower in JS than in native code?","msgtype":"m.text"},"ts":1292893440000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Because most hashes are designed for a hardware implementation.","msgtype":"m.text"},"ts":1292893441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JS runs on hardware","msgtype":"m.text"},"ts":1292893500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Sigh.","msgtype":"m.text"},"ts":1292893501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe you mean most hashes are designed for implementation in languages that have 32-bit integer operations, or something?","msgtype":"m.text"},"ts":1292893560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(That seems like the main pain with JS)","msgtype":"m.text"},"ts":1292893620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1292893621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ones that can actually sit next to the hardware if necessary.","msgtype":"m.text"},"ts":1292893622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JS has 32-bit integer operations, no? (i thought most bitwise ops truncate to 32 bits)","msgtype":"m.text"},"ts":1292894100000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"TabAtkins: why couldn't a JS compiler be as efficient with hashing code as a C++ compiler?","msgtype":"m.text"},"ts":1292894160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I assume it's more difficult, given that you don't have direct binary access.","msgtype":"m.text"},"ts":1292894161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suppose implementations might be clever enough to realise that \"(a + b) & 0xffffffff\" could do a 32-bit addition rather than storing intermediate values as doubles, but I don't know if any currently do that","msgtype":"m.text"},"ts":1292894280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and it's a bit inelegant to rely on pattern-matching optimisations to make your code not terrible","msgtype":"m.text"},"ts":1292894340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: i don't understand what \"direct binary access\" means","msgtype":"m.text"},"ts":1292894460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Doing JS math involves using JS numbers.  That abstraction is slower than just doing bit-munging like you can do in C and other languages.","msgtype":"m.text"},"ts":1292894520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"compilers can totally recognise that there's a function that only does math operations on its arguments and have a \"fast version\" compiled that they use when the input is in range","msgtype":"m.text"},"ts":1292894580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't that a lot of what V8 actually does?","msgtype":"m.text"},"ts":1292894640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"optimizing JS engines spend a lot of effort knowing when they can just bit-munge","msgtype":"m.text"},"ts":1292894820000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"and optimizing something like (a + b) & 0xff is not done using pattern matching","msgtype":"m.text"},"ts":1292894880000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"I'd be happy to be shown wrong, that it's expected that we do fast hashing in js.","msgtype":"m.text"},"ts":1292894940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"try it","msgtype":"m.text"},"ts":1292894941000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Aw, I wasn't wanting to implement one myself.  >_<","msgtype":"m.text"},"ts":1292894942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"generating a hash for a Blob's contents might make sense as a provided AP","msgtype":"m.text"},"ts":1292895060000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"I","msgtype":"m.text"},"ts":1292895061000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"or something of that nature","msgtype":"m.text"},"ts":1292895062000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"modern engines absolutely do optimize \"(a + b) & 0xffffffff\" up the wazoo","msgtype":"m.text"},"ts":1292897520000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"can anyone think of a better repository than code.google.com/p/html5/ for the encoding data and scripts?","msgtype":"m.text"},"ts":1292926080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really want to make a new one","msgtype":"m.text"},"ts":1292926081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I guess I could use bitbucket","msgtype":"m.text"},"ts":1292926082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://bitbucket.org/annevk/webencodings","msgtype":"m.text"},"ts":1292929080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://annevankesteren.nl/2010/12/encodings-labels-tested has an explanation for gathering the data","msgtype":"m.text"},"ts":1292933340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and http://annevankesteren.nl/2010/12/encodings-analysis has some analysis","msgtype":"m.text"},"ts":1292933400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whoa, whoa. Does Chrome not have UI for selecting the character encoding or am I missing something?","msgtype":"m.text"},"ts":1292933520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"on Mac there is View -> Encoding","msgtype":"m.text"},"ts":1292933580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm on Linux right now","msgtype":"m.text"},"ts":1292933581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. it's under a crazy level of submenus","msgtype":"m.text"},"ts":1292933582000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"under the menu button, Tools > Encoding","msgtype":"m.text"},"ts":1292933583000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"encoding menus are lame","msgtype":"m.text"},"ts":1292933640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I sort of wonder who is still subjected to them","msgtype":"m.text"},"ts":1292933641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand the encoding UI for Safari and Chrome","msgtype":"m.text"},"ts":1292933642000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why is Auto Detect in the same set of choices as particular encodings?","msgtype":"m.text"},"ts":1292933643000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that is, what are the semantics of choosing Auto Detect?","msgtype":"m.text"},"ts":1292933700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. it's not in the same set","msgtype":"m.text"},"ts":1292933701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"confusing","msgtype":"m.text"},"ts":1292933702000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's a boolean outside the set","msgtype":"m.text"},"ts":1292933703000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so if I choose Auto Detect in Chrome, how many bytes will Chrome sniff and how will it decide to commit to an encoding? will it ever reload a page because of autodetection?","msgtype":"m.text"},"ts":1292933760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno, there's no spec for sniffing :/","msgtype":"m.text"},"ts":1292933820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought WebKit devs don't want to introduce charset reloads because of <meta>","msgtype":"m.text"},"ts":1292933821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"there's now a bug about the HTML5 parser in Gecko running chardet only on the 1024 first bytes","msgtype":"m.text"},"ts":1292933822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the bug doesn't have sufficient site compat data and it's hard to judge it without","msgtype":"m.text"},"ts":1292933880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wishes Japanese Web authors got their encoding labeling act together","msgtype":"m.emote"},"ts":1292933940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we should intentionally break non-utf-8 encodings in nightly builds to promote moving to utf-8","msgtype":"m.text"},"ts":1292934420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"disabling chardet in nightlies would be good","msgtype":"m.text"},"ts":1292934480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: for authors to notice, you need to start publishing nightlies :-)","msgtype":"m.text"},"ts":1292934481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and Firefox and IE and Opera removing support for certain labels would be good too","msgtype":"m.text"},"ts":1292934482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: well we need to start somewhere. some authors use nightlies, so they'll notice if their site broke","msgtype":"m.text"},"ts":1292934540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, even Chrome supports ibm864","msgtype":"m.text"},"ts":1292934541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera is left out","msgtype":"m.text"},"ts":1292934542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do Safari and Chrome have enough market share in the locales associated with those labels to draw conclusions about the needlessness of those labels?","msgtype":"m.text"},"ts":1292934543000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh, for opera, s/nightlies/weeklies/","msgtype":"m.text"},"ts":1292934544000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen, fair point","msgtype":"m.text"},"ts":1292934660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, though for certain encodings only 1 browser supports them","msgtype":"m.text"},"ts":1292934661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, e.g. Opera is the only browser with support for windows-sami-2 and viettcvn","msgtype":"m.text"},"ts":1292934720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm. I wonder how those got added in the first place.","msgtype":"m.text"},"ts":1292934721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Firefox is the only browser with ibm864i","msgtype":"m.text"},"ts":1292934722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the explanation in the case of Firefox is most likely that if you have IBM contributing i18n code, they contribute support for their own legacy stuff","msgtype":"m.text"},"ts":1292934780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also the only one with armscii-8 and csiso103t618bit, iso-ir-103, t.61-8bit, t.61 and csiso111ecmacyrillic, iso-ir-111, ecma-cyrillic","msgtype":"m.text"},"ts":1292934781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(search for OSIC to find them)","msgtype":"m.text"},"ts":1292934782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you should try to come up with a reason why those are a security threat to expedite removal","msgtype":"m.text"},"ts":1292934783000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, \": OSIC\" is better","msgtype":"m.text"},"ts":1292934840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I have no idea how I get people to care about any of this :)","msgtype":"m.text"},"ts":1292934841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: smontagu has been removing stuff piecemeal as people have come up with threat scenarios","msgtype":"m.text"},"ts":1292934900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what I'd love is for this to be fully deterministic","msgtype":"m.text"},"ts":1292934960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I can always tell what would happen, regardless of browser","msgtype":"m.text"},"ts":1292935020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and without browser being a input variable, obviously)","msgtype":"m.text"},"ts":1292935021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Safari has a weird pattern as well","msgtype":"m.text"},"ts":1292935980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for a number of encodings it seems to swap the code points 1A, 1C, 7F map to around","msgtype":"m.text"},"ts":1292936040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you have a list of encodings that are supported but have no UI entry in the menu?","msgtype":"m.text"},"ts":1292936160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no, another list I lack is a mapping against IANA","msgtype":"m.text"},"ts":1292936220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, I don't have multi-byte encodings covered","msgtype":"m.text"},"ts":1292936221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"big5, shift_jis","msgtype":"m.text"},"ts":1292936280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"inspecting those would require a different strategy","msgtype":"m.text"},"ts":1292936340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm shocked that html5lib doesn't have systematic tests for all void elements","msgtype":"m.text"},"ts":1292937600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'll add some","msgtype":"m.text"},"ts":1292937601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"one way would be of course to make HTML5 require certain encodings and mappings","msgtype":"m.text"},"ts":1292938980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it already defines error handling for UTF-8","msgtype":"m.text"},"ts":1292938981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or make it normatively reference a \"Web Encoding\" spec","msgtype":"m.text"},"ts":1292939040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. How do I file a bug against the Japanese Planet Debian?","msgtype":"m.text"},"ts":1292941620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tries the email on a blog on the same domain","msgtype":"m.emote"},"ts":1292941680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins: finally getting back to you a week or whatever later; I'm not precisely sure all of where your discussion happened, but is there a summary someplace of your compromises/agreements with the Apple people about gradient syntax?","msgtype":"m.text"},"ts":1292947620000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"hahaha \"The WebSockets\"","msgtype":"m.text"},"ts":1292947621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this reminds of that movie","msgtype":"m.text"},"ts":1292947680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: link?","msgtype":"m.text"},"ts":1292947740000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"http://blogs.msdn.com/b/ie/archive/2010/12/21/html5-site-ready-and-experimental.aspx it also links to the movie","msgtype":"m.text"},"ts":1292947741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"again Microsoft does some heavy PR-spin on how they made the right choice here...","msgtype":"m.text"},"ts":1292947800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so lame","msgtype":"m.text"},"ts":1292947801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"the movie\" = http://www.xtranormal.com/watch/7991991/ ?","msgtype":"m.text"},"ts":1292948040000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"think so","msgtype":"m.text"},"ts":1292948100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you don't think microsoft just wants to \"remove much of the guess work for developers\"?","msgtype":"m.text"},"ts":1292948220000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"giving \"more time for site developers to innovate and create better web experiences\"?","msgtype":"m.text"},"ts":1292948221000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"it looks more like they were just late implementing Web Sockets and found some kind of way to make that look good","msgtype":"m.text"},"ts":1292948280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and now they use the same argument for a bunch of other things","msgtype":"m.text"},"ts":1292948281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cuteL \"Other modules have perfectly fine interoperable alternatives, like using script in place of CSS3 Transitions and CSS3 Animations\"","msgtype":"m.text"},"ts":1292948282000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"*cute:","msgtype":"m.text"},"ts":1292948340000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"are there IE developers here?","msgtype":"m.text"},"ts":1292948400000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"no one can accuse MS of being bad at FUD :)","msgtype":"m.text"},"ts":1292948401000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"\"whatever we implemented? obviously important and awesome. whatever we didn't implement? probably half-baked and likely to break.\"","msgtype":"m.text"},"ts":1292948460000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"i have a problem with execCommand('SaveAs') :)","msgtype":"m.text"},"ts":1292948520000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"it do not save binary data","msgtype":"m.text"},"ts":1292948521000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"bga_: isn't it designed for text boxes or something?","msgtype":"m.text"},"ts":1292948880000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"bga_: SaveAs doesn't seem to be listed in http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#execCommand","msgtype":"m.text"},"ts":1292949060000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"i know :)","msgtype":"m.text"},"ts":1292949061000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"whatwg should invents such api :)","msgtype":"m.text"},"ts":1292949120000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"jacobolus, heh, put a PR-speak to English version of that on twitter","msgtype":"m.text"},"ts":1292949180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"window.saveDialog(fileName, fileData, fileMime)","msgtype":"m.text"},"ts":1292949240000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"annevk: I don't believe in twitter; the translation sounds like a good idea though; surely someone is interested :)","msgtype":"m.text"},"ts":1292949241000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"I mean I did it for you","msgtype":"m.text"},"ts":1292949242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure yet whether I believe in twitter, but my friends post fun photos every now and then","msgtype":"m.text"},"ts":1292949300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"toDataURL is the only way to get image data out of a canvas, right?","msgtype":"m.text"},"ts":1292949420000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"i.e. into JavaScript","msgtype":"m.text"},"ts":1292949421000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"that or pixel by pixel with createImageData I guess","msgtype":"m.text"},"ts":1292949720000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"er, getImageData","msgtype":"m.text"},"ts":1292949721000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"oh, nevermind","msgtype":"m.text"},"ts":1292949722000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/746 -- browsers do funny things with elements inside <option>","msgtype":"m.text"},"ts":1292950560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jacobolus: The changes I made due to Apple feedback were to make it easier to transition gradients.  As a result I slightly simplified the first argument to linear gradients and added the explicit-radiuses form for radial gradients.","msgtype":"m.text"},"ts":1292951160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so those changes are in the spec as it is online now?","msgtype":"m.text"},"ts":1292951220000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1292951221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"at dev.w3.org/csswg/css3-images","msgtype":"m.text"},"ts":1292951222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gotcha. so Apple is mostly on board with that as written?","msgtype":"m.text"},"ts":1292951223000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"As far as I know, yeah.","msgtype":"m.text"},"ts":1292951224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, great","msgtype":"m.text"},"ts":1292951225000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"TabAtkins: how much does it differ from mozilla's current implementation?","msgtype":"m.text"},"ts":1292951280000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"are the syntaxes compatible, or a bit different?","msgtype":"m.text"},"ts":1292951281000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"Yes, almost completely compatible.  The only incompatible difference is if you used the explicit-starting-point form of linear gradients, for anything other than one of the sides or corners.","msgtype":"m.text"},"ts":1292951340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That is, a gradient like linear-gradient(10px 10px, white, black) is no longer valid.","msgtype":"m.text"},"ts":1292951341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But linear-gradient(top left, white, black) still is.","msgtype":"m.text"},"ts":1292951342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1292951400000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1292951460000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"annevk, you got me at \"browsers do funny things\"","msgtype":"m.text"},"ts":1292952120000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1292952420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how exactly is MicroXML better than XML?","msgtype":"m.text"},"ts":1292952600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so far it's not very different, is it","msgtype":"m.text"},"ts":1292952660000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"anyone see the lunar eclipse last night?","msgtype":"m.text"},"ts":1292952720000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"No. ;_; Too cloudy.","msgtype":"m.text"},"ts":1292952721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yea, same here, too cloudy","msgtype":"m.text"},"ts":1292952780000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I think socal is going to float away from the mainland if this rain keeps up","msgtype":"m.text"},"ts":1292952840000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"which is to say, it was completely overcast here too. :(","msgtype":"m.text"},"ts":1292952841000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"man, a red moon, it would have been cool... for a min, I could have felt like I was living on a strange planet","msgtype":"m.text"},"ts":1292952960000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"whoa, no browser does incremental rendering of XML anymore?","msgtype":"m.text"},"ts":1292953020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.hixie.ch/tests/evil/page-loading/incremental/001.cgi?mime=text%2Fxml&delay=1&repeats=20","msgtype":"m.text"},"ts":1292953021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"weak","msgtype":"m.text"},"ts":1292953022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do people see junk on this page -> http://bugzilla.validator.nu/ ?","msgtype":"m.text"},"ts":1292953023000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: junk?","msgtype":"m.text"},"ts":1292953080000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"it talks about Firefox 2...","msgtype":"m.text"},"ts":1292953081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Very weird but it seems to have some encoding problem. It works fine if I view it with Safari but I see junk from FF and IE.","msgtype":"m.text"},"ts":1292953082000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Man, js engines are *weird*.","msgtype":"m.text"},"ts":1292953083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Film at 11","msgtype":"m.text"},"ts":1292953140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just changed the md5 implementation I found somewhere to do 32-bit addition on the full 32 bits, rather than splitting the numbers into 16-bit halves and then recombining, and it doubled execution time.","msgtype":"m.text"},"ts":1292953141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...in Firefox.  In Chrome I see a 10% speedup from doing that.","msgtype":"m.text"},"ts":1292953260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sorry, 10% slowdown.  Still, much better than a 100% slowdown.","msgtype":"m.text"},"ts":1292953320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so chrome sucks at doing 32-bit addition?","msgtype":"m.text"},"ts":1292953440000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Both browsers do.  Chrome sucks much less.","msgtype":"m.text"},"ts":1292953441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"too early in the afternoon for me","msgtype":"m.text"},"ts":1292953500000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Unless your whois is lying, it's not the afternoon at all for you!","msgtype":"m.text"},"ts":1292953560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's 12:51 PM","msgtype":"m.text"},"ts":1292953561000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Oh, I see, that's just the freenode server you're connecting through that's in Oregon.","msgtype":"m.text"},"ts":1292953562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the server I'm connected to is in Oregon","msgtype":"m.text"},"ts":1292953563000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I wasn't looking too closely.","msgtype":"m.text"},"ts":1292953620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the server my irc client is on is in the DC area","msgtype":"m.text"},"ts":1292953621000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"the computer I'm typing this on is a few miles further to the south","msgtype":"m.text"},"ts":1292953622000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"annevk: do you know about <http://demo.icu-project.org/icu-bin/convexp?s=IANA&s=MIME&s=ALL>?","msgtype":"m.text"},"ts":1292953623000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"annevk: most WebKit encodings come from there, modulo a few handcrafted additions, and tweaks Google made in their distribution for some reason","msgtype":"m.text"},"ts":1292953680000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Chrome is quite different from Safari","msgtype":"m.text"},"ts":1292953740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and Mac Safari is different from Win Safari","msgtype":"m.text"},"ts":1292953741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, that is, Chrome has much more encodings disabled","msgtype":"m.text"},"ts":1292953742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, we don't support some legacy encodings in Safari on Windows, and may be shipping a different version of ICU, depending on which version of Mac OS X you tested with","msgtype":"m.text"},"ts":1292954160000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"annevk: the reason is that besides Web compatibility, we need to be read old local files on Mac","msgtype":"m.text"},"ts":1292954161000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"s/be//","msgtype":"m.text"},"ts":1292954220000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"I have the latest Mac OS X","msgtype":"m.text"},"ts":1292954221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, apparently Mac Opera supports some more Mac encodings for that reason too","msgtype":"m.text"},"ts":1292954280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though a lot less than Safari, and on Windows we support no Mac encodings despite most other browsers supporting at least a few","msgtype":"m.text"},"ts":1292954281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not just Mac encodings though","msgtype":"m.text"},"ts":1292954282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome 28 / Safari 46 ...","msgtype":"m.text"},"ts":1292954340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you have any outrageous examples that I would want to fix?","msgtype":"m.text"},"ts":1292954400000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"sorry :/","msgtype":"m.text"},"ts":1292954401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I only have http://annevankesteren.nl/2010/8-bit-labels so far","msgtype":"m.text"},"ts":1292954402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: by the way, WebKit nightlies are quite different from shipping Safari in how they match alias names","msgtype":"m.text"},"ts":1292954403000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"annevk: we used to ignore all punctuation, but we no longer do","msgtype":"m.text"},"ts":1292954404000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"well, and the original data on Bitbucket; I need to find some way to query it more intelligently","msgtype":"m.text"},"ts":1292954460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ap, ah great, Opera changed away from that too","msgtype":"m.text"},"ts":1292954461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: chromium probably shipped that already, which is why they may seem more different in your data than they actually are","msgtype":"m.text"},"ts":1292954462000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"it would mean that would match less labels and produce less encodings","msgtype":"m.text"},"ts":1292954520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I'm not sure that theory holds","msgtype":"m.text"},"ts":1292954521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, fewer aliases for the same encodings","msgtype":"m.text"},"ts":1292954522000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"I feed 300 labels; I count unique encodings and aliases for them","msgtype":"m.text"},"ts":1292954580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yeah","msgtype":"m.text"},"ts":1292954581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they would end up among \"obviouslyfake\" in my data","msgtype":"m.text"},"ts":1292954582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1292954583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome has indeed quite a bit more than Safari there","msgtype":"m.text"},"ts":1292954640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: another change you can find in WebKit nightlies is that we now drop names with version info that come from ICU, such as ISO_2022,locale=ja,version=0","msgtype":"m.text"},"ts":1292954760000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"that was a label WebKit recognized?","msgtype":"m.text"},"ts":1292954820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1292954821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I sort of hope we can just have a fixed list of labels that you need to have for the web and no more","msgtype":"m.text"},"ts":1292954880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe grandfathering the Mac encodings in...","msgtype":"m.text"},"ts":1292954881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then implementations can also be a lot simpler than all of ICU","msgtype":"m.text"},"ts":1292954940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so far, the most practically data that came from encoding support research was about upgrading encodings","msgtype":"m.text"},"ts":1292955000000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"annevk: such as \"EUC-KR really means windows-949\"","msgtype":"m.text"},"ts":1292955001000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"yeah, that was great","msgtype":"m.text"},"ts":1292955060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh actually, I did find a few funny things in Safari","msgtype":"m.text"},"ts":1292955061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't we all sometimes?","msgtype":"m.text"},"ts":1292955120000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ap, http://annevankesteren.nl/2010/8-bit-labels#cp869 Safari has this for quite a few encodings, swapping 1A, 1C, and 7F around","msgtype":"m.text"},"ts":1292955121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://annevankesteren.nl/2010/8-bit-labels#ibm775 (an encoding only Safari and Internet Explorer have)","msgtype":"m.text"},"ts":1292955122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(same weirdness)","msgtype":"m.text"},"ts":1292955123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes for most IBM encodings I think","msgtype":"m.text"},"ts":1292955180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(scroll upwards)","msgtype":"m.text"},"ts":1292955181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: swapping is interesting - it comes from ICU http://demo.icu-project.org/icu-bin/convexp?conv=ibm-869_P100-1995&s=IANA&s=MIME&s=ALL","msgtype":"m.text"},"ts":1292955240000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ah yeah, whenever Chrome does not have the encoding disabled it has the same issue","msgtype":"m.text"},"ts":1292955300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll file a bug for our ICU folks to look into, but I suspect that this is a bug in Windows","msgtype":"m.text"},"ts":1292955301000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"annevk: as IBM probably checked ICU to match their original definition of those encodings","msgtype":"m.text"},"ts":1292955360000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"if the tables just say \"S\" it means Safari on both Mac and Win","msgtype":"m.text"},"ts":1292955361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and Firefox and Internet Explorer contradict Safari","msgtype":"m.text"},"ts":1292955362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. in http://annevankesteren.nl/2010/8-bit-labels#cp862","msgtype":"m.text"},"ts":1292955363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or http://annevankesteren.nl/2010/8-bit-labels#ibm857","msgtype":"m.text"},"ts":1292955420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if Chrome and Opera need to support these IBM encodings","msgtype":"m.text"},"ts":1292955421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, an example that's supported by more than just Ie is helpful","msgtype":"m.text"},"ts":1292955422000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"I would sort of expect Firefox to do what IBM wants","msgtype":"m.text"},"ts":1292955480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking at 862 specifically, Safari probably supports many more aliases for it, according to that ICU page","msgtype":"m.text"},"ts":1292955481000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"but then ICU not doing what IBM wants would also be weird","msgtype":"m.text"},"ts":1292955482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ap, I guess I can try to increase the amount of aliases to 400","msgtype":"m.text"},"ts":1292955540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't even gone through the IANA registry either yet","msgtype":"m.text"},"ts":1292955541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: are you sure all browsers regressed xml loading instead of the test breaking?","msgtype":"m.text"},"ts":1292957760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins: did you test JägerMonkey or something older for 32-bit arithmetic?","msgtype":"m.text"},"ts":1292957820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins: I'd expect trunk to do 32-bit math faster than beta6 or earlier","msgtype":"m.text"},"ts":1292957821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I have no idea.  I'm using b7.","msgtype":"m.text"},"ts":1292957822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: odd","msgtype":"m.text"},"ts":1292957880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The function in question is this:","msgtype":"m.text"},"ts":1292957881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" var lsw = (x & 0xFFFF) + (y & 0xFFFF);","msgtype":"m.text"},"ts":1292957882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" var msw = (x >> 16) + (y >> 16) + (lsw >> 16);","msgtype":"m.text"},"ts":1292957883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" return (msw << 16) | (lsw & 0xFFFF);","msgtype":"m.text"},"ts":1292957884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I tried replacing it with just:","msgtype":"m.text"},"ts":1292957885000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"return ( (x & 0xFFFFFFFF) + (y & 0xFFFFFFFF) ) & 0xFFFFFFFF;","msgtype":"m.text"},"ts":1292957940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which, come to think of it, is probably incorrect anyway.","msgtype":"m.text"},"ts":1292957941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It didn't change the md5 for the strings I was testing, at least.","msgtype":"m.text"},"ts":1292957942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen, good point, no","msgtype":"m.text"},"ts":1292958000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: the latter could overflow out of 32 bits for the intermediate value, right?","msgtype":"m.text"},"ts":1292958001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"makes a local test","msgtype":"m.emote"},"ts":1292958002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Yes.","msgtype":"m.text"},"ts":1292958003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1292958004000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"((x|0) + (y|0))|0","msgtype":"m.text"},"ts":1292958060000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"TabAtkins: I think the original correctly lets overflow wrap around","msgtype":"m.text"},"ts":1292958061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Yes, it does.","msgtype":"m.text"},"ts":1292958120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: My version is incorrect as written.","msgtype":"m.text"},"ts":1292958121000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bga_: How does |0 work?  Do bitwise operators automatically truncate to 32 bits or something?","msgtype":"m.text"},"ts":1292958122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1292958123000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"convert to `long`","msgtype":"m.text"},"ts":1292958180000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"~~x too","msgtype":"m.text"},"ts":1292958181000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Ah, kk.  Didn't realize that, so I using a more generically correct version.","msgtype":"m.text"},"ts":1292958182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Let me try out a correct variant.","msgtype":"m.text"},"ts":1292958240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All right, it's back to a wash with \"var tmp = ~~x + ~~y; return (tmp>>>32) || tmp;\"","msgtype":"m.text"},"ts":1292958360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(tmp>>>32)?","msgtype":"m.text"},"ts":1292958361000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"it always 0","msgtype":"m.text"},"ts":1292958420000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"No, x+y can be greater than 32 bits.","msgtype":"m.text"},"ts":1292958480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Frex, if both of them are 2^32 - 1.","msgtype":"m.text"},"ts":1292958481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen, hmm yeah, all browsers do it incrementally","msgtype":"m.text"},"ts":1292958482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"better fix my post","msgtype":"m.text"},"ts":1292958540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins read es spec","msgtype":"m.text"},"ts":1292958600000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"x >>> 32 <=> x >>> 0","msgtype":"m.text"},"ts":1292958601000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"x >>> y <=> long(x) >>> long(y)&31","msgtype":"m.text"},"ts":1292958660000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Oh, hrm, you're right.  I guess I need to explicitly use numeric comparisons then.","msgtype":"m.text"},"ts":1292958661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: you might be interested in the xml-dev threads on MicroXML","msgtype":"m.text"},"ts":1292958840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, anything in particular?","msgtype":"m.text"},"ts":1292962500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, I did go through some of the email","msgtype":"m.text"},"ts":1292962501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is xml-dev worth subscribing to?","msgtype":"m.text"},"ts":1292963820000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"TabAtkins: \"return (tmp>>>32) || tmp\" - should that be |, not ||?","msgtype":"m.text"},"ts":1292963821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: No, I was using logical or on purpose to do fallback.  But that line was completely wrong in the first place, because my brain was being stupid and forgetting what \"overflow\" means'.","msgtype":"m.text"},"ts":1292964660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"do you really not have to close out the <th> and <td> elements in a table?","msgtype":"m.text"},"ts":1292973960000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1292974020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You also don't have to close <li>s.","msgtype":"m.text"},"ts":1292974021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"assuming that html4 or 5 and not xhtml","msgtype":"m.text"},"ts":1292974022000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"There are some crazy rules about when you dont' ahve to close <p>, so I ignore them and just always explicitly close it.","msgtype":"m.text"},"ts":1292974023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, xhtml needs to be well-formed xml.  No omitted tags.","msgtype":"m.text"},"ts":1292974024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems kinda dangerous all around to me, but w/e","msgtype":"m.text"},"ts":1292974080000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"You don't need to close the <thead>/<tbody>/<tfoot> elements either.","msgtype":"m.text"},"ts":1292974081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1292974082000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Nah, it's cool.  Check out, for example, this page's source: http://www.xanthir.com/diagrams/flex-align-diagrams.html","msgtype":"m.text"},"ts":1292974083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess since they are never nested, makes sense","msgtype":"m.text"},"ts":1292974140000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"actually looks pretty clean...","msgtype":"m.text"},"ts":1292974141000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Yeah, they're never nested without a container protecting the nested one from the outer one.","msgtype":"m.text"},"ts":1292974142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1292974200000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"are there any plans to introduce some sort of child header element for a <tbody> ?","msgtype":"m.text"},"ts":1292974260000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Huh?","msgtype":"m.text"},"ts":1292974261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"imagine a table with multiple sections, <tbody>s, where you wanted to include a line describing what the contents of each section are","msgtype":"m.text"},"ts":1292974320000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"Use a <tr> with a colspanning <th>.","msgtype":"m.text"},"ts":1292974321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1292974380000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"not quite the same, but w/e","msgtype":"m.text"},"ts":1292974440000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"},
{"content":{"body":"I was thinking something more like <caption>","msgtype":"m.text"},"ts":1292974441000,"senderName":"oojacoboo","senderId":"oojacoboo@irc"}
]