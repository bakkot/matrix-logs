[
{"content":{"body":"tobie: Quick mention: https://github.com/w3c/webappsec-credential-management/pull/100#discussion_r142558995 is also considering using callback functions to hold references to platform functions, as mentioned in the issue under https://heycam.github.io/webidl/#idl-callback-functions. I didn't see a github issue to mention this in.","msgtype":"m.text"},"ts":1507077491000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"That seems OK?","msgtype":"m.text"},"ts":1507083844000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think I agree we should allow it. WebIDL currently says \"An identifier that identifies a callback function is used to refer to a type whose values are references to objects that are functions with the given signature.\", but a platform function isn't a reference to an object.","msgtype":"m.text"},"ts":1507083987000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"It isn't?","msgtype":"m.text"},"ts":1507084000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Hm. Well, if it is, it's a Javascript object, and then calling the function involves conversions to and from JS. Isn't that slower than a direct call to an algorithm?","msgtype":"m.text"},"ts":1507084080000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Oh, yeah, for sure, are you not trying to call the platform function?","msgtype":"m.text"},"ts":1507084104000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you're trying to just invoke the algorithm, you should do that instead of indirecting through the callback function type","msgtype":"m.text"},"ts":1507084118000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(I have to run off for 30 minutes, sorry.)","msgtype":"m.text"},"ts":1507084153000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: Ok, son's in bed. Right now, we're having implementations of Credential.[[Create]] return an algorithm that Credential's algorithms queue onto the main thread. It seemed like it might have been cleaner to say that was a callback function, but I think you're saying we should just say it's an algorithm. Or possibly we should choose another way to express it entirely.","msgtype":"m.text"},"ts":1507085741000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah, it seems cleaner to have it be an algorithm, unless you actually need the JS engine involved in some way.","msgtype":"m.text"},"ts":1507085780000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean, do you anticipate implementers actually going through their Web IDL bindings? If not, then don't use a Web IDL type.","msgtype":"m.text"},"ts":1507085798000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: That sounds like a good rule of thumb; thanks.","msgtype":"m.text"},"ts":1507086260000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"We should really make it so that invoking JS or IDL end points requires some kind of review","msgtype":"m.text"},"ts":1507095063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: would be nice to have conformance-checker/ tests for the utf-8 change also","msgtype":"m.text"},"ts":1507111939000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"will write tests for chocolate :-P","msgtype":"m.emote"},"ts":1507112063000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonders what EU law states around companies refusing to remove former addresses from accounts","msgtype":"m.emote"},"ts":1507112767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.datainspektionen.se/lagar-och-regler/eus-dataskyddsreform/ (in Swedish; this reform doesn't apply until May 2018. Currently for Sweden there's http://www.datainspektionen.se/lagar-och-regler/personuppgiftslagen/ which the reform will replace; not sure what the deal is for other countries)","msgtype":"m.text"},"ts":1507113184000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: does that cover this? I tried to skim through the one published on the EU site, but it was rather dense","msgtype":"m.text"},"ts":1507115758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given text/html;charset=gbk;charset=utf-8 what's the encoding going to be?","msgtype":"m.text"},"ts":1507123599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It is hard to believe that no normative text on MIME type parameters even discusses the possibility of duplicates","msgtype":"m.text"},"ts":1507125060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not all that hard...","msgtype":"m.text"},"ts":1507125402000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: depends on the type of company, and why they want to keep the former address?","msgtype":"m.text"},"ts":1507126703000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"foolip: sorry, you're having such a bad time with the different pieces of software I built. Thing is, they've all been built on a shoestring budget (essentially my own free time) and no one wants to invest in them, soâ€¦","msgtype":"m.text"},"ts":1507126728000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: specref has been great, really","msgtype":"m.text"},"ts":1507126758000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: it's not your fault the upstream DB isn't proactively maintained","msgtype":"m.text"},"ts":1507126774000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: and the PR reviewer assigner is also great","msgtype":"m.text"},"ts":1507126792000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: at least, now that Heroku stepped up, I no longer have to pay for hosting those.","msgtype":"m.text"},"ts":1507126802000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"gsnedders: do you have a reference?","msgtype":"m.text"},"ts":1507126848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no :)","msgtype":"m.text"},"ts":1507126855000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"foolip: yeah, PR preview was a lot easier: clear scope upfront.","msgtype":"m.text"},"ts":1507126898000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but, e.g., financial companies and companies who've had large transactions with you are likely obliged due to money laundring regulation","msgtype":"m.text"},"ts":1507126903000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"foolip: specref + wpt-pr-bot were just duct taped as we moved along.","msgtype":"m.text"},"ts":1507126958000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: did we not spray some WD-40 in there at some point?","msgtype":"m.text"},"ts":1507126973000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: probably, which is why everything is now slippery","msgtype":"m.text"},"ts":1507126997000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: I know you are traveling today, but when you get a chance can you sanity check something for me?  does it make any sense that this should expect .workerStart on a performance timeline entry for an intercepted <script> request? https://github.com/w3c/web-platform-tests/blob/master/service-workers/service-worker/resource-timing.https.html#L13","msgtype":"m.text"},"ts":1507132063000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: oh, I think MDN confused me... looking at the spec this is specifically to capture the service worker start time","msgtype":"m.text"},"ts":1507132637000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1507132640000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I think I found some more <script> follow-up, <script language> executes too","msgtype":"m.text"},"ts":1507133448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm and the spec doesn't support this?","msgtype":"m.text"},"ts":1507133610000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: processing model does, but there's some inconsistency in the obsolete-but-conforming section","msgtype":"m.text"},"ts":1507133729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: also https://github.com/bmeck/I-D/issues/2#issuecomment-334207482","msgtype":"m.text"},"ts":1507133980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure what the action is there, you mean we should change HTML to recommend something for servers?","msgtype":"m.text"},"ts":1507134085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah","msgtype":"m.text"},"ts":1507134099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there's no normative statement corresponding to the MIME type summary of everything but text/javascript being obsolete","msgtype":"m.text"},"ts":1507134115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm ok","msgtype":"m.text"},"ts":1507134126000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Makes sense, please file both so I don't lose track, as I'm still feeling kinda behind after BlinkOn and TC39","msgtype":"m.text"},"ts":1507134148000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: will do, looking into a PR for the former","msgtype":"m.text"},"ts":1507134178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I no longer think the former is a problem, since the requirement is subtly different from type","msgtype":"m.text"},"ts":1507134230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I haven't seen much come out regarding either so far","msgtype":"m.text"},"ts":1507138219000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I did read some TC39 minutes, but not all the days yet","msgtype":"m.text"},"ts":1507138253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Either what?","msgtype":"m.text"},"ts":1507138284000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: BlinkOn or TC39 in terms of announcements or stuff to watch","msgtype":"m.text"},"ts":1507138463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see now that import.meta is pretty close to done though","msgtype":"m.text"},"ts":1507138475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah yeah","msgtype":"m.text"},"ts":1507138630000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Float16 Typed Arrays, hmm, I wonder if the high definition color folks might want to reconsider using that","msgtype":"m.text"},"ts":1507138642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What do you mean?","msgtype":"m.text"},"ts":1507140463000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think they were currently considering using Float32Arrays in some strange format?","msgtype":"m.text"},"ts":1507141987000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"ImageData uses float32, which is inefficient due to memory consumption and necessary conversion operations. Float32 was chosen because it is convenient for manipulation (e.g. image processing) due to its native support in JavaScript (and current CPUs). A possible extension would be to add and option for rec-2020 content to be encoded as float16s packed into Uint16 values. \"","msgtype":"m.text"},"ts":1507142025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"from https://wiki.whatwg.org/wiki/CanvasColorSpace","msgtype":"m.text"},"ts":1507142029000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Float32 doesn't have native support in JS? JS is all float64.","msgtype":"m.text"},"ts":1507142578000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It converts back and forth: https://tc39.github.io/ecma262/#sec-numbertorawbytes","msgtype":"m.text"},"ts":1507142879000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Ah, by \"native support\" they just mean \"in Typed Array\"?","msgtype":"m.text"},"ts":1507142911000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We just need to add Float16 to Typed Arrays, honestly.","msgtype":"m.text"},"ts":1507142936000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that is literally what the discussion was about :)","msgtype":"m.text"},"ts":1507143735000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: given the below DFNs, how would you organize them in Bikeshed (when/how would you use the \"for\" attribute and why)?","msgtype":"m.text"},"ts":1507148421000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/tda6zUq1/","msgtype":"m.text"},"ts":1507148428000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: here's the relevant PR for context: https://github.com/heycam/webidl/pull/433","msgtype":"m.text"},"ts":1507148572000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: (Which doesn't include dictionary mixins)","msgtype":"m.text"},"ts":1507148604000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: In cases like that, if I'm happy writing out \"partial dictionary mixin\" wherever it's used, I'd just make that the <dfn> with no [for]. If not, I'd probably make \"mixin\" or \"member\" the [lt] with \"*interface\", \"*dictionary\" or \"mixin\" the [for].","msgtype":"m.text"},"ts":1507148903000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"But that's just me.","msgtype":"m.text"},"ts":1507148908000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: so convenience over system.","msgtype":"m.text"},"ts":1507149055000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(or should I say \"convenience as a system\"?)","msgtype":"m.text"},"ts":1507149097000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: Yeah, I (eventually) got that; annevk's comment came out of nowhere and didn't have the context for me to understand the convo. ^_^","msgtype":"m.text"},"ts":1507149579000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: \"for\" is a namespacing mechanism. Interfaces and dictionaries live in the same namespace; partials are the same. Presumably mixins are the in the same namespace too? (I don't think they *have* to be, but it would be convenient to have that guarantee.)","msgtype":"m.text"},"ts":1507149665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"members are all namespaced to their interface/dictionary/whatever, because you can have multiple members with the same name if they're in different interfaces.","msgtype":"m.text"},"ts":1507149692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so the term \"interface member\" would reside in the same (global) namespace as \"interface\"?","msgtype":"m.text"},"ts":1507153479000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh, the *terms*?","msgtype":"m.text"},"ts":1507153493000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sorry, I completely misunderstood the question.","msgtype":"m.text"},"ts":1507153502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're all independent dfns, no for.","msgtype":"m.text"},"ts":1507153514000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: gotcha, thanks!","msgtype":"m.text"},"ts":1507153737000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ugh, I wish I'd actually thought about the namespacing of IDL before I made all the IDL dfn types.","msgtype":"m.text"},"ts":1507153912000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Interfaces/dictionaries/callbacks/typedefs all live together, and attr/methods/constructors live together. They should have just been two types, not 7.","msgtype":"m.text"},"ts":1507153947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"noticing *Enabled File and Directory Entries API* in https://developer.apple.com/safari/technology-preview/release-notes/","msgtype":"m.text"},"ts":1507154001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://wicg.github.io/entries-api/","msgtype":"m.text"},"ts":1507154167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so we now have three shipping implementations of that","msgtype":"m.text"},"ts":1507154170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jsbell: are there WPT tests for it?","msgtype":"m.text"},"ts":1507154332000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: it's always easier in hindsight.","msgtype":"m.text"},"ts":1507154334000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: Sorry, was at the dentist...","msgtype":"m.text"},"ts":1507155742000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"MikeSmith: https://github.com/w3c/web-platform-tests/pull/6142","msgtype":"m.text"},"ts":1507155760000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"MikeSmith: Want to review? :)","msgtype":"m.text"},"ts":1507155773000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Sadly, mostly .manual","msgtype":"m.text"},"ts":1507155781000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Wait WAT? That'd be 4 implementations","msgtype":"m.text"},"ts":1507155803000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"MikeSmith: Curious how you counted 3 implementations, though.","msgtype":"m.text"},"ts":1507155992000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I was counting Blink, Gecko, and WebKit","msgtype":"m.text"},"ts":1507156653000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what are you counting?","msgtype":"m.text"},"ts":1507156661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Edge has it too","msgtype":"m.text"},"ts":1507156665000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"oh wow great","msgtype":"m.text"},"ts":1507156761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well thatâ€™s a pretty nice success story","msgtype":"m.text"},"ts":1507156786000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Well, Edge added directory upload support to be compatible with Chrome, Firefox dropped an alternate proposal and just went with compatibility.","msgtype":"m.text"},"ts":1507156854000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: is there a Chrome developer advocate responsible for this API?","msgtype":"m.text"},"ts":1507156854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1507156862000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well Iâ€™m kinda surprised we havenâ€™t been getting the word out about this more","msgtype":"m.text"},"ts":1507156894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think there are a lot of web developers who donâ€™t know about this","msgtype":"m.text"},"ts":1507156917000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: A bit of sordid history because there was a cleaner API proposal, but this de facto one codifies the webkit prefixes and crufty API.","msgtype":"m.text"},"ts":1507156945000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"anyway, Iâ€™ll review the tests today, and get them merged","msgtype":"m.text"},"ts":1507156948000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But that's life.","msgtype":"m.text"},"ts":1507156952000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1507156957000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ah yeah I now start to remember the history a bit more","msgtype":"m.text"},"ts":1507156974000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"itâ€™s been a while","msgtype":"m.text"},"ts":1507156979000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm on point as much as anyone is for them on the Chrome side. I can point one of my MDN editor friends at it if we need to doc 'em more","msgtype":"m.text"},"ts":1507156985000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"There are old  html5rocks articles from back when we (Chrome) thought the whole FileSystem API was going to be the hot new thing.","msgtype":"m.text"},"ts":1507157026000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"yeah those I remember","msgtype":"m.text"},"ts":1507157036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So... we didn't evangelize more since there wasn't uptake elsewhere until recently.","msgtype":"m.text"},"ts":1507157056000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"OK well we can change that","msgtype":"m.text"},"ts":1507157077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and as far as the MDN docs, I could help with those","msgtype":"m.text"},"ts":1507157080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jsbell: oh wait why are these all manual tests? just because of the user interaction needed around granted permission?","msgtype":"m.text"},"ts":1507157170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yah","msgtype":"m.text"},"ts":1507157177000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1507157191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: The only way to trigger most of the API is dragging a file/directory in","msgtype":"m.text"},"ts":1507157196000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"If there's fancy webdriver magic that can do that, great.","msgtype":"m.text"},"ts":1507157203000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"yeah, makes sense","msgtype":"m.text"},"ts":1507157204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think we can get it automated with webdriver eventually","msgtype":"m.text"},"ts":1507157222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders has been working on it","msgtype":"m.text"},"ts":1507157228000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"working on the general problem of automating WPT tests using webdriver that are currently manual","msgtype":"m.text"},"ts":1507157267000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ossm","msgtype":"m.text"},"ts":1507157273000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"thereâ€™s no test yet for the IDL conformance?","msgtype":"m.text"},"ts":1507157298000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you know what I mean?","msgtype":"m.text"},"ts":1507157305000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll be curious to see how Safari did on the edge cases, and whether they matched Chrome's behavior or the slightly more aspirational version in the spec...","msgtype":"m.text"},"ts":1507157314000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"MikeSmith; there should be two, hrm...","msgtype":"m.text"},"ts":1507157321000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ah nm","msgtype":"m.text"},"ts":1507157342000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: interfaces.html and interfaces-manual.html","msgtype":"m.text"},"ts":1507157342000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"yeah, github UI was spinning while loading the tests","msgtype":"m.text"},"ts":1507157366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"still spinning","msgtype":"m.text"},"ts":1507157381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I should just go ahead and check them out locally","msgtype":"m.text"},"ts":1507157401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yay, thanks for your help/interest/encouragement!","msgtype":"m.text"},"ts":1507157418000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"thank you for doing all the hard work! :)","msgtype":"m.text"},"ts":1507157437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jsbell: oh btw have these tests already had any Chrome-team review?","msgtype":"m.text"},"ts":1507157553000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: good question, let me see... I did them outside our repo so maybe I didn't...","msgtype":"m.text"},"ts":1507157589000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"MikeSmith: let's go with \"no\"; I can rope someone into that if it helps. We're NOT running these as part of our CI yet. (We have a suite of non-WPT tests)","msgtype":"m.text"},"ts":1507157768000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1507157797000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no need to rope in anybody else","msgtype":"m.text"},"ts":1507157815000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: off to a mtg now; if you comment here I'll see it eventually tho","msgtype":"m.text"},"ts":1507157905000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1507157920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jsbell: (when youâ€™re back) can you please make your branch writeable by WPT maintainers so I can rebase it against current WPT master and push?","msgtype":"m.text"},"ts":1507158338000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and also so I can fix some minor lint errors myself","msgtype":"m.text"},"ts":1507158380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]