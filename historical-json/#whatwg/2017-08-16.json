[
{"content":{"body":"tobie: anything I need to fix in https://github.com/heycam/webidl/pull/405 before it can get applied?","msgtype":"m.text"},"ts":1502856180000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"or shall I just wait for the ECMA-262 PR to land?","msgtype":"m.text"},"ts":1502856541000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TabAtkins: own","msgtype":"m.text"},"ts":1502857554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: And you'd like them to get moved into the head? If so, I can provide an attr that opts into that.","msgtype":"m.text"},"ts":1502858369000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, seems better for the preparser","msgtype":"m.text"},"ts":1502858404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: the earlier those URLs are found the better","msgtype":"m.text"},"ts":1502858428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Kk, file a bug on me and I'll do it. It just has to be opt-in for safety reasons, like I said","msgtype":"m.text"},"ts":1502858473000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Preferably point to a spec that is currently generating them late","msgtype":"m.text"},"ts":1502858488000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: fyi, another drag & drop issue: https://github.com/whatwg/html/issues/2925","msgtype":"m.text"},"ts":1502861736000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh my, Chrome & Gecko have a different behavior too :(","msgtype":"m.text"},"ts":1502861988000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hey rniwa since youâ€™re still awake, please take a look at https://github.com/whatwg/html/pull/2907/commits/2381a269cdfade91ceb056086a494471ceff8e35","msgtype":"m.text"},"ts":1502862893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it looks good but I don't have commit privilege to the repo.","msgtype":"m.text"},"ts":1502862921000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah annevk can (re)review and merge it","msgtype":"m.text"},"ts":1502863025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just wanted to make sure you think itâ€™s an improvement","msgtype":"m.text"},"ts":1502863043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it future-proofs it against the class of problem itâ€™s fixing","msgtype":"m.text"},"ts":1502863065000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sure, it looks like an improvement","msgtype":"m.text"},"ts":1502863091000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1502863097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1502863098000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I now feel like going back into the spec and changing any remaining cases we have of hard-coded step references","msgtype":"m.text"},"ts":1502863129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe Iâ€™ll do that today","msgtype":"m.text"},"ts":1502863143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I think I asked you this before but I guess thereâ€™s a reason weâ€™re not doing branch snapshots for HTML","msgtype":"m.text"},"ts":1502863262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't think we have a good reason","msgtype":"m.text"},"ts":1502865770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, Please leave your sense of logic at the door, thanks!","msgtype":"m.text"},"ts":1502865984000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"couldn't resist","msgtype":"m.emote"},"ts":1502865991000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"MikeSmith, btw...tks for script nomodule update to validator","msgtype":"m.text"},"ts":1502866053000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"now has 0 html validation errors....and hundreds for my css :\\","msgtype":"m.text"},"ts":1502866134000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"a-ja: super ðŸ––","msgtype":"m.text"},"ts":1502866272000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1502867124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Safari uses a different character set for base64 in data: URLs: https://bugs.webkit.org/show_bug.cgi?id=175568","msgtype":"m.text"},"ts":1502867139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This really goes to demonstrate how poor testing is","msgtype":"m.text"},"ts":1502867164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should it be DOMMatrix2dInit or DOMMatrix2DInit? (there's a dictionary member called \"is2D\")","msgtype":"m.text"},"ts":1502867997000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it's Path2D and CanvasRenderingContext2D","msgtype":"m.text"},"ts":1502868306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but also, dictionary names are not observable","msgtype":"m.text"},"ts":1502868345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, but still :-) thanks","msgtype":"m.text"},"ts":1502868368000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gotta paint the back of that fence","msgtype":"m.text"},"ts":1502868431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is preferred, bactrian or dromedary camel case?","msgtype":"m.text"},"ts":1502869220000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"a-ja: not sure if serious, but https://w3ctag.github.io/design-principles/#casing-rules","msgtype":"m.text"},"ts":1502869394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wasn't serious...but reading","msgtype":"m.text"},"ts":1502869442000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"TLDR; answer is \"hybrid\"","msgtype":"m.text"},"ts":1502869491000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"i prefer XMLHttpRequest case","msgtype":"m.text"},"ts":1502869506000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh my","msgtype":"m.text"},"ts":1502869519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: was there an issue about changing setAttribute et al to check the attribute name according to what the html parser accepts?","msgtype":"m.text"},"ts":1502873817000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: there's https://github.com/whatwg/dom/pull/449","msgtype":"m.text"},"ts":1502873853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: I was pondering just that. Going through the whole list one by one again and adding a few comments. Sorry what seemed like a trivial change ended up as a long conversation on ES functions.","msgtype":"m.text"},"ts":1502874183000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: no realizing that built-in functions is a subset of both function objects and constructors.","msgtype":"m.text"},"ts":1502874257000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: s/no/now/","msgtype":"m.text"},"ts":1502874282000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: i.e. these operate on a different axis; it's [[Call]] vs. [[Construct]] on one axis, and built-in vs. user land on the other.","msgtype":"m.text"},"ts":1502874384000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: ES terminology is really letting us down, here.","msgtype":"m.text"},"ts":1502874401000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hmmmmmm. This worries me :-( https://github.com/w3c/web-platform-tests/pull/6418","msgtype":"m.text"},"ts":1502876796000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie, sounds like you need to put a table in the spec somewhere :)","msgtype":"m.text"},"ts":1502878774000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: in which spec?","msgtype":"m.text"},"ts":1502878847000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Either webidl or ES, I suppose","msgtype":"m.text"},"ts":1502878859000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I've yet to understand what the exotic stuff is","msgtype":"m.text"},"ts":1502878950000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: could well be that two dimensions aren't enough to sort this whole thing out.","msgtype":"m.text"},"ts":1502878970000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: custom internal methods","msgtype":"m.text"},"ts":1502878981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: custom internal methods are exotic? I thought they were built-in.","msgtype":"m.text"},"ts":1502879022000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: e.g., custom [[Delete]] or [[OwnPropertyKeys]]","msgtype":"m.text"},"ts":1502879030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: if an object has custom internal methods, that makes it an exotic object","msgtype":"m.text"},"ts":1502879058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh. The object is exotic.","msgtype":"m.text"},"ts":1502879076000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: WindowProxy and Location are good examples outside ECMAScript (and anything with getters/callers)","msgtype":"m.text"},"ts":1502879108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: thanks for the review! sure, I'll address the comments soon, no worries","msgtype":"m.text"},"ts":1502879846000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: well hopefully by then the ES PR will have been merged.","msgtype":"m.text"},"ts":1502879987000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Anyone ideas of how MIME types end up getting exposed in the platform?","msgtype":"m.text"},"ts":1502881169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess when you navigate whether something downloads or not, maybe Blob.prototype.type though as I understand it that's just what you passed in, Document.prototype.contentType though that doesn't have parameters","msgtype":"m.text"},"ts":1502881215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Getting the Content-Type header through fetch() or XMLHttpRequest just gives you the raw value","msgtype":"m.text"},"ts":1502881235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For data: URLs it's a mixed bag, but Chrome and Firefox do seem to expose something there (but unclear to me if that's desired)","msgtype":"m.text"},"ts":1502881287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Stuff that uses https://fetch.spec.whatwg.org/#concept-header-extract-mime-type I suppose, though I'm not hopeful","msgtype":"m.text"},"ts":1502881385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: sorry, just fixed the comments :|","msgtype":"m.text"},"ts":1502882046000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"annevk: wait, there are plans to drop FTP support?","msgtype":"m.text"},"ts":1502887150000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: sure, suspect before HTTP","msgtype":"m.text"},"ts":1502887921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is HTMLAllCollection now the last interface with legacycaller?","msgtype":"m.text"},"ts":1502889462000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: that might be true, yes","msgtype":"m.text"},"ts":1502889557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would there be an objection to me listing these weird interfaces in notes within the WebIDL spec?","msgtype":"m.text"},"ts":1502889598000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I've got to look them  up all the time.","msgtype":"m.text"},"ts":1502889614000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Alternatively, in an annex.","msgtype":"m.text"},"ts":1502889627000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: source comments seem definitely fine, notes probably too","msgtype":"m.text"},"ts":1502889634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1502889657000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: once ECMAScript defines HTML Document Dot All Objects or whatever they call them we might want to revisit how this gets defined","msgtype":"m.text"},"ts":1502889685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: we could just put the legacycaller bits directly in HTML","msgtype":"m.text"},"ts":1502889697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(though haven't checked if that actually works out in practice, mind you)","msgtype":"m.text"},"ts":1502889717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think that could work with a bit of refactoring.","msgtype":"m.text"},"ts":1502889783000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: if that means defining [[Call]] solely in HTML that would be a lot better","msgtype":"m.text"},"ts":1502889941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it would","msgtype":"m.text"},"ts":1502889971000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: well, the syntax should still stay in WebIDL, though.","msgtype":"m.text"},"ts":1502890020000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: unless we turn legacycaller into an extended attribute, of course.","msgtype":"m.text"},"ts":1502890052000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: how would you got about this in HTML? Just add some prose that HTMLAllCollection has an additional [[Call]] method? Or add a new extended attribute?","msgtype":"m.text"},"ts":1502890706000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: the former, just like we do for WindowProxy and Location","msgtype":"m.text"},"ts":1502890729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1502890741000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'd love to remove legacycaller from IDL","msgtype":"m.text"},"ts":1502893086000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: yeah, I think this plan might work","msgtype":"m.text"},"ts":1502893112000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: toying with adding [[Call]] to HTML spec as we speak","msgtype":"m.text"},"ts":1502893128000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: turns out there are some weird oddities;","msgtype":"m.text"},"ts":1502893162000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: document.all(\"1\") and document.all(\"1\", \"45\") aren't returning the same thing, which blows my mind","msgtype":"m.text"},"ts":1502893255000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"wait, why?","msgtype":"m.text"},"ts":1502893316000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"wait, why are you using rawgit?","msgtype":"m.text"},"ts":1502893316000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"TimothyGu: never mind my last comment.","msgtype":"m.text"},"ts":1502893326000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"you are aware of https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all right","msgtype":"m.text"},"ts":1502893342000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: stupid mistake on my part due to poor eyesight","msgtype":"m.text"},"ts":1502893346000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"guessing you are","msgtype":"m.text"},"ts":1502893364000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1502893412000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"well, sort of.","msgtype":"m.text"},"ts":1502893420000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: Was your initial comment \"I'd love to remove legacycaller from IDL\" to be interpreted as: (1) I'd love to see legacycaller go, (2) I'd love to do the work to remove legacycaller, or (3) both (1) and (2)?","msgtype":"m.text"},"ts":1502893536000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(3) :)","msgtype":"m.text"},"ts":1502893557000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"well, more like \"I'd love to see it go, and I *can* do the work if no one else wants to\" :P","msgtype":"m.text"},"ts":1502893592000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: sounds good. Do you mind if I work on the HTML spec PR while you rip it out of WebIDL?","msgtype":"m.text"},"ts":1502893622000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"biab","msgtype":"m.text"},"ts":1502893647000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"sure!","msgtype":"m.text"},"ts":1502893664000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"let me know when the HTML PR is ready","msgtype":"m.text"},"ts":1502893678000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"How can we kill legacycaller given it's used?","msgtype":"m.text"},"ts":1502893747000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh, extended attribute.","msgtype":"m.text"},"ts":1502893767000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it's only used in one place, so we can just specify its exotic behaviors *there*","msgtype":"m.text"},"ts":1502893846000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Oh, prose. :(","msgtype":"m.text"},"ts":1502893856000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: there's going to be prose one way or another ðŸ˜ƒ","msgtype":"m.text"},"ts":1502894088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: [IOnlyTolerateCamelCaseProseWithSquareBracketsAroundIt] :P","msgtype":"m.text"},"ts":1502894113000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: well, since it's about a custom [[Call]] there'll be brackets","msgtype":"m.text"},"ts":1502894148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perfect! :D","msgtype":"m.text"},"ts":1502894158000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"tobie: you might want to take care of https://github.com/heycam/webidl/issues/407 while porting [[Call]] to HTML","msgtype":"m.text"},"ts":1502895452000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"rbyers: when Chrome coalesces mousemoves, there isn't any way to get all the mousemoves, right?","msgtype":"m.text"},"ts":1502897691000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I mean this one move per rAF thing","msgtype":"m.text"},"ts":1502897699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: probably good to ping jasnell for things like https://github.com/whatwg/url/issues/342 too","msgtype":"m.text"},"ts":1502897787000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: I'm pretty sure there is","msgtype":"m.text"},"ts":1502897992000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"something like mouseEvent.getCoaelescedThingies()","msgtype":"m.text"},"ts":1502898003000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or maybe it's pointer events only","msgtype":"m.text"},"ts":1502898006000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rbyers has some demo where he uses this to make drawing prettier","msgtype":"m.text"},"ts":1502898020000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: getCoalescedEvents() is a pointer events thing, not mouse event","msgtype":"m.text"},"ts":1502899096000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Right, OK. So yeah, use pointer events, they are the future :).","msgtype":"m.text"},"ts":1502899254000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TimothyGu: wellâ€¦ I guess I can just close it now. :D","msgtype":"m.text"},"ts":1502899652000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"smaug____: Yeah coalesced events are available on pointer events only.  One visualization is here BTW: https://rbyers.github.io/eventRate.html","msgtype":"m.text"},"ts":1502901907000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: has there been lots of regressions because of 1 mousemove per animation frame?","msgtype":"m.text"},"ts":1502901950000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"... but PointerEvent is a MouseEvent so our hypothesis is that it's hopefully that much of a burden to ask existing MouseEvent-based sites to use this PointerEvent API for this without upgrading all their existing event code.","msgtype":"m.text"},"ts":1502901987000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"well, only some browsers support pointer events atm","msgtype":"m.text"},"ts":1502902044000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders what https://rbyers.github.io/eventRate.html is supposed to do","msgtype":"m.emote"},"ts":1502902052000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: seems jasnell found it","msgtype":"m.text"},"ts":1502902056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"loaded in Chrome and if I click I see a gray dot","msgtype":"m.text"},"ts":1502902067000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, I need to mousedown and move","msgtype":"m.text"},"ts":1502902134000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: No regressions that we're aware of (just checked with dtapuska).  It shipped in M60 and AFAIK not a single bug was filed due to it (we can trust our regression bisect to connect back to the bug): https://bugs.chromium.org/p/chromium/issues/detail?id=703344","msgtype":"m.text"},"ts":1502902171000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: oh, eventRate.html behaves very differently on Windows than on Linux Chrome.","msgtype":"m.text"},"ts":1502902473000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I see some brown dots on windows","msgtype":"m.text"},"ts":1502902485000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Yeah sorry there's no instructions on eventRate.  It draws larger dots for events, smaller ones for coalesced events.","msgtype":"m.text"},"ts":1502902486000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"I see no coalesced events on linux","msgtype":"m.text"},"ts":1502902510000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"... the larger blue dots should be consistent across platforms in Chrome 60+","msgtype":"m.text"},"ts":1502902520000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"oh, maybe if I move mouse very fast there are some","msgtype":"m.text"},"ts":1502902523000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Are you on Chrome 60+","msgtype":"m.text"},"ts":1502902527000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1502902535000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, I guess blue dots are consistent","msgtype":"m.text"},"ts":1502902546000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"A non-graphical version with more detail is here: https://rbyers.github.io/event-timing.html","msgtype":"m.text"},"ts":1502902549000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Right effectively the blue dots are the events whose timing is now controlled by the browser, the red dots are the raw coalescedEvents which are really up to the OS (and leak OS impl details).","msgtype":"m.text"},"ts":1502902583000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"smaug____: each os already has some vsync alignment sampling... depends on your mouse at least on linux","msgtype":"m.text"},"ts":1502902588000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: Windows doesn't do an vsync alignment, does it?","msgtype":"m.text"},"ts":1502902610000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: it depends on the hardware and a registry setting..  same with linux","msgtype":"m.text"},"ts":1502902724000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"ah, all the more reason for the timing exposed to the web by default to be standardized (with an explicit opt-out like getCoalescedEvents for the rare cases the site really wants it)","msgtype":"m.text"},"ts":1502902827000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"smaug____: So are you thinking you might like to switch to vsync-aligned mousemove before shipping PointerEvents in Firefox?","msgtype":"m.text"},"ts":1502903061000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"well, just thinking","msgtype":"m.text"},"ts":1502903096000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"... I don't have any fundamental objection to exposing new capabilities on MouseEvent or even TouchEvent, I just don't see much reason to prioritize it unless developers are telling us that's a blocker for them.  I know several in the PEWG would prefer we NOT expose new things on TouchEvent.","msgtype":"m.text"},"ts":1502903109000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"stone just wrote a patch to vsync-aligned mousemoves. Rather simple patch to coalesce, mostly reusing our wheel event coalescing","msgtype":"m.text"},"ts":1502903139000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"can't recall if Chrome coalesces wheel events","msgtype":"m.emote"},"ts":1502903157000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"rbyers: oh, yeah, I wouldn't want to add anything new to mouse events","msgtype":"m.text"},"ts":1502903178000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"... But I've been in a \"let's follow Apple without proactively investing ourselves\" there (as we did for stylus support: https://github.com/w3c/touch-events/pull/81)","msgtype":"m.text"},"ts":1502903202000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"smaug____: Yes we coalesce wheel but I forget if we vsync align them yet or not.  We should be.  dtapuska?","msgtype":"m.text"},"ts":1502903253000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"No coalesced mousemove events?","msgtype":"m.text"},"ts":1502903335000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Sorry pointermove?","msgtype":"m.text"},"ts":1502903341000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"ah, yeah, we don't sync wheel with vsync","msgtype":"m.text"},"ts":1502903371000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"there is the problem that too much stuff is happening around vsync time","msgtype":"m.text"},"ts":1502903390000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"If your OS is sending mouse movement at 60hz then it may not be noticeable unless you add some jank (which is what the UI at the bottom of eventRate is for).","msgtype":"m.text"},"ts":1502903393000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Interesting.  Our main problem has been that things happen at the wrong time causing redundant/useless work.  We want to kick of ALL the per-frame work at about rAF time.","msgtype":"m.text"},"ts":1502903444000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Of course there's sometimes too much per-frame work to fit into a single frame, but the beast answer there is to drop main-thread frames IMHO (not try to drop some of the things like wheel/scroll without also dropping rAF).  Of course compositor frames should generally continue to tick reliably at vsync.","msgtype":"m.text"},"ts":1502903625000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"TimothyGu: https://github.com/whatwg/html/pull/2932","msgtype":"m.text"},"ts":1502903655000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"rbyers: we rAF align mousewheels and touchmoves","msgtype":"m.text"},"ts":1502903760000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"smaug___: we flush any continuous events when we get a discrete event though... 'continuous' events are mousewheel, touchmove, mousemove","msgtype":"m.text"},"ts":1502903840000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"Would  a kind soul explain what's wrong with my PR so I can fix it? https://github.com/whatwg/html/pull/2932","msgtype":"m.text"},"ts":1502904723000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Never mind. Closed an h6 element with an h4 tag.","msgtype":"m.text"},"ts":1502905910000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"And couldn't parse the error log properly.","msgtype":"m.text"},"ts":1502905928000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yoav: is rel=prerender still a thing?","msgtype":"m.text"},"ts":1502912077000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not sure, tbh","msgtype":"m.text"},"ts":1502912132000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I know that the prerender implementation in Chromium got removed","msgtype":"m.text"},"ts":1502912167000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I know there are plans for a simpler implementation that's more mobile friendly","msgtype":"m.text"},"ts":1502912211000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"based on the no-state-prefetch project (at least that's what I last heard)","msgtype":"m.text"},"ts":1502912266000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Just added a few more standards to https://en.wikipedia.org/wiki/WHATWG#Specifications","msgtype":"m.text"},"ts":1502912927000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I wrote the full proposal here: https://news.ycombinator.com/item?id=14977363","msgtype":"m.text"},"ts":1502912957000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"The fun thing is that W3C does at least have a culture of testing unlike the IETF.","msgtype":"m.text"},"ts":1502913223000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Thanks for updating Wikipedia, Yuhong!","msgtype":"m.text"},"ts":1502914337000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Not sure about this supposed culture of testing; we were the ones who pioneered https://blog.whatwg.org/improving-interoperability and although some W3C groups have started to adopt that as well, it's not a requirement like it is at the WHATWG","msgtype":"m.text"},"ts":1502914384000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I am talking about the W3C candidate recommendation which the IETF don't have.","msgtype":"m.text"},"ts":1502914460000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"https://blog.whatwg.org/improving-interoperability","msgtype":"m.text"},"ts":1502914580000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"\"Two table-related interfaces were ignored by implementers for a decade, but when finally removed from the standard it turned out that WebKit had just added them. Sorry!\"","msgtype":"m.text"},"ts":1502914587000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"W3C require two or more implementations, not just one.","msgtype":"m.text"},"ts":1502914607000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"\"require\"","msgtype":"m.text"},"ts":1502914634000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We also do, as per recently-clarified working mode... but we don't count emacs and lynx as implementations, as some W3C specs have.","msgtype":"m.text"},"ts":1502914654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"botie: tell rniwa we appreciate him muddling through the spec for datatransfer/drag and drop and welcome suggestions for clearer wording to avoid others going through his pain in the future.","msgtype":"m.text"},"ts":1502914752000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1502914752000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Yes, I am referring to Adam Barth giving up on the IETF.","msgtype":"m.text"},"ts":1502914811000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"That being said, text mode browsers are still important. I wished that Ubuntu installed one by default for example.","msgtype":"m.text"},"ts":1502914848000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I assume that the HTML parser itself has not changed much in a long time, right?","msgtype":"m.text"},"ts":1502915239000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"It's updated whenever a new element is added, at least","msgtype":"m.text"},"ts":1502915286000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's changed a decent bit","msgtype":"m.text"},"ts":1502915309000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<template> springs to mind","msgtype":"m.text"},"ts":1502915322000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues?utf8=%E2%9C%93&q=label%3A%22topic%3A%20parser%22%20","msgtype":"m.text"},"ts":1502915335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Most of these including new elements should be easy for validators to deal with though","msgtype":"m.text"},"ts":1502915906000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"BTW, I am not saying that W3C is particularly good. I am suggesting a compromise.","msgtype":"m.text"},"ts":1502916041000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Especially since Jeff Jaffe has been discussing with Ian Hickson on that matter.","msgtype":"m.text"},"ts":1502916110000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I can tell you for a fact he has not been discussing that, at least not for years.","msgtype":"m.text"},"ts":1502916132000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yea, i am talking about years ago.","msgtype":"m.text"},"ts":1502916149000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I don't see your \"compromise\" improving the world in any way.","msgtype":"m.text"},"ts":1502916157000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, I mean in the sense of \"HTML 3.2 aims to capture recommended practice as of early '96\" for example.","msgtype":"m.text"},"ts":1502916332000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I think you'll find nobody in the WHATWG believes that's a useful thing to capture, and thus are not interested in a compromise that promotes that kind of outdated thinking.","msgtype":"m.text"},"ts":1502916514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yea, I am not saying that versioning HTML is particularly good either.","msgtype":"m.text"},"ts":1502916590000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I think we can all agree that what W3C is doing right now is far worse though.","msgtype":"m.text"},"ts":1502916729000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I think it's best to not pay attention to what they're doing and just work on making the actual spec better.","msgtype":"m.text"},"ts":1502916780000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We have a lot of \"good first bugs\" you could work on :) https://github.com/whatwg/html/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+bug%22","msgtype":"m.text"},"ts":1502916799000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And it is not like that we hasn't worked on it with W3C either.","msgtype":"m.text"},"ts":1502916824000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"And it is not like that we hasn't worked on it with W3C before either.","msgtype":"m.text"},"ts":1502916829000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I think the MIME type registry still lists W3C for text/html for example.","msgtype":"m.text"},"ts":1502917072000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Of course, the full spec was probably never a good fit which was probably where the 2022 date came from.","msgtype":"m.text"},"ts":1502917579000,"senderName":"Yuhong","senderId":"Yuhong@irc"}
]