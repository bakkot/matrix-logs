[
{"content":{"body":"(i am on a plane and shall now respond to the last few days of comments. apologies for not reading the current state of the channel as i do this)","msgtype":"m.text"},"ts":1398136574000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: json doesn't prevent injection attacks any more than xml prevents injection attacks","msgtype":"m.text"},"ts":1398136578000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: my understanding is that there's no rule about not referring to whatwg specs; if you are hearing differently, ping tantek.","msgtype":"m.text"},"ts":1398136602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: (the w3c references plenty of specs that don't have patent policies, e.g. anything from the IETF)","msgtype":"m.text"},"ts":1398136622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's one less place to screw that up ...","msgtype":"m.text"},"ts":1398136628000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"MikeSmith: yeah, i'm aware of thatcher's opinions on consensus. One of the few things she was quite right about. ;-)","msgtype":"m.text"},"ts":1398136686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cwilso: the whatwg has the same fence as the w3c (no fence). well, the w3c has a pretend fence, but it has the same effect.","msgtype":"m.text"},"ts":1398137185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cwilso: (the most obvious proof of which is the way the w3c keeps arbitrarily forking our specs)","msgtype":"m.text"},"ts":1398137222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: not really. I'm saying people should write their parsers at the unicode level, you're saying they should write them at the JSON level. It's one fewer layer to go wrong.","msgtype":"m.text"},"ts":1398137450000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok closing laptop now, going in for landing.","msgtype":"m.text"},"ts":1398137532000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SimonSapin: because of <html>foo<html foo> you need to \"buffer\" the whole document","msgtype":"m.text"},"ts":1398144448000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: what is Windows code page 29001 x-europa?","msgtype":"m.text"},"ts":1398162054000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"today I learned: LDAP uses T.61","msgtype":"m.text"},"ts":1398162072000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"at least in theory","msgtype":"m.text"},"ts":1398162081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also: Mozilla LDAP code doesn't used the Mozilla T.61 converter","msgtype":"m.text"},"ts":1398162101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I don't know","msgtype":"m.text"},"ts":1398162243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: seems it's \"Europa 3\" but I've no idea what that is","msgtype":"m.text"},"ts":1398162350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_, hey, did you see https://bugzilla.mozilla.org/show_bug.cgi?id=998298 ?","msgtype":"m.text"},"ts":1398163317000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah. what about it?","msgtype":"m.text"},"ts":1398163355000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I was hoping you'd suddenly feel like fixing the test :)","msgtype":"m.text"},"ts":1398163392000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh. ok. not right now but i can put it on my list","msgtype":"m.text"},"ts":1398163611000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"didn't gecko drop microdata?","msgtype":"m.text"},"ts":1398163671000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"seems not","msgtype":"m.text"},"ts":1398163825000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Ms2ger: i'll probably not spend time on microdata tests until the api is implemented in blink again","msgtype":"m.text"},"ts":1398164000000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Alright, thanks","msgtype":"m.text"},"ts":1398164056000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: the way the service worker specification is written at the moment reads like a tutorial","msgtype":"m.text"},"ts":1398164879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g. \"After successful installation and just prior to receiving functional events (e.g., fetch), the activate event is dispatched.\"","msgtype":"m.text"},"ts":1398164893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I didn't write that line, fwiw I think it's wrong","msgtype":"m.text"},"ts":1398165601000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it seems also somewhat odd that there's an \"Algorithms\" section","msgtype":"m.text"},"ts":1398165619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there also a \"Data Structures\" one?","msgtype":"m.text"},"ts":1398165697000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: probably because those were developed separately. I guess they should be rolled into their relevant methods","msgtype":"m.text"},"ts":1398165706000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: IDL of FetchEvent also seems somewhat botched; e.g. you can reply with an OpaqueResponse, so respondWith should take an AbstractResponse","msgtype":"m.text"},"ts":1398165747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, I assume not \"T-61 Euthanasia Solution (Canada) for Animal Use\"","msgtype":"m.text"},"ts":1398165818000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: will fix that now","msgtype":"m.text"},"ts":1398165854000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: filed https://github.com/slightlyoff/ServiceWorker/issues/242","msgtype":"m.text"},"ts":1398166198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: url spec has no limit on the port number?","msgtype":"m.text"},"ts":1398166792000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: no","msgtype":"m.text"},"ts":1398166800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why not?","msgtype":"m.text"},"ts":1398166805000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: seemed arbitrary","msgtype":"m.text"},"ts":1398166840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, the current service worker specification seems kind of bad :-(","msgtype":"m.text"},"ts":1398166980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where does the url spec make the windows drive letter quirk invalid?","msgtype":"m.text"},"ts":1398167999000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"JakeA: what does waitUntil() do?","msgtype":"m.text"},"ts":1398168001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: does it set any event flags?","msgtype":"m.text"},"ts":1398168017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is http://www.w3.org/TR/media-frags/ compatible with HTML5? it allows spaces in id's","msgtype":"m.text"},"ts":1398168101000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"KevinMarks_: does it not escape them?","msgtype":"m.text"},"ts":1398168141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does, but how can they match ids?","msgtype":"m.text"},"ts":1398168165000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"KevinMarks_: could you give a more specific pointer maybe?","msgtype":"m.text"},"ts":1398168193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's slightly different per event. In install, the supplied promises define the length & success of the installation phase of the lifecycle","msgtype":"m.text"},"ts":1398168202000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: In activate, the supplied promises define only the length of the activation phase","msgtype":"m.text"},"ts":1398168232000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http://www.w3.org/TR/media-frags/#general-structure has http://www.example.com/example.ogv#id=Cap%C3%ADtulo%202","msgtype":"m.text"},"ts":1398168244000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"JakeA: what about pagereload?","msgtype":"m.text"},"ts":1398168250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"id this dimension denotes a named temporal fragment within the original media, such as \"chapter 2\", and can be seen as a convenient way of specifying a temporal fragment.","msgtype":"m.text"},"ts":1398168288000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"KevinMarks_: that's not an HTML ID","msgtype":"m.text"},"ts":1398168289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"KevinMarks_: or DOM ID","msgtype":"m.text"},"ts":1398168293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, that's what I thought.","msgtype":"m.text"},"ts":1398168303000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"annevk: There it delays the reload for the length of the promises","msgtype":"m.text"},"ts":1398168335000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so it's not a constraint on fragmentions within HTML","msgtype":"m.text"},"ts":1398168346000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"JakeA: what if the promise rejects?","msgtype":"m.text"},"ts":1398168450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: anyway, it never sets the canceled flag I guess?","msgtype":"m.text"},"ts":1398168473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: seems kind of weird this mix between promises and events","msgtype":"m.text"},"ts":1398168495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: A rejection aborts the reloadAll process","msgtype":"m.text"},"ts":1398168595000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hmm okay, so it somewhat augments the event dispatch process, I guess that's sort of within the line of what's okay, but somewhat weird","msgtype":"m.text"},"ts":1398168791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: actually, looking at the algorithms, a lot of them don't seem to talk about queueing events and probably should","msgtype":"m.text"},"ts":1398170080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you can't just dispatch events at a set of documents","msgtype":"m.text"},"ts":1398170099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and usually we don't talk about things like \"serviceWorkerRegistration.currentWorker\" as .currentWorker can be changed by script","msgtype":"m.text"},"ts":1398170140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"queuing events\" - is that to make it clear it's an async operation?","msgtype":"m.text"},"ts":1398170244000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes and to make it clear when it happens relative to other asynchronous tasks","msgtype":"m.text"},"ts":1398170267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: serviceWorkerRegistration is a private object, it's only used within the spec","msgtype":"m.text"},"ts":1398170273000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: see HTML's event loop definition","msgtype":"m.text"},"ts":1398170275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is there precedent for firing events across a set of documents then doing something with the result (eg, if some or all defaultPrevented)?","msgtype":"m.text"},"ts":1398171289000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not really, especially not with waitUntil weirdness","msgtype":"m.text"},"ts":1398171334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you'd have to queue tasks that dispatch the events, check the return value, and report via some callback","msgtype":"m.text"},"ts":1398171362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and then I guess you'd say \"wait until all have reported back\" in some kind of language that makes Domenic_ happy","msgtype":"m.text"},"ts":1398171401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: figured the reloadAll stuff would be difficult. Cheers.","msgtype":"m.text"},"ts":1398171418000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: this spec needs a lot more infrastructure around it","msgtype":"m.text"},"ts":1398171440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: this is also true for a bunch of the other events, though they're less involved I suppose","msgtype":"m.text"},"ts":1398171464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but all the across boundary stuff is hard, and service workers is full of it","msgtype":"m.text"},"ts":1398171486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"worth it though, at least I hope","msgtype":"m.text"},"ts":1398171537000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh yeah, it's just a bit annoying that the current spec doesn't really seem to grasp what it's doing","msgtype":"m.text"},"ts":1398171571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, next iteration needs to remove the vagueness","msgtype":"m.text"},"ts":1398171691000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Btw, the w3 guys are wanting to drop the outline algorithm from html5 but keep sectioning elements https://www.w3.org/Bugs/Public/show_bug.cgi?id=25003","msgtype":"m.text"},"ts":1398173039000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"meaning adding it back in later breaks backwards compatibility","msgtype":"m.text"},"ts":1398173062000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: wtf","msgtype":"m.text"},"ts":1398173320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know right","msgtype":"m.text"},"ts":1398173338000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"W3C HTML is crazy town","msgtype":"m.text"},"ts":1398173339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: incorrect - not w3 guys dropping outline algorithm, as you know - implementers who have commented are borking at implementing  acc layer implementation","msgtype":"m.text"},"ts":1398173356000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JakeA: spreading misinfo not helpful","msgtype":"m.text"},"ts":1398173395000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"The acc layer is where the outline is important","msgtype":"m.text"},"ts":1398173443000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: convince the implementers","msgtype":"m.text"},"ts":1398173471000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"you have reps from firefox/chrome/webkit on that bug","msgtype":"m.text"},"ts":1398173499000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"and I'm responding to that bug","msgtype":"m.text"},"ts":1398173528000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and also filing issues with Chrome & looping in the other vendors","msgtype":"m.text"},"ts":1398173547000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so why you blowing smoke then?","msgtype":"m.text"},"ts":1398173590000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"singing to choir about the \"W3C HTML is crazy town\"","msgtype":"m.text"},"ts":1398173655000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Because the w3 are creating a situation where adopting the outline at the acc layer becomes a backwards incompatible change","msgtype":"m.text"},"ts":1398173672000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how so?","msgtype":"m.text"},"ts":1398173693000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Because you're keeping sectioning elements, but dropping the outline from acc. They were introduced at the same time to avoid that.","msgtype":"m.text"},"ts":1398173700000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Because you're saying that section > h1 should be heading level 1. A later introduction of outlining to the acc layer means it becomes heading level 2","msgtype":"m.text"},"ts":1398173741000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the outline is not implemented in acc layer all that is being discussed is reflecting what is implemented","msgtype":"m.text"},"ts":1398173754000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"that is what is,  not asking to implement anything","msgtype":"m.text"},"ts":1398173851000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"If you don't want outline, drop <section> & friends too","msgtype":"m.text"},"ts":1398173957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Pretty much the sole reason they are useful is influencing heading levels","msgtype":"m.text"},"ts":1398173980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, but if it's introduced to \"5.1\", that makes 5.1 backwards incompatible with 5.0. To avoid that you need to drop all sectioning elements","msgtype":"m.text"},"ts":1398173982000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: its not me that does or doesn't want it its the implementers","msgtype":"m.text"},"ts":1398174151000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Outline is not just for accessibility, it's also for new selectors","msgtype":"m.text"},"ts":1398174196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And being able to organize content better","msgtype":"m.text"},"ts":1398174215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What Marco Zehe says in that bug is not true for all of Mozilla","msgtype":"m.text"},"ts":1398174255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and as I have said the outline is not being dropped, we are discussing the modding of the requirement that has not been implemnted","msgtype":"m.text"},"ts":1398174308000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"annevk: sure nobody speaks for all mozilla do they? but we are talking about acc related stuff so you duke it out with the acc guys if you have an issue with what they are saying","msgtype":"m.text"},"ts":1398174356000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"annevk: I think what SteveF is suggesting is that the outline stuff would stay in the spec, but that a11y should only use the heading number, which makes it inconsistent","msgtype":"m.text"},"ts":1398174359000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Have browser vendors given any indication on when they'd implement this, if ever?","msgtype":"m.text"},"ts":1398174391000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"wilhelm: I would guess it's generally low priority","msgtype":"m.text"},"ts":1398174409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No one's filed a ticket for it, until now","msgtype":"m.text"},"ts":1398174421000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://code.google.com/p/chromium/issues/detail?id=365070#c2","msgtype":"m.text"},"ts":1398174436000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I am saying that what every browser does now is implement acc as I have indicated in that bug = current interop implementations","msgtype":"m.text"},"ts":1398174496000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: yes, you have demonstrated nobody implements <section>; job well done","msgtype":"m.text"},"ts":1398174536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: your solution however makes <section> unusable forever","msgtype":"m.text"},"ts":1398174562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is why we dub W3C HTML \"crazy town\"","msgtype":"m.text"},"ts":1398174568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or I do, anyway","msgtype":"m.text"},"ts":1398174575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: my solution?","msgtype":"m.text"},"ts":1398174579000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Dropping the acc requirement, meaning that outline isn't applied, meaning that section isn't applied","msgtype":"m.text"},"ts":1398174609000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I hit the \"all headings are the same level, WTF\" issue when testing with screenreader users recently. Discouraging using <section>+<h1> is sensible until the outline algoirthm is actually implemented, but dropping just half of it in the spec sounds like it will just cause more confusion.","msgtype":"m.text"},"ts":1398174666000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"wilhelm: A small polyfil that sets role=\"heading\" and aria-level will fix it in browsers & ATs that support those things","msgtype":"m.text"},"ts":1398174730000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wilhelm: it'll cause confusion, but worse it causes backwards incompatibility. Conformant \"HTML 5.0\" sites will break in browsers+AT that support \"HTML 5.1\" and vice versa","msgtype":"m.text"},"ts":1398174792000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I hadn't thought of polyfilling that particular issue. That's a good idea.","msgtype":"m.text"},"ts":1398174859000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"JakeA: using H1-H6 old style in conjunction with sections is fully backward compatible","msgtype":"m.text"},"ts":1398174881000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JakeA: The change wouldn't change the HTML5 CR along with HTML5.1?","msgtype":"m.text"},"ts":1398174896000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: telling devs to use h1 is not","msgtype":"m.text"},"ts":1398174899000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"*The proposal","msgtype":"m.text"},"ts":1398174900000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: should .client and .purpose be on Request?","msgtype":"m.text"},"ts":1398174931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webben: still results in broken sites","msgtype":"m.text"},"ts":1398174967000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Is <section><h1> to mean something other than heading level 1 in common use today?","msgtype":"m.text"},"ts":1398174995000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: how so?","msgtype":"m.text"},"ts":1398175000000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"annevk: I think the intention was to separate the request from the situation that generated it","msgtype":"m.text"},"ts":1398175082000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: As in, a fetch with purpose \"image\" may have added extra things to the accept header of the request","msgtype":"m.text"},"ts":1398175110000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"webben: the proposal is to mod HTML5 to reflect current implementations leaving 5.1 to reflect desired implementation","msgtype":"m.text"},"ts":1398175118000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JakeA: a fetch from origin will have done so too","msgtype":"m.text"},"ts":1398175128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: This document would be different in 5.0 and 5.1: <section><h1/> <section><h1/></section></section>","msgtype":"m.text"},"ts":1398175132000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"webben: yes","msgtype":"m.text"},"ts":1398175149000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you want to really separate them, we'd have to trim Request more","msgtype":"m.text"},"ts":1398175162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Are there any stats around that?","msgtype":"m.text"},"ts":1398175166000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: which may be worth doing","msgtype":"m.text"},"ts":1398175168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but will be complex","msgtype":"m.text"},"ts":1398175194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webben: Around use & misuse?","msgtype":"m.text"},"ts":1398175198000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I think it comes down to what should go into a cache and what shouldn't","msgtype":"m.text"},"ts":1398175233000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Around use of <section><h1> to mean something other than heading level one in the wild.","msgtype":"m.text"},"ts":1398175236000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: I don't. I'm sure there are misuses, just like any element.","msgtype":"m.text"},"ts":1398175269000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: right, what hits the network and what doesn't","msgtype":"m.text"},"ts":1398175289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"willhelm: then the answer is to define requirement as \"no role\" in 5.0 which means implementers can implement as they want","msgtype":"m.text"},"ts":1398175290000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JakeA: I'm not talking about misuses?","msgtype":"m.text"},"ts":1398175290000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: might be worth doing long term","msgtype":"m.text"},"ts":1398175311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"willhelm: but doesn't cause the break - thanks!","msgtype":"m.text"},"ts":1398175332000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"annevk: Doing what?","msgtype":"m.text"},"ts":1398175334000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think in the Fetch Standard I'll keep them unified in the \"request concept\" for now","msgtype":"m.text"},"ts":1398175334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Per CR and Living Standard, <section><h1> can mean something other than heading level one. I'm wondering how widespread that actually is in the corpus.","msgtype":"m.text"},"ts":1398175334000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: trimming request further and having a separate bag of bits that instructs the fetch algorithm to do various things","msgtype":"m.text"},"ts":1398175395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webben: Straw poll in the office & most of us are using section to affect outline on our projects, but I realise that's not good evidence","msgtype":"m.text"},"ts":1398175398000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: e.g. if 0.0001% of pages that use <section><h1> use it to mean something other than heading level one, then always interpreting h1 as heading level one may result in better understanding of the corpus generally.","msgtype":"m.text"},"ts":1398175441000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: My gut feeling from the projects I've worked on says it's widespread, but real data would be nice.","msgtype":"m.text"},"ts":1398175444000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"annevk: Ahh yes, agreed. The request does need some private link to the requesting element for prioritisation etc. That link should be removed when it goes into caches.","msgtype":"m.text"},"ts":1398175450000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you need a link to the source for CSP, .client, referrer policy","msgtype":"m.text"},"ts":1398175488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wilhelm: What would you look for? Number of sites that use <section> or number of sites that use <section> correctly?","msgtype":"m.text"},"ts":1398175493000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I remember in the earlier days of HTML5's evolution, there were quite a lot of attempts to look at usage in the wild and redefine the semantics accordingly on the basis that it led to better understanding of the corpus as a whole.","msgtype":"m.text"},"ts":1398175502000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: You'd have to look for sites that use section to nest heading levels. It might be possible to approach that statistically (e.g. look for unusual nestings) but to be sure you'd probably have to do a qualitative inspection.","msgtype":"m.text"},"ts":1398175570000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: agreed","msgtype":"m.text"},"ts":1398175589000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(We had to do similar inspections for e.g. the summary attribute.)","msgtype":"m.text"},"ts":1398175609000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: Finding sites containing <section> and more than one <h1> would give an indication.","msgtype":"m.text"},"ts":1398175667000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"willhelm: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25003#c25","msgtype":"m.text"},"ts":1398175675000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"wilhelm: Mmm. Multiple h1s is not that uncommon even without <section>","msgtype":"m.text"},"ts":1398175728000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"wilhelm: There was a long-running markup debate about whether pages should use h1 for a title for the page or multiple h1s for different sections on the same page.","msgtype":"m.text"},"ts":1398175767000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: btw, what about renaming .purpose to .context?","msgtype":"m.text"},"ts":1398175808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: I have not used that particular ARIA role before. Would that mean that all heading magic would disappear from the <section><h1> element?","msgtype":"m.text"},"ts":1398175865000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"annevk: Not sure it's better, but not against it. Could it get confused with browsing context?","msgtype":"m.text"},"ts":1398175959000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's not really a purpose is my main problem here","msgtype":"m.text"},"ts":1398176045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"origin\"! No, wait…","msgtype":"m.text"},"ts":1398176108000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Yeah, fair enough, context is better","msgtype":"m.text"},"ts":1398176139000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"willhelm: magic where?","msgtype":"m.text"},"ts":1398176140000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"we decided to call browsing context a client","msgtype":"m.text"},"ts":1398176145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, will file","msgtype":"m.text"},"ts":1398176150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: I don't fully understand the implications of what you suggest in comment 25. (c:","msgtype":"m.text"},"ts":1398176310000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"willhelm: currently there is an implementation requirement on browsers to map hx to outline depth - this is couched in terms of ARIA roles/properties which have mappings to platform acc APIs","msgtype":"m.text"},"ts":1398176430000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JakeA: looking at http://fetch.spec.whatwg.org/#requests it seems method/url/headers/body are essential, everything else is parameters","msgtype":"m.text"},"ts":1398176465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I can look into rephrasing things in that way, although it might make Fetch even harder to use from other specifications...","msgtype":"m.text"},"ts":1398176496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1398176499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"willhelm: none of the browsers implement this they all implement soemthing else, as you pointed out, requiring they implement something esle in 5.0 and changing in 5.1 causes issue","msgtype":"m.text"},"ts":1398176510000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"So far I'm following. (c:","msgtype":"m.text"},"ts":1398176588000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"willhelm: removing strict requirement from 5.0 , as its is not going to happen in 5.0 rec timeframe, but having it in 5.1 resolves issue","msgtype":"m.text"},"ts":1398176674000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: So what exactly should browsers do right now to be compliant? \"Whatever they want\"?","msgtype":"m.text"},"ts":1398176745000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"willhelm: the interop implementation of heading semantics is currently h1= heading level 1, h2 = heading level 2 etc","msgtype":"m.text"},"ts":1398176819000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"willhelm: which will not chnage until the browsers decide to implement the new requriements","msgtype":"m.text"},"ts":1398176883000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"annevk: hmm, maybe there's a better way. What do you need on the request obj to keep things easy?","msgtype":"m.text"},"ts":1398176924000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"SteveF: But then we're back to <section><h1> yielding two different outlines depending on whether a UA follows 5.0 or 5.1. Or do I misunderstand?","msgtype":"m.text"},"ts":1398177070000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"wilhelm: nope, that's exactly the problem","msgtype":"m.text"},"ts":1398177091000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"willhelm: the problem exists whatever the spec says the problem is in the implementations","msgtype":"m.text"},"ts":1398177118000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JakeA: I dunno, I want to move this purpose/context thing into http://fetch.spec.whatwg.org/ somehow","msgtype":"m.text"},"ts":1398177126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I also need the \"client\" concept there","msgtype":"m.text"},"ts":1398177135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: just wondering how we want to layer the whole stack","msgtype":"m.text"},"ts":1398177154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Maybe we can put them there & drop them when they go into the cache","msgtype":"m.text"},"ts":1398177181000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I suppose we could also expose the request concept differently in the API","msgtype":"m.text"},"ts":1398177226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: there's a bit of a question too as to how this should all work with fetch()","msgtype":"m.text"},"ts":1398177244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SteveF: The problem is when a spec breaks a compliant implementation, which is what you're talking about. Right now, non-compliant implementations are broken,","msgtype":"m.text"},"ts":1398177251000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"SteveF: There doesn't _have_ to be an inconsistency in the versions of the spec. For instance, 5.0 could require <section> to be used so that <hX> elements are in order if <section> were not present.","msgtype":"m.text"},"ts":1398177285000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"JakeA: what I have proposed after discussion does not break","msgtype":"m.text"},"ts":1398177302000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: You'll have two versions of the spec that disagree with each other. You can't be compliant both with 5.0 and 5.1.","msgtype":"m.text"},"ts":1398177313000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"SteveF: Or (I suppose) require aria-heading-level to be added where hX elements are nested \"incorrectly\".","msgtype":"m.text"},"ts":1398177355000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"willhelm: yes you can","msgtype":"m.text"},"ts":1398177362000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"i agree before you couldn't and thanks for pitning that out","msgtype":"m.text"},"ts":1398177385000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"pointing","msgtype":"m.text"},"ts":1398177390000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"wilhelm: I think you mena it is possible (for a document) to comply with 5.0 and not with 5.1. (One can always use <section><h1> such that it does not introduce conflicts of interpretation, i.e. redundantly.)","msgtype":"m.text"},"ts":1398177427000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"*you mean","msgtype":"m.text"},"ts":1398177439000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hmm, Chrome wants to ship HTML imports","msgtype":"m.text"},"ts":1398177555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let's go to LC","msgtype":"m.text"},"ts":1398177586000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Wonder what happened to the render blocking stuff. slightlyoff?","msgtype":"m.text"},"ts":1398177587000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Without any of the features ES modules have, such as scoping of names and such","msgtype":"m.text"},"ts":1398177589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the latest I heard was that you specify async","msgtype":"m.text"},"ts":1398177604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sadface","msgtype":"m.text"},"ts":1398177621000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We shouldn't be introducing new render-blocking features","msgtype":"m.text"},"ts":1398177639000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Blog about it","msgtype":"m.text"},"ts":1398177697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Already made a ton of noise about it internally. Maybe slightlyoff has more info.","msgtype":"m.text"},"ts":1398177734000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1398180379000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"morning dglazkov","msgtype":"m.text"},"ts":1398180400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hixie: the incorporation of whatwg output into w3c work does put a ladder across their fence, yes.  We could have a more nuanced discussion of that dynamic; but the point of the W3C PP is getting major patent holders to mutually agree to x-license.","msgtype":"m.text"},"ts":1398180411000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"hixie: s/their/W3C's","msgtype":"m.text"},"ts":1398180422000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"good morning dglazkov!","msgtype":"m.text"},"ts":1398180436000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"hixie: last I checked, whatwg is still wild west wrt ip.","msgtype":"m.text"},"ts":1398180484000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"cwilso: well, the whatwg is a cg, it's using the cg model of regular FSAs. We just haven't actually done any, much like the w3c hasn't done any RECs. :-)","msgtype":"m.text"},"ts":1398180529000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cwilso: but i think you vastly overestimate the benefits of the patent policy.","msgtype":"m.text"},"ts":1398180567000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: well, I'd say the whatwg uses a cg as one input, not \"it does its work under the umbrella of a cg\".  But perhaps I'm mistaken.","msgtype":"m.text"},"ts":1398180605000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"cwilso: a CG's venue can be anywhere","msgtype":"m.text"},"ts":1398180643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hixie: if you think I think a patent policy is some giant protective umbrella, then I can understand why you'd think I vastly overestimate its benefits.","msgtype":"m.text"},"ts":1398180645000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"cwilso: ours is whatwg⊙wo and this IRC channel, roughly","msgtype":"m.text"},"ts":1398180655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed.  Has everyone in whatwg@ and this irc channel signed up to the CG?","msgtype":"m.text"},"ts":1398180679000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"the whatwg is a w3c cg, it does all the work under the cg umbrella","msgtype":"m.text"},"ts":1398180788000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: but I'm not an idiot.  Well, not about ip.  there is nothing that can protect against someone else owning IP and pressing its advantage (e.g. EOLAS); the only useful goal is to get the major ip holders to participate in a venue where they've been kept \"honest\".","msgtype":"m.text"},"ts":1398180790000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"right now all the \"major ip holders\" participate both in the cg and the wg","msgtype":"m.text"},"ts":1398180819000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1398180829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: and that's why it's not a complete disaster.","msgtype":"m.text"},"ts":1398180838000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"well, it's why it _is_ a disaster, but for other reasons","msgtype":"m.text"},"ts":1398180850000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ha!","msgtype":"m.text"},"ts":1398180857000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"afk","msgtype":"m.emote"},"ts":1398180871000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"anyway. i don't really understand what threat model you're concerned about which the REC process deals with but the FSA process doesn't.","msgtype":"m.text"},"ts":1398180929000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: for the algorithms you need to clarify what kind of exceptions you are rejecting with","msgtype":"m.text"},"ts":1398181320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and you want to reference terms such as \"document url\" somehow","msgtype":"m.text"},"ts":1398181334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and link to the URL parser when you parse URLs (rather than just say \"resolved\" which doesn't mean much these days)","msgtype":"m.text"},"ts":1398181355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if you want I can go through the algorithms at one point and file issues","msgtype":"m.text"},"ts":1398181376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or we can keep doing this","msgtype":"m.text"},"ts":1398181385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Mind chatting about element-tree vs DOM in real-time?  I'm on the fence.","msgtype":"m.text"},"ts":1398181587000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what's element-tree? that sounds awesome","msgtype":"m.text"},"ts":1398181605000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: can do","msgtype":"m.text"},"ts":1398181609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: The abstraction I currently have in Selectors of the document tree. ^_^","msgtype":"m.text"},"ts":1398181617000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Cool.  So your arguments are definitely pulling me towards just using DOM.  But I'm not 100% convinced yet.  Mainly it's the idea that there is still info not present in the DOM that Selectors uses, like pseudo-elements.  You make some argument about PEs that I don't quite understand in that last email.","msgtype":"m.text"},"ts":1398181671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it's reasonable (and probably easier) to consider that PEs are always in the tree.","msgtype":"m.text"},"ts":1398181686000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: issues would be great. I thought I'd added exceptions to the rejects, guess I missed some","msgtype":"m.text"},"ts":1398181708000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you did, but what is \"NetworkError\"?","msgtype":"m.text"},"ts":1398181725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so your argument is that ::before and ::after are in the DOM?","msgtype":"m.text"},"ts":1398181752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought I found that in the dom spec","msgtype":"m.text"},"ts":1398181753000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Yeah.","msgtype":"m.text"},"ts":1398181764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I always thought of them as to be in the box tree","msgtype":"m.text"},"ts":1398181765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Nah, properties get first applied to elements, so they're in the element tree.","msgtype":"m.text"},"ts":1398181787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Boxes get generated from elements, based on 'display' and other things.","msgtype":"m.text"},"ts":1398181791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That is, a ::before (pseudo-) element is set to display:block and content: \"foo\", it generates a block box that forgets about where it came from.","msgtype":"m.text"},"ts":1398181830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: if you reuse those, you also need to reuse the \"throw\" glue as otherwise it isn't clear what object is being used","msgtype":"m.text"},"ts":1398181830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: currently there's nothing that requires pseudo-elements to be in the node tree","msgtype":"m.text"},"ts":1398181872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: an implementation could only have them in the box tree, and I think Firefox might do that","msgtype":"m.text"},"ts":1398181885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, nothing *requires* them, but it makes the overall model simpler.","msgtype":"m.text"},"ts":1398181891000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: not if that model is not defined ^_^","msgtype":"m.text"},"ts":1398181918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I doubt FF has pseudo-elements actually in the box tree.  It might only *generate* boxes for PEs (and not actually keep anything representing them in the tree that selectors are run over), which is fine.","msgtype":"m.text"},"ts":1398181942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Text selection and such might require them to be I suppose. Once we really nail that it'll become observable one way or another.)","msgtype":"m.text"},"ts":1398181952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Defining that model is what I'm trying to do (sorta gradually, but mostly I'm holding off until I resolve your issues).","msgtype":"m.text"},"ts":1398181955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you think it's okay to say that Selectors operates on the DOM, augmented with X and Y concepts, I think I can work with that.","msgtype":"m.text"},"ts":1398181996000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I think that would make sense. You'd define that elements have an additional ::after and ::before slot, and that these get returned when you use a pseudo-element","msgtype":"m.text"},"ts":1398182047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then the algorithm that takes a style sheet and a node tree, also looks at element's their ::after and ::before slot","msgtype":"m.text"},"ts":1398182073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(+ multiple other pseudo-element slots)","msgtype":"m.text"},"ts":1398182088000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, one complication.  Some pseudo-elements can contain real elements.","msgtype":"m.text"},"ts":1398182108000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, it could be generic I suppose","msgtype":"m.text"},"ts":1398182110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Such as ::shadow containing the contents of the shadow tree.","msgtype":"m.text"},"ts":1398182117000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does this disturb anything?","msgtype":"m.text"},"ts":1398182126000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I would expect that selector to be split and separately matched. Is that correct?","msgtype":"m.text"},"ts":1398182154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Depends on how you work it internally.  That's possible, sure.","msgtype":"m.text"},"ts":1398182179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foo::shadow bar just means \"find a foo element in your current context, find its shadow root, then find a bar descendant\".","msgtype":"m.text"},"ts":1398182216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can interpret it similar to combinators, rather than as splitting the selector up, if you want.","msgtype":"m.text"},"ts":1398182235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Should that not be a combinator then? Or is is ::shadow also a box of sorts?","msgtype":"m.text"},"ts":1398182260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I think that works, you just have to define the distinct trees that need to be matched upon","msgtype":"m.text"},"ts":1398182291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But if that's not a combinator that also makes it complicated for what we want .query() to do when passed ::shadow vs what we want when you pass ::before","msgtype":"m.text"},"ts":1398182337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"::shadow matches the shadow root.  Currently that's indistinguishable from a combinator, but it's possible for a specialized API to actually *return* the ShadowRoot object from a selector like \"foo::shadow\", for example.","msgtype":"m.text"},"ts":1398182353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nah, the \"match a selector\" algo already handles pseudos.  You just have to specify what pseudos, if any, you want to be allowed to be returned by it.","msgtype":"m.text"},"ts":1398182385000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Whoa, if we want that then that should be raised quickly, currently .query only returns elements","msgtype":"m.text"},"ts":1398182392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I dunno if it's useful! But it is possible.","msgtype":"m.text"},"ts":1398182411000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Similarly, ::content might be able to return something, though I don't think we have a specialized object for it yet.)","msgtype":"m.text"},"ts":1398182440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: How quickly do you think we need to define a PseudoElement interface if we want .query() to be able to return it?","msgtype":"m.text"},"ts":1398182468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Let's just ship it","msgtype":"m.text"},"ts":1398182495000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: dunno, twelve months or so","msgtype":"m.text"},"ts":1398182543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: we'd also need a new name for \"Elements\"","msgtype":"m.text"},"ts":1398182551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, that's reasonable.","msgtype":"m.text"},"ts":1398182552000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What do you mean?","msgtype":"m.text"},"ts":1398182559000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"Nodes\" might work","msgtype":"m.text"},"ts":1398182565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: queryAll() returns an Array-subclass named Elements","msgtype":"m.text"},"ts":1398182583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh!","msgtype":"m.text"},"ts":1398182588000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: PsuedoElement is arguably an Element, but ShadowRoot is not","msgtype":"m.text"},"ts":1398182606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, maybe.  I mean, I'm not fussed about something called Elements containing instance of both Element and PseudoElement.","msgtype":"m.text"},"ts":1398182615000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, true (though maybe it can WebIDL-implement PseudoElement).","msgtype":"m.text"},"ts":1398182633000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Interesting idea","msgtype":"m.text"},"ts":1398182647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, should be fine then I suppose if we can make that work","msgtype":"m.text"},"ts":1398182665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I think the PseudoElement generic interface will probably contain only two fields: name and originatingElement.)","msgtype":"m.text"},"ts":1398182713000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Individual pseudos can subclass for more info, of course.)","msgtype":"m.text"},"ts":1398182742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Oh, and .style, obviously.)","msgtype":"m.text"},"ts":1398182748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, so plan of record is:","msgtype":"m.text"},"ts":1398182778000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Rephrase Selectors to be based directly on DOM, with a note about how non-DOM languages can map to a DOM.","msgtype":"m.text"},"ts":1398182808000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For the purpose of Selectors, augment DOM with arbitrary pseudo-elements as well.","msgtype":"m.text"},"ts":1398182830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And, separately, define a PseudoElement interface people are willing to implement (in some other spec).","msgtype":"m.text"},"ts":1398182852000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sounds about right. Consider naming originatingElement ownerElement instead","msgtype":"m.text"},"ts":1398182914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: \"something called Elements containing instance of both Element and PseudoElement\"","msgtype":"m.text"},"ts":1398182965000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Ah, that works.","msgtype":"m.text"},"ts":1398182968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sounds a bit like the region interface, defined to be either an element or pseudoelement","msgtype":"m.text"},"ts":1398182987000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"might want to look at the discussion of why we got pushback on that","msgtype":"m.text"},"ts":1398183000000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"\"originating element\" is just the language fantasai and I came up with, as a replacement for Hixie's \"superior parent\".","msgtype":"m.text"},"ts":1398183002000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if this tree is going to be defined better than the box tree","msgtype":"m.emote"},"ts":1398183016000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: DOM is indeed better defined than the box tree, yes.","msgtype":"m.text"},"ts":1398183085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And I'm still on the hook for the box tree - it goes in my spec.)","msgtype":"m.text"},"ts":1398183094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"astearns: Yeah, I plan to basically reopen that discussion.","msgtype":"m.text"},"ts":1398183110000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I meant DOM+pseudos","msgtype":"m.text"},"ts":1398183122000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: ok, just wanted to make sure you weren't blundering blindly into it :)","msgtype":"m.text"},"ts":1398183133000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Ms2ger: It's defined as \"DOM, but with additional pseudos\". ^_^","msgtype":"m.text"},"ts":1398183142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Not really; I've got in mind what should be a decent definition.)","msgtype":"m.text"},"ts":1398183164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it's not too different from elements having flags for pseudo-classes","msgtype":"m.text"},"ts":1398183487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Flags for pseudo-classes, slots for pseudo-elements","msgtype":"m.text"},"ts":1398183506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, exactly.","msgtype":"m.text"},"ts":1398183517000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Specialized information augments that are only visible while evaluating Selectors against the element.","msgtype":"m.text"},"ts":1398183534000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Interestingly, the selectors data model is no longer a tree anyway - since the Scoping pseudo-elements, it's a DAG.)","msgtype":"m.text"},"ts":1398183570000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DAG?","msgtype":"m.text"},"ts":1398183606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the right way to programmatically determine the current date in the user's local time zone?","msgtype":"m.text"},"ts":1398183625000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: directed acyclic graph","msgtype":"m.text"},"ts":1398183635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Directed acyclic graph\"","msgtype":"m.text"},"ts":1398183636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There are multiple paths to a given element now.","msgtype":"m.text"},"ts":1398183648000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"To some given elements, at least.","msgtype":"m.text"},"ts":1398183654000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Only if you use ::shadow and only if you assume they are not distinct matching operations","msgtype":"m.text"},"ts":1398183683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"foo > bar\" and \"foo::shadow ::content > bar\" select the same element in \"<foo><bar/><::shadow><content/></::shadow></foo>\".","msgtype":"m.text"},"ts":1398183716000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: you can get all the info from new Date()","msgtype":"m.text"},"ts":1398183858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: d = new Date(); alert(d.getYear() + \" \" + d.getMonth() ...","msgtype":"m.text"},"ts":1398183901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: oh man, those are pretty trippy","msgtype":"m.text"},"ts":1398183952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: that does look like what you'd want; good luck defining them ^_^","msgtype":"m.text"},"ts":1398183986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok so if I then do d.getHours() that returns the local hour?","msgtype":"m.text"},"ts":1398184170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it should","msgtype":"m.text"},"ts":1398184189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1398184194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","msgtype":"m.text"},"ts":1398184217000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"new Date().getHours() gives 18 for me which seems about right","msgtype":"m.text"},"ts":1398184228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I assume it's defined that way. Otherwise there'd be no point to getUTCHours()","msgtype":"m.text"},"ts":1398184339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suppose I should actually read the spec","msgtype":"m.text"},"ts":1398184353000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well to be fair, there's no logic to the Date object really","msgtype":"m.text"},"ts":1398184393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: it's badly designed and I think people want to offer a better API as soon as there's modules","msgtype":"m.text"},"ts":1398184414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that would be nice","msgtype":"m.text"},"ts":1398184423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"one of the many warts of the platform: that the short \"getHours\" ones are local time and \"UTC\" is the one that looks special, instead of getHours being UTC and having local be getLocalHours","msgtype":"m.text"},"ts":1398184428000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: yeah though it seems that's actually a wart of JS itself","msgtype":"m.text"},"ts":1398184591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jsbell: Can you review pull requests for IDB tests? Or is there someone else who can? There's a bunch of tests waiting to be reviewed: https://github.com/w3c/web-platform-tests/pulls/yunxiaoxie","msgtype":"m.text"},"ts":1398185573000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Zhiqiang has been doing it","msgtype":"m.text"},"ts":1398185632000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: ok","msgtype":"m.text"},"ts":1398185731000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: warts of JS and warts of the platform are the same thing","msgtype":"m.text"},"ts":1398185789000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"as far as I'm concerned, heh","msgtype":"m.text"},"ts":1398185797000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: https://www.npmjs.org/package/dom4-elements","msgtype":"m.text"},"ts":1398187479000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"it doesn't absolutize relative selectors, which is kinda dumb. and the name makes me sad.","msgtype":"m.text"},"ts":1398187495000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but, it's neat.","msgtype":"m.text"},"ts":1398187499000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"fun","msgtype":"m.text"},"ts":1398187521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: did you see the backlog? TabAtkins is proposing some interesting additional features","msgtype":"m.text"},"ts":1398187537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I didn't see TabAtkins original proposal, but I saw the replies...","msgtype":"m.text"},"ts":1398187555000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Well, \"features\".","msgtype":"m.text"},"ts":1398187556000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, pseudo-elements.","msgtype":"m.text"},"ts":1398187577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Plan is to allow pseudo-elements to return PseudoElement objects in an Elements array.","msgtype":"m.text"},"ts":1398187580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is PseudoElement a thing?","msgtype":"m.text"},"ts":1398187592000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Most direct use-case is to say \"foo::shadow\" to get the ShadowRoots of an element.","msgtype":"m.text"},"ts":1398187600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Not yet, no.","msgtype":"m.text"},"ts":1398187602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(astearns came up with a proposal earlier, but it died. I plan to revive it.)","msgtype":"m.text"},"ts":1398187652000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: first convince abarth","msgtype":"m.text"},"ts":1398187686000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Sure.","msgtype":"m.text"},"ts":1398187697000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Easier to convince with more concrete use-cases now, like \"foo::shadow\".","msgtype":"m.text"},"ts":1398187711000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"query(\"foo::shadow\") rather than query(\"foo\").map(function(el) { return el.shadowRoots; }) (or whatever).","msgtype":"m.text"},"ts":1398187748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"queryAll*","msgtype":"m.text"},"ts":1398187822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, sorry.","msgtype":"m.text"},"ts":1398187834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: iirc, i had used \"superior parent\" rather than something with \"element\" in the name because it might not be an element (but i don't remember what this was about now, so it might no longer apply)","msgtype":"m.text"},"ts":1398189189000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: PsuedoElement is *like* an element.","msgtype":"m.text"},"ts":1398189203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in some ways","msgtype":"m.text"},"ts":1398189222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: you could just stick with owner","msgtype":"m.text"},"ts":1398189444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I guess in some setups it could be another Pseudo-Element","msgtype":"m.text"},"ts":1398189465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"owner\" has a lot of baggage","msgtype":"m.text"},"ts":1398189772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: I have a mental block. What's the value in display module to make element's box disappear?","msgtype":"m.text"},"ts":1398189803000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"display-box: contents","msgtype":"m.text"},"ts":1398189951000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: Yes, it will probably be possible to be a pseudo element in the future.","msgtype":"m.text"},"ts":1398190114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dglazkov: Yes","msgtype":"m.text"},"ts":1398190126000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1398190133000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: foo::before::before, for example","msgtype":"m.text"},"ts":1398190159000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, hmm, hmm ...","msgtype":"m.text"},"ts":1398190169000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"... reference \"element\"? context \"element\"?","msgtype":"m.text"},"ts":1398190303000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"superior parent\" :-)","msgtype":"m.text"},"ts":1398190323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you called? :P","msgtype":"m.text"},"ts":1398190342000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"wait no, I am just \"#1 dad\"","msgtype":"m.text"},"ts":1398190382000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"that's what the mug says. it must be true","msgtype":"m.text"},"ts":1398190394000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Domenic_: btw, on the whatwg list, +1s (or \"i strongly support this\") don't have much meaning, especially if the +1 comes from someone with a horse in the race (like, \"i strongly support that you use this feature i worked on\") :-)","msgtype":"m.text"},"ts":1398190465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"parent seems kind of confusing here wrt :before/:after ...","msgtype":"m.text"},"ts":1398190560000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1398190569000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goes to see what it looks like in the DOM inspector ...","msgtype":"m.emote"},"ts":1398190572000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"::before is a child of the element it's attached to","msgtype":"m.text"},"ts":1398190575000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"::before really means \"before the content\"","msgtype":"m.text"},"ts":1398190581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or \"just inside\"","msgtype":"m.text"},"ts":1398190583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, okay, so it's not as confusing as I was expecting","msgtype":"m.text"},"ts":1398190604000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: Yeah, the naming is pretty unfortunate, but that's *long*-frozen legacy.","msgtype":"m.text"},"ts":1398190673000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"may be thinking of some other pseudo-element?","msgtype":"m.emote"},"ts":1398190679000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"::firstest-child and ::lastest-child.","msgtype":"m.text"},"ts":1398190688000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: sure, I wouldn't have written a message with that as the *only* content. It was more, before I criticize specifics, let me be clear I'm rooting for you.","msgtype":"m.text"},"ts":1398190752000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah, I trust the old DOM inspector to know what it's doing here ... which may be crashing firefox ...","msgtype":"m.text"},"ts":1398190763000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"::before::before rises again!!! I strongly support this!","msgtype":"m.text"},"ts":1398190837000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"always wondered if ::before is explained by the mysterious decorators","msgtype":"m.text"},"ts":1398190917000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"and ::before(2)?","msgtype":"m.text"},"ts":1398190942000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Sure, why not.  It's distinct from ::before::before and useful for different things.","msgtype":"m.text"},"ts":1398191068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: We've finally removed the restrictions on things appearing on the RHS of a pseudo-element, so allowing more pseudo-elements there is the next logical step","msgtype":"m.text"},"ts":1398191115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: do you know what’s happening with http://dev.w3.org/csswg/css-pseudo/ ?","msgtype":"m.text"},"ts":1398191133000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"do people think it’s a bad idea, or is just that nobody has bothered yet to push it?","msgtype":"m.text"},"ts":1398191159000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Latter.","msgtype":"m.text"},"ts":1398191173000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Once I'm done fixing up Selectors 4, I plan to pick up Pseudo to give it more love.","msgtype":"m.text"},"ts":1398191189000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1398191217000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins, can you find a few more people like you?","msgtype":"m.text"},"ts":1398192093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I wanted the box tree defined last year ;)","msgtype":"m.text"},"ts":1398192102000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders if TabAtkins has siblings","msgtype":"m.emote"},"ts":1398192125000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Man, I've been trying.","msgtype":"m.text"},"ts":1398192331000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I do, but none of them are involved with the web.","msgtype":"m.text"},"ts":1398192337000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"To get sibli... Oh","msgtype":"m.text"},"ts":1398192343000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe to create more people genetically similar to himself?","msgtype":"m.text"},"ts":1398192372000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Getting siblings is no longer an option.","msgtype":"m.text"},"ts":1398192374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Except through adoption, I suppose.","msgtype":"m.text"},"ts":1398192382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: SimonSapin there were definitely some people who thought css-pseudo was the worst idea in the world","msgtype":"m.text"},"ts":1398195141000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"which is the main reason I haven't been pushing it","msgtype":"m.text"},"ts":1398195158000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: Obviously that's never stopped me.","msgtype":"m.text"},"ts":1398195426000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1398195437000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: what do they prefer instead? XBL 1.0?","msgtype":"m.text"},"ts":1398195458000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: no alternative, just not my draft","msgtype":"m.text"},"ts":1398195488000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Hixie: why do they need \"superior parent\" when they're basically just extra-document children? why not just \"parent\"?","msgtype":"m.text"},"ts":1398195644000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: Because they're not children.","msgtype":"m.text"},"ts":1398195864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"parent\" implies that the opposite relationship is \"child\".","msgtype":"m.text"},"ts":1398195876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so pseudo-parent?","msgtype":"m.text"},"ts":1398195888000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"But then that's just weird.","msgtype":"m.text"},"ts":1398195900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"xxx parent\" referring to something that isn't the opposite of \"child\" is weird, too","msgtype":"m.text"},"ts":1398198042000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"iirc \"superior parent\" reflected to \"inferior child\"?","msgtype":"m.text"},"ts":1398198127000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could be wrong","msgtype":"m.text"},"ts":1398198129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's been a while","msgtype":"m.text"},"ts":1398198131000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pseudo is a good word for weird things","msgtype":"m.text"},"ts":1398198160000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyone remember when form controls were added to HTML browsers?","msgtype":"m.text"},"ts":1398201650000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, Dave Raggett added forms and tables to HTML2 IIRC","msgtype":"m.text"},"ts":1398201785000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i wonder where that stood relative to implementations","msgtype":"m.text"},"ts":1398201902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/People/Raggett/book4/ch02.html suggests april 1993","msgtype":"m.text"},"ts":1398201946000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"back when browsers and mailing lists were tightly bound","msgtype":"m.text"},"ts":1398202017000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"next question, when did mobile safari come out? june 2007?","msgtype":"m.text"},"ts":1398202039000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. anyone could suggest something, implementer or w3c person, and if it seemed like a good idea it just got built/deployed","msgtype":"m.text"},"ts":1398202039000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"same as now then? ;-)","msgtype":"m.text"},"ts":1398202051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - took us a while to get back here","msgtype":"m.text"},"ts":1398202063000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"true dat","msgtype":"m.text"},"ts":1398202075000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so why we no can has MNG again?","msgtype":"m.text"},"ts":1398202077000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB - comment on the bug(s) in bugzilla ;)","msgtype":"m.text"},"ts":1398202090000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"noooooo","msgtype":"m.text"},"ts":1398202097000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: mob saf was same time as iPhone shipped, so would be then","msgtype":"m.text"},"ts":1398202098000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1398202099000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"actually I might have done that","msgtype":"m.text"},"ts":1398202104000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but, um, it's not likely to help ...","msgtype":"m.text"},"ts":1398202116000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB, works for some browsers sometimes","msgtype":"m.text"},"ts":1398202140000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"actually, more seriously, JNG seems a shame to lose just because MNG got ripped out ...","msgtype":"m.text"},"ts":1398202220000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"tantek: iirc, it looked like there was either (a) an irrational hatred for MNG/mnglib or (b) an inadequately explained, but rational, hatred for MNG/mnglib","msgtype":"m.text"},"ts":1398202601000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"like RDF hatred or something else?","msgtype":"m.text"},"ts":1398202626000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"at https://bugzilla.mozilla.org/show_bug.cgi?id=mng","msgtype":"m.text"},"ts":1398202630000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well, RDF is kind of crazy syntax-wise","msgtype":"m.text"},"ts":1398202640000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I can understand why people might hate that","msgtype":"m.text"},"ts":1398202655000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"MNG is waaaay over-engineered","msgtype":"m.text"},"ts":1398202753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, hence the \"more seriously, JNG [...]\"","msgtype":"m.text"},"ts":1398202797000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wishes the MNG people weren't such sore losers ...","msgtype":"m.emote"},"ts":1398202835000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah i often wonder about that kind of reaction","msgtype":"m.text"},"ts":1398203191000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. i wonder if people realise how many specs or parts of specs i've worked on (or that many others in this channel have worked on) that have gone down the drain","msgtype":"m.text"},"ts":1398203231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some involving years and years of work","msgtype":"m.text"},"ts":1398203246000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. xbl2, web sql db","msgtype":"m.text"},"ts":1398203258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"web controls 2.0","msgtype":"m.text"},"ts":1398203265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can't take it personally","msgtype":"m.text"},"ts":1398203277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"astearns: \"people who thought css-pseudo was the worst idea in the world\", did they give any reason?","msgtype":"m.text"},"ts":1398203281000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"if someone doesn't make a reasonable lightweight animation format to replace gif, one of these days someone's just going to hack RGBA32 into GIF and it'll catch on and then we'll be stuck with that for all eternity","msgtype":"m.text"},"ts":1398203635000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: some are in the minutes: http://lists.w3.org/Archives/Public/www-style/2012Aug/0771.html","msgtype":"m.text"},"ts":1398203808000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"SimonSapin: mainly they thought the use cases were something we should not design a CSS feature for","msgtype":"m.text"},"ts":1398203825000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Hixie - perhaps when people spend years only working on a single spec","msgtype":"m.text"},"ts":1398203921000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"then their emotional vesting is all in one basket","msgtype":"m.text"},"ts":1398203932000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"oh faff, the w3c want me to change my password to a more \"secure\" one","msgtype":"m.text"},"ts":1398204070000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like i care one bit if that account can be compromised","msgtype":"m.text"},"ts":1398204077000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now i'll always be forgetting the password","msgtype":"m.text"},"ts":1398204085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: just change it to H1x13<year><month> every month, military-grade password policy compliant ;)","msgtype":"m.text"},"ts":1398204319000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"yay, w3c is actively forking canvas: http://www.w3.org/mid/53515EA3.7090205⊙wo","msgtype":"m.text"},"ts":1398206377000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1398206556000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i'm officially declaring document.cookie The Worst Web Platform API","msgtype":"m.text"},"ts":1398207922000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: it did look pretty bad ...","msgtype":"m.text"},"ts":1398207960000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I mean is that even an API?","msgtype":"m.text"},"ts":1398207975000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the fact that you can't even take the value of document.cookie, and assign it to document.cookie, and have it do the obvious thing...","msgtype":"m.text"},"ts":1398208017000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"document.cookie is pretty terrible.","msgtype":"m.text"},"ts":1398208450000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the race condition is my favourite part of it.","msgtype":"m.text"},"ts":1398208458000,"senderName":"Hixie","senderId":"Hixie@irc"}
]