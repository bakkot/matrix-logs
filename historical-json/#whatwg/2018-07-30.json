[
{"content":{"body":"If a realm only has one instance of a particular object (enforced through the spec), is it ok to say \"Let |foo| be the only instance of {{Foo}} within |realm|\"?","msgtype":"m.text"},"ts":1532952735000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems unambiguous, but also unlikely to match how implemenations will do things, so meh?","msgtype":"m.text"},"ts":1532955775000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll take \"meh\" until implementations guide towards something better.","msgtype":"m.text"},"ts":1532956039000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I mean, seems like it would be pretty standard to say \"each WindowOrWorkerGlobalScope has a <dfn>foo</dfn>, an instance of {{Foo}}\"","msgtype":"m.text"},"ts":1532959487000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, that might make more sense","msgtype":"m.text"},"ts":1532966313000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Is there a definitive on null vs undefined? When to use one or the other","msgtype":"m.text"},"ts":1532966346000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: `undefined` doesn't exist in spec land","msgtype":"m.text"},"ts":1532967706000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"IDL converts it to null usually","msgtype":"m.text"},"ts":1532967712000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"and in certain cases (dictionary, overload resolution) it's called \"not present\"","msgtype":"m.text"},"ts":1532967739000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"(Not sure if that's what you're asking)","msgtype":"m.text"},"ts":1532967824000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"JakeA: yeah it's pretty bad right now. Most places use null because that's all that exists. A few places started using undefined to be more consistent with ES, e.g. on get() return values from map-esque things. Now it's just inconsistent....","msgtype":"m.text"},"ts":1532969859000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm what would you call the boolean (not flag) version of \"transient activation flag\"","msgtype":"m.text"},"ts":1532974376000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: What Domenic said, but I'd match ES conventions if possible.  Unfortunately that means having operations return `any` and then clarify in prose; when I've done this I've put a comment in the IDL explaining it.","msgtype":"m.text"},"ts":1532979169000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/heycam/webidl/issues/60","msgtype":"m.text"},"ts":1532979215000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: What are you using null vs undefined for? A not-present value for an Infra-struct's items, or something that'll be exposed to JS?","msgtype":"m.text"},"ts":1532984908000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]