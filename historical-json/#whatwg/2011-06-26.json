[
{"content":{"body":"Hmm, I guess we can do as Hixie suggests","msgtype":"m.text"},"ts":1309082520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, http://www.w3.org/TR/xml-stylesheet/ :)","msgtype":"m.text"},"ts":1309090140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1309090141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1309090142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"As always, happy to complain","msgtype":"m.text"},"ts":1309090380000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/","msgtype":"m.text"},"ts":1309090620000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: If having a feature is generally green even for misfeatures like Compact URIs, why isnâ€™t more New Attributes greener?","msgtype":"m.text"},"ts":1309091040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1309091041000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://www.w3.org/2001/sw/interest/ED-ldh-20110626/","msgtype":"m.text"},"ts":1309091220000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I am not liking what bz says on public-webapps","msgtype":"m.text"},"ts":1309104660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe it comes down to: redirects suck","msgtype":"m.text"},"ts":1309104661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least for performance","msgtype":"m.text"},"ts":1309105260000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1309105261000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"the internets are failing me","msgtype":"m.text"},"ts":1309116540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't you mean interwebs","msgtype":"m.text"},"ts":1309116541000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"does anyone know if there's a more efficient way to take an unsorted array and create a second sorted array from it that is quicker than just copying the first array to the second array and then doing an in-place sort of the second array?","msgtype":"m.text"},"ts":1309116542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i need both arrays at the end -- the first array is actually just sorted in a different order that i still need)","msgtype":"m.text"},"ts":1309116600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems that being willing to pay for O(n) more memory should have some sort of benefit but all the algorithms wikipedia talks about are in-place and don't take advantage of having lots of scratch space.","msgtype":"m.text"},"ts":1309116660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Merge sort needs O(n) extra space","msgtype":"m.text"},"ts":1309116780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"merge sort could work i guess","msgtype":"m.text"},"ts":1309116900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and it's stable (unlike heap sort) and worst case O(n log n) (unlike quicksort))","msgtype":"m.text"},"ts":1309116901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"stable isn't an issue here, my keys are unique","msgtype":"m.text"},"ts":1309116960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my N is also very small, less than 32 in the worst case, likely 2-4 in the common case","msgtype":"m.text"},"ts":1309116961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, you'd only have \"extra\" space in the first iteration of the algorithm","msgtype":"m.text"},"ts":1309117020000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"In that case, why do you care at all about efficiency?","msgtype":"m.text"},"ts":1309117021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: principle, mostly","msgtype":"m.text"},"ts":1309117022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Do you need a comparison sort at all?","msgtype":"m.text"},"ts":1309117023000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: but also because it's interesting :-)","msgtype":"m.text"},"ts":1309117080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sorting isn't interesting, Knuth solved it decades ago so that you can just call .sort() and not have to worry about it any more :-p","msgtype":"m.text"},"ts":1309117081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"simplest solution seems to just be to walk the first array looking for the lowest value, then the next lowest value, etc, but that's pretty pathetic performance-wise","msgtype":"m.text"},"ts":1309117082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: :-P","msgtype":"m.text"},"ts":1309117083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The extra space is just an illusion unless you're using a n-writes-only algorithm","msgtype":"m.text"},"ts":1309117140000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: But Knuth also said you should know *how* to sort, even if you should normally just use the stdlib of whatever you're using. :P","msgtype":"m.text"},"ts":1309117141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: i.e., a selection sort","msgtype":"m.text"},"ts":1309117200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dashiva: well if the key space was better defined (e.g. 1..32, rather than arbitrary short strings as in this case) i could do a pigeon-hole sort, which would be way faster than a comparison sort","msgtype":"m.text"},"ts":1309117260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: yeah","msgtype":"m.text"},"ts":1309117261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: more or less","msgtype":"m.text"},"ts":1309117262000,"senderName":"Hixie","senderId":"Hixie@irc"}
]