[
{"content":{"body":"annevk: any reasons why doing `response.consumeBodyAsJSON()` instead of just `response.bodyAsJSON()`?","msgtype":"m.text"},"ts":1408669489000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"doWhatHow() methods seem candidates for deprecation in the future. :/","msgtype":"m.text"},"ts":1408669556000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"compare to something like do(What, How). Bah… :) not important.","msgtype":"m.text"},"ts":1408669599000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"is going back to webcompat issues","msgtype":"m.emote"},"ts":1408669618000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: also","msgtype":"m.text"},"ts":1408673090000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"> If you have any great user interface ideas let me know! I thought I would share the above since I could not find a decent summary anywhere else.","msgtype":"m.text"},"ts":1408673090000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"feedback request without a place to leave the feedback","msgtype":"m.text"},"ts":1408673090000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"in http://annevankesteren.nl/2014/08/registerprotocolhandler","msgtype":"m.text"},"ts":1408673122000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: http://annevankesteren.nl/about","msgtype":"m.text"},"ts":1408692627000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1408692657000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"though comments on the blog would be a bit more inviteful","msgtype":"m.text"},"ts":1408692682000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I was thinking more of an open bug :)","msgtype":"m.text"},"ts":1408692707000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"weird English (as usual)","msgtype":"m.text"},"ts":1408692731000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"anyway I was expecting a place where I could put a comment in a bug tracker.","msgtype":"m.text"},"ts":1408692760000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: because otherwise it isn't clear that it consumes the stream","msgtype":"m.text"},"ts":1408692907000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"karlcow: (re consumeBodyAsJSON)","msgtype":"m.text"},"ts":1408692937000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: can it does something else than 'consuming the stream'?","msgtype":"m.text"},"ts":1408692997000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"likes that btw 'consumes the stream'. There is something poetic about it","msgtype":"m.emote"},"ts":1408693014000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: it could buffer the stream for further reads, then read the buffer as json","msgtype":"m.text"},"ts":1408693096000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"karlcow: see http://jakearchibald.com/2014/reading-responses/","msgtype":"m.text"},"ts":1408693122000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"s/can it does/can it do/ (slow brain)","msgtype":"m.text"},"ts":1408693129000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"clicks and reads","msgtype":"m.emote"},"ts":1408693134000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"hmmmm I see.","msgtype":"m.text"},"ts":1408693574000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: I think the idea behind the explicit naming was because it was non-obvious what it would do","msgtype":"m.text"},"ts":1408693672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"karlcow: I filed https://bugzilla.mozilla.org/show_bug.cgi?id=1056860","msgtype":"m.text"},"ts":1408693714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh cool","msgtype":"m.text"},"ts":1408693720000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1408693725000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"krijnhoetmer_: is the irc log code on github or so?","msgtype":"m.text"},"ts":1408694442000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk, JakeA: so if I understood the post the response.consumeBodyAsJSON is a stream.","msgtype":"m.text"},"ts":1408695225000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"then why not calling it what it means. response.streamAsJSON","msgtype":"m.text"},"ts":1408695225000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: nah, response.consumeBodyAsJSON() returns a promise for a JS object","msgtype":"m.text"},"ts":1408695478000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http://www.w3.org/mid/8AA87E45-6086-4CAD-8EC6-7BDE739F4DDC⊙gc #popcorn","msgtype":"m.text"},"ts":1408695816000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"\"There is no cost to working on longdesc.\"","msgtype":"m.text"},"ts":1408695887000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"The only question is whether the W3C standard is going to reflect that practice or some imaginary universe concocted by the WHATWG's collective inexperience.\"","msgtype":"m.text"},"ts":1408697887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Roy is always happy to make friends it seems","msgtype":"m.text"},"ts":1408697895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA, annevk: So what's the reason that response.body.json() doesn't work?","msgtype":"m.text"},"ts":1408697975000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: we want .body to be an actual stream object","msgtype":"m.text"},"ts":1408697992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: it could be a subclass, but taking short terms on that seems dangerous","msgtype":"m.text"},"ts":1408698019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: sorry for not explaining that on list","msgtype":"m.text"},"ts":1408698045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You can't have response.body.stream?","msgtype":"m.text"},"ts":1408698046000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: why would we have an extra object?","msgtype":"m.text"},"ts":1408698063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"having a mix of response.body and response.bodyAsJSON() seems ugly","msgtype":"m.text"},"ts":1408698075000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Plus the latter is harder to type :p","msgtype":"m.text"},"ts":1408698086000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: having an additional object for each request/response seems wasteful","msgtype":"m.text"},"ts":1408698116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(also I suspect that wanting to interact with the raw stream will not be the common use case)","msgtype":"m.text"},"ts":1408698124000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk, sounds like he's friends with the chairs","msgtype":"m.text"},"ts":1408698133000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(well maybe it will for SW, I don't know, but not for XHR-replacement use cases)","msgtype":"m.text"},"ts":1408698157000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: they have said the same thing?","msgtype":"m.text"},"ts":1408698160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems like the kind of tone they'd approve of","msgtype":"m.text"},"ts":1408698178000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: thinking about it, if Roy actually believed what he wrote there, he would veto the whole document","msgtype":"m.text"},"ts":1408698184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: seems like he's trying to end up in gossip magazines","msgtype":"m.text"},"ts":1408698208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: interacting with the raw stream won't be common in SW","msgtype":"m.text"},"ts":1408698208000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk, that's just your inexperience speaking","msgtype":"m.text"},"ts":1408698214000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: says who :p","msgtype":"m.text"},"ts":1408698223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, if you weren't an idiot, you'd understand why he supports it ;)","msgtype":"m.text"},"ts":1408698232000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: you'd only need to do that if you were writing your own video decoder or something","msgtype":"m.text"},"ts":1408698234000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: than I don't understand why we're making the stream API the most convenient one and making the consumed APIs more inconvenient","msgtype":"m.text"},"ts":1408698271000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so what about as*() with .body for the low-level API?","msgtype":"m.text"},"ts":1408698279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"denies being Roy","msgtype":"m.emote"},"ts":1408698287000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: rather than bodyAs*()","msgtype":"m.text"},"ts":1408698290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm a fan of response.asJSON()","msgtype":"m.text"},"ts":1408698312000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I don't really understand the value of asFoo() vs foo()","msgtype":"m.text"},"ts":1408698322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"asJSON(), asStream()?","msgtype":"m.text"},"ts":1408698335000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Don't need asStream","msgtype":"m.text"},"ts":1408698348000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: So that seems mildly confusing if you can also get at the headers","msgtype":"m.text"},"ts":1408698348000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"var data = await (await fetch('/whatever')).asJSON();","msgtype":"m.text"},"ts":1408698384000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"response.body.text(), response.body.json() response.stream, response.headers.text(), response.headers.map()","msgtype":"m.text"},"ts":1408698405000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: response.json() / response.bodyJSON()?","msgtype":"m.text"},"ts":1408698409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would be my first choice","msgtype":"m.text"},"ts":1408698420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: headers is a http://fetch.spec.whatwg.org/#headers-class","msgtype":"m.text"},"ts":1408698457000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"by the time you get the response object the headers part of the stream has already been consumed","msgtype":"m.text"},"ts":1408698491000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So it's not possible to get the raw headers without consuming the stream?","msgtype":"m.text"},"ts":1408698507000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1408698523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So can you get the raw headers data?","msgtype":"m.text"},"ts":1408698531000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1408698538000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That seems unfortunate","msgtype":"m.text"},"ts":1408698544000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sounds like you're looking for a raw socket rather than fetch","msgtype":"m.text"},"ts":1408698561000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Also, I don't think we can give raw headers for security reasons","msgtype":"m.text"},"ts":1408698605000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http only cookies, for instance","msgtype":"m.text"},"ts":1408698612000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Oh, that could be true","msgtype":"m.text"},"ts":1408698629000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In that case .text() and .json() seems fine","msgtype":"m.text"},"ts":1408698645000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because everything that isn't .headers is implicitly applying to the body","msgtype":"m.text"},"ts":1408698662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: if you or Hixie said the things that Roy says, w3c partisans would be screaming with outrage about it. but Roy says it and instead they smile and say, Good ole Roy","msgtype":"m.text"},"ts":1408698680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: there's a little more than that http://fetch.spec.whatwg.org/#response-class","msgtype":"m.text"},"ts":1408698690000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith, well, Roy is a Good Guy, right?","msgtype":"m.text"},"ts":1408698735000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: Sure, I just mean for the body-consuming methods","msgtype":"m.text"},"ts":1408698739000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: yeah e.g. https://twitter.com/johnfoliot/status/502581657053167616 but would not really have expected otherwise","msgtype":"m.text"},"ts":1408698740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arrayBuffer() / text() / blob() / json() / formData()","msgtype":"m.text"},"ts":1408698800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1408698805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does not match any existing pattern","msgtype":"m.text"},"ts":1408698820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like we should go for it then","msgtype":"m.text"},"ts":1408698829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1408698846000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"var data = await (await fetch('/whatever')).json();","msgtype":"m.text"},"ts":1408698926000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"request.formData()","msgtype":"m.text"},"ts":1408698974000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the main problem would be if we had members that might clash with future additions","msgtype":"m.text"},"ts":1408698992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I'm happy with as*, don't really mind. I think some will be unhappy with losing consume/take","msgtype":"m.text"},"ts":1408699033000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think Domenic mainly cared about it when it was proposed for the subclass","msgtype":"m.text"},"ts":1408699061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If we really care about brevity I think jgraham is correct","msgtype":"m.text"},"ts":1408699092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think asFoo() is basically OK, but the as isn't adding much apart from the need to hold down shift for the next letter(s)","msgtype":"m.text"},"ts":1408699100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If we don't so much, I'd prefer bodyAsJSON()","msgtype":"m.text"},"ts":1408699106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If we care about being descriptive, I'd prefer takeBodyAsJSON()","msgtype":"m.text"},"ts":1408699120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I think we mostly care about brevity so jgraham's json() makes the most sense","msgtype":"m.text"},"ts":1408699138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"takeBodyAndParseAsJSONAndThrowIfThatFails()","msgtype":"m.text"},"ts":1408699157000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"AndRejectIfThatFails?","msgtype":"m.text"},"ts":1408699169000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"None of the other properties we expose now make sense as a data type, except perhaps for url, but that'd be dataURL() or some such","msgtype":"m.text"},"ts":1408699170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1408699173000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: argued your position on list","msgtype":"m.text"},"ts":1408699623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1408699744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: not so sure about hasBody","msgtype":"m.text"},"ts":1408700193000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's not entirely accurate, though for the person using the object it kind of is","msgtype":"m.text"},"ts":1408700238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"response.hasBody != Boolean(response.body)","msgtype":"m.text"},"ts":1408700247000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: also, I don't have anything better","msgtype":"m.text"},"ts":1408700252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I still like \"consumed\", \"taken\" is ok too. \"bodyTaken\" if you want 'body' in there","msgtype":"m.text"},"ts":1408700307000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think we'd still disallow access in that case to the stream object in some way","msgtype":"m.text"},"ts":1408700308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so while it's not equal to the boolean, it's equal to the .body.canbeused or whatever, which seems roughly similar to hasAttributes() and hasChildNodes() work","msgtype":"m.text"},"ts":1408700379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how /\\","msgtype":"m.text"},"ts":1408700390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if response.taken is true, you can still access .headers right? seems odd to not have body in there","msgtype":"m.text"},"ts":1408700420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fair","msgtype":"m.text"},"ts":1408700465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"bodyRead","msgtype":"m.text"},"ts":1408700481000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah that seems fine, although also not necessarily true","msgtype":"m.text"},"ts":1408700507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, same with \"consumed\"","msgtype":"m.text"},"ts":1408700529000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"bodyUsed","msgtype":"m.text"},"ts":1408700534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can you still access whatever it was you used to consume the stream?","msgtype":"m.text"},"ts":1408700595000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/stream/body/","msgtype":"m.text"},"ts":1408700603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1408700607000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so response.json(); response.json() wouldn't work (imagine whatever async bits are needed)","msgtype":"m.text"},"ts":1408700638000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: text() etc. only work once; if you pass a Request to fetch(), they no longer work","msgtype":"m.text"},"ts":1408700640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if you put a response into a cache, they no longer work, etc.","msgtype":"m.text"},"ts":1408700659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, 2nd .json would reject","msgtype":"m.text"},"ts":1408700670000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: at that point we'd flip the flag directly","msgtype":"m.text"},"ts":1408700671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: why you want to use ES style for Streams?","msgtype":"m.text"},"ts":1408700677000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: when it's actually read is up to the browser","msgtype":"m.text"},"ts":1408700681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: he wants them to end up in Node.js and implemented in the ES engine","msgtype":"m.text"},"ts":1408700693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure, I was wondering if an API like consumedAs = \"json\" would make sense, but perhaps not","msgtype":"m.text"},"ts":1408700707000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, Node.js stuff...","msgtype":"m.text"},"ts":1408700717000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(it would obvioulsy be null if it hadn't been consumed yet)","msgtype":"m.text"},"ts":1408700728000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"need to be careful then when reviewing Streams that the API works well enough in browsers too","msgtype":"m.text"},"ts":1408700734000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the environment is rather different","msgtype":"m.text"},"ts":1408700741000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, do you have time for review?","msgtype":"m.text"},"ts":1408700754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure there's many Gecko people involved","msgtype":"m.text"},"ts":1408700765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it's certainly not something I'm skilled in","msgtype":"m.text"},"ts":1408700776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if there was a readable spec... ;)","msgtype":"m.text"},"ts":1408700802000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: seems like a good start of a review :p","msgtype":"m.text"},"ts":1408701210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hadn't thought of using localStorage purely to communicate between tabs https://twitter.com/ddprrt/status/502789624843223040","msgtype":"m.text"},"ts":1408709569000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: neat","msgtype":"m.text"},"ts":1408710812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"localStorage has nothing neat","msgtype":"m.text"},"ts":1408711965000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: So are there any web technologies that you do like? ;)","msgtype":"m.text"},"ts":1408712054000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hey, localStorage is one of the APIs we want to kill","msgtype":"m.text"},"ts":1408712076000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: and I like events, and MutationObserver (obviously)","msgtype":"m.text"},"ts":1408712097000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and DOM tree","msgtype":"m.text"},"ts":1408712112000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is plenty","msgtype":"m.text"},"ts":1408712114000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Pretty sure DOM and events are both unfashionable to like ;)","msgtype":"m.text"},"ts":1408712142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but localStorage wasn't actually in APIs-to-kill list","msgtype":"m.text"},"ts":1408712165000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"adds it","msgtype":"m.emote"},"ts":1408712169000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It's nice that we are now trying to kill WHATWG-invented APIs rather than just Netscape/Microsoft/Java-Enterprise-Requirement-invented APIs","msgtype":"m.text"},"ts":1408712301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"whatwg is getting old","msgtype":"m.text"},"ts":1408712357000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"10+ already, isn't it","msgtype":"m.text"},"ts":1408712363000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thinks the W3C compound documents workshop was 2004","msgtype":"m.emote"},"ts":1408712383000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"May","msgtype":"m.text"},"ts":1408712388000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, it's 10","msgtype":"m.text"},"ts":1408712391000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But only today I was hearing about how we suffer from collective inexperience. Which sounded worrying until it was clarified that we live in an imaginary universe which seems sufficient to prevent our evident ineptness from having any actual consequence.","msgtype":"m.text"},"ts":1408712475000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"he","msgtype":"m.text"},"ts":1408712576000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"h","msgtype":"m.text"},"ts":1408712577000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: whereas some other people live in an imaginary universe where having written a disseration describing something that other people invented somehow buys you street cred for life","msgtype":"m.text"},"ts":1408712932000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and yeah he's right -- clearly the ones who are inexperienced are the ones who've spent 10+ years day in and day out working on testing how the Web actually works in practice and reverse engineering all kinds of crap and thoroughly/precisely/unambiguously documenting how it all works (or trying to)","msgtype":"m.text"},"ts":1408713263000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Nah","msgtype":"m.text"},"ts":1408713451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"We've actually been on reddit most of that time","msgtype":"m.text"},"ts":1408713463000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"othermaciej has been at least","msgtype":"m.text"},"ts":1408714150000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(just kidding)","msgtype":"m.text"},"ts":1408714154000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1408715156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk / Ms2ger : Shouldn't step 2 of http://fetch.spec.whatwg.org/#concept-http-fetch say \"requests's client IS a Service Worker environment\"?","msgtype":"m.text"},"ts":1408717256000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Might be","msgtype":"m.text"},"ts":1408717291000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: there are no limitations on what a cache name can be, correct?  free to put /, etc in there","msgtype":"m.text"},"ts":1408717748000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: correct. Should probably define that.","msgtype":"m.text"},"ts":1408717895000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1408717917000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think I'm going to suggest \"best practice\" would be to call the cache \"sitename-cachename-version\"","msgtype":"m.text"},"ts":1408717957000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or some kind of scheme like that","msgtype":"m.text"},"ts":1408717961000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so in your SW activate event you can iterate over caches and identify those you don't need anymore","msgtype":"m.text"},"ts":1408717987000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: k... I was asking because it would be nice for implementation to have human readable directory structure, but not a big deal to map names to UUIDs","msgtype":"m.text"},"ts":1408717991000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1408717993000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ^^^","msgtype":"m.text"},"ts":1408717996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"sitename/cachename/version\" is better I think","msgtype":"m.text"},"ts":1408718017000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so yeah","msgtype":"m.text"},"ts":1408718018000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"although not all caches need a version, such as caches that build up over time, like \"click to read offline\" stuff, or dynamic avatar caches","msgtype":"m.text"},"ts":1408718067000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea, I think embedding version in name is fine unless we want to provide conveniences like \"get all caches older than version x\"","msgtype":"m.text"},"ts":1408718130000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but that can be a content library","msgtype":"m.text"},"ts":1408718151000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we're toying with the idea of using CacheStorage/Cache internally to persist our SW script and importScript scripts... can you think of any reasons that would be a bad idea?","msgtype":"m.text"},"ts":1408718227000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think we may be doing the same. It shouldn't appear when you iterate over the caches though. We may expose it another way in the future though","msgtype":"m.text"},"ts":1408718517000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea... seems like we need a magic internal cacheName... although since its all same origin doesn't seem like a major problem if they are accessible","msgtype":"m.text"},"ts":1408718560000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I guess it might be nice to have a defined cacheName prefix for internal UA use that content should not expect to work for them","msgtype":"m.text"},"ts":1408718608000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Manishearth: no","msgtype":"m.text"},"ts":1408718622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: if it would be a service worker, we don't need to pass it through a service worker","msgtype":"m.text"},"ts":1408718634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: it's worth exploring. I'm worried about what happens if those caches are modified or deleted. But I guess advice could just be \"don't do that\"","msgtype":"m.text"},"ts":1408718737000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, we can just make those promises reject for content I think... but it would be nice to be explicit about what key is being used internal... Like \"Cache names starting with '__internal__' are reserved for use by the browser and will always reject when passed by content.\"","msgtype":"m.text"},"ts":1408718816000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: but this means requests get passed through SWs by default?","msgtype":"m.text"},"ts":1408718830000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: yes","msgtype":"m.text"},"ts":1408718839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: could you make a ticket for that? I think it's worth exploring","msgtype":"m.text"},"ts":1408718951000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1408718958000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: even if we say caches.get('__internal__whatever') always rejects, so we've reserved that naming for later","msgtype":"m.text"},"ts":1408718997000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1408719016000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/slightlyoff/ServiceWorker/issues/193","msgtype":"m.text"},"ts":1408719092000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"since I have no desire to reply to this email thread: http://lists.w3.org/Archives/Public/public-html-admin/2014Aug/0035.html I provide this for your consideration. 1) [citation needed] on all of Roy's unfounded claims. 2) \"as a Senior Principal Scientist\", I expect Roy to \"show his work\" in a manner replicable by other scientists, rather than depending on \"considered opinions of folks\".","msgtype":"m.text"},"ts":1408719128000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"wanderview: http://slightlyoff.github.io/ServiceWorker/spec/service_worker/#service-worker-global-scope-script-cache - heh, I didn't realise we'd added this","msgtype":"m.text"},"ts":1408719169000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tantek: public-html-admin is a support forum?","msgtype":"m.text"},"ts":1408719228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - that may be too optimistic of an assessment.","msgtype":"m.text"},"ts":1408719297000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"JakeA: ah, yea... so makes pretty good sense to use the same underlying implementation there","msgtype":"m.text"},"ts":1408719426000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: https://github.com/slightlyoff/ServiceWorker/issues/424","msgtype":"m.text"},"ts":1408719432000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but no, seriously, I've lost patience with people call themselves \"scientists\" and then make arguments based purely on \"considered opinions\". It's like really? How dare you?","msgtype":"m.text"},"ts":1408719550000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"cc: hober","msgtype":"m.text"},"ts":1408719575000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"wanderview: cheers!","msgtype":"m.text"},"ts":1408719583000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tantek: Maybe it's the typical computer science definition of scientist, i.e. one that doesn't involve anything resembling science","msgtype":"m.text"},"ts":1408719723000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can't remember ever reading a computer science paper that has a hypothesis in it","msgtype":"m.emote"},"ts":1408719781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wanderview: has ServiceWorker been considered for WebActivities? Feels like a SW could register for the intents it can receive during install, then when it receives an intent it can decide to open a window if it needs to via the clients api","msgtype":"m.text"},"ts":1408720528000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we are thinking about it, but we don't really want to do activities again","msgtype":"m.text"},"ts":1408722132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: thats an interesting idea, but I'm not sure","msgtype":"m.text"},"ts":1408722140000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we want to tackle specific points of interest and make those extensible, such as sharing, maybe the file picker, etc.","msgtype":"m.text"},"ts":1408722162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone here knows of a sortable table specification?","msgtype":"m.text"},"ts":1408726070000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"err","msgtype":"m.text"},"ts":1408726072000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"polyfill?","msgtype":"m.text"},"ts":1408726074000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1408726272000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it probably wouldn't be too hard to write a polyfill for that, dunno if one exists","msgtype":"m.text"},"ts":1408726277000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, with the exception of dealing with dynamically inserted nodes","msgtype":"m.text"},"ts":1408726310000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"looks like there's a polymer component that does some variation on it, not relying on table[sortable]","msgtype":"m.text"},"ts":1408726381000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Polyfill?","msgtype":"m.text"},"ts":1408726464000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"not a polyfill, but something that accomplishes the same goal","msgtype":"m.text"},"ts":1408726482000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Folypill","msgtype":"m.text"},"ts":1408726483000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"in a much more verbose fashion","msgtype":"m.text"},"ts":1408726511000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Sortable table polyfill? sounds very Doable.","msgtype":"m.text"},"ts":1408726531000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"just need a spec","msgtype":"m.text"},"ts":1408726536000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Sortable table polyfill? sounds very Doable.","msgtype":"m.text"},"ts":1408726542000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"There is a spec","msgtype":"m.text"},"ts":1408726551000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"4.9.13 in web-apps","msgtype":"m.text"},"ts":1408726554000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that's kind of a neat feature though","msgtype":"m.text"},"ts":1408726705000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"If you message me the spec I will look at it later and if I can write the polyfill this evening I will.","msgtype":"m.text"},"ts":1408726806000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"whatwg.org/html","msgtype":"m.text"},"ts":1408726844000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/tables.html covers it","msgtype":"m.text"},"ts":1408726877000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think Hixie already wrote a script of sorts for it","msgtype":"m.text"},"ts":1408726984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay. Messaged myself. On the phone. I'll check later. Somebody already done it?","msgtype":"m.text"},"ts":1408726987000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"at least the sorting","msgtype":"m.text"},"ts":1408726987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't think there's a full polyfill","msgtype":"m.text"},"ts":1408727001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal caitp awesome","msgtype":"m.text"},"ts":1408727136000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"caitp polymer will not accomplish the same goal in my case. i need backwards compat.","msgtype":"m.text"},"ts":1408727146000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"and forward compat.","msgtype":"m.text"},"ts":1408727153000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"JonathanNeal if you have a script, please show and tell! :)","msgtype":"m.text"},"ts":1408727177000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"might have trouble with polymer on netscape 2 yeah","msgtype":"m.text"},"ts":1408727223000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp in related news, i currently have 275 tabs open. that makes me kinda averse to needlessly complex solutions.","msgtype":"m.text"},"ts":1408727771000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"okcupid for example drives the system load way up.","msgtype":"m.text"},"ts":1408727780000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i do not wish to burden others with similar stuff","msgtype":"m.text"},"ts":1408727834000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"heh, people have been doing this stuff with jQuery plugins and similar stuff for years, there's lots of solutions that don't include native unimplemented html5 features","msgtype":"m.text"},"ts":1408727921000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and don't need you to wrap your elements with a polyfilled shadow DOM implementation","msgtype":"m.text"},"ts":1408727962000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i usually avoid the “just use jquery” crowd :D","msgtype":"m.text"},"ts":1408727991000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"caitp: what, you mean there were releases of netscape before 4?","msgtype":"m.text"},"ts":1408728872000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so, back in 2004 i think the \"inexperience\" comment would have been misguided but at least an understandable misgiving","msgtype":"m.text"},"ts":1408728923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at this point though, you have to just be a troll to claim that","msgtype":"m.text"},"ts":1408728963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"given that i alone have more experience writing the HTML spec than any member of the HTMLWG including TimBL had back when HTML4 was written","msgtype":"m.text"},"ts":1408728983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, there's many more legit ways you could insult us","msgtype":"m.text"},"ts":1408729009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that seems like a woefully dumb way to do it","msgtype":"m.text"},"ts":1408729015000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"who is insulting who?","msgtype":"m.text"},"ts":1408729113000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"did I miss something","msgtype":"m.text"},"ts":1408729120000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: The inventor of the hypertext trolling protocol has been showing off his skills","msgtype":"m.text"},"ts":1408729331000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm going to be disappointed if the hypertext trolling protocol isn't an RFC","msgtype":"m.text"},"ts":1408729377000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jgraham: he didn't invent http, tim did.","msgtype":"m.text"},"ts":1408729527000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: No Time invented the Transport variant :p","msgtype":"m.text"},"ts":1408729616000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Tim","msgtype":"m.text"},"ts":1408729627000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp: http://lists.w3.org/Archives/Public/public-html-admin/2014Aug/0035.html","msgtype":"m.text"},"ts":1408729697000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, hober, hober, hober","msgtype":"m.text"},"ts":1408729926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well he does sound a bit cranky towards the end of that","msgtype":"m.text"},"ts":1408730111000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"hayato: have you gone through all the cases where HTML spec uses getElementById internally and figure out how shadow dom should behave in those cases?","msgtype":"m.text"},"ts":1408731536000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hayato: hmm, I guess it is basically just https://www.w3.org/Bugs/Public/show_bug.cgi?id=26643","msgtype":"m.text"},"ts":1408731555000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"caitp: hober? or roy?","msgtype":"m.text"},"ts":1408731671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do we fetch style sheets that don't match media queries?","msgtype":"m.text"},"ts":1408732361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we do, right? we just don't apply them?","msgtype":"m.text"},"ts":1408732366000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder if we should make style sheets that don't match media queries but have dependencies not load their dependencies until the media queries match, or something","msgtype":"m.text"},"ts":1408732392000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that question feels like it would star in http://jakearchibald.github.io/request-quest/","msgtype":"m.text"},"ts":1408733452000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA ^","msgtype":"m.text"},"ts":1408733463000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think it is in there","msgtype":"m.text"},"ts":1408733507000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's certainly in the live version I do at conferences","msgtype":"m.text"},"ts":1408733523000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: currently we download low priority","msgtype":"m.text"},"ts":1408733546000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Doesn't block rendering","msgtype":"m.text"},"ts":1408733598000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: by dependencies do you mean @import?","msgtype":"m.text"},"ts":1408733645000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"i mean needs=\"\" or whatever we introduce to declare dependencies","msgtype":"m.text"},"ts":1408733671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or indeed @import)","msgtype":"m.text"},"ts":1408733677000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Could resolve dependencies but low priority","msgtype":"m.text"},"ts":1408733917000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Can't think of dependencies CSS would have","msgtype":"m.text"},"ts":1408734002000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: @import, @font-face, etc.","msgtype":"m.text"},"ts":1408734043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: We tried doing lazy loading of image before. I don't think it worked?","msgtype":"m.text"},"ts":1408734077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1408734101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have a use case here which is \"don't download this widget if the screen is too small\"","msgtype":"m.text"},"ts":1408734124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's trivial to do via script, obviously","msgtype":"m.text"},"ts":1408734134000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's not clear how i'd do it automatically","msgtype":"m.text"},"ts":1408734141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"short of <script media>","msgtype":"m.text"},"ts":1408734150000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: @import is already a dependency. Fonts aren't always. They sound like use cases for resource hints though","msgtype":"m.text"},"ts":1408734172000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#has-been-shipped \" in the order in which they were added to their respective task source\"","msgtype":"m.text"},"ts":1408734316000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what does the respective task source refer to","msgtype":"m.text"},"ts":1408734319000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if the ports aren't shipped, is the idea that port1.postMessage(foo); port2.postMessage(bar); ensures that foo is delivered first ?","msgtype":"m.text"},"ts":1408734327000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1408734692000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: each port has its own task source, but this kinda merges them","msgtype":"m.text"},"ts":1408734729000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, the problem I see is that if port1 is sent to a worker, we cannot be sure that 'foo' is delivered before 'bar'.","msgtype":"m.text"},"ts":1408734738000,"senderName":"baku","senderId":"baku@irc"},
{"content":{"body":"if port1 is sent to a worker, this no longer applies","msgtype":"m.text"},"ts":1408734751000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that is a good solution only for delivering messages to the same event loop.","msgtype":"m.text"},"ts":1408734761000,"senderName":"baku","senderId":"baku@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1408734765000,"senderName":"baku","senderId":"baku@irc"},
{"content":{"body":"this is only for ports that haven't been shipped anywhere yet","msgtype":"m.text"},"ts":1408734777000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you ship port1 to a worker and back again, even, the guarantee is lost","msgtype":"m.text"},"ts":1408734787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, ok. thanks.","msgtype":"m.text"},"ts":1408734841000,"senderName":"baku","senderId":"baku@irc"},
{"content":{"body":"Hixie: wonder if we should make style sheets that don't match media queries but have dependencies not load their dependencies until the media queries match, or something  <—— This is really a double-edged sword. As an author, I've had use-cases where the Business prefers to pre-load data \"in case\" an option occurs, and others whom want to respect the current match. It would be nice if this could be a configuration option for UA","msgtype":"m.text"},"ts":1408737635000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"well preloading or not is a different issue","msgtype":"m.text"},"ts":1408737793000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Isn't that what you were talking about? loading all media, regardless if the current state met the mq definitions?","msgtype":"m.text"},"ts":1408738373000,"senderName":"boogyman","senderId":"boogyman@irc"}
]