[
{"content":{"body":"foolip: I think I lost privileges on Chrome's bug tracking software as I can no longer add the appropriate labels","msgtype":"m.text"},"ts":1529328680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: https://bugs.chromium.org/p/chromium/issues/detail?id=853723","msgtype":"m.text"},"ts":1529328683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if we should add the new CORP header to any whatwg.org pages? I'm kind of unclear on its utility for public sites.","msgtype":"m.text"},"ts":1529336173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the blog","msgtype":"m.text"},"ts":1529338704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Makes sense. But not for any of the specs?","msgtype":"m.text"},"ts":1529338754000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I hope we end up with a canonical set of advice like \"If your site is private, or public-but-uses-credentials, add X; if your site is public, add Y\".","msgtype":"m.text"},"ts":1529338804000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't think so, no private data","msgtype":"m.text"},"ts":1529338807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: yeah, I think that kind of advice is doable","msgtype":"m.text"},"ts":1529338829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: did you read Artur Janc's paper?","msgtype":"m.text"},"ts":1529338856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I skimmed it","msgtype":"m.text"},"ts":1529338873000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: thanks for the highlighter fix and the investigation of the widlparser bug","msgtype":"m.text"},"ts":1529361407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"once the widlparser bug fix is merged, I think we'","msgtype":"m.text"},"ts":1529361424000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1529361430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*I think we‚Äôll have the highlighter+wattsi combination working with 100% of the <pre> elements in the HTML spec","msgtype":"m.text"},"ts":1529361475000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Np. And if we can work around this perf thing, it won't even be noticable in the build. üòÄ","msgtype":"m.text"},"ts":1529361545000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah that would be great","msgtype":"m.text"},"ts":1529361581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yesterday I needed to make a further change to the wattsi sources to get it handle large input as expected","msgtype":"m.text"},"ts":1529361643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because of the huge CSS block at https://html.spec.whatwg.org/multipage/rendering.html#quotes","msgtype":"m.text"},"ts":1529361667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"needed to make wattsi buffer the highlighter output in chunks before being written back out to the generated spec","msgtype":"m.text"},"ts":1529361750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ahhhh, cool. If you can batch it it'll remove most of the time spent, I think.","msgtype":"m.text"},"ts":1529362217000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well the buffering I added so far didn‚Äôt seem to make any difference to the performance","msgtype":"m.text"},"ts":1529362365000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it‚Äôs just there to prevent a deadlock","msgtype":"m.text"},"ts":1529362377000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://wiki.freepascal.org/Executing_External_Programs#Reading_large_output","msgtype":"m.text"},"ts":1529362383000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Suppose the program writes a lot of data to the output. Then the output pipe becomes full and the called progam waits until the pipe has been read from. But the calling program doesn't read from it until the called program has ended. A deadlock occurs.","msgtype":"m.text"},"ts":1529362397000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah, and I'm talking with some friends who are doing some tests, and yeah, invoking the Python interpreter on a totally empty file still takes about 40ms per invocation.  Add in actually parsing my script and imports, and it's reasonable to jump up to 80ms per invocation, which is what we're apparently seeing (90s total, minus 2s for the actual execution, divided over 1100 invocations = 80ms of initialization per execution).","msgtype":"m.text"},"ts":1529362562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, I see, you're doing the opposite and chunking a single large input.","msgtype":"m.text"},"ts":1529362588000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1529362817000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"‚Äúinvoking the Python interpreter on a totally empty file still takes about 40ms per invocation‚Äù, that‚Äôs pretty surprising","msgtype":"m.text"},"ts":1529362897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I expect things like the import machinary and various other bits of the VM implemented in Python are loaded eagerly","msgtype":"m.text"},"ts":1529363246000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, this is why pure-Python CGI isn't very common. ^_^","msgtype":"m.text"},"ts":1529363482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh TabAtkins, another remaining fix that needs to be landed is for ensuring UTF-8 output","msgtype":"m.text"},"ts":1529363813000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/tabatkins/highlighter/pull/3 or whatever better way there might be to do that","msgtype":"m.text"},"ts":1529363834000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: so is there some way to make Python not load them eagerly?","msgtype":"m.text"},"ts":1529364170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or some way to mitigate it?","msgtype":"m.text"},"ts":1529364177000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1529364199000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1529364218000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, and anyway I still have to load Pygments each time, which is pretty big and apparently about another 40ms.","msgtype":"m.text"},"ts":1529364241000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1529364248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I just pushed a change that *should* handle the utf-8 (encoding back to a utf-8-encoded bytestring before printing) - let me know if it works. In any case, I'm out for the day; feel free to drop me comments here or in the GH issues and I'll get to them tonight or tomorrow.","msgtype":"m.text"},"ts":1529364300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1529364312000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1529364314000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]