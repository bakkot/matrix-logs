[
{"content":{"body":"TabAtkins: ping","msgtype":"m.text"},"ts":1413939225000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"TabAtkins: bikeshed is reporting \"ImportError: No module named six\"","msgtype":"m.text"},"ts":1413939245000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/zrm5b7sH","msgtype":"m.text"},"ts":1413939261000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"TabAtkins: Any ideas?","msgtype":"m.text"},"ts":1413939273000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"TabAtkins: It's on mac","msgtype":"m.text"},"ts":1413939291000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"let me go see!","msgtype":"m.text"},"ts":1413939304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"making python do anything right is kind of amazing","msgtype":"m.text"},"ts":1413939621000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: just got a new mac so it could be that something is in a bad state","msgtype":"m.text"},"ts":1413939830000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Argh, having trouble entering my chroot now, probably caused by the most recent update to chromeos","msgtype":"m.text"},"ts":1413939845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yeah, I haven't touched that part of the code. You followed the install instructions?","msgtype":"m.text"},"ts":1413939871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Possible that six wasn't part of the install instructions, but it worked because everyone already had it on mac or something.","msgtype":"m.text"},"ts":1413939888000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes. https://github.com/tabatkins/bikeshed/blob/master/docs/install.md","msgtype":"m.text"},"ts":1413939931000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"TabAtkins: six should just come as a dependency when you install html5lib","msgtype":"m.text"},"ts":1413939953000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah, it should. Weird that it's not.","msgtype":"m.text"},"ts":1413939969000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the state of Python on OS X makes me sad","msgtype":"m.text"},"ts":1413940008000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I did \"sudo port install py27-six\"","msgtype":"m.text"},"ts":1413940017000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"now it works :-)","msgtype":"m.text"},"ts":1413940019000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"it's not that python is bad on osx, it's just bad everywhere","msgtype":"m.text"},"ts":1413940025000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"this is why nobody likes writing python :(","msgtype":"m.text"},"ts":1413940034000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: Except, the exact opposite.","msgtype":"m.text"},"ts":1413940043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cabanier: I'll amend the docs.","msgtype":"m.text"},"ts":1413940053000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: disagree","msgtype":"m.text"},"ts":1413940054000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: thanks!","msgtype":"m.text"},"ts":1413940064000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"dart has a decent package manager, go sort of has something vaguely like a package manager, node has a pretty great package manager","msgtype":"m.text"},"ts":1413940097000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"all 3 make that stuff so much less of a headache","msgtype":"m.text"},"ts":1413940106000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Python has a decent package manager too.","msgtype":"m.text"},"ts":1413940132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"On Linux.","msgtype":"m.text"},"ts":1413940135000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it really doesn't, I've been using python on linux :(","msgtype":"m.text"},"ts":1413940147000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"So have I.","msgtype":"m.text"},"ts":1413940184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there are always going to be a few people who are really into whatever language, even if it's haskell or rust","msgtype":"m.text"},"ts":1413940384000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I'm just saying, I've never had problems with pip on linux.","msgtype":"m.text"},"ts":1413940485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I've done a year of off-and-on heavy dev on Bikeshed.","msgtype":"m.text"},"ts":1413940498000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm just saying, the barrier to entry and the maintenance headache for this stuff should rightfully be a lot less than it is","msgtype":"m.text"},"ts":1413940721000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"these are solved problems in general","msgtype":"m.text"},"ts":1413940737000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Maybe so, but I haven't seen these problems you're alluding to. ^_^","msgtype":"m.text"},"ts":1413940751000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"must be nice :> i never saw them with mozilla's python stuff, but i see them with every flask app ive ever seen","msgtype":"m.text"},"ts":1413940806000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or any non-easy_install library that isnt dealt with by someone else","msgtype":"m.text"},"ts":1413940871000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anything that wants to use venv","msgtype":"m.text"},"ts":1413940909000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"\"these are solved problems in general\" [citation needed]","msgtype":"m.text"},"ts":1413942632000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1413944547000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"jdaggett_: hey","msgtype":"m.text"},"ts":1413964899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: had a design question for you but ended up talking about it with mike smith instead! :)","msgtype":"m.text"},"ts":1413964982000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"annevk: you're in london these days?","msgtype":"m.text"},"ts":1413964993000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"jdaggett_: Zürich","msgtype":"m.text"},"ts":1413965001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sweet!","msgtype":"m.text"},"ts":1413965016000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"annevk: have you glanced over the font loading api recently? http://dev.w3.org/csswg/css-font-loading","msgtype":"m.text"},"ts":1413965079000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"annevk: wondering if it might be better to structure the spec so that the algorithms were grouped together more clearly","msgtype":"m.text"},"ts":1413965120000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"That's up to you guys really","msgtype":"m.text"},"ts":1413965173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only thing I'd try to make sure of is that algorithms that are also used by CSS syntax (not the API) are separate so they can be referenced and used from multiple places","msgtype":"m.text"},"ts":1413965207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, there's \"fudge it\" language -- User agents can initiate font loads on their own, whenever they determine that a given font face is necessary to render something on the page. When this happens, they must act as if they had called the corresponding FontFace’s load() method described here.","msgtype":"m.text"},"ts":1413965390000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1413965410000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"Seems reasonable I guess, although that language does not quite make it clear whether or not the load() method can be overridden by web developers","msgtype":"m.text"},"ts":1413965475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmmm, interesting","msgtype":"m.text"},"ts":1413965555000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"jgraham: I find it easier to have a separate algorithm that load() invokes and that the other CSS spec can invoke","msgtype":"m.text"},"ts":1413965584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jdaggett_: ^","msgtype":"m.text"},"ts":1413965589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jdaggett_: but you can also talk about the object's initial property value; XMLHttpRequest does something like that for using JSON.parse()","msgtype":"m.text"},"ts":1413965622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that sounds like a better thing","msgtype":"m.text"},"ts":1413965626000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"annevk: btw, if a spec says (1) fire a blahblah event at object X (2) fulfill promise foobar","msgtype":"m.text"},"ts":1413965688000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"annevk: does that imply anything about the order of the event handler and resolve methods are executed?","msgtype":"m.text"},"ts":1413965741000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"jgraham: if that is all it says the event would fire immediately and the promise callbacks would be run later (before end-of-task)","msgtype":"m.text"},"ts":1413965785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(or at end-of-task, depends on how you view things I guess)","msgtype":"m.text"},"ts":1413965801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mmm, ok","msgtype":"m.text"},"ts":1413965808000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"still isn't jdaggett_ :p","msgtype":"m.emote"},"ts":1413966712000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1413966739000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"nor should you ever want to be...","msgtype":"m.text"},"ts":1413966752000,"senderName":"jdaggett_","senderId":"jdaggett_@irc"},
{"content":{"body":"oh sorry :/","msgtype":"m.text"},"ts":1413968219000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't see the relevance of https://github.com/slightlyoff/ServiceWorker/issues/518#issuecomment-60060589 - wrong ticket?","msgtype":"m.text"},"ts":1413971488000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't want ServiceWorkerClient as an object per 512 / 511","msgtype":"m.text"},"ts":1413971554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahh, but ServiceWorkerClients is different","msgtype":"m.text"},"ts":1413971585000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, it's all of them","msgtype":"m.text"},"ts":1413971599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: deleted comment","msgtype":"m.text"},"ts":1413971620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it's where the getters for the clients, and things like reloadAll (will) live","msgtype":"m.text"},"ts":1413971630000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: still unclear how that makes sense for workers though","msgtype":"m.text"},"ts":1413971657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: reload that is","msgtype":"m.text"},"ts":1413971667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, reloadAll has more problems than just that. It's a good feature, but needs way more thought, that's why I removed it.","msgtype":"m.text"},"ts":1413971738000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm, perhaps a dedicated worker cannot be a client due to its API","msgtype":"m.text"},"ts":1413972031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: a dedicated worker assumes it only has a relationship with a window","msgtype":"m.text"},"ts":1413972077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess it could still talk to Fetch directly, with a capability given by the Window/Document","msgtype":"m.text"},"ts":1413972112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which bit of its API gets in the way?","msgtype":"m.text"},"ts":1413973749000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: a dedicated worker assumes it's associated with a single port","msgtype":"m.text"},"ts":1413973822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, so another env wouldn't be able to post messages to it?","msgtype":"m.text"},"ts":1413973861000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, the logic doesn't really support that","msgtype":"m.text"},"ts":1413973888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you'd effectively turn it into a shared worker at that point","msgtype":"m.text"},"ts":1413973903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"afaict, anyway","msgtype":"m.text"},"ts":1413973911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll continue assuming it's just windows & sharedworkers, we can add dedicated workers in if needed","msgtype":"m.text"},"ts":1413974123000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(I say 'continue', I'm just about to get onto it, so questions incoming)","msgtype":"m.text"},"ts":1413974156000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, given the way the dedicated worker API works, that seems fine","msgtype":"m.text"},"ts":1413974227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We'll just have to learn to appreciate that there's not really any governing logic to these things","msgtype":"m.text"},"ts":1413974265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I missed http://www.w3.org/blog/2014/10/decision-by-consensus-or-by-informed-editor-which-is-better/ I hope Jeff doesn't actually think the W3C enables those five things","msgtype":"m.text"},"ts":1413974638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk what i am worried about with workers is that clients need to send messages to them. since js is single threaded, wouldn't that mean that if a worker has a huge dataset to work on that dataset would have to be messaged to them and interface would freeze in the meantime?","msgtype":"m.text"},"ts":1413974843000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: workers run in a distinct thread","msgtype":"m.text"},"ts":1413974910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk yes, but the messaging of the huge dataset could prove problematic, wouldn't it?","msgtype":"m.text"},"ts":1413974960000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"like the communication of and from to the worker","msgtype":"m.text"},"ts":1413974965000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: depends on how it's done, if you can transfer rather it, you might be okay","msgtype":"m.text"},"ts":1413974987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/rather//","msgtype":"m.text"},"ts":1413974993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"data is copied, not shared","msgtype":"m.text"},"ts":1413975013000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i have to benchmark this in real-world cases","msgtype":"m.text"},"ts":1413975032000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: no, you can actually transfer the data rather than copy it if you use an ArrayBuffer","msgtype":"m.text"},"ts":1413975121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1413975262000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"thx annevk","msgtype":"m.text"},"ts":1413975264000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"\"Mark Day: the usual model is that W3C develops stuff; some of it is deemed mature enough to transition over to another, larger or better-trained body like IETF. To my memory it hasn't gone the other way around.\"","msgtype":"m.text"},"ts":1413978181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://www.ietf.org/proceedings/44/44th-99mar-ietf-121.html","msgtype":"m.text"},"ts":1413978184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yay, SSLv3 disabled: https://www.ssllabs.com/ssltest/analyze.html?d=annevankesteren.nl","msgtype":"m.text"},"ts":1413978468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whatwg.org still has some ways to go; server not updated yet I guess","msgtype":"m.text"},"ts":1413978486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If I want to get the url of a client, is it \"the client's global object's location's href\"?","msgtype":"m.text"},"ts":1413983320000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it depends on the type of client","msgtype":"m.text"},"ts":1413983356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we could ask Hixie to put an accessor on the environment settings object","msgtype":"m.text"},"ts":1413983375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but e.g. if the global object is a Window, you want it's associated document's url.","msgtype":"m.text"},"ts":1413983404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that would help. Although don't all types of client have a location?","msgtype":"m.text"},"ts":1413983408000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"workers & windows have .location","msgtype":"m.text"},"ts":1413983446000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes, but that's an API, not an underlying concept","msgtype":"m.text"},"ts":1413983458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and e.g. for a Window would give the address of the active document, which might not be correct I suppose","msgtype":"m.text"},"ts":1413983480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: struggling to find the window concept","msgtype":"m.text"},"ts":1413983579000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or is it \"browsing context\"?","msgtype":"m.text"},"ts":1413983595000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's global object","msgtype":"m.text"},"ts":1413983609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: a browsing context has a history, so that's not quite it","msgtype":"m.text"},"ts":1413983626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I have the feeling Hixie could refactor it a bit more, though I understand why he would be hesitant about that","msgtype":"m.text"},"ts":1413983672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so I'm at https://html.spec.whatwg.org/multipage/webappapis.html#environment-settings-object, looking for a way to get the URL, I guess \"global object\" isn't it, because that only gives me APIs and not concepts. Base URL will (presumably) be affected by <base>, so that isn't what I want. Getting the url from the browsing context is messy when it","msgtype":"m.text"},"ts":1413983997000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"comes to navigations and window.open","msgtype":"m.text"},"ts":1413983997000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thinking out loud, but struggling to get to a url. Am I at least thinking about it in the right way?","msgtype":"m.text"},"ts":1413984032000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or have I discounted the right answer by mistake?","msgtype":"m.text"},"ts":1413984045000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's fine to inspect objects","msgtype":"m.text"},"ts":1413984139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the problem with Location is that if you look at the API, you'll find it returns the active document's url","msgtype":"m.text"},"ts":1413984156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: whereas here we should probably return global object's associated document's url","msgtype":"m.text"},"ts":1413984174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also, we don't typically say return the value from location.href or some such, but rather just get at the value that API would return (though in this case that would be wrong)","msgtype":"m.text"},"ts":1413984209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: active document seems fine. It's the document in the history sequence that's currently in use right?","msgtype":"m.text"},"ts":1413987822000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: or does it get broken by child browsing contexts and window.open?","msgtype":"m.text"},"ts":1413987863000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"broken\" in terms of my intended use","msgtype":"m.text"},"ts":1413987875000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I've replaced client url with: <a href=\"https://fetch.spec.whatwg.org/#concept-request-client\">client</a>'s <a href=\"https://html.spec.whatwg.org/multipage/webappapis.html#global-object\">global object</a>'s <a href=\"https://html.spec.whatwg.org/multipage/browsers.html#location\">location</a>'s underlying <a","msgtype":"m.text"},"ts":1413988664000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"href=\"https://url.spec.whatwg.org/#concept-urlutils-url\">URL</a>","msgtype":"m.text"},"ts":1413988664000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I can farm this out to an algorithm section, \"Get URL From Client\" or whatever","msgtype":"m.text"},"ts":1413988781000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, I'll do that","msgtype":"m.text"},"ts":1413988804000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"disconnects his thoughts from #whatwg for a moment","msgtype":"m.emote"},"ts":1413988825000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that's not an actual thing though","msgtype":"m.text"},"ts":1413989861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: just file a bug on Hixie to attach such a thing to environment setting objects","msgtype":"m.text"},"ts":1413989881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what isn't a thing?","msgtype":"m.text"},"ts":1413989910000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"location's underlying URL\"","msgtype":"m.text"},"ts":1413989936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: But location implements URLUtils, and that has the concept of a URL. Or can I not go from API to concept?","msgtype":"m.text"},"ts":1413989986000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: as I said, location's url is the one from the active document, we don't want that here","msgtype":"m.text"},"ts":1413990034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: haven't figured out when that breaks. The active document is the currently used document in the history sequence, right? When isn't that what we want? Or does it get broken (from what I want) by child browsing contexts and window.open?","msgtype":"m.text"},"ts":1413990135000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: because at that point it's a different document","msgtype":"m.text"},"ts":1413990173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g. if you navigate from a.com to b.com, the active document changes, but we don't want the URL to change in that case","msgtype":"m.text"},"ts":1413990199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that'd be pretty weird","msgtype":"m.text"},"ts":1413990209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: how does appcache have path-based security?","msgtype":"m.text"},"ts":1413991246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25699","msgtype":"m.text"},"ts":1413991631000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah okay, is that actually implemented?","msgtype":"m.text"},"ts":1413991672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nah, we've got someone assigned to do it, but not done yet","msgtype":"m.text"},"ts":1413991743000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so maybe it's not a problem at all?","msgtype":"m.text"},"ts":1413991761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I could already take-over jsbin's 404 pages using appcache","msgtype":"m.text"},"ts":1413991842000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"will add that to the issue","msgtype":"m.text"},"ts":1413991910000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: visit https://jsbin.com/yisiju/quiet, then visit https://jsbin.com/blahblahwhatever","msgtype":"m.text"},"ts":1413992156000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: why does it come back with \" Remy smells of poo \"?","msgtype":"m.text"},"ts":1413992262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1413992296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've taken over al 404s BY THE POWER OF APPCACHE","msgtype":"m.text"},"ts":1413992297000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"okay you that's bad","msgtype":"m.text"},"ts":1413992298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, mix this in with a bit of MITM and… well… appcache should have been https only","msgtype":"m.text"},"ts":1413992395000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We were gonna disable appcache I think","msgtype":"m.text"},"ts":1413992417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder why that hasn't happened yet","msgtype":"m.text"},"ts":1413992422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Jonas said \"as soon as serviceworker ships\"","msgtype":"m.text"},"ts":1413992432000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: i bet you feel like one of those l33t \"attackers\" you hear so much about, now.","msgtype":"m.text"},"ts":1413993475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"goes off to pwn something","msgtype":"m.emote"},"ts":1413993543000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: AIUI all you actually need to do is own evil.com. It's the web equivalent of having a secret base inside a volcano.","msgtype":"m.text"},"ts":1413993603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk:  JakeA: e.g. if you navigate from http://a.com/ to http://b.com/, the active document changes, but we don't want the URL to change in that case <— Doesn't this break principles of showing appropriate content for the current url? Or is this some weirdness where only the canonical meta tag updates?","msgtype":"m.text"},"ts":1413993753000,"senderName":"boogy","senderId":"boogy@irc"},
{"content":{"body":"annevk: also, if the user navigates, don't we want the url to change?","msgtype":"m.text"},"ts":1413993886000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(I think I'm hitting the spec writing learning curve)","msgtype":"m.text"},"ts":1413993902000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"boogy: I'm not sure what you're saying","msgtype":"m.text"},"ts":1413994357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if the user navigates the global object changes as well, so you get a different place to postMessage to","msgtype":"m.text"},"ts":1413994383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and the document changes","msgtype":"m.text"},"ts":1413994408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: as I said, Location is weird","msgtype":"m.text"},"ts":1413994413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what is the use-case where someone is navigating from domain.tld to domain2.tld without the url changing but the content changing?","msgtype":"m.text"},"ts":1413994474000,"senderName":"boogy","senderId":"boogy@irc"},
{"content":{"body":"boogy: the point is that the URL from domain.tld has not changed","msgtype":"m.text"},"ts":1413994521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"boogy: so when we're talking with the content from domain.tld, we should not report the URL from some different content","msgtype":"m.text"},"ts":1413994541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess this is why we considered navigation creating a new client and killing the old","msgtype":"m.text"},"ts":1413994592000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: (by we I mean serviceworker client). Will work from home tomorrow so I can actually get this done. Today was mostly serviceworker support and meetings :(","msgtype":"m.text"},"ts":1413994639000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if I go to <a href=/b></a> from /a you'd expect /b to have its own Document (and therefore its own Window), but you wouldn't expect the client from /a to report /b","msgtype":"m.text"},"ts":1413994704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I don't think we want to make a client an actual browsing context with history and everything... though it would have been good if someone had thought about this while we created service workers","msgtype":"m.text"},"ts":1413994764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not fully understanding the context here. Are you discussing the reporting as it relates to service workers? In my humble opinion, I very much would not expect content from /b to report as /a if that content produced a new document load.","msgtype":"m.text"},"ts":1413994850000,"senderName":"boogy","senderId":"boogy@irc"},
{"content":{"body":"as a web author, nor as an educated user.","msgtype":"m.text"},"ts":1413994901000,"senderName":"boogy","senderId":"boogy@irc"},
{"content":{"body":"I don't think there's actual disagreement, just not sufficient understanding about how self.location actually works","msgtype":"m.text"},"ts":1413994959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shouldn't it report the information most relevant to the document content?","msgtype":"m.text"},"ts":1413995209000,"senderName":"boogy","senderId":"boogy@irc"},
{"content":{"body":"boogy: it should do what it has always done so it doesn't break sites","msgtype":"m.text"},"ts":1413995603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - any objection to me proposing to Art that WebAppsWG drop their outdated copy of Fullscreen, and simply instruct all dependent parties to reference the WHATWG living spec for Fullscreen?","msgtype":"m.text"},"ts":1413995644000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: I need to get the url on navigate (to see which serviceworker registration to assign) and as a snapshot when we get clients (for getAll, and request.client). Doesn't this avoid the changing url issue?","msgtype":"m.text"},"ts":1413995664000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tantek: yeah, I thought the CSS WG already decided as much","msgtype":"m.text"},"ts":1413995713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - apparently we have to tell all the WGs","msgtype":"m.text"},"ts":1413995842000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Isn't a WG just a support forum?","msgtype":"m.text"},"ts":1413995861000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger - a very good question.","msgtype":"m.text"},"ts":1413995878000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: tell 'm","msgtype":"m.text"},"ts":1413995911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now that I'm co-chairing one ( Social Web WG ) I'm beginning to believe that it might be mostly a support forum for those who have ideas but don't actually build anything.","msgtype":"m.text"},"ts":1413995921000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Ms2ger - WGs sometimes can also serve as honeypots for counter-productive individuals as well.","msgtype":"m.text"},"ts":1413995957000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: might want to reference http://lists.w3.org/Archives/Public/www-style/2014Oct/0295.html","msgtype":"m.text"},"ts":1413996006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk - thanks much. that's very helpful.","msgtype":"m.text"},"ts":1413996079000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I will cc: you on my support forum post.","msgtype":"m.text"},"ts":1413996087000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"the new heartbeat requirement from W3C\"","msgtype":"m.text"},"ts":1413996509000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is that new? I recall it existing when I still edited in webapps","msgtype":"m.text"},"ts":1413996526000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: per http://www.w3.org/2014/Process-20140801/#changes it's not","msgtype":"m.text"},"ts":1413996611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@TabAtkins: ping?","msgtype":"m.text"},"ts":1413997048000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: pong","msgtype":"m.text"},"ts":1413997070000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do I need to do anything to enable railroad diagrams?","msgtype":"m.text"},"ts":1413997086000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"email : wiki :: TR : living-spec","msgtype":"m.text"},"ts":1413997088000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rubys: No, you just write them in <pre class=railroad> blocks.","msgtype":"m.text"},"ts":1413997102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"email-lists rather","msgtype":"m.text"},"ts":1413997103000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"What did I do wrong then?  http://intertwingly.net/tmp/url.bs produces http://intertwingly.net/tmp/url.html#url-railroad","msgtype":"m.text"},"ts":1413997122000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"tantek: But I can't respond to a fixed version of the wiki!","msgtype":"m.text"},"ts":1413997125000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: But I can't file issues against a living spec!","msgtype":"m.text"},"ts":1413997157000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: (that was the joke)","msgtype":"m.text"},"ts":1413997168000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I need more coffee :D","msgtype":"m.text"},"ts":1413997178000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rubys: Ah, undocumented requirement that the <pre> be on a line by itself.  Sorry about that.","msgtype":"m.text"},"ts":1413997297000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'm considering putting a WARNING STATIC SNAPSHOT header on all my posts to email lists.","msgtype":"m.text"},"ts":1413997303000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"which then says to reference the LIVING VERSION HERE (insert wiki URL)","msgtype":"m.text"},"ts":1413997319000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(All of the pre-block stuff is done in a preprocessing step before HTML parsing occurs.)","msgtype":"m.text"},"ts":1413997325000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: The <pre> tag, that is.  Don't put the contents on the same line, obvs.","msgtype":"m.text"},"ts":1413997349000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks.  can we talk about your comments on my conversion here, or would you prefer I respond in github?","msgtype":"m.text"},"ts":1413997375000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"We can do here, but gimme 20m, as I need to make my wife's lunch.","msgtype":"m.text"},"ts":1413997389000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1413997435000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"TabAtkins: speaking of the <pre> tag, whatever happened to your polyfill for the \"separator\" attribute on the <pre> tag? http://krijnhoetmer.nl/irc-logs/whatwg/20090903#l-1450","msgtype":"m.text"},"ts":1413997499000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: docs on separator attribute?","msgtype":"m.text"},"ts":1413997528000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: ^^^ click URL","msgtype":"m.text"},"ts":1413997538000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"it's a way to get CSV functionality into HTML and the DOM","msgtype":"m.text"},"ts":1413997553000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"It never happened","msgtype":"m.text"},"ts":1413997567000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tantek: i had seen the line you highlighted and looked at http://www.ietf.org/rfc/rfc4180.txt but I didn’t see what it does. I don’t yet get what csv functionality would look like in a pre.","msgtype":"m.text"},"ts":1413997672000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"But if I can help, I will!","msgtype":"m.text"},"ts":1413997681000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: <pre separator=\"\\t\"> (copy paste a tab-separated CSV text file here) </pre>","msgtype":"m.text"},"ts":1413997706000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and if there's a header row then","msgtype":"m.text"},"ts":1413997713000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(header row in the CSV)","msgtype":"m.text"},"ts":1413997720000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"<pre separator=\"\\t\" header> (copy paste a tab-separated CSV text file here) </pre>","msgtype":"m.text"},"ts":1413997726000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"implementation: parse the CSV per that RFC, and add a Table DOM to the pre element accordingly, so it can be styled with CSS table pseudo-elements and accessed by scripts.","msgtype":"m.text"},"ts":1413997794000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"waits for dglazkov to show up and say something about perfect opportunity for a Web Component ;)","msgtype":"m.emote"},"ts":1413997839000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: http://lists.w3.org/Archives/Public/public-webapps/2014OctDec/0213.html","msgtype":"m.text"},"ts":1413998115000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"lolol","msgtype":"m.text"},"ts":1413998206000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: do you use CSV files ever? do you like CSV as a format?","msgtype":"m.text"},"ts":1413998256000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hardy. Yes.","msgtype":"m.text"},"ts":1413998297000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"And it also sounds like the perfect opportuntiy for a web component because it seems like <pre> should never format content.","msgtype":"m.text"},"ts":1413998336000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"<pre> always formats content","msgtype":"m.text"},"ts":1413998357000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(unless you style it explicitly not to)","msgtype":"m.text"},"ts":1413998367000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I thought it tries to display it as raw as possible, which is why I doesn’t ignore whitespace and defaults to monospace?","msgtype":"m.text"},"ts":1413998393000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"rubys: back","msgtype":"m.text"},"ts":1413998413000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: Still exists in the annals of my site.","msgtype":"m.text"},"ts":1413998429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: how do I hand-covert an external link?  See also https://github.com/rubys/url/commit/e617fd66135bd75b1052700081de5319914168a5#commitcomment-8262562","msgtype":"m.text"},"ts":1413998685000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"TabAtkins: Cool URLs and all that. Nice.","msgtype":"m.text"},"ts":1413998687000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"JonathanNeal: check out Tab's prototype http://www.xanthir.com/etc/csv.html","msgtype":"m.text"},"ts":1413998708000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: heh","msgtype":"m.text"},"ts":1413998728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, glad I can help.","msgtype":"m.text"},"ts":1413998764000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rubys: You see if that link exists in Bikeshed's database today (`bikeshed debug --print-refs-for=\"foo\"` isn't great to read, but it has all the necessary data), and if so, you specify what you need to point to it.","msgtype":"m.text"},"ts":1413998768000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If the link doesn't exist today, you can add custom anchors with an anchors.json file.","msgtype":"m.text"},"ts":1413998818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't always post to email lists, but when I do, I include at least one level of self-referential meta.","msgtype":"m.text"},"ts":1413998833000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"And let me know, so that I can get Shepherd to start parsing that spec (assuming it has the right metadata for Bikeshed/Shepherd).","msgtype":"m.text"},"ts":1413998846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And if it doesn't, I can hopefully but the editors to add it.)","msgtype":"m.text"},"ts":1413998855000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: what am I misunderstanding about <pre> that it should format content when it means \"preformatted text”? Why not use a new element?","msgtype":"m.text"},"ts":1413998895000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"csv files are meaningfully  readable as preformatted text.  They're *more* readable as tables, of course.","msgtype":"m.text"},"ts":1413998923000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: you could use a new element. We used <pre> because <pre> is short for \"preformatted text\", and CSV/TSV is simply a special case of preformatted text, thus it made sense to re-use.","msgtype":"m.text"},"ts":1413998936000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"So if you wanted something that worked in the absence of script, <pre> is what you use.","msgtype":"m.text"},"ts":1413998941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Good fallback and all that.","msgtype":"m.text"},"ts":1413998948000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, ok, if I substitute 'css' for 'foo', I get some JSON.  I take it I should mimic that format and add it to biblio.json (which should be inlined?)","msgtype":"m.text"},"ts":1413998962000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Right. 1) Good fallback.  2) minting new elements has greater cognitive cost than adding attributes to an existing element","msgtype":"m.text"},"ts":1413998979000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Well, I’m all for that, and then I would ask that in the future it work with other preformatted types, like JSON, and eventually replace syntax highlighters altogether.","msgtype":"m.text"},"ts":1413998986000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"anchors.json.  Lemme check and see if I'm looking for inline anchors yet, one sec.","msgtype":"m.text"},"ts":1413998990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: JSON already has <script> tags for embedding it.","msgtype":"m.text"},"ts":1413999011000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: That's for *using* json, not displaying it.","msgtype":"m.text"},"ts":1413999028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, but if I want to display it in a meaningful way, like CSV.","msgtype":"m.text"},"ts":1413999029000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"whereas <pre> is purely for expectedly *human* readable content","msgtype":"m.text"},"ts":1413999030000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: true. JonathanNeal if you want to display some machine-readable code like JSON, we have an element for that. <code>","msgtype":"m.text"},"ts":1413999076000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"just need a \"type\" attribute","msgtype":"m.text"},"ts":1413999092000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: agreed on both points, nice","msgtype":"m.text"},"ts":1413999101000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"rubys: Ah, yeah, I'm not yet recognizing inline <pre class=anchors> data.  I'll fix that.  For now, external anchors.json file will work.","msgtype":"m.text"},"ts":1413999328000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: <code type=\"application/json\">{ \"items\": [{ \"type\": [\"h-card\"], \"properties\": { \"url\": [\"http://tantek.com/\"], \"name\": [\"Tantek \\u00c7elik\"]}}]}</code>","msgtype":"m.text"},"ts":1413999366000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rubys: TabAtkins: FWIW I just use <a href=\"my-blog-post-here\">text</a>","msgtype":"m.text"},"ts":1413999489000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I've been thinking of separating out the \"default impl\" of the FontFace/etc methods from the actual method itself.  The intention is that UA-sparked calls use the *initial* value of the property.","msgtype":"m.text"},"ts":1413999506000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Experience shows that forcing people to do cross-spec links with full href just means, in practice, that people almost never do cross-spec links.","msgtype":"m.text"},"ts":1413999546000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As evidence, the CSSWG moved from \"very few cross-spec links\" to \"omg, so many cross-spec links\" as specs switched to Bikeshed.","msgtype":"m.text"},"ts":1413999568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, I meant more for e.g. the revealing constructor pattern link in https://streams.spec.whatwg.org/#rs-intro","msgtype":"m.text"},"ts":1413999581000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, sure, if you want a one-off link.","msgtype":"m.text"},"ts":1413999599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But if you'll be referencing something multiple times in a spec, you want Bikeshed to know about it so you can use short syntax.","msgtype":"m.text"},"ts":1413999621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ValueError: dictionary update sequence element #0 has length 9; 2 is required","msgtype":"m.text"},"ts":1413999750000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"...I have never seen that happen before.","msgtype":"m.text"},"ts":1413999775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At the moment, my anchors.json is exactly the output from bikeshed debug --print-refs-for=\"css\", unmodified","msgtype":"m.text"},"ts":1413999804000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"last line in the traceback:","msgtype":"m.text"},"ts":1413999836000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"  File \"/home/rubys/git/bikeshed/bikeshed/ReferenceManager.py\", line 61, in initializeRefs","msgtype":"m.text"},"ts":1413999837000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    self.refs.update(json.load(fh))","msgtype":"m.text"},"ts":1413999837000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"TabAtkins: as an avid reader of standards, I usually understand the intent, but I try to read them in such a way that I don't","msgtype":"m.text"},"ts":1413999864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, kk.  That won't work; the output of print-refs-for isn't designed for direct input.  Sorry this is kinda messy.","msgtype":"m.text"},"ts":1413999872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: got an example of a working anchors.json anywhere?","msgtype":"m.text"},"ts":1413999951000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"The top-level needs to be a dict of link text to anchor data, not an array.","msgtype":"m.text"},"ts":1413999989000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is really frustrated that the ChromeOS update he accidentally applied last night killed his crouton, because it means he CAN'T FIX ANYTHING AT ALL RIGHT NOW >_< >_< >_<","msgtype":"m.emote"},"ts":1414000023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: does that mean that I don't need the spec= attribute?","msgtype":"m.text"},"ts":1414000204000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: Yes, you rarely need to specify the spec; usually just specifying the type and maybe the for is enough.","msgtype":"m.text"},"ts":1414000229000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'm really longing for a working example.  My current error:","msgtype":"m.text"},"ts":1414000553000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    self.refs[term] = [ref for ref in refs if ref['shortname'].rstrip(\"\\n\")!=self.specName]","msgtype":"m.text"},"ts":1414000558000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"TypeError: string indices must be integers","msgtype":"m.text"},"ts":1414000559000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"contents of anchors.json (clearly bogus values but should be well-formed):","msgtype":"m.text"},"ts":1414000581000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"{","msgtype":"m.text"},"ts":1414000583000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"  \"utf-8-decoder\" : {","msgtype":"m.text"},"ts":1414000584000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"status\": \"TR\\n\",","msgtype":"m.text"},"ts":1414000584000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"export\": false,","msgtype":"m.text"},"ts":1414000584000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"for\": [],","msgtype":"m.text"},"ts":1414000584000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"level\": \"3\\n\",","msgtype":"m.text"},"ts":1414000584000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"url\": \"http://www.w3.org/TR/css3-conditional/#CSS-interface\\n\",","msgtype":"m.text"},"ts":1414000584000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"normative\": true,","msgtype":"m.text"},"ts":1414000585000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"shortname\": \"css-conditional\\n\",","msgtype":"m.text"},"ts":1414000585000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"type\": \"dfn\\n\",","msgtype":"m.text"},"ts":1414000586000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"spec\": \"encoding\\n\"","msgtype":"m.text"},"ts":1414000586000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"  }","msgtype":"m.text"},"ts":1414000587000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"ok, that was throttled.  Trying again in parts:","msgtype":"m.text"},"ts":1414000630000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"{","msgtype":"m.text"},"ts":1414000638000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"  \"utf-8-decoder\" : {","msgtype":"m.text"},"ts":1414000638000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"status\": \"TR\\n\",","msgtype":"m.text"},"ts":1414000638000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1414000640000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"type\": \"dfn\\n\",","msgtype":"m.text"},"ts":1414000647000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"spec\": \"encoding\\n\"","msgtype":"m.text"},"ts":1414000648000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"  }","msgtype":"m.text"},"ts":1414000648000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1414000648000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"one of the elided lines reads:","msgtype":"m.text"},"ts":1414000683000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"    \"shortname\": \"css-conditional\\n\",","msgtype":"m.text"},"ts":1414000684000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: No one's ever used it, and I am incapable of producing one for you at the moment, as in trying to get my Linux working again.","msgtype":"m.text"},"ts":1414000692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, in that case, Dominic's suggestion wins. :-)","msgtype":"m.text"},"ts":1414000711000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"The real answer is \"get all the specs you reference to add the right metadata, then we'll get Shepherd to start parsing then and everyone benefits\".","msgtype":"m.text"},"ts":1414000763000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Autolinking is an ecosystem thing that doesn't work great for the first few specs in a given clique that try to use it.","msgtype":"m.text"},"ts":1414000826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's *awesome* for CSS now, since everyone generates thee right metadata.","msgtype":"m.text"},"ts":1414000878000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Converting encoding: doable.  Converting html and IDNA; https://www.youtube.com/watch?v=zGxwbhkDjZM :-)","msgtype":"m.text"},"ts":1414000879000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah...","msgtype":"m.text"},"ts":1414000890000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In any case, hard-code hrefs for now; and I'll update to use anchors when you can provide a working example.","msgtype":"m.text"},"ts":1414000974000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Kk!","msgtype":"m.text"},"ts":1414000991000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: just thinking out loud, why is anchors needed?  Shouldn't one or more of the following 'just work'?","msgtype":"m.text"},"ts":1414001259000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"<a spec=encoding>utf-8</a> or <a spec=dom title=concept-attribute-value>attribute value</a>?","msgtype":"m.text"},"ts":1414001289000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Only if Bikeshed knows about those specs, which I don't think it does, currently.","msgtype":"m.text"},"ts":1414001308000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but those specs are in my biblio.json","msgtype":"m.text"},"ts":1414001323000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Irrelevant - that's a different system entirely.","msgtype":"m.text"},"ts":1414001333000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Biblio and autolinking have no connection.","msgtype":"m.text"},"ts":1414001343000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Probably should, but I inherited some legacy biblio systems that are terrible at naming specs.)","msgtype":"m.text"},"ts":1414001366000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'd even settle for <a biblio-spec=encoding>utf-8</a>","msgtype":"m.text"},"ts":1414001428000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Still won't help, because if Bikeshed doesn't know the spec, it doesn't know the anchors for that spec.","msgtype":"m.text"},"ts":1414001511000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What I meant by that is \"create a href by taking the specified spec's href from biblio, and add a hash with the title (computed or provided)\"","msgtype":"m.text"},"ts":1414001670000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I haven't considered shorter methods for things that arent' in the autolink database yet.  I'll think on it.","msgtype":"m.text"},"ts":1414001890000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Found the dataloss issue:","msgtype":"m.text"},"ts":1414002020000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"\"<code title>></code>\", <!-- 0x3E -->","msgtype":"m.text"},"ts":1414002022000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"This will fix it:","msgtype":"m.text"},"ts":1414002036000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"\"<code title>&gt;</code>\", <!-- 0x3E -->","msgtype":"m.text"},"ts":1414002043000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"That's weird.","msgtype":"m.text"},"ts":1414002065000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That really shouldn't be an issue, though.","msgtype":"m.text"},"ts":1414002192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Note that you dont' need an emtpy title there.","msgtype":"m.text"},"ts":1414002197000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bikeshed only treats <a> and <i> as autolinks.","msgtype":"m.text"},"ts":1414002208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The former only when the element lacks an href attribute, and I'm going to turn off the latter by default.)","msgtype":"m.text"},"ts":1414002252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Holy crap, when you don't update your system for a few months, a full update takes a while.","msgtype":"m.text"},"ts":1414002284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what OS?","msgtype":"m.text"},"ts":1414002324000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"And I'm back with a workiong Linux, yay!","msgtype":"m.text"},"ts":1414002325000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ubuntu on Chromebook.","msgtype":"m.text"},"ts":1414002336000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tyoshino________: since you seem to be awake (!?) would love a review of https://github.com/whatwg/streams/pull/234#issuecomment-60016461","msgtype":"m.text"},"ts":1414004674000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So, any of you Google people happen to have an Inbox invite to spare? :)","msgtype":"m.text"},"ts":1414007865000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, I don't think you need that anymore. Unless, of course, you think a Google employee's invite might influence the spam filter rating in your favor...","msgtype":"m.text"},"ts":1414008089000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: http://www.google.com/inbox/","msgtype":"m.text"},"ts":1414008130000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"paxcoder: this isn't Gmail","msgtype":"m.text"},"ts":1414008134000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"paxcoder: so yes, you /can/ request one, but probably quicker to just ask first","msgtype":"m.text"},"ts":1414008153000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, Oh... First time hearing about that. Dat Metr.. umm I mean Material design.","msgtype":"m.text"},"ts":1414008278000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: announced a few hours ago :)","msgtype":"m.text"},"ts":1414008301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, thanks for the info.","msgtype":"m.text"},"ts":1414008447000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"I like how in the demo/intro, they're not using screenshots or videos.","msgtype":"m.text"},"ts":1414008477000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"gsnedders, I'm also new to templates. How do I know if I should attribute the above to their use?","msgtype":"m.text"},"ts":1414008607000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"(what do I search for in the code?)","msgtype":"m.text"},"ts":1414008635000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: <template>, except this is Google so they probably do something crazy like building it all up through the DOM","msgtype":"m.text"},"ts":1414008708000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, the \"data-template\" attributes seem to agree","msgtype":"m.text"},"ts":1414008796000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"Will requestAnimationFrame be called before or after any timeouts in the frame? I couldn't find the ordering of this.","msgtype":"m.text"},"ts":1414011789000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"And is there any hook that gets me as close to the \"before displaying the finished frame\" point in time as possible?","msgtype":"m.text"},"ts":1414011821000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"i'm not sure how it's spec'd, but from blink's source it looks like the two aren't concerned with each other at all","msgtype":"m.text"},"ts":1414012057000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so it's probably implementation-specific","msgtype":"m.text"},"ts":1414012066000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or just undefined","msgtype":"m.text"},"ts":1414012113000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, it's not in the WHATWG HTML spec, only here: http://www.w3.org/TR/animation-timing/","msgtype":"m.text"},"ts":1414012138000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"That's unfortunate.","msgtype":"m.text"},"ts":1414012144000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"OK, I think that means I can't actually implement this unless I do (another) shadow copy. OK. I'll just not.","msgtype":"m.text"},"ts":1414012199000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"setTimeout and rAF don't really have anything to do with each others","msgtype":"m.text"},"ts":1414012648000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Right, you can never determine the timing of a setTimeout","msgtype":"m.text"},"ts":1414012784000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There isn't any concept of a \"same frame\"","msgtype":"m.text"},"ts":1414012798000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Jasper: i plan to define it such that the answer is \"rAF will be the last callback invoked before the frame is laid out and painted\"","msgtype":"m.text"},"ts":1414018260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Jasper: whether a particular timeout gets done in the current frame or not can't be controlled, it depends on what else is going on","msgtype":"m.text"},"ts":1414018290000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, right, OK.","msgtype":"m.text"},"ts":1414018300000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"jgraham, I thought that the main loop defined the concept of a frame / redraw period","msgtype":"m.text"},"ts":1414018327000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"Admittedly, my use case is insane, but I figured I'd ask.","msgtype":"m.text"},"ts":1414018356000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"Jasper: No, and setTimeout allows the browser to delay as long as it likes for any reason","msgtype":"m.text"},"ts":1414018568000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, setTimeout just queues a task, there's no guarantee of when it'll be serviced","msgtype":"m.text"},"ts":1414018803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now the event loop is veeeery vague about frames. that'll hopefully improve a little when i get to that bug.","msgtype":"m.text"},"ts":1414018819000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the difference between a prototype and a constructor again? I thought I knew, but then I read the spec for GetSuperConstructor() and it seems to say that they're the same.","msgtype":"m.text"},"ts":1414019121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: An object's prototype is just another object, which is used for lookup when you ask for a property and it doesn't exist on the object.","msgtype":"m.text"},"ts":1414019236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A constructor is a function.","msgtype":"m.text"},"ts":1414019240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Typically, an object's proto is set to the value of the \"prototype\" property on the constructor function at the time the object is constructed.","msgtype":"m.text"},"ts":1414019279000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and foo.prototype is not foo's prototype, right? it's just the prototype that'll be used if you new up an object using new as a constructor?","msgtype":"m.text"},"ts":1414019524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but __proto__ is the prototype? is there an official way of getting to __proto__?","msgtype":"m.text"},"ts":1414019543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Right, or rather, it's not necessarily. ^_^  __proto__ is the prototype, and that's the official way to get it.","msgtype":"m.text"},"ts":1414019648000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's also getPrototypeOf(), I think.","msgtype":"m.text"},"ts":1414019665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"__proto__ seems to be shunned in the spec","msgtype":"m.text"},"ts":1414019693000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i guess it is there, at least","msgtype":"m.text"},"ts":1414019697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Using it de-optimizes your object, so you don't want to use it normally.","msgtype":"m.text"},"ts":1414019745000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so why doesn't this work:","msgtype":"m.text"},"ts":1414019880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foo = { bar: 3 }","msgtype":"m.text"},"ts":1414019881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Object.setPrototypeOf(foo, Object.getPrototypeOf(Object.getPrototypeOf(document.body)));","msgtype":"m.text"},"ts":1414019881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Object.setPrototypeOf(Object.getPrototypeOf(document.body), foo);","msgtype":"m.text"},"ts":1414019884000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"document.head.bar","msgtype":"m.text"},"ts":1414019886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or maybe i should ask, should that work?","msgtype":"m.text"},"ts":1414019921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you probably can't mutate the prototype of host objects","msgtype":"m.text"},"ts":1414019937000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"or whatever they're called now","msgtype":"m.text"},"ts":1414019942000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"whether that's a good idea or not is a separate question :)","msgtype":"m.text"},"ts":1414019957000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is there a way to test if super() is going to throw because the function isn't defined?","msgtype":"m.text"},"ts":1414020587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh wait, super only works inside functions defined in class blocks, right","msgtype":"m.text"},"ts":1414020716000,"senderName":"Hixie","senderId":"Hixie@irc"}
]