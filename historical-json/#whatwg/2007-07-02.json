[
{"content":{"body":"hsivonen: you sent four mails right?","msgtype":"m.text"},"ts":1183336200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"about the parser?","msgtype":"m.text"},"ts":1183336201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: re http://lists.w3.org/Archives/Public/public-html/2007Jul/0064.html and http://lists.w3.org/Archives/Public/public-html/2007Jul/0067.html, a problem with FIrefox 1.04 (of all things) is not really a problem with AT, is it? I'm also not sure why we're evaluating old methods of embedding Flash rather than the newest techniques: http://alistapart.com/articles/flashembedcagematch/ . (These methods are continuing to evolve.)","msgtype":"m.text"},"ts":1183336680000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(Firefox 1.04 didn't have effective screen reader support.)","msgtype":"m.text"},"ts":1183336740000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"I was beginning to think that browsers weren't that bad at drawing lines, but then I reached arcTo and my hopes were shattered :-(","msgtype":"m.text"},"ts":1183337280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sweet ","msgtype":"m.text"},"ts":1183362840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it works","msgtype":"m.text"},"ts":1183362841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the \"table model\" algorithms for forming a table totally work and generate actual tables that are what the markup was!","msgtype":"m.text"},"ts":1183362900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i shouldn't be so surprised but that's pretty damn cool.","msgtype":"m.text"},"ts":1183362901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tomorrow i can do the scope=\"\" and headers=\"\" stuff","msgtype":"m.text"},"ts":1183362960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now that i have actual tables","msgtype":"m.text"},"ts":1183362961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what language did you wrote your model in?","msgtype":"m.text"},"ts":1183363680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: yes, I sent 4 emails.","msgtype":"m.text"},"ts":1183363980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"were many things which WHATwg want to delete, are mentioned (ACRONYM, non-visual rendering of TABLES amongst them.)\"","msgtype":"m.text"},"ts":1183366140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"FO 4","msgtype":"m.text"},"ts":1183366200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"these people are crazy","msgtype":"m.text"},"ts":1183366201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the reason that i like testing parsing more than testing other things? :)","msgtype":"m.text"},"ts":1183370760000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"parsing is trivial? :p","msgtype":"m.text"},"ts":1183370820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps :)","msgtype":"m.text"},"ts":1183370821000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"but not really","msgtype":"m.text"},"ts":1183370822000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"btw, any chance you'll make some script that converts html5lib testdata to browser usable tests?","msgtype":"m.text"},"ts":1183370823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because making html5lib tests is trivial","msgtype":"m.text"},"ts":1183370880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, i could look into that","msgtype":"m.text"},"ts":1183370881000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"someone from mozilla already did some work","msgtype":"m.text"},"ts":1183370882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pointer?","msgtype":"m.text"},"ts":1183370883000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'm afraid I don't have a pointer","msgtype":"m.text"},"ts":1183370884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only thing you need to do is get the result DOM","msgtype":"m.text"},"ts":1183370940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iterate over it","msgtype":"m.text"},"ts":1183370941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"load the tests in an iframe","msgtype":"m.text"},"ts":1183370942000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1183370943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and from the restult DOM you make a string and compare that with the #document data","msgtype":"m.text"},"ts":1183370944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yep","msgtype":"m.text"},"ts":1183370945000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"seems pretty straightforward","msgtype":"m.text"},"ts":1183371000000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"do the existing tests assume that scripting is enabled? or disabled?","msgtype":"m.text"},"ts":1183371060000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I think enabled, but scripting support is not there","msgtype":"m.text"},"ts":1183371061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might perhaps be good to split up the tests that assume that scripting is enabled or disabled (or neither)","msgtype":"m.text"},"ts":1183371120000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I suppose we could make extensions","msgtype":"m.text"},"ts":1183371180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"#data --scripting-disabled","msgtype":"m.text"},"ts":1183371181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps","msgtype":"m.text"},"ts":1183371182000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"don't know what's best","msgtype":"m.text"},"ts":1183371300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure if it's possible to enable/disable scripting on a per test basis","msgtype":"m.text"},"ts":1183371360000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"my port would probably only work with tests that don't assume that scripting is disabled","msgtype":"m.text"},"ts":1183371420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1183371480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could have some server-side script that organizes the tests for you or something","msgtype":"m.text"},"ts":1183371481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in that case you can simply make a scripting-enabled and scripting-disabled folder","msgtype":"m.text"},"ts":1183371482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1183371483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to start it would be nice to have some JS that does DOM -> #document\\n...","msgtype":"m.text"},"ts":1183371660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1183371661000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"then we can compare browsers to html5lib more easily","msgtype":"m.text"},"ts":1183371662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks at the live dom viewer code","msgtype":"m.emote"},"ts":1183371720000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm, what if the dom isn't a tree","msgtype":"m.text"},"ts":1183371780000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie has solved that issue","msgtype":"m.text"},"ts":1183371840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose you just keep a pointer around and check if you haven't encountered the node before","msgtype":"m.text"},"ts":1183371841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, but the html5lib test output format doesn't support non-trees","msgtype":"m.text"},"ts":1183371842000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1183371900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"elementname - graph","msgtype":"m.text"},"ts":1183371901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just output something that makes it non-conforming","msgtype":"m.text"},"ts":1183371902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if we have that script it can be integrated with the thing david has)","msgtype":"m.text"},"ts":1183372680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lxr.mozilla.org/seamonkey/source/parser/htmlparser/tests/mochitest/","msgtype":"m.text"},"ts":1183372740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://hasather.net/html5/parsetree/","msgtype":"m.text"},"ts":1183372741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, cool","msgtype":"m.text"},"ts":1183372742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if sayrer is writing a new HTML parser or changing the old one","msgtype":"m.text"},"ts":1183373280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I wouldn't want to change the old one)","msgtype":"m.text"},"ts":1183373340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno, seems like mrbkap is still fixing the old one","msgtype":"m.text"},"ts":1183373341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(from the couple of bug numbers referenced there)","msgtype":"m.text"},"ts":1183373342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they also checked out all the old tests","msgtype":"m.text"},"ts":1183373400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, btw, how easy is it to extend all treebuilders to support two more variables for DOCTYPE?","msgtype":"m.text"},"ts":1183373700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://simon.html5.org/temp/dom-tostring.html","msgtype":"m.text"},"ts":1183376160000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"please tell me if i can improve the function, i think it is doing some unnecessary things (looping too many times or something)","msgtype":"m.text"},"ts":1183376640000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"or if i got the format wrong","msgtype":"m.text"},"ts":1183376641000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: well, if you wanted to optimize performance (which isn't really necessary), you could traverse the DOM using an iterative algorithm instead of a recursive one","msgtype":"m.text"},"ts":1183377000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: hmm, ok. i think i'll leave it as is for now","msgtype":"m.text"},"ts":1183377360000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"the selectors api naming issue will never end","msgtype":"m.text"},"ts":1183381080000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I wonder when HTML 5 will get issues like that","msgtype":"m.text"},"ts":1183381320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hopefully when everything is already shipped in implementations","msgtype":"m.text"},"ts":1183381321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"selectorQuery/selectorQueryAll seem to be good names","msgtype":"m.text"},"ts":1183381680000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1183381800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I like those names too.  It looks like a reasonable compromise between selectElement and cssQuery, but I have a feeling there's going to be someone that doesn't like it","msgtype":"m.text"},"ts":1183382700000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"of course someone won't like it","msgtype":"m.text"},"ts":1183382820000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"so why doesn't this work? http://simon.html5.org/temp/html5lib-tests/wrapper.html","msgtype":"m.text"},"ts":1183389120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"you're not invoking send()?","msgtype":"m.text"},"ts":1183389240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with my XHR2 that would not be necessary but it seems that it will not going to fly :)","msgtype":"m.text"},"ts":1183389241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how is XHR2 going to know when to implicitly invoke send()?","msgtype":"m.text"},"ts":1183389420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"much like Audio(src)","msgtype":"m.text"},"ts":1183389421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, not going to happen","msgtype":"m.text"},"ts":1183389422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new XMLHttpRequest(method, src) is likely the only shortcut that makes some sense","msgtype":"m.text"},"ts":1183389480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds like about the same as setTimeout(fn, 0) too (i.e. as soon as possible after the current script has finished)","msgtype":"m.text"},"ts":1183389481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1183389482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, is tests1.txt parsed as xml or something?","msgtype":"m.text"},"ts":1183389780000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"shouldn't matter for responseText","msgtype":"m.text"},"ts":1183389900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Error: syntax error","msgtype":"m.text"},"ts":1183389960000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"Source File: file://loca.....l5lib-tests/tests1.txt","msgtype":"m.text"},"ts":1183389961000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"Line: 1, Column: 1","msgtype":"m.text"},"ts":1183389962000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"Source Code:","msgtype":"m.text"},"ts":1183389963000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"#data","msgtype":"m.text"},"ts":1183389964000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"oh, in Firefox?","msgtype":"m.text"},"ts":1183390020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1183390021000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"they have some issues there I believe","msgtype":"m.text"},"ts":1183390080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm, wonder which version of Safari the iPhone is based on","msgtype":"m.text"},"ts":1183396620000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"Row 1 and 4+5 of Acid2 fails","msgtype":"m.text"},"ts":1183396680000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"virtuelv: It calls itself \"Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543a Safari/419.3\" which sounds like a possibly old WebKit","msgtype":"m.text"},"ts":1183396740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"then this too: http://www.johnmurch.com/2007/07/01/iphone-javascript-and-spec-benchmark/ makes sense","msgtype":"m.text"},"ts":1183396860000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"Looks like someone tried running Canvex on an iPhone - I wonder what kind of performance they get...","msgtype":"m.text"},"ts":1183396920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: The only issue I can think of with adding more doctype stuff to the treebuilders is several tree types don't really support the concept of doctypes","msgtype":"m.text"},"ts":1183404900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There have been hacked in various ways to support the concept e.g. by having elements with tagnames like \"<!doctype>\"","msgtype":"m.text"},"ts":1183404960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But where we hacked we can hack a little more","msgtype":"m.text"},"ts":1183405020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1183405021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: my plan is not to expose the doctype by default through APIs designed for XML","msgtype":"m.text"},"ts":1183405500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: We need it for running tests. By default it is stripped when a special flag is not set","msgtype":"m.text"},"ts":1183405560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: the doctype node stuff is for browsers. it is rather pointless for parsing libraries meant for non-browser use cases","msgtype":"m.text"},"ts":1183405561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: OK. I guess I have to support doctypes in SAX (buffered and streaming)","msgtype":"m.text"},"ts":1183405620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but supporting them in the DOM just sucks without a backdoor API","msgtype":"m.text"},"ts":1183405621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(that is, it is stripped where it not supported by the underlying tree)","msgtype":"m.text"},"ts":1183405680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if the use case is making a drop-in library for apps that now use an XML parser, exposing the doctype might be more harm than good","msgtype":"m.text"},"ts":1183405740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but yeah, supporting doctype exposure in SAX and XOM is reasonable","msgtype":"m.text"},"ts":1183405800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"narowly misses flinging his ipod acress his cube","msgtype":"m.emote"},"ts":1183420380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1183420381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right, done scope=\"\"","msgtype":"m.text"},"ts":1183420620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now headers=\"\"","msgtype":"m.text"},"ts":1183420621000,"senderName":"Hixie","senderId":"Hixie@irc"}
]