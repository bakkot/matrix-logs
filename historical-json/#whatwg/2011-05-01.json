[
{"content":{"body":"hello","msgtype":"m.text"},"ts":1304212860000,"senderName":"nog_lorp","senderId":"nog_lorp@irc"},
{"content":{"body":"Hixie: OK, thanks","msgtype":"m.text"},"ts":1304215500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I did already commit it that way yesterday","msgtype":"m.text"},"ts":1304215501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the main reason I was asking was that the behavior's not totally consistent in that we don't currently do the same for some other cases where the spec provides some additional guidance","msgtype":"m.text"},"ts":1304215560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for example, for Set-Cookie","msgtype":"m.text"},"ts":1304215620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"where  we could emit \"To set cookies, use HTTP headers instead.\" or whatever","msgtype":"m.text"},"ts":1304215680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but anyway, it's a bigger priority to implement checks for all the actual document-conformance requirements in the spec","msgtype":"m.text"},"ts":1304215860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"abarth: yt?","msgtype":"m.text"},"ts":1304224500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone got a webkit build handy?","msgtype":"m.text"},"ts":1304225220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does http://software.hixie.ch/utilities/js/live-dom-viewer/saved/970 fail in safari/webkit too, or is it a chrome bug?","msgtype":"m.text"},"ts":1304225280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, nothing changed colour for me in a semi-recent WebKit","msgtype":"m.text"},"ts":1304225400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k thx","msgtype":"m.text"},"ts":1304225401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: nothing changes in a fresh WebKit build - what's the bug in Chrome?","msgtype":"m.text"},"ts":1304229900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is surprised that a Chrome-specific bug would even be possible here","msgtype":"m.emote"},"ts":1304229960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it focuses the <output>","msgtype":"m.text"},"ts":1304229961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, me too","msgtype":"m.text"},"ts":1304229962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, let me try in full keyboard access mode in Safari","msgtype":"m.text"},"ts":1304229963000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(only happens if the output is display:block)","msgtype":"m.text"},"ts":1304229964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it happens in Safari in Full Keyboard Access mode","msgtype":"m.text"},"ts":1304230020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so it's just a bug in WebKit focusability rules","msgtype":"m.text"},"ts":1304230021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's hell weird that display: block on the <output> matters","msgtype":"m.text"},"ts":1304230080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<Hixie> AryehGregor: are you going to mention the things that were discussed in #whatwg earlier? <-- Which things that we discussed in #whatwg earlier?","msgtype":"m.text"},"ts":1304262240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I plan to come up with as many specific examples of spec or spec organization forks that I can.","msgtype":"m.text"},"ts":1304262241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The two that I know of offhand are the WHATWG splitting from the W3C, and the W3C being created because TBL had too many problems in the IETF, which are both excellent support for forking.","msgtype":"m.text"},"ts":1304262300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Other people have mentioned an IETF fork of some version of HTML, what's the story on that?","msgtype":"m.text"},"ts":1304262301000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And does anyone know of other examples?","msgtype":"m.text"},"ts":1304262302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"<othermaciej> One thing I wonder about is whether the W3C intends to take action against the ISO HTML, XHTML-MP, CHTML, XHTML Basic, XHTML 2, WML, WTVML, XHTML-Print, WHATWG HTML, or HDML forks of HTML","msgtype":"m.text"},"ts":1304262303000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Oh, it was ISO that forked it, not the IETF.","msgtype":"m.text"},"ts":1304262360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1304262361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Surely XHTML 2 doesn't count, since that's a W3C-sponsored fork?","msgtype":"m.text"},"ts":1304262362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess that depends on what the purpose of the ban on forks is","msgtype":"m.text"},"ts":1304262480000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"CE-HTML","msgtype":"m.text"},"ts":1304262481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and Open IPTV Forum \"Declarative Application Environment V2.0\"","msgtype":"m.text"},"ts":1304262540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.openiptvforum.org/specifications.html","msgtype":"m.text"},"ts":1304262541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"take a look a that spec some time -","msgtype":"m.text"},"ts":1304262542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.openiptvforum.org/docs/Release2/OIPF-T1-R2-Specification-Volume-5-Declarative-Application-Environment-v2_0-2010-09-07.pdf","msgtype":"m.text"},"ts":1304262543000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Heh, it references HTML5","msgtype":"m.text"},"ts":1304262600000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Is anyone interested in helping with a wiki page to outline all the arguments for why forking is either harmless or good?","msgtype":"m.text"},"ts":1304262601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That sounds like trying to prove a negative...","msgtype":"m.text"},"ts":1304262660000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"No, you can cite all the existing forks and point out that they were all either harmless or good.","msgtype":"m.text"},"ts":1304262661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's evidence.","msgtype":"m.text"},"ts":1304262662000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anecdotal evidence","msgtype":"m.text"},"ts":1304262720000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"*-MP was not good. :P","msgtype":"m.text"},"ts":1304262721000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"As opposed to no evidence, which is what the forking-is-bad crowd has.","msgtype":"m.text"},"ts":1304262722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You can't expect randomized controlled double-blind trials for questions like \"Is allowing spec forks a good idea?\"  You've got to work with what you have.","msgtype":"m.text"},"ts":1304262723000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll have only limited time to work on a real response to the survey unless Hixie decides it's part of my contract.","msgtype":"m.text"},"ts":1304262780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Why can't contracts just say stuff like \"Do something useful and web standards-related\"?)","msgtype":"m.text"},"ts":1304262781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's a mystery","msgtype":"m.text"},"ts":1304262782000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That seems to be the job description of some full-time employees.","msgtype":"m.text"},"ts":1304262783000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But really, several of the ones othermaciej listed are non-harmless in my opinion","msgtype":"m.text"},"ts":1304262840000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Interesting.  Which ones?","msgtype":"m.text"},"ts":1304262841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The ones building on XHTML, because they fragment the ecosystem and lead to a waste of time and effort when they fail","msgtype":"m.text"},"ts":1304262842000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"They still probably don't strongly support the case of restrictive copyright licensing, given that a) they might not actually infringe copyright, and b) the W3C doesn't appear interested in suing even if they do.","msgtype":"m.text"},"ts":1304262843000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"some I'm not sure totally count as forks","msgtype":"m.text"},"ts":1304262900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"So, like, XHTML 2?","msgtype":"m.text"},"ts":1304262901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but XHTML-MP is pretty bad, as it sends content purporting to be XHTML but with different processing rules","msgtype":"m.text"},"ts":1304262902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(really weird stuff too)","msgtype":"m.text"},"ts":1304262903000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CHTML is bad for similar reasons","msgtype":"m.text"},"ts":1304262904000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"these are bad not only for browsers that implement them but also, when such content is posted, it creates non-interoperable worlds and makes it hard to successfully display all content","msgtype":"m.text"},"ts":1304262960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"WML is less bad in that regard since it has a distinct content type but I'm not totally sure if it is fair to call it a fork","msgtype":"m.text"},"ts":1304262961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it certainly copies many of the elements in HTML","msgtype":"m.text"},"ts":1304263020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"But these are all basically unsuccessful, aren't they?","msgtype":"m.text"},"ts":1304263021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They're only really harmful if they cause real problems, not if they would have caused problems had they been successful.","msgtype":"m.text"},"ts":1304263022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"there is a huge amount of XHTML-MP, CHTML and WML content out there","msgtype":"m.text"},"ts":1304263023000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1304263024000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"in east asia, there is huge market pressure for any mobile browser that gets released to support one or more of them","msgtype":"m.text"},"ts":1304263025000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I've never heard of any of them, I don't think.","msgtype":"m.text"},"ts":1304263026000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, they're mobile things.","msgtype":"m.text"},"ts":1304263027000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, I'll briefly look at some of them, I guess.","msgtype":"m.text"},"ts":1304263080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yes, mobile web stuff","msgtype":"m.text"},"ts":1304263081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"A lot of operators push for *-MP compliance, too.","msgtype":"m.text"},"ts":1304263082000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"(Which sucks.)","msgtype":"m.text"},"ts":1304263083000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"many of the forks from my list are W3C-sponsored but are nonetheless incompatible fors","msgtype":"m.text"},"ts":1304263084000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"XHTML2 is much less damaging than the things I listed since no one uses it","msgtype":"m.text"},"ts":1304263085000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't think W3C forks are germane to the licensing question at hand.","msgtype":"m.text"},"ts":1304263086000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Since they'd be allowed under any license, presumably.","msgtype":"m.text"},"ts":1304263140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"none of these are germane to the licensing issue at hand","msgtype":"m.text"},"ts":1304263141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1304263142000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"none of them were prevented by the W3C Document License","msgtype":"m.text"},"ts":1304263143000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which does not allow forking","msgtype":"m.text"},"ts":1304263144000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That's evidence that the restrictive license is ineffective, which is germane.","msgtype":"m.text"},"ts":1304263145000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"or to look at it another way, all of them are germane, since they show that anti-forking license provisions are not effective at preventing forking","msgtype":"m.text"},"ts":1304263200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Right, exactly.","msgtype":"m.text"},"ts":1304263201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"has to go now, more later . . . if he can find the time","msgtype":"m.emote"},"ts":1304263202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"the fact that the W3C itself forks is even more germane, since no license you could imagine could prevent that","msgtype":"m.text"},"ts":1304263203000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm glad we got those extra two licensing options up.  I wonder how the results of the survey will be considered by the people whose business it is to consider them.","msgtype":"m.text"},"ts":1304263260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: pong","msgtype":"m.text"},"ts":1304272440000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"hmm, Canonical XML 2.0","msgtype":"m.text"},"ts":1304272441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dare I look","msgtype":"m.text"},"ts":1304272442000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"AryehGregor: feel free to use a few of google's hours to work on a response that once and for all explains all the relevant issues here, but if you do then send me regular updates so i can give you more direct feedback","msgtype":"m.text"},"ts":1304273880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: if you are trying to hash passwords in a login db, then presumably you want to use MHAC with some algorithm like SHA-256 or whatever. but what key do you use? can you use the username as a key, or is that a Bad Idea?","msgtype":"m.text"},"ts":1304274060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i bet there's some canonical explanation for how to do this","msgtype":"m.text"},"ts":1304274120000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but the general approach is to use a hash, not an HMAC","msgtype":"m.text"},"ts":1304274121000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"with a public and a private salt","msgtype":"m.text"},"ts":1304274180000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1304274181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there's no good way to avoid a private salt?","msgtype":"m.text"},"ts":1304274182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was hoping to be able to do a \"SELECT ... WHERE ... AND password=?\" instead of selecting the row then comparing the password","msgtype":"m.text"},"ts":1304274240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that if the password is wrong, the code never even gets the userid","msgtype":"m.text"},"ts":1304274241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not a huge deal if it's not possible","msgtype":"m.text"},"ts":1304274242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the private salt is just there to slow down the hash function","msgtype":"m.text"},"ts":1304274243000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"so you can avoid it if you pick a slow hash function","msgtype":"m.text"},"ts":1304274300000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the public salt is technically supposed to be per-password though","msgtype":"m.text"},"ts":1304274301000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"to prevent the attack from attacking all the passwords at once","msgtype":"m.text"},"ts":1304274302000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"with a dictionary","msgtype":"m.text"},"ts":1304274303000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"s/attack/attacker/","msgtype":"m.text"},"ts":1304274304000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie, if your DBMS supports the relevant functions, you can do something like \"WHERE ... password = SHA256(salt + 'password')\", if the user table has a salt column that contains the per-user salt.","msgtype":"m.text"},"ts":1304274360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Of course, that's not indexable, so it won't scale to many users.","msgtype":"m.text"},"ts":1304274420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why would you want to look up users by their password anyway, though?","msgtype":"m.text"},"ts":1304274480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Other than to detect weak passwords, maybe, in which case it's obviously going to be O(N) and indexing doesn't make much of a difference one way or the other.","msgtype":"m.text"},"ts":1304274481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(It'd be indexable in Postgres, I think)","msgtype":"m.text"},"ts":1304274540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, how?","msgtype":"m.text"},"ts":1304274541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Postgres supports indexes on expressions, but what expression could you index here?","msgtype":"m.text"},"ts":1304274542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(unless I'm missing understanding, which I probably am)","msgtype":"m.text"},"ts":1304274543000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In \"WHERE ... password = SHA256(salt + 'password')\", password and salt are both DB columns.","msgtype":"m.text"},"ts":1304274544000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And the string 'password' is provided literally by the application for the specific query.","msgtype":"m.text"},"ts":1304274600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think I was reading the literal and column the other way around","msgtype":"m.text"},"ts":1304274660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which would be silly)","msgtype":"m.text"},"ts":1304274661000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"abarth: yeah, hence my question about using the username as the public salt","msgtype":"m.text"},"ts":1304275140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: the actual query would be WHERE username=? AND password=?","msgtype":"m.text"},"ts":1304275260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: so that it returns nothing when the password is wrong","msgtype":"m.text"},"ts":1304275261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, oh, I see.","msgtype":"m.text"},"ts":1304275262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that seems fine","msgtype":"m.text"},"ts":1304275263000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"AryehGregor: let me see if i can use a SHA256() function","msgtype":"m.text"},"ts":1304275264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but this isn't my area of expertise","msgtype":"m.text"},"ts":1304275320000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: k","msgtype":"m.text"},"ts":1304275321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ideally your public salt should be long enough that you foil rainbow table attacks.","msgtype":"m.text"},"ts":1304275322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For that purpose, it's probably best to make it a not-too-short randomish string.","msgtype":"m.text"},"ts":1304275323000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"looks like sqlite3 doesn't have hash-related functions","msgtype":"m.text"},"ts":1304275324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonder if i can add custom functions from perl...","msgtype":"m.text"},"ts":1304275380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is this a WebSQL use-case?","msgtype":"m.text"},"ts":1304275381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"no it's just a toy i'm playing with at home","msgtype":"m.text"},"ts":1304275382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't actually get the use-case at all, though.  If the attacker can query the DB, why don't they just do \"SELECT * FROM user\"?  Because they only have the right to execute prepared statements?","msgtype":"m.text"},"ts":1304275440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ho ho ho, you _can_ add functions in perl","msgtype":"m.text"},"ts":1304275441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that will make my life easier","msgtype":"m.text"},"ts":1304275442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How does that even make sense with SQLite, though?  If you can query an SQLite database, surely you have read access to the database file?","msgtype":"m.text"},"ts":1304275443000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: the concern is highly theoretical and mare an issue of having clear boundaries in code, but to the extent that it is a concern, the theoretical attack is someone who can cause the perl code to leak data from its environment","msgtype":"m.text"},"ts":1304275500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: if someone is running their own arbitrary code, then yeah, they can read the db, at which point it's why we're hashing it","msgtype":"m.text"},"ts":1304275560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So like someone who can read the contents of your Perl program's memory, but can't control it, and you're worried about them reading the userid in the brief window before it's garbage-collected or something . . . ?","msgtype":"m.text"},"ts":1304275620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If so, why don't you first retrieve the hash and check if it matches, and only then query the id?","msgtype":"m.text"},"ts":1304275621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Given that SQLite doesn't run in a separate process, if they can read the Perl program's memory then they can read the raw database data, probably","msgtype":"m.text"},"ts":1304275680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That too.","msgtype":"m.text"},"ts":1304275740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: my desire does not a priori stem from a security concern","msgtype":"m.text"},"ts":1304275741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: it's about keeping clear boundaries in the code about what code gets to see what","msgtype":"m.text"},"ts":1304275800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for readability","msgtype":"m.text"},"ts":1304275801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k.","msgtype":"m.text"},"ts":1304275860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"and it gives me an opportunity to play with this function creation thing :-)","msgtype":"m.text"},"ts":1304275920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Injecting custom Perl functions into SQLite so they can run inside SQL queries is meant to *increase* readability? :-)","msgtype":"m.text"},"ts":1304276040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1304276100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually in this case i think it will","msgtype":"m.text"},"ts":1304276101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i agree with your skepticism :-)","msgtype":"m.text"},"ts":1304276102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders if there's a Perl module equivalent to http://apidoc.apsw.googlecode.com/hg/vtable.html (where you can redefine the whole table storage mechanism in a scripting language)","msgtype":"m.emote"},"ts":1304276220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie et al., I started a page on forking on the WHATWG wiki: http://wiki.whatwg.org/wiki/Forking","msgtype":"m.text"},"ts":1304278140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If anyone wants to fill it out some more, please do.","msgtype":"m.text"},"ts":1304278141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't know if I'll work on it further.","msgtype":"m.text"},"ts":1304278142000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I'll probably work on improving my personal survey response later on my own time)","msgtype":"m.text"},"ts":1304278200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"how long until someone forks the page on forking","msgtype":"m.text"},"ts":1304280420000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"can someone explain why Lawrence Rosen keeps talking about patents when we're trying to discuss the copyright license?","msgtype":"m.text"},"ts":1304293920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't he a lawyer? you'd think he'd know better that to try to confuse these unrelated matters.","msgtype":"m.text"},"ts":1304293921000,"senderName":"Hixie","senderId":"Hixie@irc"}
]