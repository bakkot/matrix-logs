[
{"content":{"body":"botie, inform annevk https://lost-contact.mit.edu/afs/cern.ch/w3.org/www/Consortium/Agreement/Full.html \"Ownership of Copyrights and Patents\" & \"Licenses\"","msgtype":"m.text"},"ts":1418888170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1418888171000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"I thought I had seen a page on the wiki listing the conventions for ID names (e.g. for DOM stuff) but I can't seem to find it","msgtype":"m.text"},"ts":1418896224000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"did I dream it or just failing at search?","msgtype":"m.text"},"ts":1418896236000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"there's an incoming patch for much better WebIDL support in ReSpec and I'd like to use the opportunity to completely align with the convention; having a page to point the guy to would help","msgtype":"m.text"},"ts":1418896276000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"ah, found it","msgtype":"m.text"},"ts":1418896372000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Good","msgtype":"m.text"},"ts":1418896503000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is it defined when :active starts and stops applying relative to events like mousedown, mouseup, click ?","msgtype":"m.text"},"ts":1418900472000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3341 :-/","msgtype":"m.text"},"ts":1418900595000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, that sounds like a job for... D3E","msgtype":"m.text"},"ts":1418901230000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"cackles","msgtype":"m.emote"},"ts":1418901233000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3342 does what i expect in firefox but in my other test case it says 'false' for both events. can't figure out what the difference is","msgtype":"m.text"},"ts":1418902434000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, at 2014-12-18 07:36 UTC, MikeSmith said: https://lost-contact.mit.edu/afs/cern.ch/w3.org/www/Consortium/Agreement/Full.html \"Ownership of Copyrights and Patents\" & \"Licenses\"","msgtype":"m.text"},"ts":1418903051000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"i kind of got stuck here. https://critic.hoppipolla.co.uk/r/3537","msgtype":"m.text"},"ts":1418906221000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"possibly i've made a stupid mistake and i don't see it","msgtype":"m.text"},"ts":1418906251000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh. i think i found it. e.preventDefault cancels :active from applying!","msgtype":"m.text"},"ts":1418908435000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so jgraham, are we still trying to maintain a linear history in html5lib-python? because up till now we basically have.","msgtype":"m.text"},"ts":1418921152000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"even though it doesn't integrate well with github's PRs","msgtype":"m.text"},"ts":1418921165000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I think we should give up on that :(","msgtype":"m.text"},"ts":1418921211000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There are so many PRs that just need to be merged","msgtype":"m.text"},"ts":1418921235000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: my problem is I don't like merging stuff till we have tests \"passing\" again","msgtype":"m.text"},"ts":1418921267000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"because it just becomes way more time consuming checking for regressions","msgtype":"m.text"},"ts":1418921305000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: So last I saw the PR for adding an ignore list had \"don't merge this\" on it","msgtype":"m.text"},"ts":1418921344000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: because of the questions in the thread","msgtype":"m.text"},"ts":1418921378000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: i.e., how do we handle failing tests involving lone surrogates","msgtype":"m.text"},"ts":1418921550000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: the other option is to just fix the bug and worry about this another time :P","msgtype":"m.text"},"ts":1418921576000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I am happy with that option","msgtype":"m.text"},"ts":1418921757000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'll /try/ and get something done this evening. This may well not happen.","msgtype":"m.text"},"ts":1418921792000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: you around? what's the story on intents these days?","msgtype":"m.text"},"ts":1418930890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no real story","msgtype":"m.text"},"ts":1418933721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: we have some ideas, but limited bandwidth to experiment","msgtype":"m.text"},"ts":1418933763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: it seems like service worker to service worker communication will come first, perhaps that'll provide some way to let sites figure out client-side cooperation","msgtype":"m.text"},"ts":1418933812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: although that doesn't give you the decentralized stuff of course","msgtype":"m.text"},"ts":1418933833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ato: that's not just the case for Error's prototype","msgtype":"m.text"},"ts":1418933878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ato: all prototypes are global-bound","msgtype":"m.text"},"ts":1418933888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ato: (re tweet)","msgtype":"m.text"},"ts":1418933903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: RIght, I was trying to figure out why err instanceof Error was acting weird across chrome- and content contexts in XPCOM.","msgtype":"m.text"},"ts":1418933969000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"ato: you should also know that Gecko has a non-standard implementation of instanceof for \"DOM\" objects","msgtype":"m.text"},"ts":1418934253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ato: (unless that was put into IDL)","msgtype":"m.text"},"ts":1418934265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ato: Gecko's instanceof for \"DOM\" objects doesn't care about the window the object belongs to","msgtype":"m.text"},"ts":1418934292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1418934453000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"annevk: I believe that's in the spec","msgtype":"m.text"},"ts":1418934716000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heycam definitely told me it's in the spec :-)","msgtype":"m.text"},"ts":1418934725000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"http://heycam.github.io/webidl/#es-interface-hasinstance","msgtype":"m.text"},"ts":1418934748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not a fan, we already moved stuff from \"DOM\" to ES, this would break whenever we do that","msgtype":"m.text"},"ts":1418934773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. this will break for promises in Gecko","msgtype":"m.text"},"ts":1418934796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/arslancb/status/545674463530844161 foolip?","msgtype":"m.text"},"ts":1418934947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it really the case that, e.g., there is one Array prototype per window so that [] created in one window is not an instanceof Array in another window?","msgtype":"m.text"},"ts":1418934981000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: afaik, yes","msgtype":"m.text"},"ts":1418935061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if so, that's broken and needs to be fixed in ES","msgtype":"m.text"},"ts":1418935073000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: Allen is not too interested :-(","msgtype":"m.text"},"ts":1418935097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sucks to be him","msgtype":"m.text"},"ts":1418935102000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1418935132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I doubt we could actually make them the same at this point","msgtype":"m.text"},"ts":1418935152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1418935174000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"wow, no, that is a super-importnat property of ES","msgtype":"m.text"},"ts":1418935289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"programmers depend on it a lot","msgtype":"m.text"},"ts":1418935294000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's extremely useful to be able to mutate the prototype in one window and have it not affect another","msgtype":"m.text"},"ts":1418935335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i was just doing that this morning in fact","msgtype":"m.text"},"ts":1418935339000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yup, I've done it before too.","msgtype":"m.text"},"ts":1418935402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lets you lift the magic attached to some objects, like arrays, without polluting the \"normal\" array.","msgtype":"m.text"},"ts":1418935424000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because subclassing doesn't work.","msgtype":"m.text"},"ts":1418935435000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1418935645000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the behavior of instanceof is the important thing here","msgtype":"m.text"},"ts":1418935679000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we don't actually need the prototype objects to be the same","msgtype":"m.text"},"ts":1418935702000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"... that is literally the definition of instanceof","msgtype":"m.text"},"ts":1418936042000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it has a hook now so objects can define instanceof to behave however they wish","msgtype":"m.text"},"ts":1418936065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure. let's say: that is literally the definition of instanceof that JS developers expect.","msgtype":"m.text"},"ts":1418936095000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"unfortunately developers also expect an <img> to be an instanceof HTMLImageElement","msgtype":"m.text"},"ts":1418936147000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"nah, not if it comes from another frame","msgtype":"m.text"},"ts":1418936155000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"then it should be instanceof otherFrame.contentWindow.HTMLImageElement","msgtype":"m.text"},"ts":1418936165000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no-one expects that","msgtype":"m.text"},"ts":1418936171000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"except a few standards gurus","msgtype":"m.text"},"ts":1418936177000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"instanceof is not a nominal type test","msgtype":"m.text"},"ts":1418936181000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if you want the name just use tagName","msgtype":"m.text"},"ts":1418936185000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or .constructor.name or similar","msgtype":"m.text"},"ts":1418936189000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://stackoverflow.com/questions/1760492/how-can-i-tell-if-a-javascript-object-is-an-image-or-a-canvas","msgtype":"m.text"},"ts":1418936325000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: if i have someone who wants to contribute, where should i point them to? (for intents)","msgtype":"m.text"},"ts":1418937253000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I guess the WHATWG list and that thread on sharing is all there is thus far","msgtype":"m.text"},"ts":1418938777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: and the WHATWG wiki page on sharing","msgtype":"m.text"},"ts":1418938787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1418938790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: [citation needed] on \"that's what js developers expect\". testharness.js has at least two places which say \"we want to use instanceof here but can't because we don't know which window the object is from\"","msgtype":"m.text"},"ts":1418943979000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Read \"what js developers expect\" as \"what [sufficiently enough that we can't break backwards compat] js developers expect\"..","msgtype":"m.text"},"ts":1418944011000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I believe that at least one of those was previously a bug","msgtype":"m.text"},"ts":1418944012000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: \"this is an unfortunate legacy behaviour we can't change\" is totally different from \"that's what developers expect\".","msgtype":"m.text"},"ts":1418944087000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, I've come to expect it, at least.","msgtype":"m.text"},"ts":1418944106000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sure but you have also come to expect document.all. It doesn't mean it's a great ideea","msgtype":"m.text"},"ts":1418944150000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://w3c.github.io/web-animations/ has some messed up MathML stuff","msgtype":"m.text"},"ts":1418944895000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"search for <{","msgtype":"m.text"},"ts":1418944899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'll look into it","msgtype":"m.text"},"ts":1418944929000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"... but I blame bikeshed already :)","msgtype":"m.text"},"ts":1418944972000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"TabAtkins: was there a recent change to bikeshed's handling of mathml?","msgtype":"m.text"},"ts":1418945123000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"Shouldn't have been.","msgtype":"m.text"},"ts":1418945135000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my local copy of bikeshed works fine but tip seems to be broken","msgtype":"m.text"},"ts":1418945136000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"BUT WHO KNOWS","msgtype":"m.text"},"ts":1418945145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I didn't do anything on purpose.)","msgtype":"m.text"},"ts":1418945151000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ahahaha, I know what happened.","msgtype":"m.text"},"ts":1418945175000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wrote a custom serializer, and lxml's handling of namespaces is hilariously bad.  I'll file an issue and deal with this asap.","msgtype":"m.text"},"ts":1418945203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thanks!","msgtype":"m.text"},"ts":1418945211000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"oh man, lxml","msgtype":"m.text"},"ts":1418945268000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lxml is one of the reasons i dumped anolis :-)","msgtype":"m.text"},"ts":1418945277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the python world I'm not sure what practical alternative there is to lxml","msgtype":"m.text"},"ts":1418945390000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"There really isn't, particularly since I use CSSSelect. :(","msgtype":"m.text"},"ts":1418945408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah whatever other python things there might be, I think they have worse problems","msgtype":"m.text"},"ts":1418945473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, i dumped python for that same reason","msgtype":"m.text"},"ts":1418945480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"baby meet bathwater","msgtype":"m.text"},"ts":1418945507000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"python has the advantage of being something a lot of other people have some familiarity with already","msgtype":"m.text"},"ts":1418945538000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and anyway in my experience at least lxml just works pretty well overall. It's got some quirks but again in my experience at least it's not a giant hardship to work around them","msgtype":"m.text"},"ts":1418945628000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I say all this as somebody who's neither really fond of lxml nor python myself","msgtype":"m.text"},"ts":1418945661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"goes back to fixing problems with a broken python script for web-platform-tests...","msgtype":"m.emote"},"ts":1418945711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"does chown -r not follow symlinks?","msgtype":"m.text"},"ts":1418946289000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"probably depends on -h ?","msgtype":"m.text"},"ts":1418946334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1418946335000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1418946436000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm yeah it seems for sure it doesn't","msgtype":"m.text"},"ts":1418946495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looking the man page and the docs for the -h and -H args","msgtype":"m.text"},"ts":1418946517000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"even with -H, \"If the -R option is specified, symbolic links on the command line are followed. (Symbolic links encountered in the tree traversal are not followed.)","msgtype":"m.text"},"ts":1418946551000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"any ideas how to do *:not(.example *) in a browser that doesn't support complex selectors inside not?","msgtype":"m.text"},"ts":1418946564000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: ah well there you go","msgtype":"m.text"},"ts":1418946591000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: you want to match all elements that aren't a child of .example?","msgtype":"m.text"},"ts":1418946623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yep","msgtype":"m.text"},"ts":1418946628000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: :not(.example) > *, :not(.example) > * *","msgtype":"m.text"},"ts":1418946646000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, though that won't work","msgtype":"m.text"},"ts":1418946658000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for descendants","msgtype":"m.text"},"ts":1418946665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, can't do it without more constrained tree.","msgtype":"m.text"},"ts":1418946675000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(So that you can explicitly knock everything else out.)","msgtype":"m.text"},"ts":1418946684000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And even then it's terrible.","msgtype":"m.text"},"ts":1418946687000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: wait, i don't understand what you want here.","msgtype":"m.text"},"ts":1418946698000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: if you just want \"not child of .example\", then \":not(.example) > *\"","msgtype":"m.text"},"ts":1418946710000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"All element that aren't inside of a .example.","msgtype":"m.text"},"ts":1418946713000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is that what :not(.example *) does?","msgtype":"m.text"},"ts":1418946727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it's like the equivalent of my :not(:matches(.example #)) ?","msgtype":"m.text"},"ts":1418946754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think :not(.example) * might work","msgtype":"m.text"},"ts":1418946769000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So basically I have this CSS reset `* { box-sizing: border-box; margin: 0; padding: 0; }`","msgtype":"m.text"},"ts":1418946775000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but I noticed it was also affecting my examples","msgtype":"m.text"},"ts":1418946780000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which is bad","msgtype":"m.text"},"ts":1418946781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Nope.  That selector <.example><foo><div>","msgtype":"m.text"},"ts":1418946787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\":not(.example) *\" will match... what TabAtkins said","msgtype":"m.text"},"ts":1418946793000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Rather, that selects the <div> there.","msgtype":"m.text"},"ts":1418946794000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1418946800000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hell, it'll match <.example><div> as long as <.example> has an ancestor.","msgtype":"m.text"},"ts":1418946818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the old fashioned way to do this is:","msgtype":"m.text"},"ts":1418946820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"* { ... }","msgtype":"m.text"},"ts":1418946825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":".example * { ... }","msgtype":"m.text"},"ts":1418946829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also its specificity is way higher than * so that's causing my own problems","msgtype":"m.text"},"ts":1418946829000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1418946831000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It'll only rule out elements which have .example as *all* their ancestors.","msgtype":"m.text"},"ts":1418946832000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: yeah I tried that but I can't get the margin/padding to go back to their \"defaults\"","msgtype":"m.text"},"ts":1418946843000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well you can hard-code the defaults","msgtype":"m.text"},"ts":1418946872000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"40px for blockquote margin-left, etc","msgtype":"m.text"},"ts":1418946878000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it may be time to just do a targeted margin: 0/padding: 0 on all the things I am using","msgtype":"m.text"},"ts":1418946934000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wish Chrome supported complex :not's","msgtype":"m.text"},"ts":1418946943000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"While I'm hear does anyone know what's the deal with `-webkit-margin-before` and friends?","msgtype":"m.text"},"ts":1418947045000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what about them?","msgtype":"m.text"},"ts":1418947059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what do they even do, why do they need nonstandard properties","msgtype":"m.text"},"ts":1418947084000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"They're like margin-left, but logical directions rather than physical.,","msgtype":"m.text"},"ts":1418947097000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And they're non-standard because we haven't defined logical margins yet.","msgtype":"m.text"},"ts":1418947107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"logical = related to right-to-left/left-to-right?","msgtype":"m.text"},"ts":1418947119000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins, if you could do that soon it would be good :-)","msgtype":"m.text"},"ts":1418947127000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yes, direction and writing-mode.","msgtype":"m.text"},"ts":1418947129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm fixing up our logical properties right now","msgtype":"m.text"},"ts":1418947131000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: Yeah, fantasai and I intend to. :/","msgtype":"m.text"},"ts":1418947137000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1418947140000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins, one thing that's not clear from the various mailing list postings is whether logical properties are exposed on a computed style object","msgtype":"m.text"},"ts":1418947172000,"senderName":"heycam","senderId":"heycam@irc"}
]