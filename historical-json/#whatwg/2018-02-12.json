[
{"content":{"body":"OK, well I know he got pretty frustrated with it more than once","msgtype":"m.text"},"ts":1518393666000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno why that group has the kind of culture it does","msgtype":"m.text"},"ts":1518393703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don‚Äôt follow it myself but I did see bz‚Äôs comments, which seemed to indicate the specs there were being edited without the kind of attention to deal and rigor that should be expected","msgtype":"m.text"},"ts":1518393764000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"railgun: would be nice to have something set up to do the bumping described there. I vaguely recall other repos that have something set up like that","msgtype":"m.text"},"ts":1518393793000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I know some projects like Zulip have a claim bot (e.g. https://github.com/zulip/zulip/issues/8279) but I'm personally not a fan of it","msgtype":"m.text"},"ts":1518398337000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"railgun: OK. So rather than a bit did you have in mind that somebody will instead periodically do the re-triaging manually?","msgtype":"m.text"},"ts":1518398503000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'd like a human reponse to issues that need to be bumped instead of a bot","msgtype":"m.text"},"ts":1518398667000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"but some form of automation could still be done with the GitHub api?","msgtype":"m.text"},"ts":1518398689000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"such as curate a page of good first issues that haven't been active in a while","msgtype":"m.text"},"ts":1518398734000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"I'm not familiar with the word triaging, care to explain it to me?","msgtype":"m.text"},"ts":1518398827000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"MikeSmith: for automation I'm thinking of this: run a script each day, for all open good first issues, if last action > X days ago (i.e. the issue is inactive) then add it to the list of issues to manually review","msgtype":"m.text"},"ts":1518399702000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"railgun: ok yeah that could work","msgtype":"m.text"},"ts":1518403301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"by triaging I just meant somebody going (back) through the issues and deciding what to do with them „Éº (re)categorizing or (re)labeling etc","msgtype":"m.text"},"ts":1518403384000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok thanks","msgtype":"m.text"},"ts":1518404880000,"senderName":"railgun","senderId":"railgun@irc"},
{"content":{"body":"JakeA: great talk on event loops; would have loved to see microtasks as part of the animation","msgtype":"m.text"},"ts":1518425085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also makes me wonder again about event listeners and if they are the only place with the gotcha and whether we should consider switching","msgtype":"m.text"},"ts":1518425139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cheers! I don't think microtasks fit as part of the animation, since they don't happen in one place. That's why I did the separate stack animation to show how the microtask queue is emptied vs other queues","msgtype":"m.text"},"ts":1518425268000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although there's a microtask checkpoint in the event loop, I figured it'd confuse things to put it on the diagram, since the most likely place folks will encounter microtasks is on-stack-empty","msgtype":"m.text"},"ts":1518425346000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: What change are you thinking of for events? Running microtasks after callbacks is what allows IDB to be promisified, so I'm pretty keen on that üòÄ","msgtype":"m.text"},"ts":1518425416000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: always running them at end of listener","msgtype":"m.text"},"ts":1518425455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not sure if empty stack is exposed in other ways though","msgtype":"m.text"},"ts":1518425509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ohh I see. Interesting. It would become the only point where promises can run in the middle of other JS, which may become weird","msgtype":"m.text"},"ts":1518425559000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do microtasks run after rAF?","msgtype":"m.text"},"ts":1518425589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess they have to?","msgtype":"m.text"},"ts":1518425599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1518425602000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Would have been complicated to fit into the animation then, indeed","msgtype":"m.text"},"ts":1518425655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They can also happen in events that happen in the render steps. Eg scroll, resize, animationend, touchmove, intersection observers etc etc","msgtype":"m.text"},"ts":1518425709000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wanted to cover those kind of events, but ran out of time","msgtype":"m.text"},"ts":1518425761000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: contentDocument does not throw for cross-origin frames I think","msgtype":"m.text"},"ts":1518426134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: should return null iirc","msgtype":"m.text"},"ts":1518426146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahh gotcha. So the error is when accessing 'body' of null, rather than a security error.","msgtype":"m.text"},"ts":1518426200000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah; contentWindow.document throws a sec error","msgtype":"m.text"},"ts":1518426262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what might work is zooming in on the task/rAF/render event when you get there to show the microtasks in action","msgtype":"m.text"},"ts":1518426641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what does it mean to have a navigation mature? does it mean complete?","msgtype":"m.text"},"ts":1518431591000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"annevk: it's still tough, because you can have multiple microtask checkpoints in a task, or in raf. Microtasks just feel more to do with JS execution than the 'loop'.","msgtype":"m.text"},"ts":1518431947000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I can‚Äôt recall ever having heard the term ‚Äúnavigation nature‚Äù","msgtype":"m.text"},"ts":1518434416000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least don‚Äôt think it‚Äôs used in the HTML spec","msgtype":"m.text"},"ts":1518434437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mature is a thing","msgtype":"m.text"},"ts":1518438558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It‚Äôs some kind of point of nu return","msgtype":"m.text"},"ts":1518438574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"URL.createObjectURL is in the File API spec... which makes it awkward, but would it be the right place to try and add a form that takes a Response? That seems counter intuitive to me","msgtype":"m.text"},"ts":1518448212000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Object URLs are probably not going to be updated much, as they're leaky and we're trying to get the platform away from them... But you don't need to add to do that, just do URL.createObjectURL(await response.blob())","msgtype":"m.text"},"ts":1518448829000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that doesn't let me have non-200 responses and the like be created","msgtype":"m.text"},"ts":1518449205000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Yeah, blob URL resolution always succeeds","msgtype":"m.text"},"ts":1518449222000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm fine using a new API that gives me ~= ability to create these synthetic URLs","msgtype":"m.text"},"ts":1518449224000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"If you want a non-200 response, use Response","msgtype":"m.text"},"ts":1518449227000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's where the platform is moving","msgtype":"m.text"},"ts":1518449241000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I still need to generate a URL string for ESM","msgtype":"m.text"},"ts":1518449242000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"and window.caches doesn't seem to let me do that","msgtype":"m.text"},"ts":1518449251000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"All I can say is, trying to use an effectively-deprecated technology as a key part of your workflow seems like a bad idea.","msgtype":"m.text"},"ts":1518449269000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is there an alternative?","msgtype":"m.text"},"ts":1518449280000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Not sure what the context is, but using Response is generally what is preferred","msgtype":"m.text"},"ts":1518449295000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I need to make a URL for ESM to import based upon a Response","msgtype":"m.text"},"ts":1518449317000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"JakeA: are you ok with this ready promise behavior from a webdev perspective?  mainly curious because I'm about to re-write our ready promise stuff and just want to know if there is any chance we would change it... https://github.com/w3c/ServiceWorker/issues/1279","msgtype":"m.text"},"ts":1518449345000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"OK, well, that's probably not going to be possible on the web platform, because indirecting through URLs has proven very problematic and leaky.","msgtype":"m.text"},"ts":1518449350000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: right, for web I'm having to do multiple round trips through service workers","msgtype":"m.text"},"ts":1518449381000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I'd love to read the exact problems of synthetic URLs sometime if it is written up in a single place","msgtype":"m.text"},"ts":1518449428000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Essentially they leak memory forever","msgtype":"m.text"},"ts":1518449461000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The fact that blob URL scope is very wide is also problematic.","msgtype":"m.text"},"ts":1518449476000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Not sure how wide, but possibly larger than a single process.)","msgtype":"m.text"},"ts":1518449485000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ESM Module Map does too?","msgtype":"m.text"},"ts":1518449487000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"No, you can throw away the contents of the source text of a module once it's compiled. (Modulo f.p.toString issues.)","msgtype":"m.text"},"ts":1518449515000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And you can definitely throw it away after the realm gets destroyed (e.g. by navigation)","msgtype":"m.text"},"ts":1518449528000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"FWIW I would much rather see `.src` or `.srcobj` take a Response vs making URLs out of a Response","msgtype":"m.text"},"ts":1518449530000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Neither is true for blob URLs","msgtype":"m.text"},"ts":1518449532000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"+1 wanderview","msgtype":"m.text"},"ts":1518449535000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: but JS needs a string not a reference","msgtype":"m.text"},"ts":1518449569000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: sorry, what is the use case that requires a string?","msgtype":"m.text"},"ts":1518449672000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: `import \"...\"`","msgtype":"m.text"},"ts":1518449683000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I guess I'd rather see discussion on how to pass a consumable response into `import` vs converting Response objects into memory-locked buffers that get leaked","msgtype":"m.text"},"ts":1518449904000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: well that is in the JS spec so I'm not sure what you want to discuss","msgtype":"m.text"},"ts":1518449934000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it is done at parse time so you can't really grab references","msgtype":"m.text"},"ts":1518449950000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"If a different store works, that seems fine too. I just didn't see how to do this workflow with `window.caches`","msgtype":"m.text"},"ts":1518449995000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it seems like the main objection is that blob URLs are shared across realms and don't free up once used?","msgtype":"m.text"},"ts":1518450065000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: you have to explicitly call revokeObjectURL() if you want to free the blob URL before the window/worker that created them goes away","msgtype":"m.text"},"ts":1518450109000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: would standardizing https://msdn.microsoft.com/zh-cn/data/hh772302(v=vs.100) 's oneTimeOnly make sense then?","msgtype":"m.text"},"ts":1518450145000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: that would create a page that could not be reloaded then, right?","msgtype":"m.text"},"ts":1518450177000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I've never considered directly navigating to a blob URL as the main window, but yes. I think for all these solutions of \"don't keep the URL alive\" that is true, same for Object references like Response which would need to be reloaded somehow","msgtype":"m.text"},"ts":1518450264000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"blob URLs should be revoked also when their document is unloaded now so don't think they would let you reload anyway https://w3c.github.io/FileAPI/#lifeTime","msgtype":"m.text"},"ts":1518450599000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1518450682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"domfarolino: https://github.com/whatwg/console/issues/82 and https://github.com/whatwg/console/issues/110 can probably be closed","msgtype":"m.text"},"ts":1518450775000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess `location = Response` could in theory keep that response body alive? but then you could do `location = new Response(await fetch(blob)...)` to make shallow reloading of blob URLs work too","msgtype":"m.text"},"ts":1518450808000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Domenic: That sounds good thanks. I should also be able to close https://github.com/whatwg/console/issues/27 today","msgtype":"m.text"},"ts":1518450855000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Oh yeah, that'll be quite good :)","msgtype":"m.text"},"ts":1518450871000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"domfarolino: did you see https://twitter.com/TheLarkInn/status/962465510137872385 BTW? Quite exciting; hopefully he'll chime in on various issues.","msgtype":"m.text"},"ts":1518450988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yoav: what happens if a site tries to preload very large resources or too many resources?  do webkit/chromium spill to disk or just stop preload caching at some memory limit?","msgtype":"m.text"},"ts":1518451137000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: Oh nice! I remember seeing he joined Edge Developer Tools and was wondering if he'd get a chance to dig around in the Console Spec stuff. Good stuff","msgtype":"m.text"},"ts":1518451191000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: since blob URL lifetimes are limited to the document and we could implement/standardize oneTimeOnly are there any other potential problems you see?","msgtype":"m.text"},"ts":1518451390000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"They aren't limited to the document","msgtype":"m.text"},"ts":1518451419000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: other documents can load the URLs, but they get revoked/removed when the origin document is unloaded","msgtype":"m.text"},"ts":1518451447000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Ah really, that's nice","msgtype":"m.text"},"ts":1518451475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so, maybe have a flag to limit their scope to a single realm as well?","msgtype":"m.text"},"ts":1518451489000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Yeah I mean you could keep piling kludges on top, not sure if people will be interested in implementing them, but I guess it's not a lost cause at least.","msgtype":"m.text"},"ts":1518451529000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm coming at this not from web implementor perspective so I'm already in an awkward scenario","msgtype":"m.text"},"ts":1518451560000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"anyway, I'll take those flags as being requested and take it to the File API issue tracker for better or worse","msgtype":"m.text"},"ts":1518451607000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Domenic: We definitely want to close https://github.com/whatwg/console/issues/110 right, like you mentioned? I ask because though the webappsec-csp issue has not been closed yet, https://github.com/w3c/webappsec-csp/issues/217#issuecomment-302474980 kind of does it for me, and it seems that the granular control of console filtering is not part of the CSP. Just want to make sure closing it isn't jumping the gun :)","msgtype":"m.text"},"ts":1518452075000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah I mean you could even say something equivocal like \"thanks for letting us know, seems like there's nothing to do on our side\".","msgtype":"m.text"},"ts":1518452127000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I basically tried to look through the issue tracker with the POV of Edge implementing and that stood out as not useful to be tracking.","msgtype":"m.text"},"ts":1518452158000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ok that makes sense.","msgtype":"m.text"},"ts":1518452645000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"bradleymeck: I haven't thought this through, but might it work to have JS initiate module parsing with a set of either pre-imports or a mapping of import names -> Responses?","msgtype":"m.text"},"ts":1518452934000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: how would that be different from URLs?","msgtype":"m.text"},"ts":1518452962000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Oh, actually, that's probably just spelled as a way to pre-fill the module map. I guess it's URLs instead of strings, but they're scoped more tightly than Object URLs.","msgtype":"m.text"},"ts":1518453137000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I'm not entirely sure how that would work to make it tighter because you would need to pre populate all the mappings of the whole ESM graph","msgtype":"m.text"},"ts":1518453206000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jyasskin: that might be better served by https://github.com/whatwg/html/issues/2640 which I think has stalled (forever?)","msgtype":"m.text"},"ts":1518453295000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"wanderview: not afaik. preloads are treated like any other subresource (based on their `as` values)","msgtype":"m.text"},"ts":1518453374000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"bradleymeck: Yep, #2640 seems very similar.","msgtype":"m.text"},"ts":1518453404000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"yoav: what does that mean?  webkit and chromium use RAM without bound if there are excessive <link rel=preload> elements?","msgtype":"m.text"},"ts":1518453432000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"similar to what happens when there are excessive <img> elements","msgtype":"m.text"},"ts":1518453466000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"if there are limits in place, they are identical to both","msgtype":"m.text"},"ts":1518453478000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"The memory cache in both doesn't store a copy of the resources, it holds a pointer to the resources themselves","msgtype":"m.text"},"ts":1518453531000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"which are in memory for the lifetime of the page","msgtype":"m.text"},"ts":1518453541000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"It seems like there are many ways to make a browser use unbounded RAM","msgtype":"m.text"},"ts":1518454726000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yoav: image cache is spec'd as \"may\" I believe... its an optional optimization... is <link rel=\"preload\"> also something that the browser can just choose to ignore?","msgtype":"m.text"},"ts":1518455238000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: sure, but for compat reasons it would be nice to know what this under-spec'd feature considers reasonable memory usage","msgtype":"m.text"},"ts":1518455267000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it's not currently defined. You can open an issue on the spec and we can discuss it there","msgtype":"m.text"},"ts":1518455889000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: sure: https://github.com/w3c/preload/issues/121","msgtype":"m.text"},"ts":1518456141000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think image cache is a must, because the web depends on it?","msgtype":"m.text"},"ts":1518456321000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, OK, no","msgtype":"m.text"},"ts":1518456354000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There is a lot of wiggle room that makes it effectively a \"may\", e.g. UAs can remove entries from the list at any time.","msgtype":"m.text"},"ts":1518456369000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Does me interning for Microsoft at all affect my participant agreement? Will I need to sign for an Entity as opposed to sign as a Individual?","msgtype":"m.text"},"ts":1518473127000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: oh, hmm, I think it does :-/. But, Microsoft is already signed up, so you should be OK... we'll want to talk to them about getting console added to https://github.com/whatwg/participant-data/blob/master/entities.json#L84-L89 though.","msgtype":"m.text"},"ts":1518473223000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe email the two folks listed as contacts there to explain what's up?","msgtype":"m.text"},"ts":1518473247000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thanks, will do","msgtype":"m.text"},"ts":1518475602000,"senderName":"domfarolino","senderId":"domfarolino@irc"}
]