[
{"content":{"body":"looks like the new UTF-8 requirement isn't 100% clear: https://bugzilla.mozilla.org/show_bug.cgi?id=1406742","msgtype":"m.text"},"ts":1507525825000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: /me looks","msgtype":"m.text"},"ts":1507527467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm yeah I guess that’s the general problem of many (most) readers of the spec not knowing the difference between UA requirements and document-conformance requirements","msgtype":"m.text"},"ts":1507527547000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not sure how we could have made it more clear in the case of the UTF-8 document-conformance requirement","msgtype":"m.text"},"ts":1507527577000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess we could add a note to that section saying “This is not a requirement on user agents”","msgtype":"m.text"},"ts":1507527611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if we did, for consistency there’s a lot of other places we should also add that","msgtype":"m.text"},"ts":1507527667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah. I guess we'll just mark browser bug report INVALID as they arise","msgtype":"m.text"},"ts":1507528796000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: what does https://twitter.com/robert_kimata/status/917251436966141954 say?","msgtype":"m.text"},"ts":1507531801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: seems a lot of the require UTF-8 tweets are from folks in Japan","msgtype":"m.text"},"ts":1507531831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1507532352000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"had to look up 脆弱性","msgtype":"m.emote"},"ts":1507532624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Have read it a few times but I’m really not sure what point he’s trying to make","msgtype":"m.text"},"ts":1507532651000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in the first tweet","msgtype":"m.text"},"ts":1507532655000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"He’s talking about the security risk if ISO-2022-JP","msgtype":"m.text"},"ts":1507532675000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is a known thing of cource","msgtype":"m.text"},"ts":1507532689000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*course","msgtype":"m.text"},"ts":1507532695000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I don’t know what he means by また、UTF-16とエンコーディングアルゴリズムが区別つかないUTF-32も使うなとある","msgtype":"m.text"},"ts":1507532716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it sounds like he’s saying that UTF-16 is no different from UTF-32 .. in some regard","msgtype":"m.text"},"ts":1507532759000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the follow-up tweet is pretty clear","msgtype":"m.text"},"ts":1507532769000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://twitter.com/robert_KIMATA/status/917252289563201536","msgtype":"m.text"},"ts":1507532779000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that one basically just says, according to the W3C HTML spec, you can still use UTF-16, and it’s OK to use it","msgtype":"m.text"},"ts":1507532828000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1507532851000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah..","msgtype":"m.text"},"ts":1507532862000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Currently, decode from UTF-16BE/LE is very slow. I've been thinking about how much complexity and effort I should put into making it faster","msgtype":"m.text"},"ts":1507533066000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"On one hand, using UTF-16 on the wire is such a bad idea, that I want to say \"none\" in protest. On the other hand, it annoys me to have the asterisk that encoding_rs decodes fast except for UTF-16BE/LE","msgtype":"m.text"},"ts":1507533113000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"there's a matrix of 8 cases to optimize","msgtype":"m.text"},"ts":1507533147000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"decoding into UTF-16 vs. UTF-8","msgtype":"m.text"},"ts":1507533170000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"big-endian vs. little-endian","msgtype":"m.text"},"ts":1507533179000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aligned vs. unaligned","msgtype":"m.text"},"ts":1507533187000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and not just \"none\" in protest but also in order to make better use of time","msgtype":"m.text"},"ts":1507533273000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: to be fair as far as what the person said in that tweet, he said more like, “If you really *must* use UTF-16, then it’s OK”","msgtype":"m.text"},"ts":1507533837000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess that’s commonly the reason people give for using UTF-16, that they’re forced into it somehow for reasons outside their control","msgtype":"m.text"},"ts":1507533879000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: don’t unless it becomes a priority somehow?","msgtype":"m.text"},"ts":1507535296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: seems more worthwhile to document why UTF-16 is bad","msgtype":"m.text"},"ts":1507535327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we should figure out workers/worklets, module scripts, and service workers","msgtype":"m.text"},"ts":1507537975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think the answer is that worklets are subresources, and worker module scripts need a same-origin restriction","msgtype":"m.text"},"ts":1507538021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ohh, I thought worklets were a new global that could make requests, therefore they're a client?","msgtype":"m.text"},"ts":1507538093000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: for module scripts… why same-origin? We don't have a that requirement for importScripts","msgtype":"m.text"},"ts":1507538118000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems like you missed my message in that issue","msgtype":"m.text"},"ts":1507538957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you cannot have a cross-origin client fetch backed by a same-origin service worker","msgtype":"m.text"},"ts":1507538970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: otherwise you have some limited variant of foreign fetch","msgtype":"m.text"},"ts":1507539040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll catch up with the issues. I'm behind post-Fronteers :D","msgtype":"m.text"},"ts":1507539105000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and yeah, it would be better if worklets could be a client, but I think it's probably more important you can host them on CDNs and such, and ultimately it shouldn't matter much, though we should look at what it means for referrer and such I suppose","msgtype":"m.text"},"ts":1507539124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ah okay, forgot that was going on","msgtype":"m.text"},"ts":1507539155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That streams thread on Twitter resulted in a 150 or so mentions","msgtype":"m.text"},"ts":1507540354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not a single joke","msgtype":"m.text"},"ts":1507540370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh wow I didn't realise it had that many replies","msgtype":"m.text"},"ts":1507543382000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Is it me or https://w3c.github.io/media-source/#htmlmediaelement-extensions is extremely vague?","msgtype":"m.text"},"ts":1507547641000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Err,","msgtype":"m.text"},"ts":1507547644000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://w3c.github.io/media-source/#url","msgtype":"m.text"},"ts":1507547648000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"especially the part where it basically says \"oh btw, you can revoke them URLs too, but the how is left as an exercice to the reader\".","msgtype":"m.text"},"ts":1507547671000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, should integrate with the URL Standard somehow I suspect","msgtype":"m.text"},"ts":1507547765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I haven't really chased up all those dependencies yet, would appreciate you filing an issue","msgtype":"m.text"},"ts":1507547781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: On which spec?","msgtype":"m.text"},"ts":1507547794000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: media-source as a start","msgtype":"m.text"},"ts":1507547829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: feel free to copy me","msgtype":"m.text"},"ts":1507547833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok.","msgtype":"m.text"},"ts":1507547836000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: https://www.w3.org/TR/FileAPI/#BlobURLStore This is per-global, right?","msgtype":"m.text"},"ts":1507549604000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Can a same-origin worker use an URL that was created from the Window global?","msgtype":"m.text"},"ts":1507549628000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: ask Mek I suppose","msgtype":"m.text"},"ts":1507549657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: ^","msgtype":"m.text"},"ts":1507549665000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that kind of stuff is not defined well enough I think","msgtype":"m.text"},"ts":1507549666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: O RLY","msgtype":"m.text"},"ts":1507549673000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"cries.","msgtype":"m.emote"},"ts":1507549675000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I don't think it's per global per se","msgtype":"m.text"},"ts":1507549708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: maybe per event loop with some same-origin restriction","msgtype":"m.text"},"ts":1507549720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: According to Firefox, yeah it's per event loop.","msgtype":"m.text"},"ts":1507550560000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Or rather, calling it from a worker sends a runnable to the main thread for the registration, so I assume it's not per-global at the very least.","msgtype":"m.text"},"ts":1507550587000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: worker and main thread sharing lookup sounds bad","msgtype":"m.text"},"ts":1507553291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: if that is true hopefully it can be removed still","msgtype":"m.text"},"ts":1507553316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: annevk: having a worker use a blob URL create in the window (and vice versa) is pretty common I thought... in particular, we support worker scripts defined as a blob URL","msgtype":"m.text"},"ts":1507553593000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"This is all so vaguely defined. :(","msgtype":"m.text"},"ts":1507555197000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: https://github.com/w3c/media-source/issues/200","msgtype":"m.text"},"ts":1507556143000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wanderview: but can you importScripts one created in a window?","msgtype":"m.text"},"ts":1507556953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I believe you should be able to... my impression that is the intent","msgtype":"m.text"},"ts":1507556973000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so the scope of these strings is basically unbounded?","msgtype":"m.text"},"ts":1507557003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: limited to the origin and the life of the global that created them, right?","msgtype":"m.text"},"ts":1507557028000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I mean... they can be removed after the global dies","msgtype":"m.text"},"ts":1507557041000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I wonder if that’s cross-browser, but in any event it would be good to nail this down","msgtype":"m.text"},"ts":1507557042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: same-origin, yes, lifetime of the creator global, maybe? Seems a little weird if they’re cross-global otherwise","msgtype":"m.text"},"ts":1507557105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well,","msgtype":"m.text"},"ts":1507557135000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MediaSource doesn't help,","msgtype":"m.text"},"ts":1507557142000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"because MediaSource is Exposed=Window, and the createObjectURL from that spec is Exposed=Window too.","msgtype":"m.text"},"ts":1507557160000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Who would have known Blob URLs would be so complicated","msgtype":"m.text"},"ts":1507557204000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"createObjectURL was a bad idea and we knew it from the start 😟","msgtype":"m.text"},"ts":1507557944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just didn’t have the power to stop it","msgtype":"m.text"},"ts":1507557964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we need to make these APIs consume Response objects... and make Response objects transferable","msgtype":"m.text"},"ts":1507558115000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, maybe I should make some effort toward that","msgtype":"m.text"},"ts":1507558237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: Response or Blob, prolly","msgtype":"m.text"},"ts":1507558258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Response would be preferable since its consumable and also integrates with ReadableStream","msgtype":"m.text"},"ts":1507558278000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"IMO","msgtype":"m.text"},"ts":1507558310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Is an url's object ever exposed to the Web?","msgtype":"m.text"},"ts":1507558377000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wanderview: yeah, but I think something that does not come with a MIME type can be nice too usability-wise","msgtype":"m.text"},"ts":1507558413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: blob have types, no?","msgtype":"m.text"},"ts":1507558437000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nox: not directly, if that’s what you mean","msgtype":"m.text"},"ts":1507558443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok.","msgtype":"m.text"},"ts":1507558450000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wanderview: ooh right","msgtype":"m.text"},"ts":1507558453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea, I was thinking of this: https://developer.mozilla.org/en-US/docs/Web/API/Blob/type","msgtype":"m.text"},"ts":1507558472000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: So technically, even if the URL parser sets the url's object to a MediaSource instance in a worker, nothing bad is supposed to happen, right?","msgtype":"m.text"},"ts":1507558482000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: if you want data with no type, then I think thats ReadableStream","msgtype":"m.text"},"ts":1507558488000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: anyway, I agree we should do this, starting with Response seems good, can broaden later","msgtype":"m.text"},"ts":1507558520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: if MediaSource is not exposed there that cannot happen","msgtype":"m.text"},"ts":1507558568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How?","msgtype":"m.text"},"ts":1507558781000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Did you mean that it shouldn’t happen?","msgtype":"m.text"},"ts":1507558814000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Because the URL parser with how it’s stated currently doesn’t care that the interface is not exposed.","msgtype":"m.text"},"ts":1507558850000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it seems the structured deserialize operation would fail when that url is fetched","msgtype":"m.text"},"ts":1507558915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: but maybe it should fail sooner","msgtype":"m.text"},"ts":1507558929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I hope Mek can make some time to clean this up","msgtype":"m.text"},"ts":1507559002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: Blob should really be a solid part of the platform by now 😟","msgtype":"m.text"},"ts":1507559028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I assumed it was.","msgtype":"m.text"},"ts":1507559113000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think I should never assume such things.","msgtype":"m.text"},"ts":1507559119000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: What do you mean \"when that url is fetched\"?","msgtype":"m.text"},"ts":1507559134000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh, from a video element?","msgtype":"m.text"},"ts":1507559146000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: did workers exist when Blob was created?","msgtype":"m.text"},"ts":1507559158000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: not sure","msgtype":"m.text"},"ts":1507559211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OH","msgtype":"m.text"},"ts":1507559352000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I had not noticed that srcObject exists.","msgtype":"m.text"},"ts":1507559359000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'll just disregard Blob URLs for now (I'm implementing MSE stubs in Servo).","msgtype":"m.text"},"ts":1507559373000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: why only stubs?","msgtype":"m.text"},"ts":1507562698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Because Gecko people are changing the media stack so it's usable in Servo.","msgtype":"m.text"},"ts":1507562739000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: The plan is for them to decouple it from the rest of Gecko in the cleanest way possible,","msgtype":"m.text"},"ts":1507562756000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"while I implement as much as the DOM stuff in Rust,","msgtype":"m.text"},"ts":1507562762000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and then we combine our forces and join the missing dots.","msgtype":"m.text"},"ts":1507562775000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: rewrite the Gecko parts in Rust?","msgtype":"m.text"},"ts":1507562807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What do you mean? Which parts?","msgtype":"m.text"},"ts":1507562846000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The whole media stack?","msgtype":"m.text"},"ts":1507562849000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That would be above my pay-check my friend.","msgtype":"m.text"},"ts":1507562862000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: heh","msgtype":"m.text"},"ts":1507562869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I had lunch with some of them, mfw I realise most people on the media stack are IC5.","msgtype":"m.text"},"ts":1507562891000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it’s interesting that Gecko is now helping Servo without obvious benefit to Gecko","msgtype":"m.text"},"ts":1507562910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: heh","msgtype":"m.text"},"ts":1507562933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, we already are using the JS engine.","msgtype":"m.text"},"ts":1507563048000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: do you support promises yet?","msgtype":"m.text"},"ts":1507563063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes since last Fall IIRC.","msgtype":"m.text"},"ts":1507563086000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"what was it that people kept getting annoyed at WPT using, then?","msgtype":"m.text"},"ts":1507563107000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"arrow functions?","msgtype":"m.text"},"ts":1507563109000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: JS engine was always fairly reusable no?","msgtype":"m.text"},"ts":1507563116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: yeah","msgtype":"m.text"},"ts":1507563135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Meh. :p","msgtype":"m.text"},"ts":1507563258000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Updating it takes months.","msgtype":"m.text"},"ts":1507563275000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"fitzgen is working hard on improving that though.","msgtype":"m.text"},"ts":1507563293000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Member/w3c-css-wg/2017OctDec/0025.html — wow (re: last paragraph)","msgtype":"m.text"},"ts":1507563354000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: arrow functions, let, const…","msgtype":"m.text"},"ts":1507564470000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Also, Safari doesn't support some of that stuff either, IIRC.","msgtype":"m.text"},"ts":1507564502000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: Safari has since 10 a year ago","msgtype":"m.text"},"ts":1507564545000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Arrow functions?","msgtype":"m.text"},"ts":1507564585000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1507564606000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://caniuse.com/#feat=arrow-functions disagrees","msgtype":"m.text"},"ts":1507564620000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: huh? that shows Safari 10 supporting?","msgtype":"m.text"},"ts":1507564649000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders’ sentence was hard to parse, but he meant “a year ago, Safari 10”","msgtype":"m.text"},"ts":1507564677000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"gsnedders: OH","msgtype":"m.text"},"ts":1507564678000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1507564682000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I read \"since 10 years ago\".","msgtype":"m.text"},"ts":1507564687000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hah.","msgtype":"m.text"},"ts":1507564688000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1507564712000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but yeah, Safari 10 supported all of ES6","msgtype":"m.text"},"ts":1507564723000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think even ES 2016 is universal now?","msgtype":"m.text"},"ts":1507564754000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ES 2017 is everywhere except Edge (which tbf means that isn't relevant for WPT)","msgtype":"m.text"},"ts":1507564787000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: my thought for cross-origin module workers was that it was just fetching the script cross-origin. It still executes like a normal worker.","msgtype":"m.text"},"ts":1507572291000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It doesn't execute in the target origin or anything weird like that.","msgtype":"m.text"},"ts":1507572301000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: doesn’t work with selecting a service worker for it based on the request URL","msgtype":"m.text"},"ts":1507574888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How do we select a service worker for <script src=\"cross-origin-url\">?","msgtype":"m.text"},"ts":1507574917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the controller of the owning document","msgtype":"m.text"},"ts":1507574937000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"OK. Do that?","msgtype":"m.text"},"ts":1507574947000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"does anyone know if chrome separates http cache based on fetch credentials mode?","msgtype":"m.text"},"ts":1507575001000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: that does not work for clients","msgtype":"m.text"},"ts":1507579433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for clients you use the request URL","msgtype":"m.text"},"ts":1507579453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: pretty sure they don’t","msgtype":"m.text"},"ts":1507579487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: there is some discussion in a Fetch issue","msgtype":"m.text"},"ts":1507579505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/fetch/issues/307?","msgtype":"m.text"},"ts":1507579612000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah","msgtype":"m.text"},"ts":1507579648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why does that not work for clients?","msgtype":"m.text"},"ts":1507583600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: are modules clients?","msgtype":"m.text"},"ts":1507583987000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I thought modules were subresource requests","msgtype":"m.text"},"ts":1507583996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: for non-subresource requests there is no controlling client in place... so you have to do scope matching to determine if it should intercepted","msgtype":"m.text"},"ts":1507584044000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"are we trying to support cross-origin top level module scripts in workers or something?","msgtype":"m.text"},"ts":1507584059000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"My intent with module workers (in the spec, not implemented) was just to allow fetching the module source text from another URL, the same way <script src=> can do","msgtype":"m.text"},"ts":1507585435000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But apparently this doesn't work, for reasons I don't understand.","msgtype":"m.text"},"ts":1507585441000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I’ve got a question about interactions between module loading and HTTP2 that’s had me scratching my head for a few days — is that something appropriate to ask about here?","msgtype":"m.text"},"ts":1507592113000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"bathos: Yes.","msgtype":"m.text"},"ts":1507592247000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Cool. I’ve been experimenting with serving resources using HTTP2 push — assemble a dep graph in advance and follow through on requests by provisioning their known dependencies as push promises. This works great on the whole, but there’s a quirk I’ve observed that seems to be related specifically to ES module \"entrypoints\".","msgtype":"m.text"},"ts":1507592372000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"I asked about it on SO, so there’s a bit of detail in the question and comments there: https://stackoverflow.com/questions/46642569/http2-push-and-native-es-modules-entry-module-push-is-ignored","msgtype":"m.text"},"ts":1507592411000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"The gist though:","msgtype":"m.text"},"ts":1507592444000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"Given a request for a document which contains <script type=\"module\" src=\"something\">, and an http2 session which includes a push promise for \"something\", the \"something\" push is never adopted. Instead, the browser makes a fresh request for it.","msgtype":"m.text"},"ts":1507592497000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"Domenic: ^","msgtype":"m.text"},"ts":1507592499000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Dependencies imported _in_ ES are adopted.","msgtype":"m.text"},"ts":1507592525000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"bathos: I'm not an expert here, but your question reminds me of the with-vs-no-credentials problem in https://github.com/whatwg/fetch/issues/354.","msgtype":"m.text"},"ts":1507592571000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"And if I reference the same module in a different way in the root document, e.g. a preload <link>, it is successfully adopted. It’s peculiar to type=\"module\"","msgtype":"m.text"},"ts":1507592577000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"oh, interesting","msgtype":"m.text"},"ts":1507592596000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"Apologies if I've just sent you on a wild goose chase.","msgtype":"m.text"},"ts":1507592622000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I have been on a lot for the last two days haha! Since HTTP2 is still pretty mysterious to me, it’d been hard to rule out the possibility that I’m doing something weird there, though I’m pretty sure at this point that I’m not.","msgtype":"m.text"},"ts":1507592686000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"jyasskin you genius!","msgtype":"m.text"},"ts":1507593178000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"s/genius/pattern-matcher/ :)","msgtype":"m.text"},"ts":1507593194000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"crossorigin=\"use-credentials\" in the doc actually makes the module push promise get adopted","msgtype":"m.text"},"ts":1507593218000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"I never would have thought to try \"crossorigin\" on a file on the same host haha","msgtype":"m.text"},"ts":1507593242000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"JakeA: Do you know if anyone's looking into a devtools warning when this happens?","msgtype":"m.text"},"ts":1507593263000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]