[
{"content":{"body":"heh, thanks TabAtkins for the comment to the RDF-WG, feeling very lonely beating that drum sometimes","msgtype":"m.text"},"ts":1366159103000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: No problem!","msgtype":"m.text"},"ts":1366159114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is for the json-ld comment?","msgtype":"m.text"},"ts":1366159136000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nods","msgtype":"m.emote"},"ts":1366159140000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Also starting to get all the lovely \"You can't link to DOM4 and HTML5\" nonsense","msgtype":"m.text"},"ts":1366159383000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Asdhfa;lsjkd","msgtype":"m.text"},"ts":1366159393000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gavinc: Because they're drafts?","msgtype":"m.text"},"ts":1366159577000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yep.","msgtype":"m.text"},"ts":1366159586000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: So it's fine if I build my JSON-LD impl on top of dbaron's desk HTML4 impl?","msgtype":"m.text"},"ts":1366159624000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nope.","msgtype":"m.text"},"ts":1366159634000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"But I like building on top of solid bases!","msgtype":"m.text"},"ts":1366159665000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Same with new HTML data type ;) Doesn't work with DOM3, only works with DOM4 but may link to DOM3 anyway, yay process :D","msgtype":"m.text"},"ts":1366159671000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Complete and utter bullshit. As normal.","msgtype":"m.text"},"ts":1366159730000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wait, json-ld allows html?","msgtype":"m.text"},"ts":1366159735000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, not as strings?  Or just as strings?","msgtype":"m.text"},"ts":1366159745000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"RDF does.","msgtype":"m.text"},"ts":1366159966000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"https://dvcs.w3.org/hg/rdf/raw-file/default/rdf-concepts/index.html#section-html","msgtype":"m.text"},"ts":1366159975000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"therefor, JSON-LD does.","msgtype":"m.text"},"ts":1366159984000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"So... as strings, or as raw?","msgtype":"m.text"},"ts":1366160046000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"... both?","msgtype":"m.text"},"ts":1366160076000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"ewll","msgtype":"m.text"},"ts":1366160080000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"JSON-LD as Strings","msgtype":"m.text"},"ts":1366160085000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Okay.  So it's not actually JSON at all, then.","msgtype":"m.text"},"ts":1366160087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, kk.","msgtype":"m.text"},"ts":1366160090000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but by \"value\" as a DOM","msgtype":"m.text"},"ts":1366160102000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"there is a lexical-to-value mapping, which defined at the moment in terms of DOM4 and the fragment parsing algorithm, but what SHOULD be https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#parsing","msgtype":"m.text"},"ts":1366160163000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"heh, just to confuse things, the json api for java is \"JSONObject\" (which is nothing but a simple map with some helpers on it), so now people think there's such a thing as a \"json object\"","msgtype":"m.text"},"ts":1366160207000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"since the design is for a fragment of HTML that came from or should go into a complete HTML document","msgtype":"m.text"},"ts":1366160210000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gotta love trivially simple json apis using inheritance where it makes no sense whatsoever","msgtype":"m.text"},"ts":1366160230000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"notices people talking about JSON-LD... wakes up.","msgtype":"m.emote"},"ts":1366160248000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"waves to manu1","msgtype":"m.emote"},"ts":1366160262000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"waves back at gavinc. :)","msgtype":"m.emote"},"ts":1366160274000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Just json-ld people being bureaucracy-stupid.","msgtype":"m.text"},"ts":1366160276000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We've already complained in the appropriate channels, and are just bitching now. ^_^","msgtype":"m.text"},"ts":1366160295000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's what irc is there for","msgtype":"m.text"},"ts":1366160328000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Well, kinda... we followed the node.js model... and want to know why we should do futures instead of the node.js callback approach.","msgtype":"m.text"},"ts":1366160339000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: Don't know if you know this or not, but I'm the primary editor of the JSON-LD 1.0 Syntax spec... :)","msgtype":"m.text"},"ts":1366160364000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Yes, we depend on DOM4 and also a spec (template or some other fragment parsing method) that isn't really at all done yet, deal with it ;)","msgtype":"m.text"},"ts":1366160368000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"so I'd like to think that we're not being as retarded as it's coming across, but maybe we are.","msgtype":"m.text"},"ts":1366160375000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Because the node.js/jquery model is based on a pre-promises world.  Promises are the *correct* solution to handling completion/error callbacks.","msgtype":"m.text"},"ts":1366160401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And DOM Futures are the implementation fo promises.","msgtype":"m.text"},"ts":1366160421000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: one approach we discussed was doing a futures-lite approach w/o referencing the DOM4 spec.","msgtype":"m.text"},"ts":1366160435000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: That's the bureaucracy-stupid I was talking about.","msgtype":"m.text"},"ts":1366160451000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: got a link to some long-form argument for why promises are better than the node.js model?","msgtype":"m.text"},"ts":1366160456000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Just reference DOM4! If you have any HTML literals your going to need it anyway ;)","msgtype":"m.text"},"ts":1366160458000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"I don't care what eric says :P","msgtype":"m.text"},"ts":1366160469000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: We don't have HTML literals, luckily, in JSON-LD.","msgtype":"m.text"},"ts":1366160478000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"would sure have been nice if there was any discussion at all (use cases, justification, design)about \"futures\" (painfully buzzwordy name, by the way) on whatwg or webapps, rather than them just mysteriously appearing wholly formed; very much took me by surprise","msgtype":"m.text"},"ts":1366160489000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"manu1: Yeah, but RDF Concepts does ;)","msgtype":"m.text"},"ts":1366160500000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"nods at zewt.","msgtype":"m.emote"},"ts":1366160506000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Pretending that you have to engineer around a reference is putting bureaucracy ahead of *all the rest of the more important constituency groups*.","msgtype":"m.text"},"ts":1366160513000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: There was tons of discussion, over the last several years of development in the rest of Javascript land.","msgtype":"m.text"},"ts":1366160528000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"none that i've seen, except in the form of JS novices not understanding events","msgtype":"m.text"},"ts":1366160555000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: yes, yes, I am a believer... you don't have to convince me of that point. However, I also need to thread the W3C process needle, so I need to create some clear path forward that doesn't require me to go an change W3C process.","msgtype":"m.text"},"ts":1366160559000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"But basically: Futures turn the concept of \"an event that will either complete or error at some future time\" into a first-class object.  This (a) gives us a standard API to design against, which is better for authors, and (b) lets us design a useful algebra over them, which is non-trivial in the current ad-hoc callback/event world.","msgtype":"m.text"},"ts":1366160591000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: If there was tons of discussion, surely somebody has written up a clear set of argumentation for why futures are the future.","msgtype":"m.text"},"ts":1366160603000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: The process needle is yours to thread, but it's the least important thing in the entire spec.","msgtype":"m.text"},"ts":1366160611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"coughs at manu1, and being at PR is important... 'cause? ;)","msgtype":"m.emote"},"ts":1366160633000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"manu1: Importantly, if you're making bad technical decisions just to hit the vaunted \"Rec\" status, you're doing the wrong thing.","msgtype":"m.text"},"ts":1366160637000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(mostly I don't like that it's a separate underlying mechanism, instead of an abstraction on events, so we don't have an ugly low-level schism)","msgtype":"m.text"},"ts":1366160653000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Remember the ordering of constituencies: technical purity < implementors < authors < users.","msgtype":"m.text"},"ts":1366160662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And \"bureaucracy\" is either part of technical purity, or something even further below it.","msgtype":"m.text"},"ts":1366160676000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: There are two things going on here: 1) I'm not entirely convinced that futures are the messiah they're being made out to be and I'd like to read something about why they are, and 2) W3C process stuff is a reality I have to deal with, so if I'm going to ask the JSON-LD group to go through another Last Call, I'd like to have a very good reason to do so.","msgtype":"m.text"},"ts":1366160707000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"zewt: Events have their own baggage and problems.  They're reasonably well-designed for their original use-case, that of dealing with events in a tree structure.  They're overdesigned for anything not in a tree structure.","msgtype":"m.text"},"ts":1366160748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gavinc: PR / REC is important because it means I can move on to working on the Web Payments stuff ( https://hacks.mozilla.org/2013/04/web-payments-with-payswarm-identity-part-1-of-3/ ) instead of dealing w/ low-level representation stuff :)","msgtype":"m.text"},"ts":1366160751000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Overdesigned/expensive (you can't, for example, ever forget about listeners).","msgtype":"m.text"},"ts":1366160760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: Or you can just leave the spec at CR!  That's also a solution, and lets you do your thing.","msgtype":"m.text"},"ts":1366160786000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A spec isn't \"done\" at Rec any more than it is at CR.","msgtype":"m.text"},"ts":1366160797000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Please, please, please write a blog post about this, or ask someone that can to do so - it's going to be very difficult for me to make an argument based on what I'm seeing in this chat channel.","msgtype":"m.text"},"ts":1366160810000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"the design is very well-understood","msgtype":"m.text"},"ts":1366160815000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"manu1: there is a comment in rdf-wg-comments ;) perhaps he should expand it ? :D","msgtype":"m.text"},"ts":1366160844000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"that would work too.","msgtype":"m.text"},"ts":1366160858000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: Planning on doing so.  I'm currently messing around with my blog post for a DOM EventStream proposal, built on the precedent of Futures. ^_^","msgtype":"m.text"},"ts":1366160867000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: If we can figure out a way to put futures into the JSON-LD API and get to REC, let's do that (if it's the right thing to do).","msgtype":"m.text"},"ts":1366160897000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"anyway, it would just have been nice to have the opportunity to offer input and perhaps a counterproposal, but the api appearing whole cloth makes me not motivated to bother (seems like minds have already been made up)","msgtype":"m.text"},"ts":1366160909000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"manu1: And if it's a choice between putting futures in, and going to Rec, the right choice is to put futures in.  Rec is a non-goal for a spec, it's solely a process checkbox.","msgtype":"m.text"},"ts":1366160931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: It's based directly on Promises/Aplus, which has established itself as being the most popular and most theoretically reasonable version of promises.","msgtype":"m.text"},"ts":1366160962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Not to certain big companies that want to use the technology... REC is an internal requirement for them.","msgtype":"m.text"},"ts":1366160968000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"TabAtkins: Like it or not, not all companies believe in perma-development for specs (even if it is reality in many cases)","msgtype":"m.text"},"ts":1366161005000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"RDF-WG already has to deal with the DOM4 issue, or lie about rdf:HTML","msgtype":"m.text"},"ts":1366161018000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"manu1: They're welcome to change their policies.  Hurting the entire web for the sake of short-term corporate silliness is not a good tradeoff.","msgtype":"m.text"},"ts":1366161040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why does rdf:HTML depend on DOM4 ?","msgtype":"m.text"},"ts":1366161041000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: It depends on the fragment parsing algorithm.","msgtype":"m.text"},"ts":1366161050000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"most popular\" isn't exactly a compelling argument :)","msgtype":"m.text"},"ts":1366161069000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: You're doing your own 'technical purity' argument there - you're arguing from a 'philosophical purity' standpoint.","msgtype":"m.text"},"ts":1366161071000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: not sure i'd call \"good for the web\" a philosophical point","msgtype":"m.text"},"ts":1366161105000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: I happen to agree with much of your philosophical purity arguments, but I also have a business to run and getting things to a state that convinces other companies to start using the technology is a driving factor for the work we do. :)","msgtype":"m.text"},"ts":1366161128000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1: No, I'm arguing for the users.  Just a wider set of users - the web, and the *actual developers* in those companies - rather than the company lawyers.","msgtype":"m.text"},"ts":1366161133000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: It is a philosophical point :) - I agree with it, but let's call it what it is - it's a philosophy... just like 'good for large corporate interests' is a philosophy... and 'good for the market' is a philosophy.","msgtype":"m.text"},"ts":1366161166000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"This is no more a theoretical purity argument than arguing about a point relevant to, say, disabled users.","msgtype":"m.text"},"ts":1366161168000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1 - re: \"REC is an internal requirement … for certain big companies that want to use the technology\" - those companies rarely (ever?) make/break any kind of adoption curve - they're very much late adopters (after the market has settled on something) so there's no need to cater to such companies whatsoever.","msgtype":"m.text"},"ts":1366161182000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(Not intending to invoke a11y deliberately, just the first relevant type of group that pops in.)","msgtype":"m.text"},"ts":1366161192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu1: however you put it, i definitely don't see an analogy from it to \"technical purity\"","msgtype":"m.text"},"ts":1366161223000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"tantek, TabAtkins, zewt: Ok, we're venturing into perma-thread territory here, so I retract my desire to discuss philosophical points (or whether or not something is a philosophical point).","msgtype":"m.text"},"ts":1366161257000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"uh okay? heh","msgtype":"m.text"},"ts":1366161281000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"do you also retract bringing up whether REC matters and large companies that care (or not) about REC status? there is no new data on that front.","msgtype":"m.text"},"ts":1366161301000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins, tantek, zewt: All I'd like help with is figuring out if futures are the right solution for the JSON-LD API, how to get futures into the JSON-LD API, and get to REC at W3C. It seems like something that is do-able... just wondering if anybody else in here has been through that process before.","msgtype":"m.text"},"ts":1366161309000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Recall that I live mostly in a group that strongly follows W3C Process, but also manages to be agile and make good technical decisions without fretting about this kind of thing.","msgtype":"m.text"},"ts":1366161311000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: I've had discussions with large companies that are thought of as cutting-edge that have asked us when certain specs we're working on are going to get to REC, because they'd like to adopt them when they do.","msgtype":"m.text"},"ts":1366161382000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1 - which process? taking something to REC? have a few of those. turned out to not really matter much between CR and REC>","msgtype":"m.text"},"ts":1366161383000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: No, the process of taking a W3C spec to REC with an API that depends on futures.","msgtype":"m.text"},"ts":1366161419000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"tantek: specifically, DOM4 Futures.","msgtype":"m.text"},"ts":1366161428000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"tantek: Also, documentation on why futures are preferable over node.js-style continuation callbacks.","msgtype":"m.text"},"ts":1366161461000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"tantek: as in a complete blog post on the matter.","msgtype":"m.text"},"ts":1366161473000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1 \"companies that are actually (not just thought of as) cutting-edge\" ∩ \"when certain specs we're working on are going to get to REC, because they'd like to adopt them when they do\" = ∅","msgtype":"m.text"},"ts":1366161477000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(Technically, it's not DOM4.  It's WHATWG's DOM.)","msgtype":"m.text"},"ts":1366161503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"even worse :)","msgtype":"m.text"},"ts":1366161516000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(as in worse from a political standpoint)","msgtype":"m.text"},"ts":1366161525000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"(not a technical one)","msgtype":"m.text"},"ts":1366161534000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1 - if caring about the politics is stopping you from getting work done, you're doing it wrong.","msgtype":"m.text"},"ts":1366161545000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: It's not stopping us from getting work done at all, I think you're missing some details of what we're discussing.","msgtype":"m.text"},"ts":1366161583000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"spec it, test it, code it, ship it - if what you've spec'd/tested/coded is good, others will do so as well and interoperate, if it's not, they won't. no amount of political gladhandling/announcements/PR will make a difference compared to implementing/shipping.","msgtype":"m.text"},"ts":1366161612000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"manu1 - you're the one that bothers to bring up \"worse from a political standpoint\" - ergo, you care about the politics. if you didn't care about the politics, you wouldn't bring them up.","msgtype":"m.text"},"ts":1366161652000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: we've spec'd it, tested it, coded it and shipped it. Nobody complained except for Tab and Boris.","msgtype":"m.text"},"ts":1366161667000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"When Boris and Tab say something, I try to listen and figure out why they're saying what they're saying (out of respect for their point of view)","msgtype":"m.text"},"ts":1366161687000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"so this is me trying to figure out what they're saying.","msgtype":"m.text"},"ts":1366161695000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"shipping = interoperable implementations in an implementation report","msgtype":"m.text"},"ts":1366161701000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"not shipping a spec","msgtype":"m.text"},"ts":1366161705000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"we have interoperable implementations in an implementation report - 5 of them.","msgtype":"m.text"},"ts":1366161720000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"on the public web? or is this more pretend-web? (intranets etc.)","msgtype":"m.text"},"ts":1366161744000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"public web","msgtype":"m.text"},"ts":1366161752000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"well congrats then. now you just have to iterate to keep up with market demands.","msgtype":"m.text"},"ts":1366161781000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: That's why I'm having this discussion w/ TabAtkins :)","msgtype":"m.text"},"ts":1366161797000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"tantek: Trying to figure out if we need to change from node.js-style callbacks to futures","msgtype":"m.text"},"ts":1366161813000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"yup - asking why futures are good technically is a good path forward","msgtype":"m.text"},"ts":1366161814000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"all the politics/process/REC crap is not","msgtype":"m.text"},"ts":1366161823000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: exactly - which is what we're doing here.","msgtype":"m.text"},"ts":1366161827000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"tantek: Know any convincing posts on why futures are better than node.js-style callbacks?","msgtype":"m.text"},"ts":1366161858000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1 - your technical message/questions would be more credible with fewer (preferably zero) mentions of politics/process/REC crap","msgtype":"m.text"},"ts":1366161874000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"have found that when people mention both, they're confused about the relevance (lack thereof) of politics/process/REC crap","msgtype":"m.text"},"ts":1366161892000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Tab is the one that brought up the politics/process/REC crap.","msgtype":"m.text"},"ts":1366161895000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"I was responding to an e-mail he sent to a W3C mailing list.","msgtype":"m.text"},"ts":1366161915000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"Okay, finished my current batch of edits to my event-stream proposal.  I'll write up a quick Futures defense now.","msgtype":"m.text"},"ts":1366161919000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: /thank you/ - that would be super helpful.","msgtype":"m.text"},"ts":1366161932000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"goes back to sleep.","msgtype":"m.emote"},"ts":1366161952000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"manu1 - seemed to me you were the one discussing it more. but then hey if you're willing to drop it, so am I. ;)","msgtype":"m.text"},"ts":1366161961000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: It's a perma-thread that doesn't result in technical work getting done... so yeah, let's drop it. :)","msgtype":"m.text"},"ts":1366161990000,"senderName":"manu1","senderId":"manu1@irc"},
{"content":{"body":"ok i worked out why annevk wasn't able to file bugs","msgtype":"m.text"},"ts":1366162215000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"turns out i had an early \"return\" right before the code that actually filed the bug","msgtype":"m.text"},"ts":1366162228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that i could test it without filing bugs the other day","msgtype":"m.text"},"ts":1366162237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"oops\"","msgtype":"m.text"},"ts":1366162241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if anyone tried to file bugs... sorry...","msgtype":"m.text"},"ts":1366162250000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in other news, EmotionML apparently exited CR: http://www.w3.org/TR/2013/PR-emotionml-20130416 with supposedly several implementations: http://www.w3.org/2002/mmi/2013/emotionml-ir/#systems","msgtype":"m.text"},"ts":1366162906000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"<emotionml xmlns=\"http://www.w3.org/2009/10/emotionml\"><emotion><category name=\"Surprise\" value=\"0.5\"/><category name=\"Amusement\" value=\"0.5\"/></emotion></emotionml>","msgtype":"m.text"},"ts":1366163047000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"<emotion><category name=\"Sarcasm\" value=\"1.0\"/>I didn't even get a mention in the spec</emotion>","msgtype":"m.text"},"ts":1366163602000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"I'd like to request an account on http://wiki.whatwg.org/ so I can register a meta extension.","msgtype":"m.text"},"ts":1366171014000,"senderName":"superm401","senderId":"superm401@irc"},
{"content":{"body":"superm401: what username?","msgtype":"m.text"},"ts":1366172073000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mattflaschen","msgtype":"m.text"},"ts":1366172085000,"senderName":"superm401","senderId":"superm401@irc"},
{"content":{"body":"anyone here have opinions on https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AlternateNames ?","msgtype":"m.text"},"ts":1366187946000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: there's no way that can be killed?","msgtype":"m.text"},"ts":1366192189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: of course there is a way.","msgtype":"m.text"},"ts":1366197543000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i bet it would be effective if mozilla were to say \"we're not gonna implement the legacy names\" :-)","msgtype":"m.text"},"ts":1366197632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"For all I know we asked for them to be defined :)","msgtype":"m.text"},"ts":1366197659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though that specification is sketchy at best","msgtype":"m.text"},"ts":1366197676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't know what the history is here","msgtype":"m.text"},"ts":1366197681000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"except apparently gassa had complained about it before me","msgtype":"m.text"},"ts":1366197693000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i would be happier with just the legacy names than duplicated API surface","msgtype":"m.text"},"ts":1366197729000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but i don't see that the compat claim is valid in the first place","msgtype":"m.text"},"ts":1366197748000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/gassa/mage/","msgtype":"m.text"},"ts":1366197870000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mage?","msgtype":"m.text"},"ts":1366198010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You could make that comment on the mailing list","msgtype":"m.text"},"ts":1366198021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You should probably also suggest they ask review on public-script-coord","msgtype":"m.text"},"ts":1366198031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it would be clearer if I made the http/https stuff in http://fetch.spec.whatwg.org/#basic-fetch a list of steps right?","msgtype":"m.text"},"ts":1366198097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i already commented on the mailing list. though haven't suggested -coord","msgtype":"m.text"},"ts":1366199860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so much fallout from the Encoding Standard tweaking the meaning of the UTF-16 label","msgtype":"m.text"},"ts":1366202639000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"apparently using ` in commit message is a bad idea","msgtype":"m.text"},"ts":1366202656000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: the idea was for there not to be fallout, if there is maybe we should fix the spec?","msgtype":"m.text"},"ts":1366202680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: let's not go there before analyzing this","msgtype":"m.text"},"ts":1366202778000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1366202784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aargh. yet another use of the encoding detector that I was unaware of","msgtype":"m.text"},"ts":1366203043000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when attaching a file, guessing the charset and then sending the guess as authoritative metadata","msgtype":"m.text"},"ts":1366203064000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yay authoritative metadata","msgtype":"m.text"},"ts":1366203078000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Sharing encoding code between a Web engine and an email client is such a pain.","msgtype":"m.text"},"ts":1366204245000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I sort of think that the email encoding stuff should match the web encoding stuff. But if they've really diverged then it is indeed problematic :(","msgtype":"m.text"},"ts":1366204607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, i get easily confused by writing modes. anyone have suggestions for how to fix the spec here? http://www.w3.org/mid/A592E245B36A8949BDB0A302B375FB4E0D242ABFEC⊙Mml","msgtype":"m.text"},"ts":1366204707000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i was thinking of defining terms \"logical top\" etc, but i'm not sure how things work when the ancestor chain have different writing modes or stuff like that","msgtype":"m.text"},"ts":1366204707000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"CSS really ought to define all these box concepts in the long run so CSSOM can simply provide script hooks","msgtype":"m.text"},"ts":1366205350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In other words, you don't want to define the model twice","msgtype":"m.text"},"ts":1366205372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really need to make moving bugzilla.validator.nu out to a different VM and making validator.nu not to default to HTML4 higher priorities","msgtype":"m.text"},"ts":1366207412000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1366207417000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I can work on the not-default-to-HTML4 part if you want","msgtype":"m.text"},"ts":1366208275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bugzilla.validator.nu has been painfully slow for a couple of weeks now at least","msgtype":"m.text"},"ts":1366208300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"often to the point of being near-unusable","msgtype":"m.text"},"ts":1366208310000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but honestly not sure how many other people are affected by it","msgtype":"m.text"},"ts":1366208350000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I'm the main user by a longshot","msgtype":"m.text"},"ts":1366208361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"still, I can imagine that it might have caused a few people who wanted to report a bug to just give up","msgtype":"m.text"},"ts":1366208401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"while waiting for it to respond with the bug-entry form","msgtype":"m.text"},"ts":1366208449000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well, if you work on the not-default-to-HTML4 part, bugzilla.validator.nu is likely to become faster :-)","msgtype":"m.text"},"ts":1366208581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but really, I should different things on different VMs and just pay a little more for hosting","msgtype":"m.text"},"ts":1366208613000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*should put","msgtype":"m.text"},"ts":1366208619000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but not gonna happen in the next 3 weeks :-/","msgtype":"m.text"},"ts":1366208644000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe after","msgtype":"m.text"},"ts":1366208648000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1366208798000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Anyone a better name for \"basic fetch\"?","msgtype":"m.text"},"ts":1366209376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, and reviewing http://fetch.spec.whatwg.org/#fetching is appreciated, even though not all the details are hashed out yet","msgtype":"m.text"},"ts":1366209401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"For now, unfortunate as it is, file URLs are left as an exercise for the reader.\" wimp","msgtype":"m.text"},"ts":1366209566000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: I defined file URL parsing (by generalising a Windows-specific bit to happen everywhere), file URL fetching however is even more heavily tied to platforms :(","msgtype":"m.text"},"ts":1366209711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, all browsers have a different origin model with respect to file URLs.","msgtype":"m.text"},"ts":1366209747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah :\\","msgtype":"m.text"},"ts":1366209754000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"annevk: after 10, of http... if  manual redirect flag IS set... does it return the response or the  redirect? I guess it's the response, which is now a  redirect per 9... okay","msgtype":"m.text"},"ts":1366209999000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"err... per 8","msgtype":"m.text"},"ts":1366210007000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: yeah, you'd get a response that's flagged as a redirect","msgtype":"m.text"},"ts":1366210045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gavinc: I've been thinking of changing that to something like set response's type to redirect","msgtype":"m.text"},"ts":1366210141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1366210149000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"http: 5, cookies, is where anything dealing with the fact that some cookies should or shouldn't be sent via HTTP and only HTTPS will end up living?","msgtype":"m.text"},"ts":1366210241000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Or just going to refer to 6265?","msgtype":"m.text"},"ts":1366210290000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"It's mostly about whether we'll include them at all","msgtype":"m.text"},"ts":1366210362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then we need equivalent wording for the response, to whether or not Set-Cookie headers will be honored","msgtype":"m.text"},"ts":1366210385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, annevk, gavinc: Response to Tab's post on DOM4 Futures and JSON-LD API, would like to know if I'm wrong: http://lists.w3.org/Archives/Public/public-linked-json/2013Apr/0016.html","msgtype":"m.text"},"ts":1366210555000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db: the spec is done...","msgtype":"m.text"},"ts":1366210934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"manu-db: do the other languages support Web IDL?","msgtype":"m.text"},"ts":1366210940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in general that kind of argumentation for web apis is flawed imo","msgtype":"m.text"},"ts":1366210957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: See my blog post at http://www.xanthir.com/b4PY0 for an explanation of the value of Futures.","msgtype":"m.text"},"ts":1366213075000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu-db: I have rebuttals to a few of your points, but I'm not subscribed to that list.  What's the best way to respond for you?","msgtype":"m.text"},"ts":1366213281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oooh, XML Core asking about the removal of xml* properties from the DOM!","msgtype":"m.text"},"ts":1366213481000,"senderName":"darobin_","senderId":"darobin_@irc"},
{"content":{"body":"gets some popcorn","msgtype":"m.emote"},"ts":1366213487000,"senderName":"darobin_","senderId":"darobin_@irc"},
{"content":{"body":"wishes that people would spend their time on adding tests rather than trying to remove them","msgtype":"m.emote"},"ts":1366213556000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"manu-db: Oh wait, I see you kept me in the reply loop.  I'll just reply to that, then.  (Sorry, hadn't gotten through all my mail yet.)","msgtype":"m.text"},"ts":1366213599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Yeah, you should be able to respond to public-rdf-comments - your comment should stick there (it's an open list)","msgtype":"m.text"},"ts":1366213780000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"tobie, stop trolling and go do something useful","msgtype":"m.text"},"ts":1366213787000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: :) I return the comment.","msgtype":"m.text"},"ts":1366213807000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"More seriously, though… I feel khronos stuff should belong in khronos test suites","msgtype":"m.text"},"ts":1366213846000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Does anyone know what version of promises Node originally shipped with?","msgtype":"m.text"},"ts":1366213850000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu-db: ^^^ ?","msgtype":"m.text"},"ts":1366213855000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: re: spec done-ness - I meant \"done\" in a \"multiple interoperable implementations\" sense...","msgtype":"m.text"},"ts":1366213863000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"TabAtkins: think node pre-dated the CJS promise effort","msgtype":"m.text"},"ts":1366213879000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: It was a fairly crappy version of Promises (or rather, that's what the Promises Gurus argued)","msgtype":"m.text"},"ts":1366213880000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1366213880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: hehe, I replied...","msgtype":"m.text"},"ts":1366213902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: It was node 0.2 that removed promises, in favor of callback management, iirc","msgtype":"m.text"},"ts":1366213910000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"TabAtkins: Let me try and find out more about which version of promises shipped w/ node.js 0.2","msgtype":"m.text"},"ts":1366213930000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"Ms2ger: which doesn't mean we can't ultimately run these test suites too.","msgtype":"m.text"},"ts":1366213942000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"manu-db: Thanks - without much knowledge, my searches aren't turning up much useful, just a bunch of userland promise libraries.","msgtype":"m.text"},"ts":1366213964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: just that, as with ES, there is no point duplicating the effort.","msgtype":"m.text"},"ts":1366213979000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: probably going to have to dive into the node.js commit logs or code at v0.2","msgtype":"m.text"},"ts":1366214006000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db: Not willing to do that, so I'll just take you at your word that it was some crappy version of promises.","msgtype":"m.text"},"ts":1366214026000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think I only got part of the email to http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/ :/","msgtype":"m.text"},"ts":1366214065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: \"crappy\" - the pro-promises people were saying that node.js wasn't including certain features that made promises really compelling. The anti-promises people were arguing that node.js shouldn't pick a winner when it came to asynchronous program control flow.","msgtype":"m.text"},"ts":1366214091000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"notices that there is a completely separate Future's discussion happening on public-script-coord... thanks annevk for the link.","msgtype":"m.emote"},"ts":1366214169000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"TabAtkins: I remember seeing some sort of argumentation that you could build promises on top of a callback management approach, but you couldn't build callback management on top of promises. It sounded like a compelling argument on the surface, but then it seemed like you could do either (and then I stopped thinking about it because of another fire that needed to be put out).","msgtype":"m.text"},"ts":1366214262000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"Pretty sure you can do either, but I'd have to get into details to make sure.","msgtype":"m.text"},"ts":1366214288000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh, public-script-coord is on fire :)","msgtype":"m.text"},"ts":1366214290000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"oh great, now Anne has made TC39 blame W3C for forking Futures into the WHATWG spec","msgtype":"m.text"},"ts":1366214491000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"let me call up my friends in MPEG to make this really interesting","msgtype":"m.text"},"ts":1366214504000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"wonders when this turned into a 'turf war'?","msgtype":"m.emote"},"ts":1366214534000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"chews his pop corn loudly and watches with concern ... and a little entertained smirk... but mostly concern","msgtype":"m.emote"},"ts":1366214546000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"aren't we just talking about virtual words on a virtual page?","msgtype":"m.text"},"ts":1366214557000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db: we are in a constant state of \"cold war\"","msgtype":"m.text"},"ts":1366214566000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"wonders who is \"winning\"... because it doesn't seem like it's W3C, or IETF, or TC39, or WHATWG, or MPEG, or...","msgtype":"m.emote"},"ts":1366214627000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"I need more popcorn","msgtype":"m.text"},"ts":1366214749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, so long as there are companies that don't know what else to do with their research centres than churn out patents, and so long as there are hapless academics looking for cheap \"industrial\" validation, then MPEG will be winning (at the game they're playing)","msgtype":"m.text"},"ts":1366214750000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"as for those of us who care about the actual platform, indeed, I'm not sure","msgtype":"m.text"},"ts":1366214765000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Certainly in a way this situation seems similar to ArrayBuffer... We ask for it in 2006. Khronos delivers. TC39 mourns in 2012.","msgtype":"m.text"},"ts":1366215095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: No, I can happily say LAWYERS are winning. http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2247195","msgtype":"m.text"},"ts":1366215233000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"happily?","msgtype":"m.text"},"ts":1366215361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"happy to be able to say backed up with data","msgtype":"m.text"},"ts":1366215374000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"not just a feeling any more","msgtype":"m.text"},"ts":1366215379000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"where is this drama happening","msgtype":"m.text"},"ts":1366215475000,"senderName":"nimbu1","senderId":"nimbu1@irc"},
{"content":{"body":"Oh man \"promises are in es7\"","msgtype":"m.text"},"ts":1366215550000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I look forward to 2029 or whenever that will be done","msgtype":"m.text"},"ts":1366215572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And by \"done\" I mean \"implemented\" of course, not \"ratified by the standards body\"","msgtype":"m.text"},"ts":1366215631000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But you all knew that","msgtype":"m.text"},"ts":1366215637000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: for you: http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0143.html","msgtype":"m.text"},"ts":1366216292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-respimg/2013Apr/0001.html","msgtype":"m.text"},"ts":1366216329000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1366216388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah, if people want something, they'll make it happen","msgtype":"m.text"},"ts":1366216406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"XML Signature and XML Encryption are W3C Recommendations\"","msgtype":"m.text"},"ts":1366216677000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: Promises were dropped in node.js v0.1.30 on Feb 19th, 2010: https://groups.google.com/forum/?fromgroups=#!msg/nodejs/jaufClrXU9U/ov5WHIk7SAwJ","msgtype":"m.text"},"ts":1366216691000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"TabAtkins: found it - http://manu.sporny.org/tmp/node-0.1.29-api.html#_tt_events_promise_tt","msgtype":"m.text"},"ts":1366217468000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"looks pretty craptacular... the node.js 'q' module (better promises for Node.js) is much better: https://npmjs.org/package/q","msgtype":"m.text"},"ts":1366217512000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"annevk: good point here https://twitter.com/rem/status/324533773360320514","msgtype":"m.text"},"ts":1366217567000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: why would you not use .add('foo', 'bar')?","msgtype":"m.text"},"ts":1366217634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"manu-db: Ugh, jeezus, that's a bad promises API.  No  *wonder* it failed.","msgtype":"m.text"},"ts":1366217653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well if you're from HTML land, \"foo bar\" sort of makes sense","msgtype":"m.text"},"ts":1366217662000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: because class names are strings ya","msgtype":"m.text"},"ts":1366217668000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"I'm not saying it's a feature to die for, but it makes sense","msgtype":"m.text"},"ts":1366217674000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1366217678000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"its intuitive","msgtype":"m.text"},"ts":1366217680000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"it beats an exception with a big stick in any case","msgtype":"m.text"},"ts":1366217687000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"anyway, people are opening beers in the office","msgtype":"m.text"},"ts":1366217772000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"dbaron, would it help if I published Colors 4 ED with one of those big \"Not Ready for Implementation\" messages for now?","msgtype":"m.emote"},"ts":1366217776000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"divya: then just do .className += \"foo bar\"","msgtype":"m.text"},"ts":1366217862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"divya: if you want to deal with strings","msgtype":"m.text"},"ts":1366217867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: wrong channel?","msgtype":"m.text"},"ts":1366218062000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: well, that doesn't work for .remove(\"foo bar\") and you do want some consistency here.","msgtype":"m.text"},"ts":1366218139000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: classList is not a string, it's a list of tokens","msgtype":"m.text"},"ts":1366218506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in the developer's perspective, this is an implementation detail.","msgtype":"m.text"},"ts":1366218555000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"it seems super silly to support both spaces and \"foo\", \"bar\", \"x\" notation","msgtype":"m.text"},"ts":1366218604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the dreadful API for getElementsByClassName created this weird precedent.","msgtype":"m.text"},"ts":1366218644000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"people should use querySelector or .find when it's out though","msgtype":"m.text"},"ts":1366218708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"getElementsBy* are not really encouraged anymore","msgtype":"m.text"},"ts":1366218723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems to me though that if you store classes as a string you're doing it wrong","msgtype":"m.text"},"ts":1366218805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm by nature more of a formalist than the mean, so I tend to agree with you. But most devs don't, and they just want things to work, whatever they throw at it.","msgtype":"m.text"},"ts":1366218832000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I don't have strong opinions either way. We  discussed this and decided variadic were the way to go, so I added those.","msgtype":"m.text"},"ts":1366218892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We can add this too, but I rather have browser developers work on more interesting features.","msgtype":"m.text"},"ts":1366218909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just want it to work whatever I throw at it doesn't really help for progamming in the large though","msgtype":"m.text"},"ts":1366218914000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and then… element.classList.add(‘foo\\nbar’); or element.classList.add(‘foo\\tbar’);","msgtype":"m.text"},"ts":1366218924000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I needed more quotes there","msgtype":"m.text"},"ts":1366218936000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that depends on the size of the project and the team.","msgtype":"m.text"},"ts":1366218974000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well \"in the large\" is sort of the limit as those things tend to infinity","msgtype":"m.text"},"ts":1366219023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in general, the web platform is too strict to make small teams happy, and too loose for real large projects.","msgtype":"m.text"},"ts":1366219069000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1366219074000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"(except it probably isn't because projects probably get increasingly difficult as the team gets bigger or something, so it doesn't really matter what's good if you have a million programmers because everything will be terrible anyway)","msgtype":"m.text"},"ts":1366219077000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"karlcow: we always cater to those ;)","msgtype":"m.text"},"ts":1366219220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1366219229000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"tobie: I think that depends on what room of the platform you happen to stumble into","msgtype":"m.text"},"ts":1366219279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: https://github.com/html5lib/html5lib-python/issues/21","msgtype":"m.text"},"ts":1366219346000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Because, like, I want to get 1.0b1 out this month :P","msgtype":"m.text"},"ts":1366219355000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: possibly. The point remains that there are very different audiences with conflicting requirements.","msgtype":"m.text"},"ts":1366219381000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: there's everything from the too low-level (endianness?!) to the probably too high-level (String.prototype.anchor?)","msgtype":"m.text"},"ts":1366219390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't you love the later?","msgtype":"m.text"},"ts":1366219411000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/later/latter/","msgtype":"m.text"},"ts":1366219418000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah, after the usual sadness delay I typically come to love the quirks","msgtype":"m.text"},"ts":1366219456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"stockholm syndrome is awesome","msgtype":"m.text"},"ts":1366219509000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"unless they don't stop biting me, like <image>","msgtype":"m.text"},"ts":1366219519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's some issues on document.createElement(\"image\") needing to create HTMLImageElement whose localName is \"img\"","msgtype":"m.text"},"ts":1366219543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"marcosc: :D","msgtype":"m.text"},"ts":1366219545000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"now that's some fucked up shit","msgtype":"m.text"},"ts":1366219548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: lol, I didn't know that one","msgtype":"m.text"},"ts":1366219687000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"that's awesome","msgtype":"m.text"},"ts":1366219694000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"who introduced that gem?","msgtype":"m.text"},"ts":1366219704000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc, not in Gecko, fwiw","msgtype":"m.text"},"ts":1366219704000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: get to it! implement it now!","msgtype":"m.text"},"ts":1366219716000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366219717000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"It's not really high-level vs low-level though","msgtype":"m.text"},"ts":1366219802000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's strict vs loose","msgtype":"m.text"},"ts":1366219808000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or something","msgtype":"m.text"},"ts":1366219814000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's crap and other crap?","msgtype":"m.text"},"ts":1366219846000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: Do I need a sourceforge account?","msgtype":"m.text"},"ts":1366219876000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's not vs I think","msgtype":"m.text"},"ts":1366219885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's the whole spectrum","msgtype":"m.text"},"ts":1366219889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well of course","msgtype":"m.text"},"ts":1366219908000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"usually a function of the people involved","msgtype":"m.text"},"ts":1366219913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I think so.","msgtype":"m.text"},"ts":1366219927000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and due to lack of overall design","msgtype":"m.text"},"ts":1366219930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is somewhat improbable","msgtype":"m.text"},"ts":1366219940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it is useful to know if there is a set of principal axes which allow you to model the problem without the full complexity","msgtype":"m.text"},"ts":1366219972000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: FYI, W3C has ISO support these days but yeah, wtf","msgtype":"m.text"},"ts":1366221066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: curious does the generated content spec address which elements pseudo elements the content property gets applied?","msgtype":"m.text"},"ts":1366221258000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"TabAtkins: curious about addnig content within an iframe::before or iframe::after","msgtype":"m.text"},"ts":1366221271000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"annevk: Interested in potentially adding more Futures combinators?  Looks like there are a few decent ones in https://github.com/caolan/async/blob/master/README.md, though I need to go through them in detail to figure out which ones are just working around callback weirdness.","msgtype":"m.text"},"ts":1366221276000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nimbu: Everything that's not a replaced element gets ::before/::after.","msgtype":"m.text"},"ts":1366221298000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: is it documented somewhere.","msgtype":"m.text"},"ts":1366221313000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Maybe?","msgtype":"m.text"},"ts":1366221317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think I'd like to see a browser implementation first and then add some more stuff","msgtype":"m.text"},"ts":1366221325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sounds reasonable.","msgtype":"m.text"},"ts":1366221332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What we have for now is sufficient for most things, anyway.","msgtype":"m.text"},"ts":1366221340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: also, if it's not just Mark Miller but the entirety of TC39 that's pissed off, I'd like to see what they can bring to the table","msgtype":"m.text"},"ts":1366221351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1366221362000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, it's not the entirety for sure, but I'd like to know what the others think","msgtype":"m.text"},"ts":1366221382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: http://www.w3.org/TR/css3-content/#replacedContent does not define what is a replaced element","msgtype":"m.text"},"ts":1366221394000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"TabAtkins: is it in html5 spec?","msgtype":"m.text"},"ts":1366221402000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Maybe?","msgtype":"m.text"},"ts":1366221406000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why are you looking at TR?","msgtype":"m.text"},"ts":1366221420000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: !!!!!","msgtype":"m.text"},"ts":1366221421000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Also: yes, what Ms2ger said.","msgtype":"m.text"},"ts":1366221431000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://www.w3.org/html/wg/drafts/html/master/rendering.html#replaced-elements","msgtype":"m.text"},"ts":1366221449000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Ms2ger: srry first result in googling","msgtype":"m.text"},"ts":1366221462000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Why are you looking at the forked HTML?","msgtype":"m.text"},"ts":1366221469000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1366221507000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"s/forked/stolen","msgtype":"m.text"},"ts":1366221513000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1366221515000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Hehe","msgtype":"m.text"},"ts":1366221518000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ahahahahahha","msgtype":"m.text"},"ts":1366221539000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Ms2ger: ALSO FIRST RESULT","msgtype":"m.text"},"ts":1366221546000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"TabAtkins: http://dev.w3.org/csswg/css-content/","msgtype":"m.text"},"ts":1366221548000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"THIS IS WAI","msgtype":"m.text"},"ts":1366221555000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"accessibility?","msgtype":"m.text"},"ts":1366221564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or is WAI some kind of hipster variant of WHY?","msgtype":"m.text"},"ts":1366221581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"YES annevk","msgtype":"m.text"},"ts":1366221585000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Y is too not cool","msgtype":"m.text"},"ts":1366221589000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"WAI COOL","msgtype":"m.text"},"ts":1366221600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so should i refer to the 2.1 def of :before","msgtype":"m.text"},"ts":1366221607000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1366221608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i cannot","msgtype":"m.text"},"ts":1366221609000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1366221615000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"I long ago gave up trying to interpret nimbu.","msgtype":"m.text"},"ts":1366221635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ahahhaa","msgtype":"m.text"},"ts":1366221640000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"that is a good idea TabAtkins","msgtype":"m.text"},"ts":1366221656000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"just like abstract art, there's no wrong answer","msgtype":"m.text"},"ts":1366221669000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"exactly dglazkov we are all abstract arts","msgtype":"m.text"},"ts":1366221689000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"I am more of surrealism","msgtype":"m.text"},"ts":1366221720000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"with deadlines","msgtype":"m.text"},"ts":1366221754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chants \"wait for ES6\"","msgtype":"m.emote"},"ts":1366221773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Huh, gmail's \"first-line preview\" thing in the email list auto-strips things that look like tags for some reason.","msgtype":"m.text"},"ts":1366221815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, TabAtkins: Would this be an option - lifting Futures from DOM4 and placing it into the JSON-LD API spec? We would have to do another Last Call for JSON-LD API, but could get to REC by late June 2013... and then we'd at least have a spec that mentioned Futures in a REC-y way?","msgtype":"m.text"},"ts":1366222161000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db: JSON-LD 2.0 could defer to whatever spec ends up being the Futures spec?","msgtype":"m.text"},"ts":1366222199000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"That seems like a weird place to put it.  (And, no offense, likely to at least somewhat taint Futures with the linked-data stuff.)","msgtype":"m.text"},"ts":1366222218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Consider a DOM tree where the root is a frameset element with a body child","msgtype":"m.text"},"ts":1366222248000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What does document.body return?","msgtype":"m.text"},"ts":1366222249000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins, annevk: No, we'd lift it as-is - no changes to Futures. The other option is to do a FPWD of a Futures-only spec in RDF WG and take that to REC... but that would probably not fly.","msgtype":"m.text"},"ts":1366222278000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"Ms2ger: frameset?","msgtype":"m.text"},"ts":1366222393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, in Gecko, indeed","msgtype":"m.text"},"ts":1366222419000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: also spec iirc","msgtype":"m.text"},"ts":1366222426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In Chrome, the body","msgtype":"m.text"},"ts":1366222432000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Per spec, null","msgtype":"m.text"},"ts":1366222436000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1366222447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"manu-db: so that's working around a broken policy in the W3C with a solution that seems future-hostile","msgtype":"m.text"},"ts":1366222474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Future-hostile or future-hostile? :)","msgtype":"m.text"},"ts":1366222497000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"manu-db: groups have suggested doing that kind of thing in the past for the same reasons and it's always considered a bad idea","msgtype":"m.text"},"ts":1366222502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"manu-db: I'd suggest to stop working within the damaging constraints put forward by some of the W3C. Those constraints are not part of the W3C Process","msgtype":"m.text"},"ts":1366222567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: oh you","msgtype":"m.text"},"ts":1366222579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, TabAtkins: just throwing out ideas in case the group wants to do Futures. Keep in mind that it's not just me in this group - it's many others that have a variety of other positions on W3C process /and/ whether or not futures are useful.","msgtype":"m.text"},"ts":1366222672000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"wonders when we started caring about json-ld","msgtype":"m.emote"},"ts":1366222725000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, TabAtkins: What if we could publish DOM4 Futures in a stand-alone spec via W3C and get it to REC quickly? Is that something that is of interest? Isn't it \"done\"?","msgtype":"m.text"},"ts":1366222755000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db: I don't like forks personally. We want to enhance the feature over time. Also, I could not care less about REC.","msgtype":"m.text"},"ts":1366222862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(IE appears to always return the root if it's a body/frameset)","msgtype":"m.text"},"ts":1366222865000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"manu-db: What's the hang-up with referencing a non-W3C document?  That's not actually disallowed, as much as people try to pretend that it is when the WHATWG is involved.","msgtype":"m.text"},"ts":1366222983000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I don't want to fork it, I just want to have a \"W3C stable\" published version. We can always include text in there that says: \"If you want to see the live version of this spec, look here...\" (and then informatively point to the DOM4 Futures spec)","msgtype":"m.text"},"ts":1366222988000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"TabAtkins: We'd have to normatively reference a non-W3C document, I think... since the object being returned would be a Promise.","msgtype":"m.text"},"ts":1366223029000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"So there's no DOM4. Nobody is maintaining that.","msgtype":"m.text"},"ts":1366223038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"manu-db: ...yes?","msgtype":"m.text"},"ts":1366223039000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: There's no issue w/ informatively referencing... normatively referencing is another issue.","msgtype":"m.text"},"ts":1366223044000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"To the best of my knowledge, there isn't.  Do you have evidence that we can't norm-ref a non-W3C doc?","msgtype":"m.text"},"ts":1366223087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I have evidence that people whine about imagined Process requirements if you try","msgtype":"m.text"},"ts":1366223122000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: Yeah, let me find the link - you can't normatively reference documents that aren't REC at W3C (because the possibility of the ref'd doc changing is too great from a W3C member company perspective)","msgtype":"m.text"},"ts":1366223137000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db, not that case","msgtype":"m.text"},"ts":1366223161000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: s/that/the/ ?","msgtype":"m.text"},"ts":1366223175000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db, you can always reference non-W3C-published documents","msgtype":"m.text"},"ts":1366223178000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes, of course you can.","msgtype":"m.text"},"ts":1366223194000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db, the only maturity requirement is if you reference a W3C document","msgtype":"m.text"},"ts":1366223197000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: The question isn't that, though...","msgtype":"m.text"},"ts":1366223201000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"Ms2ger: Oh, I think I see what you're doing.","msgtype":"m.text"},"ts":1366223211000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"wonders which member company's perspective that is","msgtype":"m.emote"},"ts":1366223216000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: IBM, for one","msgtype":"m.text"},"ts":1366223228000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"jgraham: Oracle","msgtype":"m.text"},"ts":1366223235000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"manu-db, given that DOM4 doesn't have Futures and WHATWG DOM does...","msgtype":"m.text"},"ts":1366223240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins, annevk, Ms2ger: I guess we could make the entire API non-normative... hmm, that might work?","msgtype":"m.text"},"ts":1366223317000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"No, jeez, just normatively ref the Futures doc!","msgtype":"m.text"},"ts":1366223333000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's no different from CSS norm-reffing a Unicode doc.","msgtype":"m.text"},"ts":1366223345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And probably at least as stable...)","msgtype":"m.text"},"ts":1366223353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"manu-db: I think I'll pardon myself from this discussion. I don't want to play under the rules of damaging constraints, whether real or imaginary.","msgtype":"m.text"},"ts":1366223394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: link?","msgtype":"m.text"},"ts":1366223510000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"(I should probably suitably scope that statement somehow, but it should be clear from context.)","msgtype":"m.text"},"ts":1366223512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: your choice. I'm trying to figure out a way to get the Futures stuff into a form that is usable at W3C, I understand that you don't agree with the exercise, but the end-goal should be something that's beneficial for Futures.","msgtype":"m.text"},"ts":1366223570000,"senderName":"manu-db","senderId":"manu-db@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Member/w3c-css-wg/2013AprJun/0053.html","msgtype":"m.text"},"ts":1366223745000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm not sure where this should be filed: http://www.w3.org/community/respimg/2013/04/06/devicenormalpixelratio-proposal-for-zoom-independent-devicepixelratio-for-hd-retina-games/","msgtype":"m.text"},"ts":1366224587000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"If it's a CSS WG issue or HTML or ???","msgtype":"m.text"},"ts":1366224616000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"TabAtkins, if you have a min, could you take a quick look? ^^","msgtype":"m.text"},"ts":1366224635000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"the problem is pretty evident if you got to http://webquake.quaddicted.com/","msgtype":"m.text"},"ts":1366224680000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Hi. I have a question regarding the WebVTT specification.","msgtype":"m.text"},"ts":1366226049000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"According to the rendering rules, it looks like a cue will be displayed at the top of a video. Normally, captions are rendered on the bottom. Is this correct?","msgtype":"m.text"},"ts":1366226124000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"KyleBarnhart: that's conventional. Does the spec say anything about default positioning?","msgtype":"m.text"},"ts":1366226254000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"http://dev.w3.org/html5/webvtt/#cues-with-video","msgtype":"m.text"},"ts":1366226530000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"rule 9 sets y-position to 0, rule 11 sets y-position to top","msgtype":"m.text"},"ts":1366226580000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"this is because snap-to-lines is true by default, wiriting direction: horizonal also default","msgtype":"m.text"},"ts":1366226629000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"* sets top to 7-position","msgtype":"m.text"},"ts":1366226680000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"KyleBarnhart: does http://dev.w3.org/html5/webvtt/#dfn-text-track-cue-automatic-line-position not already set the default position to 100?","msgtype":"m.text"},"ts":1366226895000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"no, default is auto. But it doesn't matter, line position doesn't get used. Because wirting direction is horizonal and snap-to-lines is true, y-position is set to 0.","msgtype":"m.text"},"ts":1366227019000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"marcosc: Hm, I'll have to think about this.  For one thing, device-pixel-ratio doesn't exist. ^_^","msgtype":"m.text"},"ts":1366227425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok i've figured it out. it's at the bottom.","msgtype":"m.text"},"ts":1366228321000,"senderName":"KyleBarnhart","senderId":"KyleBarnhart@irc"},
{"content":{"body":"manu-db: Future/Coroutine/Async in Python http://www.python.org/dev/peps/pep-3156/","msgtype":"m.text"},"ts":1366237114000,"senderName":"gavinc","senderId":"gavinc@irc"}
]