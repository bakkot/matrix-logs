[
{"content":{"body":"hsivonen: it is not","msgtype":"m.text"},"ts":1447745654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmmmm. i just realized that ::cue(c::before) { content: url(image) } is possible...","msgtype":"m.text"},"ts":1447749812000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: is the localStorage issue in https://github.com/w3c/web-platform-tests/pull/2329 that mkwst points out really an issue?","msgtype":"m.text"},"ts":1447751485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It will be if Chrome imports the tests. We run X workers with basically random subsets of our layout tests at the same time on the same machine. I imagine Firefox shards things similarly.","msgtype":"m.text"},"ts":1447751559000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"We don't shard things like that","msgtype":"m.text"},"ts":1447751588000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"reads the issue","msgtype":"m.emote"},"ts":1447751595000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: wouldn't that just break http://w3c-test.org/webstorage/?","msgtype":"m.text"},"ts":1447751599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Probably. Those tests look like they assume they're the only thing running.","msgtype":"m.text"},"ts":1447751652000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: For the record, Gecko typically runs a single test process per machine, but if it didn't it would certainly use a single profile per test instance","msgtype":"m.text"},"ts":1447751659000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(based on random spot-checking)","msgtype":"m.text"},"ts":1447751663000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I suspect most tests do","msgtype":"m.text"},"ts":1447751666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Servo runs multiple processes, but doesn't support storage afaik","msgtype":"m.text"},"ts":1447751695000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*shrug* One way around it is to use unique names, and check for those when reading storage events.","msgtype":"m.text"},"ts":1447751741000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Running multiple tests in parallel accessing the same underlying browser state seems like it's asking for problems","msgtype":"m.text"},"ts":1447751746000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: That basically \"the internet\", though, isn't it?","msgtype":"m.text"},"ts":1447751759000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"â€¦ not really","msgtype":"m.text"},"ts":1447751775000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you know that's a constraint, you write tests to deal with it.","msgtype":"m.text"},"ts":1447751783000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"It sounds a bit like \"programming in C is easy, just don't access invalid memory\" or something :)","msgtype":"m.text"},"ts":1447751829000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In any case I would be interested to know what jsbell thinks because he changed the localStorage tests to clear the storage before each test","msgtype":"m.text"},"ts":1447751870000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*before and after","msgtype":"m.text"},"ts":1447751878000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Which is why we have tools like asan. :) Basically, when they started sharding tests, it was a huge pain in the ass to get everything running because tests assumed they owned the world.","msgtype":"m.text"},"ts":1447751878000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"s/asan/Rust/ :p","msgtype":"m.text"},"ts":1447751905000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Now that I'm typing all this, I guess I'm not _sure_ that we're actually sharding layout tests. Maybe we're only sharding unit tests.","msgtype":"m.text"},"ts":1447751935000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Anyway, ignoring the analogy, I think that running multiple tests in parallel with shared global state is asking for trouble","msgtype":"m.text"},"ts":1447751941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, yes. I'm suggesting that \"shared global state\" is the problem, not \"running multiple tests in parallel\"","msgtype":"m.text"},"ts":1447751972000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Well the shared global state exists; we can't change the platform. Or make each test run in its own origin.","msgtype":"m.text"},"ts":1447752010000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And in some cases it is the shared global state that you are testing","msgtype":"m.text"},"ts":1447752039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So you can't just never use it","msgtype":"m.text"},"ts":1447752045000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can design tests not to rely on it. As I noted above: using a unique name for the storage key would help,","msgtype":"m.text"},"ts":1447752049000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Yes, so I agree that this test could be better","msgtype":"m.text"},"ts":1447752080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I think that running unit tests in parallel and layouttests in serial would fit more of the datapoints I have about your testing. And about what seems plausible to actually work.","msgtype":"m.text"},"ts":1447752121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: none of the webstorage tests appear to use unique names either","msgtype":"m.text"},"ts":1447752341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: e.g., view-source:http://web-platform.test:8000/webstorage/resources/local_set_item_clear_iframe.html","msgtype":"m.text"},"ts":1447752349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*shrug* Ask jsbell. I might very well be wrong.","msgtype":"m.text"},"ts":1447752461000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: Well yeah, I didn't say the existing tests were perfect :)","msgtype":"m.text"},"ts":1447752542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"unrelatedly: is there a web-facing API that implements https://url.spec.whatwg.org/#urlencoded-serializing?","msgtype":"m.text"},"ts":1447752621000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I thought `encodeURIComponent` would get me there, but it doesn't match for 0x27 (`'`).","msgtype":"m.text"},"ts":1447752646000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: <form>","msgtype":"m.text"},"ts":1447752675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: ECMAScript has its own algorithms","msgtype":"m.text"},"ts":1447752689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1447752696000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Welcome to the web!","msgtype":"m.text"},"ts":1447752714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: so it didn't quite match the spec? :)","msgtype":"m.text"},"ts":1447752747000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I think it does match the spec, but I want to write a test that doesn't involve me hard-coding values for 0x00 -> 0xFF.","msgtype":"m.text"},"ts":1447752795000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: wouldn't a simply encodeByte() that tests for 0x20 and the pass-through bytes between 0x2A and 0x7A be about 5 lines of code?","msgtype":"m.text"},"ts":1447753024000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Don't need a big explicit table, I mean","msgtype":"m.text"},"ts":1447753034000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I might just be an idiot. *shrug* :)","msgtype":"m.text"},"ts":1447753448000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I really doubt it :)","msgtype":"m.text"},"ts":1447753473000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"jgraham: Is there a mechanism to run a full test even if an assertion fails? Like, I want a list of _all_ the assertions in a test that fail, not just the first one. :)","msgtype":"m.text"},"ts":1447753482000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"like, `expect` vs `assert` in gtest.","msgtype":"m.text"},"ts":1447753501000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: No","msgtype":"m.text"},"ts":1447753523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although you are not the first to ask for it","msgtype":"m.text"},"ts":1447753535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1447753537000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"curses the eventTestHarness.js","msgtype":"m.emote"},"ts":1447753589000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mkwst: just create a bunch of tests?","msgtype":"m.text"},"ts":1447753800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a for loop to avoid creating a bunch of tests.","msgtype":"m.text"},"ts":1447753820000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: multiple test/async_test in a single file that is","msgtype":"m.text"},"ts":1447753821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can encodeURIComponent be changed or will that break the web?","msgtype":"m.text"},"ts":1447753844000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I want to run 0x00 -> 0xFF through URLSearchParams to see what happens, and where Firefox and Chrome disagree. I don't want 255 tests.","msgtype":"m.text"},"ts":1447753867000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1447753916000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think you do","msgtype":"m.text"},"ts":1447753929000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think I do in testharness.js, because that's the only way to get sane error messages.","msgtype":"m.text"},"ts":1447753964000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That's what http://w3c-test.org/XMLHttpRequest/send-usp.html does too","msgtype":"m.text"},"ts":1447753981000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think I don't in other testing frameworks I'm familiar with, because they don't die on the first error.","msgtype":"m.text"},"ts":1447753985000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"You want it because they're independent tests","msgtype":"m.text"},"ts":1447754002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, ha. I hadn't thought about putting the for loop outside the `test()`. Clever!","msgtype":"m.text"},"ts":1447754016000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(See, philipj? Idiot. :) )","msgtype":"m.text"},"ts":1447754033000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: Hah, still not convinced. Generating a bunch of tests is really quite nice with testharness.js, though, I like that.","msgtype":"m.text"},"ts":1447754154000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"zcorpan: battle with es-discuss?","msgtype":"m.text"},"ts":1447754177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, oh, btw","msgtype":"m.text"},"ts":1447754191000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What's the story of content-security-policy/blink-contrib/?","msgtype":"m.text"},"ts":1447754199000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: so do I need to change the test?","msgtype":"m.text"},"ts":1447754208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whoa whoa","msgtype":"m.text"},"ts":1447754226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"web-platform-tests has 112 open PRs?","msgtype":"m.text"},"ts":1447754233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's all?","msgtype":"m.text"},"ts":1447754305000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think I briefly managed to push it under a hundred early this year","msgtype":"m.text"},"ts":1447754330000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Okay, I guess I'll just keep submitting PRs","msgtype":"m.text"},"ts":1447754409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"while (zcorpan.hasChocolate() && PRs.length >= 100) { review(PRs.pop()) }","msgtype":"m.text"},"ts":1447754467000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If you can convince jst_ to hire someone to do DOM QA, we could maybe improve the situation","msgtype":"m.text"},"ts":1447754477000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Wait, what? If we get the queue under 100, you will stop working?","msgtype":"m.text"},"ts":1447754560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That doesn't sound like an ideal incentive","msgtype":"m.text"},"ts":1447754568000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Brad asked me to contribute all the blink CSP tests to WPT so that he'd be licensed to work on them under whatever license WPT has.","msgtype":"m.text"},"ts":1447754583000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"So I did.","msgtype":"m.text"},"ts":1447754585000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And we've been converting them to testharness and WPT over time.","msgtype":"m.text"},"ts":1447754598000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ms2ger: that doesn't sound impossible, do you have anyone in mind?","msgtype":"m.text"},"ts":1447754643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst, so if I wanted to rewrite some of those tests to look more like native th.js tests, that wouldn't step on anyone's toes?","msgtype":"m.text"},"ts":1447754675000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, not really","msgtype":"m.text"},"ts":1447754684000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ok, philipj. Since you apparently know things about encodings, what is URLSearchParams supposed to produce for `0x80`? Both Firefox and Chrome produce `%C2%80`, which I guess means it's correct, but I have no idea why.","msgtype":"m.text"},"ts":1447754688000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: a lot of the open PRs are pretty old","msgtype":"m.text"},"ts":1447754726000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah I noticed","msgtype":"m.text"},"ts":1447754745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if you do u'\\u0080'.encode('utf8') in Python it will make sense :)","msgtype":"m.text"},"ts":1447754761000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"gsnedders: I might keep noticing this every six months or so when I look into adding some tests","msgtype":"m.text"},"ts":1447754762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: stuff either gets merged quickly or lasts forever, more or less :P","msgtype":"m.text"},"ts":1447754763000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: please do! If you want to be super-safe, you could ping @hillbrad to make sure he's not working on something in parallel, but I think you'll be safe.","msgtype":"m.text"},"ts":1447754765000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"jgraham: i know, but historically it seems we haven't managed to get the number much lower than 100. i don't know if that's because there are lots of old PRs that are really annoying to review for some reason, or we feel good about getting below 100, or both","msgtype":"m.text"},"ts":1447754767000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"U+0080 is simply those two bytes in UTF-8","msgtype":"m.text"},"ts":1447754772000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: So, how do I write a test that produces that output? In JavaScript and not Python. :)P","msgtype":"m.text"},"ts":1447754803000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Oh, wait, that's a very good question!","msgtype":"m.text"},"ts":1447754814000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"mkwst, I'll file an issue","msgtype":"m.text"},"ts":1447754814000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: I agree with gsnedders' 2-population theory. I think we probaly have a significant fraction of 100 PRs stuck for some reason","msgtype":"m.text"},"ts":1447754816000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. too hard to review, reviewed with comments and noone addressing them, etc.","msgtype":"m.text"},"ts":1447754837000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the former is something we should try and work harder on, the latter someone should pick them up","msgtype":"m.text"},"ts":1447754857000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mkwst: (new TextEncoder()).encode(\"\\u80\") though then you still have to go from bytes to %{byte} etc.","msgtype":"m.text"},"ts":1447754864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: ^","msgtype":"m.text"},"ts":1447754873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: So, it looks like Firefox and JavaScript agree on everything except \"!\", \"(\", \")\", \"/\", and \"~\". I assume Firefox is correct to encode these, and Chrome is incorrect not to.","msgtype":"m.text"},"ts":1447754902000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: you can also do it through URL parsing","msgtype":"m.text"},"ts":1447754909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: which uses a utf-8 encoder under the hood","msgtype":"m.text"},"ts":1447754932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, not when URL parsing is what I'm trying to test. :)","msgtype":"m.text"},"ts":1447754949000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: fair","msgtype":"m.text"},"ts":1447755003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: note https://github.com/whatwg/url/issues/18 btw","msgtype":"m.text"},"ts":1447755006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TextEncoder seems to work, thanks.","msgtype":"m.text"},"ts":1447755011000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I actually \"forgot\" that there are bytes >0x7F, if you want to test all bytes you'll have to find a set of code points that contain all bytes when represented as UTF-8, but I wouldn't assume without testing that that's possible, maybe some bytes are unused in UTF-8?","msgtype":"m.text"},"ts":1447755013000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk must know","msgtype":"m.text"},"ts":1447755017000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: FE and FF","msgtype":"m.text"},"ts":1447755029000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't guess anyone here has strong views on blink's webstorage layout tests that ended up in wpt?","msgtype":"m.text"},"ts":1447755052000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: I suspected as much","msgtype":"m.text"},"ts":1447755070000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"mkwst: but it looks like there's plenty of disagreement in the range 0x00-0x7F too :)","msgtype":"m.text"},"ts":1447755116000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Well, 5 characters.","msgtype":"m.text"},"ts":1447755131000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"6 characters, sorry. Firefox gets 0x00 wrong.","msgtype":"m.text"},"ts":1447755156000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I think bz has a patch for 0x00","msgtype":"m.text"},"ts":1447755174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, that landed","msgtype":"m.text"},"ts":1447755188000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I love null in strings, it's the best","msgtype":"m.text"},"ts":1447755198000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'm glad Servo doesn't have to worry about that","msgtype":"m.text"},"ts":1447755224000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: It's actually mostly a non-issue in WebKit/Blink as well, but it was a nuisance in Presto","msgtype":"m.text"},"ts":1447755368000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"It's mostly a non-issue in Gecko too, but we still end up with bugs like this","msgtype":"m.text"},"ts":1447755400000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ok, great. In that case, Gecko is 100% awesome, and Chrome (will be) ~98.04% awesome for the range 0x00-0xFF.","msgtype":"m.text"},"ts":1447755456000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ms2ger: jgraham: I think https://github.com/w3c/web-platform-tests/pull/1278 should land given that we are landing tests that check URLSearchParams() without new throws","msgtype":"m.text"},"ts":1447755465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh, I thought the spec was fixed already","msgtype":"m.text"},"ts":1447755500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"philipj: do you remember the big Presto rewrite?","msgtype":"m.text"},"ts":1447755503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: IDL doesn't have an active editor","msgtype":"m.text"},"ts":1447755518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: related to strings?","msgtype":"m.text"},"ts":1447755520000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"> I might consider doing that if I wasn't within about a week of having to freeze the final ES6 draft.","msgtype":"m.text"},"ts":1447755532000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yay versioning","msgtype":"m.text"},"ts":1447755534000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, yeah, whatever, rebase and land it","msgtype":"m.text"},"ts":1447755552000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That ship has sailed, unfortunately","msgtype":"m.text"},"ts":1447755568000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: then I get \"error: The following untracked working tree files would be overwritten by checkout:\"","msgtype":"m.text"},"ts":1447755611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tools/?","msgtype":"m.text"},"ts":1447755620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yes","msgtype":"m.text"},"ts":1447755625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the easiest solution is `git checkout non-new-Blob; git branch -m non-new-Blob-old; git checkout master; git checkout -b non-new-Blob; git cherry-pick d8d1e56; git push -f origin non-new-Blob`","msgtype":"m.text"},"ts":1447755691000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"git checkout fails though","msgtype":"m.text"},"ts":1447755735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hate this repo","msgtype":"m.text"},"ts":1447755782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll do it","msgtype":"m.text"},"ts":1447755809000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"philipj: Would you mind taking a look at https://codereview.chromium.org/1442643008 (the serialization in particular)?","msgtype":"m.text"},"ts":1447755831000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I think I've addressed all your comments.","msgtype":"m.text"},"ts":1447755841000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"gsnedders, mkwst: in some ad-hoc testing with Python it looks like only 238 unique bytes show up in UTF-8","msgtype":"m.text"},"ts":1447755853000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"mkwst: will take a look","msgtype":"m.text"},"ts":1447755858000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: there should be all but those two","msgtype":"m.text"},"ts":1447755991000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: per https://en.wikipedia.org/wiki/UTF-8#Codepage_layout there's 13","msgtype":"m.text"},"ts":1447756003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, right, the old four-seven byte length sequences","msgtype":"m.text"},"ts":1447756031000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"plus the overlong 2-byte reprs","msgtype":"m.text"},"ts":1447756040000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I didn't go all the way up to astral, so I may have missed some","msgtype":"m.text"},"ts":1447756049000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"anyway...","msgtype":"m.text"},"ts":1447756054000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"gsnedders: four-infinite, even","msgtype":"m.text"},"ts":1447756069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I only knew about five and six","msgtype":"m.text"},"ts":1447756080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: can you merge  https://github.com/w3c/web-platform-tests/pull/2334 ? it appeared i had too little space left to clone the repo :-(","msgtype":"m.text"},"ts":1447756098000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: seven/infinity were never part of UTF-8","msgtype":"m.text"},"ts":1447756109000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought at some point they decided that unicode was going to be at most 24-bit to avoid the infinity problem?","msgtype":"m.text"},"ts":1447756117000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: they're purely theoretical extensions, that were disallowed for other reasons anyway (confusion with BOMs, most obviously)","msgtype":"m.text"},"ts":1447756153000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"philipj: well, they also decided on a 16-bit limit initially","msgtype":"m.text"},"ts":1447756161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, depends which WGâ€¦","msgtype":"m.text"},"ts":1447756170000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"philipj: that didn't go well","msgtype":"m.text"},"ts":1447756172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"clicks the big green button","msgtype":"m.emote"},"ts":1447756176000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: well, yeah :) the 24-bit limit seems to have done better, though","msgtype":"m.text"},"ts":1447756207000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: the Unicode Consortium did 16-bit, the ISO did an infinity scheme, AFAIK","msgtype":"m.text"},"ts":1447756208000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: :-) wasn't sure about the current green-button policy for wpt","msgtype":"m.text"},"ts":1447756211000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: reconsiling them with Unicode 2.0 added the 21-bit restriction (for the sake of surrodates)","msgtype":"m.text"},"ts":1447756235000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh, was it 21 bits?","msgtype":"m.text"},"ts":1447756247000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: yeah, it's 21 at the moment","msgtype":"m.text"},"ts":1447756266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: it's still 21-bit, hence 10FFFF being the max codepoint","msgtype":"m.text"},"ts":1447756281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok, I just guessed a little :)","msgtype":"m.text"},"ts":1447756291000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"six byte UTF-8 allows 31-bit, which was the original limit of the ISO spec, apparently. My memory that it was infinite was totally wrong.","msgtype":"m.text"},"ts":1447756331000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham, I wonder how you'd feel about adding something to th.js that takes an array of functions that return async_tests and runs them in sequence?","msgtype":"m.text"},"ts":1447756526000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyone know if anyone is running the CSSWG\\s tests for transitions?","msgtype":"m.text"},"ts":1447757259000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Not Servo","msgtype":"m.text"},"ts":1447757962000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Despite you guys supporting some of it! :P","msgtype":"m.text"},"ts":1447758016000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Feel free to enable them :)","msgtype":"m.text"},"ts":1447758109000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"This, uh, may be what I'm doing.","msgtype":"m.text"},"ts":1447758176000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Andseeing random noice in results in Servo.","msgtype":"m.text"},"ts":1447758184000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lovel","msgtype":"m.text"},"ts":1447758222000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"y","msgtype":"m.text"},"ts":1447758223000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"*noise","msgtype":"m.text"},"ts":1447758258000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wondering if the tests are buggyâ€¦","msgtype":"m.text"},"ts":1447758264000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"they seem a bit abandoned? I have no idea how good they are","msgtype":"m.text"},"ts":1447759262000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"they have all kinds of JS magic involvedâ€¦","msgtype":"m.text"},"ts":1447759267000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No idea","msgtype":"m.text"},"ts":1447759303000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"some of it is just working around the lack of async sequences","msgtype":"m.text"},"ts":1447759316000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wopnders if the new failures in transforms are Servo breaking or your recent update","msgtype":"m.emote"},"ts":1447759395000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"really can't type todayâ€¦","msgtype":"m.emote"},"ts":1447759401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1447764771000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is the storage event not fired at the window where you're making the changes?","msgtype":"m.text"},"ts":1447764805000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: correct","msgtype":"m.text"},"ts":1447765448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, can you point that out in the spec?","msgtype":"m.text"},"ts":1447765488000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: reverse lookup \"send a storage notification\"","msgtype":"m.text"},"ts":1447765602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotcha, thanks","msgtype":"m.text"},"ts":1447765652000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: https://github.com/whatwg/html/pull/339 r?","msgtype":"m.text"},"ts":1447767589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you have a reference at hand for people no longer wanting to support data: for workers?","msgtype":"m.text"},"ts":1447767987000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Wait, we don't? Why not?","msgtype":"m.text"},"ts":1447768021000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: sorry, I thought that was in the referenced issue","msgtype":"m.text"},"ts":1447769461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: instead, the information on that is in the issue referenced from that issue: https://github.com/whatwg/fetch/issues/161#issuecomment-156414633","msgtype":"m.text"},"ts":1447769490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: FWIW, I've had adding `data:` support for Workers on my list of \"things to do when I have free time\" for a while now.","msgtype":"m.text"},"ts":1447769762000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: for non-shared workers workers?","msgtype":"m.text"},"ts":1447769785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like `data:` in the rest of Chrome, it wouldn't inherit an origin, so it would be a bit of a strangely sandboxed Worker.","msgtype":"m.text"},"ts":1447769807000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"right. dedicated worker.","msgtype":"m.text"},"ts":1447769811000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: oooh","msgtype":"m.text"},"ts":1447769815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i won't be terribly sad if you kill it.","msgtype":"m.text"},"ts":1447769819000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: so yeah, that'd be completely different from the specification","msgtype":"m.text"},"ts":1447769823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yup!","msgtype":"m.text"},"ts":1447769828000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: and so yeah, that's not what is being removed","msgtype":"m.text"},"ts":1447769840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but we're already willfully violating that bit of the spec, so why not violate some more, right?","msgtype":"m.text"},"ts":1447769840000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"ok, maybe I'm misunderstanding?","msgtype":"m.text"},"ts":1447769849000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(in fact, data URL support was already removed, this is just removing some remnants)","msgtype":"m.text"},"ts":1447769851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: per the specification data URLs would be same-origin","msgtype":"m.text"},"ts":1447769871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the old specification)","msgtype":"m.text"},"ts":1447769876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know.","msgtype":"m.text"},"ts":1447769878000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I know it's a bit annoying that Chrome's a special flower","msgtype":"m.text"},"ts":1447769891000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"but I don't think we're planning on changing our `data:` handling.","msgtype":"m.text"},"ts":1447769899000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Euhm, I don't care and I think we're trying to change Gecko","msgtype":"m.text"},"ts":1447769914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah.","msgtype":"m.text"},"ts":1447769922000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"shuts up.","msgtype":"m.emote"},"ts":1447769924000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And most specifications reflect Chrome's policy","msgtype":"m.text"},"ts":1447769926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: added a comment","msgtype":"m.text"},"ts":1447770027000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: where do you think the note should go?","msgtype":"m.text"},"ts":1447770040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how about after <li><p>Let <var>worker URL</var> be the resulting <span>absolute URL</span>.</p></li>","msgtype":"m.text"},"ts":1447770137000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so you want two identical notes?","msgtype":"m.text"},"ts":1447770152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i don't follow","msgtype":"m.text"},"ts":1447770189000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Worker and SharedWorker","msgtype":"m.text"},"ts":1447770203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh. hmm","msgtype":"m.text"},"ts":1447770242000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"And this will go out of sync once we have those filesystem URLs (if ever) and such","msgtype":"m.text"},"ts":1447770314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, two notes. the kinds of URLs we have doesn't change very often so i think it's worth it","msgtype":"m.text"},"ts":1447770449000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's almost that time of year when you fly to the keys and enjoy warmer-than-canada-in-january weather for a week or two. but there is no rest for the architects of the web","msgtype":"m.text"},"ts":1447770697000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"nice https://code.google.com/p/chromium/issues/detail?id=303152#c22","msgtype":"m.text"},"ts":1447778430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: most of the wpt tests are written by browser devs, right?","msgtype":"m.text"},"ts":1447786455000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(random wondering, why would anyone be sad about removing table sorting )","msgtype":"m.text"},"ts":1447786701000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: is there a way to attach the wpt --debugger arg to the child process in e10s mode?","msgtype":"m.text"},"ts":1447786968000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"woops, wrong channel","msgtype":"m.text"},"ts":1447786984000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"smaug____: I think most is very likely accurate, for a broad enough definition of \"devs\" (e.g. including QA)","msgtype":"m.text"},"ts":1447787488000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah, I meant with the broader definition. I was just thinking how we could get help from also web devs","msgtype":"m.text"},"ts":1447789517000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right now I'd like to see tests for MessagePort","msgtype":"m.text"},"ts":1447789571000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: I have succeeded in using Fetch now to authenticate cross originshttps://github.com/solid/solid-spec/issues/52#issuecomment-157519949","msgtype":"m.text"},"ts":1447799247000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"oops. https://github.com/solid/solid-spec/issues/52#issuecomment-157519949","msgtype":"m.text"},"ts":1447799253000,"senderName":"bblfish","senderId":"bblfish@irc"}
]