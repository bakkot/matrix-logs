[
{"content":{"body":"TabAtkins: https://github.com/tabatkins/bikeshed/pull/1742 has the fix for the problem that‚Äôs breaking the WHATWG spec builds","msgtype":"m.text"},"ts":1596595192000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: TabAtkins: I went ahead and merged that","msgtype":"m.text"},"ts":1596610924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: makes sense, thanks","msgtype":"m.text"},"ts":1596610961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can still be reviewed post-merge","msgtype":"m.text"},"ts":1596610971000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it a was pretty simple fix, for a silly-oversight kind of thing","msgtype":"m.text"},"ts":1596610994000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It also has resolved the build issues","msgtype":"m.text"},"ts":1596611003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay üéâ","msgtype":"m.text"},"ts":1596611025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sorry for having broken the build","msgtype":"m.text"},"ts":1596611031000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I really should have anticipated the problems, and tested more myself","msgtype":"m.text"},"ts":1596611053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"This wasn't too bad, I guess part of the problem is that while Bikeshed does have WHATWG regression tests, they are not going through the same build process","msgtype":"m.text"},"ts":1596611174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1596611548000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and also in general, Bikeshed's own test automation doesn't include running the HTML checker","msgtype":"m.text"},"ts":1596611747000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and it probably shouldn't in general, because I'm guessing it might run into a lot of errors with with other specs","msgtype":"m.text"},"ts":1596611886000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but, I dunno, maybe we could make it run the checker for WHATWG specs at least","msgtype":"m.text"},"ts":1596611966000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...since we know those are otherwise valid, that would help catch any Bikeshed changes that introduced validity regressions","msgtype":"m.text"},"ts":1596612051000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That would be a pretty cool enhancement","msgtype":"m.text"},"ts":1596624383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"question about math parsing test:","msgtype":"m.text"},"ts":1596629219000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<math><tr><td><mo><tr>","msgtype":"m.text"},"ts":1596629242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Expected:","msgtype":"m.text"},"ts":1596629243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"| <math math>","msgtype":"m.text"},"ts":1596629243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|   <math tr>","msgtype":"m.text"},"ts":1596629243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|     <math td>","msgtype":"m.text"},"ts":1596629243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|       <math mo>","msgtype":"m.text"},"ts":1596629245000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Got:","msgtype":"m.text"},"ts":1596629247000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"| <math math>","msgtype":"m.text"},"ts":1596629250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|   <math tr>","msgtype":"m.text"},"ts":1596629252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|     <math td>","msgtype":"m.text"},"ts":1596629255000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|       <math mo>","msgtype":"m.text"},"ts":1596629257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"|   <math tr>","msgtype":"m.text"},"ts":1596629260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1596629262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does that look familiar to anybody?","msgtype":"m.text"},"ts":1596629265000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders maybe?","msgtype":"m.text"},"ts":1596629267000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the validator.nu Java parser seems to be failing that test","msgtype":"m.text"},"ts":1596629294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: no idea, scarcely touched parsing in years","msgtype":"m.text"},"ts":1596629325000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: ok yeah I reckon others who worked on html5lib tests probably also haven‚Äôt touched it in years","msgtype":"m.text"},"ts":1596629387000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen just wrote a PR!","msgtype":"m.text"},"ts":1596629425000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"for html5lib?","msgtype":"m.text"},"ts":1596629436000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"html5lib-tests, yeah","msgtype":"m.text"},"ts":1596629443000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1596629458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well I guess I should look at that","msgtype":"m.text"},"ts":1596629465000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sorry I can't be much help!","msgtype":"m.text"},"ts":1596629478000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no worries","msgtype":"m.text"},"ts":1596629527000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm all browsers also fail that math-parsing test","msgtype":"m.text"},"ts":1596629644000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cmath%3E%3Ctr%3E%3Ctd%3E%3Cmo%3E%3Ctr%3E","msgtype":"m.text"},"ts":1596629672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...if I am looking at the Live DOM Viewer results correctly","msgtype":"m.text"},"ts":1596629710000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Firefox Nightly is giving the expected above?","msgtype":"m.text"},"ts":1596629930000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: oh, yes ‚Äî I was just misreading it (looking at actual instead of expected)","msgtype":"m.text"},"ts":1596629992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So does Chrome Canary afaict","msgtype":"m.text"},"ts":1596629993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Safari TP does too)","msgtype":"m.text"},"ts":1596630013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, sorry I had just flipped the actual/expected","msgtype":"m.text"},"ts":1596630020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Curious that validator.nu does it wrong as I believe Firefox's code is still generated from that","msgtype":"m.text"},"ts":1596630049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah that is also I what I don‚Äôt understand either","msgtype":"m.text"},"ts":1596630696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think there are some differences that are introduced when the Java code is translated to the C++ code for Firefox","msgtype":"m.text"},"ts":1596630740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but this case would be a pretty big surprising difference","msgtype":"m.text"},"ts":1596630760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm isn‚Äôt https://github.com/whatwg/html/commit/8cf34ad2ac651329f2c682f16e11faa5cbad839c ‚ÄúHandle foster-parenting of <math> and <svg> elements‚Äù the relevant change?","msgtype":"m.text"},"ts":1596631175000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and if so I can‚Äôt find that was ever implemented in the Java code","msgtype":"m.text"},"ts":1596631216000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: maybe the code bases did diverge then, hsivonen would know best","msgtype":"m.text"},"ts":1596631269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1596631279000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: so I looked a bit at your thing and I think it works, but it seems to me that you need to store the navigables as a tree on the (top-level) session entry","msgtype":"m.text"},"ts":1596639830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: in particular the previous document can be gone at which point all you have is a session history entry to try to rebuild it, including the history positions of its frames","msgtype":"m.text"},"ts":1596639877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: doesn't the DOM already make them a tree? The navigable is owned by the iframe","msgtype":"m.text"},"ts":1596639962000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well but if you reparse it from the network, how do you know what to restore it too?","msgtype":"m.text"},"ts":1596640011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahh yes, in that case the \"restorable session history\" forms a tree","msgtype":"m.text"},"ts":1596640195000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: okay, so I think you and smaug____ might be on the same page then","msgtype":"m.text"},"ts":1596640323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: for the bfcache case you could indeed have a \"simpler\" session entry, with more logic in the document itself","msgtype":"m.text"},"ts":1596640367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, right now \"restorable state\" is either a Document or a serialisable \"restorable session history\"","msgtype":"m.text"},"ts":1596640406000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So that enforces that the history item doesn't need a Document and serialisable state at the same time","msgtype":"m.text"},"ts":1596640439000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'll keep noodling on the spec then. I might so a first pass that doesn't do the restorable state stuff, so that's a 'smaller' thing to review and land. But I'll try to prove that the restorable state stuff can be layered on top of that.","msgtype":"m.text"},"ts":1596640531000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: maybe the document should have a weak ref to the BC","msgtype":"m.text"},"ts":1596640546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: well, it already has a ref so maybe that's enough","msgtype":"m.text"},"ts":1596640580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I was thinking there needs to be a weakmap where the document is the key and the BC is the value","msgtype":"m.text"},"ts":1596640590000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah maybe, I guess I'm not entirely sure what happens to the document's ref when it's navigated away","msgtype":"m.text"},"ts":1596640625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want the reference the history entry has to the BC to be weak, so the BC can be destroyed when documents are no longer using it.","msgtype":"m.text"},"ts":1596640647000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: it stays in the history entry if it's bfcache restorable","msgtype":"m.text"},"ts":1596640679000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well but if the document has it the history entry wouldn't have to worry about it","msgtype":"m.text"},"ts":1596640713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and it could be unset when the document is collected","msgtype":"m.text"},"ts":1596640736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I could manually unset it. Maybe I'm over complicating it by trying to make it weak","msgtype":"m.text"},"ts":1596640758000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I was trying to avoid having to manually unset it, but the weak ref thing might be more complex than it's worth","msgtype":"m.text"},"ts":1596640782000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We already have some amount of destructer-type things","msgtype":"m.text"},"ts":1596640806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm pretty positive on this now; hoping folks internally will share their feedback, if any, soonish","msgtype":"m.text"},"ts":1596641018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll push the 'right' Chrome folks to do the same. There's been general positivity so far, but just need to get higher up navigation folks to give it the thumbs up","msgtype":"m.text"},"ts":1596641126000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I do think we'll probably want to experiment more with our options for the API itself; in terms of less cross-origin leakage and such","msgtype":"m.text"},"ts":1596641369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but having a solid foundation will only help with that","msgtype":"m.text"},"ts":1596641398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(mostly saying that, e.g., history.length === nr of steps might not be the final answer here)","msgtype":"m.text"},"ts":1596641430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I think Chrome does some stuff here like \"history.back does nothing if called from a sandboxed iframe and the navigation would be external to the iframe\", which seems sensible at a very minimum. But yes, might want to lock this and .length down further","msgtype":"m.text"},"ts":1596641468000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: any further bikeshedding on the various cross-origin isolation booleans welcome. https://github.com/whatwg/html/pull/5752#issuecomment-669264642","msgtype":"m.text"},"ts":1596642181000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I suggested cross-origin isolated capability in the original issue","msgtype":"m.text"},"ts":1596643568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not bad","msgtype":"m.text"},"ts":1596643581000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Honest question: Is there any use case for <embed> today that's not served better by other tags like <svg>, <video>, <audio>, <iframe>, etc? When is <embed> advantageous?","msgtype":"m.text"},"ts":1596654129000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"I have never once used <embed> or seen it used in any tutorial more recent than the last decade.","msgtype":"m.text"},"ts":1596659908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I remember <embed> from the Flash days, and understand that theoretically that's how support for different types of data can be plugged into the browser‚Ä¶are there still people doing that these days with other plugins/formats? It seems like a lot of stuff like that gets supported in DOM, <svg> or <canvas> these days","msgtype":"m.text"},"ts":1596669921000,"senderName":"innovati","senderId":"innovati@irc"}
]