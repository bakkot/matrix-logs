[
{"content":{"body":"So I am debugging whatwg.org build failures (which prevent https://github.com/whatwg/whatwg.org/pull/231 from being merged)","msgtype":"m.text"},"ts":1539854799000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It appears we are pip installing the markdown module without pinning it to a version, and it changed in a backward-incompatible way","msgtype":"m.text"},"ts":1539854818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I am having some trouble figuring out: where to find a changelog or version history for the markdown module, and how to change the `pip install` command to pin the version.","msgtype":"m.text"},"ts":1539854841000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Python experts appreciated.","msgtype":"m.text"},"ts":1539854846000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK, the answer to the changelog thing is to use pypi.org instead of pythonhosted.org","msgtype":"m.text"},"ts":1539854896000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK and the latter is just pip install markdown==2.6.11. I guess I was premature asking for help.","msgtype":"m.text"},"ts":1539855061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Glad you figured that out","msgtype":"m.text"},"ts":1539856199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also welcome to Europe?","msgtype":"m.text"},"ts":1539856205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ya, at the Paris office for this week","msgtype":"m.text"},"ts":1539858968000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: mind reviewing https://github.com/whatwg/whatwg.org/pull/231 now that the build works","msgtype":"m.text"},"ts":1539859053000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: were pre-java.nio Java encoding canonical names deliberately not added as labels in the Encoding Standard?","msgtype":"m.text"},"ts":1539861736000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: seems related to the Unicode label mapping problem, since many of them would match if hyphens and underscores were ignored when comparing","msgtype":"m.text"},"ts":1539861797000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: see the second column at https://docs.oracle.com/javase/1.5.0/docs/guide/intl/encoding.doc.html","msgtype":"m.text"},"ts":1539861848000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"expected rendering, anyone? #block-block-18 select#langlinks{-webkit-appearance:menulist-textfield;-moz-appearance:treeheadersortarrow;appearance:none;background-color:transparent;font-size:9px;height:25px;padding:4px 0 0;width:121px;}","msgtype":"m.text"},"ts":1539861983000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I wonder if the email-motivated addition of ms932 as a label for Shift_JIS had the root cause of pre-java.nio Java canonical names","msgtype":"m.text"},"ts":1539862440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the way we did things was looking at the intersection of labels in browsers and that's it","msgtype":"m.text"},"ts":1539864357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it's not entirely clear to me how browsers derived their initial tables, some combination of IANA, experience, and what whoever wrote the code deemed ok","msgtype":"m.text"},"ts":1539864388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I'd not be opposed to adding new labels based on anecdata btw, generally it seems that should be safe here","msgtype":"m.text"},"ts":1539864981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but only if all implementers are on board with such a strategy","msgtype":"m.text"},"ts":1539864991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is https://rebeccalynndoug-html-multiple-.surge.sh/ non-conforming per the current URL spec?","msgtype":"m.text"},"ts":1539865028000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"galimatias says:","msgtype":"m.text"},"ts":1539865044000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Invalid host: A label ends with a hyphen-minus ('-').","msgtype":"m.text"},"ts":1539865047000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: no, we set CheckHyphens to false","msgtype":"m.text"},"ts":1539865092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh wait, conforming","msgtype":"m.text"},"ts":1539865104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: it's currently conforming, but maybe it shouldn't be and we should also use _beStrict_ for CheckHyphens","msgtype":"m.text"},"ts":1539865184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1539865251000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: thanks. that's what I expected. (I'd be curious to know if ISO8859_1 and the like were part of Opera's rejection of comparison that ignored hyphens and underscores.)","msgtype":"m.text"},"ts":1539865254000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: ash I guess the reason galimatias reports an error is because it’s just relying on icu4j (ICU Java library) and is just passing on the error from that","msgtype":"m.text"},"ts":1539865339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: I think the only reason was \"euc_jp\"","msgtype":"m.text"},"ts":1539865415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK. that's one of the pre-java.nio Java canonical names","msgtype":"m.text"},"ts":1539865644000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: https://lists.w3.org/Archives/Public/public-whatwg-archive/2009Aug/0077.html","msgtype":"m.text"},"ts":1539865654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I remember that being the only case, but it's been a long time","msgtype":"m.text"},"ts":1539865705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can anyone explain why https://html.spec.whatwg.org/multipage/dom.html#inner-text-collection-steps runs step 1 & 2 for nodes that are not being rendered? In what cases would such a list not be empty for a node that isn’t rendered?","msgtype":"m.text"},"ts":1539866171000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"If I understand “being rendered” right, it means a node has no drawing box at all. Which by definition would mean its children have no box at all? (e.g. display:none; can’t be overwritten on a per-child basis.) So shouldn’t all those extra steps just result in empty lists?","msgtype":"m.text"},"ts":1539866171000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"Zegnat: by the time that algorithm is invoked, the being rendered check for the subtree is already made, right?","msgtype":"m.text"},"ts":1539866485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Zegnat: so presumably something is rendered at that point","msgtype":"m.text"},"ts":1539866496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The algorithm only checks if it is being rendered in step 3 though. That is what is confusing me.","msgtype":"m.text"},"ts":1539866592000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"Why go through all the child nodes of something that isn’t being rendered first. I can’t think of a case where any of the childnodes would magically render when their parent does not.","msgtype":"m.text"},"ts":1539866664000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"Zegnat: when this algorithm is invoked the first time we know the parent is being rendered","msgtype":"m.text"},"ts":1539866809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because of innerText's getter step 1","msgtype":"m.text"},"ts":1539866828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Aah, I think I grasp it now!","msgtype":"m.text"},"ts":1539866880000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"I was too focussed on the nested looping, woops","msgtype":"m.text"},"ts":1539866891000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"Thanks annevk!","msgtype":"m.text"},"ts":1539866894000,"senderName":"Zegnat","senderId":"Zegnat@irc"},
{"content":{"body":"annevk: hmmmm I guess the button element is itself not underlined, but the text-decoration can still propagate into it. http://software.hixie.ch/utilities/js/live-dom-viewer/saved/6291","msgtype":"m.text"},"ts":1539870718000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: right, if you specify display:inline, I noticed that","msgtype":"m.text"},"ts":1539870756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: ooh okay, I might see what you mean","msgtype":"m.text"},"ts":1539870776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean it's consistent with replaced elements not being underlined","msgtype":"m.text"},"ts":1539870789000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so if image had a box inside it would propagate there too","msgtype":"m.text"},"ts":1539870791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: okay","msgtype":"m.text"},"ts":1539870797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1539870801000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: but for image that still requires a \"I'm no longer replaced\" setting when displaying alt (even though that's still somewhat replaced due to a potential impl using contents:attr(alt)?","msgtype":"m.text"},"ts":1539870846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah it shouldn't be a replaced element when showing alt","msgtype":"m.text"},"ts":1539870878000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"There have been questions about the implementation status of streams in browsers (and perhaps what's planned). (I guess I need to play the middle man since communicating with other WGs seems to be a big no-no for most people in the WebRTC WG...)","msgtype":"m.text"},"ts":1539892421000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"lgrahl: implemented everywhere. Firefox is not quite shipped but apparently got unblocked last week.","msgtype":"m.text"},"ts":1539893850000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Ok. I was wondering about Firefox, so that's good to know. Does it also include WritableStream?","msgtype":"m.text"},"ts":1539893928000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"lgrahl: not sure, I think they have a patch for that somewhere, but haven't seen movement on it in some time. Probably waiting for a customer :)","msgtype":"m.text"},"ts":1539894792000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: And in Chromium? (I kind of figured that this is a chicken egg problem)","msgtype":"m.text"},"ts":1539894850000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"lgrahl: all implemented and shipped to stable","msgtype":"m.text"},"ts":1539895955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Cheers! :)","msgtype":"m.text"},"ts":1539896456000,"senderName":"lgrahl","senderId":"lgrahl@irc"}
]