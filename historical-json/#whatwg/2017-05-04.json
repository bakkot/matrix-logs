[
{"content":{"body":"I think I understand browsing contexts now","msgtype":"m.text"},"ts":1493884684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^ ...","msgtype":"m.text"},"ts":1493886754000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: it's reassuring to hear from people so knowledgeable about the platform how complex it really is.","msgtype":"m.text"},"ts":1493886801000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: you should do this at least weekly.","msgtype":"m.text"},"ts":1493886814000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: it would boost morale.","msgtype":"m.text"},"ts":1493886821000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1493886828000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It is really complex","msgtype":"m.text"},"ts":1493886887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The main way I seem to learn is to dive into something. Get stuck. Do other things for six months. Get back to it and maybe understand or get stuck again. Repeat until it's understood.","msgtype":"m.text"},"ts":1493886965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not entirely clear what happens in those six months (or longer), but somehow being away for a while makes it easier to tackle it next time around. Noticed this happening a few times now, but maybe confirmation bias.","msgtype":"m.text"},"ts":1493887031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: a large part of the problem is also that browsers and standards are sometimes out-of-sync and that standards describe things in a rather unclear way, often with bugs","msgtype":"m.text"},"ts":1493887152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(or there simply is no standard)","msgtype":"m.text"},"ts":1493887181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm totally with you on the background processing of this stuff.","msgtype":"m.text"},"ts":1493887220000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: Pragmatic Thinking and Learning by Andy Hunt talks about this quite a bit iirc.","msgtype":"m.text"},"ts":1493888062000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: http://output.jsbin.com/hiwokuy/quiet - I've been playing with FileReader vs Response for reading large 900mb files from disk. Turns out response + streams is way more efficient. So, I guess we're all doing something right.","msgtype":"m.text"},"ts":1493893166000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: http://jsbin.com/hiwokuy/edit?js,console,output is probably a better view","msgtype":"m.text"},"ts":1493893187000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's great that we're more efficient, but I'd love to know why and if that's true across browsers","msgtype":"m.text"},"ts":1493893514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: because in principle it seems like it should be fairly close","msgtype":"m.text"},"ts":1493893534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, it might be highlighting an issue with FileReader in Chrome more than anything. It seems to get slower as it goes on","msgtype":"m.text"},"ts":1493893582000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder if it's rebuilding .result on every progress event or something","msgtype":"m.text"},"ts":1493893707000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The spec is kinda hand-wavey when it comes to allocation of memory","msgtype":"m.text"},"ts":1493893766000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh yeah, it seems like result just keeps getting bigger","msgtype":"m.text"},"ts":1493893831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which means new object each time given that it's either a string or buffer","msgtype":"m.text"},"ts":1493893842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: wow, can't believe they just copied that from XMLHttpRequest's responseText","msgtype":"m.text"},"ts":1493893871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: really hope that isn't true","msgtype":"m.text"},"ts":1493893876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agreed, espeically as size is known","msgtype":"m.text"},"ts":1493894105000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug: how does about:blank work?","msgtype":"m.text"},"ts":1493897232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: can I navigate an about:blank document to about:blank?","msgtype":"m.text"},"ts":1493897246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: if I navigate an initial about:blank document to about:blank, is it still initial?","msgtype":"m.text"},"ts":1493897267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm hmm","msgtype":"m.text"},"ts":1493897340000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"if you navigate initial about:blank to anything, the latter document won't be initial anymore","msgtype":"m.text"},"ts":1493897361000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but does navigating about:blank to about:blank work","msgtype":"m.text"},"ts":1493897385000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"it probably does with iframes","msgtype":"m.text"},"ts":1493897404000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"hsivonen should know all about about:blank :)","msgtype":"m.text"},"ts":1493897414000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I think hsivonen gave up and started working on encoding_rs instead","msgtype":"m.text"},"ts":1493897452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: different question, is session history tied to the tab group in Gecko?","msgtype":"m.text"},"ts":1493897558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Judging from the explosion in my github inbox, I apparently owe you some responses about link targeting.","msgtype":"m.text"},"ts":1493897635000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: session history and tab group? no","msgtype":"m.text"},"ts":1493897662000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"quite different concepts","msgtype":"m.text"},"ts":1493897666000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"annevk: Is there a central question I can answer, or do I need to sit down and read through threads to page context back in? :)","msgtype":"m.text"},"ts":1493897667000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah, that would help, though I also encounter lots of legacy pings to you that went unanswered","msgtype":"m.text"},"ts":1493897669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, tab group may contain several top level browsing contexts","msgtype":"m.text"},"ts":1493897680000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"mkwst: there's no central question, there's lots of questions","msgtype":"m.text"},"ts":1493897687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"session history is per top level browsing context","msgtype":"m.text"},"ts":1493897688000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"annevk: Yup. Which is why I'm trying to follow up on them now.","msgtype":"m.text"},"ts":1493897693000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: the browsing context name is probably the most interesting","msgtype":"m.text"},"ts":1493897720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: okay","msgtype":"m.text"},"ts":1493897742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. None of this has been top-of-mind recently, but I'll try to give you reasonable feedback quickly.","msgtype":"m.text"},"ts":1493897755000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: https://searchfox.org/mozilla-central/source/testing/web-platform/tests/encoding/iso-2022-jp-encoder.html#16 thinks that U+FF90 encodes in the JIS X 0208 state of ISO-2022-JP, and Gecko with uconv passes","msgtype":"m.text"},"ts":1493900793000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the spec disagrees","msgtype":"m.text"},"ts":1493900801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: what might the story be here?","msgtype":"m.text"},"ts":1493900809000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fun times that the test writer calls this \"basics\"","msgtype":"m.text"},"ts":1493900837000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oops. I take back the part about uconv passing","msgtype":"m.text"},"ts":1493901054000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"still, what's the deal with that test case?","msgtype":"m.text"},"ts":1493901064000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: possibly fallout of https://www.w3.org/Bugs/Public/show_bug.cgi?id=27256?","msgtype":"m.text"},"ts":1493901133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I'm somewhat surprised this hasn't come up until now","msgtype":"m.text"},"ts":1493901264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it does seem like https://github.com/whatwg/encoding/commit/19b0ebf0e48c3a607ab7623b5b272642dd59d6e7 ended up removing Katakana support from the encoder and I'm not sure if that was intentional","msgtype":"m.text"},"ts":1493901311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: how does FF90 encode inside jis0208 though?","msgtype":"m.text"},"ts":1493901388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hah, https://bugs.chromium.org/p/chromium/issues/detail?id=674903 FileReader.readAsArrayBuffer() - Reading large files causes memory leak","msgtype":"m.text"},"ts":1493901909000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no idea how we prioritize those kind of bugs in Firefox, but those are the kind of reasons folks go native","msgtype":"m.text"},"ts":1493902354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not being able to process 10 GiB in a browser in 2017, who'd have thought","msgtype":"m.text"},"ts":1493902386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm really glad the memory-conservative approach for fetch() won out now though","msgtype":"m.text"},"ts":1493902430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we prioritize memory leaks pretty high","msgtype":"m.text"},"ts":1493902431000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: As in stream consuming? Yeah, it seems silly that we considered anything else","msgtype":"m.text"},"ts":1493902462000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, requiring explicit clones","msgtype":"m.text"},"ts":1493902481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: alex scolded me about requiring explicit clones on twitter recently... https://twitter.com/slightlylate/status/850819777022967808","msgtype":"m.text"},"ts":1493902764000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or maybe it was more about the form of clone","msgtype":"m.text"},"ts":1493902786000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I dunno, he seems unhappy with the current state","msgtype":"m.text"},"ts":1493902803000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I think he's wrong","msgtype":"m.text"},"ts":1493902853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: he did indeed argue against it","msgtype":"m.text"},"ts":1493902859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm pretty certain we made the right choice","msgtype":"m.text"},"ts":1493903422000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: fwiw, the filereader route in Firefox is fast, but reader.result is null during progress events which seems wrong http://output.jsbin.com/yazetoy/quiet","msgtype":"m.text"},"ts":1493903555000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah okay, it seems better than a giant memory hole though","msgtype":"m.text"},"ts":1493903581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'll file a bug and CC baku","msgtype":"m.text"},"ts":1493903596000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: because if you want to return intermediate results, there's no way to do that with the current API and not have a giant memory hole","msgtype":"m.text"},"ts":1493903604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think I'd argue we should align the world with Firefox","msgtype":"m.text"},"ts":1493903617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh yeah, if we're playing top browser trumps then Firefox is winning","msgtype":"m.text"},"ts":1493903628000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: hmm, I wonder if Chrome is creating a new buffer per progress… testing","msgtype":"m.text"},"ts":1493903668000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you have to, they're immutable just like strings","msgtype":"m.text"},"ts":1493903722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, you have to make a new wrapper... the underlying memory could be a fixed buffer, no?","msgtype":"m.text"},"ts":1493903742000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: could be the same backing data, but that'd be a pretty unique implementation strategy for ArrayBuffer just for FileReader","msgtype":"m.text"},"ts":1493903753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: ^","msgtype":"m.text"},"ts":1493903757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought the best course would be to allocate a buffer for the blob's size, then update the buffer during progress events","msgtype":"m.text"},"ts":1493903783000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I basically don't think anyone has done that work","msgtype":"m.text"},"ts":1493903786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So the array buffer would be the total size in the first progress event, but only .loaded bytes would be written to it","msgtype":"m.text"},"ts":1493903814000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: interesting, could work","msgtype":"m.text"},"ts":1493903824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: doesn't work for the string version though","msgtype":"m.text"},"ts":1493903834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yeah the string version is screwed","msgtype":"m.text"},"ts":1493903847000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(though for strings JavaScript engines do have many types to chose from, so optimizations might be possible)","msgtype":"m.text"},"ts":1493903861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It'd have to be copy on write if you did distinct wrappers with same underlying memory.","msgtype":"m.text"},"ts":1493903882000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Good point","msgtype":"m.text"},"ts":1493903905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And all your fast access optimizations are gone","msgtype":"m.text"},"ts":1493903921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gets complicated fast","msgtype":"m.text"},"ts":1493903925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, Chrome creates a new buffer per progress","msgtype":"m.text"},"ts":1493903941000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: given it's a largely legacy API I'd recommend updating the spec to align with Firefox","msgtype":"m.text"},"ts":1493903972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'm not sure what that means… wouldn't I be able to new Uint8Array(buffer, 0, progressEvent.loaded) without slowing things down?","msgtype":"m.text"},"ts":1493903991000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Domenic was replying to wanderview's suggestion","msgtype":"m.text"},"ts":1493904021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah soz","msgtype":"m.text"},"ts":1493904028000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm not sure it's legacy until we have a good replacement","msgtype":"m.text"},"ts":1493904050000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"blob.stream() FTW","msgtype":"m.text"},"ts":1493904066000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: new Response(file) works today","msgtype":"m.text"},"ts":1493904073000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"new Request(file).body works tomorrow","msgtype":"m.text"},"ts":1493904096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which conveniently removes the progress events","msgtype":"m.text"},"ts":1493904097000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ah right it's coming back to me now","msgtype":"m.text"},"ts":1493904100000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: well, you can use streams for that","msgtype":"m.text"},"ts":1493904118000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I live in a world without streams","msgtype":"m.text"},"ts":1493904142000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1493904145000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'd like blob to take on .body and .json, .text, maybe some of the others","msgtype":"m.text"},"ts":1493904212000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Like fetch","msgtype":"m.text"},"ts":1493904219000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But I'd settle for stream()","msgtype":"m.text"},"ts":1493904228000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, .body and .json() would make slightly more sense to me","msgtype":"m.text"},"ts":1493904389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: can you make your jsbin into a WPT test?  I don't see anything that does progress+result: https://github.com/w3c/web-platform-tests/tree/master/FileAPI","msgtype":"m.text"},"ts":1493904408000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Although maybe it's a little different since you can consume it multiple times","msgtype":"m.text"},"ts":1493904412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I dunno... seems like it would be nicer to expose blob.stream and then have StreamToJSON(), StreamToText(), etc helpers","msgtype":"m.text"},"ts":1493904458000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'll put it on my TODO list, but I should be getting back to I/O slides. I'm totally procrastinating. I wish there was a jsbin style way to submit web platform tests :D","msgtype":"m.text"},"ts":1493904473000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I reckon we'd get way more contributions if there was","msgtype":"m.text"},"ts":1493904485000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'll write a gecko bug for now (I stopped before when annevk said he liked firefox)","msgtype":"m.text"},"ts":1493904517000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"fwiw the spec isn't clear how progress events should work. And Chome's interpretation is causes major problems","msgtype":"m.text"},"ts":1493904531000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok, maybe a spec issue thne","msgtype":"m.text"},"ts":1493904551000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: well, I agree with annevk, I don't think it's clear that Firefox is in the wrong","msgtype":"m.text"},"ts":1493904551000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'd just file an issue against File API","msgtype":"m.text"},"ts":1493904556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and have them deal with it","msgtype":"m.text"},"ts":1493904566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like that solution ^^^ especially since I don't have to do anything","msgtype":"m.text"},"ts":1493904569000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I can do it I guess","msgtype":"m.text"},"ts":1493904579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I misread \"I'd\" as \"I'll\"","msgtype":"m.text"},"ts":1493904595000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'll do it","msgtype":"m.text"},"ts":1493904610000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I need Domenic's extension to find the correct File API spec for me...","msgtype":"m.text"},"ts":1493904620000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm writing a Chrome bug anyway","msgtype":"m.text"},"ts":1493904622000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: wanderview: https://github.com/w3c/FileAPI/issues/79","msgtype":"m.text"},"ts":1493904650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: doesn't google have some kind of mechanical turk way of turning jsbin's into WPT tests via interns?","msgtype":"m.text"},"ts":1493904655000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: a tool to simplify test submission by devs was already in discussion in the test the  web forward days","msgtype":"m.text"},"ts":1493904656000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: still think it's a great idea","msgtype":"m.text"},"ts":1493904664000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"having spec changes paired with WPT tests has been a huge benefit, IMO","msgtype":"m.text"},"ts":1493904724000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"tobie: Yeah, a jsbin type thing but supports the serverside stuff too. Then a button to convert it into a PR","msgtype":"m.text"},"ts":1493904726000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"moar WPT tests","msgtype":"m.text"},"ts":1493904728000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hsivonen: let me know if you want me to investigate that iso-2022-jp thing; I can file an issue against whatwg/encoding","msgtype":"m.text"},"ts":1493904763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yup. PR conversion is actually rather easy to do for simple cases.","msgtype":"m.text"},"ts":1493904769000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hsivonen: I wrote that test btw","msgtype":"m.text"},"ts":1493904862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: per https://github.com/w3c/web-platform-tests/commits/master/encoding/iso-2022-jp-encoder.html","msgtype":"m.text"},"ts":1493904885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, I wanted to get to error documents today","msgtype":"m.text"},"ts":1493905480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But about:blank research won","msgtype":"m.text"},"ts":1493905491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'm trying to find justification for a Chromium test: https://chromium.googlesource.com/chromium/src/+/master/third_party/WebKit/LayoutTests/http/tests/serviceworker/immutable-prototype-serviceworker.html","msgtype":"m.text"},"ts":1493908369000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"which uses https://chromium.googlesource.com/chromium/src/+/master/third_party/WebKit/LayoutTests/http/tests/serviceworker/resources/immutable-prototype-serviceworker.js","msgtype":"m.text"},"ts":1493908383000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I thought this might fall under WebIDL, but I can't see anything there","msgtype":"m.text"},"ts":1493908406000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"for instance, there's this line: \"Unless otherwise specified, the [[Extensible]] internal property of objects defined in this section has the value true.\"","msgtype":"m.text"},"ts":1493908438000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: https://heycam.github.io/webidl/#interface-prototype-object second to last sentence","msgtype":"m.text"},"ts":1493908445000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And https://heycam.github.io/webidl/#platform-object-setprototypeof","msgtype":"m.text"},"ts":1493908454000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh geez","msgtype":"m.text"},"ts":1493908507000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Forgive me--that's so obvious. My problem is that I've been looking at this document https://www.w3.org/TR/WebIDL-1/#interface-prototype-object","msgtype":"m.text"},"ts":1493908525000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"where [[SetPrototypeOf]] is not referenced","msgtype":"m.text"},"ts":1493908534000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: someone once told me \"TR\" stands for trash... best to look at the editors drafts","msgtype":"m.text"},"ts":1493908573000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"haha, noted","msgtype":"m.text"},"ts":1493908590000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"More points in favor of my extension","msgtype":"m.text"},"ts":1493908735000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(my not-yet-existing extension: https://twitter.com/domenic/status/859235099187040257 )","msgtype":"m.text"},"ts":1493908765000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: its been 2.5 days... no extension yet?","msgtype":"m.text"},"ts":1493908804000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rbyers: https://github.com/whatwg/html/issues/1826","msgtype":"m.text"},"ts":1493920251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Damn, sorry I missed that.","msgtype":"m.text"},"ts":1493921576000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"any advice how I'd best write tests for https://github.com/whatwg/html/pull/2623 ?","msgtype":"m.text"},"ts":1493921721000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"specifically, what's the standard way for wpt to check that a download was succesful","msgtype":"m.text"},"ts":1493921736000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: manual tests I guess","msgtype":"m.text"},"ts":1493926276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: prolly worth filing a wpt issue to ask for automation","msgtype":"m.text"},"ts":1493926298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: hopefully webdriver support will come eventually","msgtype":"m.text"},"ts":1493926319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: could https://rawgit.com/tabatkins/bikeshed/master/docs/index.html#metadata-default-highlight apply only to <pre> and <xmp>, but not <code>?","msgtype":"m.text"},"ts":1493935468000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: I tried using this in Geometry APIs but it is applied to <dfn><code>... which is not what I want","msgtype":"m.text"},"ts":1493935511000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Sure, file an issue.","msgtype":"m.text"},"ts":1493937486000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Btw, you can access the docs at tabatkins.github.io/bikeshed/","msgtype":"m.text"},"ts":1493937569000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]