[
{"content":{"body":"\"as soon as possible\" is commonly written \"asap\". is there an equivalent for running something as late as possible, at the last minute?","msgtype":"m.text"},"ts":1377562990000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"at the last possible moment [before X]\"","msgtype":"m.text"},"ts":1377563029000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"immediately before X\"","msgtype":"m.text"},"ts":1377563036000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nothing nice and short like \"asap\"? this is something i'm considering for an attribute value.","msgtype":"m.text"},"ts":1377563062000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm not beyond making \"at the last possible moment\" the value, but people will hate me for it.","msgtype":"m.text"},"ts":1377563088000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"just in time?","msgtype":"m.text"},"ts":1377563289000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jit","msgtype":"m.text"},"ts":1377563296000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hm, yeah, that might work","msgtype":"m.text"},"ts":1377563302000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"asap and jit","msgtype":"m.text"},"ts":1377563305000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"is there somewhere to get only notified on changes interesting for web developers (new attributes, changed definitions, …)?","msgtype":"m.text"},"ts":1377563912000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"or changes to the developers.whatwg.org part of the spec?","msgtype":"m.text"},"ts":1377564151000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"not really sure what's interesting to whom","msgtype":"m.text"},"ts":1377564175000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you can register to be notified for changes to various subparts of the HTML spec, have you looked at that?","msgtype":"m.text"},"ts":1377564188000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I’m mainly interested in newly added elements and attributes, changes in the meaning of elements or attributes and dropped elements or attributes","msgtype":"m.text"},"ts":1377564318000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"e.g. the table border attribute, which still was in the spec a year ago or two and is dropped now","msgtype":"m.text"},"ts":1377564416000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"oh you mean things that affect conformance criteria?","msgtype":"m.text"},"ts":1377564454000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"in theory, i mark all those checkins with \"c\"","msgtype":"m.text"},"ts":1377564459000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which makes them appear with a little yellow doc with a checkmark on http://html5.org/tools/web-apps-tracker","msgtype":"m.text"},"ts":1377564495000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. r8109","msgtype":"m.text"},"ts":1377564499000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: What attribute value might this be?","msgtype":"m.text"},"ts":1377564552000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dunno yet, still trying to figure out a proposal. scripts loading stuff.","msgtype":"m.text"},"ts":1377564570000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"great, thanks!","msgtype":"m.text"},"ts":1377564582000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"is there some sort of filter for those checkins?","msgtype":"m.text"},"ts":1377564592000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"jannis_: i warn you, i'm not very good at marking them :_(","msgtype":"m.text"},"ts":1377564597000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jannis_: there was some filter, dunno about now","msgtype":"m.text"},"ts":1377564616000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should be easy enough to hack one up if you want to though","msgtype":"m.text"},"ts":1377564631000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the format is fixed","msgtype":"m.text"},"ts":1377564635000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's in the commit messages","msgtype":"m.text"},"ts":1377564641000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should be trivial to parse","msgtype":"m.text"},"ts":1377564647000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yep, that seems to be what I was looking for","msgtype":"m.text"},"ts":1377565099000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"now if you only mark them accordingly … ;-)","msgtype":"m.text"},"ts":1377565141000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"another question: why is <a><p></p></a> fine but <ul><a><li></li></a></ul> isn’t?","msgtype":"m.text"},"ts":1377565905000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"jannis_: because the latter makes walking the list items very non-trivial","msgtype":"m.text"},"ts":1377567253000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I see :-)","msgtype":"m.text"},"ts":1377567583000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"wtf english","msgtype":"m.text"},"ts":1377570962000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"A is a dependency of B\" and \"A's dependency on B\" mean the same thing, but are opposite meanings of the word \"dependency\"","msgtype":"m.text"},"ts":1377571042000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"they mean the opposite thing to me: \"b requires a\" and \"a requires b\" (\"foo.c is a dependency of foo.exe\" <-> \"foo.exe's dependency on foo.c\", not \"foo.c's dependency on foo.exe\")","msgtype":"m.text"},"ts":1377574424000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: a \"dependency\" is a country that belongs to (depends on) another. it's also something that someone depends on.","msgtype":"m.text"},"ts":1377575289000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i.e. it has both opposite meanings","msgtype":"m.text"},"ts":1377575308000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"am i the only one having trouble following https://www.w3.org/Bugs/Public/show_bug.cgi?id=22772 ?","msgtype":"m.text"},"ts":1377590914000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, removing microdata","msgtype":"m.text"},"ts":1377591554000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Sounds like the rdfa people had their way","msgtype":"m.text"},"ts":1377591715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, thank you for that datetime data last week. The reason I was asking is that I was designing combo date+time pickers for the Ubuntu Phone browser, and I was asked how needed they were. I guess the answer is, not much. <https://wiki.ubuntu.com/TimeAndDatePickers#datetime-local>","msgtype":"m.text"},"ts":1377596374000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"Okay, seems IDNA thread is dead until people get back from vacation... Still unclear what needs to happen :/","msgtype":"m.text"},"ts":1377599621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems Domenic_ is solving promises.","msgtype":"m.text"},"ts":1377599644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mpt: np. though, as i said, the data is only of front pages, so not really representative of the long tail web etc","msgtype":"m.text"},"ts":1377599853000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heycam|away: is 'double screenX = 0;' bogus webidl dictionary member? (i don't see it being invalid, but maybe it should be)","msgtype":"m.text"},"ts":1377605081000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1377605229000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"0 is integer","msgtype":"m.text"},"ts":1377605255000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Doesn't seem like a problem to me","msgtype":"m.text"},"ts":1377605315000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Does anyone support select.selectedOptions?","msgtype":"m.text"},"ts":1377605362000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"maybe not. but what about 'double screenX = \"\";' should that be invalid webidl?","msgtype":"m.text"},"ts":1377605368000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1377605396000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Doesn't seem to be","msgtype":"m.text"},"ts":1377605496000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=23077","msgtype":"m.text"},"ts":1377605728000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So it seems for Zip we need a file extension -> Content-Type mapping. Kinda ugly, but seems fine.","msgtype":"m.text"},"ts":1377606952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does widgets spec have that?","msgtype":"m.text"},"ts":1377607151000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yes","msgtype":"m.text"},"ts":1377607426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it does content-type sniffing too, which seems kinda ugly","msgtype":"m.text"},"ts":1377607450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I used closing to be proper, under the assumption people will just copy/paste the code.","msgtype":"m.text"},"ts":1377607589000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And file names are byte sequences. Anything else is luck.","msgtype":"m.text"},"ts":1377607601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: Well it's a note because I didn't think it was worth arguing over, but I do think it makes the example less clear","msgtype":"m.text"},"ts":1377607641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So supporting nested Zips requires some kind of escaping. E.g. #path=nested.zip!image.jpg","msgtype":"m.text"},"ts":1377607644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Would try/finally make it clearer?","msgtype":"m.text"},"ts":1377607651000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But then if your file was named that way you'd write #path=nested.zip\\!image.jpg","msgtype":"m.text"},"ts":1377607659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if your file was named that way you'd write #path=nested.zip\\\\\\!image.jpg","msgtype":"m.text"},"ts":1377607679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: Yes","msgtype":"m.text"},"ts":1377607714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Will change, then","msgtype":"m.text"},"ts":1377607721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: OK","msgtype":"m.text"},"ts":1377607728000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not sure if any other \\ should cause a network error...","msgtype":"m.text"},"ts":1377607766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what kind of zip files are you dealing with?","msgtype":"m.text"},"ts":1377607909000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: do we really want to do nested zip files?","msgtype":"m.text"},"ts":1377607926000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: fwiw, EPUB invented a manifest for this even though their supported file types are heuristically detectable.","msgtype":"m.text"},"ts":1377607937000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"magic numbers FTW","msgtype":"m.text"},"ts":1377607942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: any kind of zip file really","msgtype":"m.text"},"ts":1377607959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: There's a hard-coded list of formats in EPUB?","msgtype":"m.text"},"ts":1377607959000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: for the ones that are required to support.","msgtype":"m.text"},"ts":1377607979000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: i.e. useful","msgtype":"m.text"},"ts":1377607982000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: using XMLHttpRequest you could override the type you get back though","msgtype":"m.text"},"ts":1377607992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: yes","msgtype":"m.text"},"ts":1377608006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Images have magic numbers","msgtype":"m.text"},"ts":1377608030000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so do media files","msgtype":"m.text"},"ts":1377608036000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the content files in EPUB are known to be XHTML or SVG, so you may assume an XML parser","msgtype":"m.text"},"ts":1377608056000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Yeah so the way this would work is that you have the extension -> Content-Type mapping. That makes CSS and such work","msgtype":"m.text"},"ts":1377608073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSS files are always referenced from a context where you know that you want CSS file","msgtype":"m.text"},"ts":1377608077000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"And then even though .gif will get image/gif the loader will sniff it anyway","msgtype":"m.text"},"ts":1377608088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the EPUB case, that is.","msgtype":"m.text"},"ts":1377608090000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: not sure I'd like that kind of magic on the web","msgtype":"m.text"},"ts":1377608117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Eh, all the advise I can find people giving from the past five years uses closing.","msgtype":"m.text"},"ts":1377608123000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: context is https://gist.github.com/annevk/6295844","msgtype":"m.text"},"ts":1377608149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: So I'm just going to run with it. Looking closely, you need nested try blocks, which just gets ugly.","msgtype":"m.text"},"ts":1377608154000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: Why are you doing this as fragment identifiers instead of using the jar:  scheme?","msgtype":"m.text"},"ts":1377608206000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Because Architecture does not recognize nested schemes?","msgtype":"m.text"},"ts":1377608222000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: shouldn’t nested zips work like nested anything? foo.zip#path=bar.zip#path=image.png#xywh=160,120,320,240","msgtype":"m.text"},"ts":1377608226000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hsivonen: kinda, nested schemes also creates a whole sleuth of problems with origin determination and such","msgtype":"m.text"},"ts":1377608263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What's the use case for this stuff?","msgtype":"m.text"},"ts":1377608265000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and %23 of you need # in a path","msgtype":"m.text"},"ts":1377608270000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"gsnedders: OK","msgtype":"m.text"},"ts":1377608271000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: basically you'd need to special case more stuff","msgtype":"m.text"},"ts":1377608272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: no","msgtype":"m.text"},"ts":1377608275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1377608282000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: any reason not to use ! for path inside zip and # for regular fragment id?","msgtype":"m.text"},"ts":1377608321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: distributing resources in a Zip basically. People want it for ES6 modules, sets of images, games, etc.","msgtype":"m.text"},"ts":1377608332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so why not ! ?","msgtype":"m.text"},"ts":1377608348000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: how do you know it's not part of the path?","msgtype":"m.text"},"ts":1377608366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like http://example.com/package.zip!dir/foo.html#heading","msgtype":"m.text"},"ts":1377608368000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: also, fragment is designed for this","msgtype":"m.text"},"ts":1377608375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: this would require server-side support","msgtype":"m.text"},"ts":1377608388000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: I think saying that it's \"designed for this\" is stretching it","msgtype":"m.text"},"ts":1377608392000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SimonSapin: you only have one fragment identifier","msgtype":"m.text"},"ts":1377608401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: fragment identifiers are for client-side resource-specific processing","msgtype":"m.text"},"ts":1377608416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah right. can't make ! special without a new scheme","msgtype":"m.text"},"ts":1377608421000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Zips fit that perfectly","msgtype":"m.text"},"ts":1377608441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fair enough","msgtype":"m.text"},"ts":1377608448000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: can’t we define that a fragment for a zip file is a stuff (including path) followed by #frag for the inner resource?","msgtype":"m.text"},"ts":1377608476000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"You just define what the fragment identifier means for Zip files and that's it. Possibly with a # within the fragment identifier.","msgtype":"m.text"},"ts":1377608490000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: +1","msgtype":"m.text"},"ts":1377608501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"# is legal inside framgents, right?","msgtype":"m.text"},"ts":1377608523000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Why not just use media fragments which already addresses this?","msgtype":"m.text"},"ts":1377608529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"From an opaque URL parsing POV, there's only one. But the Zip fragment id-handling is up to whatever you define.","msgtype":"m.text"},"ts":1377608531000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: Yes.","msgtype":"m.text"},"ts":1377608534000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: because you want nesting","msgtype":"m.text"},"ts":1377608555000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: It's far more obvious to users, IMO","msgtype":"m.text"},"ts":1377608585000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So # is not allowed inside a fragment.","msgtype":"m.text"},"ts":1377608591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how do you link to an anchor/ID in an HTML file in a zip file?","msgtype":"m.text"},"ts":1377608594000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: Who are used to just throwing #foo on the end of a URL.","msgtype":"m.text"},"ts":1377608597000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's unlikely we'll have this supported for navigation","msgtype":"m.text"},"ts":1377608615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least initially","msgtype":"m.text"},"ts":1377608619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1377608634000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: You may want to check out the EPUB prior art. I expect you end up doing something different, so be prepared for the EPUB folks yelling at you.","msgtype":"m.text"},"ts":1377608644000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SimonSapin: complexity","msgtype":"m.text"},"ts":1377608646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I guess I should read http://www.idpf.org/epub/30/spec/epub30-ocf.html","msgtype":"m.text"},"ts":1377608701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://www.idpf.org/epub/linking/cfi/epub-cfi.html","msgtype":"m.text"},"ts":1377608714000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Oh, interesting","msgtype":"m.text"},"ts":1377608726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so would it look like this? foo.zip#xywh=160,120,320,240&path=bar.zip!baz.png","msgtype":"m.text"},"ts":1377608732000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah","msgtype":"m.text"},"ts":1377608814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks backwards","msgtype":"m.text"},"ts":1377608823000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"then reorder -_-","msgtype":"m.text"},"ts":1377608845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I picked the order on purpose, but I dislike that it’s possible to make it backwards","msgtype":"m.text"},"ts":1377608883000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Not a problem, IMO","msgtype":"m.text"},"ts":1377608893000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: so yeah, it would not be compatible with that at all","msgtype":"m.text"},"ts":1377608906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"# in fragment seems to work fine: data:text/html,<script>document.write(window.location.hash)</script>#a#b","msgtype":"m.text"},"ts":1377609212000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It works fine but is against spec.","msgtype":"m.text"},"ts":1377609316000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also, media fragments pioneered this already. Not really sure why we'd need yet another mechanism.","msgtype":"m.text"},"ts":1377609404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arbitrary nesting instead of declaring media fragments are the one and only thing you want to do with URL fragments","msgtype":"m.text"},"ts":1377609490000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I don't follow.","msgtype":"m.text"},"ts":1377609511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if zip files have fragments like #<path>#<fragment for the inner resource>, the inner fragment doesn't have to be Media Fragments","msgtype":"m.text"},"ts":1377609602000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it could be EPUB’s thing, a bare anchor name, or anything","msgtype":"m.text"},"ts":1377609621000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"The problem with that is you'd need to type %23 and it's not very clear what the advantages are.","msgtype":"m.text"},"ts":1377610128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you lose extensibility.","msgtype":"m.text"},"ts":1377610138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you'd need an escape for %23 as it could occur in a file name.","msgtype":"m.text"},"ts":1377610254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why not change the spec to allow # in fragments?","msgtype":"m.text"},"ts":1377610331000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"implementations seem to be doing this already","msgtype":"m.text"},"ts":1377610350000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and it’s not ambiguous AFAIU","msgtype":"m.text"},"ts":1377610383000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Even if you replace %23 with # in my arguments above I don't think there's much of a change","msgtype":"m.text"},"ts":1377610427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, # for \"start of the nested fragment\" and %23 for \"path that contains #\", just like in the actual path of an URL","msgtype":"m.text"},"ts":1377610593000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"could be #path=foo.png#xywh=… if you want Media Fragment-style extensibility","msgtype":"m.text"},"ts":1377610728000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ew","msgtype":"m.text"},"ts":1377610800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so how would you do this? not support it? zip#path=foo.html#toc","msgtype":"m.text"},"ts":1377611076000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: id= is a thing","msgtype":"m.text"},"ts":1377611096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377611105000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: but as I said earlier, there's a bunch of complexity with supporting navigation so that wouldn't work at the start","msgtype":"m.text"},"ts":1377611119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://w3c-test.org/web-platform-tests/master/html/semantics/forms/the-form-element/form-elements-nameditem-02.html - wonder if testharness.js should omit the end tag in the message","msgtype":"m.text"},"ts":1377611437000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ?","msgtype":"m.text"},"ts":1377611501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it says \"expected Element node <input type=\"radio\" name=\"radio0\" id=\"r0\" value=\"0\"></input>\"","msgtype":"m.text"},"ts":1377611529000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: #path=foo.png&xywh=whatever","msgtype":"m.text"},"ts":1377611552000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not multiple #'s, that's weird","msgtype":"m.text"},"ts":1377611559000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Oh, it passes in gecko, so I didn't see that. Duh.","msgtype":"m.text"},"ts":1377611565000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(btw the Mozilla bug I cc'd you on is about testing in workers, in case you didn't realise that. I seem to recall that you had some thoughts on this)","msgtype":"m.text"},"ts":1377611574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(still catching up...)","msgtype":"m.text"},"ts":1377611670000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: which bug?","msgtype":"m.text"},"ts":1377611677000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess the \\! thing is not needed. Can just use ! and it's percent-encoded variant","msgtype":"m.text"},"ts":1377611684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: https://bugzilla.mozilla.org/show_bug.cgi?id=909726","msgtype":"m.text"},"ts":1377611706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: yes, please do not add yet one more escaping mechanism","msgtype":"m.text"},"ts":1377611734000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Actually, that may not work","msgtype":"m.text"},"ts":1377611754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not given the generic media fragment processing anyway","msgtype":"m.text"},"ts":1377611780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how about this? #path=foo.zip&path=nested.png","msgtype":"m.text"},"ts":1377611799000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"jgraham: (seems i had disabled emails for when only cc changes. fixed that now)","msgtype":"m.text"},"ts":1377611832000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: so, is the basic hope that the restriction of not supporting navigation (which is needed anyway) will essentially avoid web-compat issues with using the fragment?","msgtype":"m.text"},"ts":1377611837000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: no","msgtype":"m.text"},"ts":1377611852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/TR/media-frags/#processing-name-value-components has an example of repeated name","msgtype":"m.text"},"ts":1377611889000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: Oh, that might be the default. Possibly quite sensible","msgtype":"m.text"},"ts":1377611893000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(sitting here hoping for better than a two-letter response...)","msgtype":"m.text"},"ts":1377611911000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Although you would have thought that getting an email when someone adds you as a cc would be a good idea","msgtype":"m.text"},"ts":1377611915000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SimonSapin: seems somewhat awkward","msgtype":"m.text"},"ts":1377611996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: yeah. i've ticked the box that makes cc changes notify me if i'm cc-ed. i guess that means i'll be notified when others add themselves to cc if i'm also cc-ed, but there doesn't seem to be a way to get notified only if i'm newly cc-ed...","msgtype":"m.text"},"ts":1377612011000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well if there are web-compat issues with using fragments then I guess this is a pointless discussion, then","msgtype":"m.text"},"ts":1377612035000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: also looks like generic media fragment processing cannot be done because we cannot use utf-8 necessarily so maybe that's fine","msgtype":"m.text"},"ts":1377612037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1377612037000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: what kind of web-compat issues?","msgtype":"m.text"},"ts":1377612059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what do you mean?","msgtype":"m.text"},"ts":1377612067000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"uh, well the whole reason for not using fragments in the first place is because fragments are used all over the place, so some weirdo escaping or something would be needed","msgtype":"m.text"},"ts":1377612096000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: we can probably make #path=s!s work","msgtype":"m.text"},"ts":1377612125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: at the end of Zip files?","msgtype":"m.text"},"ts":1377612134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because zip paths are bytes rather than unicode?","msgtype":"m.text"},"ts":1377612162000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"at the end of urls, you don't know if a url points to a zip at parse time","msgtype":"m.text"},"ts":1377612168000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: speaking of workers https://critic.hoppipolla.co.uk/r/56","msgtype":"m.text"},"ts":1377612174000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: yeah","msgtype":"m.text"},"ts":1377612190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: huh?","msgtype":"m.text"},"ts":1377612198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: you fetch before you start looking at the fragment...","msgtype":"m.text"},"ts":1377612218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: or maybe \"I'm added to or removed from this capacity\" does that","msgtype":"m.text"},"ts":1377612280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh. http://marcosc.com/2008/12/zip-files-and-encoding-i-hate-you/","msgtype":"m.text"},"ts":1377612437000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"so having to look at the fragment within the fetch algorithm? i guess, does anything do that now?","msgtype":"m.text"},"ts":1377612648000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: zips theoretically have a flag for utf-8, but nothing uses it, so it's not much help...","msgtype":"m.text"},"ts":1377612667000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: yes, no","msgtype":"m.text"},"ts":1377612728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, I should figure out how to submit tests to w3c/web-platform-tests","msgtype":"m.text"},"ts":1377612735000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i think my take on encodings for zips is to just pretend they're all utf-8 and accept the mojibake and hope clients catch up","msgtype":"m.text"},"ts":1377612740000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"do I need a github account for that?","msgtype":"m.text"},"ts":1377612754000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: my plan was to support byte sequences, so you can open old stuff too","msgtype":"m.text"},"ts":1377612781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":|","msgtype":"m.text"},"ts":1377612839000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: there is no display of zip filenames here afaik, but we need to extract one file given some part of the URL fragment","msgtype":"m.text"},"ts":1377612863000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i guess it matters more for urls than js apis, since it's \"can't open it at all\" vs. mojibake","msgtype":"m.text"},"ts":1377612874000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh, yes there could be mojibake with the api","msgtype":"m.text"},"ts":1377612921000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: Yeah, I wonder if I can delegate that review","msgtype":"m.text"},"ts":1377612982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not entirely sure what the best API would be given the byte sequence mess","msgtype":"m.text"},"ts":1377613142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe getRawFileNames(); getDisplayFileNames(); (looks at encoding of zip, falls back to windows-1252 or so; otherwise uses utf-8, falling back to windows-1252 for invalid sequences)","msgtype":"m.text"},"ts":1377613234000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And getFile((ArrayBuffer or DOMString)) (does same encoding trick?)","msgtype":"m.text"},"ts":1377613282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems real ikcy","msgtype":"m.text"},"ts":1377613285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or http://xkcd.com/927/ the zip format","msgtype":"m.text"},"ts":1377613592000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"that's not really an option if you want to support opening existing stuff like .docx or .epub","msgtype":"m.text"},"ts":1377613754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the API could have ArrayBuffer and String, and the latter would only go to utf-8","msgtype":"m.text"},"ts":1377613812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"plus list of ArrayBuffer names and list of ArrayBuffer decoded as utf-8 names","msgtype":"m.text"},"ts":1377613846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, jokes taken literally :)","msgtype":"m.text"},"ts":1377613887000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"why? zip file resource names are bytes","msgtype":"m.text"},"ts":1377613959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the suggestion to make a new archive format was a joke","msgtype":"m.text"},"ts":1377614053000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah I'm asking where I took it literally","msgtype":"m.text"},"ts":1377614069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"not really an option…\"","msgtype":"m.text"},"ts":1377614084000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"oh like that","msgtype":"m.text"},"ts":1377614095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"needs sleep","msgtype":"m.emote"},"ts":1377614103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It should fall back to the current locale, not necessarily windows-1252.","msgtype":"m.text"},"ts":1377614476000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: see the revised proposal a bit lower","msgtype":"m.text"},"ts":1377614503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: less magic, more pain if you didn't use utf-8","msgtype":"m.text"},"ts":1377614514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also plenty of ZIP files are broken when it comes to file names.","msgtype":"m.text"},"ts":1377614516000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Like, the directory index often has totally bogus stuff in it.","msgtype":"m.text"},"ts":1377614533000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"EPUBs especially.","msgtype":"m.text"},"ts":1377614541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess eventually we'll end up defining the parser and doing a variant of 927...","msgtype":"m.text"},"ts":1377614579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AFAIK most impls just ignore the dictionary at the end entirely.","msgtype":"m.text"},"ts":1377614669000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"err, no...","msgtype":"m.text"},"ts":1377614705000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"most implementations treat the central directory as authoritative","msgtype":"m.text"},"ts":1377614723000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(in my experience)","msgtype":"m.text"},"ts":1377614729000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"otherwise you have to scan the entire file to get a directory listing","msgtype":"m.text"},"ts":1377614737000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"And then ignore filenames like \\xFA\\x23\\xA2?","msgtype":"m.text"},"ts":1377614767000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"they don't ignore them, they just mojibake them","msgtype":"m.text"},"ts":1377614776000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Last time I looked into this (with broken epub zip files) they seemed to just get ignored","msgtype":"m.text"},"ts":1377614804000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"parsers for specific formats may do things differently","msgtype":"m.text"},"ts":1377614820000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"general-purpose clients in my experience skip right to the end and read the central record","msgtype":"m.text"},"ts":1377614833000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I was looking at general-purpose ones.","msgtype":"m.text"},"ts":1377614869000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"UnZip 6.00 seems to treat central over local filename.","msgtype":"m.text"},"ts":1377614909000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I was just told Gecko looks at the end","msgtype":"m.text"},"ts":1377614977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you really need to use the central record for remote fetches, since otherwise you have to do a zillion tiny fetches to read the local headers","msgtype":"m.text"},"ts":1377614982000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, indeed.","msgtype":"m.text"},"ts":1377615003000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"A lot of epub ZIPs have broken central dictionaries for whatever reason, though. Which is fun. zip -FF recreates it from scanning through, which suddenly makes them work everywhere.","msgtype":"m.text"},"ts":1377615046000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, the \"fix zip\" thing in zip clients just rewrites central from local records","msgtype":"m.text"},"ts":1377615136000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(and maybe recalculates crcs and whatever)","msgtype":"m.text"},"ts":1377615162000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Zip 3.0 at least explicitly does not recalculate CRC","msgtype":"m.text"},"ts":1377615192000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"explorer.exe I believe just goes through local records","msgtype":"m.text"},"ts":1377615335000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ergh, all the sanitizer tests need rewritten.","msgtype":"m.text"},"ts":1377615401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://etherpad.mozilla.org/zipurls","msgtype":"m.text"},"ts":1377615452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Thoughts on moving serializer/htmlserializer.py to serializer.py","msgtype":"m.text"},"ts":1377615515000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Does removing the CDATA section state from the tokenizer have any effect on expressibility of the parser?","msgtype":"m.text"},"ts":1377615796000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1377616855000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or Ms2ger","msgtype":"m.text"},"ts":1377616987000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yo","msgtype":"m.text"},"ts":1377617071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: about tokenlist serialization","msgtype":"m.text"},"ts":1377617099000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Here","msgtype":"m.text"},"ts":1377617123000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it uses set serializer","msgtype":"m.text"},"ts":1377617124000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so what guarantees the order","msgtype":"m.text"},"ts":1377617134000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I should probably rename those to ordered set parser and ordered set serializer","msgtype":"m.text"},"ts":1377617157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the idea is that it is ordered","msgtype":"m.text"},"ts":1377617171000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377617194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's why the set parser uses append and not set","msgtype":"m.text"},"ts":1377617205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then \"list of tokens\"","msgtype":"m.text"},"ts":1377617257000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"where is that defined","msgtype":"m.text"},"ts":1377617261000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if I look at http://dom.spec.whatwg.org/#dom-domtokenlist-add for example","msgtype":"m.text"},"ts":1377617281000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"A DOMTokenList object has an associated list of unique tokens, which is initially empty.\"","msgtype":"m.text"},"ts":1377617302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1377617319000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess I could make that ordered set of tokens and xref tokens","msgtype":"m.text"},"ts":1377617333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll make some clarifications in a bit","msgtype":"m.text"},"ts":1377617352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is that tokens of the HTML parser?","msgtype":"m.text"},"ts":1377617374000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1377617653000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Tokens in the class attribute","msgtype":"m.text"},"ts":1377617662000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: what about the initial list. where is it defined how it is parsed?","msgtype":"m.text"},"ts":1377617716000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: somewhat below http://dom.spec.whatwg.org/#concept-class","msgtype":"m.text"},"ts":1377617887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, per HTML spec the value is not updated when class is set to empty string","msgtype":"m.text"},"ts":1377618059000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"...when an element's class attribute is set to a value other than the empty string, set the element's classes to the new value, parsed.\"","msgtype":"m.text"},"ts":1377618134000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"When an element's class attribute is removed, set the element's classes to the empty list. \"","msgtype":"m.text"},"ts":1377618146000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but what about empty string as value","msgtype":"m.text"},"ts":1377618159000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"That seems like a bug","msgtype":"m.text"},"ts":1377618166000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: ^","msgtype":"m.text"},"ts":1377618186000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: once browsers implement class=\"\" for all elements, the HTML spec is obsolete...","msgtype":"m.text"},"ts":1377618579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: landed a patch in DOM around token usage btw","msgtype":"m.text"},"ts":1377618621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and ordered sets","msgtype":"m.text"},"ts":1377618628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1377618773000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: well, DOM spec will need to then define how the initial classList is constructed","msgtype":"m.text"},"ts":1377618816000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I just pointed you to where it does that","msgtype":"m.text"},"ts":1377618836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(again an example how a feature has been implemented at least once, yet the specs are unclear what to implement. Specs tend to become less buggy only after 2-3 implementations. )","msgtype":"m.text"},"ts":1377618935000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(which is why it is sad there isn't Presto anymore)","msgtype":"m.text"},"ts":1377618955000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: oops, sorry, I thought that was in HTML spec :)","msgtype":"m.text"},"ts":1377619062000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, so I should remove empty string?","msgtype":"m.text"},"ts":1377619089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377619104000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder why we had that","msgtype":"m.text"},"ts":1377619128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ooh, maybe copypasta from the ID case","msgtype":"m.text"},"ts":1377619144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: fixed","msgtype":"m.text"},"ts":1377619267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kiitos","msgtype":"m.text"},"ts":1377619302000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: file a bug","msgtype":"m.text"},"ts":1377621549000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: nm, I was confused. It was a bug in DOM spec and annevk fixed it","msgtype":"m.text"},"ts":1377621663000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1377621721000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"still thinks it would be useful to allow multiple IDs point to a single element using space-separated @id","msgtype":"m.emote"},"ts":1377621749000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: where?","msgtype":"m.text"},"ts":1377621937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In HTML, at least.","msgtype":"m.text"},"ts":1377622154000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"But that's just a thought with no understanding of any possible implications.","msgtype":"m.text"},"ts":1377622168000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I see...","msgtype":"m.text"},"ts":1377622413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: well, other then breaking the heck out of element.id? ;)","msgtype":"m.text"},"ts":1377622926000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"my interpretation of the spec for the `hidden` attribute is that it should not be used for content that will _never_ become visible","msgtype":"m.text"},"ts":1377622927000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"is that correct? (http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#the-hidden-attribute)","msgtype":"m.text"},"ts":1377622931000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"gavinc: It may indeed break the heck out of a lot of things.","msgtype":"m.text"},"ts":1377622954000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"matjas: it might never become visible for any given user","msgtype":"m.text"},"ts":1377622968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"“When specified on an element, it indicates that the element is not yet, or is no longer, directly relevant to the page’s current state, or that it is being used to declare content to be reused by other parts of the page as opposed to being directly accessed by the user.”","msgtype":"m.text"},"ts":1377623006000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i.e. there exists a situation in which the `hidden` state is removed","msgtype":"m.text"},"ts":1377623032000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"but if i just want to hide something in the document, for everyone, in all cases, doesn’t that mean i shouldn’t use `hidden`?","msgtype":"m.text"},"ts":1377623085000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"since it’s _never_ “directly relevant to the page’s current state”","msgtype":"m.text"},"ts":1377623096000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"sounds to me like it does, but maybe i’m wrong","msgtype":"m.text"},"ts":1377623155000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: if you want to hide something in the document, for everyone, in all cases, just don't put it in?","msgtype":"m.text"},"ts":1377623464000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: here’s the use case http://mathiasbynens.be/notes/json-dom-csp#hidden-element","msgtype":"m.text"},"ts":1377623948000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"why would CSP not be satisfied with inlined JSON?","msgtype":"m.text"},"ts":1377623976000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"<script> is the appropriate element to use here","msgtype":"m.text"},"ts":1377624009000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hidden=\"\" is wrong. display:none is even more wrong.","msgtype":"m.text"},"ts":1377624024000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"CSP blocks inline <script>s","msgtype":"m.text"},"ts":1377624026000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"\"blocks\" how?","msgtype":"m.text"},"ts":1377624032000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"doesn’t execute its contents","msgtype":"m.text"},"ts":1377624044000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"it's JSON, you're not supposed to execute it?","msgtype":"m.text"},"ts":1377624053000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"<script type=\"application/json\"> ... </script>","msgtype":"m.text"},"ts":1377624063000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you want to assign it to a variable or something like that so you can use it in JS","msgtype":"m.text"},"ts":1377624070000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"so you’d use <script type=application/json> (also mentioned on that page)","msgtype":"m.text"},"ts":1377624076000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"k got it","msgtype":"m.text"},"ts":1377624080000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377624082000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(just got there)","msgtype":"m.text"},"ts":1377624084000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's the way to include data blobs in html","msgtype":"m.text"},"ts":1377624099000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i asked about this a few weeks back and the suggested solution was to use a custom data-* attribute","msgtype":"m.text"},"ts":1377624148000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"(here in #whatwg, i mean)","msgtype":"m.text"},"ts":1377624158000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"well it depends what you're doing","msgtype":"m.text"},"ts":1377624176000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if you have a big blob, not associated with an element, then <script> data blocks are the way to go","msgtype":"m.text"},"ts":1377624190000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if you have data associated with an element, data-* is good","msgtype":"m.text"},"ts":1377624196000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"would you mind leaving a comment there saying just that? thanks","msgtype":"m.text"},"ts":1377624237000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"can't right now but feel free to copy/paste commentsa bove","msgtype":"m.text"},"ts":1377624258000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Anyone with shorter names for getFileNames and getRawFileNames?","msgtype":"m.text"},"ts":1377624371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(assume I just lowercased the \"N\" per established convention)","msgtype":"m.text"},"ts":1377624449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Do you understand the sanitizer at all?","msgtype":"m.text"},"ts":1377624466000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yes. But the bar for not understanding something \"at all\" is rather high.","msgtype":"m.text"},"ts":1377624575000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Explain how disallowed_token doesn't break everything?","msgtype":"m.text"},"ts":1377624764000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wow, that's terrible code","msgtype":"m.text"},"ts":1377625128000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I'm not clear that it necessarily has to break everything","msgtype":"m.text"},"ts":1377625142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'mm not clear that it doesn't either","msgtype":"m.text"},"ts":1377625155000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like I said","msgtype":"m.text"},"ts":1377625158000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, right","msgtype":"m.text"},"ts":1377625186000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It shouldn't break everything","msgtype":"m.text"},"ts":1377625194000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It is trying to convert all disallowed tokens to character tokens","msgtype":"m.text"},"ts":1377625209000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, I eventually worked that out just before you said that.","msgtype":"m.text"},"ts":1377625267000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Big problem: attribute/element lists are namespace unaware.","msgtype":"m.text"},"ts":1377625278000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Do I deal with this by post-processing the lists, or do I change the lists?","msgtype":"m.text"},"ts":1377625293000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well","msgtype":"m.text"},"ts":1377625327000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would say that you could use a syntax like svg:foo and post-process that","msgtype":"m.text"},"ts":1377625351000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, indeed.","msgtype":"m.text"},"ts":1377625452000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's what I meant.","msgtype":"m.text"},"ts":1377625454000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's what it currently does.","msgtype":"m.text"},"ts":1377625458000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Without the post-processing.","msgtype":"m.text"},"ts":1377625464000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1377625503000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, this is really quite the mess.","msgtype":"m.text"},"ts":1377625656000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_: Link: foo.xbl to style plaintext is one of the scariest things I've ever heard of here","msgtype":"m.text"},"ts":1377626568000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: why is it scary?","msgtype":"m.text"},"ts":1377627436000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: XBL, mutating random content, the usual scary","msgtype":"m.text"},"ts":1377627490000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"pah","msgtype":"m.text"},"ts":1377627500000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1377627502000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"shakes fist at QA ;-)","msgtype":"m.emote"},"ts":1377627517000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"During dinner I decided on getNames() / getRawNames()","msgtype":"m.text"},"ts":1377628590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Rough overview of the entire thing is at https://etherpad.mozilla.org/zipurls","msgtype":"m.text"},"ts":1377628612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Will add it to Fetch in due course. Constructing Zip files isn't added yet. Starting conservatively.","msgtype":"m.text"},"ts":1377628652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: for zlib APIs... Any ideas as to how those should look?","msgtype":"m.text"},"ts":1377628692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: probably http://nodejs.org/api/zlib.html#zlib_convenience_methods but with ArrayBuffer instead of Node's custom Buffer and promises instead of callbacks. Streaming versions would be nice once we figure out streams.","msgtype":"m.text"},"ts":1377628849000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: so it seems kinda bad to expose the name zlib like that, given that it's a specific implementation","msgtype":"m.text"},"ts":1377629056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: but okay, deflate(any) -> promise makes sense","msgtype":"m.text"},"ts":1377629092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, it doesn't have to be `zlib.`. Ideally it would be `import { unzip, deflate } from \"@web/compress\"` or similar.","msgtype":"m.text"},"ts":1377629112000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It'll be interesting to see when the module thing happens...","msgtype":"m.text"},"ts":1377629186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sigh, yes.","msgtype":"m.text"},"ts":1377629253000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"is there a webkit or blink browser that supports switching style sheet sets?","msgtype":"m.text"},"ts":1377633088000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"using ui?","msgtype":"m.text"},"ts":1377633110000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377633120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not to my knowledge :-(","msgtype":"m.text"},"ts":1377633125000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it seems webkit/blink don't support switching with JS either, unless i'm missing something","msgtype":"m.text"},"ts":1377633300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i thought there was some api","msgtype":"m.text"},"ts":1377633368000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that webkit implemented","msgtype":"m.text"},"ts":1377633371000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"as hyatt","msgtype":"m.text"},"ts":1377633377000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"er, ask hyatt, rather","msgtype":"m.text"},"ts":1377633381000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hmm, i see selectedStylesheetSet but the spec has selectedStyleSheetSet. and setting it doesn't switch stylesheets","msgtype":"m.text"},"ts":1377633867000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i think the name may have been changed in the spec to avoid clashing when the semantics were changed?","msgtype":"m.text"},"ts":1377633987000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1377634347000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that's when Hixie_ changed the semantics, not I","msgtype":"m.text"},"ts":1377634653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that API is kinda hopeless, nobody is really interested","msgtype":"m.text"},"ts":1377634670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: #110 may be on interest. Gets the tokenizer working roughly as a treewalker","msgtype":"m.text"},"ts":1377634689000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, alternative style sheets in general have rather failed","msgtype":"m.text"},"ts":1377634689000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"maybe we should drop it","msgtype":"m.text"},"ts":1377634699000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"as much as it would pain me to agree, yeah","msgtype":"m.text"},"ts":1377634712000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"There's a lot of potential simplicity gain there","msgtype":"m.text"},"ts":1377634716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377634730000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should see if mozilla would drop it","msgtype":"m.text"},"ts":1377634736000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i think it's very sad that we'd remove it, but it is a lot of complexity for something that virtually nobody uses","msgtype":"m.text"},"ts":1377634757000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"We accept bug reports / patches :)","msgtype":"m.text"},"ts":1377634761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Nothing's been done about getting tests running yet, though","msgtype":"m.text"},"ts":1377634784000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: i don't believe in pushing my agenda in bug reports and even less in patches","msgtype":"m.text"},"ts":1377634790000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"More visible than G+ :p","msgtype":"m.text"},"ts":1377634859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"visible how?","msgtype":"m.text"},"ts":1377634897000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i have like 10,000 people following me on g+ :-P","msgtype":"m.text"},"ts":1377634922000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I do file bug reports, mostly to get a sense of what people think about a particular issue... Why don't you believe in them?","msgtype":"m.text"},"ts":1377635029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't want to make people do things without them thinking they're a good idea, and i'm worried that if i file a bug saying \"do X\", some browser vendors will do it without thinking about whether i'm wrong or not","msgtype":"m.text"},"ts":1377635580000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i figure if i'm right, someone else will agree enough to file a bug","msgtype":"m.text"},"ts":1377635608000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and if nobody can be bothered, i'm probably not right","msgtype":"m.text"},"ts":1377635617000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"DODo","msgtype":"m.text"},"ts":1377635657000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1377635663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Bad connection","msgtype":"m.text"},"ts":1377635667000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you using irssi?","msgtype":"m.text"},"ts":1377635680000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"File a bug saying \"do X iff bz think's it's a good idea\"","msgtype":"m.text"},"ts":1377635685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1377635687000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can you understand wtf is up with irssi acting weird when the connection is bad?","msgtype":"m.text"},"ts":1377635706000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't understand how it's possible","msgtype":"m.text"},"ts":1377635709000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ssh runs over tcp","msgtype":"m.text"},"ts":1377635715000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"surely that means that there should be no way to tell when the connection is bad","msgtype":"m.text"},"ts":1377635727000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well I think what just happened wasn't an irssi problem, more that I thought the connection was dead and tried to escape ssh, but irssi eventually sent some of the characters","msgtype":"m.text"},"ts":1377635800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1377635847000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i find that when i get a lot of packet loss, i start seeing ansi sequences in my irssi input","msgtype":"m.text"},"ts":1377635860000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"from pressing arrow keys, etc","msgtype":"m.text"},"ts":1377635869000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and i have zero understanding of how that is possible","msgtype":"m.text"},"ts":1377635878000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(running ssh in a mac Terminal, to a machine running screen with irssi in a buffer)","msgtype":"m.text"},"ts":1377635905000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Anyone here understand regexp engines here?","msgtype":"m.text"},"ts":1377636243000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/here\\?/?/","msgtype":"m.text"},"ts":1377636254000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You","msgtype":"m.text"},"ts":1377636286000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: Just ask your question :p","msgtype":"m.text"},"ts":1377636349000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Given a string like \"aaabaaabaaad\" and a regexp like /a+ba+d/, if you match that as a DFA you get to the second \"b\" in the input string before you reject the string from the DFA. How do you know where in the input string to start matching again? Can you avoid doing the naïve one starting offset at a time?","msgtype":"m.text"},"ts":1377636530000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://swtch.com/~rsc/regexp/regexp3.html deals with this, actually","msgtype":"m.text"},"ts":1377637382000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"how am i supposed to know from script when the html parser has finished parsing an element? o_O","msgtype":"m.text"},"ts":1377638079000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: is there a reason not to write some trivial display rules for TextTrackCue and give it a plain-text constructor?","msgtype":"m.text"},"ts":1377638881000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"I mostly say this because I don't approve of all the positional stuff in WebVTT","msgtype":"m.text"},"ts":1377638898000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"rillian: why wouldn't we just fix webvtt instead?","msgtype":"m.text"},"ts":1377638962000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"When I have <pre><img></pre>, is the alt=\"\" subject to pre?","msgtype":"m.text"},"ts":1377639617000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"Hixie_: didn't you resign as editor because no one wanted to fix WebVTT?","msgtype":"m.text"},"ts":1377639851000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"no, i handed WebVTT to Silvia because I was trying to offload work and she volunteered","msgtype":"m.text"},"ts":1377639873000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(that, and implementors didn't want to do what i wanted)","msgtype":"m.text"},"ts":1377639885000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1377639891000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"jannis_: yes","msgtype":"m.text"},"ts":1377639908000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I did like your idea to standardizing a file format for the legacy CC streams","msgtype":"m.text"},"ts":1377639916000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"that seemed the only way to meet implementor concerns without adding all these features to webvtt","msgtype":"m.text"},"ts":1377639940000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Hixie_: thx","msgtype":"m.text"},"ts":1377639963000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"but there is no way (and no way intended) to use html elements in the img’s alternate content, is it?","msgtype":"m.text"},"ts":1377640089000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"jannis_: yeah, just use <object> instead of <img>","msgtype":"m.text"},"ts":1377640494000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"script preloading proposal on the list","msgtype":"m.text"},"ts":1377640527000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh, does that work?","msgtype":"m.text"},"ts":1377640529000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"jannis_: should do","msgtype":"m.text"},"ts":1377640534000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"great :)","msgtype":"m.text"},"ts":1377640539000,"senderName":"jannis_","senderId":"jannis_@irc"},
{"content":{"body":"Hixie_: How do you match the urls in your needs='' attribute?  Split on spaces, fully resolve, then compare url-wise?","msgtype":"m.text"},"ts":1377642245000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, I see, yes, that's exactly it.","msgtype":"m.text"},"ts":1377642277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah","msgtype":"m.text"},"ts":1377643154000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i realised after posting that i should also fire an event if the script doesn't run","msgtype":"m.text"},"ts":1377643166000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan, I think 'double screenX = 0;' is not bogus, due to the \"The type of an integer token is the same as the type of the constant, dictionary member or optional argument it is being used as the value of.\" sentence","msgtype":"m.text"},"ts":1377643763000,"senderName":"heycam","senderId":"heycam@irc"}
]