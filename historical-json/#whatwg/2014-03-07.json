[
{"content":{"body":"Hixie: ping","msgtype":"m.text"},"ts":1394154141000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Ms2ger: ?","msgtype":"m.text"},"ts":1394184896000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1394184905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: can you please have a look at https://bugzilla.mozilla.org/show_bug.cgi?id=980825 and confirm it?","msgtype":"m.text"},"ts":1394185083000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"lol ok. an external stylesheet (static) blocks future script tags. if you docwrite the stylesheet, it blocks future static script tags, but not the executing script thread. it also doesn't block future docwritten script tags. wut?","msgtype":"m.text"},"ts":1394190937000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"i'm tumbling down a rabbot hole, aren't i","msgtype":"m.text"},"ts":1394190950000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"are there any other elements besides external script tags and external stylesheets that might block the parser, the script thread, or even just the rendering thread?","msgtype":"m.text"},"ts":1394191062000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"qFox: http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#interactions-of-styling-and-scripting","msgtype":"m.text"},"ts":1394191075000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok so inline style with external refs will probably exhibit the same behavior. but i've read that for example @font-face won't block","msgtype":"m.text"},"ts":1394191211000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"wont block script thread, only the rendering thread","msgtype":"m.text"},"ts":1394191223000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"jgraham: so do you know of any other elements that might block any of the threads?","msgtype":"m.text"},"ts":1394191358000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"apart from style, script, and link?","msgtype":"m.text"},"ts":1394191365000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"I think parsing can only be blocked on style or on script. Although I don't know if the HTML Imports people are going to change that","msgtype":"m.text"},"ts":1394191521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Mind you I think they were using <link>","msgtype":"m.text"},"ts":1394191536000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"docwrite+link can block in the weird way described above. i havent checked @import yet but it should be the same (whether external or inline)","msgtype":"m.text"},"ts":1394191578000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"I think the spec about exactly when CSS blocks is wrong","msgtype":"m.text"},"ts":1394191637000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or was wrong","msgtype":"m.text"},"ts":1394191640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Now I think it might let CSS define it and CSS might not bother","msgtype":"m.text"},"ts":1394191653000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"without docwrite, it behaves as advertised afaics.","msgtype":"m.text"},"ts":1394191677000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"hm what about app cache manifest","msgtype":"m.text"},"ts":1394191754000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html#concept-appcache-init - that happens in the background","msgtype":"m.text"},"ts":1394191970000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i was reading that, but 6.7.4 1.4 is confusing to me","msgtype":"m.text"},"ts":1394192019000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"namely the synchronous flag. but perhaps that means something else than important in this context","msgtype":"m.text"},"ts":1394192055000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"It means that it's synchronous with respect to that algorithm. But that algorithm is already asynchronous with respect to everything else","msgtype":"m.text"},"ts":1394192351000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah ok","msgtype":"m.text"},"ts":1394192363000,"senderName":"qFox","senderId":"qFox@irc"},
{"content":{"body":"I thik","msgtype":"m.text"},"ts":1394192388000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*think","msgtype":"m.text"},"ts":1394192391000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't think CSS can block parsing","msgtype":"m.text"},"ts":1394200770000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"they only block rendering (although I'm not sure if that's specced or just what browsers do)","msgtype":"m.text"},"ts":1394200815000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"is it observable to script?","msgtype":"m.text"},"ts":1394200863000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Non async scripts block parsing until they execute, but script executing is blocked on previous CSS executing","msgtype":"m.text"},"ts":1394200890000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"HTML Imports are set to behave the same as CSS :((","msgtype":"m.text"},"ts":1394200903000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(blocking rendering, that is)","msgtype":"m.text"},"ts":1394200905000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: An async script may see elements with default stying","msgtype":"m.text"},"ts":1394200953000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if it asks for computed styles","msgtype":"m.text"},"ts":1394200959000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hmm, a script can be blocked on a stylesheet","msgtype":"m.text"},"ts":1394201004000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A script can also block the parser","msgtype":"m.text"},"ts":1394201011000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeh","msgtype":"m.text"},"ts":1394201018000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So unless I am missing something a stylesheet can block the parser","msgtype":"m.text"},"ts":1394201029000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The problem with HTML imports is the .import property is a sync getter","msgtype":"m.text"},"ts":1394201031000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: Well, technically that's the script blocking, but the script is blocked on the CSS. CSS cannot block the parser without the script","msgtype":"m.text"},"ts":1394201060000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"OK, I guess you could look at it like that","msgtype":"m.text"},"ts":1394201088000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":".import should return a promise imo","msgtype":"m.text"},"ts":1394201130000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: something wrong with w3 bugzilla?","msgtype":"m.text"},"ts":1394202885000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"super slow","msgtype":"m.text"},"ts":1394202888000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"high packet loss on the network coming into MIT","msgtype":"m.text"},"ts":1394205646000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"apparently","msgtype":"m.text"},"ts":1394205662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: ping","msgtype":"m.text"},"ts":1394212742000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"hmm, the WHATWG wiki seems to have some gadgets cloned from Wikipedia without changing the local links in descriptions to interwikis :-(","msgtype":"m.text"},"ts":1394213130000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"JakeA: Report that?","msgtype":"m.text"},"ts":1394213300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bholley: sup","msgtype":"m.text"},"ts":1394215287000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: where does the spec forbid cross-origin event dispatch?","msgtype":"m.text"},"ts":1394215319000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie: only implicitly via .dispatchEvent not being reachable on anything cross-origin?","msgtype":"m.text"},"ts":1394215354000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"which spec?","msgtype":"m.text"},"ts":1394215360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think html says anything about that one way or the other.","msgtype":"m.text"},"ts":1394215371000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd be surprised if DOM said anything either","msgtype":"m.text"},"ts":1394215392000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: well, it _does_ imply that it needs to be the case in 9.4.2.2","msgtype":"m.text"},"ts":1394215425000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#user-agents","msgtype":"m.text"},"ts":1394215435000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yeah that's just referring to the fact that you can't call dispatchEvent() on a cross-origin object","msgtype":"m.text"},"ts":1394215484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, the really truly original version of the current WHATWG logo should be in somethign with \"Message-ID: <410D2802.2010006⊙en>\". strangely, gmane seems to recognize the ID well enough to know what group it would be in, but not what article???","msgtype":"m.text"},"ts":1394216922000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: Yeah it's really odd how that article has vanished from all the archives i've tried it in","msgtype":"m.text"},"ts":1394218492000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's almost like someone sent a DMCA notice or something ...","msgtype":"m.text"},"ts":1394218523000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"pretty sure a dmca notice couldn't reach into my personal mail archive backups","msgtype":"m.text"},"ts":1394218546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have the mail that's my reply, In-Reply-To: <410D2802.2010006⊙en>, which starts \"The second one, the question-mark-in-circle, is pretty good\", in my archive","msgtype":"m.text"},"ts":1394218573000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh no, wait, i do have that one","msgtype":"m.text"},"ts":1394218586000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't have the license though","msgtype":"m.text"},"ts":1394218593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just says \"Would one of the attached logos be appropriate?\" and has some attachments","msgtype":"m.text"},"ts":1394218609000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://damowmow.com/temp/410D2802.2010006⊙en","msgtype":"m.text"},"ts":1394218667000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the e-mail where he gives the license terms i can't find","msgtype":"m.text"},"ts":1394218682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i know what the e-mail says (essentially, whatwg can use it for logo purposes), but can't find it anywhere","msgtype":"m.text"},"ts":1394218697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think someone posted a link to it in #whatwg within the last year, though","msgtype":"m.text"},"ts":1394218715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"woahhhh did not know http://blogs.msdn.com/b/ieinternals/archive/2014/03/06/browser-arcana-ipv4-ipv6-literal-urls-dotted-va-dotless.aspx","msgtype":"m.text"},"ts":1394220203000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: Holy shit, that's a terrible idea.","msgtype":"m.text"},"ts":1394221561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Especially the octal form, wtf.","msgtype":"m.text"},"ts":1394221568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Chrome and Opera appear to match Internet Explorer’s behavior here, while Firefox 27 leaves the undotted decimal in the address bar and in the request sent to the network\"","msgtype":"m.text"},"ts":1394221729000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"seems like a job for the URL Standard...","msgtype":"m.text"},"ts":1394221734000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I have a question about read only nodes and the DOM (Level 3). Where can  find a list of which nodes are read-only in a DOM tree? So far i had found out that if a parent node is read only, then it's child nodes are also read only nodes.","msgtype":"m.text"},"ts":1394223215000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"Ignore DOM level 3","msgtype":"m.text"},"ts":1394223303000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, why?","msgtype":"m.text"},"ts":1394223316000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"It tricked you into believing that concept exists","msgtype":"m.text"},"ts":1394223319000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It doesn't","msgtype":"m.text"},"ts":1394223322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lars_t_h: you would be looking for http://dom.spec.whatwg.org/","msgtype":"m.text"},"ts":1394223387000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Ms2ger, ok thanks","msgtype":"m.text"},"ts":1394223400000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"Domenic_, I'm doing a DOM implementation in the Go programming language, should i use the DOM spec at whatwg.org (your link)?","msgtype":"m.text"},"ts":1394223475000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"lars_t_h: yes, definitely.","msgtype":"m.text"},"ts":1394223484000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, ok then next question is: What about the Web IDL error - thing. It is there the JavaScript Array should be defined instead.","msgtype":"m.text"},"ts":1394223594000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"lars_t_h: I don't understand \"the Web IDL error - thing.\"","msgtype":"m.text"},"ts":1394223746000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, finding a link","msgtype":"m.text"},"ts":1394223776000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"Domenic_, got it: http://dom.spec.whatwg.org/#elements","msgtype":"m.text"},"ts":1394223863000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"ok, so what's the question about Elements.","msgtype":"m.text"},"ts":1394223897000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, i have to copy ES6 method defenitions of the Array into Elements? Yes?","msgtype":"m.text"},"ts":1394223974000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"*s/the Array/Array","msgtype":"m.text"},"ts":1394224011000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"lars_t_h: I'm not really sure what your goal would be with a Go implementation, but in JS it just means subclassing Array. Maybe in Go you would subclass Go arrays? If they are subclassable?","msgtype":"m.text"},"ts":1394224027000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"lars_t_h: Elements inherits from Array, and so automatically gets most of the methods correct.","msgtype":"m.text"},"ts":1394224040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_, they are called slices and is a part of the language spec, so No, but it can be implemented in a struct type.","msgtype":"m.text"},"ts":1394224129000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"TabAtkins, , Domenic_ Thanks. I think all the information i nedd to contine. I will implement the DOM spec at dom.spec.whatwg.org in Go.","msgtype":"m.text"},"ts":1394224331000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"*I think I have ...","msgtype":"m.text"},"ts":1394224348000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"that ought to be interesting, since Go has no inheritance and the DOM is largely based on inheritance :-)","msgtype":"m.text"},"ts":1394224399000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, hint: Heavy usage of interfaces in the Go implementation. I have pointer to a type TNode, which implements most of the DOM methods. The interface types defines which DOM methods that are visible to client code using the DOM implementation.","msgtype":"m.text"},"ts":1394224564000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"Servo currently implements the DOM without inheritane","msgtype":"m.text"},"ts":1394224603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although rust will probably grow single inheritane to make this less insane","msgtype":"m.text"},"ts":1394224622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's... painful, though","msgtype":"m.text"},"ts":1394224655000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lars_t_h: good luck","msgtype":"m.text"},"ts":1394224708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"From https://news.ycombinator.com/item?id=7248742","msgtype":"m.text"},"ts":1394224718000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"\"Having to rely on the DOM to do that is a horrible hack.\"","msgtype":"m.text"},"ts":1394224727000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"the lack of true classes in Go are one of the big things that have led me away from it, i must admit","msgtype":"m.text"},"ts":1394224736000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, thanks","msgtype":"m.text"},"ts":1394224776000,"senderName":"lars_t_h","senderId":"lars_t_h@irc"},
{"content":{"body":"I haven't used Go. But my very limited experience with Rust is that it's fine as long as you aren't trying to implement a system that is explicitly designed around Java-style classes","msgtype":"m.text"},"ts":1394224903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: there's a lot of classes of problems that i find fit very neatly into a type hierarchy","msgtype":"m.text"},"ts":1394225113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It doesn't mean that's the only or even best way to solve them though","msgtype":"m.text"},"ts":1394225174000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(though i certainly miss composition in languages that don't have it, too)","msgtype":"m.text"},"ts":1394225174000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure. lots of ways to crack a nut.","msgtype":"m.text"},"ts":1394225190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"that's the single most important thing to have in any language,how to properly import external files.\"","msgtype":"m.text"},"ts":1394225194000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"but sometimes you have a nail, and you bemoan your toolbox's opinion that hammers aren't the only way to drive nails.","msgtype":"m.text"},"ts":1394225222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, sure, a big spanner works ok... maybe a rock... i guess you could use the side of the power drill... :-P","msgtype":"m.text"},"ts":1394225256000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And sometimes you have so many tools in the toolbox that every time you try to reach for one of them, you cut your hand on one of the other tools that got in the way (*cough* C++ *cough*)","msgtype":"m.text"},"ts":1394225416000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1394225463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://ian.hixie.ch/programming/","msgtype":"m.text"},"ts":1394225485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's an eerily accurate description of my actual toolbox at home","msgtype":"m.text"},"ts":1394225523000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"my actual toolbox at home oddly has almost nothing in it that can actually cut anything","msgtype":"m.text"},"ts":1394225546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure what to read into that","msgtype":"m.text"},"ts":1394225550000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lots of screwdrivers, spanners, drills, and so on... no saws, knives, etc","msgtype":"m.text"},"ts":1394225567000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is orientated a word?","msgtype":"m.text"},"ts":1394225590000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: what languages don't have composition? do you mean something strange by the term?","msgtype":"m.text"},"ts":1394225592000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I've cut myself on screwdrivers and drill bits, but perhaps I'm just talented","msgtype":"m.text"},"ts":1394225604000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"SamB: most popular languages don't have it. I mean the ability to say \"this object has these interfaces, and they are implemented by that, that, and that\" rather than \"this object has this interface, here is its implementation\"","msgtype":"m.text"},"ts":1394225656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"orientated is not (afaict) a proper word; it is the kind of word I use if I want to sound silly","msgtype":"m.text"},"ts":1394225677000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: (go does have it, javascript also to some extent though it's pretty verbose to use since you have to import each method individually)","msgtype":"m.text"},"ts":1394225684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ah","msgtype":"m.text"},"ts":1394225691000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(though go's implementation is a bit weird)","msgtype":"m.text"},"ts":1394225701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so some kind of delegation of interfaces?","msgtype":"m.text"},"ts":1394225701000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah basically","msgtype":"m.text"},"ts":1394225705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bonus points if it's dynamic","msgtype":"m.text"},"ts":1394225718000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Do you mean something like typeclasses?","msgtype":"m.text"},"ts":1394225722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the closest thing in the realm of typeclasses is that \"newtyped deriving\" thing, I think","msgtype":"m.text"},"ts":1394225756000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"like, i have this object, now i want to graft on this new ability. e.g. you made a rocket, and you want to graft on weapons. suddenly it should start being true for \"isa\" weapon-capable-object, and should know how to .fireWeapons() or whatever.","msgtype":"m.text"},"ts":1394225789000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in languages like C++ you tend to do this with \"tearoffs\", if I'm not mixing my terminology fatally.","msgtype":"m.text"},"ts":1394225855000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by which i mean your object has a method that takes a subinterface ID, and returns a different object that implements that interface for the object","msgtype":"m.text"},"ts":1394225890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it'd be nice to have built-in language support for this rather than having to fake it all the time, since faking it is quite error-prone","msgtype":"m.text"},"ts":1394225926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what you just described is COM","msgtype":"m.text"},"ts":1394225945000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Go does this ok for static combinations","msgtype":"m.text"},"ts":1394225946000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(specifically the QueryInterface aspect thereof)","msgtype":"m.text"},"ts":1394225957000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, COM is basically what i'm describing, though not native to the language","msgtype":"m.text"},"ts":1394225958000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one problem with approaches like COM is that really you don't have one object, you have a whole series of objects that as a team act as one","msgtype":"m.text"},"ts":1394226041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so things like comparing pointers get really messy","msgtype":"m.text"},"ts":1394226054000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"forwarding kind of defeats the point of composition IMO","msgtype":"m.text"},"ts":1394226085000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you want to fully re-export the interface, just export access to the sub-object","msgtype":"m.text"},"ts":1394226101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1394226122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"saying train.engine.accelerate() instead of train.accelerate() is not the worst","msgtype":"m.text"},"ts":1394226126000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if it composes that way, yeah","msgtype":"m.text"},"ts":1394226138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that is super easy to do in most dynamic languages","msgtype":"m.text"},"ts":1394226167000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even most non-dynamic ones","msgtype":"m.text"},"ts":1394226177000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's also the only sane way to have a has-a relationship to more than one of the same kind of thing","msgtype":"m.text"},"ts":1394226181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"one time i run into this is when I have a class A with methods M1 and M2 from which I want to have three descendants: an A with M1 replaced with M1', A with M2 replaced with M2', and A with M1 and M2 replaced with M1' and M2'.","msgtype":"m.text"},"ts":1394226242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that doesn't sound like all one class to me","msgtype":"m.text"},"ts":1394226292000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a specific case of this:","msgtype":"m.text"},"ts":1394226326000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sounds like a base class with three subclasses","msgtype":"m.text"},"ts":1394226358000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TLocation is a room in a MUD. It inherits from all the core stuff and has dozens of methods. TNamedLocation is a TLocation that implements the half-dozen name-related methods to return fixed strings set during construction. TSlaveLocation is a TLocation that implements those methods by deferring to another object also set during constructions.","msgtype":"m.text"},"ts":1394226414000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TSurfaceNamedLocation is a TNamedLocation that has a surface (like the ground), by default it doesn't have one. It overrides the surface-related methods to return the right surface object.","msgtype":"m.text"},"ts":1394226463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TSurfaceSlavedLocation is the same but inherits from TSlavedLocation.","msgtype":"m.text"},"ts":1394226473000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the last two duplicate code.","msgtype":"m.text"},"ts":1394226482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"name and surface sound like things that could be has-a relationships instead of is-a","msgtype":"m.text"},"ts":1394226505000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"location.name, possibly null could have the name stuff","msgtype":"m.text"},"ts":1394226516000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"location.surface could handle the surface parts","msgtype":"m.text"},"ts":1394226527000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, they are. but there's code in the main class to instantiate the right child object.","msgtype":"m.text"},"ts":1394226529000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the last two in my specific case are implemented as a macro that i instantiate with the right superclasses twice: http://software.hixie.ch/fun/cuddlyworld/src/surfacelocations.inc )","msgtype":"m.text"},"ts":1394226545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in languages that can do multiple inheritance you could alternately multiple-inerit (but dealing with inheritance diamonds is no fun)","msgtype":"m.text"},"ts":1394226583000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the constructor for TNamedLocation takes (Name, DefiniteName, IndefiniteName, Description), the constructor for TSlavedLocation takes (Master, Position), the constructor for TSurfaceNamedLocation takes (Name, DefiniteName, IndefiniteName, Description, Ground), and the constructor for TSurfaceSlavedLocation take (Master, Position, Ground)","msgtype":"m.text"},"ts":1394226613000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the only behavior difference for the Named and Surface subclasses is at construction time, maybe you just need a constructor with lots of optional parameters that can instantiate the sub-objects","msgtype":"m.text"},"ts":1394226616000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"like a dictionary parameter to the constructor","msgtype":"m.text"},"ts":1394226647000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's several constructors. One with the argumes, another that knows how to read the data from a file, etc.","msgtype":"m.text"},"ts":1394226649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem is that this doesn't scale, whether to a flexible one-class constructor or to multiple classes with narrow constructors.","msgtype":"m.text"},"ts":1394226683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what i really want to do is just have the language let me say \"there's these various combinations of these methods, make it work\"","msgtype":"m.text"},"ts":1394226705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1394226713000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Anything with multiple inheritance allows that.","msgtype":"m.text"},"ts":1394226913000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CLOS is an example.","msgtype":"m.text"},"ts":1394226920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, but on the other hand you have to use multiple inheritance","msgtype":"m.text"},"ts":1394226941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"...and?","msgtype":"m.text"},"ts":1394226947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's no fun","msgtype":"m.text"},"ts":1394226955000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Multiple inheritance is just single inheritance with the possibility of name conflicts.","msgtype":"m.text"},"ts":1394226964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And with a much harder job to track down what methods a class implements and where they come from","msgtype":"m.text"},"ts":1394226988000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"multiple inheritance doesn't work for the case i described unless you do diamond inheritance, and then you introduce all kinds of crazy edge cases and dubious semantics.","msgtype":"m.text"},"ts":1394227136000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dylan handled diamond inheritance rather well IIRC","msgtype":"m.text"},"ts":1394227174000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Who's Dylan?","msgtype":"m.text"},"ts":1394227215000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Famous singler","msgtype":"m.text"},"ts":1394227227000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*singer","msgtype":"m.text"},"ts":1394227232000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: Yes, I thought diamond inheritance was implied by \"multiple inheritance\".","msgtype":"m.text"},"ts":1394227795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anything else is too weak.","msgtype":"m.text"},"ts":1394227799000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hey, did anyone pick up the work on Undo history yet?","msgtype":"m.text"},"ts":1394228929000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"paxcoder: No","msgtype":"m.text"},"ts":1394229208000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, ah too bad, thanks.","msgtype":"m.text"},"ts":1394229295000,"senderName":"paxcoder","senderId":"paxcoder@irc"},
{"content":{"body":"jgraham, does anyone know what the requirements and the goals of the API are?","msgtype":"m.text"},"ts":1394230275000,"senderName":"paxcoder","senderId":"paxcoder@irc"}
]