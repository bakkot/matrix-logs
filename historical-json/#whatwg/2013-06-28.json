[
{"content":{"body":"TabAtkins, thanks, fixed the broken links","msgtype":"m.text"},"ts":1372378538000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan: No, that example shouldn't be valid.  That falls into the \"we know declaratively that it'll stamp something out there\" case.","msgtype":"m.text"},"ts":1372378723000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think in those cases, the content model should just be strictly transparent?","msgtype":"m.text"},"ts":1372378761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://slashdot.org/comments.pl?sid=3912831&threshold=-1&commentsort=0&mode=nested&pid=44127847 — dbaron's desk isn't a good response to that, is it? :P","msgtype":"m.text"},"ts":1372402291000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm, the only case-sensitive css properties are variables, right?","msgtype":"m.text"},"ts":1372407248000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and they are exposed in a separate interface, so i can pretend that all properties are insensitive","msgtype":"m.text"},"ts":1372407276000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yes","msgtype":"m.text"},"ts":1372407491000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1372407502000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if we add anything case-sensitive in the future, it will be because it’s author-defined and thus probably in a separate interface like variables","msgtype":"m.text"},"ts":1372407553000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"are properties normalized to lowercase somewhere?","msgtype":"m.text"},"ts":1372407633000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"waves hands","msgtype":"m.emote"},"ts":1372407688000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders if Ms2ger is waving his own hands, or somebody else's hands","msgtype":"m.emote"},"ts":1372407980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, yours","msgtype":"m.text"},"ts":1372407991000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"damn that's where they went","msgtype":"m.text"},"ts":1372408047000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"FWIW, I started patching https://github.com/annevk/url again","msgtype":"m.text"},"ts":1372412039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hope to get a bit further this time around and work on the test suite through my own JavaScript implementation of the specification. I realize that makes me the single point of failure for three pieces that really ought to be done by separate people, but nobody else seems to care about fixing URLs... Which is surprising in my mind, but I'm sure there's a reasonable explanation.","msgtype":"m.text"},"ts":1372412138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The other goal, as mentioned already, is to make parsing idempotent. That we lost that property is bad and we should claim it back.","msgtype":"m.text"},"ts":1372412206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk++","msgtype":"m.text"},"ts":1372419336000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan: implementations probably normalize to lower-case at some point, but not sure what you mean","msgtype":"m.text"},"ts":1372420264000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: i mean in the specs, if i can assume that they are lowercase for the purpose of CSSOM","msgtype":"m.text"},"ts":1372420306000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I seem to recall \"If there is a property that is a ASCII case-insensitive match for the parameter, …\" text in CSSOM","msgtype":"m.text"},"ts":1372420366000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah, i've just changed it to fold to lowercase and do a case-sensitive compare. i added \"A supported CSS property must be in its lowercase form for the purpose of comparisons this specification.\"","msgtype":"m.text"},"ts":1372420489000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"seems like a saner model to store them in lowercase","msgtype":"m.text"},"ts":1372420535000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Or as an enum","msgtype":"m.text"},"ts":1372420578000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"implementation can do string interning or something, the spec shouldn’t have to be aware of that","msgtype":"m.text"},"ts":1372420611000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"sure, i mean model for the spec","msgtype":"m.text"},"ts":1372420630000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"either the spec preserves case in its \"declarations\" and does case-insensitive compares last minute, or it folds stuff to lowercase at the start and does case-sensitive comparisons","msgtype":"m.text"},"ts":1372420684000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i prefer the latter","msgtype":"m.text"},"ts":1372420688000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"you still need to fold parameters to the various methods","msgtype":"m.text"},"ts":1372420715000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1372420723000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what does the html5lib serializer do with attribute order?","msgtype":"m.text"},"ts":1372428373000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I’m getting a huge diff in the generated version of css-syntax because I get a different attribute order than TabAtkins","msgtype":"m.text"},"ts":1372428436000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"i think that might have changed relatively recently in html5lib","msgtype":"m.text"},"ts":1372429489000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so make sure you have the same version, i guess","msgtype":"m.text"},"ts":1372429508000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I hope it’s deterministic, within a html5lib version","msgtype":"m.text"},"ts":1372429539000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"probably is","msgtype":"m.text"},"ts":1372429565000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though i haven't looked at the code, but i've never noticed them changing for me :-)","msgtype":"m.text"},"ts":1372429591000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: are you using 1.0b2 for what’s is the CSSWG repo?","msgtype":"m.text"},"ts":1372429602000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Attribute order in html5lib is a recent issue that we had with anolis. Basically, if the tree builder doesn't maintain attribute order, it's non-deterministic. (gsnedders could probably explain more.)","msgtype":"m.text"},"ts":1372430933000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Tab’s processor is using lxml I think","msgtype":"m.text"},"ts":1372431009000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"couldn’t we sort on output?","msgtype":"m.text"},"ts":1372431034000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1372431572000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"SimonSapin: It's whatever order the tree API stores it in, basically. Which in lxml's case is explicitly undefined.","msgtype":"m.text"},"ts":1372431749000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: So there's no guarantee of stability.","msgtype":"m.text"},"ts":1372431765000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that sucks","msgtype":"m.text"},"ts":1372431810000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: There's a alphabetical_attributes=True|False option on the serializer which will reorder all attributes into alphabetical order","msgtype":"m.text"},"ts":1372431812000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah, I guess that’s what I want","msgtype":"m.text"},"ts":1372431829000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"what does anolis do?","msgtype":"m.text"},"ts":1372431836000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: We can't blindingly reorder it, otherwise people who want things to roundtrip without changing order, using a tree API that preserves order, are screwed over by us reordering it.","msgtype":"m.text"},"ts":1372431854000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, I understand why it’s not the default","msgtype":"m.text"},"ts":1372431874000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Blame fantasai for screaming at me to change it for years. :P","msgtype":"m.text"},"ts":1372431899000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But yeah, we're now as deterministic as the underlying storage. Which makes sense, really.","msgtype":"m.text"},"ts":1372431943000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so what tree builders preserve the order?","msgtype":"m.text"},"ts":1372432090000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"lxml does currently, although it's explicitly defined as being undefined.","msgtype":"m.text"},"ts":1372432123000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ew","msgtype":"m.text"},"ts":1372432142000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Blame fantasai.","msgtype":"m.text"},"ts":1372432154000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Her fault.","msgtype":"m.text"},"ts":1372432158000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"for lxml?","msgtype":"m.text"},"ts":1372432160000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"No, for wanting the behaviour in html5lib despite the underlying behaviour being undefined","msgtype":"m.text"},"ts":1372432185000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the alternative being always sorting?","msgtype":"m.text"},"ts":1372432203000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Ja.","msgtype":"m.text"},"ts":1372432209000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372432215000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"This is what we previously did","msgtype":"m.text"},"ts":1372432227000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if the option to sort is still there, that’s fine","msgtype":"m.text"},"ts":1372432231000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I’m ranting at lxml","msgtype":"m.text"},"ts":1372432238000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I think the problem for Stefan is that libxml2 has it as undefined, so he can't guarantee anything that doesn't.","msgtype":"m.text"},"ts":1372432266000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so I’m ranting at libxml2","msgtype":"m.text"},"ts":1372432284000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Eventually we'll find out where you're really ranting :P","msgtype":"m.text"},"ts":1372432315000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1372432322000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wants a useful tree api in python at some point","msgtype":"m.emote"},"ts":1372432434000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: define useful","msgtype":"m.text"},"ts":1372432452000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"One that preserves order for attributes and doesn't do .tail, say","msgtype":"m.text"},"ts":1372432502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I’m considering making a new tree api for cssselect (or its successor)","msgtype":"m.text"},"ts":1372432512000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"so text nodes instead?","msgtype":"m.text"},"ts":1372432522000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1372432532000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1372432537000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Say you have <a>x<b>y</b>z</a>","msgtype":"m.text"},"ts":1372432562000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"How do you remove the b element?","msgtype":"m.text"},"ts":1372432570000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you have to append b.tail to a.text, which is annoying","msgtype":"m.text"},"ts":1372432599000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1372432636000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And how do you do it if a.text is None?","msgtype":"m.text"},"ts":1372432645000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"more annoyance","msgtype":"m.text"},"ts":1372432660000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"although (a.text or '') is not so bad","msgtype":"m.text"},"ts":1372432688000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: No, I'm using 0.95, because that's what version it was on when I last pulled.","msgtype":"m.text"},"ts":1372437649000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: I'm fine with doing alphabetical_attributes if that's supported on my version, too.","msgtype":"m.text"},"ts":1372437719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Also, I'd appreciate a new tree API that doesn't require me to fuck around with .tail.","msgtype":"m.text"},"ts":1372437795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I understand the reasons for lxml's design, but that doesn't make it any less annoying for editing HTML.","msgtype":"m.text"},"ts":1372437817000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: do you want to stay on 0.95? lxml’s undefined-but-happens-to-preserve-order with html5lib 1.0 is probably good enough","msgtype":"m.text"},"ts":1372438178000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Assuming that alphabetic_attributes works in .95, I don't see why we shouldn't just impose a deterministic ordering on attributes.","msgtype":"m.text"},"ts":1372438210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I only care about getting the same output on different systems with the same input","msgtype":"m.text"},"ts":1372438256000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1372438274000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why stay with 0.95, though ?","msgtype":"m.text"},"ts":1372438291000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Because that means I don't have to try and figure out why pip upgrade was failing?","msgtype":"m.text"},"ts":1372438315000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh :p","msgtype":"m.text"},"ts":1372438322000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: just use sudo it’ll be fine ;)","msgtype":"m.text"},"ts":1372438792000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"...yeah, that was probably my issue.","msgtype":"m.text"},"ts":1372438806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"actually","msgtype":"m.text"},"ts":1372438816000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"sudo pip uninstall stuff","msgtype":"m.text"},"ts":1372438821000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"then pip install --user","msgtype":"m.text"},"ts":1372438825000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"should be saner","msgtype":"m.text"},"ts":1372438842000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Cool, done.","msgtype":"m.text"},"ts":1372438905000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where did this get dropped into?","msgtype":"m.text"},"ts":1372438915000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"~/.local","msgtype":"m.text"},"ts":1372438974000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: ok. Pull css-syntax, regenerate and see if the output changes","msgtype":"m.text"},"ts":1372439088000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It did, yes.","msgtype":"m.text"},"ts":1372439124000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1372439141000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"All attribute order churn, yeah.","msgtype":"m.text"},"ts":1372439160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"on 1.0b2 ?","msgtype":"m.text"},"ts":1372439173000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"So, I'm not seeing an alphabetical option in htmlserializer","msgtype":"m.text"},"ts":1372439177000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1372439179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Do you see an alphabetic attribute option in html5lib?  Or is it supposed to be in lxml or something?","msgtype":"m.text"},"ts":1372442491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok all that remains is element definition prose, and examples","msgtype":"m.text"},"ts":1372445793000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I guess you noticed already it'll be commit 8000?","msgtype":"m.text"},"ts":1372447141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed","msgtype":"m.text"},"ts":1372447656000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: that's one reason i'm doing it as a big checkin :-)","msgtype":"m.text"},"ts":1372447665000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(lamest reason ever)","msgtype":"m.text"},"ts":1372447672000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(also, not the main reason)","msgtype":"m.text"},"ts":1372447675000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(but it did stop me from making a typo fix separately first)","msgtype":"m.text"},"ts":1372447687000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie, that is pretty lame. You're not a numerologist.","msgtype":"m.text"},"ts":1372448067000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"besides, base 10? I mean c'mon. ;)","msgtype":"m.text"},"ts":1372448083000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Back-compat forces us to use base 10.","msgtype":"m.text"},"ts":1372448344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyone know why The dizzie rascal set on the stage version is blanked, but the same set is on the BBC 3 stream?","msgtype":"m.text"},"ts":1372450525000,"senderName":"JimJibber","senderId":"JimJibber@irc"},
{"content":{"body":"TabAtkins: oh i have no superstitions, it's just to make it easier to remember which checkin was 8000 :-)","msgtype":"m.text"},"ts":1372452968000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hey does cloneNode() default to true or not?","msgtype":"m.text"},"ts":1372455683000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"spec says true, chrome seems to say false?","msgtype":"m.text"},"ts":1372455688000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#the-template-element","msgtype":"m.text"},"ts":1372456050000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: html5lib 1.0b2 has a alphabetical_attribute option on html5lib.serialize and html5lib.serializer.HTMLSerializer","msgtype":"m.text"},"ts":1372457886000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"rafaelw: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17930 http://html5.org/tools/web-apps-tracker?from=7999&to=8000","msgtype":"m.text"},"ts":1372459505000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Excellent. On my todo list to review.","msgtype":"m.text"},"ts":1372459607000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1372459608000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1372459620000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders: Ah, I'm looking at the google code repo, and it's not showing it.  I presume your repo is elsewhere now.","msgtype":"m.text"},"ts":1372460157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: As Google Code says on the home page, in massive letters, we have moved.","msgtype":"m.text"},"ts":1372460248000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If I were to click to the homepage, rather than reading the page I landed at which showed the exact class I was interested in, I'd have seen that.  ^_^","msgtype":"m.text"},"ts":1372460301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I should totally get around to booking hotel in SF. But that means decided when I'm going there (from San Jose). Decisions, man, decisions!","msgtype":"m.text"},"ts":1372460540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess it probably depends on who wants to meet up down around there.","msgtype":"m.text"},"ts":1372460599000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so the next thing to fix is the parser's assumption in the html section that we're not in a foreign section (or that if we are, that the tokens it's generating are going to match html nodes, not foreign ones)","msgtype":"m.text"},"ts":1372460602000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders: Anyway, thanks for adding the option.  Using it now.","msgtype":"m.text"},"ts":1372460839000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]