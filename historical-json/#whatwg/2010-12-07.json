[
{"content":{"body":"could some opera people comment on whether they're interested in having the spec spec http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-August/028107.html ?","msgtype":"m.text"},"ts":1291682640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"NGEN","msgtype":"m.text"},"ts":1291686660000,"senderName":"lhnz","senderId":"lhnz@irc"},
{"content":{"body":"OK. My ISSUE-27 CP is getting pretty close to where I wanted it to be.","msgtype":"m.text"},"ts":1291699440000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-27","msgtype":"m.text"},"ts":1291699500000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"any and all feedback welcome","msgtype":"m.text"},"ts":1291699501000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: that looks quite thorough","msgtype":"m.text"},"ts":1291702740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"morning","msgtype":"m.text"},"ts":1291710000000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"hm,  are there any conventions yet how to do pageviews over websockets?","msgtype":"m.text"},"ts":1291711320000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"like i do a xhr request now for /frontend/wiki/home/ , but i rather do this over a websocket, so i can keep track of where a user is on the site without much hazzle","msgtype":"m.text"},"ts":1291711380000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=10970 What happened to the claim that RDFa 1.1 is a superset of Microdata?","msgtype":"m.text"},"ts":1291714200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"didn't realise that RDFa was non-deterministic (that is: different consumers may produce different graphs)","msgtype":"m.emote"},"ts":1291714380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That seems bad","msgtype":"m.text"},"ts":1291714381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: I assume that the answer is that it's conceptually a superset i.e. any triple that you can produce with microdata you can also produce with RDFa, but it is not necessarily a superset at the markup level","msgtype":"m.text"},"ts":1291714440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or did they make the stronger claim at some point?","msgtype":"m.text"},"ts":1291714441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't know if someone meant to make a stronger claim at some point, but I certaintly thought someone made a stronger claim.","msgtype":"m.text"},"ts":1291714800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"RDFa is not a syntactic superset for trivial reasons (e.g. doesn't support itemscope)","msgtype":"m.text"},"ts":1291714920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't recall exactly what claims were made though","msgtype":"m.text"},"ts":1291714921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I like the title of http://www.adambarth.com/experimental/websocket.pdf","msgtype":"m.text"},"ts":1291715160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1291715161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the graphics are great as well","msgtype":"m.text"},"ts":1291715280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"figures","msgtype":"m.text"},"ts":1291715281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Firefox' encoding menu looks even worse than Opera's","msgtype":"m.text"},"ts":1291715340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm impressed","msgtype":"m.text"},"ts":1291715341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah, I didn't even look at the graphics before","msgtype":"m.text"},"ts":1291715342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Although admittedly it only goes wrong when you open the \"more encodings\" subdialog","msgtype":"m.text"},"ts":1291715400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am sad that the paper didn't do much to win people over to the true path of handshake righteousness","msgtype":"m.text"},"ts":1291715401000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Don't countries have legislation that bans tampering with communications in transit the way transparent proxies do?","msgtype":"m.text"},"ts":1291715460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"even though it shows a rather awful vulnerability","msgtype":"m.text"},"ts":1291715461000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: you mean, besides the countries running such proxies themselves?","msgtype":"m.text"},"ts":1291715462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"So bored with hybi...","msgtype":"m.text"},"ts":1291715463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: well, those  countries could have laws, too","msgtype":"m.text"},"ts":1291715464000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Would be nice if they settled on something already...","msgtype":"m.text"},"ts":1291715465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Same with the HTML test suite stuff by the way","msgtype":"m.text"},"ts":1291715520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: e.g. Finland has a law that authorizes the police to tamper with the DNS records of foreign sites, but they are known to tamper with the DNS record of at least one Finnish site, too.","msgtype":"m.text"},"ts":1291715521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I might try my own attempt at hacking the test framework to be more convenient for simple script tests","msgtype":"m.text"},"ts":1291715522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: some intercepting proxies are national firewalls but some are corporate firewalls, or set up on public wifi networks by the operators of said network","msgtype":"m.text"},"ts":1291715580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I doubt the latter two categories are illegal","msgtype":"m.text"},"ts":1291715581000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ooh hey","msgtype":"m.text"},"ts":1291715640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did we pass one of the HTML WG deadlines December 1?","msgtype":"m.text"},"ts":1291715641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there was one on December 6","msgtype":"m.text"},"ts":1291715642000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I *think* my ISP in the late 1990s had a transparent proxy for a while but it resulted in much complaining","msgtype":"m.text"},"ts":1291715643000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"all bugs are supposed to be resolved by editors","msgtype":"m.text"},"ts":1291715644000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually, that's tomorrow","msgtype":"m.text"},"ts":1291715700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think there are a tiny handful of open pre-LC bugs","msgtype":"m.text"},"ts":1291715701000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"per http://lists.w3.org/Archives/Public/public-html/2010Sep/0074.html","msgtype":"m.text"},"ts":1291715702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or I know it had a transparent proxy at one point, but I *think* it was found to be a bad idea 10 years ago already","msgtype":"m.text"},"ts":1291715703000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah, right, the 8th","msgtype":"m.text"},"ts":1291715704000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"my mistake","msgtype":"m.text"},"ts":1291715705000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: You saw I committed the change I made to add generate_tests?","msgtype":"m.text"},"ts":1291715760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: no I didn't, but generate_tests doesn't seem at all like what I want, based on your prior description of it","msgtype":"m.text"},"ts":1291715820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Oh well","msgtype":"m.text"},"ts":1291715821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it is confusingly indirect","msgtype":"m.text"},"ts":1291715822000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I used it and found it worked rather well","msgtype":"m.text"},"ts":1291715823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I didn't read the full paper yet, but by skimming it looks like Flash and Java can poison transparent proxies, too","msgtype":"m.text"},"ts":1291715824000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"did I skim it right?","msgtype":"m.text"},"ts":1291715880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes","msgtype":"m.text"},"ts":1291715881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.cafepress.co.uk/sk/w3c_shop -- not cashing in on HTML5","msgtype":"m.text"},"ts":1291715882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if Flash and Java are now also considered to have serious security flaws","msgtype":"m.emote"},"ts":1291715883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I would really just like a way to write test assertions in a normal straightforward way, and have the results of each one reported, without having to double-nest them all in calls","msgtype":"m.text"},"ts":1291715884000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(as opposed to transparent proxies having them)","msgtype":"m.text"},"ts":1291715885000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"generate_tests instead adds an obscure way to generate tests+assertions from arrays of stuff","msgtype":"m.text"},"ts":1291715940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it seems like almost everyone who has commented finds the test vs. assertion distinction confusing and painful","msgtype":"m.text"},"ts":1291715941000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It's really not that obsucre","msgtype":"m.text"},"ts":1291715942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yes, it feels like I am fighting a losing battle there","msgtype":"m.text"},"ts":1291716000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But nevertheless I think it is a highly useful distinction","msgtype":"m.text"},"ts":1291716001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it is a lot less readable than just writing individual assertions","msgtype":"m.text"},"ts":1291716060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"also the way you write it seems to lose the exception catching on the assert expressions","msgtype":"m.text"},"ts":1291716061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(I infer from generate_tests(assert_equals, [[1+1,2], [2+3,5]]))","msgtype":"m.text"},"ts":1291716120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hm this may be nice for websocket routing. combination of crud and urls","msgtype":"m.text"},"ts":1291716121000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"I don't think it is less readable if you want something more than a simple assert_","msgtype":"m.text"},"ts":1291716122000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is a rather common case","msgtype":"m.text"},"ts":1291716123000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or at least was the case the only time I used it so far","msgtype":"m.text"},"ts":1291716124000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"myws.remote('/path/to/my/resource/action',{params})","msgtype":"m.text"},"ts":1291716125000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"yeah, but just wanting a simple assert is a rather common case too","msgtype":"m.text"},"ts":1291716126000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which is quite poorly served right now","msgtype":"m.text"},"ts":1291716127000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Right, so having one solution that works for both cases seems strictly better than having a whole bunch of special cases for each assert_","msgtype":"m.text"},"ts":1291716180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"compared to other frameworks for browser-based tests that folks have experience with","msgtype":"m.text"},"ts":1291716181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"To be honest the vibe I get is that everyone wants to do what they are used to","msgtype":"m.text"},"ts":1291716182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but this does almost nothing to fix my complaint even for the simple assert_equals case","msgtype":"m.text"},"ts":1291716183000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it can't catch exceptions in those expressions","msgtype":"m.text"},"ts":1291716240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm not saying that my thing is perfect or even good, but you proposed something like the webkit tests and Mozilla folks basically proposed Mochitest","msgtype":"m.text"},"ts":1291716241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: Why can't it catch exceptions?","msgtype":"m.text"},"ts":1291716242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mochitests and webkit tests are much more similar to each other than to your thing","msgtype":"m.text"},"ts":1291716243000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: what exception handler is in effect when the expression \"2 + 3\" is being evaluated in your example?","msgtype":"m.text"},"ts":1291716300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Maybe I have been looking at the wrong Webkit tests then","msgtype":"m.text"},"ts":1291716301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what if instead of 2 + 3, that expression was getElementById(\"foo\").tagName (or something else that could throw)?","msgtype":"m.text"},"ts":1291716302000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: That's a fair point, but in practice I wouldn't exprect a complex expression there","msgtype":"m.text"},"ts":1291716303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: my learning experience when I was writing my first mochitest was more successful than my experience when first writing an HTML WG test","msgtype":"m.text"},"ts":1291716360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I would typically expect you to pass a primitive to a function","msgtype":"m.text"},"ts":1291716361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how would you use generate_tests to check that DOM calls which may throw have specific expected results?","msgtype":"m.text"},"ts":1291716420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't see any way to do it","msgtype":"m.text"},"ts":1291716421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and that's exactly what my id test is","msgtype":"m.text"},"ts":1291716422000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"How would you fix the problem but preserve the property that the code is run in an exception handler?","msgtype":"m.text"},"ts":1291716423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can think of three ways","msgtype":"m.text"},"ts":1291716480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(1) make each assert_* macro report its results, no matter how they are grouped in test() calls","msgtype":"m.text"},"ts":1291716481000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't see how (1) helps","msgtype":"m.text"},"ts":1291716540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(2) make assert_* macros just work at top level without being nested in test(), but take strings to eval, or thunks","msgtype":"m.text"},"ts":1291716541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(3) make test_* macros that are variants of assert_* which combine the creation of a test","msgtype":"m.text"},"ts":1291716542000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(1) helps because I could rewrite my id test to have one test(function() { .... }); wrapping it","msgtype":"m.text"},"ts":1291716600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"instead of one per assert","msgtype":"m.text"},"ts":1291716601000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and still get the same output","msgtype":"m.text"},"ts":1291716602000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I am really, really skeptical of systems that require output for each assert. One assert passing is not typically sufficient to indicate that the test passed","msgtype":"m.text"},"ts":1291716660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Except in trivial cases","msgtype":"m.text"},"ts":1291716661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"who said anything about \"systems that require\"?","msgtype":"m.text"},"ts":1291716662000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it makes it easier for browser engineers running the test to determine exactly which parts are failing","msgtype":"m.text"},"ts":1291716720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and which parts are working","msgtype":"m.text"},"ts":1291716721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"more so than a single pass/fail result","msgtype":"m.text"},"ts":1291716722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Anyway, what implementation of \"thunks\" did you have in mind?","msgtype":"m.text"},"ts":1291716780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I am assuming here that the goal of the tests is to improve interop, and therefore optimizing the output to be useful for implementors","msgtype":"m.text"},"ts":1291716781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yes, I agree with that","msgtype":"m.text"},"ts":1291716782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And I can see that adding stack traces where the test fails is useful","msgtype":"m.text"},"ts":1291716840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and adding the asserts that passed for failing tests might give you some indication of what code flow you had","msgtype":"m.text"},"ts":1291716841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I am thinking of async tests here)","msgtype":"m.text"},"ts":1291716842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"by \"thunks\" I just mean 0-arg functions used to delay expressions (rather than quoting them as strings)","msgtype":"m.text"},"ts":1291716843000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Isn't that roughly what it uses already?","msgtype":"m.text"},"ts":1291716900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That seems to be the thing that is drawing all the complkaints","msgtype":"m.text"},"ts":1291716901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that plus the two separate concepts that you have to layer together by hand each time","msgtype":"m.text"},"ts":1291716902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(fwiw I *could* make generate_tests exception-safe in the same way. That is I could make it take a function that is evaluated to return the parameter lists, or something)","msgtype":"m.text"},"ts":1291717020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I haven't really thought about async tests, but even there I think it is useful to report results for all steps that actually run, even if you don't end up running all the steps","msgtype":"m.text"},"ts":1291717021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"especially so if the failure is that one of your async steps never runs (e.g. because some event never fires), even though all asserts up to that point passed","msgtype":"m.text"},"ts":1291717022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Is it not implicit that all asserts up to the point that it failed at passed?","msgtype":"m.text"},"ts":1291717080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"see comment above about optimizing output for ease of use by implementors","msgtype":"m.text"},"ts":1291717081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"You can't fail because a step never runs and keep the common pattern where you add an assert_unreached() to indicate that an event that was not supposed to fire did not","msgtype":"m.text"},"ts":1291717140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes, you could stare real hard at the test, figure out the control flow, and surmise where you must have failed, or the test output can tell you that","msgtype":"m.text"},"ts":1291717141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"how will async tests detect failure by an event never firing?","msgtype":"m.text"},"ts":1291717200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The test will timeout","msgtype":"m.text"},"ts":1291717201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so presumably you know what step was pending at that point","msgtype":"m.text"},"ts":1291717202000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"\"You\"?","msgtype":"m.text"},"ts":1291717203000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume a timeout is a failure","msgtype":"m.text"},"ts":1291717204000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The harness doesn't know","msgtype":"m.text"},"ts":1291717205000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"FWIW, in our case, as I believe jgraham said on the list already, for our automated testing system (or any that does regression tracking, which I think would include MS as well), having tests/asserts that sometimes appear and sometimes don't are actively harmful for tracking stuff","msgtype":"m.text"},"ts":1291717206000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"A timeout is a failure","msgtype":"m.text"},"ts":1291717260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how is that compatible with steps that are expected to never run and assert_unreached()?","msgtype":"m.text"},"ts":1291717261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"But the test harness doesn't know about the order of things, so it doesn't know what, if anything is pending","msgtype":"m.text"},"ts":1291717262000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It just knows that the test hasn't declared itself finished","msgtype":"m.text"},"ts":1291717263000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway, it is easy to add some information about the asserts that passed to the output of failed tests","msgtype":"m.text"},"ts":1291717320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway, this only further makes the case that printing partial results as the test runs is useful","msgtype":"m.text"},"ts":1291717321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"It is also easy to add stack information via non-standard apis","msgtype":"m.text"},"ts":1291717380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if there is a way to meet Opera's specialized needs (that WebKit and Gecko don't seem to share) without making it harder to write good tests, I'm all for it","msgtype":"m.text"},"ts":1291717381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't think either of these things are fundamental design issues though","msgtype":"m.text"},"ts":1291717382000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure stack information is very important","msgtype":"m.text"},"ts":1291717440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Well it's hard to tell exactly which assert we are talking about without it","msgtype":"m.text"},"ts":1291717441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I must admit I do not really understand the details of Opera's needs, but I'm willing to take your word for it that the test/assert distinction somehow serves it","msgtype":"m.text"},"ts":1291717500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Our needs are mostly that we get consistent output from files containing multiple tests","msgtype":"m.text"},"ts":1291717560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: Basically, we need a constant set of tests/asserts/whatever to be reported back to the regression tracking","msgtype":"m.text"},"ts":1291717561000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but I'm not sure I am willing to write three times as many lines of script per HTML5 test to meet those needs","msgtype":"m.text"},"ts":1291717562000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That is, if they give 10 results one day we need 10 results the next day even if we broke something in the middle","msgtype":"m.text"},"ts":1291717563000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"compared to what I am used to in other script tests frameworks","msgtype":"m.text"},"ts":1291717564000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"FWIW, something like what qUnit does of showing all the asserts that ran works for us, provided we still have the tst output.","msgtype":"m.text"},"ts":1291717620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes, ease of authoring is a concern. But maybe this is best discussed with a patch","msgtype":"m.text"},"ts":1291717680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'll write a sample modification to the test framework (maybe more than one) and show how my test case would look with and without it","msgtype":"m.text"},"ts":1291717681000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: btw, https://bitbucket.org/validator/html-spec","msgtype":"m.text"},"ts":1291717740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mirror of the subversion repo for the spec ","msgtype":"m.text"},"ts":1291717800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the mercurial clone is only 31MB","msgtype":"m.text"},"ts":1291717801000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I had made another attempt at making a git clone of it, but stopped when it got to 8GB","msgtype":"m.text"},"ts":1291717860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, something crazy there","msgtype":"m.text"},"ts":1291717920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"disk space limit at github is 300MB anyway","msgtype":"m.text"},"ts":1291717921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: yeah, I have no idea what would cause it to balloon like that","msgtype":"m.text"},"ts":1291717922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also, I think the subversion python bindings that hgsubversion uses by default leak memory","msgtype":"m.text"},"ts":1291717980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"making the hg clone kept causing my server to run out of memory","msgtype":"m.text"},"ts":1291718040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and then kill the process","msgtype":"m.text"},"ts":1291718041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all of the available ways to create DVCS clones of subversion repos seem to have some serious problems when working with a subversion repo for any large project","msgtype":"m.text"},"ts":1291718100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I choose to blame svn","msgtype":"m.text"},"ts":1291718160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hell yeah","msgtype":"m.text"},"ts":1291718161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as usual","msgtype":"m.text"},"ts":1291718162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I dislike subversion enough I'm tempted to say I hope subversion's death is slow and painful","msgtype":"m.text"},"ts":1291718220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as payback for all the wasted time it has cost","msgtype":"m.text"},"ts":1291718280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It is dying slowly and painfully. Sadly the pain is for the people still using it and those trying to move away from it","msgtype":"m.text"},"ts":1291718281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith, creating svn clone requires to check out every revision out of subversion","msgtype":"m.text"},"ts":1291718340000,"senderName":"rimantas","senderId":"rimantas@irc"},
{"content":{"body":"rimantas: yah, I figured as much","msgtype":"m.text"},"ts":1291718341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: I just hope that people have enough sense to quit using it for new projects at least","msgtype":"m.text"},"ts":1291718342000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why anyone would voluntarily choose subversion for a new project at this point is beyond me","msgtype":"m.text"},"ts":1291718400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually it shows one of the ways how subversion sucks - everything (almost) over the net, and slow","msgtype":"m.text"},"ts":1291718401000,"senderName":"rimantas","senderId":"rimantas@irc"},
{"content":{"body":"othermaciej: Would something like having setup/teardown would work? There, IMO, needs to be a way to capture exceptions from each and every part of an, e.g., @id testsuite","msgtype":"m.text"},"ts":1291718402000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, we could write a book about all the ways it sucks","msgtype":"m.text"},"ts":1291718403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mutli-volume book","msgtype":"m.text"},"ts":1291718404000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, Obama failed with tax, Julian Assange arrested","msgtype":"m.text"},"ts":1291718460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not a great day","msgtype":"m.text"},"ts":1291718461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arrested?","msgtype":"m.text"},"ts":1291718462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"where?","msgtype":"m.text"},"ts":1291718463000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in London, he turned himself in","msgtype":"m.text"},"ts":1291718464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"damn","msgtype":"m.text"},"ts":1291718465000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"according to twitter anyway","msgtype":"m.text"},"ts":1291718466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1291718520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: For some kinds of things git et. al. really suck. I'm thinking huge repositories with many files some large and where partial checkouts are useful","msgtype":"m.text"},"ts":1291718521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, we still have cvs for that","msgtype":"m.text"},"ts":1291718522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for the other stuff","msgtype":"m.text"},"ts":1291718523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It is not clear to me that CVS sucks less","msgtype":"m.text"},"ts":1291718524000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean, there is some competition","msgtype":"m.text"},"ts":1291718525000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1291718580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, svn and cvs and going head-to-head there","msgtype":"m.text"},"ts":1291718581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: anyway, he's let the genie out of the bottle… it'll be hard to imagine things just going back to normal. They are not going to be able to prevent leaks from getting published going forward. I think others can see now that it's possible to get the information out","msgtype":"m.text"},"ts":1291718700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: the bitbucket repo provides an RSS feed","msgtype":"m.text"},"ts":1291718760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"partial checkout is nice","msgtype":"m.text"},"ts":1291718761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://bitbucket.org/validator/html-spec/rss","msgtype":"m.text"},"ts":1291718762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: partial checkout?","msgtype":"m.text"},"ts":1291718763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: checkout just one folder","msgtype":"m.text"},"ts":1291718820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1291718821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bitbucket can do twitter notifications, so I got them turned on now for the @html5 user","msgtype":"m.text"},"ts":1291718940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., http://twitter.com/#!/html5/status/11940556187897856","msgtype":"m.text"},"ts":1291719000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if anybody wants, I can get notifications (re)set up for @whatwg from there too","msgtype":"m.text"},"ts":1291719001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but first I need to step away for a bit","msgtype":"m.text"},"ts":1291719060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"interesting that in the first version of WebSocket (then called TCPConnection), the handshake was client: \"Hello\\n\" server: \"Welcome\\n\"","msgtype":"m.text"},"ts":1291720440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hm, i got a solution for my ws problem: http://hwios.blogspot.com/2010/12/websocket-routing.html","msgtype":"m.text"},"ts":1291721160000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"applying urls on a websocket kinda makes sense","msgtype":"m.text"},"ts":1291721220000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"either via ws or via http should just point to some resource. maybe have some simulation of get/post in there as well ","msgtype":"m.text"},"ts":1291721460000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"phrearch: in theory you could talk HTTP over a websocket","msgtype":"m.text"},"ts":1291721640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: im not sure if i understand :)","msgtype":"m.text"},"ts":1291721700000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"like ws.send('GET /foo/bar HTTP/1.1\\r\\n ...')","msgtype":"m.text"},"ts":1291721760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"im using it now just as a messaging medium(json) with html as payload for layout","msgtype":"m.text"},"ts":1291721761000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1291721762000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"i guess that would take a custom server implementation?","msgtype":"m.text"},"ts":1291721820000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"i'm not sure if HTTP is more useful than JSON though :)","msgtype":"m.text"},"ts":1291721821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"im pretty happy with json atm, but i havent found a consistent routing mechanism yet ","msgtype":"m.text"},"ts":1291721822000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"having a router that can decode the url to some function would be nice","msgtype":"m.text"},"ts":1291721880000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"django had a websocket implementation, but that one seems to try to fit the websocket in a http request/response","msgtype":"m.text"},"ts":1291721940000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"it doesnt seem to make sense to do a http handshake every time","msgtype":"m.text"},"ts":1291721941000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"Will  the WebSQL API be continued in some kind of way? now W3C doesn't do it?","msgtype":"m.text"},"ts":1291724700000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1291724701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So WebSQL will definitely something we won't see in our webpages in the future?","msgtype":"m.text"},"ts":1291724760000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Inded","msgtype":"m.text"},"ts":1291724820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Actually wondering, why not? I mean, it could be quite handy in the light of the more offline apps","msgtype":"m.text"},"ts":1291724821000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Because there's a lack of interest from implementors, apart from those who've already implemented it","msgtype":"m.text"},"ts":1291724822000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And that all of them like it anyway","msgtype":"m.text"},"ts":1291724823000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's kinda bad","msgtype":"m.text"},"ts":1291724824000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"IndexedDB is the future","msgtype":"m.text"},"ts":1291724825000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok let me look it up","msgtype":"m.text"},"ts":1291724880000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Actually, for a presentation of HTML5, in the light of a CMS i have completely renewed (non HTML5 techniques, just a year ago) I was trying to convince people in a presentation how HTML5 offline web technologies will come to the rescue in a CMS like this","msgtype":"m.text"},"ts":1291724881000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"WebSQL was a part of the story but I have to remove it now","msgtype":"m.text"},"ts":1291724882000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"hm, offline storage is going away?","msgtype":"m.text"},"ts":1291725060000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"localStorage will contain to exist, and IndexedDB will come into existance","msgtype":"m.text"},"ts":1291725061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*continue","msgtype":"m.text"},"ts":1291725120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ergh, I can't spell","msgtype":"m.text"},"ts":1291725121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no no","msgtype":"m.text"},"ts":1291725122000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1291725123000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"hm, as long they dont do that for websockets...","msgtype":"m.text"},"ts":1291725180000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"WebSockets has wide support, and is implemented by almost everyone. It's far from in the situation Web SQL ever was.","msgtype":"m.text"},"ts":1291725181000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: so basically, what I could explain is something like: The CMS could have an option to work offline, as in, indexedDB will store the pages and their rights etc in tables, localStorage will store the page contents, App cache will store pictures Icons","msgtype":"m.text"},"ts":1291725182000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ok, glad to hear websockets arent scheduled for removal :)","msgtype":"m.text"},"ts":1291725240000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"will read up on the websql thing","msgtype":"m.text"},"ts":1291725241000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"websockets is scheduled for disabling in firefox 4 at least","msgtype":"m.text"},"ts":1291725242000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=616733","msgtype":"m.text"},"ts":1291725243000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Though that is temporary","msgtype":"m.text"},"ts":1291725244000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1291725245000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: is that a correct approach simply said?","msgtype":"m.text"},"ts":1291725246000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ow dear","msgtype":"m.text"},"ts":1291725247000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"MrWax: localStorage is just for any key->value pair, really","msgtype":"m.text"},"ts":1291725300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah well, as long it can be enabled in about::config","msgtype":"m.text"},"ts":1291725301000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"gsnedders: so bulk page text contents of a CMS page - how would they be stored for offline usage?","msgtype":"m.text"},"ts":1291725302000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"phrearch: The issue is that the handshake makes it possible to exploit a number of buggy deployed HTTP proxies","msgtype":"m.text"},"ts":1291725360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MrWax: Either as key-value pairs in localStorage, in a table in IndexedDB, or as standard content in the app cache","msgtype":"m.text"},"ts":1291725361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: any radical changes expected there?","msgtype":"m.text"},"ts":1291725362000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"phrearch: At a protocol level, yes.","msgtype":"m.text"},"ts":1291725363000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: i guess it wont hurt, as long its keeping a persistant connection like now","msgtype":"m.text"},"ts":1291725480000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"gsnedders: I also have made a list of HTML5 (and HTML5 related) APIS .. just main, primary not every exact, but the important ones to present.. is this a list which farely represents the more important APIS?","msgtype":"m.text"},"ts":1291725540000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"canvas, video/audio, drag & drop, app cache, geolocation, workers, localstorage, microdata, indexeddb","msgtype":"m.text"},"ts":1291725541000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"I know there is a lot more, but this is just a small presentation","msgtype":"m.text"},"ts":1291725600000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"well, websockets...","msgtype":"m.text"},"ts":1291725601000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1291725602000,"senderName":"phrearch","senderId":"phrearch@irc"},
{"content":{"body":"Well, most of them aren't actually in HTML5","msgtype":"m.text"},"ts":1291725603000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(and some that are not maintained by WHATWG HTML)","msgtype":"m.text"},"ts":1291725604000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1291725605000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"thats why I said related","msgtype":"m.text"},"ts":1291725606000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"isn't great judge of this off the top of his head","msgtype":"m.emote"},"ts":1291725660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because I'm probably forgetting half of what is in the spec","msgtype":"m.text"},"ts":1291725661000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok :)","msgtype":"m.text"},"ts":1291725662000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"anyone else maybe?","msgtype":"m.text"},"ts":1291725663000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"canvas: yes (but 2d context is not in w3c version), video/audio: yes, dnd: yes, app cache: yes, geolocation: no, workers: no, localstorage: no, microdata: only in whatwg version, indexeddb: no","msgtype":"m.text"},"ts":1291725840000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok, for geolocation i agree, but why no localstorage and workers?","msgtype":"m.text"},"ts":1291725900000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"they're not in the html5 spec","msgtype":"m.text"},"ts":1291725901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yes, but they are considered related apis right? that most browsers will soon implement","msgtype":"m.text"},"ts":1291725902000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"all web apis are related to html","msgtype":"m.text"},"ts":1291725903000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"actually who has developed workers, do you know?","msgtype":"m.text"},"ts":1291725960000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Hixie","msgtype":"m.text"},"ts":1291725961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well he wrote the spec","msgtype":"m.text"},"ts":1291725962000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"proof of concept impl was in Gears","msgtype":"m.text"},"ts":1291725963000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MrWax: http://quotes.burntelectrons.org/4394 should explain everything","msgtype":"m.text"},"ts":1291726020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but, from how I see it, i could just simply change the subject of the second part of my presentation where I speak about APIs, first speak about those in the html5 spec, and then talk about the \"related future web\" apis","msgtype":"m.text"},"ts":1291726021000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"jgraham: thx","msgtype":"m.text"},"ts":1291726022000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"We're still in need of a name, as far as I'm aware","msgtype":"m.text"},"ts":1291726260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the name is \"HTML5\"","msgtype":"m.text"},"ts":1291726320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Who's Hixie related to?","msgtype":"m.text"},"ts":1291726380000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Mozilla?","msgtype":"m.text"},"ts":1291726381000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"he works for google","msgtype":"m.text"},"ts":1291726382000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh sorry I see his name now sorry sorry","msgtype":"m.text"},"ts":1291726383000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"zcorpan: If that's the name, tell gsnedders to stop telling people that things aren't actually in HTML5 :-)","msgtype":"m.text"},"ts":1291727040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"IE does not even render my site that terrible","msgtype":"m.text"},"ts":1291727041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE8*","msgtype":"m.text"},"ts":1291727042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think HTML5 is the marketing name meaning one thing and the technical name meaning another thing. It sounds confusing but it is no more confusing than every other case where a word has multiple meanings","msgtype":"m.text"},"ts":1291727100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You just need to disabmiguate based on context","msgtype":"m.text"},"ts":1291727101000,"senderName":"jgraham","senderId":"jgraham@irc"}
]