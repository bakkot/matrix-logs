[
{"content":{"body":"MikeSmith, have you cleaned the repo directory lately? (Ie `git clean -xfd`)","msgtype":"m.text"},"ts":1408065571000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I didn't have the issue initially, but I saw that the website was having issues so I tried cleaning to see if I could reproduce it","msgtype":"m.text"},"ts":1408065590000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: I've never run git clean in that repo. We have some files in that repo directory that aren't under version control, so if git clean is going to remove those, I don't want to run it -- especially if since it's not clear it would help anything anyway","msgtype":"m.text"},"ts":1408072891000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there aren't very many untracked files, just your non-default configuration and compiled python files, really. (and submodules, but these don't really count)","msgtype":"m.text"},"ts":1408072977000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the entire submissions directory from which http://w3c-test.org/submissions is served is in the root of the repo directory and its contents are entirely untracked files","msgtype":"m.text"},"ts":1408073438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, I don't recommend working on it from w3c-test.org per se","msgtype":"m.text"},"ts":1408073506000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"probably good just clearing with `find . -name '*.pyc' | xargs rm` though","msgtype":"m.text"},"ts":1408073528000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh I see what you're saying","msgtype":"m.text"},"ts":1408073530000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"running it locallly, I can try that","msgtype":"m.text"},"ts":1408073543000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean in my working directory","msgtype":"m.text"},"ts":1408073588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah even after a `git clean -xfd` I can't reproduce the problem in my working directory","msgtype":"m.text"},"ts":1408073725000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"humm","msgtype":"m.text"},"ts":1408073738000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but even without the failure to import html5lib, it still breaks?","msgtype":"m.text"},"ts":1408073757000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I remove the MANIFEST.jon file, go to http://web-platform.test:8000/tools/runner/index.html and Start and the MANIFEST.json file gets regenerated as expected, with no errors logged","msgtype":"m.text"},"ts":1408073774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caitp: I don't see any message or indication anywhere that it's failing to import html5lib","msgtype":"m.text"},"ts":1408073832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hm, interesting","msgtype":"m.text"},"ts":1408073869000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"not when I run python serve.py in the console, nor if I run the manifest.py script manually","msgtype":"m.text"},"ts":1408073890000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, who knows, issue might not have been related to html5lib, but given that it shows up in the stack trace here locally, it looks suspicious","msgtype":"m.text"},"ts":1408073898000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: looks good as now we have a link to the main place of discussion","msgtype":"m.text"},"ts":1408074040000,"senderName":"tyoshino______","senderId":"tyoshino______@irc"},
{"content":{"body":"seems like we failed for \"Cross-origin requests should not require API changes other than allowing cross-origin requests.\" http://www.w3.org/wiki/CORS","msgtype":"m.text"},"ts":1408086219000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"although not having an API change for XHR caused a security bug for facebook at least, iirc","msgtype":"m.text"},"ts":1408086291000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, that wiki is out-of-date","msgtype":"m.text"},"ts":1408087884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i’ve got a rough sketch for a promise-iterator-oriented byte stream https://github.com/kriskowal/gtor/blob/master/byte-stream.js","msgtype":"m.text"},"ts":1408087997000,"senderName":"kriskowal","senderId":"kriskowal@irc"},
{"content":{"body":"i’m going to try to clean it up tomorrow, but it’s not too nasty","msgtype":"m.text"},"ts":1408088027000,"senderName":"kriskowal","senderId":"kriskowal@irc"},
{"content":{"body":"usage examples might help, but you really want to talk to Domenic, I'm only superficially involved","msgtype":"m.text"},"ts":1408088167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, pinged him in #promises too :)","msgtype":"m.text"},"ts":1408088272000,"senderName":"kriskowal","senderId":"kriskowal@irc"},
{"content":{"body":"but these are the working cases https://github.com/kriskowal/gtor/blob/master/test/byte-stream-test.js","msgtype":"m.text"},"ts":1408088294000,"senderName":"kriskowal","senderId":"kriskowal@irc"},
{"content":{"body":"\"It was taken out per a suggestion at the May 2012 F2F so it could be maintained by the wider web community.\"","msgtype":"m.text"},"ts":1408091267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only edits are made by me","msgtype":"m.text"},"ts":1408091271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk is the wider web community?","msgtype":"m.text"},"ts":1408092225000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I think that's a good way of interpreting the sequence of events","msgtype":"m.text"},"ts":1408092481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1408092507000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gets annevk an \"I am the web\" T-shirt","msgtype":"m.emote"},"ts":1408093580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: does IDL allow freezing an object to get around the expando issue?","msgtype":"m.text"},"ts":1408099018000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that sounds very developer-hostile","msgtype":"m.text"},"ts":1408099060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: why can't we follow established patterns?","msgtype":"m.text"},"ts":1408099068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what have developers ever done for us?","msgtype":"m.text"},"ts":1408099082000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I do a for-in on document.body.attributes I get something named \"@@iterator\" in Gecko","msgtype":"m.text"},"ts":1408099812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In Chrome if I use Object.getOwnPropertyNames I get a mysterious 3 (I have three attributes declared) that returns undefined on getting","msgtype":"m.text"},"ts":1408100002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's Symbol.iterator in another incarnation","msgtype":"m.text"},"ts":1408100013000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"We have not fixed it yet?","msgtype":"m.text"},"ts":1408100026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1408100033000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Also, why does getOWnPropertyNames not return anything for the attribute names themselves?","msgtype":"m.text"},"ts":1408100127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. if I have <body x> body.attributes.x will return the expected Attr object","msgtype":"m.text"},"ts":1408100146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: pls see https://critic.hoppipolla.co.uk/showcomment?chain=4280","msgtype":"m.text"},"ts":1408100668000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: left a reply","msgtype":"m.text"},"ts":1408100835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1408100892000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"HTMLCollection has namedItem()","msgtype":"m.text"},"ts":1408101686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"NamedNodeMap has getNamedItem()","msgtype":"m.text"},"ts":1408101694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hurray!","msgtype":"m.text"},"ts":1408101698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: did you forget to publish to http://fullscreen.spec.whatwg.org ?","msgtype":"m.text"},"ts":1408104051000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: happens automatically unless something went wrong","msgtype":"m.text"},"ts":1408104088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then something went wrong :)","msgtype":"m.text"},"ts":1408104122000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: did manual refresh","msgtype":"m.text"},"ts":1408104127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks, now I see oldNode","msgtype":"m.text"},"ts":1408104140000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: github?","msgtype":"m.text"},"ts":1408105384000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1408105387000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"then I report the bug here","msgtype":"m.text"},"ts":1408105393000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"click event in the Notification should be cancelable","msgtype":"m.text"},"ts":1408105407000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and if preventDefault() is called, UA shouldn't not do whatever default action it has for the click (as an example, not focus the tab/window which created the notification).","msgtype":"m.text"},"ts":1408105469000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"makes sense I guess, although the original idea was that click would not do anything...","msgtype":"m.text"},"ts":1408105911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"clicking a notification also makes less sense now we let them be spawn from workers","msgtype":"m.text"},"ts":1408105928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: wait, you don't have a GitHub account? just email WHATWG then? I'm not keeping track of logs","msgtype":"m.text"},"ts":1408106006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"github has so horrible UI, that I try to not use it, and no, I don't have an account","msgtype":"m.text"},"ts":1408106068000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1408106073000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thanks smaug____","msgtype":"m.text"},"ts":1408113189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes back to NamedNodeMap","msgtype":"m.emote"},"ts":1408113200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any objections?","msgtype":"m.text"},"ts":1408113267000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: if you go through the open GitHub issues you see that not everyone likes this","msgtype":"m.text"},"ts":1408113291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since I need to implement either that, or do some hacky \"does web page call window.focus() during click event dispatch\" thing","msgtype":"m.text"},"ts":1408113300000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1408113313000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wouldn't we need both given workers?","msgtype":"m.text"},"ts":1408113319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can't call window.focus() in workers","msgtype":"m.text"},"ts":1408113567000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we may want to be able to map a Notification in a worker to a window object somehow, and the n","msgtype":"m.text"},"ts":1408113610000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"then preventDefault() in a worker would prevent the automatic focus","msgtype":"m.text"},"ts":1408113625000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah that's possible using getClones()","msgtype":"m.text"},"ts":1408113631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't find any issue where someone is against making click cancelable","msgtype":"m.text"},"ts":1408113676000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"maybe it's okay then. I guess I can have a look next week if nothing else comes up","msgtype":"m.text"},"ts":1408113770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1408113838000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"foolip: any news on potentially making Attr.prototype.value readonly?","msgtype":"m.text"},"ts":1408114523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: if we cannot do that, we should just embrace the link between attributes and their owner","msgtype":"m.text"},"ts":1408114548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/bentrem/status/500198639239958530","msgtype":"m.text"},"ts":1408116793000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah was not quite sure what to make of that","msgtype":"m.text"},"ts":1408116817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is \"How to determine content-type of file: protocol\" a thread for your specs thta you'll respond to or is it something i should worry about?","msgtype":"m.text"},"ts":1408119536000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it's mostly about MIME sniffing","msgtype":"m.text"},"ts":1408121434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: see my question to anne earlier, but pretend you are anne","msgtype":"m.text"},"ts":1408121467000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: should i file bugs for the various suggestions i made on es-discuss that didn't get picked up by allen? or is the list the best chance a suggestion has?","msgtype":"m.text"},"ts":1408122227000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You're not gonna like this","msgtype":"m.text"},"ts":1408122261000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_: My best chance to get any change has always been to cooperate with someone who attends the TC39 face-to-face meetings.","msgtype":"m.text"},"ts":1408122264000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"And that is super effective.","msgtype":"m.text"},"ts":1408122271000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1408122278000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"All roads lead through the meeting agenda.","msgtype":"m.text"},"ts":1408122321000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"You can often get something onto the agenda just by asking on the list, but unless someone is there to advocate your view, it won't matter.","msgtype":"m.text"},"ts":1408122374000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"and screw everyone who can't afford to travel every 2 months, eh","msgtype":"m.text"},"ts":1408122380000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yay for openness","msgtype":"m.text"},"ts":1408122384000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Allen does pay attention to bugs for straight-up mistakes, or changes that are in the meeting notes but haven't appeared in the spec yet.","msgtype":"m.text"},"ts":1408122507000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i wonder what people want  import \"foo/\";  to do","msgtype":"m.text"},"ts":1408123563000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should that import \"http://example.com/foo/.js\" ?","msgtype":"m.text"},"ts":1408123579000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: ^, if you have an opinion","msgtype":"m.text"},"ts":1408123591000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"don't do that\" is my opinion","msgtype":"m.text"},"ts":1408123614000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"well sure, but what if they do","msgtype":"m.text"},"ts":1408123624000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"either an immediate error in the normalize hook, or \"foo/.js\"","msgtype":"m.text"},"ts":1408123676000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"also, if you do <script type=module href=\"http://example.com/foo.js\"></script> <script type=module> import \"foo\"; </script>, should we load foo.js once or twice?","msgtype":"m.text"},"ts":1408123694000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: can the former override the Loader?","msgtype":"m.text"},"ts":1408124022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do you mean","msgtype":"m.text"},"ts":1408124035000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm just talking about default behaviours here","msgtype":"m.text"},"ts":1408124053000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, obviously all of this goes out of the window if the scripts start playing","msgtype":"m.text"},"ts":1408124065000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I guess I'm not sure, seems like avoiding duplicates would be nice, if every other library does import jquery you might not want to load it 10 times","msgtype":"m.text"},"ts":1408124112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"import, in general, dedupes","msgtype":"m.text"},"ts":1408124125000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the question here is about normalization","msgtype":"m.text"},"ts":1408124131000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, if three modules all do  import \"jquery\", you're only going to get one jquery","msgtype":"m.text"},"ts":1408124156000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: is there any way to delay execution of a module once its dependencies have been found?","msgtype":"m.text"},"ts":1408124276000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: i'm thinking of a case like this:","msgtype":"m.text"},"ts":1408124285000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"<script type=module execute-when-needed> import \"jquery\"; ... </script>","msgtype":"m.text"},"ts":1408124307000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: when does deduping happen relative to normalizing the identifier? should be the answer no?","msgtype":"m.text"},"ts":1408124315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jorendorff: it'd be nice if I could have the imports read immediately, and then the loads started preemptively, even if I don't ever actually tell the script to execute","msgtype":"m.text"},"ts":1408124365000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: deduping happens between the normalize and locate hooks","msgtype":"m.text"},"ts":1408124378000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"there's not","msgtype":"m.text"},"ts":1408124453000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_: the way I thought people would reduce latency (round trips) when using large module dependency graphs was,","msgtype":"m.text"},"ts":1408124578000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":" make the fetch() hook fast --- by preloading module sources and them in a side table known to their custom fetch()","msgtype":"m.text"},"ts":1408124594000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"if browsers do that, it implies that the browsers have to implement two redundant dependency mechanisms.","msgtype":"m.text"},"ts":1408124653000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no because preloading doesn't need a dependency mechanism","msgtype":"m.text"},"ts":1408124669000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"you just say \"here's a chunk of code i need\"","msgtype":"m.text"},"ts":1408124676000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"how do you know you need it?","msgtype":"m.text"},"ts":1408124682000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"because you looked at the devtools and you saw it loading? how does anybody get the knowledge they need to tune application performance?","msgtype":"m.text"},"ts":1408124726000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I didn't mean browsers do this, but JS library code could do it (by modifying the default loader's fetch hook)","msgtype":"m.text"},"ts":1408124743000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"if web authors still have to write their own loaders in the common case, i think we've more or less failed.","msgtype":"m.text"},"ts":1408124761000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, i know","msgtype":"m.text"},"ts":1408124770000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"they won't write their own, of course","msgtype":"m.text"},"ts":1408124781000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"well if they use a standard one, we should just build it into the platform.","msgtype":"m.text"},"ts":1408124793000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cos otherwise we're just saying that the baseline cost of shipping a web app is the cost of using that piece of code.","msgtype":"m.text"},"ts":1408124821000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no real argument here","msgtype":"m.text"},"ts":1408124853000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_: But you were already talking about multiple sources of information for the dependency graph - declarative in the source code, declarative in HTML (because you have that earlier). How do you know what you need?","msgtype":"m.text"},"ts":1408125186000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: the sources are multiple, but I'd hope the browser only has to maintain one tree generated from those sources","msgtype":"m.text"},"ts":1408125222000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"right, what i was describing only has one source and one graph; plus a cache of source code","msgtype":"m.text"},"ts":1408125251000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"(if we're speaking only of what has to be maintained on the client side)","msgtype":"m.text"},"ts":1408125281000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"if you haven't yet loaded anything, the ES6 dep graph is empty.","msgtype":"m.text"},"ts":1408125285000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1408125291000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_ problem is, the module dep graph can't be constructed ahead of time","msgtype":"m.text"},"ts":1408125294000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"but you still need a tree somewhere to manage which dependencies you've downloaded.","msgtype":"m.text"},"ts":1408125297000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1408125313000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"well e.g. so you know which you still have to download, and which to deprioritise, when you're told that a subbranch is to execute","msgtype":"m.text"},"ts":1408125336000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I don't understand that","msgtype":"m.text"},"ts":1408125348000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"say that A1 depends on A2 and B1 depends on B2.","msgtype":"m.text"},"ts":1408125366000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you've discovered this. so now you have to have at minimum a list A1, A2, B1, B2, so you can walk down your list and download these files.","msgtype":"m.text"},"ts":1408125398000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"now, you've downloaded A1, which it turns out is big, and suddenly you're told \"Run B1!\"","msgtype":"m.text"},"ts":1408125425000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you need to know that that means you need to immediately get B1 *and B2*, and *not* get A2.","msgtype":"m.text"},"ts":1408125440000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that means you need a tree","msgtype":"m.text"},"ts":1408125450000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hmm. This scenario assumes a lot about the application's needs and architecture.","msgtype":"m.text"},"ts":1408125556000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"what does it assume?","msgtype":"m.text"},"ts":1408125578000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it matches a bunch of the use cases people have brought up on the whatwg list over the years","msgtype":"m.text"},"ts":1408125590000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"For example, it assumes that the application wants to achieve performance by downloading all the scripts in separate requests, on demand, rather than bundle and preload","msgtype":"m.text"},"ts":1408125663000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"just assume that A1, A2, B1, and B2 are all really large bundles of images, stylesheets, and scripts, if you prefer","msgtype":"m.text"},"ts":1408125687000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"But if you have a system with four \"really large\" components, the cost of a small additional library to customize your loader is relatively small.","msgtype":"m.text"},"ts":1408125837000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"These systems definitely exist, I don't dispute that","msgtype":"m.text"},"ts":1408125850000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"but they're all different","msgtype":"m.text"},"ts":1408125865000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"we could just have people write libraries to write their own loader without having an ES6 loader too","msgtype":"m.text"},"ts":1408125910000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, the ES6 loader doesn't really add anything you can't do in ES5","msgtype":"m.text"},"ts":1408125918000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"as demonstrated by all the loaders that already exist :-)","msgtype":"m.text"},"ts":1408125944000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"quite","msgtype":"m.text"},"ts":1408125948000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"in practice, people have lots of bundles, and the browser is in a better place to handle it than author script","msgtype":"m.text"},"ts":1408126028000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"something the Loader doesn't have at all is bundles. dependencies are among modules (only).","msgtype":"m.text"},"ts":1408126057000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it also doesn't have any way to prioritize one load over another","msgtype":"m.text"},"ts":1408126079000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sure, the bundling would happen at the ServiceWorker level or HTTP2 level","msgtype":"m.text"},"ts":1408126086000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or delay a load from proceeding to execution","msgtype":"m.text"},"ts":1408126087000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I expect the prioritisation is something that I'll be exposing as part of this work","msgtype":"m.text"},"ts":1408126104000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"in fact loader.[[Loads]] isn't exposed at all right now, stuff is only exposed after linkage finishes","msgtype":"m.text"},"ts":1408126151000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1408126163000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i expect we'll expose loader.[[Loads]] in some way eventually","msgtype":"m.text"},"ts":1408126179000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"probabl","msgtype":"m.text"},"ts":1408126192000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"if nothing else, to allow scripts to manipulate the HTTP2 priorities","msgtype":"m.text"},"ts":1408126192000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: so as part of this i'm probably going to have to hook into @import handling","msgtype":"m.text"},"ts":1408126276000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: are you the right person for me to chat to about that?","msgtype":"m.text"},"ts":1408126286000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"No, but I'm probably the most right person you'll find.","msgtype":"m.text"},"ts":1408126306000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh, i know that feeling","msgtype":"m.text"},"ts":1408126313000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wanna do lunch?","msgtype":"m.text"},"ts":1408126316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i can be near you in about 20 minutes","msgtype":"m.text"},"ts":1408126326000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"could see \"map/\" loading \"map/index.js\"","msgtype":"m.text"},"ts":1408126431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk or \"map/\" => \"map/main.js\"","msgtype":"m.text"},"ts":1408126474000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"\"index\" has precedence in Node, but is still kinda weird as a descriptive word : )","msgtype":"m.text"},"ts":1408126504000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"fetching / on a server typically looks for a index.* file","msgtype":"m.text"},"ts":1408126520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unless you overwrite that","msgtype":"m.text"},"ts":1408126525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1408126540000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"but then the whole not using URLs thing here is kind of surprising so I don't really know","msgtype":"m.text"},"ts":1408126541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah one of the things i suggested on es-discuss was default.js","msgtype":"m.text"},"ts":1408126549000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"one reason for choosing something other than \"index.js\":  on Node index.js the the default for old-style modules...","msgtype":"m.text"},"ts":1408126653000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"if you have something different for ES6 packages, you can support both ways of loading (old and new) at the same time","msgtype":"m.text"},"ts":1408126675000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"maybe : )","msgtype":"m.text"},"ts":1408126677000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"Hixie_: Yeah, sure.","msgtype":"m.text"},"ts":1408126974000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k, i'll be there in a bit.","msgtype":"m.text"},"ts":1408127011000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Is it the same thread that I said I'd want Anne's comments on?","msgtype":"m.text"},"ts":1408130731000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1408130738000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: If it's from a few weeks ago, then it probably is.","msgtype":"m.text"},"ts":1408131208000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I've been travelling and don't have my regular computer, so I can't go through the mail like I normally would.","msgtype":"m.text"},"ts":1408131232000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: np. it's relatively new i think.","msgtype":"m.text"},"ts":1408131537000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Oh, right, I forgot who I was talking to. :P","msgtype":"m.text"},"ts":1408131553000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"well i've been really bad about my e-mail too recently","msgtype":"m.text"},"ts":1408131568000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i've >1000 unread after my filters. :-)","msgtype":"m.text"},"ts":1408131574000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah, that's what I mean ;)","msgtype":"m.text"},"ts":1408131592000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: same thread, yes","msgtype":"m.text"},"ts":1408132365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: I did reply to some bits based on your advice","msgtype":"m.text"},"ts":1408132380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, OK. I haven't had a chance to read it yet.","msgtype":"m.text"},"ts":1408132527000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so, i need three terms. 1. a method that says \"apply yourself / execute yourself\", e.g. that causes a style sheet to begin applying, a script to run, an HTML import to be imported and applied.","msgtype":"m.text"},"ts":1408133518000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"2. an attribute that returns a promise that is resolved once the thing has applied/executed/imported/whatever","msgtype":"m.text"},"ts":1408133540000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"3. an attribute that returns a promise that is resolved once all the resources to do #1 near-instantaneously are available","msgtype":"m.text"},"ts":1408133568000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"also possibly a fourth, something that forces a preload. but it's not clear if i really need that.","msgtype":"m.text"},"ts":1408133591000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what is the usual way of naming attributes that return promises?","msgtype":"m.text"},"ts":1408133685000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"also, yay for single-threaded-forever APIS","msgtype":"m.text"},"ts":1408133756000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so i don't think there's a usual way yet","msgtype":"m.text"},"ts":1408133939000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: any opinions on the above?","msgtype":"m.text"},"ts":1408133952000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"right now i'm thinking execute(), .loaded, .ready, and .prefetch() but those suck","msgtype":"m.text"},"ts":1408133973000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't like loaded cos it's so generic","msgtype":"m.text"},"ts":1408133992000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but i guess it matches onload","msgtype":"m.text"},"ts":1408134003000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so maybe load(), .loaded, .ready, and .prefetch()","msgtype":"m.text"},"ts":1408134013000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Seems fairly reasonable.","msgtype":"m.text"},"ts":1408134036000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is load() going to fit the next time you want to reuse this interface?","msgtype":"m.text"},"ts":1408134099000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"how do you mean?","msgtype":"m.text"},"ts":1408134138000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"also, I can't help but think that .loaded and .ready sound like names for flags or perhaps timestamps/logs","msgtype":"m.text"},"ts":1408134183000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"nah you'd use isReady for those... maybe","msgtype":"m.text"},"ts":1408134275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anyway, shouldn't there be a naming convention for promises?","msgtype":"m.text"},"ts":1408134379000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"nah, we don't need hungarian notation, because our language is strongly-typed enough that you can just hover over the variable name in the IDE and see its type","msgtype":"m.text"},"ts":1408134424000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(trololol)","msgtype":"m.text"},"ts":1408134428000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":";-P","msgtype":"m.text"},"ts":1408134440000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"nice try","msgtype":"m.text"},"ts":1408134445000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"doesn't even *Haskell* have a few naming conventions that give a clue about type?","msgtype":"m.text"},"ts":1408134573000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and there's a piece or two of hungarian notation that I actually find useful: m_ for members, maybe h for handles ...","msgtype":"m.text"},"ts":1408134758000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(though m_ is really only useful in those languages where member access can look the same as a reference to a global name)","msgtype":"m.text"},"ts":1408134833000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Domenic: what do you think of scheme's \"?\" convention for predicates?","msgtype":"m.text"},"ts":1408135007000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't really have any opinions on it one way or the other","msgtype":"m.text"},"ts":1408135020000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"SamB: Incompatible with JS's naming conventions.","msgtype":"m.text"},"ts":1408135398000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Not conventions, syntax.","msgtype":"m.text"},"ts":1408135404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I realize it's not possible to use that in JS","msgtype":"m.text"},"ts":1408135415000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"not that something would be wise just because it was possible; I mean, I don't even know for sure if you can do that in emacs lisp, but anyone who tried it would probably be tarred and feathered if they weren't actually doing something scheme-related ...","msgtype":"m.text"},"ts":1408135603000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Unless elisp is crazier than I think, you can definitely do it.","msgtype":"m.text"},"ts":1408136028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lisp's naming rules are *extremely* loose.","msgtype":"m.text"},"ts":1408136036000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, the fact that I don't know is probably more an indication of how little desire there is to use such names in elisp than anything.  (Or of how bad my memory is.)","msgtype":"m.text"},"ts":1408136147000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Also note that I mean w/o escaping; I believe you can have any character in an elisp symbol name if you escape it properly ...","msgtype":"m.text"},"ts":1408136219000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"where \"any character\" most likely includes a great deal more possible codepoints than Unicode actually allows (even if I only know of 128 extra codepoints that anyone actually *uses* for anything)","msgtype":"m.text"},"ts":1408136425000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Without escaping, you can pretty much any character but space, (), and the handful of chars claimed by reader macros (single and double quote, backtick, comma, hash).","msgtype":"m.text"},"ts":1408136944000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think you a verb.","msgtype":"m.text"},"ts":1408137003000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"except AFAIK, elisp hasn't reader macros, so they're really just handled specially by the reader","msgtype":"m.text"},"ts":1408137006000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"  import styles from \"foo.html#foo\";","msgtype":"m.text"},"ts":1408137240000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what should that do?","msgtype":"m.text"},"ts":1408137242000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"import the HTML import and ignore the #foo?","msgtype":"m.text"},"ts":1408137251000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should the #foo be in the name passed to the registry?","msgtype":"m.text"},"ts":1408137258000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should it throw?","msgtype":"m.text"},"ts":1408137262000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Is that assuming that the <link rel=import id=foo> has some lazyloading attribute set on it?","msgtype":"m.text"},"ts":1408137438000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's assuming no <link rel=import> at all","msgtype":"m.text"},"ts":1408137464000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"though it's interesting to wonder how it would differ if you did have one, true","msgtype":"m.text"},"ts":1408137481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh! It's paying attention to the .html on the filename and assuming it's an HTML Import?","msgtype":"m.text"},"ts":1408137494000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i was expecting to base it on the returned MIME type","msgtype":"m.text"},"ts":1408137722000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but that's not really the part of this i was worried about in asking my question :-)","msgtype":"m.text"},"ts":1408137736000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: perhaps it should just be like \"um, dunno what that fragment is for\" in the log ;-P","msgtype":"m.text"},"ts":1408137878000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and end up doing nothing","msgtype":"m.text"},"ts":1408137890000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie_: I'm just gathering context - you didn't supply much in your question. ^_^","msgtype":"m.text"},"ts":1408137938000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, so, through some mechanism you know the import is an HTML page.","msgtype":"m.text"},"ts":1408137959000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And you've got a hash into the page.","msgtype":"m.text"},"ts":1408137973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think you should either (a) ignore the hash, and just import the HTML, or (b) import the HTML, keyed to the hashless URL, then look into the imported document, and if there's an element with id=foo that defines something importable, import *that*, and return it.","msgtype":"m.text"},"ts":1408138057000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess key it to both the hashed url and, if it lives on another url in the page, that url as well.","msgtype":"m.text"},"ts":1408138078000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah ES6 modules don't support that at all","msgtype":"m.text"},"ts":1408138095000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"noramlize returns one url","msgtype":"m.text"},"ts":1408138105000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's all you get :-)","msgtype":"m.text"},"ts":1408138107000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"not even a url in fact","msgtype":"m.text"},"ts":1408138112000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"a \"name\"","msgtype":"m.text"},"ts":1408138117000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Really?  Python modules do.  You can nest modules and seek into them with an import statement.","msgtype":"m.text"},"ts":1408138117000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not sure what that means","msgtype":"m.text"},"ts":1408138142000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nest modules?","msgtype":"m.text"},"ts":1408138144000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"A python module can contain submodules.  Something importing the top-level module can also explicitly import the submodules.","msgtype":"m.text"},"ts":1408138167000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"import foo.bar as bar, or whatever.","msgtype":"m.text"},"ts":1408138178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`from foo import bar`, imports the \"bar\" module inside of the \"foo\" module.","msgtype":"m.text"},"ts":1408138213000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or `from foo.bar import baz`, imports \"baz\" from inside \"bar\" from inside \"foo\".","msgtype":"m.text"},"ts":1408138231000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah there's no submodules in ES6","msgtype":"m.text"},"ts":1408138290000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"there's explicit and default imports","msgtype":"m.text"},"ts":1408138298000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or exports, i guess","msgtype":"m.text"},"ts":1408138305000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hrm.","msgtype":"m.text"},"ts":1408138308000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, all the web stuff you're dealing with is basically nested modules.","msgtype":"m.text"},"ts":1408138324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: Oh, note thought that Python nested modules *are* imported by default if you do just the top-level one.","msgtype":"m.text"},"ts":1408138960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you've got the nesting structure foo->bar->baz, like I had above, and you want to get at a qux() method in the baz module:","msgtype":"m.text"},"ts":1408138981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`import foo; foo.bar.baz.qux()` or `from foo.bar.baz import qux; qux()` are equivalent.","msgtype":"m.text"},"ts":1408139024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how are these submodules themselves authored?","msgtype":"m.text"},"ts":1408139085000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(just out of interest)","msgtype":"m.text"},"ts":1408139088000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Just nested folders, basically.","msgtype":"m.text"},"ts":1408139098000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A python module is just a folder. I think a __init__.py file is needed in the folder?  I'm not totally sure.","msgtype":"m.text"},"ts":1408139173000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh!","msgtype":"m.text"},"ts":1408139283000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i thought you meant an actual module file","msgtype":"m.text"},"ts":1408139289000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1408139306000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"like, foo.py containing two modules","msgtype":"m.text"},"ts":1408139363000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if you just meant different files, then sure, ES6 does that","msgtype":"m.text"},"ts":1408139375000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ah, nah, can't do that.  But the foo folder that defines the \"foo\" module can contain subfolders that are submodules.","msgtype":"m.text"},"ts":1408139396000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, web tech can indeed nest multiple \"modules\" in one file.","msgtype":"m.text"},"ts":1408139420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"html can, yeah","msgtype":"m.text"},"ts":1408139454000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"es6 itself can't","msgtype":"m.text"},"ts":1408139457000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1408139461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"though that's an interesting point","msgtype":"m.text"},"ts":1408139473000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"So you're gonna need to have them extend the system if you want to use it for this stuff.","msgtype":"m.text"},"ts":1408139476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you have an html import with <script type=module id=a>","msgtype":"m.text"},"ts":1408139484000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"how can another import (or the main doc) import that module?","msgtype":"m.text"},"ts":1408139499000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guess we need to import foo.html#a","msgtype":"m.text"},"ts":1408139505000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1408139510000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what a mess","msgtype":"m.text"},"ts":1408139515000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"But this syntax doesn't nest further. :/","msgtype":"m.text"},"ts":1408139518000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why would you need to nest further?","msgtype":"m.text"},"ts":1408139532000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"foo.html#a#b (to get the <script type=module id=b> inside the <link rel=import id=a>)","msgtype":"m.text"},"ts":1408139539000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rel=import imports into the outermost doc","msgtype":"m.text"},"ts":1408139555000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so you'd just do bar.html#b","msgtype":"m.text"},"ts":1408139559000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ah, kk.","msgtype":"m.text"},"ts":1408139564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And CSS imports aren't individually addressable in any way, so they don't need to worry about anything.","msgtype":"m.text"},"ts":1408139580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: Hm, no, still a problem.  HTML imports import into the outermost doc, but that doesn't mean anything for their IDs, which are still scoped to their immediate containing doc.","msgtype":"m.text"},"ts":1408140025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can have a list of subimports that all contain a script module with the same id.","msgtype":"m.text"},"ts":1408140044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah but they'd have different filenames","msgtype":"m.text"},"ts":1408140162000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I mean that foo.html is an import, which contains three more imports with ids #a, #b, and #c, each of which contains a script module with id #d.","msgtype":"m.text"},"ts":1408140235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`import foo.html#a` will return the first nested import, but how do you get at the module?  Can't use `import foo.html#d`, since there are three of them with that id in the graph.","msgtype":"m.text"},"ts":1408140278000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the IDs of the subimports are irrelevant","msgtype":"m.text"},"ts":1408140513000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's their URLs that matter","msgtype":"m.text"},"ts":1408140522000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if #a is bar.html, then you do bar.html#d","msgtype":"m.text"},"ts":1408140530000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(the question, which i just mailed to es-d, is what happens if you do this before bar.html has been imported)","msgtype":"m.text"},"ts":1408140571000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ffff javascript in non-browsers","msgtype":"m.text"},"ts":1408142501000,"senderName":"zewt_","senderId":"zewt_@irc"},
{"content":{"body":"aftereffects javascript missing such esoteric things as Array.indexOf","msgtype":"m.text"},"ts":1408142523000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"https://gist.github.com/atk/1034425 is this guy making fun of me for having to polyfill indexOf by obfuscating his code; this is idiotic","msgtype":"m.text"},"ts":1408142727000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jesus christ: the slightly less obfuscated one is totally broken, only the fully-badly-obfuscated one below it works","msgtype":"m.text"},"ts":1408143191000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"how hard can indexOf possibly be to shim","msgtype":"m.text"},"ts":1408143455000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i figured it would be faster to google and copy and paste, but clearly i was wrong","msgtype":"m.text"},"ts":1408143707000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ended up just doing it myself","msgtype":"m.text"},"ts":1408143711000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's bizarre that this environment has [].join, but not [].indexOf","msgtype":"m.text"},"ts":1408143762000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah and where is String.prototype.tok, right?","msgtype":"m.text"},"ts":1408143890000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"...nobody wants strtok? ._.","msgtype":"m.text"},"ts":1408143906000,"senderName":"caitp","senderId":"caitp@irc"}
]