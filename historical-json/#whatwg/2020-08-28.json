[
{"content":{"body":"annevk: so the reason wattsi doesn’t report an error for <h5 id=\"image-map-processing-model\"><span id=\"processing-model\"></span>Processing model</h5> but does for the following:","msgtype":"m.text"},"ts":1598590265000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"  <h5 id=\"rel-alternate\"><span id=\"link-type-alternate\"></span>Link type \"<dfn data-export=\"\"","msgtype":"m.text"},"ts":1598590270000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"  data-dfn-for=\"link/rel,a/rel,area/rel\" data-dfn-type=\"attr-value\"><code","msgtype":"m.text"},"ts":1598590273000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"  data-x=\"rel-alternate\">alternate</code></dfn>\"</h5>","msgtype":"m.text"},"ts":1598590275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"... is that the second case has not only that <span id=\"link-type-alternate\"></span> but also the <dfn><code data-x=\"rel-alternate\">…","msgtype":"m.text"},"ts":1598590360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which ends up as two IDs in the generated output","msgtype":"m.text"},"ts":1598590392000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and in that ase, wattsi is not reporting the <span id=\"link-type-alternate\"></span> as an error — instead it’s reporting the error when it gets to that <dfn><code data-x=\"rel-alternate\">","msgtype":"m.text"},"ts":1598590447000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1598590470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"given all that, what do you want to do in this case?","msgtype":"m.text"},"ts":1598590512000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe you want it so that we report the error for that <dfn><code data-x=\"rel-alternate\"> *only* if the preceding ID-ed element — the <span id=\"link-type-alternate\"></span> — is non-empty?","msgtype":"m.text"},"ts":1598590586000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah that sounds reasonable","msgtype":"m.text"},"ts":1598590633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well that turns out to be relatively hard, I think","msgtype":"m.text"},"ts":1598591711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unless there’s something I am missing","msgtype":"m.text"},"ts":1598591729000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...because in the current code, there is nothing that’s saving any state about each node","msgtype":"m.text"},"ts":1598591756000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1598591761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well now that I say that out loud, I realize it’s obviously wrong","msgtype":"m.text"},"ts":1598591781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...because it is at least saving the state information “this heading already has a span or dfn that results in an ID”","msgtype":"m.text"},"ts":1598591840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: also maybe you already know that, but I think the purpose of that code is solely for the TOC, and what to select for the markup output for that heading in the TOC","msgtype":"m.text"},"ts":1598592730000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I’ll get a patch together today","msgtype":"m.text"},"ts":1598592755000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: so I am back to realizing is that current code intentionally does not error for <h5 id=\"rel-alternate\"><span id=\"link-type-alternate\">SOME TEXT CONTENT</span>Link type \"<dfn data-export=\"\" — but does for <h5 id=\"rel-alternate\"><span id=\"link-type-alternate\"></span>Link type \"<dfn data-export=\"\"","msgtype":"m.text"},"ts":1598596257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, if the “nested” span or dfn has text content, no error; but if it has not text content, error","msgtype":"m.text"},"ts":1598596316000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s not an oversight or mistake; all the relevant code there was intentionally written to handle those cases in that way","msgtype":"m.text"},"ts":1598596363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I do not understand why","msgtype":"m.text"},"ts":1598596373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but what I was suggesting earlier above is effectively the exact opposite of what the current code was intentionally written to do","msgtype":"m.text"},"ts":1598596409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"therefore it seems pretty odd to just completely flip it opposite","msgtype":"m.text"},"ts":1598596451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what seems less odd is to just drop the one condition/check that’s actually causing the error to be reported","msgtype":"m.text"},"ts":1598596511000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, what I suggested in https://github.com/whatwg/html/pull/5855#issuecomment-679079688","msgtype":"m.text"},"ts":1598596518000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in testing locally, doing that causes the rendered output for that heading in both the ToC and spec body to be exactly the same","msgtype":"m.text"},"ts":1598596576000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the target of the href remains the same","msgtype":"m.text"},"ts":1598596595000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"too","msgtype":"m.text"},"ts":1598596601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the worry is that if we drop the check, there’s some other real problem case that check was (I guess) intended to catch that it won’t catch any more in the future","msgtype":"m.text"},"ts":1598596694000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and without having a regression test for that, it’s just kind of an act of faith that it’s not gonna be breaking something in the output later in some subtle/surprising/hard-to-catch way","msgtype":"m.text"},"ts":1598596785000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but in spite of that I think we should just go ahead and drop the check","msgtype":"m.text"},"ts":1598596812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because it’s more important to unbreak the build than it is to worry about some potential problem that many not be a real problem for us in practice anyway","msgtype":"m.text"},"ts":1598596869000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that sounds reasonable; there's also some magic with headings and <dfn> which is why I didn't put the ID on the <dfn>, but we could do that too as an alternative","msgtype":"m.text"},"ts":1598598358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: note that master is not broken so it's not breaking the build really","msgtype":"m.text"},"ts":1598598383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well true (about not breaking master)","msgtype":"m.text"},"ts":1598598402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as the alternative, I leave that up to you — but for now, I went ahead and raised https://github.com/whatwg/wattsi/pull/133 for just dropping the error","msgtype":"m.text"},"ts":1598598468000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"domfarolino: hey, are you around by any chance?","msgtype":"m.text"},"ts":1598617772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you're still in Tokyo I guess it's not the best time...","msgtype":"m.text"},"ts":1598617799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in Bikeshed, is there a literal `event` definition type?","msgtype":"m.text"},"ts":1598625210000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don’t see it listed at https://tabatkins.github.io/bikeshed/#dfn-types","msgtype":"m.text"},"ts":1598625230000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I feel like I've seen it used...","msgtype":"m.text"},"ts":1598625239000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1598625261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah wait, I guess it’s covered under https://tabatkins.github.io/bikeshed/#dfn-for","msgtype":"m.text"},"ts":1598625293000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> \"attribute\", \"constructor\", \"method\", \"const\", \"event\", \"serializer\", \"stringifier\", and \"iterator\" definitions must define what interface they’re relative to.","msgtype":"m.text"},"ts":1598625301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's still missing from that first list","msgtype":"m.text"},"ts":1598625348000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, https://github.com/tabatkins/bikeshed/blob/master/bikeshed/config/dfnTypes.py#L20","msgtype":"m.text"},"ts":1598625353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1598625418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aha!","msgtype":"m.text"},"ts":1598625432000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1598625437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"always trust the actual code","msgtype":"m.text"},"ts":1598625447000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: do you know who deals with popups at Chrome? With https://github.com/whatwg/html/issues/5872 we have the opportunity to take some more special cases away or at least finally formalize how this legacy system ought to work","msgtype":"m.text"},"ts":1598626545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: arai already wrote a pseudo-spec and I think they'd be willing to turn that into something more concrete","msgtype":"m.text"},"ts":1598626603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll ask around...","msgtype":"m.text"},"ts":1598626634000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, I was expecting that it might be tricky, but I'll remain hopeful for now 😊","msgtype":"m.text"},"ts":1598626726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hey, am around now","msgtype":"m.text"},"ts":1598629520000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"My location is complicated lol. Consider me in pacific time","msgtype":"m.text"},"ts":1598629551000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"concludes domfarolino has a very precisely known velocity","msgtype":"m.emote"},"ts":1598629665000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"domfarolino: was wondering about default referrer policy and wpt as we have some patches for that; and also the state of it as the discussion feels unresolved","msgtype":"m.text"},"ts":1598632906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I still need to review the PR. I think everyone's aligned on changing the default policy. Going further than that is I think a point of further discussion?","msgtype":"m.text"},"ts":1598632947000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: oh are there WPTs up to change the default?","msgtype":"m.text"},"ts":1598632955000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: well the discussion is in the PR; and yeah, we have some patches in Bugzilla for wpt","msgtype":"m.text"},"ts":1598645879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think a lot of the discussion was also in the PrivacyCG thread.","msgtype":"m.text"},"ts":1598645961000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Cool, if you need me to review any WPTs let me know","msgtype":"m.text"},"ts":1598645970000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Seeing this in Bikeshed: The following refs show up multiple times in their spec, in a way that Bikeshed can't distinguish between. Either create a manual link, or ask the spec maintainer to add disambiguating attributes (usually a for='' attribute to all of them)","msgtype":"m.text"},"ts":1598651990000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"spec:html; type:dfn; for:/; text:browsing context","msgtype":"m.text"},"ts":1598651992000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"the two definitions are apparently https://html.spec.whatwg.org/multipage/browsers.html#browsing-context and https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigation-params-browsing-context","msgtype":"m.text"},"ts":1598652005000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I imagine that latter one should have a for=''","msgtype":"m.text"},"ts":1598652524000,"senderName":"hober","senderId":"hober@irc"}
]