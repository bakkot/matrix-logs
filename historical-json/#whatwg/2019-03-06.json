[
{"content":{"body":"is this a good place to bikeshed about whether we should use the term \"module script\" for how we want to generalize to JSON module scripts, CSS module scripts, etc or something else? I share Domenic's uncertainty, but I also can't think of a better name. I'm thinking \"module script\" for the whole category, and then within that, JavaScript module script, WebAssembly module script, JSON module script.","msgtype":"m.text"},"ts":1551880113000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"This is a good place.","msgtype":"m.text"},"ts":1551880133000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"re https://github.com/whatwg/html/pull/4407","msgtype":"m.text"},"ts":1551880137000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Terminology wise I think module script is good","msgtype":"m.text"},"ts":1551880138000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm a little uncertain infrastructure-wise whether \"JSON module script\" should be a type of the \"script\" struct","msgtype":"m.text"},"ts":1551880169000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't think anyone uses the fetch options or base URL, but we definitely do need a settings object as you suggested","msgtype":"m.text"},"ts":1551880187000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"But probably it would end up poorly to try to have two separate things that could be in the module map/returned by \"fetch a module script\"/etc.","msgtype":"m.text"},"ts":1551880189000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"can we say, JSON module scripts and CSS module scripts are script modules which always have fetch options, base URL, and error to rethrow null?","msgtype":"m.text"},"ts":1551880251000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"*are script modules which...","msgtype":"m.text"},"ts":1551880264000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Yeah I was thinking that too","msgtype":"m.text"},"ts":1551880267000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or we could introduce a new thing, \"JavaScript module script\", which has those three fields, and leave them out of the base \"script\" struct.","msgtype":"m.text"},"ts":1551880299000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But that refactoring is probably too early","msgtype":"m.text"},"ts":1551880303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, then we'd have to re-add them to classic scripts, right?","msgtype":"m.text"},"ts":1551880310000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"anyway, the rename idea was a really good once, since it lets us introduce a general \"module script\" concept, which should be applied some of the time, and not other times","msgtype":"m.text"},"ts":1551880356000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Right, the hierarchy would be script -> {JSON module script, JavaScript script -> { JavaScript module script, classic script } } or something like that. I think that works?","msgtype":"m.text"},"ts":1551880394000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, then there's some things that are in common to all module scripts","msgtype":"m.text"},"ts":1551880417000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"at least algorithm-wise, maybe not storage wise","msgtype":"m.text"},"ts":1551880439000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Ah I see, yeah, I was only looking at storage wise","msgtype":"m.text"},"ts":1551880451000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anyway, thanks for the detailed review; I think it makes sense from here","msgtype":"m.text"},"ts":1551880462000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Cool","msgtype":"m.text"},"ts":1551880467000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Perhaps we should drop \"script\" from \"module script\"?","msgtype":"m.text"},"ts":1551880758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the reasoning still stands; they're still introduced through <script> elements","msgtype":"m.text"},"ts":1551880774000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And then we'd have \"script\" and \"modules\"","msgtype":"m.text"},"ts":1551880795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At some point the <script> element is quite far removed though. E.g., a service worker JavaScript module","msgtype":"m.text"},"ts":1551880823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We'd also need a term for the unified concept, since several places in the spec operate on (what are currently called) \"scripts\" generically","msgtype":"m.text"},"ts":1551880824000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"script or module\" (I realize this is not great given ECMAScript)","msgtype":"m.text"},"ts":1551880838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It feels weird to define a struct named with a space :)","msgtype":"m.text"},"ts":1551880871000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I could also live with \"script\" -> { \"module\" -> { \"JavaScript module\", ... }, \"classic script\" }","msgtype":"m.text"},"ts":1551880958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I just find retaining the script suffix clearer in that case","msgtype":"m.text"},"ts":1551880993000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The \"script\" suffix feels very redundant and somewhat wrong in the non-JavaScript cases","msgtype":"m.text"},"ts":1551880997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also minor nit: probably \"style sheet\" rather than CSS given precedent? Or maybe precedent is bad here...","msgtype":"m.text"},"ts":1551881097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interesting question","msgtype":"m.text"},"ts":1551881166000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"module document\" for JSON, \"module sheet\" for CSS? no, that's a joke","msgtype":"m.text"},"ts":1551881777000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"yeah, looks like we should be talking about \"style sheet modules\"","msgtype":"m.text"},"ts":1551881856000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"or \"style sheet module scripts\"","msgtype":"m.text"},"ts":1551881896000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"unfortunately, if we use \"CSS modules\" we run into a naming ambiguity...","msgtype":"m.text"},"ts":1551881923000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"We do?","msgtype":"m.text"},"ts":1551881997000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"referring to those CSS specs","msgtype":"m.text"},"ts":1551882123000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Oh lol","msgtype":"m.text"},"ts":1551882192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wouldn't worry too much about a naming collision with spec terminology, but \"style module\" seems good","msgtype":"m.text"},"ts":1551884762000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Domenic: I haven't really bothered to setup a package thing locally yet to be able to install new Python modules","msgtype":"m.text"},"ts":1551884944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, well, I can try to do so myself I suppose to review","msgtype":"m.text"},"ts":1551884974000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that'd be great, thanks; I did try in with Github and their Markdown would mess up links coming after explicit markup","msgtype":"m.text"},"ts":1551885009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, I wonder if it's even worth converting to Markdown then, if it won't display on GitHub properly...","msgtype":"m.text"},"ts":1551885042000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: GitHub Markdown did show I got the indentation correct for multiple paragraphs in a list item, though I don't know how stable that notation is across versions","msgtype":"m.text"},"ts":1551885048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that's a fair point, or maybe we should do the classes differently somehow","msgtype":"m.text"},"ts":1551885080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/sg/blob/ae3d8b6ca82ec3013b7eb29c085800cd83b1b01b/Working%20Mode.md","msgtype":"m.text"},"ts":1551885125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah right, yeah, I think per CommonMark if you're inside a HTML block you can't use Markdown","msgtype":"m.text"},"ts":1551885152000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Although the rules might be different for `<p class=\"note\">\\n ... stuff  \\n</p>` vs. `<p class=\"note\"> ... stuff</p>`","msgtype":"m.text"},"ts":1551885176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I want to get to https://github.com/whatwg/sg/issues/78 though I suppose I could give that a go in parallel given how far along we are now","msgtype":"m.text"},"ts":1551885287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But not today","msgtype":"m.text"},"ts":1551885291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to confirm, window.close() queues a task to discard in Chrome and Safari too?","msgtype":"m.text"},"ts":1551897146000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, they fail due to poor global obj impl","msgtype":"m.text"},"ts":1551897177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was hoping they might discard synchronously","msgtype":"m.text"},"ts":1551897191000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for which there are bugs on file","msgtype":"m.text"},"ts":1551897197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Safari does not have the is closing flag","msgtype":"m.text"},"ts":1551897217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or boolean","msgtype":"m.text"},"ts":1551897229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but nobody does the simple thing, I guess","msgtype":"m.text"},"ts":1551897243000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But it seemed safer to follow others for that","msgtype":"m.text"},"ts":1551897250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It’s rather silly given nested bcs, but yeah","msgtype":"m.text"},"ts":1551897305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i keep failing to think of the right search terms for the relevant html issue on github; does anyone remember where we ended up with the \"label of the enter key on a virtual keyboard during text input\" thing?","msgtype":"m.text"},"ts":1551903225000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"or just a link to the issue","msgtype":"m.text"},"ts":1551903228000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"oh, enterkeyhint. nevermind.","msgtype":"m.text"},"ts":1551903336000,"senderName":"hober","senderId":"hober@irc"}
]