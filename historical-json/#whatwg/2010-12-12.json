[
{"content":{"body":"is bigendian 0xabcd or 0xcdab?","msgtype":"m.text"},"ts":1292112060000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I can honestly never remember","msgtype":"m.text"},"ts":1292112061000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"It's the one that major architectures aren't, that's the relevant bit.","msgtype":"m.text"},"ts":1292112062000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But as it happens, it's also the one that makes sense.  I.e., 0xabcd is stored with first byte 0xab and second byte 0xcd.","msgtype":"m.text"},"ts":1292112063000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"it's the one that makes sense to people reading it","msgtype":"m.text"},"ts":1292112120000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"however it makes pointer conversion a little harrier","msgtype":"m.text"},"ts":1292112121000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"How so?","msgtype":"m.text"},"ts":1292112122000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"since converting between byte and int in little endian does not change the one you're reading","msgtype":"m.text"},"ts":1292112123000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Well, if the upper bytes happen to all be zeros, I guess.","msgtype":"m.text"},"ts":1292112180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1292112181000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"But that seems like an edge case.","msgtype":"m.text"},"ts":1292112182000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if I have a value stored as |12|34|56|78|","msgtype":"m.text"},"ts":1292112183000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"the pointer is to the first byte","msgtype":"m.text"},"ts":1292112184000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"if I want to look at it as a short","msgtype":"m.text"},"ts":1292112185000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I have to add 2 to the pointer","msgtype":"m.text"},"ts":1292112186000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"You mean if you want to cast it to a short, truncating it.","msgtype":"m.text"},"ts":1292112240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"not necessarily truncating it","msgtype":"m.text"},"ts":1292112241000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"On the other hand, if you want to (for instance) convert an array of words to a hexadecimal string, you can't just cast to a string of chars and do it byte by byte (supposing you want to print it big-endian, which would be normal).","msgtype":"m.text"},"ts":1292112300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's actually come up for me in the last few days.","msgtype":"m.text"},"ts":1292112360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Yay for OpenCL not having most C standard library functions)","msgtype":"m.text"},"ts":1292112361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"how often do you really need to that, though?","msgtype":"m.text"},"ts":1292112480000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"But anyway, big-endian is going to be less efficient on all the common web-browsing machines out there, unless I'm missing something.","msgtype":"m.text"},"ts":1292112481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Regardless of how useful one is relative to the other.","msgtype":"m.text"},"ts":1292112482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So little-endian would make a lot more sense as a default.","msgtype":"m.text"},"ts":1292112540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"printf(\"%x\\n\", val); prints out a hex string really well","msgtype":"m.text"},"ts":1292112541000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Except printf() and sprintf() don't exist in OpenCL, which is what I've been doing the last few days.  :)","msgtype":"m.text"},"ts":1292112542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, printf() exists if you run it on the CPU, but that kind of blows your performance out the window.","msgtype":"m.text"},"ts":1292112543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess I could have just copied the raw bytes to an output array and then formatted them on the host side.","msgtype":"m.text"},"ts":1292112840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh well, maybe next time.","msgtype":"m.text"},"ts":1292112841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: big-endian is network byte order, so it makes sense to be the default","msgtype":"m.text"},"ts":1292113200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, network byte order in what protocol?","msgtype":"m.text"},"ts":1292113201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"pretty much everything, but tcp, ip, etc","msgtype":"m.text"},"ts":1292113202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me rephrase that","msgtype":"m.text"},"ts":1292113260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, but what relevance does that have to typed arrays?","msgtype":"m.text"},"ts":1292113261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"tcp, ip, and pretty much everything\"","msgtype":"m.text"},"ts":1292113262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's not likely to contain protocol-level data.","msgtype":"m.text"},"ts":1292113263000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's likely to contain GPU data, and my NVIDIA GPU appears to be little-endian (at least for the purposes of OpenCL).","msgtype":"m.text"},"ts":1292113264000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well presumably the data you're manipulating is coming from the network or going to the network... i'm assuming the api doesn't expose the platform's byte order","msgtype":"m.text"},"ts":1292113265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since that would be crazy","msgtype":"m.text"},"ts":1292113266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in terms of getting interoperability","msgtype":"m.text"},"ts":1292113320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The question is being able to implement the array efficiently on native hardware.  If you have a typed array of length 1024, with one uint32 view and one uint8 view, then if the endianness of the views matches that of the host architecture, you can implement that at no performance cost.","msgtype":"m.text"},"ts":1292113321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But if they don't match, then you'd presumably have to do extra conversions on access.","msgtype":"m.text"},"ts":1292113380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't know if that's a big deal in practice, admittedly.","msgtype":"m.text"},"ts":1292113381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well it's the web, you want the same code to work the same on all architectures","msgtype":"m.text"},"ts":1292113440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so either way, someone's gonna be screwed","msgtype":"m.text"},"ts":1292113500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems like having the api default to the network byte order makes sense","msgtype":"m.text"},"ts":1292113501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If having the byte order match the architecture makes sense for efficiency, then you should make it little-endian to match virtually every web-enabled device out there.","msgtype":"m.text"},"ts":1292113560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The Portable NaCl approach to portability seems to be to declare that all the platforms anyone cares about are little-endian so that's all it'll support","msgtype":"m.text"},"ts":1292113561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The default may as well be efficient.","msgtype":"m.text"},"ts":1292113562000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That sounds sensible.","msgtype":"m.text"},"ts":1292113563000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least the typed arrays don't appear to stop you from supporting wrong-endian platforms if you care enough","msgtype":"m.text"},"ts":1292113564000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but it's not exactly great :-(","msgtype":"m.text"},"ts":1292113620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is that because LLVM doesn't support big-endian, or because the authors of PNaCl didn't want to bother making their code endian-independent?","msgtype":"m.text"},"ts":1292113800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie, bzbarsky said in a November 15 whatwg e-mail that typed array views depends on the endianness of your hardware, but it looks like either they fixed it since then or he was wrong or I'm misreading the spec.","msgtype":"m.text"},"ts":1292113920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or possibly more than one of those.","msgtype":"m.text"},"ts":1292113921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if it varies based on the architecture then that's a disaster waiting to happen","msgtype":"m.text"},"ts":1292113980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's more or less what I said.","msgtype":"m.text"},"ts":1292113981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Have I mentioned that LLVM has the coolest logo of any open-source project I know of?","msgtype":"m.text"},"ts":1292114040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The LLVM bitcode format isn't portable across architectures (by design), so it looks like PNaCl basically defines its own architecture (32-bit, 1GB address space, little-endian) which everyone compiles to","msgtype":"m.text"},"ts":1292114041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"notes that Firefox freezes for several seconds when he visits <http://upload.wikimedia.org/wikipedia/en/4/4c/LLVM_Logo.svg>, while Chrome renders it instantly","msgtype":"m.emote"},"ts":1292114100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"and assumes that that's sufficiently compatible with the user's physical architecure that it's able to compile down to machine code","msgtype":"m.text"},"ts":1292114101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1292114102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: scrolling is bad in both","msgtype":"m.text"},"ts":1292114160000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"At least they've recognised that x86+x86_64+ARM machine code is not sufficiently portable for the web","msgtype":"m.text"},"ts":1292114161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe they'll eventually develop a Really Portable Native Client system which involves compiling your code into JavaScript so it'll work anywhere and will even run in legacy browsers","msgtype":"m.text"},"ts":1292114280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: typed arrays expose byte order","msgtype":"m.text"},"ts":1292115120000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"of the platform?","msgtype":"m.text"},"ts":1292115121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the same JS will act differently on different computers?","msgtype":"m.text"},"ts":1292115122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's not good and we're not going to standardize typed arrays in Ecma","msgtype":"m.text"},"ts":1292116140000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"Hixie: we hope to supersede them with http://wiki.ecmascript.org/doku.php?id=strawman:binary_data","msgtype":"m.text"},"ts":1292116200000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"which does not expose byte order via aliasing \"views\" of a single buffer","msgtype":"m.text"},"ts":1292116201000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"ah, that seems much better","msgtype":"m.text"},"ts":1292116202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: by the time we got in the loop, the WebGL people had pushed to their 1.0, or near it -- it was out of the lab","msgtype":"m.text"},"ts":1292116260000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"they really wanted arrays of structs, structs with member arrays, etc., using packed machine representations","msgtype":"m.text"},"ts":1292116261000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"yeah they seem to be moving kinda fast and in without much public input","msgtype":"m.text"},"ts":1292116262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/in//","msgtype":"m.text"},"ts":1292116263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but they couldn't figure out how to do that, so they fell back on fortran .common !","msgtype":"m.text"},"ts":1292116264000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"It's been over 3 years since the first public release of a web GL implementation, so it doesn't seem like they've been rushing through it extremely fast","msgtype":"m.text"},"ts":1292116800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"brendaneich: i just came into say hi, and that i'm a big fan","msgtype":"m.text"},"ts":1292116920000,"senderName":"l4rk","senderId":"l4rk@irc"},
{"content":{"body":"anybody know of a non-minified example of a camera in webgl?","msgtype":"m.text"},"ts":1292116921000,"senderName":"tmzt","senderId":"tmzt@irc"},
{"content":{"body":"brendaneich what about my question?","msgtype":"m.text"},"ts":1292117400000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"apropos, there is a 3d remake of Gulliver's Travels coming out","msgtype":"m.text"},"ts":1292118300000,"senderName":"tmzt","senderId":"tmzt@irc"},
{"content":{"body":"heh http://wiki.ecmascript.org/doku.php?id=strawman:private_names","msgtype":"m.text"},"ts":1292118720000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"hsivonen: you have a typo in a method name in the htmlparser source","msgtype":"m.text"},"ts":1292134980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://hg.mozilla.org/projects/htmlparser/file/c1eb6d6f5c49/src/nu/validator/htmlparser/sax/HtmlParser.java#l538","msgtype":"m.text"},"ts":1292134981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"setTransitionHander should be setTransitionHandler","msgtype":"m.text"},"ts":1292135040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Are the videos from webgl camp available in a non-flash format?","msgtype":"m.text"},"ts":1292137200000,"senderName":"nielsle","senderId":"nielsle@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1292138400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the perils of super-smart autocomplete","msgtype":"m.text"},"ts":1292140140000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hsivonen: I ran into another problem with the parser","msgtype":"m.text"},"ts":1292149440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if in my code I do:","msgtype":"m.text"},"ts":1292149500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"HtmlParser parser = new HtmlParser();","msgtype":"m.text"},"ts":1292149501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and then Locator locator = parser.getDocumentLocator();","msgtype":"m.text"},"ts":1292149502000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"… I get a null pointer exception when I try to compile it","msgtype":"m.text"},"ts":1292149560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the reason being that that method just does \"return driver.getDocumentLocator()\"","msgtype":"m.text"},"ts":1292149620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but driver is always going to be null if you call getDocumentLocator() just after instantiating a parser","msgtype":"m.text"},"ts":1292149740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if I take you private","msgtype":"m.text"},"ts":1292149800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if I take the private lazyInit() method there and make it public in the source","msgtype":"m.text"},"ts":1292149801000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is what seems to be the code that actually initializes the driver","msgtype":"m.text"},"ts":1292149860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I call that from my code before calling parser.getDocumentLocator()","msgtype":"m.text"},"ts":1292149920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then it seems to work as expected","msgtype":"m.text"},"ts":1292149921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least, I don't get the null pointer exception","msgtype":"m.text"},"ts":1292149922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how can I find out since what time a certain API is included in the HTML5 standard?","msgtype":"m.text"},"ts":1292156760000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"For example, I would like to know this about web workers","msgtype":"m.text"},"ts":1292156761000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"You could check the svn history, I guess","msgtype":"m.text"},"ts":1292156820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"where can i?","msgtype":"m.text"},"ts":1292156940000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"where can i check*","msgtype":"m.text"},"ts":1292156941000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: there's a mercurial mirror of the svn repo here:","msgtype":"m.text"},"ts":1292157000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://bitbucket.org/validator/html-spec","msgtype":"m.text"},"ts":1292157001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I don't think it has any useful change-history search feature","msgtype":"m.text"},"ts":1292157180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so you probably want to check out the svn sources","msgtype":"m.text"},"ts":1292157181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"svn checkout http://svn.whatwg.org/webapps/","msgtype":"m.text"},"ts":1292157182000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then do \"svn log\" in your workspace","msgtype":"m.text"},"ts":1292157240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh but you want to know about workers","msgtype":"m.text"},"ts":1292157241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"workers started out as separate spec","msgtype":"m.text"},"ts":1292157300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1292157301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://svn.whatwg.org/webworkers/","msgtype":"m.text"},"ts":1292157302000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"r1 | ianh | 2008-07-09 19:52:54 +0900 (Wed, 09 Jul 2008) | 1 line","msgtype":"m.text"},"ts":1292157420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"[] (0) Initial checkin (skeleton)","msgtype":"m.text"},"ts":1292157421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1292157480000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MikeSmith: oh, but if it's not part of the htlm5 specification, how come so much people present it as in the html5 spec?","msgtype":"m.text"},"ts":1292157540000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"the spec normatively references it","msgtype":"m.text"},"ts":1292157541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1292157542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe it doesn't","msgtype":"m.text"},"ts":1292157600000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-workers/current-work/","msgtype":"m.text"},"ts":1292157601000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"but anyway people present all kinds of things as being part of html5","msgtype":"m.text"},"ts":1292157602000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm helding a small presentation in some days, and specifically i talk about what HTML5 can do for a web app (such as the CMS I develop some additions for)","msgtype":"m.text"},"ts":1292157660000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"and now I'm trying to filter what's most appropriate","msgtype":"m.text"},"ts":1292157661000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"I'm trying to give examples etc, but since the short duration of it (20 mins) i decided to just speak through the syntax changes  (why and for what important etc) and in the second 10 mins discuss the 5 (HTML5) APIs that I consider as most valueable potential addition to the CMS","msgtype":"m.text"},"ts":1292157720000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"sounds great","msgtype":"m.text"},"ts":1292157780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"20 minutes is not a lot of time for a presentation","msgtype":"m.text"},"ts":1292157781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So far, 1 part that is final to present, is Offline Webapps (localStorage, IndexedDB, App Cache)","msgtype":"m.text"},"ts":1292157782000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"actually 3 seperate APIs ","msgtype":"m.text"},"ts":1292157840000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1292157841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"WebWorkers is the 2nd thats final","msgtype":"m.text"},"ts":1292157842000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"and about the other 3 parts im still considering","msgtype":"m.text"},"ts":1292157843000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"i think contenteditable right?","msgtype":"m.text"},"ts":1292157844000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"it doesn't seem like 10 minutes is enough time to discuss 5 apis","msgtype":"m.text"},"ts":1292157845000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i was more thinking to limit the syntax changes to 4-5 minutes and then leave 15 mins for the apis","msgtype":"m.text"},"ts":1292157900000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"contenteditable would seem relevant","msgtype":"m.text"},"ts":1292157901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though i think the current interoperability of it is not great","msgtype":"m.text"},"ts":1292157960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I need to step away for a bit","msgtype":"m.text"},"ts":1292158020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"talk to you later","msgtype":"m.text"},"ts":1292158021000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok later","msgtype":"m.text"},"ts":1292158022000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ohlol. i need *rounded corners* in canvas 2d api %)","msgtype":"m.text"},"ts":1292158140000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"seems CanvasRenderingContext2D.prototype is supported in all modern UA.","msgtype":"m.text"},"ts":1292158380000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1292158381000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"MikeSmith: you're still there?","msgtype":"m.text"},"ts":1292162460000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: here now","msgtype":"m.text"},"ts":1292165040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ah ok","msgtype":"m.text"},"ts":1292167200000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"still now :p ?","msgtype":"m.text"},"ts":1292167201000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MikeSmith: well anyway, the APIs I like to list that make a positive difference to the CMS are now: Offline Webapps (localStorage, IndexedDB, App Cache), File API, Contenteditable, Drag & Drop","msgtype":"m.text"},"ts":1292168820000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"6 total, I think I'm going to list 10 total and then go into deeper detail on 3 or 5 (considering 10-15 mins is not long)","msgtype":"m.text"},"ts":1292168821000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"sounds good","msgtype":"m.text"},"ts":1292168822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you maybe have any idea for another 4 ?","msgtype":"m.text"},"ts":1292168823000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"for a modern CMS system improved by HTML5","msgtype":"m.text"},"ts":1292168880000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"drag and drop interoperability is also not great yet","msgtype":"m.text"},"ts":1292168940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MrWax, just do 5 -> I can't imagine a 15 minute talk explaining 10 APIs","msgtype":"m.text"},"ts":1292169000000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"variable: and then just go into deeper detail on those 5?","msgtype":"m.text"},"ts":1292169060000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, yes.","msgtype":"m.text"},"ts":1292169061000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"ok ","msgtype":"m.text"},"ts":1292169062000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"either that or do a top 10 - but don't go really deep on any of them","msgtype":"m.text"},"ts":1292169063000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"I don't think you have time to go into deep detail on anything in that amount of time","msgtype":"m.text"},"ts":1292169064000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yea thanks i think i might do this","msgtype":"m.text"},"ts":1292169120000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"yea 5 is even a lot if you want to go into deep detail","msgtype":"m.text"},"ts":1292169121000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"variable: but you think those 5 represent a good potential presentation about what HTML5 APIs can improve in our CMS ?","msgtype":"m.text"},"ts":1292169122000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"is not usually a fan of very short talks for this reason       ","msgtype":"m.emote"},"ts":1292169123000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"and localstorage and indexedDB are not strictly for offline apps only","msgtype":"m.text"},"ts":1292169124000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no, but for example a CMS indexedDB could store the page rigths etc in tables and link this to page contents right?","msgtype":"m.text"},"ts":1292169180000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, ContentEditable is a key one","msgtype":"m.text"},"ts":1292169181000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"i mean, this would improve the CMS remarkeable right? making it offline compatible","msgtype":"m.text"},"ts":1292169240000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, well - for offline editing - like google docs type things","msgtype":"m.text"},"ts":1292169300000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"variable: how you mean?","msgtype":"m.text"},"ts":1292169301000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"and drag & drop i ment, that now for our pages we use a lib extension called jsTree","msgtype":"m.text"},"ts":1292169360000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, the offline stuff isn't particularly useful for the display side of a CMS - but it is quite useful for the editing ","msgtype":"m.text"},"ts":1292169361000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"variable: sorry i might sound dumb, but can you explain a bit?","msgtype":"m.text"},"ts":1292169362000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, what are the offline APIs (indexedDB, localStorage, App Cache) useful for in a CMS? ","msgtype":"m.text"},"ts":1292169420000,"senderName":"variable","senderId":"variable@irc"},
{"content":{"body":"being able to work offline, have data stored in a more structured and efficient way than usually was possible with cookies, and being able to sync the data later","msgtype":"m.text"},"ts":1292169480000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, would be nice to cover http caching in their too, it's v underestimated and underconsidered by most dev's","msgtype":"m.text"},"ts":1292169780000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: you mean App Cache?","msgtype":"m.text"},"ts":1292169840000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"where you define which files should be cached","msgtype":"m.text"},"ts":1292169841000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"in addition to app cache, serving static templates, populating them via content editable then PUTting them back to the server as static documents, it's v nice for cms users and ultimately optimized for the network","msgtype":"m.text"},"ts":1292169900000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"localStorage for session stuff rather than using HTTP like it's stateful, indexeddb and app cache leveraged for offline usage etc etc","msgtype":"m.text"},"ts":1292169960000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: you mean so you avoid to upload/process anything but the text filled in through CE ?","msgtype":"m.text"},"ts":1292170080000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"yes, and if you use microdata/rdfa/data-* attributes in your templates you can have them entering the machine data (like product names and prices) right in to the template, then your server side apps just lifts the data right from the user-edited product view page as google rich snippets bot etc does.","msgtype":"m.text"},"ts":1292170140000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"effectively, CMS's are a thing of the past, you don't really need them any more, you can just edit an HTML document in browser and PUT it back to the server, hell even shopping baskets etc can all be client side in js now - server apps are needed far less than people think","msgtype":"m.text"},"ts":1292170200000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"yep ","msgtype":"m.text"},"ts":1292170201000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"but i think the conversion to this new style of content management won't go so fast i mean, look at how much companies edit their data through traditional CMS systems","msgtype":"m.text"},"ts":1292170260000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"so perhaps show how to make a blog/cms using HTML5 and no server side app (other than something to serve and save files)","msgtype":"m.text"},"ts":1292170261000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"I think this would require to much detail","msgtype":"m.text"},"ts":1292170262000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"I also have some other subjects to discuss, like syntax / markup (in the light of parsing by search engines, mobile devices etc) which also should take a me some min utes to explain","msgtype":"m.text"},"ts":1292170320000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"i don't.. just a static html page on the server, make the title and the article contenteditable, local storage to cache the draft, then ajax to PUT it back","msgtype":"m.text"},"ts":1292170321000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"thanks a lot for your input btw","msgtype":"m.text"},"ts":1292170322000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1292170323000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"said ajax, yuck - meant xhr (& cors...)","msgtype":"m.emote"},"ts":1292170324000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"I mean, its maybe something to optinally offer, but the essence now is presenting the above","msgtype":"m.text"},"ts":1292170500000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"File API pretty much speaks for itself and is not so hard to explain i think","msgtype":"m.text"},"ts":1292170501000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"same for content editable and drag/drop","msgtype":"m.text"},"ts":1292170560000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"actually, content editable, how do you think people create in the end the same user experience as with popular inline text editors like TinyMCE ?","msgtype":"m.text"},"ts":1292170561000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"people=developers","msgtype":"m.text"},"ts":1292170562000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Given content editable offers good new functionality but not a rich text editing app","msgtype":"m.text"},"ts":1292170620000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: I think the File API is not quite so simple","msgtype":"m.text"},"ts":1292170860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"roc: yt?","msgtype":"m.text"},"ts":1292170861000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's three APIs really","msgtype":"m.text"},"ts":1292170920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i highlight FileReader","msgtype":"m.text"},"ts":1292170980000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"and it is quite a powerful API with some potentially pretty sophisticated applications","msgtype":"m.text"},"ts":1292170981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292170982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you maybe have any other important things of the FileAPI that could bne explained for a CMS?","msgtype":"m.text"},"ts":1292170983000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1292171100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like variable said, I'm not sure how much of any of this has specific relevance to a CMS","msgtype":"m.text"},"ts":1292171280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292171340000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"which of it","msgtype":"m.text"},"ts":1292171341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1292171400000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"dglazkov: email me, I gotta run","msgtype":"m.text"},"ts":1292171401000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"MikeSmith: well, the dropping files from the normal file system browser to the CMS is at least 1","msgtype":"m.text"},"ts":1292172600000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292172660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I think it could also be quite logical a CMS executes an operation on a batch of local files i think? i.e. tagging them one by one with canvas","msgtype":"m.text"},"ts":1292172661000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"(image files for example)","msgtype":"m.text"},"ts":1292172662000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, you've seen aloha editor ya?","msgtype":"m.text"},"ts":1292173380000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"i didn't but im checking it out now","msgtype":"m.text"},"ts":1292173440000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"thnaks","msgtype":"m.text"},"ts":1292173441000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"webr3: you think Aloha editor could be of any meaning ? apart from mentioning it as example ?","msgtype":"m.text"},"ts":1292173560000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"webr3: i mean, could it be seriously considerable for example to write some beta CMS part with aloha as text editor implemented?","msgtype":"m.text"},"ts":1292173680000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"like TYPO and Drupal did?","msgtype":"m.text"},"ts":1292173681000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax, yes (sorry not really here), aloha can be, and is used in commercial and opensource projects, it's just as viable as tinymce etc, although less feature rich of course, for now","msgtype":"m.text"},"ts":1292178480000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"brendaneich, where does the current draft of Typed Arrays have endian dependencies?  It looks like it contains an endianness flag to the constructor for multibyte views: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html#6","msgtype":"m.text"},"ts":1292178840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"typed arrays is good but it do not allows store references to Object and strings","msgtype":"m.text"},"ts":1292179620000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"native Array kills js perfomance","msgtype":"m.text"},"ts":1292179621000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"bacause in 99% cases nobody uses holed arrays","msgtype":"m.text"},"ts":1292179680000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"only solid","msgtype":"m.text"},"ts":1292179681000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"AryehGregor: DataView is not the issue, aliasing Uint8Array and Uint16Array (e.g.) views of a single buffer are","msgtype":"m.text"},"ts":1292181900000,"senderName":"brendaneich","senderId":"brendaneich@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1292181901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, worst case is it's de facto required to be little-endian even though that's not specced anywhere yet, and the three people still using big-endian machines to view the web get a performance hit, assuming anyone is still maintaining browsers for those architectures . . . (I guess a few people still use PowerPC Macs?)","msgtype":"m.text"},"ts":1292182020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Now, can anyone tell me what \"[whatwg] Fwd: Session Management\" is about?","msgtype":"m.text"},"ts":1292182021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"PowerPC is deading","msgtype":"m.text"},"ts":1292182140000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":" /me notes that TVs and things have web access and it isn't all x86/ARM","msgtype":"m.text"},"ts":1292184000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, some ARM is big-endian anyway.","msgtype":"m.text"},"ts":1292184060000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But the point is that if you don't specify it, it will wind up being de facto little-endian, because that's what everyone will write for and test on.","msgtype":"m.text"},"ts":1292184120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So browsers on big-endian architectures will have to treat it as little-endian anyway.","msgtype":"m.text"},"ts":1292184121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That could be true, but the point is that it's not (yet) a non-issue since e.g. MIPS sill exists","msgtype":"m.text"},"ts":1292184240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i guess, automatic convert to big endian is best way","msgtype":"m.text"},"ts":1292184540000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"MikeSmith: clearly, I haven't tested the locator stuff enough :-(","msgtype":"m.text"},"ts":1292184600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but it like XHR always encode data to utf8 :(  and you can not send binary data","msgtype":"m.text"},"ts":1292184601000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"keep in mind, there are processors where bit can be 0, 1, 2 :)","msgtype":"m.text"},"ts":1292184720000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"ie we can not standartize even 1 bit :)","msgtype":"m.text"},"ts":1292184840000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"bga_: Note that in many cases js arrays will be optmised if they are not sparse","msgtype":"m.text"},"ts":1292185200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham it desing fail","msgtype":"m.text"},"ts":1292185260000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"webr3: here?","msgtype":"m.text"},"ts":1292185261000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"invent some super abstract and try to optimize it","msgtype":"m.text"},"ts":1292185320000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"is here","msgtype":"m.emote"},"ts":1292185620000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":", but only for 2 minutes","msgtype":"m.emote"},"ts":1292185621000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"The Firefox 4 beta just crashed yet again, and this time it ate the long post I was writing.  That's a hanging offense.","msgtype":"m.text"},"ts":1292187900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"switches back to Chrome","msgtype":"m.emote"},"ts":1292187901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: don't worry, we'll let you down too at some point or another :)","msgtype":"m.text"},"ts":1292190240000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Doubtless.  :)","msgtype":"m.text"},"ts":1292191020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"MikeSmith: so should <annotation-xml encoding=\"text/html\"> be valid in both HTML and XHTML (now only encoding=\"application/xhtml+xml\" validates)?","msgtype":"m.text"},"ts":1292191920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"lol webkit \"bug\". ctx.arc(...); ctx.stroke(); in chrome line visualy is thinner than in ff :)","msgtype":"m.text"},"ts":1292193060000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Does Chrome anti-alias canvas drawing yet?","msgtype":"m.text"},"ts":1292193420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen http://funkyimg.com/u2/558/025/ff4.png http://funkyimg.com/u2/245/712/ch10.png","msgtype":"m.text"},"ts":1292193600000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"ff version looks better imho","msgtype":"m.text"},"ts":1292193660000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"hsivonen: yes (If I understand the question)","msgtype":"m.text"},"ts":1292193840000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen: but of course in the xhtml case it would also need to be well formed","msgtype":"m.text"},"ts":1292194020000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen: what david_carlisle said :)","msgtype":"m.text"},"ts":1292194560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this reminds me, I have the updated MathML2 rnc files in my workspace uncommitted still","msgtype":"m.text"},"ts":1292194740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the ones that are based on the canonical MathML3 RNCs but from that I used david_carlisle script to remove the MathML3 only features and get a proper MathML2 subset","msgtype":"m.text"},"ts":1292195040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I did those in about 5 minutes, I recently passed something similar yo Meil Soiffer who wanted a diff mml2 to mm3 for updating daisy and he spotted a couple of extra mml3 attributes I should have filtered out","msgtype":"m.text"},"ts":1292195100000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1292195101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Neil","msgtype":"m.text"},"ts":1292195102000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"which attributes?","msgtype":"m.text"},"ts":1292195160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll dig out the email...","msgtype":"m.text"},"ts":1292195161000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"actually it wasn't as bad I'd remembered, but he wanted a more exact diff of exactly which attributes had changed on each element, my conversion script took a cruder approach of just throwing out all the completely new attributes","msgtype":"m.text"},"ts":1292195520000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"see thread","msgtype":"m.text"},"ts":1292195521000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Member/member-math/2010Nov/0053.html","msgtype":"m.text"},"ts":1292195522000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292195580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1292195581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So that \"mathml2\" schema will let a few attributes on math that previously were only allowed on children of math for example, but  think probably it's  OK for the purpose","msgtype":"m.text"},"ts":1292195582000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: yeah","msgtype":"m.text"},"ts":1292195820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"'cause you should be using mml3 anyway:-)","msgtype":"m.text"},"ts":1292195880000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"using mml2 is consistent with we are handling other vocabs","msgtype":"m.text"},"ts":1292196060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., using SVG 1.1 instead of 1.2","msgtype":"m.text"},"ts":1292196061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's just that for mml2 validator.nu is still currently using the schema from Furubayashi-san","msgtype":"m.text"},"ts":1292196120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is great mostly but after I fixed a number of bugs in it and figured out there were very likely more waiting that I hadn't found yet, I figured we should replace it with hopefully fewer bugs","msgtype":"m.text"},"ts":1292196180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"html 4 instead of html5, to be consistent?","msgtype":"m.text"},"ts":1292196600000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1292196601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Actually if you are going to base the validator around that, probably I ought to give in and admit it exists and distribute it from teh w3.org/math area , grmble","msgtype":"m.text"},"ts":1292196660000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"the","msgtype":"m.text"},"ts":1292196661000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"well, I'd certainly prefer that","msgtype":"m.text"},"ts":1292196720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"would take it guesswork out of it for us","msgtype":"m.text"},"ts":1292196721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suppose so....","msgtype":"m.text"},"ts":1292196780000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"not tonight though","msgtype":"m.text"},"ts":1292196781000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292196782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you want me to find a bug or send mail about it or anything?","msgtype":"m.text"},"ts":1292196783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nah I'll just do it, but probably best to wake up first","msgtype":"m.text"},"ts":1292196840000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1292196841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1292196842000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: do you think it should be real mathml2, or should iI fail to filter out the new mathml3 href attribute (which is allowed pretty much everywhere and makes a link. xlink:href support is a bit thin on the ground and I'd like to push adding href rather than pushing to get xlink fixed","msgtype":"m.text"},"ts":1292197860000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: I think it should be real mathml2, and if downstream users of the schema want to change it to allow the href attribute, they can","msgtype":"m.text"},"ts":1292198040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK I suppose that's a clearer story:-) ","msgtype":"m.text"},"ts":1292198041000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"}
]