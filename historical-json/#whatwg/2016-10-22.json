[
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1477106138000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: TabAtkins: there's a bunch of low-level terms that don't really belong anywhere specifically. I oft wonder if we should create a Terms Standard or some such to collect them and define case-sensitive, ASCII uppercase, etc.","msgtype":"m.text"},"ts":1477109364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also yeah, an issue would help","msgtype":"m.text"},"ts":1477109429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: +1 to \"terms standard\"","msgtype":"m.text"},"ts":1477141239000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: or whatever it would be called","msgtype":"m.text"},"ts":1477141281000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"is \"Return |function|.\\[[Call]](|map|, |arguments|).\"","msgtype":"m.text"},"ts":1477142146000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"a correct replacement for:","msgtype":"m.text"},"ts":1477142146000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"\"Return the result of calling the \\[[Call]] internal method of |function| with |map| as |thisArg| and |arguments| as |argumentsList|.\"","msgtype":"m.text"},"ts":1477142146000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Last step of: https://heycam.github.io/webidl/#dfn-forwards-to-the-internal-map-object","msgtype":"m.text"},"ts":1477142218000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"^ Domenic","msgtype":"m.text"},"ts":1477142269000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yes, however, these days it's even better to do Call(|function|, |map|, |arguments|) using https://tc39.github.io/ecma262/#sec-call","msgtype":"m.text"},"ts":1477150804000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's a whole slew of these forwarding helpers, Call(), Get(), HasOwnProperty(), etc. which mostly just do minor things like assert preconditions or default arguments for you or similar","msgtype":"m.text"},"ts":1477150887000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: cool, thanks.","msgtype":"m.text"},"ts":1477153725000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"When are the ! (return abrupt?) and ? (whatever that one does) constructs useful?","msgtype":"m.text"},"ts":1477155706000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: ? means that you rethrow","msgtype":"m.text"},"ts":1477158223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: ! means that you know it's not gonna throw","msgtype":"m.text"},"ts":1477158246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh. It looked way more complicated than that on the ES side. :D","msgtype":"m.text"},"ts":1477158638000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"does anyone have any stats on scripts in SVG?","msgtype":"m.text"},"ts":1477164506000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"like, how common they are, what % of SVGs","msgtype":"m.text"},"ts":1477164717000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: wouldn't it be more appropriate to set the [[Extensible]] slot to false and not touch the methods instead?","msgtype":"m.text"},"ts":1477166809000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: re https://github.com/heycam/webidl/pull/197","msgtype":"m.text"},"ts":1477166885000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: the idea is actually to stop you from setting the extensible slot to false","msgtype":"m.text"},"ts":1477168244000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I.e. stop Object.preventExtensions and friends from doing so.","msgtype":"m.text"},"ts":1477168261000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, this is absolutely obvious in retrospect. Guess I had a brain fart along the way.","msgtype":"m.text"},"ts":1477168374000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: So what you want to do is basically turn [[PreventExtensions]] into a noop that returns false (it failed to set [[Extensible]] to false) to trigger the TypeError in SetIntegrityLevel.","msgtype":"m.text"},"ts":1477168562000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yes exactly :)","msgtype":"m.text"},"ts":1477168634000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: which is what you've been saying all along, but now I understand why.","msgtype":"m.text"},"ts":1477168649000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1477168651000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(It's gotta return false so callers know that you're refusing to prevent extensions)","msgtype":"m.text"},"ts":1477168659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I hadn't realized that the return value of [[PreventExtensions]] was whether the operation had succeeded or not.","msgtype":"m.text"},"ts":1477168777000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Got confused by the sentence that read:","msgtype":"m.text"},"ts":1477168792000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"If [[PreventExtensions]] returns true, all future calls to [[IsExtensible]] on the target must return false and the target is now considered non-extensible.","msgtype":"m.text"},"ts":1477168867000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"it does make sense now that I read it, but anyway.","msgtype":"m.text"},"ts":1477169002000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1477170024000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"confusing to me too","msgtype":"m.text"},"ts":1477170101000,"senderName":"younder","senderId":"younder@irc"}
]