[
{"content":{"body":"if i did a pr for https://github.com/whatwg/dom/issues/147 would anything implement it","msgtype":"m.text"},"ts":1573012556000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: it's unclear whether NodeIterator is considered legacy or part of the modern DOM at this point. I think you can replace uses of it with other, simpler APIs in general. That said, marcos (on that thread) works for Mozilla and might implement it.","msgtype":"m.text"},"ts":1573014335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: interesting","msgtype":"m.text"},"ts":1573014354000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"is that why you didn't mention it when i was trying to iterate over documents","msgtype":"m.text"},"ts":1573014365000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yeah I suppose so","msgtype":"m.text"},"ts":1573014420000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In particular it's an awkward Java-ish API with lots of bad old design patterns. And the fundamental capability it gives seems to be ... it saves you from writing a DFS yourself?","msgtype":"m.text"},"ts":1573014499000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1573014510000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i'm not particularly invested in the api either","msgtype":"m.text"},"ts":1573014538000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"just people were asking about it in ##javascript","msgtype":"m.text"},"ts":1573014546000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"If we were to design a modern API for this I think Node.prototype.getNextNode/getPreviousNode would be it.","msgtype":"m.text"},"ts":1573014558000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Node[Symbol.iterator] which yields a single item :P","msgtype":"m.text"},"ts":1573014588000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Yeah I guess if you really want to for-of over something you could add Node.prototype.forwardIterator()/reverseIterator() which would repeatedly call getNextNode/getPreviousNode","msgtype":"m.text"},"ts":1573014651000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyway, bedtime, ttyl","msgtype":"m.text"},"ts":1573014710000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"üëãüèª","msgtype":"m.text"},"ts":1573014868000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"JakeA: is there a summary somewhere of what Chrome wants to do with URLs?","msgtype":"m.text"},"ts":1573030252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I find the Twitter conversations I've seen rather opaque","msgtype":"m.text"},"ts":1573030278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the twitter conversations seem pretty clear to me. Chrome wants to kill URLs","msgtype":"m.text"},"ts":1573032797000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1573032817000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: somebody pointed me at the Twitter replies from Emily Stark.","msgtype":"m.text"},"ts":1573035076000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://mobile.twitter.com/estark37/status/1191473763172278272","msgtype":"m.text"},"ts":1573035082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe you read those already","msgtype":"m.text"},"ts":1573035119000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, I saw some of that, but a lot of it is rather vague as to what it might mean, which I guess is why you get people speculating","msgtype":"m.text"},"ts":1573037315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How about killing off google.. :D","msgtype":"m.text"},"ts":1573055553000,"senderName":"lilltiger","senderId":"lilltiger@irc"},
{"content":{"body":"Hi. I've just implemented TreeWalker and NodeIterator using the whatwg spec.","msgtype":"m.text"},"ts":1573055858000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"In TreeWalker.nextNode(), the spec says in step 3.4.3 \"if sibling is non-null, then break\". I think it needs to set node to sibling before the break.","msgtype":"m.text"},"ts":1573055916000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"Otherwise the web-platform-tests for treewalker don't pass.","msgtype":"m.text"},"ts":1573055958000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"Secondly, Acid3 can't pass with NodeIterator without modifications to the algorithm in the spec, because it removes the reference node from the collection inside the filter callback.","msgtype":"m.text"},"ts":1573056040000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"PiersW: there are some open spec issues, not sure if they cover this","msgtype":"m.text"},"ts":1573057170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"PiersW: I‚Äôd be happy to look tomorrow. If there‚Äôs identified test coverage that‚Äôd help a lot","msgtype":"m.text"},"ts":1573057217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, I think it's this. https://github.com/whatwg/dom/issues/787","msgtype":"m.text"},"ts":1573057354000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"I get an infinite loop on some tests without the node=sibling line. But these all fail: dom/traversal-TreeWalker-previousNodeLastChildReject, dom/traversal-TreeWalker-walking-outside-a-tree, dom/traversal-TreeWalker-previousSiblingLastChildSkip and one subtest in dom/traversal-TreeWalker-traversal-skip","msgtype":"m.text"},"ts":1573057421000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"These infinite loop: web-platform-tests/dom/traversal-TreeWalker-acceptNode-filter, web-platform-tests/dom/traversal-TreeWalker-currentNode, web-platform-tests/dom/traversal-TreeWalker-traversal-reject","msgtype":"m.text"},"ts":1573057466000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"I'd not seen #787 before. There's a subtle difference between my suggestion and the one in #787, in that mine's one line :-) But it's clearly fixing the same bug and with it all relevant wpts pass (inc Acid3).","msgtype":"m.text"},"ts":1573057950000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"PiersW: please leave a comment there if you can","msgtype":"m.text"},"ts":1573058846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"PiersW: and if there‚Äôs a way to test the difference in fixes I guess we might need more tests","msgtype":"m.text"},"ts":1573058887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why aren't the existing 7 enough?","msgtype":"m.text"},"ts":1573058943000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"PiersW: well, I‚Äôd like the shorter fix recorded","msgtype":"m.text"},"ts":1573059143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The existing algorithm is obviously wrong (in hindsight) because step 3.2 and 3.3 create the variables 'sibling' and 'temporary'. Step 3.4 assigns them values, and then nothing ever access their values.","msgtype":"m.text"},"ts":1573059180000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"I'll try to put these comments in the issue this evening (UK).","msgtype":"m.text"},"ts":1573059251000,"senderName":"PiersW","senderId":"PiersW@irc"},
{"content":{"body":"The other thing that helps is the tests you identified","msgtype":"m.text"},"ts":1573059267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Appreciate it!","msgtype":"m.text"},"ts":1573059289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the idea is to isolate the authoritative part of the url and show only that part to the user","msgtype":"m.text"},"ts":1573059761000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"the example I see a lot from chrome devs is bank.com/secure vs bank.com.secure.fake.net","msgtype":"m.text"},"ts":1573059822000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"(but with longer URLs that go off the end of the url bar)","msgtype":"m.text"},"ts":1573059882000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm not sure I agree with this approach but phishing is definitely a problem","msgtype":"m.text"},"ts":1573059909000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"I'm more concerned about the Google search results doing this, since then there won't be any trace of the actual link to a page on the results","msgtype":"m.text"},"ts":1573060104000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: if they‚Äôre basically copying Safari it‚Äôd help a whole lot if someone said so","msgtype":"m.text"},"ts":1573061574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think jake might've mentioned safari at some point","msgtype":"m.text"},"ts":1573061652000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Apart from EV and perhaps apart from using a positive security indicator Safari has been leading the way for quite a while here","msgtype":"m.text"},"ts":1573061675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"definitely would be nice to have more information though :(","msgtype":"m.text"},"ts":1573061677000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: k","msgtype":"m.text"},"ts":1573061682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don‚Äôt mind, I mostly find the communication  rather confusing","msgtype":"m.text"},"ts":1573061784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm sure there are oodles of design docs that just haven't been made public yet","msgtype":"m.text"},"ts":1573061817000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"My take is that these are partially product/UX decisions and those parts of the org don't have the usual open communication styles of the eng parts. So confusion results as the eng people who want to communicate openly either have to stick to only certain publicly announced things, or (my case) don't know what the actual plans are, and have just seen a lot of papers/comments/mock-up designs/etc.","msgtype":"m.text"},"ts":1573069171000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I've updated #787 (TreeWalker). I'm not sure how you can test the algorithms in the specs (given they're English), but my C++ implementation shows it to work with my suggested modification.","msgtype":"m.text"},"ts":1573073959000,"senderName":"PiersW","senderId":"PiersW@irc"}
]