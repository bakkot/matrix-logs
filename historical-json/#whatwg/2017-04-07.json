[
{"content":{"body":"annevk: yeah, my thinking is I tried for something host-agnostic in TC39, it failed, so now streams suffers the consequences. Oh well, nothing we can do.","msgtype":"m.text"},"ts":1491535028000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug is gone, but I asked about that in https://groups.google.com/a/chromium.org/d/msg/blink-dev/Mx9q5WXunSE/2lCq30dtBwAJ and will poke the thread again","msgtype":"m.text"},"ts":1491543456000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: the first two sentences of the \"When UNESCO suggests\" paragraph of https://www.w3.org/blog/news/archives/6225 do have a good point.","msgtype":"m.text"},"ts":1491555542000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah","msgtype":"m.text"},"ts":1491555673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how the W3C decides what to use <abbr> for","msgtype":"m.text"},"ts":1491555842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Only three-letter-abbreviations-minus-W3C-itself?","msgtype":"m.text"},"ts":1491555859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In https://drafts.csswg.org/css-transforms-2/#funcdef-perspective it says that value must be greater than 0, is that > or ≥?","msgtype":"m.text"},"ts":1491556061000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://drafts.csswg.org/css-transforms-2/#PerspectiveDefined does -1/d, which should mean >,","msgtype":"m.text"},"ts":1491556077000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"but https://drafts.csswg.org/css-transforms-2/#PerspectiveDefined says perspective(0) is just a neutral thing.","msgtype":"m.text"},"ts":1491556093000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Err, https://drafts.csswg.org/css-transforms-2/#neutral-element for last link.","msgtype":"m.text"},"ts":1491556104000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: they haven't really defined depth so I'd just file a bug to say it's vague","msgtype":"m.text"},"ts":1491556205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I'm guessing they mean the parameter, but...","msgtype":"m.text"},"ts":1491556218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: On https://github.com/w3c/csswg-drafts?","msgtype":"m.text"},"ts":1491556276000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I guess so","msgtype":"m.text"},"ts":1491556299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: hmm, the document itself points to https://github.com/w3c/fxtf-drafts/labels/css-transforms-1","msgtype":"m.text"},"ts":1491556310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1491556327000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: so maybe there? CSS is","msgtype":"m.text"},"ts":1491556334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not the clearest at all this I find","msgtype":"m.text"},"ts":1491556345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/w3c/fxtf-drafts/issues/126","msgtype":"m.text"},"ts":1491556768000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"JakeA: btw, I'm counting on you to review https://github.com/whatwg/dom/pull/434 as well; do you have that planned?","msgtype":"m.text"},"ts":1491563553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: could it be that the PR diff tooling interferes with https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/?","msgtype":"m.text"},"ts":1491563703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: e.g., the above referenced whatwg/dom PR from mkwst has a branch I can't push to, even though that should be on by default these days","msgtype":"m.text"},"ts":1491563736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I've noticed this happening more as of late, so I'm wondering if the tooling we have messes this functionality up somehow","msgtype":"m.text"},"ts":1491563763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just ticked the box manually, so, tooling aside, you should be able to fix all my mistakes now..","msgtype":"m.text"},"ts":1491563795000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: heh, thanks, wasn't actually planning on doing it just yet, but I found some minor nits and was gonna ask you if it were okay to push at some point, and then noticed it was broken again","msgtype":"m.text"},"ts":1491563884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No worries. I'm happy to fix nits: you're busy.","msgtype":"m.text"},"ts":1491563939000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: As long as you're telling me what nits to fix, that is. :)","msgtype":"m.text"},"ts":1491563950000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: main bigger things I have: 1) what about this exception? 2) we should probably update the abstract now we do more than events and trees","msgtype":"m.text"},"ts":1491563978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: 3) tests and 4) can/will this be implemented without feature and how do we manage that if not?","msgtype":"m.text"},"ts":1491564039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I'll wait with the nits until JakeA has reviewed as well, doesn't seem like much else is blocking this","msgtype":"m.text"},"ts":1491564072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: nobody in TC39 is screaming thus far","msgtype":"m.text"},"ts":1491564092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(low bar?)","msgtype":"m.text"},"ts":1491564112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it shouldn't. The only thing the tooling does is listen to events and update the content of the original post.","msgtype":"m.text"},"ts":1491564140000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"1. You tell me. I'm happy to make it a DOMException if you don't care. 2. Sure (though I'm still not sure this is really right for DOM, I don't have a better suggestion).","msgtype":"m.text"},"ts":1491564151000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":" 3. It'll be tough to actually the cancellation callback bits without an API that uses the thing. Everything else should be simple. 4. See #3. I don't think it makes much sense in isolation.","msgtype":"m.text"},"ts":1491564169000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"5. If TC39 gets involved, I'm going to delegate everything to Jake, because I don't have time to argue about this. :)","msgtype":"m.text"},"ts":1491564197000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'm okay with a DOMException as long as it has a unique name. \"CancelationError\" or some such would be fine. Though I wish ljharb would have answered the justification question other than \"it needs to be like arrays\"","msgtype":"m.text"},"ts":1491564408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess even if he proves the need for branding we could still tack that on DOMException...","msgtype":"m.text"},"ts":1491564443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what he'd like to protect against.","msgtype":"m.text"},"ts":1491564605000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1491564610000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Maybe the problem is that a problem in the program shouldn't be able to exit through the cancelation path?","msgtype":"m.text"},"ts":1491564707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So an attacker can halt something and go undetected?","msgtype":"m.text"},"ts":1491564738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Assuming the attacker is already running script in your origin?","msgtype":"m.text"},"ts":1491564813000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Idunno. I'd like to understand the threat it's meant to address. If it's relevant, then I'd prefer to make it a DOMException thing if possible,.","msgtype":"m.text"},"ts":1491564855000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"If we make it a DOMException, shall I send tobie a patch to add the name to https://heycam.github.io/webidl/#dfn-error-names-table?","msgtype":"m.text"},"ts":1491564918000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Or do you want the whole thing defined in DOM?","msgtype":"m.text"},"ts":1491564993000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yes please.","msgtype":"m.text"},"ts":1491565004000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"mkwst: we should add the name there and then reference it","msgtype":"m.text"},"ts":1491565140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: thanks for knowing how all the things work","msgtype":"m.text"},"ts":1491565164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I guess we might also need to update testharness so it knows about that exception name","msgtype":"m.text"},"ts":1491565185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does not know how all the things work :)","msgtype":"m.emote"},"ts":1491565250000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ok. If that sounds like a reasonable thing to do, I'll send out patches.","msgtype":"m.text"},"ts":1491565298000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"http://web.mit.edu/jwalden/www/isArray.html is a pretty good read, but all those problems also apply to platform objects!","msgtype":"m.text"},"ts":1491565344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Searching for \"hasinstance inurl:public-script-coord\" and Google gives me \"Are you a robot?\" while I'm logged in","msgtype":"m.text"},"ts":1491566210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then they dare talk about AI on stage, come on","msgtype":"m.text"},"ts":1491566224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To be fair, you might be a robot.","msgtype":"m.text"},"ts":1491566364000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Bias!","msgtype":"m.text"},"ts":1491566512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds https://lists.w3.org/Archives/Public/public-script-coord/2013JanMar/thread.html#msg1","msgtype":"m.emote"},"ts":1491566521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(through W3C's search)","msgtype":"m.text"},"ts":1491566532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep. Going to fix useCache in the service worker spec. Then review the cancellation thing.","msgtype":"m.text"},"ts":1491566984000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: cancelation","msgtype":"m.text"},"ts":1491567080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess we should add that to the style guide","msgtype":"m.text"},"ts":1491567098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: canceation. The Ls are just causing trouble, let's get rid of all of them.","msgtype":"m.text"},"ts":1491567141000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: archibad","msgtype":"m.text"},"ts":1491567191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hahaha I'll take that","msgtype":"m.text"},"ts":1491567212000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://wiki.whatwg.org/index.php?title=Style&diff=next&oldid=10160 😆","msgtype":"m.text"},"ts":1491568845000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So many variations to get wrong!","msgtype":"m.text"},"ts":1491568937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is glad most of his specs are in W3C, where \"cancelled\" is spelled in a sane way.","msgtype":"m.emote"},"ts":1491569053000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1491569054000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: as long as the APIs get it right...","msgtype":"m.text"},"ts":1491569176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/right/wrong/","msgtype":"m.text"},"ts":1491569196000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I'll just make sure not to use controversial words in APIs. :)","msgtype":"m.text"},"ts":1491569211000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"canceỻation","msgtype":"m.text"},"ts":1491569218000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"You're in #whatwg now, but clearly you also left your sense of logic at the door so...","msgtype":"m.text"},"ts":1491569219000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"`thing.stopIt()`","msgtype":"m.text"},"ts":1491569230000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: You mean cance//ed?","msgtype":"m.text"},"ts":1491569467000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic is traveling at the moment I guess?","msgtype":"m.text"},"ts":1491571508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanted to ask him about https://github.com/w3c/ServiceWorker/issues/1073#issue-207922166","msgtype":"m.text"},"ts":1491571540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: maybe you can help clue me in. I’m trying to figure out what change to make for the “Either step 8 should be removed (normative change!), or we should update HTML to have an invalid value default state (say \"invalid\"), which you can then throw an error on.” part of Domenic’s comment","msgtype":"m.text"},"ts":1491571634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that step 8 is this:","msgtype":"m.text"},"ts":1491571641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> If workerType is not a valid WorkerType value, queue a task to fire an event named error at the link element, and abort these steps.","msgtype":"m.text"},"ts":1491571658000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'll take a look","msgtype":"m.text"},"ts":1491571718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1491571723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I talked with Domenic about this earlier this week but am wondering if there’s an existing similar case in the HTML spec I can use as model","msgtype":"m.text"},"ts":1491571737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nobody has implemented WorkerType yet I think, so we can spec it out the way we want","msgtype":"m.text"},"ts":1491571782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to be clear the specific part I wonder how to spec is “a state which you can then throw an error on”","msgtype":"m.text"},"ts":1491571886000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: if nobody has implemented this feature I like the idea of the normative change","msgtype":"m.text"},"ts":1491571889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1491571894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: and just defaulting to \"classic\"","msgtype":"m.text"},"ts":1491571898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1491571903000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think most HTML attributes have a fallback that makes the thing function, a fallback that makes the thing broken would be a little strange","msgtype":"m.text"},"ts":1491571946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm yeah when you put it that way, true","msgtype":"m.text"},"ts":1491571968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK well I will write up PR for the Service Worker spec with that change","msgtype":"m.text"},"ts":1491571986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"easy change","msgtype":"m.text"},"ts":1491572051000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: thanks 🌸","msgtype":"m.text"},"ts":1491572087000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: is there actually a requirement on mime type for importScripts()?","msgtype":"m.text"},"ts":1491573498000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess there is now","msgtype":"m.text"},"ts":1491573534000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the spec had that for a while. Although neither Chrome or Firefox do","msgtype":"m.text"},"ts":1491573592000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I changed it to point to HTML's mime type list, but it was there before","msgtype":"m.text"},"ts":1491573607000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems reasonable... thanks for testing it!","msgtype":"m.text"},"ts":1491573613000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I'm glad I decided to start persisting headers on importScripts() even though there was no reason in our tree before","msgtype":"m.text"},"ts":1491573653000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"now I can check the mime type a lot easier","msgtype":"m.text"},"ts":1491573661000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1491573664000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"mkwst: controversial words like \"nonce\"? :-P","msgtype":"m.text"},"ts":1491578603000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: If the UK would just speak proper English, \"nonce\" wouldn't be a problem. :)","msgtype":"m.text"},"ts":1491579601000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"http://stackoverflow.com/questions/280049/javascript-callback-for-knowing-when-an-image-is-loaded#comment70314622_24201249","msgtype":"m.text"},"ts":1491580323000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the answer is no, right, because the event queue doesn't spin?","msgtype":"m.text"},"ts":1491580332000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: right. per the current spec you could have the opposite problem that 'loaded' is run twice. but the spec for .complete needs some fixing to not change value while script is executing (probably instead it should change value in the same task that fires the 'load' event)","msgtype":"m.text"},"ts":1491580658000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: how is it run twice?","msgtype":"m.text"},"ts":1491580729000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: no sorry, missed that the script had an \"else\"","msgtype":"m.text"},"ts":1491580802000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: had the script unconditionally added the listener it could run twice","msgtype":"m.text"},"ts":1491580832000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"even without the else how could it run twice without it going from complete to incompletE?","msgtype":"m.text"},"ts":1491580837000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: if the script runs after complete is flipped to true but before the load event has been fired","msgtype":"m.text"},"ts":1491580876000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: can you reload and check my comment is accurate?","msgtype":"m.text"},"ts":1491581321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: 👍","msgtype":"m.text"},"ts":1491581383000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: do we have a bug for the .complete spec?","msgtype":"m.text"},"ts":1491581419000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1491581432000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: Do you know if the Cache API impl in FF maintains insertion order? My attempted upstreaming of a test is blocked by flakiness: https://travis-ci.org/w3c/web-platform-tests/jobs/219426158 - I didn't spot a bugzilla issue...","msgtype":"m.text"},"ts":1491592640000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: can you define insertion order?","msgtype":"m.text"},"ts":1491593108000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: looks like for cache keys?","msgtype":"m.text"},"ts":1491593130000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"correct (sorry for being imprecise)","msgtype":"m.text"},"ts":1491593159000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: we do maintain insertion order, but we define that as the time the body completes vs the order cache.put() calls were made","msgtype":"m.text"},"ts":1491593172000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so depending on how the keys were inserted, we may get a slightly different order from chrome","msgtype":"m.text"},"ts":1491593221000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think we have agreement in an issue somewhere to use a more transactional approach where cache.put() blocks later cache.put() calls so that you get strict ordering based on the calls","msgtype":"m.text"},"ts":1491593267000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not sure if that is spec'd yet and we definitely haven't implemented it yet","msgtype":"m.text"},"ts":1491593277000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"okay. Wonder what I should do for that test...","msgtype":"m.text"},"ts":1491593336000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: does it put a bunch of stuff in the cache and then check the ordering?","msgtype":"m.text"},"ts":1491593354000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Yeah. https://cs.chromium.org/chromium/src/third_party/WebKit/LayoutTests/external/wpt/service-workers/cache-storage/script-tests/cache-keys.js?l=50","msgtype":"m.text"},"ts":1491593398000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I can make the test ignore the order if we believe it's not required by the spec at the moment","msgtype":"m.text"},"ts":1491593422000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: can we make prepopulated_cache_test() serialize its put() calls?","msgtype":"m.text"},"ts":1491593455000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: I mean, order is defined in the spec for .keys()... but I'm not sure it defines a strict order for overlapping put() calls at the moment: https://dxr.mozilla.org/mozilla-central/source/testing/web-platform/tests/service-workers/cache-storage/resources/test-helpers.js#148","msgtype":"m.text"},"ts":1491593522000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Yeah, that should work.","msgtype":"m.text"},"ts":1491593534000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"wanderview: my dev box is offline at the moment but once it's back I'll give that a whirl in FF and see","msgtype":"m.text"},"ts":1491593553000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: thanks!  I think transaction discussion might be in this issue: https://github.com/w3c/ServiceWorker/issues/823","msgtype":"m.text"},"ts":1491593654000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yea, loose agreement to \"work towards under-the-hood transactions to prevent races on writes\", but doesn't seem to have been spec'd yet: work towards under-the-hood transactions to prevent races on write","msgtype":"m.text"},"ts":1491593744000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://github.com/w3c/ServiceWorker/issues/823#issuecomment-175320500","msgtype":"m.text"},"ts":1491593751000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"can i represent elapsed number of days with <time> tag?","msgtype":"m.text"},"ts":1491601073000,"senderName":"felixjet","senderId":"felixjet@irc"},
{"content":{"body":"<time>6</time>, or even <time>Day 6</time>","msgtype":"m.text"},"ts":1491601087000,"senderName":"felixjet","senderId":"felixjet@irc"}
]