[
{"content":{"body":"(One of the main advantages of canvas over SVG is that it's much easier to write code to render data since you don't have to convert it all into a DOM)","msgtype":"m.text"},"ts":1329955200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1329955320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem is that the AT wants a tree","msgtype":"m.text"},"ts":1329955321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which suggests using the DOM","msgtype":"m.text"},"ts":1329955380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Could it equally suggest something like a JSON object? (with some specially-designed vocabulary so it exposes the data needed for AT with minimal overhead)","msgtype":"m.text"},"ts":1329955500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't automatically equate \"tree\" with \"DOM\"","msgtype":"m.emote"},"ts":1329955560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I do. Whenever I want a tree data structure, I map my data to the DOM.","msgtype":"m.text"},"ts":1329955620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: specifically, the AT wants a tree with AT annotations and so on, which is why it suggests the DOM (which already has all those built in, though not positions for the canvas)","msgtype":"m.text"},"ts":1329955680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: certainly it's no the only solution, or maybe even the best","msgtype":"m.text"},"ts":1329955681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: the idea of describing it as a JS object and then sending the object to the AT each time the canvas changes is interesting...","msgtype":"m.text"},"ts":1329955740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm... what would it looks like. you'd have a bunch of nested arrays, each of which was a level of the hierarchy","msgtype":"m.text"},"ts":1329955741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"each would have a path associated with it, presumably, and a role","msgtype":"m.text"},"ts":1329955800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and either a list of descendants, or a string, and you'd have to somehow give the precise position of each glyph in that string","msgtype":"m.text"},"ts":1329955801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah and only <canvas> authored by superhumans will use it","msgtype":"m.text"},"ts":1329955802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could provide APIs to automatically generate much of the information so it wouldn't be hard to build...","msgtype":"m.text"},"ts":1329955860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Nobody in reality is going to maintain a DOM equivalent of their canvas-based code as a fallback for non-canvas-supporting graphical users, so they're only ever going to bother with the extra work when they're being forced to add a11y support, so if a non-zero number of people are forced to support a11y then it seems beneficial to provide an efficient a11y-specific API for them","msgtype":"m.text"},"ts":1329955920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has anyone ever written an accessible version of asteroids?","msgtype":"m.text"},"ts":1329956100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.kevs3d.co.uk/dev/asteroids/ is one of the samples that was listed on the wiki page as an inaccessible canvas","msgtype":"m.text"},"ts":1329956160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i'm curious to see what an accessible version would be like","msgtype":"m.text"},"ts":1329956161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isnt canvas essentially just like video but animated pixels?","msgtype":"m.text"},"ts":1329956220000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"or pixel hacking","msgtype":"m.text"},"ts":1329956221000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"i dont understand why/how accessibility can be added","msgtype":"m.text"},"ts":1329956280000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"i looked at http://game-accessibility.com/","msgtype":"m.text"},"ts":1329956281000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"but didnt find anything useful","msgtype":"m.text"},"ts":1329956282000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"given a lot of canvas seems to be used for retro games","msgtype":"m.text"},"ts":1329956283000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"FYI on the IE DOM: http://news.ycombinator.com/item?id=3233935","msgtype":"m.text"},"ts":1329956400000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"nimbu: Canvas can theoretically be used for anything, so some of them are possible/appropriate to make accessible.","msgtype":"m.text"},"ts":1329956700000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(I think that most, or maybe all, of these are bad uses of canvas.)","msgtype":"m.text"},"ts":1329956701000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"yeah precisely.","msgtype":"m.text"},"ts":1329956702000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"why would you optimize for bad usecases? :/","msgtype":"m.text"},"ts":1329956703000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1329956760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nimbu: I don't think we should.  That's why I've stopped paying attention to public-html.","msgtype":"m.text"},"ts":1329956761000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Since it's almost entirely confused a11y arguments.","msgtype":"m.text"},"ts":1329956762000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"nimbu: Because accessibility is a core principle of the web, and canvas is part of the web, so canvas must support accessibility","msgtype":"m.text"},"ts":1329956763000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: how are images and videos supporting accessibility?","msgtype":"m.text"},"ts":1329956820000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"i would think canvas belongs there","msgtype":"m.text"},"ts":1329956821000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"nimbu: With longdesc","msgtype":"m.text"},"ts":1329956822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and alt)","msgtype":"m.text"},"ts":1329956823000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah there is nothing about making animated gifs accessible","msgtype":"m.text"},"ts":1329956824000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"and subtitles etc for videos","msgtype":"m.text"},"ts":1329956825000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You put a description of the animated GIF in its longdesc","msgtype":"m.text"},"ts":1329956826000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though of course HTML5 doesn't support longdesc (unless the HTML WG changed that yet?))","msgtype":"m.text"},"ts":1329956880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"By jbeda, which now works for Google too.","msgtype":"m.text"},"ts":1329956881000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"in my view i dont see how anything more is required specifically for canvas.","msgtype":"m.text"},"ts":1329956940000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Hixie, you should never have included author conformance requirements in the spec.  Would have saved you practically all this grief.","msgtype":"m.text"},"ts":1329957000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"UA processing only, that's the way to go.","msgtype":"m.text"},"ts":1329957001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Wouldn't that just be shifting the grief to someone else?","msgtype":"m.text"},"ts":1329957002000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and if those someones handle it more poorly, then it makes the web worse for authors","msgtype":"m.text"},"ts":1329957060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it is like saying we should optimize for web devs who use tables for layouts","msgtype":"m.text"},"ts":1329957061000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Only if someone bothers to write authoring conformance requirements for markup.  Why does that have to be anything official anyway?  Let people write their own private lint programs that match their own preferences.","msgtype":"m.text"},"ts":1329957062000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nimbu, how many hours of implementer time do you think have been spent optimizing for that case?  :)","msgtype":"m.text"},"ts":1329957120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I bet lots.","msgtype":"m.text"},"ts":1329957121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1329957122000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"If authoring conformance didn't exist, it would be necessary to invent it","msgtype":"m.text"},"ts":1329957360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"People don't like working without rules from authorities","msgtype":"m.text"},"ts":1329957361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There really is a distinction between what we are forced to support for compat and what we want to encourage people to write.","msgtype":"m.text"},"ts":1329957420000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"authoring conformance should be determined by the rules for implementations","msgtype":"m.text"},"ts":1329957600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the idea that something must be supported by implementations with a specific behavior, yet is non-conforming, has always felt a bit nonsensical to me","msgtype":"m.text"},"ts":1329957601000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't understand that position. :/","msgtype":"m.text"},"ts":1329957720000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i don't understand the position that something is fully defined, required to be supported, and not to be used","msgtype":"m.text"},"ts":1329957960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Mistakes were made, shrug your shoulders and move on?","msgtype":"m.text"},"ts":1329957961000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Also: \"required to be supported\" is potentially time-variable.","msgtype":"m.text"},"ts":1329957962000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"If you want to attempt to drive it back to \"not\", you have to get people to stop using it in new things.","msgtype":"m.text"},"ts":1329958020000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"conformance isn't just \"we didn't mean to allow this\", though","msgtype":"m.text"},"ts":1329958021000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't understand.","msgtype":"m.text"},"ts":1329958080000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"ugh. hard for me to do a google search right now, because the idiotic animated front page is lagging text entry on my laptop by several seconds","msgtype":"m.text"},"ts":1329958200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"whoever is doing that crap needs to be shot out of a cannon","msgtype":"m.text"},"ts":1329958260000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins_: there's certainly no expectation that browsers will ever change to reject pages with no <title>, for example","msgtype":"m.text"},"ts":1329958860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Sure.  And yet, there's good reason to include a <title>.","msgtype":"m.text"},"ts":1329958920000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"In general, the author requirements arent' meaningless - there are good reasons to prefer one solution, even if other solutions are required to be supported.","msgtype":"m.text"},"ts":1329958980000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Pushing people toward those better solutions is a positive.","msgtype":"m.text"},"ts":1329958981000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i'm not against making good practice recommendations, it's just the normative \"must\" that feels a bit too strong","msgtype":"m.text"},"ts":1329959340000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"In practice it's a recommendation, since it only actually shows up when you run it through a validator.","msgtype":"m.text"},"ts":1329959341000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"so, \"should\" :)","msgtype":"m.text"},"ts":1329959400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Meh, no reason to split hairs on it.  Might as well pretend it's a requirement so you don't have people lawyering over it.","msgtype":"m.text"},"ts":1329959401000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: See public-html, it's typically been full of lawyering ove rit","msgtype":"m.text"},"ts":1329959580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*over it","msgtype":"m.text"},"ts":1329959581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I mean authors. ^_^","msgtype":"m.text"},"ts":1329959640000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"AryehGregor: the grief doesn't come from having authoring conformance criteria, it comes from having a system that prefers people with time than people with good opinions.","msgtype":"m.text"},"ts":1329960900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: (notice how the whatwg system doesn't waste my time in the same way even though the same issues are discussed)","msgtype":"m.text"},"ts":1329960960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"livedom.validator.nu just froze my firefox","msgtype":"m.text"},"ts":1329960961000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"is the author of livedom in this channel?","msgtype":"m.text"},"ts":1329961020000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I presume it's a clone of Hixie's live dom viewer, so yes.","msgtype":"m.text"},"ts":1329961440000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Taggnostr: ^^^","msgtype":"m.text"},"ts":1329961441000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"it freezes if I enter a single & after the doctype (the doctype is probably unrelated though)","msgtype":"m.text"},"ts":1329961500000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Whoops, indeed it does freeze.","msgtype":"m.text"},"ts":1329961560000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Freezes Chrome too.","msgtype":"m.text"},"ts":1329961561000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"hsivonen: Is this something you ahve control over?","msgtype":"m.text"},"ts":1329961562000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"hsivonen will be asleep still few hours","msgtype":"m.text"},"ts":1329961620000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"uhm, maybe I found a bug in the HTML5 standard too","msgtype":"m.text"},"ts":1329962400000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I actually think all other specifications should start to have authoring conformance. For example, If browser vendors don't want authors to use localStorage and it is not likely to be maintained well, it should be made non-conforming.","msgtype":"m.text"},"ts":1329967440000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"kennyluck: it appears that browser vendors are using localStorage, though","msgtype":"m.text"},"ts":1329973680000,"senderName":"llrcombs","senderId":"llrcombs@irc"},
{"content":{"body":"gives Hixie a cookie :-)","msgtype":"m.emote"},"ts":1329981600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so I've been reminded that Jetty has built-in WebSocket support","msgtype":"m.text"},"ts":1329981720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I reckon I can install Jetty on w3c-test.org, for those who care to write the server parts in Java","msgtype":"m.text"},"ts":1329981780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: filed","msgtype":"m.text"},"ts":1329982260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1329982320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"See the last paragraph of http://www.ietf.org/mail-archive/web/apps-discuss/current/msg04355.html","msgtype":"m.text"},"ts":1329983460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins_: that livedom.validator.nu freeze is interesting. thanks","msgtype":"m.text"},"ts":1329983580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: that email, wow","msgtype":"m.text"},"ts":1329983581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1329983640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"who is this joker?","msgtype":"m.text"},"ts":1329983641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: he clearly has *real* implementors in mind","msgtype":"m.text"},"ts":1329983700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not browser makers","msgtype":"m.text"},"ts":1329983701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: he is the Designated Expert","msgtype":"m.text"},"ts":1329983702000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh geez","msgtype":"m.text"},"ts":1329983703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"did you explain to him you were describing reality?","msgtype":"m.text"},"ts":1329983760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess I should shut up","msgtype":"m.text"},"ts":1329983761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's *a* reality","msgtype":"m.text"},"ts":1329983820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there are many other possible realities","msgtype":"m.text"},"ts":1329983821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: no. I expected Alexey and Julian would know that I'm interested in reality","msgtype":"m.text"},"ts":1329983822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"um","msgtype":"m.text"},"ts":1329983823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that was silly","msgtype":"m.text"},"ts":1329983824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1329983825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in fairness, what I suggested was a synthesis of Gecko, IE and WebKit behavior","msgtype":"m.text"},"ts":1329983880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so what I expect to become reality in Gecko--not quite the current reality","msgtype":"m.text"},"ts":1329983881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"as in, becomes reality once I get around to implementing the BOM precedence change annevk suggested","msgtype":"m.text"},"ts":1329983940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"btw, fitting that the IETF mail-archive server turns \"This seems naïve\" into \"This seems naÃve.\"","msgtype":"m.text"},"ts":1329984120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no Unicode man","msgtype":"m.text"},"ts":1329984180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"us-ascii!!!!","msgtype":"m.text"},"ts":1329984181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also funny that he thinks utf-8-only for new formats is ridicolous","msgtype":"m.text"},"ts":1329984182000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/o/u/","msgtype":"m.text"},"ts":1329984300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think that comment might have only been about the bits before the text on new types","msgtype":"m.text"},"ts":1329984301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"happy to see he thinks text/css, text/html, etc. ridiculous though","msgtype":"m.text"},"ts":1329984360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well i can agree text/html is ridiculous","msgtype":"m.text"},"ts":1329984420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"who wouldn't","msgtype":"m.text"},"ts":1329984540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: that \"naÃve\" thing is awesome.","msgtype":"m.text"},"ts":1329984900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah man","msgtype":"m.text"},"ts":1329984960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in a number of ways","msgtype":"m.text"},"ts":1329984961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we're still discussing StreamBuilder?","msgtype":"m.text"},"ts":1329984962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1329984963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if I'll ever get a reply to my feedback then...","msgtype":"m.text"},"ts":1329984964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iso-2022-cn is quite the mess","msgtype":"m.text"},"ts":1329988680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://groups.google.com/group/jsmentors/browse_thread/thread/910bc55b2cc9be54","msgtype":"m.text"},"ts":1329989340000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"i wonder too if there is valid way","msgtype":"m.text"},"ts":1329989341000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"everyone hate same origin policy","msgtype":"m.text"},"ts":1329989400000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"tries switching default search engine to ddg","msgtype":"m.emote"},"ts":1329991320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh hey steve faulkner, having fun making shit up? cf https://twitter.com/#!/stevefaulkner/status/172624731651059713","msgtype":"m.text"},"ts":1329992340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how annoying. now my apps-discuss posts don't show up in the archive but I didn't get confirmation email, either","msgtype":"m.text"},"ts":1329992400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"prolly just takes a while","msgtype":"m.text"},"ts":1329992401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IETF lists are a lot slower than W3C lists from what I remember","msgtype":"m.text"},"ts":1329992460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"takes a while to degrade all that Unicode going around these days","msgtype":"m.text"},"ts":1329992461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah. in the archive now","msgtype":"m.text"},"ts":1329992462000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: Happily he links to his source, so anyone who bothers to check will realise that he utterly missed the point","msgtype":"m.text"},"ts":1329992520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"guess so","msgtype":"m.text"},"ts":1329992521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like it how steve uses \"self-selected\" disparagingly of #whatwg regulars. as if the WAI isn't self-selected.","msgtype":"m.text"},"ts":1329992700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: are you going to defined the 16-bit code units?","msgtype":"m.text"},"ts":1329992820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: apparently there are some actual problems with ECMAScript: http://code.google.com/p/v8/issues/detail?id=761","msgtype":"m.text"},"ts":1329992880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"didn't know steve is the new lastweekinhtml5","msgtype":"m.text"},"ts":1329992881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hi steve!","msgtype":"m.text"},"ts":1329992882000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: s/defined/defend/ ?","msgtype":"m.text"},"ts":1329993060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah oops","msgtype":"m.text"},"ts":1329993061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess I should in due course, but please go ahead and do so before I get to it","msgtype":"m.text"},"ts":1329993062000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sunny in Oslo","msgtype":"m.text"},"ts":1329993063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1329993064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure I know enough about grapheme clusters","msgtype":"m.text"},"ts":1329993120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I can read http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries","msgtype":"m.text"},"ts":1329993180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Mr. Last Week never commented on any accessibility topic","msgtype":"m.text"},"ts":1329993181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I didn't even know stuff like g̈ existed","msgtype":"m.text"},"ts":1329993182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pretty wild","msgtype":"m.text"},"ts":1329993183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a ̈ test","msgtype":"m.text"},"ts":1329993240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Surely your're not saying the MLW hated a11y?!","msgtype":"m.text"},"ts":1329993241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/your/you/","msgtype":"m.text"},"ts":1329993300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"better start packing","msgtype":"m.text"},"ts":1329993301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: what a missed opportunity!","msgtype":"m.text"},"ts":1329993540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What happened to lastweekinhtml5 by the way? The blog, I mean.","msgtype":"m.text"},"ts":1329997800000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"anyone knows about html tag highlighting plugin for gedit?","msgtype":"m.text"},"ts":1329998400000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"is there a way to make the speech regognition feature continuous ?","msgtype":"m.text"},"ts":1329998580000,"senderName":"ruby_on_tails","senderId":"ruby_on_tails@irc"},
{"content":{"body":"i dont want it to work only when the user stops speaking","msgtype":"m.text"},"ts":1329998581000,"senderName":"ruby_on_tails","senderId":"ruby_on_tails@irc"},
{"content":{"body":"Not right now. A new Speech JavaScript API is being developed (somewhere -- probably a new CG) to aid in that","msgtype":"m.text"},"ts":1329998700000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"CG means ?","msgtype":"m.text"},"ts":1329998701000,"senderName":"ruby_on_tails","senderId":"ruby_on_tails@irc"},
{"content":{"body":"community group","msgtype":"m.text"},"ts":1329998702000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"it's a new concept within the w3c","msgtype":"m.text"},"ts":1329998703000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"any way i could read more about it ?","msgtype":"m.text"},"ts":1329998760000,"senderName":"ruby_on_tails","senderId":"ruby_on_tails@irc"},
{"content":{"body":"This is an early draft: http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/att-1696/speechapi.html","msgtype":"m.text"},"ts":1329998820000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: hmm thanks","msgtype":"m.text"},"ts":1329998940000,"senderName":"ruby_on_tails","senderId":"ruby_on_tails@irc"},
{"content":{"body":"so I wonder if the limit for freenode is reached at Schiphol","msgtype":"m.text"},"ts":1329999960000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"cannot connect","msgtype":"m.text"},"ts":1329999961000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"but can connect to other IRC servers","msgtype":"m.text"},"ts":1329999962000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"maybe because W3C and Opera are not on the default ports?","msgtype":"m.text"},"ts":1329999963000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"any opinions on instead of having \"Participate:\" have a dedicated \"Feedback\" section that is also part of the table of contents?","msgtype":"m.text"},"ts":1330000080000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"so that it becomes more visible in drafts how you can give feedback","msgtype":"m.text"},"ts":1330000081000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"apparently it's not really read currently","msgtype":"m.text"},"ts":1330000140000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"or not all the time anyway","msgtype":"m.text"},"ts":1330000141000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"I like \"Participate:\" better","msgtype":"m.text"},"ts":1330000740000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"but well, you have a point.","msgtype":"m.text"},"ts":1330000741000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"have both!","msgtype":"m.text"},"ts":1330000860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"kennyluck: me too","msgtype":"m.text"},"ts":1330001460000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"and if it's only Marcos' that messes up, it might be okay","msgtype":"m.text"},"ts":1330001461000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"maybe rename \"Participate:\" to \"Send feedback:\" ?","msgtype":"m.text"},"ts":1330001462000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"I updated specification-data with the mutation observer stuff","msgtype":"m.text"},"ts":1330001520000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"also expanded the events introduction","msgtype":"m.text"},"ts":1330001521000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"and emailed www-dom about it","msgtype":"m.text"},"ts":1330001522000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events","msgtype":"m.text"},"ts":1330001523000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"will be back in four hours from some hotel in Oslo :)","msgtype":"m.text"},"ts":1330001524000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5: change \"www-dom⊙wo (archives)\" to \"Send feedback to www-dom⊙wo (archives)\"","msgtype":"m.text"},"ts":1330001700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that could work","msgtype":"m.text"},"ts":1330002000000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"zcorpan: and then \"or file a bug\" or some such","msgtype":"m.text"},"ts":1330002001000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1330002120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk5: \"And finally, and only if event's bubbles attribute value is true\" - bubbles should be <code>d","msgtype":"m.text"},"ts":1330004280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(isn't \"and only if\" always implied?)","msgtype":"m.text"},"ts":1330007640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"just in case you hadn't noticed http://www.ipetitions.com/petition/html-version-of-ecmascript-5-now","msgtype":"m.text"},"ts":1330011060000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Do the unofficial HTML copies of ES5 not count?","msgtype":"m.text"},"ts":1330011240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I would hope they release ES5 errata and ES6 drafts in HTML too.","msgtype":"m.text"},"ts":1330011480000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Hmm. I don't like that errors like   this_requires_one_arg()  ->  throws so widely different things.","msgtype":"m.text"},"ts":1330012200000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Should throw TypeError","msgtype":"m.text"},"ts":1330012440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: OK, that's what I made the test expect. But as I'm currently testing firefox nightly it throws it's own NS_LONG_TYPE_ERROR in many places, but not in that one, there it throws its own  NS_ERROR_XPC_NOT_ENOUGH_ARGS (what's with the long scary names? :P)","msgtype":"m.text"},"ts":1330012560000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"(I made NS_LONG_TYPE_ERROR up, it's called something else like that)","msgtype":"m.text"},"ts":1330012561000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Yeah Firefox really likes throwing NS_WE_MADE_THIS_ERR_UP_ERROR","msgtype":"m.text"},"ts":1330012620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Blame smaug____","msgtype":"m.text"},"ts":1330012621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or Ms2ger","msgtype":"m.text"},"ts":1330012622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or sicking","msgtype":"m.text"},"ts":1330012623000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or someone","msgtype":"m.text"},"ts":1330012624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"blames jgraham","msgtype":"m.emote"},"ts":1330012625000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"blames the world","msgtype":"m.emote"},"ts":1330012680000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"*cutting wrists and cries*","msgtype":"m.text"},"ts":1330012681000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Well specifically someone that isn't me. And does work on DOM in Mozilla","msgtype":"m.text"},"ts":1330012682000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Velmont: You should talk to gsnedders. You could listen to emo music together","msgtype":"m.text"},"ts":1330012683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: That coincidented nicely with my mplayer -playlist shuffle  putting on some emo music, btw. It must be a sign.","msgtype":"m.text"},"ts":1330012740000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"jgraham: no no","msgtype":"m.text"},"ts":1330012741000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: blame Netscape","msgtype":"m.text"},"ts":1330012742000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Dude, you have had almost a decade and a half to purge Netscape from the codebase","msgtype":"m.text"},"ts":1330012800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: IndexedDB and friends wasn't thought about even when Netscape existed. òÓ","msgtype":"m.text"},"ts":1330012801000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"How can it come from the past and mess with your new code? :P","msgtype":"m.text"},"ts":1330012802000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"just just looking at code from 1999","msgtype":"m.emote"},"ts":1330012803000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It can't possibly be that hard to throw TypeError rather than NS_WE_DIED_YEARS_AGO_ERROR","msgtype":"m.text"},"ts":1330012804000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh, if it is about indexeddb, blame sicking :)","msgtype":"m.text"},"ts":1330012860000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the reason we don't throw TypeError in indexedDB impl in Firefox is because we can't throw that from C++","msgtype":"m.text"},"ts":1330012920000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so blame mrbkap, bholley or jst","msgtype":"m.text"},"ts":1330012921000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Weird limitation.","msgtype":"m.text"},"ts":1330013040000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"But it's possible to throw all-caps with namespace baked in errors?","msgtype":"m.text"},"ts":1330013100000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"\"can't\" is too strong. It is just annoyingly hard","msgtype":"m.text"},"ts":1330013101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"comparing to some other exceptions","msgtype":"m.text"},"ts":1330013102000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well, mozilla is getting undeservingly much red from my tests on stuff like that :P","msgtype":"m.text"},"ts":1330013160000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"jgraham: I am not emo.","msgtype":"m.text"},"ts":1330015140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"…","msgtype":"m.text"},"ts":1330015141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"should stop getting annoyed at jgraham's accusations","msgtype":"m.emote"},"ts":1330015142000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sicking, it should be the WebIDL implementation throwing TypeError for not enough arguments, not IndexedDB.","msgtype":"m.text"},"ts":1330016340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, did you know we have a special exception when you pass 0 as a pointer argument?","msgtype":"m.text"},"ts":1330016520000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`, SIGSEGV?","msgtype":"m.text"},"ts":1330016640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: indeed. We just don't have a webidl layer implemented yet","msgtype":"m.text"},"ts":1330018260000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"AryehGregor: that's exactly my point","msgtype":"m.text"},"ts":1330018261000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"AryehGregor: yt?","msgtype":"m.text"},"ts":1330018320000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, yes.","msgtype":"m.text"},"ts":1330018380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although things seem quiet on the editing front for the last couple of months, so mostly I'm doing CSS transforms/transitions stuff now.","msgtype":"m.text"},"ts":1330018381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah... I need to give you back some feedback :(","msgtype":"m.text"},"ts":1330018440000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, please do.","msgtype":"m.text"},"ts":1330018441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: my plan was to add a hook to run your ref. impl. against our tests","msgtype":"m.text"},"ts":1330018442000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: but I haven't gotten around to it","msgtype":"m.text"},"ts":1330018443000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1330018444000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: btw, we should start talking about table editing / control selection as well","msgtype":"m.text"},"ts":1330018445000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Is anyone implementing the stuff I've already specced?","msgtype":"m.text"},"ts":1330018500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: in particular, we've been getting a lot of complaints about webkit not supporting control selection :(","msgtype":"m.text"},"ts":1330018501000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: not that I'm aware of","msgtype":"m.text"},"ts":1330018502000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I admit that I'm not so enthusiastic about spending more time on the editing spec when I spent over six months on it and no one seems to be implementing it.","msgtype":"m.text"},"ts":1330018503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: well, we're going to do it eventually","msgtype":"m.text"},"ts":1330018620000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1330018680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: it's just that I'm basically the one person working on editing","msgtype":"m.text"},"ts":1330018681000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: in webkit at the moment","msgtype":"m.text"},"ts":1330018682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Right, I know.","msgtype":"m.text"},"ts":1330018683000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so it's gonna take forever","msgtype":"m.text"},"ts":1330018684000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"And ehsan in Mozilla, and nobody at any other engine.","msgtype":"m.text"},"ts":1330018685000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: just like removing Apple-style-span took 2 years","msgtype":"m.text"},"ts":1330018686000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we'll be super lucky if we can implement your spec in the next 2-3 years :(","msgtype":"m.text"},"ts":1330018687000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"If I get more into Gecko coding working for Mozilla, maybe I can try implementing some parts of the editing spec.","msgtype":"m.text"},"ts":1330018688000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: sorry to tell you this, but very few people are enthusiastic about editing.","msgtype":"m.text"},"ts":1330018740000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The HTML parser took what, like five or more years for everyone to implement?","msgtype":"m.text"},"ts":1330018741000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"despite the fact almost everyone uses the feature daily","msgtype":"m.text"},"ts":1330018742000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"And it's a lot more important, and probably a lot simpler.","msgtype":"m.text"},"ts":1330018743000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah","msgtype":"m.text"},"ts":1330018744000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we were lucky because our old parser code was really bad","msgtype":"m.text"},"ts":1330018745000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Everyone's was really bad, I think.  :)","msgtype":"m.text"},"ts":1330018746000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so eseidel & abarth decided to rewrite from scratch","msgtype":"m.text"},"ts":1330018747000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think everyone did that.","msgtype":"m.text"},"ts":1330018800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: had we been spending more time on parser code, and tried to incrementally converge","msgtype":"m.text"},"ts":1330018801000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we wouldn't have finished yet :(","msgtype":"m.text"},"ts":1330018802000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: it's not just you working on editing in webkit; we've got enrica too. so there's 2 of you! :)","msgtype":"m.text"},"ts":1330018803000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: right, but enrica does other stuff too","msgtype":"m.text"},"ts":1330018860000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hober: i've been getting a lot of pressure to work on non-editing stuff as well","msgtype":"m.text"},"ts":1330018920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hober: but i've been sneakingly avoiding that :P","msgtype":"m.text"},"ts":1330018921000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1330018922000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: because from PR point of view, editing isn't the most shiny new feature","msgtype":"m.text"},"ts":1330018923000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hober: it sorta works.","msgtype":"m.text"},"ts":1330018924000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it might not be shiny, but it's super important","msgtype":"m.text"},"ts":1330018925000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: and only people who work on editors care. (i.e. developers of tinyMCE, CKEditor, etc...)","msgtype":"m.text"},"ts":1330018926000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"IMO, there's a lot of low-hanging fruit.","msgtype":"m.text"},"ts":1330018980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hober: right. people get super upset whenever I introduce a regression","msgtype":"m.text"},"ts":1330018981000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"If I were working on editing, the first thing I'd do is try to match the spec (= roughly IE/Opera) on linebreaks.","msgtype":"m.text"},"ts":1330018982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"*nod*","msgtype":"m.text"},"ts":1330018983000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"That's probably the most blatant incompatibility between browsers.","msgtype":"m.text"},"ts":1330018984000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: oh yeah...","msgtype":"m.text"},"ts":1330018985000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: what do we do with line breaks?","msgtype":"m.text"},"ts":1330018986000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"<p> vs. <div> vs. <br>.","msgtype":"m.text"},"ts":1330018987000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: can we add new switch?","msgtype":"m.text"},"ts":1330018988000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I specced <p>, basically.","msgtype":"m.text"},"ts":1330018989000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I could, if people are going to implement it . . .","msgtype":"m.text"},"ts":1330018990000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: did you add new toggling switch per ojan's suggestion?","msgtype":"m.text"},"ts":1330019040000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: on the condition that each editing host gets execCommand method?","msgtype":"m.text"},"ts":1330019041000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's on my list of things to do, but again, I've mostly put aside editing work for now.","msgtype":"m.text"},"ts":1330019042000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: okay.","msgtype":"m.text"},"ts":1330019043000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I'll probably return to it sometime.","msgtype":"m.text"},"ts":1330019044000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: ping me when you've done that.","msgtype":"m.text"},"ts":1330019045000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I think that's the most logical thing to do","msgtype":"m.text"},"ts":1330019046000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"You're probably CCd on the relevant bugs.","msgtype":"m.text"},"ts":1330019047000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: as far as I know, there are a lot of legacy content that relies on the fact webkit produces div on line break :(","msgtype":"m.text"},"ts":1330019100000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Web content or WebKit-only content?","msgtype":"m.text"},"ts":1330019101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: both","msgtype":"m.text"},"ts":1330019102000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: the latter is more serious.","msgtype":"m.text"},"ts":1330019103000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"You could always have a different default for web users and other users.","msgtype":"m.text"},"ts":1330019104000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: because Microsoft Outlook & Apple Mail both use WebKit","msgtype":"m.text"},"ts":1330019105000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Outlook uses WebKit?  o_O","msgtype":"m.text"},"ts":1330019160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: and we can't regress them :(","msgtype":"m.text"},"ts":1330019161000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: yeah on Mac","msgtype":"m.text"},"ts":1330019162000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Oh, makes sense.","msgtype":"m.text"},"ts":1330019163000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They can't very well use Trident on Mac.","msgtype":"m.text"},"ts":1330019164000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah ever since they discontinued IE for Mac","msgtype":"m.text"},"ts":1330019165000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: although I don't think they used Trident on Mac","msgtype":"m.text"},"ts":1330019166000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"They used Tasman.","msgtype":"m.text"},"ts":1330019167000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: they wrote the engine from scratch for Mac","msgtype":"m.text"},"ts":1330019168000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1330019220000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"ehsan, do you think we could default styleWithCSS to false without breaking too much stuff?  I think authors just set styleWithCSS to false unconditionally at the start of all their scripts, in practice . . .","msgtype":"m.text"},"ts":1330019221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That would be a nice compat win.","msgtype":"m.text"},"ts":1330019222000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"might ask to spend some time working on Gecko editing stuff after he's done with all this CSS stuff, if he feels like doing coding instead of spec work","msgtype":"m.emote"},"ts":1330019280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Fortunately, there's almost no such thing as Gecko-specific content, so Gecko is often free to change to match other browsers.","msgtype":"m.text"},"ts":1330019281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Unlike IE and WebKit.","msgtype":"m.text"},"ts":1330019282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that'll be nice.","msgtype":"m.text"},"ts":1330019283000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: although leaving default to true seems okay as long as there's an API to toggle it.","msgtype":"m.text"},"ts":1330019340000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Two biggest changes I would make: output <p> instead of <br>, and default styleWithCSS to false.","msgtype":"m.text"},"ts":1330019341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, that's not a big deal because authors just force it to false.","msgtype":"m.text"},"ts":1330019342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But they shouldn't have to.","msgtype":"m.text"},"ts":1330019343000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: we might consider something like","msgtype":"m.text"},"ts":1330019344000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"So it's an easy fix.","msgtype":"m.text"},"ts":1330019345000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: turning on standard compliant mode when we see HTML5 style DOCTYPE","msgtype":"m.text"},"ts":1330019346000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: and fallback to legacy behavior elsewhere","msgtype":"m.text"},"ts":1330019400000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"More quirks, in other words?","msgtype":"m.text"},"ts":1330019401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Quirks are bad.","msgtype":"m.text"},"ts":1330019402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Doesn't WebKit editing code already have different codepaths in some places for Apple Mail?","msgtype":"m.text"},"ts":1330019460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: well, we don't.","msgtype":"m.text"},"ts":1330019461000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we just look for specific classes and elements :(","msgtype":"m.text"},"ts":1330019462000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sigh....","msgtype":"m.text"},"ts":1330019463000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1330019464000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: you can add <blockquote type=\"cite\"> and webkit treats them differently than a regular blockquote :(","msgtype":"m.text"},"ts":1330019520000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ouch.","msgtype":"m.text"},"ts":1330019521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but that's just a secret between you and me. don't tell anyone, and we should be okay :)","msgtype":"m.text"},"ts":1330019580000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"or hopefully so.","msgtype":"m.text"},"ts":1330019581000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: anyways, https://bugs.webkit.org/show_bug.cgi?id=12250 is the control selection bug I was talking about","msgtype":"m.text"},"ts":1330019582000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: it seems like authors expect image, etc... to be re-sizable in contenteditable regions","msgtype":"m.text"},"ts":1330019640000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1330019641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's more of a QoI issue than a spec issue, though.","msgtype":"m.text"},"ts":1330019642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: maybe.","msgtype":"m.text"},"ts":1330019643000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I mean, I can add a line to the spec saying UAs have to let users resize them.","msgtype":"m.text"},"ts":1330019644000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but they expect this to work","msgtype":"m.text"},"ts":1330019645000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I have a bug open about that.","msgtype":"m.text"},"ts":1330019646000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so you should probably say something about it.","msgtype":"m.text"},"ts":1330019647000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: yeah","msgtype":"m.text"},"ts":1330019648000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: maybe also move it around by dragging it?","msgtype":"m.text"},"ts":1330019649000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"But precise interop isn't necessary as long as UAs provide some way to resize, so there's not much for the spec to say.","msgtype":"m.text"},"ts":1330019700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's a spec bug for that too.","msgtype":"m.text"},"ts":1330019701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right.","msgtype":"m.text"},"ts":1330019702000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: but I'm thinking that there should probably be some event firing to let authors know of the resize, etc...","msgtype":"m.text"},"ts":1330019703000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's not like a switch to change the default block type, where the spec needs to say how authors call it.","msgtype":"m.text"},"ts":1330019704000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe . . . do existing UAs do that?","msgtype":"m.text"},"ts":1330019705000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: in the case of resizing tables, things are a lot of trickier","msgtype":"m.text"},"ts":1330019706000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: because width of a row can be specified by td, or tr","msgtype":"m.text"},"ts":1330019760000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"You can do foo { resize: both } on existing stuff already.  http://dev.w3.org/csswg/css3-ui/#resize","msgtype":"m.text"},"ts":1330019761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Table width is a nightmare.","msgtype":"m.text"},"ts":1330019762000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean height*","msgtype":"m.text"},"ts":1330019763000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: yeah.","msgtype":"m.text"},"ts":1330019764000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: but we need to support it at some point","msgtype":"m.text"},"ts":1330019765000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=13795#c4","msgtype":"m.text"},"ts":1330019766000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: things get awfully tricky when we have rowspan and colspan :(","msgtype":"m.text"},"ts":1330019820000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Tables are a nightmare period.","msgtype":"m.text"},"ts":1330019821000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I know.","msgtype":"m.text"},"ts":1330019880000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: but people DO use them :(","msgtype":"m.text"},"ts":1330019881000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, if there's something you want to implement in the near future and it's blocked on there not being a spec, tell me and I can spend some time working on that.  E.g., if you actually plan to implement a switch that lets authors have <p> instead of <div> for newlines but aren't doing it because there's no spec, I'll write the spec today.","msgtype":"m.text"},"ts":1330019882000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: and enterprise folks LOVE them","msgtype":"m.text"},"ts":1330019883000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I'd like to implement that one soon","msgtype":"m.text"},"ts":1330019884000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: because that's probably the only sane way for us to switch","msgtype":"m.text"},"ts":1330019940000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: at least in the near future","msgtype":"m.text"},"ts":1330019941000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I can spend some time on it, then.","msgtype":"m.text"},"ts":1330019942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that'll be great!","msgtype":"m.text"},"ts":1330019943000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Most of the work will be writing tests.","msgtype":"m.text"},"ts":1330019944000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: also before/after edit command events","msgtype":"m.text"},"ts":1330019945000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: they appear to be useful even today.","msgtype":"m.text"},"ts":1330019946000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if we can let authors override the default behavior","msgtype":"m.text"},"ts":1330019947000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=15527 https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118","msgtype":"m.text"},"ts":1330019948000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: because then authors can selectively override the default behavior using my UndoManager API","msgtype":"m.text"},"ts":1330020000000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, here's my plan for edit events: https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118#c23","msgtype":"m.text"},"ts":1330020001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Does that look good to you?","msgtype":"m.text"},"ts":1330020002000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that should give us a nice bridge between the current broken world and the new interop world :)","msgtype":"m.text"},"ts":1330020003000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"No one ever gave feedback, so I got discouraged and forgot about it.","msgtype":"m.text"},"ts":1330020004000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: ah, oops. I wasn't aware of this bug :(","msgtype":"m.text"},"ts":1330020060000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"despite of the fact i'm cc-ed :(","msgtype":"m.text"},"ts":1330020061000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Tell me if you like my scheme for implementing those events.","msgtype":"m.text"},"ts":1330020240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah, your proposal seems reasonable.","msgtype":"m.text"},"ts":1330020300000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1330020301000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"comments on the bug enthusiatically","msgtype":"m.emote"},"ts":1330020600000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1330020720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: hm... wait so you don't think we should fire those events for script-initiated execCommands?","msgtype":"m.text"},"ts":1330020840000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: why not?","msgtype":"m.text"},"ts":1330020841000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: beforeInput/input events are fired synchronously at least in webkit","msgtype":"m.text"},"ts":1330020842000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"refreshes his memory","msgtype":"m.emote"},"ts":1330020900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ack, synchronous events are evil.","msgtype":"m.text"},"ts":1330020901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What triggers them synchronously?","msgtype":"m.text"},"ts":1330020902000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"We're trying to get rid of mutation events exactly because they're synchronous . . .","msgtype":"m.text"},"ts":1330020903000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you want to synchronously hook into execCommand, you could always write a wrapper for it.","msgtype":"m.text"},"ts":1330020960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: beforeInput/input","msgtype":"m.text"},"ts":1330020961000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: they're okay","msgtype":"m.text"},"ts":1330020962000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"If you want to hook into other scripts' calls too, you can overwrite the method on the prototype . . .","msgtype":"m.text"},"ts":1330020963000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: because beforeInput/input won't fire as a side effect of something else :)","msgtype":"m.text"},"ts":1330020964000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: the only function that could fire these events is execCommand","msgtype":"m.text"},"ts":1330021020000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"What if you call execCommand() from the handler?","msgtype":"m.text"},"ts":1330021021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Everything has to be re-entrant?","msgtype":"m.text"},"ts":1330021022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but you can do that today.","msgtype":"m.text"},"ts":1330021023000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: blur, focusout, etc... all fire synchronously.","msgtype":"m.text"},"ts":1330021024000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"tests blur","msgtype":"m.emote"},"ts":1330021025000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"they are synchronous, and it's a real nightmare","msgtype":"m.text"},"ts":1330021080000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hmm, onfocus is sync in every browser but IE.","msgtype":"m.text"},"ts":1330021140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cinput%20value%3D%22some%20text%22%20onfocus%3D%22w('b')%22%3E%0A%3Cscript%3E%0Aw(%22a%22)%3B%0Adocument.querySelector(%22input%22).focus()%3B%0Aw(%22c%22)%3B%0A%3C%2Fscript%3E","msgtype":"m.text"},"ts":1330021141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah, it's pretty annoying.","msgtype":"m.text"},"ts":1330021142000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: beforeunload as well if you have img, iframe, etc... :(","msgtype":"m.text"},"ts":1330021143000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: so we can't get away with these sync events.","msgtype":"m.text"},"ts":1330021200000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"IE seems to make focus async, at least in that test.","msgtype":"m.text"},"ts":1330021201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=16091","msgtype":"m.text"},"ts":1330021202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: on the other hand, we might be able to make execCommand not re-entrant, for example","msgtype":"m.text"},"ts":1330021203000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Do DOM or HTML even define such a thing as synchronous events?","msgtype":"m.text"},"ts":1330021260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so that if you try to call execCommand inside another execCommand or in some event handler trigged by another execCommand, we can throw","msgtype":"m.text"},"ts":1330021261000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"DOM I'm pretty sure doesn't.","msgtype":"m.text"},"ts":1330021262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: DOM","msgtype":"m.text"},"ts":1330021263000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1330021264000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: at least DOM 3","msgtype":"m.text"},"ts":1330021265000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Well, no one uses DOM 3.","msgtype":"m.text"},"ts":1330021266000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: the problem is that if we don't fire them synchronously, we'll never be able to propagate events to ancestors' event listeners","msgtype":"m.text"},"ts":1330021320000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: unless we store the vector of ancestors :(","msgtype":"m.text"},"ts":1330021321000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: which will be a huge memory bloat","msgtype":"m.text"},"ts":1330021322000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1330021323000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You have to do that, no?","msgtype":"m.text"},"ts":1330021324000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: because once the node is removed","msgtype":"m.text"},"ts":1330021325000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: the node doesn't have a parent anymore","msgtype":"m.text"},"ts":1330021326000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: and we wouldn't know to which node the event should be propagated","msgtype":"m.text"},"ts":1330021327000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Why not just not fire at ancestors if the node is removed before the event runs?","msgtype":"m.text"},"ts":1330021328000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but then you'll never receive that event","msgtype":"m.text"},"ts":1330021380000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: unless you've attached EL on the node you're removing","msgtype":"m.text"},"ts":1330021381000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"How likely is it that the node will be removed from its parent between the event being fired and running?","msgtype":"m.text"},"ts":1330021382000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also: it's an array of a few pointers for every event fired.  Why should it be such memory bloat?","msgtype":"m.text"},"ts":1330021383000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"How many events get fired anyway?","msgtype":"m.text"},"ts":1330021440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: we fire events very often","msgtype":"m.text"},"ts":1330021441000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we have lots of optimizations to minimize the number of events to fire","msgtype":"m.text"},"ts":1330021500000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: and the cost per event dispatches","msgtype":"m.text"},"ts":1330021501000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1330021502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hm.  Can someone explain why attributes in WebIDL end up on the prototype of an object rather than the object itself?","msgtype":"m.text"},"ts":1330021503000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I'm sure someone wan","msgtype":"m.text"},"ts":1330021504000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"can*","msgtype":"m.text"},"ts":1330021505000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"TabAtkins_, \"why\" in what sense?","msgtype":"m.text"},"ts":1330021506000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"Why\" as in \"what part of the spec says that\", or \"why does the spec say that\", or \"why did browsers implement it that way originally\", or . . . ?","msgtype":"m.text"},"ts":1330021507000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The spec says it because that's what browsers do, and browsers do it because whatever crazy person thought up JS apparently thought a prototype-based object model was cool.","msgtype":"m.text"},"ts":1330021560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Context is recent discussion about moving the CSSStyleDeclaration from explicitly listing attributes to using a getter, because the former puts the properties on the prototype while the latter puts them on the object.","msgtype":"m.text"},"ts":1330021561000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(which actually it kind of is)","msgtype":"m.text"},"ts":1330021562000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The latter doesn't put them on the object.  It just invokes the getter on the prototype.","msgtype":"m.text"},"ts":1330021563000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Prototype-based OO is cool.  But I don't understand the reasoning behind object properties living on the prototype.","msgtype":"m.text"},"ts":1330021620000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"If you want them on the object for some reason, you can use [Unforgeable].","msgtype":"m.text"},"ts":1330021621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, then Boris is wrong.","msgtype":"m.text"},"ts":1330021622000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1330021623000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"is very hesitant to ever say Boris is wrong :)","msgtype":"m.emote"},"ts":1330021624000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(That's a very rare event.)","msgtype":"m.text"},"ts":1330021625000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"looks at the thread","msgtype":"m.emote"},"ts":1330021626000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1330021627000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor, TabAtkins_: but we Do want them on prototype no?","msgtype":"m.text"},"ts":1330021628000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Probably Boris is right.","msgtype":"m.text"},"ts":1330021629000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"otherwise, it'll be troublesome to do expandos on them","msgtype":"m.text"},"ts":1330021630000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I don't know!  Why would we?  I don't understand the reasoning.","msgtype":"m.text"},"ts":1330021680000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: so if I wanted to create a new class that inherits from an object with those attributes","msgtype":"m.text"},"ts":1330021681000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins_: then I'll have to manually copy all attributes","msgtype":"m.text"},"ts":1330021682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins_: if they were not in prototype, no?","msgtype":"m.text"},"ts":1330021683000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Philip`, https://www.w3.org/Bugs/Public/show_bug.cgi?id=15925 is for you","msgtype":"m.text"},"ts":1330021684000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Depends on how you're doing your inheritance. ^_^","msgtype":"m.text"},"ts":1330021740000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Are you chaining from the prototype, or using an exemplar object?","msgtype":"m.text"},"ts":1330021741000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: sure. but the most common approach is by using prototype chain.","msgtype":"m.text"},"ts":1330021742000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think I recall that WebIDL is defined to use prototype chaining, so okay.","msgtype":"m.text"},"ts":1330021743000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"WebIDL for ES doesn't normally put any own properties on the objects themselves, only on the interface, IIRC.","msgtype":"m.text"},"ts":1330021800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Except for [Unforgeable] and maybe some other cases.","msgtype":"m.text"},"ts":1330021801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is looking at getters now","msgtype":"m.emote"},"ts":1330021802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right.","msgtype":"m.text"},"ts":1330021803000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Where \"interface\" means \"prototype object\", yeah.","msgtype":"m.text"},"ts":1330021804000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"<3 \"latest editor's draft\" links.","msgtype":"m.text"},"ts":1330021860000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"AryehGregor, AryehGregor: I think some JS engines optimize attributes on prototype","msgtype":"m.text"},"ts":1330021861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ugh.. I mean AryehGregor & TabAtkins_","msgtype":"m.text"},"ts":1330021862000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Er, right.","msgtype":"m.text"},"ts":1330021863000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Urgh, what is squatting my ordinary name?","msgtype":"m.text"},"ts":1330021864000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_, AryehGregor: because all objects that share the same prototype can then share some data structure internally","msgtype":"m.text"},"ts":1330021865000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"needs to learn more about JS engines","msgtype":"m.emote"},"ts":1330021920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"we just need to summon some ES5 gurus here.","msgtype":"m.text"},"ts":1330021921000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"arv: ?","msgtype":"m.text"},"ts":1330021922000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"gsnedders?","msgtype":"m.text"},"ts":1330021980000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ah, that's better.","msgtype":"m.text"},"ts":1330021981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/WebIDL/#indexed-and-named-properties","msgtype":"m.text"},"ts":1330021982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/WebIDL/#getownproperty","msgtype":"m.text"},"ts":1330022040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, yeah","msgtype":"m.text"},"ts":1330022100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":".","msgtype":"m.text"},"ts":1330022101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So if you have a getter, the properties all become own properties.","msgtype":"m.text"},"ts":1330022102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"isn't sure why","msgtype":"m.emote"},"ts":1330022103000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Except if you have [NamedPropertiesObject].","msgtype":"m.text"},"ts":1330022104000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1330022105000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"But that's cautioned against.","msgtype":"m.text"},"ts":1330022106000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: why do we have all those exotic things :(","msgtype":"m.text"},"ts":1330022160000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Also, that doesn't work if you have a setter.","msgtype":"m.text"},"ts":1330022161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, time to email public-script-coord and see what's up.","msgtype":"m.text"},"ts":1330022162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa, \"Please leave your sense of logic at the door, thanks!\"","msgtype":"m.text"},"ts":1330022163000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: we should rename that to DeprecatedNamedPrope\u001crtiesObject","msgtype":"m.text"},"ts":1330022164000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: so that people won't use it","msgtype":"m.text"},"ts":1330022165000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: anyway, comment posted on https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118","msgtype":"m.text"},"ts":1330022220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1330022221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: not firing events for script-initiated execCommand may not be as bad as I initially thought due to interop with mutation observer API","msgtype":"m.text"},"ts":1330022222000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but I think it's still nice to fire them.","msgtype":"m.text"},"ts":1330022223000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sends emails to TinyMCE CKEditor developers","msgtype":"m.emote"},"ts":1330022280000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I wonder if CK has already committed my patch to stop using element.all","msgtype":"m.text"},"ts":1330022340000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: one question","msgtype":"m.text"},"ts":1330022460000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1330022461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: is the plan to add new property on the event object to expose execCommand name?","msgtype":"m.text"},"ts":1330022462000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: WebKit's old HTML parser as nowhere near as bad as Gecko's old HTML parser","msgtype":"m.text"},"ts":1330022463000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: LOL","msgtype":"m.text"},"ts":1330022464000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"There should be a band called The Designated Experts","msgtype":"m.text"},"ts":1330022465000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rniwa, sure, I guess.","msgtype":"m.text"},"ts":1330022466000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"^truth","msgtype":"m.text"},"ts":1330022467000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"And value.","msgtype":"m.text"},"ts":1330022468000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah","msgtype":"m.text"},"ts":1330022520000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and The Unpaired Surrogates","msgtype":"m.text"},"ts":1330022521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"AryehGregor: so something like event.editingAction and event.editingActionValue?","msgtype":"m.text"},"ts":1330022522000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah, I'll come up with names.","msgtype":"m.text"},"ts":1330022523000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd let hsivonen come up with names :)","msgtype":"m.text"},"ts":1330022524000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"s/as nowhere/was nowhere/","msgtype":"m.text"},"ts":1330022525000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The Grapheme Clusterfuck","msgtype":"m.text"},"ts":1330022820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The Adoption Agency","msgtype":"m.text"},"ts":1330022821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: thanks.","msgtype":"m.text"},"ts":1330022880000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: back, reading backlog","msgtype":"m.text"},"ts":1330022881000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"rniwa: What was the question?","msgtype":"m.text"},"ts":1330023060000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"AryehGregor: CSS resize property is insufficient for https://bugs.webkit.org/show_bug.cgi?id=12250","msgtype":"m.text"},"ts":1330023061000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, why?","msgtype":"m.text"},"ts":1330023120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: it only changes the apparent size","msgtype":"m.text"},"ts":1330023121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: not width and height property/content attribute","msgtype":"m.text"},"ts":1330023122000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It adds style=\"width: x; height: x\".","msgtype":"m.text"},"ts":1330023123000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In browsers I tested in.","msgtype":"m.text"},"ts":1330023124000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"arv: the question is why WebIDL defines attributes on prototype instead on objects","msgtype":"m.text"},"ts":1330023125000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"That's how browsers work, and how JS works . . .","msgtype":"m.text"},"ts":1330023126000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"arv: my answer was that it's needed for inheritance","msgtype":"m.text"},"ts":1330023180000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"arv: but thought you might a better answer for TabAtkins","msgtype":"m.text"},"ts":1330023181000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Not strictly.  It also defines [Unforgeable].","msgtype":"m.text"},"ts":1330023182000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah...","msgtype":"m.text"},"ts":1330023183000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"That still works with inheritance, I think.","msgtype":"m.text"},"ts":1330023184000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"rniwa: The main reason to use getters and setters on the [[Prototype]] is to allow inheritance","msgtype":"m.text"},"ts":1330023185000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: okay. so I was telling a lie :P","msgtype":"m.text"},"ts":1330023186000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I wasn't*","msgtype":"m.text"},"ts":1330023187000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: also, if these were data properties they could not have side effects so for example innerHTML could not be asked for lazily","msgtype":"m.text"},"ts":1330023240000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"AryehGregor: ah, you're right. I was not checking the right element :(","msgtype":"m.text"},"ts":1330023241000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sorry about the noise.","msgtype":"m.text"},"ts":1330023242000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"arv, they could be accessor properties but still be on the object itself.","msgtype":"m.text"},"ts":1330023243000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I guess the only thing is that it needs to be undoable.","msgtype":"m.text"},"ts":1330023244000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Sure.","msgtype":"m.text"},"ts":1330023300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yes, that would still be valid when it comes to following the rules of js semantics","msgtype":"m.text"},"ts":1330023301000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I believe that's how [Unforgeable] properties work in practice.","msgtype":"m.text"},"ts":1330023302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but it would be ineffiecient and not as useful","msgtype":"m.text"},"ts":1330023303000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"Unless you don't want authors to be able to mess with the prototype, which is occasionally the case.","msgtype":"m.text"},"ts":1330023360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like for certain Window properties.","msgtype":"m.text"},"ts":1330023361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: do you know how I can make resize property work with img?","msgtype":"m.text"},"ts":1330023362000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: well, host object can break any logic reasoning so anything is doable. The goal of using getters and setters on the prototype for webidl attributes was to make webidl more sane","msgtype":"m.text"},"ts":1330023363000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"AryehGregor: I've tried some but doesn't seem to wokr","msgtype":"m.text"},"ts":1330023364000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's possible that we have a bug there","msgtype":"m.text"},"ts":1330023420000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, resize properties is not very well defined.","msgtype":"m.text"},"ts":1330023421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"This says it shouldn't apply to a regular img: http://dev.w3.org/csswg/css3-ui/#resize","msgtype":"m.text"},"ts":1330023422000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But I think the spec is wrong.","msgtype":"m.text"},"ts":1330023423000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I posted to www-style about it at some point, but it never changed.","msgtype":"m.text"},"ts":1330023424000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-style/2011Aug/0565.html","msgtype":"m.text"},"ts":1330023480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"arv: The interesting issue is that using the getter/setter/etc stuff in WebIDL establishes own properties, rather than prototype properties.","msgtype":"m.text"},"ts":1330023481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And the flag that switches it to non-own properties is marked as being used only for legacy.","msgtype":"m.text"},"ts":1330023482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: That can't be right","msgtype":"m.text"},"ts":1330023483000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I'm asking public-script-coord about it now.","msgtype":"m.text"},"ts":1330023484000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"arv: We just looked it up.  ^_^","msgtype":"m.text"},"ts":1330023485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: looking at webidl specs now","msgtype":"m.text"},"ts":1330023540000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/WebIDL/#indexed-and-named-properties\\","msgtype":"m.text"},"ts":1330023541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ah, indexed and named properties are not the same","msgtype":"m.text"},"ts":1330023542000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"getter/setter = indexed/named properties, more or less.","msgtype":"m.text"},"ts":1330023543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: those require proxy like behavior","msgtype":"m.text"},"ts":1330023544000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"TabAtkins, the legacy thing is for the global scope polluter only","msgtype":"m.text"},"ts":1330023600000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: not at all","msgtype":"m.text"},"ts":1330023601000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"No?","msgtype":"m.text"},"ts":1330023602000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: indexed/named properties == Proxy","msgtype":"m.text"},"ts":1330023603000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I mean WebIDL's getter/setter qualifiers, of course, not ES getter/setter.","msgtype":"m.text"},"ts":1330023604000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: sorry, different terminalogy","msgtype":"m.text"},"ts":1330023605000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: I thought the best way to fix CSSStyleDeclaration from being a set list of properties (which is obviously going to be forever incomplete) would be to use getter/setter to establish named properties.","msgtype":"m.text"},"ts":1330023606000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: What does IE do?","msgtype":"m.text"},"ts":1330023660000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"TabAtkins, why not just add the properties individually to the prototype object, though?","msgtype":"m.text"},"ts":1330023661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: hm... but <img src=\"blah.png\" style=\"overflow:auto;resize:both;\"> should still be resizable, no?","msgtype":"m.text"},"ts":1330023662000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"arv: Everyone but us puts the properties on the prototype.  We mark them as own properties.","msgtype":"m.text"},"ts":1330023720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: I don't understand.","msgtype":"m.text"},"ts":1330023721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa, I don't see why not.  overflow should make no difference for things that have intrinsic widths.","msgtype":"m.text"},"ts":1330023722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, I mean, what's wrong with the status quo?","msgtype":"m.text"},"ts":1330023723000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah, okay. so I think this is a webkit bu","msgtype":"m.text"},"ts":1330023724000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"bug*","msgtype":"m.text"},"ts":1330023725000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's clearly incomplete, and basically required to be, forever?","msgtype":"m.text"},"ts":1330023726000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: http://simple-rte.rniwa.com/?editor=%3Cimg%20src%3D%22https%3A//rniwa.com/wp-content/latex/5f7/5f70c79d395af9fe2eb98c8b362d0bed-ffffff-000000-0.png%22%20style%3D%22overflow%3Aauto%3Bresize%3Aboth%3B%22%3E&designmode=false&script=document.getElementById%28%27editor%27%29.focus%28%29%3B","msgtype":"m.text"},"ts":1330023727000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: IE has ES getters/setters for all known properties on CSSStyleDeclarationPrototype","msgtype":"m.text"},"ts":1330024380000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"TabAtkins: this seems to be the only sane thing to me","msgtype":"m.text"},"ts":1330024381000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv, that's what the spec currently says, IIRC","msgtype":"m.text"},"ts":1330024440000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Which means in WebIDL terms, they're just regular attributes on the interface.","msgtype":"m.text"},"ts":1330024441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is what the spec says, yeah.","msgtype":"m.text"},"ts":1330024442000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger`: good","msgtype":"m.text"},"ts":1330024443000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"Using ES getters and setters is definitely the correct behavior (so you can do lazy generation), and the spec currently requires them to be on the prototype.","msgtype":"m.text"},"ts":1330024444000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Attributes in WebIDL are always accessor properties, not data properties, AFAIK.","msgtype":"m.text"},"ts":1330024445000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1330024446000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"But they're currently not spec-compliant if they support more than the 2.1 properties explicitly listed in CSSOM.","msgtype":"m.text"},"ts":1330024447000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which I'd like to fix, for obvious reasons.","msgtype":"m.text"},"ts":1330024448000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, well, by that logic nobody is spec-compliant if they support any feature that's not in some particular spec.","msgtype":"m.text"},"ts":1330024500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"OK. It is unclear to me what the problem is then (except of course that the JSC and V8 bindings in WebKit are broken)","msgtype":"m.text"},"ts":1330024501000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"The problem is that the IDL in the CSSOM is broken.","msgtype":"m.text"},"ts":1330024502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I'm trying to fix it.","msgtype":"m.text"},"ts":1330024503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How so?","msgtype":"m.text"},"ts":1330024504000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: It has only a small list of properties on the interface, missing all the CSS3 properties.","msgtype":"m.text"},"ts":1330024505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Why is adding a webidl attribute for every css property not the right way to do this?","msgtype":"m.text"},"ts":1330024560000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I assumed that the best way to fix this was to use IDL getter/setter, and define the list of named properties to be the CSS properties that the impl supports (suitably converted from dashes to camel-case).","msgtype":"m.text"},"ts":1330024561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"arv: Because the list will change continuously, and it's silly to change CSSOM every time we publish a new CSS spec.","msgtype":"m.text"},"ts":1330024562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"When this is a mechanical addition.","msgtype":"m.text"},"ts":1330024563000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You could also say that any other supported CSS properties have to be regular IDL attributes too.","msgtype":"m.text"},"ts":1330024564000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, indeed","msgtype":"m.text"},"ts":1330024565000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"TabAtkins, so use partial interfaces :)","msgtype":"m.text"},"ts":1330024620000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: Requiring every spec to apply diffs to the interface for a mechanical addition is almost as silly.","msgtype":"m.text"},"ts":1330024621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I.e., if a spec defines foo-bar, say that it implies \"partial interface CSSStyleDeclarationValue { attribute DOMString fooBar; };\" with behavior as defined by CSSOM.","msgtype":"m.text"},"ts":1330024622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You don't have to require the other specs to actually spell out the partial interfaces.","msgtype":"m.text"},"ts":1330024623000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Hm, I guess that would work.","msgtype":"m.text"},"ts":1330024624000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That works too","msgtype":"m.text"},"ts":1330024625000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"FWIW, many other specs will realistically have to spell out behavior anyway.","msgtype":"m.text"},"ts":1330024680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But every spec needs to define CSSOM stuff anyway","msgtype":"m.text"},"ts":1330024681000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Because lots of properties have non-obvious serialization.","msgtype":"m.text"},"ts":1330024682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"We'll have to start defining serialization, but I have hope that for most cases we can do that mechanically too.","msgtype":"m.text"},"ts":1330024683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anne already attempted that.","msgtype":"m.text"},"ts":1330024684000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it will change all the time. That is fine. Just like Ms2ger` said, use partial or supplemental interfaces. If you defined a new CSS property you have to add some idl","msgtype":"m.text"},"ts":1330024685000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"You have to define an order for computed values, at least.","msgtype":"m.text"},"ts":1330024686000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like, browsers disagree on whether the computed style of textShadow gets serialized with the color first or last.","msgtype":"m.text"},"ts":1330024740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yeah, that was already handled by Anne's attempt - the order is whatever order appears in the grammar.","msgtype":"m.text"},"ts":1330024741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which means the order in the grammar is now retroactively significant when it previously wasn't.","msgtype":"m.text"},"ts":1330024742000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's not implemented yet, but it's an example of how it coudl be handled generally, without every spec needing to define it.","msgtype":"m.text"},"ts":1330024743000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css3-text/#text-shadow","msgtype":"m.text"},"ts":1330024744000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The \"Value\" puts the lengths first, and the \"Computed value\" puts the color first.","msgtype":"m.text"},"ts":1330024745000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Not necessarily.  We can always legacy-define things if necessary for compat.","msgtype":"m.text"},"ts":1330024746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yay for consistency.","msgtype":"m.text"},"ts":1330024747000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's probably why browsers disagree.","msgtype":"m.text"},"ts":1330024800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Heh, yeah.","msgtype":"m.text"},"ts":1330024801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, PLEASE PLEASE PLEASE someone define precise algorithmic serialization rules for everything in CSSOM.","msgtype":"m.text"},"ts":1330024802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's a trainwreck.","msgtype":"m.text"},"ts":1330024803000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes.  Absolutely.","msgtype":"m.text"},"ts":1330024804000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Browsers do ridiculously different things.","msgtype":"m.text"},"ts":1330024805000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like every one serializes colors differently.","msgtype":"m.text"},"ts":1330024806000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm not sure if that's part of Glen's current effort, but it'll be a very-soon thing.","msgtype":"m.text"},"ts":1330024807000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"IE mostly uses rgba(), everyone else uses rgb() if alpha is 1.","msgtype":"m.text"},"ts":1330024860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Gecko serializes transparent as \"transparent\" instead of \"rgba(0, 0, 0, 0)\".","msgtype":"m.text"},"ts":1330024861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And if it isn't, let's have AryehGregor edit another spec ;)","msgtype":"m.text"},"ts":1330024862000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: IE uses named colors if you specified them as such. ;_;","msgtype":"m.text"},"ts":1330024863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Except maybe only if you specify it as \"transparent\".","msgtype":"m.text"},"ts":1330024864000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1330024865000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger`: Nah, I can probably handle that.","msgtype":"m.text"},"ts":1330024866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Will you write tests too?  :)","msgtype":"m.text"},"ts":1330024867000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll be \"done\" with Flexbox and Images in the near future.","msgtype":"m.text"},"ts":1330024868000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, in upper case? Or was that something else...","msgtype":"m.text"},"ts":1330024869000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: Yes!","msgtype":"m.text"},"ts":1330024870000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Exhaustive tests?","msgtype":"m.text"},"ts":1330024871000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger`: Don't know - I think I lowercased everything defensively last time I wrote code to handle it.","msgtype":"m.text"},"ts":1330024920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor: Why not?","msgtype":"m.text"},"ts":1330024921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Please do.","msgtype":"m.text"},"ts":1330024922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is looking forward.","msgtype":"m.emote"},"ts":1330024923000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because those barely exist for CSS","msgtype":"m.text"},"ts":1330024924000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Tests barely exist for CSS period.  Except some reftests for 2.1.","msgtype":"m.text"},"ts":1330024925000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger`: Tests barely exist for CSS outside of 2.1. :/","msgtype":"m.text"},"ts":1330024926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, quite a few reftests for 2.1.","msgtype":"m.text"},"ts":1330024927000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"To be fair.","msgtype":"m.text"},"ts":1330024928000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/outside of 2.1//","msgtype":"m.text"},"ts":1330024929000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"How good is test coverage for 2.1?","msgtype":"m.text"},"ts":1330024930000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Mostly manual tests for CSS2.1","msgtype":"m.text"},"ts":1330024931000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Hey, a 30k testsuite isn't nothing.","msgtype":"m.text"},"ts":1330024932000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bad","msgtype":"m.text"},"ts":1330024933000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"They are mostly manual, but still.","msgtype":"m.text"},"ts":1330024980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ugh, manual.  Good grief.","msgtype":"m.text"},"ts":1330024981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1330024982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It takes about 10 hours to run it.","msgtype":"m.text"},"ts":1330024983000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're not being converted to reftests?","msgtype":"m.text"},"ts":1330024984000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"has done it several times.","msgtype":"m.emote"},"ts":1330024985000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"3 days, last I heard","msgtype":"m.text"},"ts":1330024986000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: 10 hours spread over 3 days. You probably last heard that from me. ^_^","msgtype":"m.text"},"ts":1330024987000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can't run tests continuously for 10 hours.","msgtype":"m.emote"},"ts":1330024988000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"From MS, actually :)","msgtype":"m.text"},"ts":1330024989000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"I know that when I was compiling the Chrome implementation report, it was 10 hours over 3 days.","msgtype":"m.text"},"ts":1330025040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And it was horrible.","msgtype":"m.text"},"ts":1330025041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wrote references for some MS tests a while ago, but I guess I should get them into the official test suite somehow...","msgtype":"m.text"},"ts":1330025042000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: No one putting in much time currently.  dbaron has a partially-completed effort that does most of them.","msgtype":"m.text"},"ts":1330025043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yay.","msgtype":"m.text"},"ts":1330025100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Aaagh, too much backlog.","msgtype":"m.text"},"ts":1330025101000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"I think it basically reftests all the tests against each other, so he could generate refs for tests that all render the same.","msgtype":"m.text"},"ts":1330025160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://bitbucket.org/ms2ger/css-tests/overview if anybody cares","msgtype":"m.text"},"ts":1330025161000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"TabAtkins, I thought that was Opera","msgtype":"m.text"},"ts":1330025162000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: Could be, I dunno.  Been a while.","msgtype":"m.text"},"ts":1330025163000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If I do say so myself, there are some pretty decent tests now for CSS Transforms.","msgtype":"m.text"},"ts":1330025340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although probably lots more reftests could be added.","msgtype":"m.text"},"ts":1330025341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, you don't have family members interested in spec work, do you? :)","msgtype":"m.text"},"ts":1330025342000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Probably not.  Sorry.","msgtype":"m.text"},"ts":1330025400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What about your evil twin, Roger G. Heyra?","msgtype":"m.text"},"ts":1330025401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I mean, my brother works in web development-related stuff and might be interested in a job, so if you really want, you could contact him.  I don't think he's actually very interested in spec work, though.","msgtype":"m.text"},"ts":1330025402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just saying it would be nice to have another competent editor/tester around :)","msgtype":"m.text"},"ts":1330025520000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Okay, so when DOM4 talks a","msgtype":"m.text"},"ts":1330025640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, so when DOM4 talks about dispatching an event, that's synchronous, right?","msgtype":"m.text"},"ts":1330025641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1330025642000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"So if specs want it to be async, they have to say to queue a task to fire the event?","msgtype":"m.text"},"ts":1330025643000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1330025644000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1330025645000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then I was just confused.","msgtype":"m.text"},"ts":1330025646000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So lots of events are really synchronous, I guess?","msgtype":"m.text"},"ts":1330025647000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I wouldn't guess so","msgtype":"m.text"},"ts":1330025700000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Hmm, this doesn't reference DOM4: http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#fire-a-simple-event","msgtype":"m.text"},"ts":1330025701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or it does, but they're not linked.","msgtype":"m.text"},"ts":1330025760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ueah","msgtype":"m.text"},"ts":1330025761000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"I got bored and started skimming, but if you didn't figure it out yet, attributes are on prototypes because it allows feature detection","msgtype":"m.text"},"ts":1330025762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not because it makes logical sense","msgtype":"m.text"},"ts":1330025820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, usually you can get an instance pretty easily.","msgtype":"m.text"},"ts":1330025821000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(e.g. you can feature detect XHR stuff without having to construct an XHR object)","msgtype":"m.text"},"ts":1330025822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"In the contexts of events, the terms fire and dispatch are used as defined in the DOM Core specification","msgtype":"m.text"},"ts":1330025823000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Also, this way you can fiddle with the value on the prototype.","msgtype":"m.text"},"ts":1330025824000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(2.1.4 Scripting)","msgtype":"m.text"},"ts":1330025880000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: XHR is an example where it is a huge pain","msgtype":"m.text"},"ts":1330025881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Makes sense.","msgtype":"m.text"},"ts":1330025882000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1330025883000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"[DOMCORE]","msgtype":"m.text"},"ts":1330025884000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Web DOM Core, A. van Kesteren. W3C.","msgtype":"m.text"},"ts":1330025885000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"If it helps, I argued several times that it didn't make logical sense, but the feature detection argument seems more compelling","msgtype":"m.text"},"ts":1330025886000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It also allows polyfills, right?","msgtype":"m.text"},"ts":1330025940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Plus, it matches what non-WebKit browsers do.","msgtype":"m.text"},"ts":1330025941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: In other backscroll related news, opera are absoutely interested in the editing spec","msgtype":"m.text"},"ts":1330025942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's good.","msgtype":"m.text"},"ts":1330025943000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Everyone seems to be interested.","msgtype":"m.text"},"ts":1330025944000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just no one seems to be implementing it.  :)","msgtype":"m.text"},"ts":1330025945000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(It's not what Opera does, right?)","msgtype":"m.text"},"ts":1330025946000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What isn't?","msgtype":"m.text"},"ts":1330025947000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"attributes on prototypes","msgtype":"m.text"},"ts":1330025948000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is it?","msgtype":"m.text"},"ts":1330025949000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't remember.","msgtype":"m.text"},"ts":1330025950000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's what IE and Gecko do, generally.","msgtype":"m.text"},"ts":1330026000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I thought we put them on the objects","msgtype":"m.text"},"ts":1330026001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"because I suggested that we copy Gecko at some point before there was a spec, but we decided not to","msgtype":"m.text"},"ts":1330026002000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: well we aren't rewriting our DocumentEdit right now, but it's not exactly a secret that our implementation doesn't have wonderful site-compat, so I imagine we will make good sometime","msgtype":"m.text"},"ts":1330026060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, hmm -- now I think I remember.  I think \"style\" in document.head is true, but Object.hasOwnProperty(document.head, \"style\") is false, and nothing in the prototype chain has an own property with that name either.","msgtype":"m.text"},"ts":1330026180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So . . . :)","msgtype":"m.text"},"ts":1330026181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The new Object.* APIs generally don't work too well with host objects, iirc","msgtype":"m.text"},"ts":1330026240000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Yeah, actually, that seems to be everyone's behavior . . . ?","msgtype":"m.text"},"ts":1330026300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is confused by that","msgtype":"m.emote"},"ts":1330026301000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, am I calling it wrong?","msgtype":"m.text"},"ts":1330026302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, hasOwnProperty() is on the prototype, not Object itself.","msgtype":"m.text"},"ts":1330026303000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oops.","msgtype":"m.text"},"ts":1330026304000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cscript%3E%0Aw(%22style%22%20in%20document.head)%0Avar%20obj%20%3D%20document.head%3B%0Ado%20%7B%0Aw(obj.hasOwnProperty(%22style%22))%3B%0Aobj%20%3D%20Object.getPrototypeOf(obj)%3B%0A%7D%20while%20(obj)%3B%0A%3C%2Fscript%3E","msgtype":"m.text"},"ts":1330026360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IE looks to be right here.","msgtype":"m.text"},"ts":1330026361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Opera and WebKit just put it straight on the object.","msgtype":"m.text"},"ts":1330026362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Gecko puts it on two different prototype objects in the chain.","msgtype":"m.text"},"ts":1330026363000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"anyone have access to an AT other than VO?","msgtype":"m.text"},"ts":1330026364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Gecko is weird","msgtype":"m.text"},"ts":1330026365000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"i'm trying to find if you can actually select system text labels or move the cursor through them","msgtype":"m.text"},"ts":1330026366000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But it will be all fancy in a couple of months","msgtype":"m.text"},"ts":1330026420000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"or if you can only select the entire label and have the UA read it and magnify it","msgtype":"m.text"},"ts":1330026421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So if I want special attributes like .editAction and .editActionValue on my input events, I have to make a new interface that inherits from Event, right?","msgtype":"m.text"},"ts":1330026480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1330026540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"InputEvent or some such","msgtype":"m.text"},"ts":1330026541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or reuse one of the existing interfaces","msgtype":"m.text"},"ts":1330026542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if one is suitable","msgtype":"m.text"},"ts":1330026543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's UIEvent in Gecko, seemingly.","msgtype":"m.text"},"ts":1330026544000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So input events on input/textarea would be Event, but contenteditable input events would be EditingInputEvent or something?","msgtype":"m.text"},"ts":1330026600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But they'd have the same name?","msgtype":"m.text"},"ts":1330026601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if you want","msgtype":"m.text"},"ts":1330026602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure if that's the best way to do it.","msgtype":"m.text"},"ts":1330026603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"you can upgrade the input on input/textarea","msgtype":"m.text"},"ts":1330026660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"events are flexible, any string can be used with any interface","msgtype":"m.text"},"ts":1330026661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only requirement is that the interface inherits from Event","msgtype":"m.text"},"ts":1330026720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We probably don't want the extra fields on input/textarea events.","msgtype":"m.text"},"ts":1330026721000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, I'll do it that way, I guess.","msgtype":"m.text"},"ts":1330026722000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"looks at the editing spec for the first time in forever","msgtype":"m.emote"},"ts":1330026780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The last time I changed anything editing-related (excluding selections) seems to be November 9.","msgtype":"m.text"},"ts":1330026900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jeez, voiceover makes no sense to me","msgtype":"m.text"},"ts":1330027020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Close your eyes ;)","msgtype":"m.text"},"ts":1330027021000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"btw","msgtype":"m.text"},"ts":1330027080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on Facebook","msgtype":"m.text"},"ts":1330027081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://a8.sphotos.ak.fbcdn.net/hphotos-ak-ash4/425243_10150563377962688_607047687_9171920_420903654_n.jpg","msgtype":"m.text"},"ts":1330027082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, so people can do \"new HashChangeEvent('input')\" and that creates a HashChangeEvent with type \"input\"?  That seems very confusing.","msgtype":"m.text"},"ts":1330027083000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah they can","msgtype":"m.text"},"ts":1330027084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok my conclusion is \"voice over doesn't let you move your cursor through text labels\"","msgtype":"m.text"},"ts":1330027085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the OS","msgtype":"m.text"},"ts":1330027086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, if that's what we want.","msgtype":"m.text"},"ts":1330027087000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk: Why do we have DOMStringList again?","msgtype":"m.text"},"ts":1330027320000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"Blame DOM3","msgtype":"m.text"},"ts":1330027380000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"source code says","msgtype":"m.text"},"ts":1330027381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" HTMLPropertiesCollection.names","msgtype":"m.text"},"ts":1330027382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" DataTranser.types","msgtype":"m.text"},"ts":1330027383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" Clipboard.types","msgtype":"m.text"},"ts":1330027384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" Document.styleSheetSets","msgtype":"m.text"},"ts":1330027385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" IndexedDB APIs","msgtype":"m.text"},"ts":1330027386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that's all","msgtype":"m.text"},"ts":1330027387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it's been a while since I surveyed","msgtype":"m.text"},"ts":1330027388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I saw that we (WebKit) changed from Array of Strings to DOMStringList and it made things a lot worse since now it is no longer a plain old array","msgtype":"m.text"},"ts":1330027389000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"oh never do that if it can be avoided","msgtype":"m.text"},"ts":1330027390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For dataTransfer.types","msgtype":"m.text"},"ts":1330027391000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"rniwa, do we want to fire beforeInput/input on unsupported commands too?","msgtype":"m.text"},"ts":1330027440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess we should fire beforeInput but not input, probably . . .","msgtype":"m.text"},"ts":1330027441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I think so","msgtype":"m.text"},"ts":1330027442000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"So you can cancel the beforeInput event to avoid throwing NotSupportedErr.","msgtype":"m.text"},"ts":1330027443000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: well but if you're talking about user-definied ones, i'm not so sure","msgtype":"m.text"},"ts":1330027444000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I mean, if the author does document.execCommand(\"sakfdsajda\"), does that fire beforeInput before it throws NotSupportedErr?","msgtype":"m.text"},"ts":1330027500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"arv: anyway above is the whole list, if that can somehow be changed we can drop it, though I can add a big fat warning in the spec to not use it maybe","msgtype":"m.text"},"ts":1330027501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arv: so that new specs adopt DOMString[] instead","msgtype":"m.text"},"ts":1330027502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Can WebIDL be specced in such a way that it maps DOMStringList to a JS Array?","msgtype":"m.text"},"ts":1330027560000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"annevk: I'm fine with DOMString[] too","msgtype":"m.text"},"ts":1330027561000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: heycam might know that","msgtype":"m.text"},"ts":1330027562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"typedef DOMString[] DOMStringList;","msgtype":"m.text"},"ts":1330027563000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"arv: but array does not have contains()","msgtype":"m.text"},"ts":1330027620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should really minimize DOMStringList and other list like interfaces that adds nothing over Array","msgtype":"m.text"},"ts":1330027621000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"We can add contains to Array.","msgtype":"m.text"},"ts":1330027622000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I'll make sure it is in ES","msgtype":"m.text"},"ts":1330027623000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"I'll make sure it is in ES6","msgtype":"m.text"},"ts":1330027624000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"indexOf != -1","msgtype":"m.text"},"ts":1330027680000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"or !~indexOf(i) ;-)","msgtype":"m.text"},"ts":1330027740000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"r-","msgtype":"m.text"},"ts":1330027800000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"1+indexOf","msgtype":"m.text"},"ts":1330027920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"rniwa, wait, does beforeInput actually exist for inputs/textareas?","msgtype":"m.text"},"ts":1330028040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It seems like it doesn't . . .","msgtype":"m.text"},"ts":1330028041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"seeking review for","msgtype":"m.text"},"ts":1330028220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<p class=warning>Although <code>DOMStringList</code> has been used","msgtype":"m.text"},"ts":1330028221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"historically, new specifications ought to avoid it and use arrays instead.","msgtype":"m.text"},"ts":1330028222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger`: arv: ^^","msgtype":"m.text"},"ts":1330028223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: LGTM","msgtype":"m.text"},"ts":1330028224000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1330028225000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"rniwa, if the beforeinput event handler removes the editing host from its parent, should the input event still fire?","msgtype":"m.text"},"ts":1330028340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk: q+ c+","msgtype":"m.text"},"ts":1330028341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm thinking yes.","msgtype":"m.text"},"ts":1330028342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/domcore/rev/d9074e2139ee","msgtype":"m.text"},"ts":1330028400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Damn, getCSSCanvasContext doesn't seem to work for \"experimental-webgl\". ;_;  It just fails silently and returns undefined instead of a context.","msgtype":"m.text"},"ts":1330028401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa, also, what if multiple beforeInput events are fired and only some are canceled?","msgtype":"m.text"},"ts":1330028460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Should canceling any one of them cancel the action?","msgtype":"m.text"},"ts":1330028461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or should it cause that editing host to not be affected?","msgtype":"m.text"},"ts":1330028462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Probably the latter.","msgtype":"m.text"},"ts":1330028463000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: currently beforeInput doesn't exist in any browser or spec","msgtype":"m.text"},"ts":1330028520000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1330028521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess I'll add it for contenteditable before anyone's specced it for anything else.  :)","msgtype":"m.text"},"ts":1330028522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, CSS?","msgtype":"m.text"},"ts":1330028523000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: Proprietary webkit function introduced in 2008 to achieve similar results to -moz-element().","msgtype":"m.text"},"ts":1330028640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You use it with -webkit-canvas() so you can use a canvas as an image.","msgtype":"m.text"},"ts":1330028700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1330028701000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"rniwa, do we want to fire events for miscellaneous commands?  copy/cut/paste/undo/redo/selectAll should have their own events.  I'm not sure if it's useful to fire events for styleWithCSS/useCSS.","msgtype":"m.text"},"ts":1330029000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"decides not to fire events for now","msgtype":"m.emote"},"ts":1330029001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems WebKit doesn't fire events.","msgtype":"m.text"},"ts":1330029120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie, what tool do you use to check IDL validity?","msgtype":"m.text"},"ts":1330030440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You mentioned one.","msgtype":"m.text"},"ts":1330030441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: hm... what do you mean by multiple beforeInput events are fired?","msgtype":"m.text"},"ts":1330030500000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, it's a corner case, so I don't think it's worth worrying about right now.","msgtype":"m.text"},"ts":1330030501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: are they all initiated by the same user action? or are they fired on different editing host?","msgtype":"m.text"},"ts":1330030502000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"But if you have two editing hosts and the selection spans both of them and you do something like bold, it will fire beforeInput at both per the spec I just wrote.","msgtype":"m.text"},"ts":1330030503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: not firing for selectAll, styleWithCSS, etc... make sense.","msgtype":"m.text"},"ts":1330030504000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(which is a WIP here: http://aryeh.name/tmp/editing/editing.html#methods-to-query-and-execute-commands )","msgtype":"m.text"},"ts":1330030505000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah...","msgtype":"m.text"},"ts":1330030506000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I think canceling any of that should cancel the entire action","msgtype":"m.text"},"ts":1330030560000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: makes the behavior simple","msgtype":"m.text"},"ts":1330030561000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think it should cancel it only for that editing host, probably.  But it's a corner case, so it doesn't matter much for now.","msgtype":"m.text"},"ts":1330030562000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: maybe but that'll make the implementation more complicated","msgtype":"m.text"},"ts":1330030620000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"For now I just say it works unless all the events are canceled.","msgtype":"m.text"},"ts":1330030680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: e.g. what if you had an event handler on the common ancestor of those two editing hosts","msgtype":"m.text"},"ts":1330030681000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: then we'll get two events and you have to cancel both","msgtype":"m.text"},"ts":1330030682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"That's confusing no matter what, I think.","msgtype":"m.text"},"ts":1330030683000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Unless we always fire the events at the document and not the editing host.","msgtype":"m.text"},"ts":1330030684000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Would that be better?","msgtype":"m.text"},"ts":1330030685000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then it's just one event.","msgtype":"m.text"},"ts":1330030686000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Makes things simpler.","msgtype":"m.text"},"ts":1330030687000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But that doesn't match WebKit.","msgtype":"m.text"},"ts":1330030688000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think ojan preferred firing at the editing host.","msgtype":"m.text"},"ts":1330030689000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: i've started to think that maybe we shouldn't allow multiple editing hosts to be modifed at once","msgtype":"m.text"},"ts":1330030690000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's a lot more intuitive to put the input handler on the editing host itself.","msgtype":"m.text"},"ts":1330030740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1330030741000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: it seems odd","msgtype":"m.text"},"ts":1330030742000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: in most cases, only way you'd have non-editable content in an editing host is to have a non-editable widget, etc...","msgtype":"m.text"},"ts":1330030743000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Having multiple editing hosts seems odd.  :)","msgtype":"m.text"},"ts":1330030744000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right.","msgtype":"m.text"},"ts":1330030745000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: so why don't we simplify the implementation in that case","msgtype":"m.text"},"ts":1330030746000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: and only modify the editing host of selection start, for example,","msgtype":"m.text"},"ts":1330030800000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think some UAs do that.","msgtype":"m.text"},"ts":1330030801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It wouldn't simplify my spec at all, though.","msgtype":"m.text"},"ts":1330030802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: modifying multiple editing host at once is like having multi-range selection","msgtype":"m.text"},"ts":1330030803000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"So I don't see the value in it personally.","msgtype":"m.text"},"ts":1330030804000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not really.","msgtype":"m.text"},"ts":1330030805000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: hm...","msgtype":"m.text"},"ts":1330030806000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"My spec currently only cares if a node is editable or not.","msgtype":"m.text"},"ts":1330030807000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I'll think about it more but I think we should try to keep it simple as possible","msgtype":"m.text"},"ts":1330030808000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It doesn't care what editing host it's in.","msgtype":"m.text"},"ts":1330030809000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So it's more complicated to restrict effects to only one editing host.","msgtype":"m.text"},"ts":1330030860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not simpler.","msgtype":"m.text"},"ts":1330030861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: possible.","msgtype":"m.text"},"ts":1330030862000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I need to read code and think harder","msgtype":"m.text"},"ts":1330030863000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"We might want to only fire the event at the first editing host, though.","msgtype":"m.text"},"ts":1330030864000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or something like that.","msgtype":"m.text"},"ts":1330030865000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm not sure.","msgtype":"m.text"},"ts":1330030866000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but you're right thta it probably doesn't matter in practice","msgtype":"m.text"},"ts":1330030867000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"since virtually nobody does something like that","msgtype":"m.text"},"ts":1330030868000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"especially because selection shouldn't be able to cross editing boundary by default","msgtype":"m.text"},"ts":1330030920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Or fire it at the first editing host, then only fire at the second if the first wasn't handled.","msgtype":"m.text"},"ts":1330030921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or I dunno.","msgtype":"m.text"},"ts":1330030922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But it's a corner case.","msgtype":"m.text"},"ts":1330030923000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: come to think of... why can we have multiple editing hosts at once?","msgtype":"m.text"},"ts":1330030924000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Because maybe there are two unrelated widgets on the page that both want to be editable.","msgtype":"m.text"},"ts":1330030925000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I swear webkit doesn't allow you to put selection ends in different editing hosts","msgtype":"m.text"},"ts":1330030926000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: yeah but then you can't place selection ends at both of those ends","msgtype":"m.text"},"ts":1330030980000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The user maybe can't.","msgtype":"m.text"},"ts":1330030981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1330030982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: you can only put selection in either","msgtype":"m.text"},"ts":1330030983000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Scripts can.","msgtype":"m.text"},"ts":1330030984000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: don't think so","msgtype":"m.text"},"ts":1330030985000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we'll normalize to avoid that","msgtype":"m.text"},"ts":1330030986000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: add range like that","msgtype":"m.text"},"ts":1330031040000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It doesn't seem possible for the user to create such a selection, no.","msgtype":"m.text"},"ts":1330031041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: and you should get a normalized selection","msgtype":"m.text"},"ts":1330031042000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"In WebKit.","msgtype":"m.text"},"ts":1330031043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right.","msgtype":"m.text"},"ts":1330031044000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I'd argue that it's the desirable behavior","msgtype":"m.text"},"ts":1330031045000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I don't think other browsers let create selection that crosses multiple editing boundaries either","msgtype":"m.text"},"ts":1330031046000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: users* create","msgtype":"m.text"},"ts":1330031047000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah, WebKit seems to not allow such selections.","msgtype":"m.text"},"ts":1330031100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I suspect Gecko will let scripts do that","msgtype":"m.text"},"ts":1330031101000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think in Gecko it's possible even for users.","msgtype":"m.text"},"ts":1330031102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least if they're inline.","msgtype":"m.text"},"ts":1330031103000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but that's because they don't normalize programmatically set selection","msgtype":"m.text"},"ts":1330031104000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Maybe not for blocks.","msgtype":"m.text"},"ts":1330031105000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: really? that's surprising","msgtype":"m.text"},"ts":1330031106000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's probably a bug.","msgtype":"m.text"},"ts":1330031107000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: okay","msgtype":"m.text"},"ts":1330031108000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: maybe you should check with ehsan","msgtype":"m.text"},"ts":1330031109000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"No, maybe not.","msgtype":"m.text"},"ts":1330031110000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Scripts can create such selections, but it seems users can't.","msgtype":"m.text"},"ts":1330031111000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, wait.","msgtype":"m.text"},"ts":1330031160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I can get a selection in both Gecko and WebKit that contains multiple editing hosts.","msgtype":"m.text"},"ts":1330031161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Select some non-editable content before the first, drag to non-editable content after the second.","msgtype":"m.text"},"ts":1330031162000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In Gecko, if you start to drag in non-editable content, it looks like you can drag to the middle of an editing host too.","msgtype":"m.text"},"ts":1330031220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But then hitting keys does nothing.","msgtype":"m.text"},"ts":1330031221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, so this is complicated.","msgtype":"m.text"},"ts":1330031222000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Feh.","msgtype":"m.text"},"ts":1330031223000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll spec it as firing an event at only the first editing host that intersects the selection.","msgtype":"m.text"},"ts":1330031280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that's probably a bug","msgtype":"m.text"},"ts":1330031281000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm, what about nested editing hosts?","msgtype":"m.text"},"ts":1330031282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, bugs in browser editing support.  Big surprise.  :)","msgtype":"m.text"},"ts":1330031283000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: wait","msgtype":"m.text"},"ts":1330031284000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: but if ends at at some non-editable locartions","msgtype":"m.text"},"ts":1330031285000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I don't think we'll modify the contents","msgtype":"m.text"},"ts":1330031340000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1330031341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so we shouldn't fire anything","msgtype":"m.text"},"ts":1330031342000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The spec doesn't currently work that way, I don't think.","msgtype":"m.text"},"ts":1330031343000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That could be changed.","msgtype":"m.text"},"ts":1330031344000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: oh, the spec should definitely change then.","msgtype":"m.text"},"ts":1330031345000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I mean, I know it doesn't work that way.","msgtype":"m.text"},"ts":1330031346000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Can do.","msgtype":"m.text"},"ts":1330031347000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I don't think we want to modify contents when the selection is on non-editable region","msgtype":"m.text"},"ts":1330031348000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: even when it happens to include some editable region","msgtype":"m.text"},"ts":1330031400000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: if webkit ever exhibits such a behavior, then it's a bug","msgtype":"m.text"},"ts":1330031401000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"not intentional","msgtype":"m.text"},"ts":1330031402000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"That's reasonable.","msgtype":"m.text"},"ts":1330031403000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think browsers vary somewhat, but at least some do behave that way.","msgtype":"m.text"},"ts":1330031404000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah","msgtype":"m.text"},"ts":1330031405000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I think most of us get some corner cases wrong","msgtype":"m.text"},"ts":1330031406000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"just like any other thing we implement :(","msgtype":"m.text"},"ts":1330031407000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but I think none of us really intended to support editing multiple hosts at once","msgtype":"m.text"},"ts":1330031408000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I can't think of use-cases offhand.","msgtype":"m.text"},"ts":1330031460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I think if yousearch for IDL checker or something, that's the tool that Hixie uses","msgtype":"m.text"},"ts":1330031580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.w3.org/2009/07/webidl-check","msgtype":"m.text"},"ts":1330031640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is that the one in Haskell?","msgtype":"m.text"},"ts":1330031641000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"AryehGregor: neithe can I","msgtype":"m.text"},"ts":1330031700000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hard to tell, the code doesn't seem to exist","msgtype":"m.text"},"ts":1330031701000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rniwa, what if non-editable content is nested inside editable content and the selection starts or ends in the nested non-editable content?","msgtype":"m.text"},"ts":1330031760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ah, dom to the rescue","msgtype":"m.text"},"ts":1330031880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems to be witten in c","msgtype":"m.text"},"ts":1330031881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: then we shouldn't do anything either.","msgtype":"m.text"},"ts":1330031882000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1330031940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1330031941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so no events should be fired","msgtype":"m.text"},"ts":1330031942000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I'll say the command isn't enabled in that case.","msgtype":"m.text"},"ts":1330031943000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://hackage.haskell.org/package/webidl seems to be the haskell one","msgtype":"m.text"},"ts":1330031944000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And return false from execCommand() before firing events if the command isn't supported or enabled.","msgtype":"m.text"},"ts":1330031945000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For now.","msgtype":"m.text"},"ts":1330031946000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So a command that's expected to possibly change the selected content should be enabled if the active range is not null, and its start and end node are both editable or editing hosts, and there is some editing host that's an inclusive ancestor of the start and end nodes.","msgtype":"m.text"},"ts":1330032000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, rniwa: what was wrong with my proposal to fire it on the root editing host?","msgtype":"m.text"},"ts":1330032300000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: that's okay","msgtype":"m.text"},"ts":1330032301000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: we were talking about the edge case","msgtype":"m.text"},"ts":1330032302000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: where we have multiple editing hosts to work with","msgtype":"m.text"},"ts":1330032303000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Do we want the root editing host, or the deepst?","msgtype":"m.text"},"ts":1330032304000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"deepest?","msgtype":"m.text"},"ts":1330032305000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Either one works.","msgtype":"m.text"},"ts":1330032306000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ojan: but turned out that wasn't possible","msgtype":"m.text"},"ts":1330032307000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Should these events bubble?","msgtype":"m.text"},"ts":1330032308000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ojan: i.e. if you select multiple editing hosts programatically","msgtype":"m.text"},"ts":1330032309000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: but we don't allow that","msgtype":"m.text"},"ts":1330032310000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: root makes sense","msgtype":"m.text"},"ts":1330032360000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"If they bubble, we want to fire it at the deepest, not the root.","msgtype":"m.text"},"ts":1330032361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: ^","msgtype":"m.text"},"ts":1330032362000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"That way it will bubble to the root anyway.","msgtype":"m.text"},"ts":1330032363000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: wait... whatever the editing host is defined to be I guess","msgtype":"m.text"},"ts":1330032364000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: that makes sense to me...","msgtype":"m.text"},"ts":1330032365000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Like: <div contenteditable>foo<span contenteditable>[bar]</span>baz</div>","msgtype":"m.text"},"ts":1330032366000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Fire it at the span and let it bubble to the div.","msgtype":"m.text"},"ts":1330032367000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: don't think that makese sense","msgtype":"m.text"},"ts":1330032368000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1330032420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: because span isn't an editing host in that case","msgtype":"m.text"},"ts":1330032421000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: i think the way you should figure out the deepest editing host though is to find the deepest editing host that contains the entire selection","msgtype":"m.text"},"ts":1330032422000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: since the entire div is editable","msgtype":"m.text"},"ts":1330032423000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It is by my definition.","msgtype":"m.text"},"ts":1330032424000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ojan, right.","msgtype":"m.text"},"ts":1330032425000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's what I'm doing.","msgtype":"m.text"},"ts":1330032426000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"<div contenteditable>foo<span contenteditable=\"false\"><span contenteditable>[bar]</span>baz</span></div>","msgtype":"m.text"},"ts":1330032427000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, well, you can add an extra <span contenteditable=false> if you want, but in my definitions the span is an editing host too.","msgtype":"m.text"},"ts":1330032428000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so there's no issue of dealing with selections that cross editing hosts","msgtype":"m.text"},"ts":1330032429000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: this is a better example","msgtype":"m.text"},"ts":1330032430000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: in this case, you're right that we should be firing the event at span","msgtype":"m.text"},"ts":1330032431000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: because that's the enclosing editing host of the selection","msgtype":"m.text"},"ts":1330032432000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"In the other case I'd also say fire at the span, but it makes no big difference.","msgtype":"m.text"},"ts":1330032480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Currently in my spec, <div contenteditable><span contenteditable>foo</span></div> isn't the same as <div contenteditable><span>foo</span></div>.","msgtype":"m.text"},"ts":1330032481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although it's mostly the same.","msgtype":"m.text"},"ts":1330032482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"<div contentEditable><div id=this-is-the-right-editing-host contentEditable><span contentEditable>ba[r</span><span contentEditable>baz</span></div></div>","msgtype":"m.text"},"ts":1330032483000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Where's the end of the selection?","msgtype":"m.text"},"ts":1330032540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In \"baz\"?","msgtype":"m.text"},"ts":1330032541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If so, right, I agree.","msgtype":"m.text"},"ts":1330032542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"woops...left it out :)","msgtype":"m.text"},"ts":1330032543000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1330032544000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: ok...that makes sense to me then.","msgtype":"m.text"},"ts":1330032545000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"\"Let affected editing host be the editing host that is an inclusive ancestor of the active range's start node and end node, and is not the ancestor of any editing host that is an inclusive ancestor of the active range's start node and end node.\"","msgtype":"m.text"},"ts":1330032546000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: yeah, i think that works","msgtype":"m.text"},"ts":1330032600000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: a little hard to parse that english...but i think it's correct","msgtype":"m.text"},"ts":1330032601000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"and unambiguous","msgtype":"m.text"},"ts":1330032602000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"considered \"not the ancestor of any other such editing host\", but decided to be more explicit","msgtype":"m.emote"},"ts":1330032603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, here's my WIP now: http://aryeh.name/tmp/editing/editing.html#methods-to-query-and-execute-commands","msgtype":"m.text"},"ts":1330032660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Subject to change without notice for now.","msgtype":"m.text"},"ts":1330032661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The interesting part is the execCommand() definition and the stuff before it, you can stop reading when you get to queryCommandEnabled().","msgtype":"m.text"},"ts":1330032720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that all looks good to me...except...","msgtype":"m.text"},"ts":1330032840000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: I think the spec needs to handle the case of JS modifying the DOM during the beforeInput event","msgtype":"m.text"},"ts":1330032841000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: e.g the affected editing host can change","msgtype":"m.text"},"ts":1330032900000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Hmm, right.","msgtype":"m.text"},"ts":1330032901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe we need to bail out in that case.","msgtype":"m.text"},"ts":1330032960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like if the beforeInput handler does getSelection().removeAllRanges(), that will break everything.","msgtype":"m.text"},"ts":1330032961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right, it depends","msgtype":"m.text"},"ts":1330032962000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Perhaps just add another check for enabled after the beforeInput event.","msgtype":"m.text"},"ts":1330032963000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so...as long as step 6 doesn't make any assumptions","msgtype":"m.text"},"ts":1330032964000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: and step 7 recomputed the affected editing host, i think we're fine","msgtype":"m.text"},"ts":1330032965000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"If there's still an affected editing host but it changes due to the beforeInput handler, do we want to fire the input event at the old one or the new one?","msgtype":"m.text"},"ts":1330033020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: my intuition is the new one","msgtype":"m.text"},"ts":1330033021000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"I'm worried about step 7 recomputing the affected editing host, because there might be a bug in the action that makes the selection disappear or something.","msgtype":"m.text"},"ts":1330033022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd prefer to be robust against that.","msgtype":"m.text"},"ts":1330033023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1330033024000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: you could recompute it as step 5b","msgtype":"m.text"},"ts":1330033080000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: sorry...step 5.4","msgtype":"m.text"},"ts":1330033140000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"AryehGregor: i think that would address all the issues as long as each command action is robust against different DOM states, which is needs to be anyways","msgtype":"m.text"},"ts":1330033141000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan, I was thinking I'd repeat the the \"If command is not enabled\" check as 5.4, then recompute affected editing host as 5.5, then use that.","msgtype":"m.text"},"ts":1330033560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So if beforeinput changes the affected editing host, that's fine, and the input event will be fired there.","msgtype":"m.text"},"ts":1330033561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But if it makes the command no longer enabled, the command won't execute.","msgtype":"m.text"},"ts":1330033620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"edits","msgtype":"m.emote"},"ts":1330033621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"has to go in a few minutes","msgtype":"m.emote"},"ts":1330033622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I think your spec should change to treat <div contenteditable><span contenteditable>foo</span></div> identically to <div contenteditable><span>foo</span></div>","msgtype":"m.text"},"ts":1330033920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Okay, refresh and tell me if you like it.","msgtype":"m.text"},"ts":1330033921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: that's how browsers work as far as I know.","msgtype":"m.text"},"ts":1330033922000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, browsers behave completely randomly whenever you nest anything with contenteditable other than inherit.","msgtype":"m.text"},"ts":1330033980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I had some use-case for treating it differently.","msgtype":"m.text"},"ts":1330033981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: sure we have lots of bugs","msgtype":"m.text"},"ts":1330033982000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I mean, there's no use-case for treating it the same, because you could always just remove the contenteditable attribute.","msgtype":"m.text"},"ts":1330033983000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: but I don't think we want to re-define the editing host that way","msgtype":"m.text"},"ts":1330033984000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: but that's not how UAs behave today though","msgtype":"m.text"},"ts":1330033985000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Most of this isn't how they behave today.  :)","msgtype":"m.text"},"ts":1330034040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: contenteditable attribute is ignored if it's already in the editable region","msgtype":"m.text"},"ts":1330034041000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: I mean... we can't implement this.","msgtype":"m.text"},"ts":1330034042000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Anything with contenteditable=true will not have its attributes changed or be removed from its parent.","msgtype":"m.text"},"ts":1330034043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: there's no sane way for webkit to distinguish those two cases","msgtype":"m.text"},"ts":1330034044000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Because really you just use a CSS property, right?","msgtype":"m.text"},"ts":1330034045000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right.","msgtype":"m.text"},"ts":1330034046000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"And the computed value isn't going to be different.","msgtype":"m.text"},"ts":1330034047000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Fair enough.","msgtype":"m.text"},"ts":1330034048000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: so I don't think we can do this.","msgtype":"m.text"},"ts":1330034049000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Feel free to file a bug.","msgtype":"m.text"},"ts":1330034050000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although, IIRC there are other problems that you using a CSS property causes, right?  Like you can't handle :read-write properly?","msgtype":"m.text"},"ts":1330034100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right. but we can't get rid of the CSS property at the moment.","msgtype":"m.text"},"ts":1330034101000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: we might be able to do eventually but not now","msgtype":"m.text"},"ts":1330034102000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The behavior you suggest is probably more logical anyway, though, because you'd expect contenteditable=inherit to work the same as specifying contenteditable=true or false depending on what the parent is.","msgtype":"m.text"},"ts":1330034103000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, you can't implement the spec right now in general, only eventually.  :)","msgtype":"m.text"},"ts":1330034104000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: right.","msgtype":"m.text"},"ts":1330034160000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"If you file a bug, I'll look at it later.  It's a corner case anyway.","msgtype":"m.text"},"ts":1330034161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: okay.","msgtype":"m.text"},"ts":1330034162000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: btw, you should rename \"issue\" to \"bug\"","msgtype":"m.text"},"ts":1330034163000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: or put both","msgtype":"m.text"},"ts":1330034164000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah, maybe.","msgtype":"m.text"},"ts":1330034165000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"File a bug on that too.  :)","msgtype":"m.text"},"ts":1330034220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I was looking for \"bug\" for a while :(","msgtype":"m.text"},"ts":1330034221000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I have to go now.","msgtype":"m.text"},"ts":1330034222000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1330034223000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: k, ttyl","msgtype":"m.text"},"ts":1330034224000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"AryehGregor: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=16095","msgtype":"m.text"},"ts":1330034400000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Thanks.","msgtype":"m.text"},"ts":1330034401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=13118#c26","msgtype":"m.text"},"ts":1330034580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And I'm off.","msgtype":"m.text"},"ts":1330034581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"arv, I don't think DOMStringList can really be a plain JS array due to the lack of methods that annevk mentions, and also because then the object that has the DOMStringList property cannot \"watch\" it for changes","msgtype":"m.text"},"ts":1330034640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"arv, the spec that defines DOMStringList can use the [ArrayClass] extended attribute on the interface to make it inherit from Array.prototype, so that you can easily use Array methods though","msgtype":"m.text"},"ts":1330034700000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins, did you get all your Web IDL questions earlier answered? (saw a bunch of highlights in my scrollback)","msgtype":"m.text"},"ts":1330034701000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: I ended with a question sent to public-script-coord.  Answer there, please?","msgtype":"m.text"},"ts":1330034760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, ok","msgtype":"m.text"},"ts":1330034761000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"AryehGregor: what jgraham said","msgtype":"m.text"},"ts":1330035000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fyi: I gave glenn write access to https://bitbucket.org/ms2ger/specification-data","msgtype":"m.text"},"ts":1330035900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk5: hi","msgtype":"m.text"},"ts":1330039800000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk5: what do you feel about disallowing mutation events inside the shadow DOM?","msgtype":"m.text"},"ts":1330039860000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1330039861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sounds ok to me","msgtype":"m.text"},"ts":1330039920000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: great.","msgtype":"m.text"},"ts":1330039921000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(which ever shadow dom spec ends up being implemented)","msgtype":"m.text"},"ts":1330039922000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: well we're talking about thi on https://bugs.webkit.org/show_bug.cgi?id=79278","msgtype":"m.text"},"ts":1330039980000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: I think dglazkov likes the idea","msgtype":"m.text"},"ts":1330039981000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: so as long as people from other vendors want them to fire there, we should spec it so that only new mutation observer API can be used inside the shadow DOM","msgtype":"m.text"},"ts":1330039982000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sounds ok. Ofc \"there\" is still not defined :)","msgtype":"m.text"},"ts":1330040040000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"rniwa: Mutation events carry too much unwipeable info about the shadow, so yeah, they shouldn't escape the shadow.","msgtype":"m.text"},"ts":1330040041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And shutting down mutation listeners entirely inside of shadow sounds totally fine.","msgtype":"m.text"},"ts":1330040042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: great.","msgtype":"m.text"},"ts":1330040100000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I guess the idea is to not have mutation events at all in shadow dom","msgtype":"m.text"},"ts":1330040101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: we're going to do the both","msgtype":"m.text"},"ts":1330040102000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"which is what I prefer","msgtype":"m.text"},"ts":1330040103000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I don't think the outer page should ever want to know about mutations inside of shadows anyway.)","msgtype":"m.text"},"ts":1330040104000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so there won't be any mutation event in the shadow DOM","msgtype":"m.text"},"ts":1330040105000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"mutation events need to die anyway","msgtype":"m.text"},"ts":1330040106000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: Within a shadow, mutation observers can be useful I guess.","msgtype":"m.text"},"ts":1330040107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mutationobservers sure, but they are limited to shadow tree","msgtype":"m.text"},"ts":1330040160000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yes, okay, so we're agreeing.  ^_^","msgtype":"m.text"},"ts":1330040161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes :)","msgtype":"m.text"},"ts":1330040162000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Also: should I eat another whole box of Thin Mints? (yes)/(hell yes)","msgtype":"m.text"},"ts":1330040163000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"whatever the shadow dom will be, mutation events shouldn't fire there","msgtype":"m.text"},"ts":1330040164000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: is your email address at welho.com?","msgtype":"m.text"},"ts":1330040220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"uh, no, please","msgtype":"m.text"},"ts":1330040221000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is one of my email addresses","msgtype":"m.text"},"ts":1330040222000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: okay, which one should I use to cc you on public-webapps?","msgtype":"m.text"},"ts":1330040223000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I prefer Olli⊙pf","msgtype":"m.text"},"ts":1330040224000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: okay, will do.","msgtype":"m.text"},"ts":1330040225000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I keep forgetting that you're Olli, smaug____ .","msgtype":"m.text"},"ts":1330040226000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Damn lack of Real Names.","msgtype":"m.text"},"ts":1330040280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you've been here too few years :)","msgtype":"m.text"},"ts":1330040281000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It's taken me a while to remember that Zewt is Glen.","msgtype":"m.text"},"ts":1330040282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: okay, I sent an email out to public-webapps","msgtype":"m.text"},"ts":1330040283000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: but it seems like we're already on an agreement here :D","msgtype":"m.text"},"ts":1330040284000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: disallowing mutation events in shadow DOM may even encourage people to start using new mutation observer API","msgtype":"m.text"},"ts":1330040285000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: which is a win-win for us","msgtype":"m.text"},"ts":1330040286000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"should finalize his mutationobserver patch next week","msgtype":"m.emote"},"ts":1330040340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and sorry, I've been really busy with other stuff","msgtype":"m.text"},"ts":1330040341000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"rniwa: do you happen to have fuzz tester for mutation observer?","msgtype":"m.text"},"ts":1330040520000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"We're not fuzzing it yet (I think), but apparently it's quite easy to add.","msgtype":"m.text"},"ts":1330040580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not fuzzing yet? expect some instability then :)","msgtype":"m.text"},"ts":1330040640000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Oh, definitely.","msgtype":"m.text"},"ts":1330040641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We should be fuzzing, like, 5000% more.","msgtype":"m.text"},"ts":1330040642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fuzz ALL the things.","msgtype":"m.text"},"ts":1330040643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1330040644000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"writing good fuzzers is not easy","msgtype":"m.text"},"ts":1330040700000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"We apparently have a pretty nice fuzzing infrastructure that our security people put together.","msgtype":"m.text"},"ts":1330040820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You feed it a bunch of wide-sprectrum representative tests, it mutates them into fuzz tests.","msgtype":"m.text"},"ts":1330040821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: we have been.","msgtype":"m.text"},"ts":1330041300000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: aklein will probably know.","msgtype":"m.text"},"ts":1330041301000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ok, I'll send some email","msgtype":"m.text"},"ts":1330041360000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: we have an automated fuzz testing infrastructure that automatically mutates existing tests and generate crazy js tests","msgtype":"m.text"},"ts":1330041361000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: don't think we save results though","msgtype":"m.text"},"ts":1330041362000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so not sure if we can share those with you guys","msgtype":"m.text"},"ts":1330041363000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1330041364000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: but it's probably worth shooting an email anyway","msgtype":"m.text"},"ts":1330041420000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: we might come up with some way to do it","msgtype":"m.text"},"ts":1330041421000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dglazkov: yt?","msgtype":"m.text"},"ts":1330041480000,"senderName":"rniwa","senderId":"rniwa@irc"}
]