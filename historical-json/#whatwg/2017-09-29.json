[
{"content":{"body":"gsnedders: Don't know if you remember our past discussion about timeouts and load events,","msgtype":"m.text"},"ts":1506671231000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: \"By default the test harness will assume there are no more results to come when: * There are no Test objects that have been created but not completed * The load event on the document has fired\"","msgtype":"m.text"},"ts":1506671263000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So that seems like if you delay the load event indefinitely, the test will timeout.","msgtype":"m.text"},"ts":1506671276000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Is it ok for specs to say \"A {{Whatever}} object represents a [=whatever=]\", where whatever is a concept, or should it be \"A {{Whatever}} has a [=Whatever/whatever=] (a [=/whatever=])\"","msgtype":"m.text"},"ts":1506676934000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The latter feels more precise. We went that way with headers in the fetch spec and it felt more precise and easier to reference.","msgtype":"m.text"},"ts":1506676994000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the former is okay if it's nothing else","msgtype":"m.text"},"ts":1506677006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but if you then also add additional fields, it gets confusing","msgtype":"m.text"},"ts":1506677021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, results in a lot of text like \"Let |foo| be {{Whatever}}'s associated [=whatever=]\", which is difficult to track through the spec","msgtype":"m.text"},"ts":1506677069000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: though in case of the former the question becomes why not flatten whatever into {{Whatever}}?","msgtype":"m.text"},"ts":1506677070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because [=whatever=] can exist without {{Whatever}}","msgtype":"m.text"},"ts":1506677106000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: e.g. DOM doesn't have a concept for elements and an Element object, it just has the latter","msgtype":"m.text"},"ts":1506677114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In this case [=whatever=] is part of storage, and {{Whatever}} is an instance that exposes it","msgtype":"m.text"},"ts":1506677166000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: okay, I think it's fine to just say represent then","msgtype":"m.text"},"ts":1506677178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: gotcha, cheers","msgtype":"m.text"},"ts":1506677194000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Notification has something similar, but a tad more complex","msgtype":"m.text"},"ts":1506677195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There it's a M:1 relationship","msgtype":"m.text"},"ts":1506677209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've been pretty specific about it in background fetch https://wicg.github.io/background-fetch/#backgroundfetchregistration-background-fetch, but I can revisit that","msgtype":"m.text"},"ts":1506677248000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think being specific is better","msgtype":"m.text"},"ts":1506677321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I suspect that once we have internal slots we'll end up refactoring everything to use those, but there might be a case for some variant where an object exposes a concept 1:1","msgtype":"m.text"},"ts":1506677388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not familiar with internal slots, is there somewhere I can read up on those?","msgtype":"m.text"},"ts":1506677433000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's the [[slot]] notation ECMAScript uses for private fields of objects","msgtype":"m.text"},"ts":1506677449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I've been lobbying to get something like that in IDL so we can stop with the informal \"has an associated\" language and actually define the private object layout more formally","msgtype":"m.text"},"ts":1506677481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/heycam/webidl/issues/258","msgtype":"m.text"},"ts":1506677498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cheers!","msgtype":"m.text"},"ts":1506677573000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"nox: oh well","msgtype":"m.text"},"ts":1506683398000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: if that's a problem, we should just add an explicit harness done function","msgtype":"m.text"},"ts":1506683415000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It’s not a problem. It’s just that this fact was my only explanation for a timeout in Servo.","msgtype":"m.text"},"ts":1506686047000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"And it would have made me anxious if that wasn’t the actual cause of that timeout.","msgtype":"m.text"},"ts":1506686065000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Pretty happy with https://tools.ietf.org/html/rfc7159#section-8.1","msgtype":"m.text"},"ts":1506688557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=1403441#c13 ok so the plan is to actually modify session history. Drop the entries which have some state","msgtype":"m.text"},"ts":1506688770000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: well that's my proposal, otherwise they can be used as a way to revive state","msgtype":"m.text"},"ts":1506688885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, that is fine. I just wanted to make sure I understood the proposal.","msgtype":"m.text"},"ts":1506688912000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1506688922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So basically remove all the other entries except the first one for the domain","msgtype":"m.text"},"ts":1506688936000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or something like that","msgtype":"m.text"},"ts":1506688939000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Oh, the RFC reading that way might be because of https://lists.w3.org/Archives/Public/www-tag/2013Nov/0074.html","msgtype":"m.text"},"ts":1506688966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I forgot I got myself involved somehow","msgtype":"m.text"},"ts":1506688977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/blob/master/html/semantics/embedded-content/media-elements/event_loadeddata.html#L29 Cute.","msgtype":"m.text"},"ts":1506689705000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oops","msgtype":"m.text"},"ts":1506692206000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Broken in https://github.com/w3c/web-platform-tests/commit/1f1f813f93dd1084ea3656dec3f8907507e1bf34","msgtype":"m.text"},"ts":1506692350000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Seems like it's the only case","msgtype":"m.text"},"ts":1506692414000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: I can fix this range request result you saw on FF: \"fetch(event.request) - seems to lose the range header somewhere, so it appears like the 200 result above\"","msgtype":"m.text"},"ts":1506693554000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: but wondering if I should just wait","msgtype":"m.text"},"ts":1506693564000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: depends how you fix it. I think we only want APIs to be able to set that header","msgtype":"m.text"},"ts":1506693600000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Bikeshedding/style question, input from spec consumers welcome https://github.com/whatwg/meta/issues/41","msgtype":"m.text"},"ts":1506693618000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: I was going to set a hidden value on the Request... it would only get used if directly passed through... not persisted in Cache API, etc","msgtype":"m.text"},"ts":1506693628000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I support that landing :D","msgtype":"m.text"},"ts":1506693759000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the weird thing is if its really a Range header or something else... I'm confused now","msgtype":"m.text"},"ts":1506693796000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Pretty sure it's a range header, unless we're talking about different things","msgtype":"m.text"},"ts":1506693824000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I meant in firefox we might be doing something different to ask for a range request instead of adding a header at that API point","msgtype":"m.text"},"ts":1506693863000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: like our \"ResumeAt()\" method which asks for maybe a range if its matches the previous response","msgtype":"m.text"},"ts":1506693879000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: we have those \"terms used from other specs\" indexes with Bikeshed; perhaps that is indeed sufficient","msgtype":"m.text"},"ts":1506693891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: in case you didn't see Domenic's message above, your input on https://github.com/whatwg/meta/issues/41 would be appreciated","msgtype":"m.text"},"ts":1506693994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: seems like something you might have thought about given Bikeshed","msgtype":"m.text"},"ts":1506694009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks for the reference.","msgtype":"m.text"},"ts":1506694318000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, oh, I looked at Fetch and didn't see it","msgtype":"m.text"},"ts":1506697201000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: I have to say, after using async functions and await a lot recently... I really like the decision not to put abort() on the fetch() promise","msgtype":"m.text"},"ts":1506698311000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I think the model we have now is pretty good","msgtype":"m.text"},"ts":1506700224000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I love async/await too","msgtype":"m.text"},"ts":1506700232000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: 2 cents re \"represents a [=whatever=]\": If the rest of the spec says \"associated  [=whatever=]\", I'd like that to be a link to somewhere that talks about how the [=whatever=] gets associated. https://wicg.github.io/background-fetch/#backgroundfetchregistration-background-fetch is great IMO, but I've seen some specs by other people that are much less clear.","msgtype":"m.text"},"ts":1506703473000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"webidl#258 is even better when we get it.","msgtype":"m.text"},"ts":1506703524000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1506711790000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah","msgtype":"m.text"},"ts":1506712072000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: who works on geolocation stuff these days at Google?","msgtype":"m.text"},"ts":1506712133000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: not sure, let me check around a bit and ask if there's no clear docs...","msgtype":"m.text"},"ts":1506712147000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks","msgtype":"m.text"},"ts":1506712163000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(I found the person who used to own it and they redirected me to their most likely guess for who now owns it; currently waiting for that second person to confirm or redirect me again...)","msgtype":"m.text"},"ts":1506712785000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wouldn't be surprised if the answer is \"nobody\"...","msgtype":"m.emote"},"ts":1506712995000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"jyasskin: cheers!","msgtype":"m.text"},"ts":1506713509000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"rniwa: Oh Hi, https://www.chromium.org/teams/device-team is looking after Geolocation now.","msgtype":"m.text"},"ts":1506715324000,"senderName":"scheib","senderId":"scheib@irc"},
{"content":{"body":"(I'm on that team)","msgtype":"m.text"},"ts":1506715333000,"senderName":"scheib","senderId":"scheib@irc"},
{"content":{"body":"omg upcoming Web IDL mixins are so good. https://github.com/heycam/webidl/pull/433","msgtype":"m.text"},"ts":1506719012000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so much simpler and better suited for their purpose","msgtype":"m.text"},"ts":1506719022000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So many Web IDL confusions just gone","msgtype":"m.text"},"ts":1506719030000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Agreed!","msgtype":"m.text"},"ts":1506719611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: https://github.com/travis-ci/dpl/pull/695 will make auto-gh-pages much simpler.","msgtype":"m.text"},"ts":1506722301000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"We'll be able to completely replace deploy.sh with https://github.com/jyasskin/testing/blob/master/.travis.yml","msgtype":"m.text"},"ts":1506722343000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: oh wow, brilliant move","msgtype":"m.text"},"ts":1506722344000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: The one maybe-downside is that their script doesn't keep any history in gh-pages. Do you think that matters?","msgtype":"m.text"},"ts":1506722379000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Now I'm feeling a little sad I never converted my gist into a blog post and garnered all the internet blog fame, but oh well, too late now!","msgtype":"m.text"},"ts":1506722406000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1506722411000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1506722412000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I used to not keep history","msgtype":"m.text"},"ts":1506722414000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I like having it","msgtype":"m.text"},"ts":1506722416000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And it's not that hard","msgtype":"m.text"},"ts":1506722418000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe worth modifying their script?","msgtype":"m.text"},"ts":1506722423000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah. I nominate you to write that PR. ;)","msgtype":"m.text"},"ts":1506722468000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"scheib: hello","msgtype":"m.text"},"ts":1506728131000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"scheib: are you still there?","msgtype":"m.text"},"ts":1506728138000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Yes about 10min","msgtype":"m.text"},"ts":1506728367000,"senderName":"scheib","senderId":"scheib@irc"},
{"content":{"body":"Is there a best practice for saying \"specs that depend on this one need to do X\"? https://w3c.github.io/webappsec-credential-management/#credential-internal-methods currently says \"derived interfaces MUST override ...\", but it's not really correct to MUST another specification.","msgtype":"m.text"},"ts":1506729210000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]