[
{"content":{"body":"Hixie: ping? ","msgtype":"m.text"},"ts":1243900800000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: here","msgtype":"m.text"},"ts":1243901760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Can you comment on what IN_FOREIGN_CONTENT is supposed to do when we are processing an HTML element as \"in body\", and that element wants us to change the mode? ","msgtype":"m.text"},"ts":1243901820000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"um","msgtype":"m.text"},"ts":1243901880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nothing beyond what the spec says as far as i can tell","msgtype":"m.text"},"ts":1243901881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you mean?","msgtype":"m.text"},"ts":1243901882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"As far as I can tell, the spec doesn't record that you were originally in \"in foreign content\" when it hops to another mode, so when you pop out of that, you stay in \"in body\", and don't go back to \"in foreign content\" ","msgtype":"m.text"},"ts":1243901940000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"I just wanted to verify that this was true before sending mail ","msgtype":"m.text"},"ts":1243901941000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Augh, damn user agents.","msgtype":"m.text"},"ts":1243902720000,"senderName":"theMadness","senderId":"theMadness@irc"},
{"content":{"body":"They create a plethora of <a> nodes when I wrap some block item inside an <a> tag.","msgtype":"m.text"},"ts":1243902721000,"senderName":"theMadness","senderId":"theMadness@irc"},
{"content":{"body":"I guess I have overestimated the current support of html5.","msgtype":"m.text"},"ts":1243902780000,"senderName":"theMadness","senderId":"theMadness@irc"},
{"content":{"body":"ezyang: minimal testcase? do you mean like <svg><table> ?","msgtype":"m.text"},"ts":1243902840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<svg><foreignObject><table></table></foreignObject></svg> ","msgtype":"m.text"},"ts":1243903260000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Uhh, make that <svg><foreignObject><table></table></foreignObject><g/></svg> ","msgtype":"m.text"},"ts":1243903320000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: wouldn't you switch back to foreign content when you reset after the </table>?","msgtype":"m.text"},"ts":1243903380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Possibly. Let me check that part of the spec again ","msgtype":"m.text"},"ts":1243903440000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Yep, looks like it. ","msgtype":"m.text"},"ts":1243903500000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"anyone here understand RDF/XML?","msgtype":"m.text"},"ts":1243903740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I figured RDF/XML would be mostly self-explanatory, but if you're asking that question, I guess not","msgtype":"m.text"},"ts":1243903980000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Is there any good way of just getting messages about changes to the html5lib spec that are w.r.t. tokenization/tree-building? ","msgtype":"m.text"},"ts":1243904880000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"erm, s/html5lib/html5/ ","msgtype":"m.text"},"ts":1243904881000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"yeah, look for 't' in the first field","msgtype":"m.text"},"ts":1243904940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hm... so I still have to sign up for html5-commits, and just filter out things w/o t in the first field? ","msgtype":"m.text"},"ts":1243904941000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"or you can use the tracker","msgtype":"m.text"},"ts":1243905000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it has little check boxes that filter out everything else","msgtype":"m.text"},"ts":1243905001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"note that i often screw up","msgtype":"m.text"},"ts":1243905002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so don't rely on it too much :-)","msgtype":"m.text"},"ts":1243905003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So, \"Affects Tools\" is what I want? ","msgtype":"m.text"},"ts":1243905004000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Man, I wish this had an RSS feed ","msgtype":"m.text"},"ts":1243905060000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"(and an easier way of unchecking everything) ","msgtype":"m.text"},"ts":1243905061000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1243905120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can provide patches, i believe","msgtype":"m.text"},"ts":1243905121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the code is in code.google.com/html5","msgtype":"m.text"},"ts":1243905180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sweet. ","msgtype":"m.text"},"ts":1243905181000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Assuming it's not too grody, I'll take a stab ","msgtype":"m.text"},"ts":1243905182000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ftr, it's http://code.google.com/p/html5/ ","msgtype":"m.text"},"ts":1243905183000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Aw, it's still svn ","msgtype":"m.text"},"ts":1243905184000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Can I get commit access? ","msgtype":"m.text"},"ts":1243905240000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1243905360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's your account?","msgtype":"m.text"},"ts":1243905420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"edwardzyang⊙tc ","msgtype":"m.text"},"ts":1243905421000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"(same as html5lib) ","msgtype":"m.text"},"ts":1243905422000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"i'm not an html5lib admin :-)","msgtype":"m.text"},"ts":1243905480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1243905540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't break anything :-)","msgtype":"m.text"},"ts":1243905541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Aye-aye, captain! ","msgtype":"m.text"},"ts":1243905542000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Uh oh... html5 is using a svn:externals of testdata, which means it's old. ","msgtype":"m.text"},"ts":1243906080000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"i think most of the stuff in there is stale","msgtype":"m.text"},"ts":1243906140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Heh. ","msgtype":"m.text"},"ts":1243906141000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"it's just a place for us to throw stuff related to html5","msgtype":"m.text"},"ts":1243906142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok. ","msgtype":"m.text"},"ts":1243906143000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"if it's useful it usually moves on to live elsewhere","msgtype":"m.text"},"ts":1243906144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Meh, after looking at the Python code I decided I don't care enough ","msgtype":"m.text"},"ts":1243906680000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1243906740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: seems to me that \"Basic d2FsbGU6ZXZl\" is missing some caps and a hyphen, no?  :-)","msgtype":"m.text"},"ts":1243907100000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"pat-pats window.atob","msgtype":"m.emote"},"ts":1243907101000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"runs the other authstrs through atob for entertainment","msgtype":"m.emote"},"ts":1243907160000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"guess that's just stylistic :-)","msgtype":"m.text"},"ts":1243907161000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hmm... should I setup some require_once's, or setup the entire HTML Purifier style autoloader shish-kebab ","msgtype":"m.text"},"ts":1243907340000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Barring any objections, I'd like to release 0.1.0. ","msgtype":"m.text"},"ts":1243908420000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"(of the php html5lib) ","msgtype":"m.text"},"ts":1243908421000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"jwalden: :-)","msgtype":"m.text"},"ts":1243908600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Uploaded ","msgtype":"m.text"},"ts":1243908960000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"I can't figure out how to update the project summary ","msgtype":"m.text"},"ts":1243908961000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"irc.mozilla.org down?","msgtype":"m.text"},"ts":1243914300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1243914360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hey all, I’d like to ask about the id attribute ‘opaque strings’ comment (3.3.3.1); what is meant by ‘Particular meanings should not be derived from the value of the id attribute’? Is this intended for browser makers?","msgtype":"m.text"},"ts":1243914540000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1243914541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it means that id=\"header\" doesn't mean the element is a header","msgtype":"m.text"},"ts":1243914542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it could just as easily be a footer, or a link, or a duck","msgtype":"m.text"},"ts":1243914600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aah, that makes sense. So as authors we’d be encouraged to use meaningful names (as the class attribute spec specifically states), but that meaning shouldn’t affect how the browser treats the element with the id huh","msgtype":"m.text"},"ts":1243914660000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1243914720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you can come up with a better way for the spec to say that, drop me a line :-)","msgtype":"m.text"},"ts":1243914721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How would this sit with eg microformats? eg if the text specifically said “User agents should not derive particular meanings from the value of the id attribute” (which would remove the ambiguity for me), wouldn’t this also be problematic for eg Operator, Optimus et al?","msgtype":"m.text"},"ts":1243914840000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Hrm, perhaps adding your example “eg id=\"header\" should not be interpreted as <header>” is clearest?","msgtype":"m.text"},"ts":1243914900000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"do they use id=\"\" attribute values?","msgtype":"m.text"},"ts":1243915080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd rather not define things by examples, though i could certainly _add_ examples if you want","msgtype":"m.text"},"ts":1243915081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"drop me a mail if you do","msgtype":"m.text"},"ts":1243915140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Microformats plugins/bookmarklets just look for the matching value, which could be class=\"vcard\" or id=\"vcard\". Using class=\"\" is most common, but it’s possible an author might use id=\"\". I’ll email you these comments. Thanks for the clarification","msgtype":"m.text"},"ts":1243915260000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1243915560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think the justification I just sent for the Design Principles may be longer than the actual Design Principles","msgtype":"m.text"},"ts":1243915980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not sure how to feel about this","msgtype":"m.text"},"ts":1243916040000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"turns on obnoxious flag ","msgtype":"m.emote"},"ts":1243916160000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Anyone want to update the html5lib status page? ","msgtype":"m.text"},"ts":1243916161000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"turns off obnoxious flag ","msgtype":"m.emote"},"ts":1243916162000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"aaaand I self-replied twice","msgtype":"m.text"},"ts":1243916760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"should have planned more before sending","msgtype":"m.text"},"ts":1243916761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej_: you should just put your e-mail into the design principles","msgtype":"m.text"},"ts":1243924140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all of it?","msgtype":"m.text"},"ts":1243924200000,"senderName":"othermaciej_","senderId":"othermaciej_@irc"},
{"content":{"body":"more or less","msgtype":"m.text"},"ts":1243924201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean it'll need editing","msgtype":"m.text"},"ts":1243924202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1243924203000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but it would give the context people are asking for","msgtype":"m.text"},"ts":1243924204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even if they don't agree with it","msgtype":"m.text"},"ts":1243924205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously the part where I say which principles are better or worse shouldn't be pasted in","msgtype":"m.text"},"ts":1243924206000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1243924207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd just drop the ones that didn't work","msgtype":"m.text"},"ts":1243924208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or fix them so they can","msgtype":"m.text"},"ts":1243924260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sections 1 and 2 seem like the best fits","msgtype":"m.text"},"ts":1243924261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though they are awfully long","msgtype":"m.text"},"ts":1243924262000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"anyway, I guess that seems like a good idea","msgtype":"m.text"},"ts":1243924320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or at the very least I could write an introductory section that addresses the same points","msgtype":"m.text"},"ts":1243924321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"by the way, the prediction that \"you can't please everyone\" would draw objections was fulfilled","msgtype":"m.text"},"ts":1243924440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though I was surprised that the objection came from Sam","msgtype":"m.text"},"ts":1243924441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if i read the spec correctly, the load event dispatched once a document is loaded does not bubble. (same for most (all?) other \"fire a simple event\" things.)","msgtype":"m.text"},"ts":1243928220000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the HTML5 version indictor is charset=utf-8, mmkay?","msgtype":"m.text"},"ts":1243928221000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but event handler attributes (including onload=\"\") are listeners for bubbling","msgtype":"m.text"},"ts":1243928340000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"unless: bubbling listeners get AT_TARGET phase events, and events that don't bubble are still dispatched AT_TARGET","msgtype":"m.text"},"ts":1243928341000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"which i think is true","msgtype":"m.text"},"ts":1243928342000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so never mind","msgtype":"m.text"},"ts":1243928400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"seems so quiet here tonight","msgtype":"m.text"},"ts":1243929120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"could a html5lib admin add my hsivonen⊙if account to the project in addition to or in place of the @gmail.com account?","msgtype":"m.text"},"ts":1243929600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heycam, that's true","msgtype":"m.text"},"ts":1243930560000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"hsivonen, done","msgtype":"m.text"},"ts":1243930620000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"annevk42: thank you","msgtype":"m.text"},"ts":1243930621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"$ hg outgoingabort: Python support for SSL and HTTPS is not installed","msgtype":"m.text"},"ts":1243930920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what macports incantation do I need?","msgtype":"m.text"},"ts":1243930921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how do I make hg tell me which python interpreter it is using?","msgtype":"m.text"},"ts":1243931040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"use lsof :-)","msgtype":"m.text"},"ts":1243931100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there a way to leave lsof waiting so that I can first start lsof and then start hg?","msgtype":"m.text"},"ts":1243931340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Does less `which hg` followed by reading the line at the top not answer your question?","msgtype":"m.text"},"ts":1243931580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yes. thanks","msgtype":"m.text"},"ts":1243931640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for the log: the incantation is sudo port install py25-socket-ssl","msgtype":"m.text"},"ts":1243931641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but now I get a 404 for hg outgoing","msgtype":"m.text"},"ts":1243931700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hg outgoing https://hsivonen⊙if@html5lib.googlecode.com/hg/abort: HTTP Error 404: Not Found","msgtype":"m.text"},"ts":1243931701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if Google's hg support has a bug with non-Gmail accounts","msgtype":"m.emote"},"ts":1243931760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"with the two @ signs","msgtype":"m.text"},"ts":1243931761000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: \"CSS properties respectively\" is marked up as a dfn","msgtype":"m.text"},"ts":1243931820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: s/@/%40/","msgtype":"m.text"},"ts":1243931821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: They do have a bug","msgtype":"m.text"},"ts":1243931822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks","msgtype":"m.text"},"ts":1243931823000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(only the first @)","msgtype":"m.text"},"ts":1243931880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1243931881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: how should I escape % in hgrc? Python interprets % as something magic","msgtype":"m.text"},"ts":1243931940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"%%?","msgtype":"m.text"},"ts":1243931941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes, %%","msgtype":"m.text"},"ts":1243931942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yay for overlapping escapes","msgtype":"m.text"},"ts":1243932000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"holy crap, shelley managed to write an entire blog post about html5 without saying i was wrong about anything","msgtype":"m.text"},"ts":1243932540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no wai","msgtype":"m.text"},"ts":1243932541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i really don't understand why people have so much trouble with the design principles","msgtype":"m.text"},"ts":1243932600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are people really that desperate for black-and-white rules?","msgtype":"m.text"},"ts":1243932601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"language design isn't something you do by following a flowchart","msgtype":"m.text"},"ts":1243932602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you have to weigh all the various goals, etc","msgtype":"m.text"},"ts":1243932603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"haha, she hates the Design Principles because they are against RDFa","msgtype":"m.text"},"ts":1243932660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i just don't get why every time we find the need to create new technologies, someone says \"you're ignoring the don't reinvent the wheel principle\", especially when we documented why we were doing so for that feature","msgtype":"m.text"},"ts":1243932661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or why every time any one principle is overriden by some other concern, people assume that means we should always ignore that principle","msgtype":"m.text"},"ts":1243932720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. i mention that the design principles are merely guidelines, and shelley's response is to tell hsivonen that he's wrong about caring about dom consistency","msgtype":"m.text"},"ts":1243932721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's just stupid","msgtype":"m.text"},"ts":1243932722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you have to care about dom consistency","msgtype":"m.text"},"ts":1243932723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just like you have to care about everything else","msgtype":"m.text"},"ts":1243932780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why do these people find this so challenging to grasp?","msgtype":"m.text"},"ts":1243932781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am not sure","msgtype":"m.text"},"ts":1243932840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"where is this thread going on?","msgtype":"m.text"},"ts":1243932960000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"I don't know how to explain it any further without getting repetitive","msgtype":"m.text"},"ts":1243933020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1243933021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ojan: public-html is where most of it is, shelley's blog was what most recently triggered by confusion though","msgtype":"m.text"},"ts":1243933022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there could be valid reasons to override the DOM Consistency principle","msgtype":"m.text"},"ts":1243933023000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1243933080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just look at the xml:lang disaster","msgtype":"m.text"},"ts":1243933081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example, the need to Support Existing Content leads to some differences already","msgtype":"m.text"},"ts":1243933082000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we had to override it for that","msgtype":"m.text"},"ts":1243933083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right, like xml:lang vs lang","msgtype":"m.text"},"ts":1243933084000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"xml:lang is the main reason we HAVE the principle, in fact :-P","msgtype":"m.text"},"ts":1243933085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so we never have to repeat that disaster","msgtype":"m.text"},"ts":1243933086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would be nice to drop xml:lang and make lang equivalent to xml:lang for all elements","msgtype":"m.text"},"ts":1243933087000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"likewise with id","msgtype":"m.text"},"ts":1243933140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but just because you feel like it is not a good reason to override it","msgtype":"m.text"},"ts":1243933141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"holy crap! windows 7 just launched in a vm in the background and played its startup sound at full volume in stereo, sounded like a spaceship had landed in my hall or something!","msgtype":"m.text"},"ts":1243933142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and I would even say your counter-argument doesn't have to be based on any Design Principle","msgtype":"m.text"},"ts":1243933143000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but you have more odds of being convincing if it is","msgtype":"m.text"},"ts":1243933144000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"tried to explain HTML5's lang vs xml:lang rules to someone implementing an RDFa parser, and they didn't seem to entirely think it was a lovely elegant idea","msgtype":"m.emote"},"ts":1243933145000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well people have clearly failed to notice that i never refer to the design principles explicitly","msgtype":"m.text"},"ts":1243933200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that i've been applying them completely independent of whether we have the design principles doc or not","msgtype":"m.text"},"ts":1243933201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I think the spec is probably less confusing now than it was a few days ago, though)","msgtype":"m.text"},"ts":1243933202000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the spec doesn't mention the string \"xml:lang\" any more (with a couple of exceptions)","msgtype":"m.text"},"ts":1243933260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which might make it clearer","msgtype":"m.text"},"ts":1243933261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think the Design Principles are more useful for those who disagree with the direction of the spec than those who largely agree","msgtype":"m.text"},"ts":1243933262000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: i guess now you can remove the part in terminology starting \"When an XML name, such as an attribute or element name, is referred to in the form prefix:localName\"","msgtype":"m.text"},"ts":1243933320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: really? there's none left?","msgtype":"m.text"},"ts":1243933321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: yeah, but i don't think they see it that way :-)","msgtype":"m.text"},"ts":1243933322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i think xml:lang was all there ever was (ignoring examples in that section) but i might be wrong","msgtype":"m.text"},"ts":1243933323000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm sure there are others","msgtype":"m.text"},"ts":1243933380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"xml:base maybe","msgtype":"m.text"},"ts":1243933381000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Similarly, if the newly created element has an xmlns:xlink attribute in the XMLNS namespace whose value is not the XLink Namespace, that is a parse error.\"","msgtype":"m.text"},"ts":1243933560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is \"xmlns:xlink\" the local name or qualified name?","msgtype":"m.text"},"ts":1243933561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"qalified","msgtype":"m.text"},"ts":1243933562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"qualified, even","msgtype":"m.text"},"ts":1243933620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it gets complicated with xmlns: attributes","msgtype":"m.text"},"ts":1243933621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. xmlns=\"\" is in the XMLNS namespace iirc","msgtype":"m.text"},"ts":1243933622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes it is","msgtype":"m.text"},"ts":1243933623000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"Hixie: WCAG, unlike design principles, have litigable precision for exceptions","msgtype":"m.text"},"ts":1243933624000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"WCAG 2.0 that is","msgtype":"m.text"},"ts":1243933680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"WCAG 2.0 has precision?","msgtype":"m.text"},"ts":1243933681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of any kind?","msgtype":"m.text"},"ts":1243933682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except where WCAG is incomprehensible without informative supporting materials","msgtype":"m.text"},"ts":1243933683000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"good to know","msgtype":"m.text"},"ts":1243933684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can make things somewhat confusing too","msgtype":"m.text"},"ts":1243933685000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"data:text/xml,<test x:xmlns=\"x\" xmlns:x=\"x\"/>","msgtype":"m.text"},"ts":1243933686000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"that's only confusing because the order of the attributes is backwards :-P","msgtype":"m.text"},"ts":1243933687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"PS: Interestingly, this behavior could be used to send xhtml (and get it shown on IE) without sending different headers to each browser: Content-Type: text/html Content-Type: application/xhtml+xml\"","msgtype":"m.text"},"ts":1243933740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why hasn't anyone thought of that before?","msgtype":"m.text"},"ts":1243933741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"violates HTTP?","msgtype":"m.text"},"ts":1243933800000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"Because it's insane?","msgtype":"m.text"},"ts":1243933801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does apache even let you do that?","msgtype":"m.text"},"ts":1243933802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was thinking if there continues to be debate on whether the principles should be absolute, I could cite some examples from other domains","msgtype":"m.text"},"ts":1243933803000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the PHP content negotiation scripts also violate HTTP and are insane","msgtype":"m.text"},"ts":1243933804000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I see a new meme for all the cool people coming up","msgtype":"m.text"},"ts":1243933805000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and perhaps unlikely to survive proxies","msgtype":"m.text"},"ts":1243933806000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Math: Every natural number is either prime or composite - except 1.","msgtype":"m.text"},"ts":1243933807000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: i guess not in a simple way","msgtype":"m.text"},"ts":1243933860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Perl: There's more than one way to do it. -- but sometimes there is only one way, does this undermine the very foundations of Perl?","msgtype":"m.text"},"ts":1243933861000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"when is there only one way?!","msgtype":"m.text"},"ts":1243933862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that i want to see","msgtype":"m.text"},"ts":1243933863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Python: none of the principles are absolute, all are extremely vague: http://www.python.org/dev/peps/pep-0020/","msgtype":"m.text"},"ts":1243933864000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I guess it would depend on what the definition of \"one\" is","msgtype":"m.text"},"ts":1243933920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"If there's one way to do it, call that way X; then you can do eval(\"X\") and now there's two ways to do it","msgtype":"m.text"},"ts":1243933921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"even by a reasonable definition such that Philip`'s two things are considered the same","msgtype":"m.text"},"ts":1243933922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think there's only one way to add two numbers, short of adding no-op layers of wrapping","msgtype":"m.text"},"ts":1243933923000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think the difference between the python \"design principles\" and the HTML ones is rather telling","msgtype":"m.text"},"ts":1243933924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"adding two numbers... hmm","msgtype":"m.text"},"ts":1243933925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, where do keep that list of mails you have on your backlog where one can vote for important issues (but doesn't)? Google fails me.","msgtype":"m.text"},"ts":1243933926000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"You can add two numbers with a lookup table","msgtype":"m.text"},"ts":1243933980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"philipj: whatwg.org/issues","msgtype":"m.text"},"ts":1243933981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: telling in what way?","msgtype":"m.text"},"ts":1243933982000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1243933983000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: but if you have a specific request, just let me know :-)","msgtype":"m.text"},"ts":1243933984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"philipj: it'll be quicker for you :-)","msgtype":"m.text"},"ts":1243933985000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: I wish we had enough community consensus that our design principles could be one-liners","msgtype":"m.text"},"ts":1243933986000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"just wondering if you forgot about the media resource selection algorithm feedback","msgtype":"m.text"},"ts":1243933987000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but with a higher level of dissent, it's more useful to add some explanation","msgtype":"m.text"},"ts":1243933988000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: e.g. the line \"Although that way may not be obvious at first unless you're Dutch.","msgtype":"m.text"},"ts":1243934040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"philipj: \"In the search loop, step 6 can never be reached because step 5 either goes to 1 or aborts the task. Simply removing \"Otherwise, abort the task.\" should","msgtype":"m.text"},"ts":1243934041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do the trick.\"","msgtype":"m.text"},"ts":1243934042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"philipj: ?","msgtype":"m.text"},"ts":1243934043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"philipj: or something else?","msgtype":"m.text"},"ts":1243934044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: example of WCAG 2.0 precision: zooming has a precise percent requirement: 200%","msgtype":"m.text"},"ts":1243934045000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: you mean the fact that readers are expected to have a sense of humor?","msgtype":"m.text"},"ts":1243934046000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not only that, but the part about async/sync inconsistencies with when src attr or <source> element is selected","msgtype":"m.text"},"ts":1243934100000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"\"Although that way may not be obvious at first unless you're Dutch.\"","msgtype":"m.text"},"ts":1243934101000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"Hixie: example of WCAG 2.0 imprecision: you can't tell without supporting materials if browser-native zoom satisfies the req","msgtype":"m.text"},"ts":1243934102000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Python is nice","msgtype":"m.text"},"ts":1243934103000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"philipj: i thought i fixed that","msgtype":"m.text"},"ts":1243934104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me have a look","msgtype":"m.text"},"ts":1243934105000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: oh you mean src vs <source>","msgtype":"m.text"},"ts":1243934106000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"philipj: i don't know of a way to fix that","msgtype":"m.text"},"ts":1243934107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk2: do you find it obvious?","msgtype":"m.text"},"ts":1243934108000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"philipj: i have an e-mail from you starting \"This is an improvement in predictability\"","msgtype":"m.text"},"ts":1243934160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, is there a problem with the solution I suggested?","msgtype":"m.text"},"ts":1243934161000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"othermaciej: The fact the community accepts humour and the fact that one of the design principles points out that perfect design is ulikely to happen","msgtype":"m.text"},"ts":1243934162000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: my favorite is \"Interruptions can be postponed or suppressed by the user, except interruptions involving an emergency.\"","msgtype":"m.text"},"ts":1243934163000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That I always make the right design decisions when writing Python because I'm Dutch seems very obvious and logical to me :)","msgtype":"m.text"},"ts":1243934164000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1243934165000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"philipj: i guess it might work, i'll have to look closer","msgtype":"m.text"},"ts":1243934220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I've implemented basically by ignoring step 5 \"let src equal the first value that was assigned\" and some minor changes","msgtype":"m.text"},"ts":1243934280000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: k. i expect we can make that work. i'll get to it probably before the end of the month (unless you need the spec updated before then)","msgtype":"m.text"},"ts":1243934281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well as I said it's all in my mail, I just wanted to check if you had it in your backlog","msgtype":"m.text"},"ts":1243934340000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"there's no big rush as far as I'm concerned","msgtype":"m.text"},"ts":1243934341000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"othermaciej: lol \"Namespaces are one honking great idea -- let's do more of those!\"","msgtype":"m.text"},"ts":1243934400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"philipj: yup, definitely got it","msgtype":"m.text"},"ts":1243934401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not applicable in our context!","msgtype":"m.text"},"ts":1243934460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"With that exception (and a few others), I actually think that a lot of the Python design principles are things that we should be striving for","msgtype":"m.text"},"ts":1243934580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"just due to sheer complexity of the Web platform we sort of fail on \"If the implementation is hard to explain, it's a bad idea.\"","msgtype":"m.text"},"ts":1243934700000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"annevk42: But we should aim for that in new features","msgtype":"m.text"},"ts":1243934701000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least at a high level","msgtype":"m.text"},"ts":1243934702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean details of web security and so on will always be hard to explain so the details of new features will never be obvious","msgtype":"m.text"},"ts":1243934760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders if there is a principle like \"ignore principles that seem inconveniently contrary to our view of the world (e.g. ones that promote namespaces)\"","msgtype":"m.emote"},"ts":1243934761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, I guess that principle is that not all programming principles apply to those of markup languages","msgtype":"m.text"},"ts":1243934820000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"How does one decide which ones do apply?","msgtype":"m.text"},"ts":1243934880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Given an arbitary set of possibe principles?","msgtype":"m.text"},"ts":1243934940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The ones that make sense based on experience, etc. If you get it wrong then it just means that the result will likely be bad","msgtype":"m.text"},"ts":1243935000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`, somewhat informed judgment?","msgtype":"m.text"},"ts":1243935001000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"jgraham: many of the new features fail","msgtype":"m.text"},"ts":1243935002000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: for instance Workers - no way any implementation is going to be easy to explain","msgtype":"m.text"},"ts":1243935003000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but hopefully the *interface* can remain easy to explain","msgtype":"m.text"},"ts":1243935060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the difference is that Python is just a programming language, not so much an API to all kinds of features","msgtype":"m.text"},"ts":1243935120000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"It's an API to an interpreter","msgtype":"m.text"},"ts":1243935121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and Python is also going to violate that principle once they get further with JIT'ing)","msgtype":"m.text"},"ts":1243935180000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"othermaciej: Possibly that means that workers is too complex. Possibly it just means that the complexity is inevitable if you want that feature.","msgtype":"m.text"},"ts":1243935181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But if we had a principle like that we would at least look to minimise internal complexity whereever possible","msgtype":"m.text"},"ts":1243935182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(DOM consistency is rather similar)","msgtype":"m.text"},"ts":1243935183000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but obviously more specific)","msgtype":"m.text"},"ts":1243935240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i wonder if julian realises that complaining that i haven't replied to his e-mail is delaying my replying to his e-mail because i end up reading and responding to his e-mails complaining about it...","msgtype":"m.text"},"ts":1243935241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: I think there is inherent implementation to concurrency","msgtype":"m.text"},"ts":1243935480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but also, the message-passing model should have the least implementation complexity of various concurrency models","msgtype":"m.text"},"ts":1243935540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"however I think Workers / MessagePorts may have more complexity than expected, as we are learning in the course of implementing in WebKit","msgtype":"m.text"},"ts":1243935600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: there is Avoid Needless Complexity","msgtype":"m.text"},"ts":1243935601000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: but in general, I think it's more important to avoid interface complexity than implementation complexity","msgtype":"m.text"},"ts":1243935660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i should go to bed","msgtype":"m.text"},"ts":1243935661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless the implementation complexity required is truly excessive, and beyond what is reasonable for the feature in question","msgtype":"m.text"},"ts":1243935662000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I should try to invoke Avoid Needless Complexity and Solve Real Problems against table taint","msgtype":"m.text"},"ts":1243935780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"having a writable datum in stack nodes means speculative parsing needs to copy the nodes instead of holding references to the nodes from different speculations","msgtype":"m.text"},"ts":1243935840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"woohoo! <datagrid> content model got sane","msgtype":"m.text"},"ts":1243935900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: hmm i can't reopen your bug, but now it has more info","msgtype":"m.text"},"ts":1243935901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: which bug?","msgtype":"m.text"},"ts":1243935960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=6978","msgtype":"m.text"},"ts":1243935961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe it should be a per-document flag so that when it gets set, all further </script> tags are omitted in the serialization","msgtype":"m.text"},"ts":1243936020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but you could still make it run by inserting <style></script></style>","msgtype":"m.text"},"ts":1243936080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so not worth it i guess","msgtype":"m.text"},"ts":1243936081000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe the whole script should be omitted instead","msgtype":"m.text"},"ts":1243936082000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i.e. instead of serializing <script>contents, serialize <script></script> (or nothing)","msgtype":"m.text"},"ts":1243936140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess nothing is better considering <script src>","msgtype":"m.text"},"ts":1243936141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe script elements shouldn't be inserted in the dom until the end tag is seen?","msgtype":"m.text"},"ts":1243936200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"during parsing","msgtype":"m.text"},"ts":1243936201000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Deferring insertion would be annoying","msgtype":"m.text"},"ts":1243936320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1243936321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what is this solving, anyway","msgtype":"m.text"},"ts":1243936440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does IE do it?","msgtype":"m.text"},"ts":1243936560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1243936740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that opera does it might be a side-effect of wanting to be ie-compatible","msgtype":"m.text"},"ts":1243936741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though we emit more tags than ie does at the moment","msgtype":"m.text"},"ts":1243936800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok well i'm going to bed.","msgtype":"m.text"},"ts":1243936860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn.","msgtype":"m.text"},"ts":1243936861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: nn","msgtype":"m.text"},"ts":1243937280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gnight Hixie","msgtype":"m.text"},"ts":1243937281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"thought Hixie was going to bed","msgtype":"m.emote"},"ts":1243938060000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"LIES!","msgtype":"m.text"},"ts":1243938061000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"wonders if chaals will eventually conclude that he's not saving any time by repeatedly making his same argument that getting rid of the design principles would save time","msgtype":"m.emote"},"ts":1243938180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"time will tell -- harharhar","msgtype":"m.text"},"ts":1243938240000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"did my explanation/justification of the document make sense btw?","msgtype":"m.text"},"ts":1243938900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I know it ended up a bit close to TL;DR territory","msgtype":"m.text"},"ts":1243938901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok, let that be the last thing I read before I start packing for the CSS meeting","msgtype":"m.text"},"ts":1243939200000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"has a flight in 3 hours","msgtype":"m.emote"},"ts":1243939201000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"ah, wouldn't want to miss that","msgtype":"m.text"},"ts":1243939440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: <a href=\"&copy=\"> is equivalent to <a href=\"©=\">","msgtype":"m.text"},"ts":1243939500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"othermaciej, looks good","msgtype":"m.text"},"ts":1243939560000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"othermaciej, I agree with Hixie that some of that should probably go into the introduction","msgtype":"m.text"},"ts":1243939561000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"annevk42: yeah, that suggestion made sense to me","msgtype":"m.text"},"ts":1243939562000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, I also I agree with removing and adding principles as suggested in the end","msgtype":"m.text"},"ts":1243939563000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"annevk42: I will see what happens in the email discussion for a day or two before I do that","msgtype":"m.text"},"ts":1243939564000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(either of those things)","msgtype":"m.text"},"ts":1243939620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1243939621000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"my browsers have less spacing for <isindex> than what the spec gives (with implying <p>)","msgtype":"m.text"},"ts":1243944600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<isindex type=checkbox>","msgtype":"m.text"},"ts":1243944960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the spec matches ie at least","msgtype":"m.text"},"ts":1243945260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"except for the p and the label","msgtype":"m.text"},"ts":1243945320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mmm coffee...","msgtype":"m.text"},"ts":1243945500000,"senderName":"Mrmil","senderId":"Mrmil@irc"},
{"content":{"body":"ezyang: http://stuff.gsnedders.com/phphtml5lib/","msgtype":"m.text"},"ts":1243947060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Why JPEG?","msgtype":"m.text"},"ts":1243948920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Also, how did it spend 101.70% of its time inside {main}?","msgtype":"m.text"},"ts":1243949040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Because it's sanely small :P","msgtype":"m.text"},"ts":1243949460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Because it's not 100% reliable :P","msgtype":"m.text"},"ts":1243949461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is it 101.70% reliable?","msgtype":"m.text"},"ts":1243950000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Totally.","msgtype":"m.text"},"ts":1243950001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, ponder that statement. Is something that is 101.70% reliable a) more than 100% reliable, b) the same as 100% reliable, it makes no sense to speak of more, or c) less than 100% reliable, because it makes no sense to speak of more","msgtype":"m.text"},"ts":1243950240000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, it means it performed better than expected or possible","msgtype":"m.text"},"ts":1243950480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'm a little confused about the changes regarding conformance of unescaped ampersands that are being discussed on the list. AFAICT, the spec still says that unescaped ampersands in attribute values are still ambiguous","msgtype":"m.text"},"ts":1243950960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"is it only the parsing section that has been changed to not emit a parse error?","msgtype":"m.text"},"ts":1243950961000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: \"or, if the character is in an attribute value, one or more characters in the ranges U+0030 DIGIT ZERO .. U+0039 DIGIT NINE, U+0041 LATIN CAPITAL LETTER A .. U+005A LATIN CAPITAL LETTER Z, and U+0061 LATIN SMALL LETTER A .. U+007A LATIN SMALL LETTER Z, followed by a U+003D EQUALS SIGN character (=).\"","msgtype":"m.text"},"ts":1243951020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"now I'm confused whether \"RT\" on twitter means re-tweet or reply to","msgtype":"m.text"},"ts":1243951021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I thought it was the former, but I see usage that looks like the latter","msgtype":"m.text"},"ts":1243951022000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, it's supposed to mean re-tweet","msgtype":"m.text"},"ts":1243951023000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ok. good","msgtype":"m.text"},"ts":1243951080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"some people must be misusing it","msgtype":"m.text"},"ts":1243951081000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"that part zcorpan just quoted is what confused me. It's quite difficult to comprehend","msgtype":"m.text"},"ts":1243951200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"has non-fun trying to get Perl and Python implementations of YAML to interoperate","msgtype":"m.emote"},"ts":1243951320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and, after rereading it, I think it means that href=\"foo&bar=\" not ambiguous, but href=\"foo&bar\" is because it explicitly says it needs to be followed by an equals sign","msgtype":"m.text"},"ts":1243951321000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(particularly for handling Unicode characters)","msgtype":"m.text"},"ts":1243951322000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though, I would'nt be surprised if I still got that wrong, since the paragraph is so badly written)","msgtype":"m.text"},"ts":1243951323000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"blames Hixie ","msgtype":"m.emote"},"ts":1243951920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Doesn't it just mean an ampersand is ambiguous if it doesn't match /&(\\s|<|&|[0-9A-Za-z]+=)/?","msgtype":"m.text"},"ts":1243952160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which would be odd because &amp; would be defined as ambiguous, I guess)","msgtype":"m.text"},"ts":1243952161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Do they interoperate on non-Unicode characters?","msgtype":"m.text"},"ts":1243952340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Not quite","msgtype":"m.text"},"ts":1243952400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders how long `git blame -L '/>Tokeni/,/>Tree construct/' source` will take to run","msgtype":"m.emote"},"ts":1243952401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"One library outputs strings like \"foo \\","msgtype":"m.text"},"ts":1243952402000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"bar\"","msgtype":"m.text"},"ts":1243952403000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(using the slash to escape the newline because it's just there for pretty wrapping)","msgtype":"m.text"},"ts":1243952404000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and a different library parses that as a literal \\ in the string","msgtype":"m.text"},"ts":1243952405000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I should probably use a different interchange format, like JSON","msgtype":"m.text"},"ts":1243952460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I think it works now so I'm not going to change it","msgtype":"m.text"},"ts":1243952461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://blog.digitalbazaar.com/2009/05/31/admitting-that-javascript-was-a-mistake/ makes the exciting claim that Javascript was a mistake because it is a functional programming language","msgtype":"m.text"},"ts":1243952820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: and that we should use a procedural language like Python instead","msgtype":"m.text"},"ts":1243953360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Debugging in general (which would be impossible without Firebug).\" -- clearly, that's not true. Venkman was a great debugger well before firebug","msgtype":"m.text"},"ts":1243953420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"using python in browsers instead of JavaScript would be an even bigger mistake, cause then we'd have to deal with the insane, unintuitive design of python","msgtype":"m.text"},"ts":1243953840000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Why is that worse than the insane, unintuitive design of JavaScript?","msgtype":"m.text"},"ts":1243954440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: There is really nothing wrong with Python","msgtype":"m.text"},"ts":1243954441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's not really designed to go in browsers though","msgtype":"m.text"},"ts":1243954442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I imagine one serious problem would be either the language would fork, or the language in one environment (in-browser vs out-of-browser) would have to make huge sacrifices for the other","msgtype":"m.text"},"ts":1243954443000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"where nobody sensible uses JS outside of browsers, so there aren't widely-diverging demands on it","msgtype":"m.text"},"ts":1243954500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Indeed. JS-as-a-language has basically taken success in the browser at the expense of no success outside the browser","msgtype":"m.text"},"ts":1243954501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`, the design of javascript is more intuitive than python, though I admit it does have some concepts like closures and prototype chains that can be difficult to grasp","msgtype":"m.text"},"ts":1243954560000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I would toatlly love evidence backing up that statement","msgtype":"m.text"},"ts":1243954620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, which part of the statement? The complexity of closures and prototype chains, or that it's more intuitive than python?","msgtype":"m.text"},"ts":1243954621000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Because I think basically exactly the opposite; python has a few tough features but is basically sane whereas js is basically complex all the way through","msgtype":"m.text"},"ts":1243954680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lachy: The intuitivemenss part","msgtype":"m.text"},"ts":1243954681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think Perl is sane, so I don't have problems with either JS or Python","msgtype":"m.text"},"ts":1243954740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"As a random example javascript will allow you to do Constructor() (without \"new\") to execute a constructor function and not only will you not get the Object you were expecting back you will probably mess up the global namespace","msgtype":"m.text"},"ts":1243954860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"calling Constructor() without \"new\" is just a regular function call","msgtype":"m.text"},"ts":1243954920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy_: That's the point","msgtype":"m.text"},"ts":1243954921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"function Construct() {this.a = 2}; b = Construct()","msgtype":"m.text"},"ts":1243954922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sets a global variable a to 2","msgtype":"m.text"},"ts":1243954923000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as an example of a completely backwards and unintuitive feature in python, to join an array of strings with some delimiter, instead of calling array.join(delim), you have to call \"delim\".join(array)","msgtype":"m.text"},"ts":1243955040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and they use weird names like lists and dictionaries instead of array","msgtype":"m.text"},"ts":1243955100000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I thought that was crazy untill I realised that doing an operation on a string and getting a string back is more consistent than doing an operation on an array and getting a string back","msgtype":"m.text"},"ts":1243955160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no, doing an operation on the object itself (an array in this case) to obtain some output makes much more sense from an object oriented programming perspective","msgtype":"m.text"},"ts":1243955220000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: They are actually rather good names. \"array\" implies things that aren't necessarily true","msgtype":"m.text"},"ts":1243955221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like what?","msgtype":"m.text"},"ts":1243955222000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(moreso in js than in python even)","msgtype":"m.text"},"ts":1243955223000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like O(1) access time","msgtype":"m.text"},"ts":1243955280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: a = new Array(); a[Math.pow(2,32)-1] = 1;","msgtype":"m.text"},"ts":1243955281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lachy: Ho much memory does that use and how fast would it be enumerated?","msgtype":"m.text"},"ts":1243955340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/Ho/How/","msgtype":"m.text"},"ts":1243955341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"-2, surely","msgtype":"m.text"},"ts":1243955342000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Oh yeah, sorry","msgtype":"m.text"},"ts":1243955400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Why -2?","msgtype":"m.text"},"ts":1243955460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Otherwise .length can overflow","msgtype":"m.text"},"ts":1243955461000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1243955520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Array index properties have to be < 2^32 -1 ","msgtype":"m.text"},"ts":1243955521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"indeed, it does overflow. a.length returns 0 in the first case","msgtype":"m.text"},"ts":1243955522000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: That's a bug","msgtype":"m.text"},"ts":1243955523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or maybe I'm wrong.","msgtype":"m.text"},"ts":1243955580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Both Opera and Firefox do the same thing","msgtype":"m.text"},"ts":1243955581000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Yeah it is common behaviour. I thought it was a bug specwise but maybe something that has been adopted as common behaviour","msgtype":"m.text"},"ts":1243955640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's a bug specwise, yes. But what does that matter :P","msgtype":"m.text"},"ts":1243955700000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"jgraham, anyway, in answer to your question, if you created a list of the same length in python,  how much memory would it use and how fast would it be enumerated?","msgtype":"m.text"},"ts":1243955701000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"You can't assign to random indexes, without allocating the space first","msgtype":"m.text"},"ts":1243955760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(using append, extend, etc)","msgtype":"m.text"},"ts":1243955761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, sure, I'm not concerned about the specific method used to create the list of that length. My question was just pointing that the the performance question also applies to python under the same circumstances","msgtype":"m.text"},"ts":1243955940000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I think his point is that in Python some of the things implicit in JS are made explicit","msgtype":"m.text"},"ts":1243956000000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"the implicit features in JS are a nice feature to have","msgtype":"m.text"},"ts":1243956001000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: The same circumstances don't exist in Python","msgtype":"m.text"},"ts":1243956060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, surely you can create a list of that length in some way though","msgtype":"m.text"},"ts":1243956061000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Only if you fill in all the intermediate values","msgtype":"m.text"},"ts":1243956120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: which is different to what the JS example is doing","msgtype":"m.text"},"ts":1243956121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, than that's a point to JS then cause being able to create arrays of that length without needing to fill in all the intermediate values explicitly, at least until they need a non-undefined value, is a feature","msgtype":"m.text"},"ts":1243956180000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I think jgraham's point was that that feature in JS clearly can't be implemented with the data structure that's typically called an array","msgtype":"m.text"},"ts":1243956300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: It is not at all obvious that something called an \"Array\" would actually be a hashtable, or something similar under the hood","msgtype":"m.text"},"ts":1243956360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and so it's misleading to call it \"Array\" in JS","msgtype":"m.text"},"ts":1243956361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the underlying technical implementation is really irrelevant to whether or not it's an array","msgtype":"m.text"},"ts":1243956480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the fact that it can be used as a stack, queue, hash table or array may be a reason to not call it just an array though, but that's a very minor issue","msgtype":"m.text"},"ts":1243956600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"The underlying technical implementation is critical to the distinction between arrays and lists and hashtables and hybrids","msgtype":"m.text"},"ts":1243956601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and people should understand the distinctions, so they don't write silly code that has terrible performance","msgtype":"m.text"},"ts":1243956660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: Also there are plenty of thother things; var a = {}; a[1]=\"a\"; a[\"1\"] = \"b\"; //oops I overwrote my key","msgtype":"m.text"},"ts":1243956661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The fact the assignment creates globals","msgtype":"m.text"},"ts":1243956720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The with statement","msgtype":"m.text"},"ts":1243956721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Optional semicolons","msgtype":"m.text"},"ts":1243956780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes, the with statement is a mistake, just like the goto and break statements in other languages","msgtype":"m.text"},"ts":1243956781000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"eval","msgtype":"m.text"},"ts":1243956782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Yes I know Python has eval but it is almost never used)","msgtype":"m.text"},"ts":1243956783000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and it is much worse in a web context)","msgtype":"m.text"},"ts":1243956840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"people who use eval in javascript are usually clueless programmers (or they're using it for JSON parsing, despite the security problems)","msgtype":"m.text"},"ts":1243956841000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I know someone who used eval(\"a.\"+b) because they weren't aware that a[b] was equivalent","msgtype":"m.text"},"ts":1243956960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the way that enumeration works","msgtype":"m.text"},"ts":1243956961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A bunch of stuff that should get better in ES5 wrt defining object properties","msgtype":"m.text"},"ts":1243956962000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: I believe it's one of the most reason people use eval","msgtype":"m.text"},"ts":1243957020000,"senderName":"Rik|work","senderId":"Rik|work@irc"},
{"content":{"body":"the fact that strings, booleans and numbers have two different representations","msgtype":"m.text"},"ts":1243957021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The use of '+' for both string concatenation and addition","msgtype":"m.text"},"ts":1243957022000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"One of which is totally useless except for spec-internal algorithms","msgtype":"m.text"},"ts":1243957023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How many parse errors should \"<!DOCTYPE\" produce? I, and the PHP impl., think 1 (as of the change in spec of 2009-05-26). The test case says 2.","msgtype":"m.text"},"ts":1243957024000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Likely answer: test case is unchanged.)","msgtype":"m.text"},"ts":1243957025000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/26/24/","msgtype":"m.text"},"ts":1243957080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Never had a problem with that but the implicit type shifiting is odd","msgtype":"m.text"},"ts":1243957081000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"also == vs ===","msgtype":"m.text"},"ts":1243957140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Object equality","msgtype":"m.text"},"ts":1243957141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"[1,2,3] != [1,2,3]","msgtype":"m.text"},"ts":1243957142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What should \"<a a=a&>\" output?","msgtype":"m.text"},"ts":1243957320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(From the tokenizer)","msgtype":"m.text"},"ts":1243957321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"If no match can be made, then no characters are consumed, and nothing is returned. If the current state is not the character reference in attribute value state, or the U+0026 AMPERSAND character is not followed by one or more characters in the ranges U+0030 DIGIT ZERO to U+0039 DIGIT NINE, U+0041 LATIN CAPITAL LETTER A to U+005A LATIN CAPITAL LETTER Z, and U+0061 LATIN SMALL LETTER A to U+007A LATIN SMALL LETTER Z, fo","msgtype":"m.text"},"ts":1243957620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"by a U+003D EQUALS SIGN character (=), then this is also a parse error.\"","msgtype":"m.text"},"ts":1243957621000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That really doesn't read well.","msgtype":"m.text"},"ts":1243957622000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So in the character reference in attribute value state then \"&foo=\" is a parse error, but \"&foo\" is not, right?","msgtype":"m.text"},"ts":1243957740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wrong way round.","msgtype":"m.text"},"ts":1243957741000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"&foo=\" is not a parse error, \"&foo>\" is.","msgtype":"m.text"},"ts":1243957800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"<a a=a&>\" is right in the test, my impl. is not.","msgtype":"m.text"},"ts":1243957920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.molly.com/2009/06/02/why-xhtml2/","msgtype":"m.text"},"ts":1243958040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the listed advantages are not familiar to me as an html author","msgtype":"m.text"},"ts":1243958160000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"actually, i want to smash things now","msgtype":"m.text"},"ts":1243958220000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"http://twitter.com/mollydotcom/status/2004173388","msgtype":"m.text"},"ts":1243958221000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"apparently, there's a new version of that article coming","msgtype":"m.text"},"ts":1243958222000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"\"Search engines are ‘user agents’ that don’t support frames!\" - I've never once seen any evidence to support that claim","msgtype":"m.text"},"ts":1243958280000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"in fact, the first result returned is a framed page: http://www.google.com/search?q=Java+docs","msgtype":"m.text"},"ts":1243958340000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so it's a bogus claim","msgtype":"m.text"},"ts":1243958341000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"an advantage of xhtml2 to an html author is \"CSS gives more presentational possibilities than plain HTML\"","msgtype":"m.text"},"ts":1243958400000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"i know you all think html authors are stupid, but that's insulting","msgtype":"m.text"},"ts":1243958401000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"yeah, I read that and wondered why a general advantage of using CSS was listed as one specifically benefiting XHTML2","msgtype":"m.text"},"ts":1243958460000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"\"Visible on more devices\" # gah","msgtype":"m.text"},"ts":1243958520000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"of course, that claim is based in a theoretical future world in which support for XHTML2 has been added to devices and the number outweighs the number of devices that support HTML today","msgtype":"m.text"},"ts":1243958580000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"The claim is based on the erronous assumption that it is not possible to parse HTML on small devices","msgtype":"m.text"},"ts":1243958640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"WWhich is just crazy given that there are small devices shipping with HTML parsers today and even smaller devices that render html content using e.g. mini","msgtype":"m.text"},"ts":1243958700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that claim is based on never having written anything for a small device","msgtype":"m.text"},"ts":1243958701000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"and most of those claims are based on never having worked on html more complicated than a w3c page","msgtype":"m.text"},"ts":1243958760000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"later tonight, after Molly posts the proper version of that post, I will blog a detailed rebuttal of all his bogus points","msgtype":"m.text"},"ts":1243958761000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"i find that whole 'less presentation, more structure' section insulting","msgtype":"m.text"},"ts":1243958940000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"LOL. I missed this one the first time through: \"Advantages: All the ones that you can imagine, because XML is a Good Thing\"","msgtype":"m.text"},"ts":1243959060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"fair enough, i don't mind if it's xml or text, but some of those points are written by someone who's guessing what most people do, or so it would seem to my dumb html author mind","msgtype":"m.text"},"ts":1243959120000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"beowulf, it's written by Steven Pemberton","msgtype":"m.text"},"ts":1243959300000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: who's he?","msgtype":"m.text"},"ts":1243959360000,"senderName":"beowulf","senderId":"beowulf@irc"},
{"content":{"body":"XHTML2 WG chair","msgtype":"m.text"},"ts":1243959420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"or, at least member, if he's not the chair, but I'm pretty sure he is","msgtype":"m.text"},"ts":1243959421000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://www.molly.com/2009/06/02/the-real-why-xhtml-discussion/","msgtype":"m.text"},"ts":1243959540000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"\"Now, if HTML had never had a lax parser, but had always been strict, there wouldn’t be an incorrect (syntax-wise) HTML page in the planet, because everyone uses a ’suck it and see’ approach\"","msgtype":"m.text"},"ts":1243959660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I wonder how he explains the presense of non-well-formed XHTML and SVG on the web","msgtype":"m.text"},"ts":1243959720000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"\"HTML is just not addressing the use cases of the real world any more.\" hmm","msgtype":"m.text"},"ts":1243960140000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Lachy_: That viewpoint seems to be limited to the case where people write a small number of static pages and look at them all to see that they're correct","msgtype":"m.text"},"ts":1243960260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which was perhaps a valid viewpoint in 1995","msgtype":"m.text"},"ts":1243960261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but now everything is dynamic and mashed up, so your site's visitor is the first person in the world to see a particular page and encounter any errors on it","msgtype":"m.text"},"ts":1243960320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"reads the blog post","msgtype":"m.emote"},"ts":1243960440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Despite which there are a lot of conversations around HTML which revolve around the 1995 model being a good approximation to the truth","msgtype":"m.text"},"ts":1243960500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"2. Look at it in the browser, if there is a problem, fix it, and look again.\" - ah, that seems to be where the problem is, because most sites contain an infinite number of pages and you can't look at them all in your browser when developing the site","msgtype":"m.text"},"ts":1243960501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"I want the browsers to tell me when my pages are wrong\" - sounds like a job for a validator","msgtype":"m.text"},"ts":1243960560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What's the URL to the number of outstanding emails that Hixie has?","msgtype":"m.text"},"ts":1243960620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(possibly a validator that's built in to the browser as an extension)","msgtype":"m.text"},"ts":1243960621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(the really slow canvas graph one)","msgtype":"m.text"},"ts":1243960622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://www.whatwg.org/issues/data.html ?","msgtype":"m.text"},"ts":1243960800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Yes","msgtype":"m.text"},"ts":1243960801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1243960802000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And we're back in 2010 for the due date","msgtype":"m.text"},"ts":1243961880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: Can you add an id to the NCR table?","msgtype":"m.text"},"ts":1243962540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"<!DOCTYPE\" should return one parse error now, right?","msgtype":"m.text"},"ts":1243963800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"commits it seeming nobody argues otherwise :P","msgtype":"m.emote"},"ts":1243963980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(And it was the specific aim of the spec change to make it only return one parse error)","msgtype":"m.text"},"ts":1243963981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy_: there is little or no non-well-formed SVG on the web, fwiw","msgtype":"m.text"},"ts":1243964040000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"there is some SVG that is invalid because Adobe's viewer allowed magic namespaces","msgtype":"m.text"},"ts":1243964100000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"shepazu: Ho much SVG is created by automatic tools?","msgtype":"m.text"},"ts":1243964160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Other than e.g. inkscape)","msgtype":"m.text"},"ts":1243964161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as far as XHTML, I seriously doubt there is much non-well-formed XHTML that is served exclusively as XHTML, and not text/html","msgtype":"m.text"},"ts":1243964162000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"jgraham: I have no way of knowing that...","msgtype":"m.text"},"ts":1243964220000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"but there was a lot of hand-generated SVG back in the early days, the majority, perhaps","msgtype":"m.text"},"ts":1243964221000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"before Inkscape, definitely the vast majority","msgtype":"m.text"},"ts":1243964222000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"there was also script-generated SVG, which will of course be non-WF","msgtype":"m.text"},"ts":1243964280000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"unless it's generated as strings, I suppose","msgtype":"m.text"},"ts":1243964281000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"but it didn't make it to the web, because it would have been corrected when it didn't work","msgtype":"m.text"},"ts":1243964340000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"so, Lachy_'s premise doesn't seem to be borne out by reality","msgtype":"m.text"},"ts":1243964460000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"How does <x x=1 x=2 X=3> give two parse errors?","msgtype":"m.text"},"ts":1243964461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: How many did you expect?","msgtype":"m.text"},"ts":1243964462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: One.","msgtype":"m.text"},"ts":1243964463000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"One for each duplicated attribute?","msgtype":"m.text"},"ts":1243964520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no, one could argue that this prevented or slowed the uptake of SVG, but that's another matter (and I think it's far less critical than that it was not supported by browsers and people had to download the Adobe viewer)","msgtype":"m.text"},"ts":1243964521000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"gsnedders: Don't you lowercase the attribute name in the tokenizer?","msgtype":"m.text"},"ts":1243964522000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yes.","msgtype":"m.text"},"ts":1243964523000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1243964524000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"gsnedders: So you end up with 3 x attributes, giving two parse errors, no?","msgtype":"m.text"},"ts":1243964580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I didn't know whether the spec gave one parse error when it hit the first dupe or for all","msgtype":"m.text"},"ts":1243964581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm not reading the spec of anything. But I would expect 2 in some naive way","msgtype":"m.text"},"ts":1243964640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The spec says 2","msgtype":"m.text"},"ts":1243964641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I was being naïve and assuming the other logical option :P","msgtype":"m.text"},"ts":1243964642000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"shepazu: \"I seriously doubt there is much non-well-formed XHTML that is served exclusively as XHTML, and not text/html\" - I agree with that doubt, but that's because I doubt there is much XHTML (regardless of well-formedness) that is served exclusively as XHTML","msgtype":"m.text"},"ts":1243964820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"<x x x\" should output two parse errors, right? One for dupe attr, and one for EOF?","msgtype":"m.text"},"ts":1243968360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It seems bad to point to RFC2119 and say \"oh we can't have a must requirement about that because browsers will interoperate\"","msgtype":"m.text"},"ts":1243971060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because RFC2119 is clearly not written to deal with the situation that HTML is in where most authors are unaware of the specs and all implementations have to be error correcting","msgtype":"m.text"},"ts":1243971180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders what the bad side effects of saying \"HTML documents must be UTF8 encoded\" would be","msgtype":"m.emote"},"ts":1243971240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Apart from the fact that it wouldn't match the default","msgtype":"m.text"},"ts":1243971241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I gues you could say \"HTML documents must be UTF8 encoded and must have <meta charset=utf8>\"","msgtype":"m.text"},"ts":1243971300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can't see people going fo this though","msgtype":"m.text"},"ts":1243971360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham you would simply have to define the processing model for when an HTML processor encountered an HTML document that was not encoded in UTF8.","msgtype":"m.text"},"ts":1243971361000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Of course the actual processing would have to work like it does today","msgtype":"m.text"},"ts":1243971362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This would purely be an author requirement","msgtype":"m.text"},"ts":1243971420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At the very least it seems sensible to remove the ASCII loophole for declaring encodings","msgtype":"m.text"},"ts":1243971480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"by \"remove\" do you mean \"must ignore\"?","msgtype":"m.text"},"ts":1243971481000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"you can't really \"remove\" anything from the author's array of options, you can only make it \"do nothing\" or have some other minimal effect.","msgtype":"m.text"},"ts":1243971540000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I mean make it mandatory to declare ascii documents wither in <meta> or through headers","msgtype":"m.text"},"ts":1243971541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"at the moment non-ascii has to be declared to be conforming, ascii does not","msgtype":"m.text"},"ts":1243971600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure what that means unless you define what happens when authors don't do it.","msgtype":"m.text"},"ts":1243971601000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: In terms of implementation requirements it doesn't mean anything","msgtype":"m.text"},"ts":1243971602000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Implementations still have to look at HTTP headers, <meta> elements, use heuristics or fall back to win-1252","msgtype":"m.text"},"ts":1243971660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lachy_: that's not overflow; 2**32-1 is not an array index property, so setting it has no effect on the length property","msgtype":"m.text"},"ts":1243971661000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: You would have thought so","msgtype":"m.text"},"ts":1243971662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you, say, read the spec. But the real world disagrees","msgtype":"m.text"},"ts":1243971720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: no, that's exactly how the browsers work","msgtype":"m.text"},"ts":1243971721000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"arrays-as-objects with all the concomitant baggage was a flaw, but the real world does pretty well with them anyway","msgtype":"m.text"},"ts":1243971780000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Oh wait a second my test earlier was totally wrong","msgtype":"m.text"},"ts":1243971781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jwalden: Yes you are quite right. Apolologies for doubting you :)","msgtype":"m.text"},"ts":1243971840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/lo//","msgtype":"m.text"},"ts":1243971900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no worries :-)","msgtype":"m.text"},"ts":1243971901000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I've stared long and hard at the array-index-property parts of es3","msgtype":"m.text"},"ts":1243971902000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"frankly, arrays-as-objects is probably a bigger problem for implementations than for developers, since the convert-to-sparse determination is unspecified but necessary for performance and constraining memory use","msgtype":"m.text"},"ts":1243971960000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it's also a compatibility concern: SpiderMonkey has specifically tweaked its thresholds to perform better on certain JS benchmarks promulgated by the authors of engines which have different thresholds that don't fall over on said tests","msgtype":"m.text"},"ts":1243972140000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I do so love benchmarketing","msgtype":"m.text"},"ts":1243972141000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(threshold for sparsifying, to be clear, although I would be surprised if others haven't been similarly tweaked)","msgtype":"m.text"},"ts":1243972260000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"heycam: yt? i was wondering if you'd done anything on http://mcc.id.au/2009/01/string-handling/string-handling recently or had any plans to do more","msgtype":"m.text"},"ts":1243972261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: It is pretty surprising for authors if things that are instantaneous in one browser take an excessive amount of time in others","msgtype":"m.text"},"ts":1243972320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this wasn't \"excessive\" amounts of time, though, it was time measured in dozens of milliseconds","msgtype":"m.text"},"ts":1243972380000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"efficiently storing array properties is faster than doing a generic property-hash-storage system, but it's not order-of-magnitude slower, not enough for authors to get confused about it","msgtype":"m.text"},"ts":1243972381000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: Yeah I agree about a few milliseconds on typical microbenchmarks not being so important","msgtype":"m.text"},"ts":1243972440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this is what benchmarketing drives you to do :-\\","msgtype":"m.text"},"ts":1243972620000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wonders if there is any nice way to fix the horridness of PHP html5lib without making it slower","msgtype":"m.emote"},"ts":1243973340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Reimplement it in C ","msgtype":"m.text"},"ts":1243973400000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"jwalden: just make a benchmark that needs the optimisation you think is better for real world pages","msgtype":"m.text"},"ts":1243973460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ezyang: yeah, without doing that? :P","msgtype":"m.text"},"ts":1243973520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean, to a certain extent it would be smart ","msgtype":"m.text"},"ts":1243973521000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"At the very least, tokenization is something that probably should be in C ","msgtype":"m.text"},"ts":1243973522000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: I think any any extent it would be smart :P","msgtype":"m.text"},"ts":1243973580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/any/to/","msgtype":"m.text"},"ts":1243973581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"has the tokenizer working as an iterator now","msgtype":"m.emote"},"ts":1243973582000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"we're talking 50% slower.","msgtype":"m.text"},"ts":1243973583000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Not surprising ","msgtype":"m.text"},"ts":1243973584000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Turning it into an iterator means you get all of those function calls we oh so cleverly removed back ","msgtype":"m.text"},"ts":1243973640000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"And more ","msgtype":"m.text"},"ts":1243973641000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Yup","msgtype":"m.text"},"ts":1243973642000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's interesting that it is actually slower than having all the function calls within the tokenizer","msgtype":"m.text"},"ts":1243973700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean, there are probably around the same number as I have it now.","msgtype":"m.text"},"ts":1243973701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's because iterator generates a bunch more calls ","msgtype":"m.text"},"ts":1243973702000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Like, it checks if you're at the end() on every round ","msgtype":"m.text"},"ts":1243973703000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: I know, but I mean including those","msgtype":"m.text"},"ts":1243973704000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm, unclear. ","msgtype":"m.text"},"ts":1243973705000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"wonders if it the calls to array_shift","msgtype":"m.emote"},"ts":1243973760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(as that is O(n)","msgtype":"m.text"},"ts":1243973761000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"profiles","msgtype":"m.emote"},"ts":1243973762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"array_shift() shouldn't be O(n)... ","msgtype":"m.text"},"ts":1243973763000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"But I suppose PHP's array implementation would make it so. ","msgtype":"m.text"},"ts":1243973820000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"It is. It re-indexes everything.","msgtype":"m.text"},"ts":1243973821000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"There's an SPL queue in 5.3…","msgtype":"m.text"},"ts":1243973822000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sighs","msgtype":"m.emote"},"ts":1243973823000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If you want, you can branch and work on PHP5.3 only ","msgtype":"m.text"},"ts":1243973880000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"No point","msgtype":"m.text"},"ts":1243973881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What we could do if create a class which implements the queue like bit of the weird SPL queue structure and use arrays internally there","msgtype":"m.text"},"ts":1243973882000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"array_shift isn't that bad actually","msgtype":"m.text"},"ts":1243973883000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Don't boher with that, then ","msgtype":"m.text"},"ts":1243973940000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"It's the same culprits as before","msgtype":"m.text"},"ts":1243973941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's all function call overhead more or less…","msgtype":"m.text"},"ts":1243973942000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Did I say how much I love PHP yet?","msgtype":"m.text"},"ts":1243973943000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Maybe you're interpreting the results wrong? ","msgtype":"m.text"},"ts":1243973944000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"I reckon 15% of the cost to be the function calls foreach creates.","msgtype":"m.text"},"ts":1243974000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"puts html5lib performance on his queue of things to do after work ","msgtype":"m.emote"},"ts":1243974120000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Please feel free to optimise the Python html5lib too","msgtype":"m.text"},"ts":1243974180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"was really trying to do this to get the final few test cases to pass","msgtype":"m.emote"},"ts":1243974181000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess we could do the not-so-nice way the Python impl does it","msgtype":"m.text"},"ts":1243974240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What's not-so-nice about it?","msgtype":"m.text"},"ts":1243974241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Just think about who wrote it :P","msgtype":"m.text"},"ts":1243974242000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Uh... annevk2?","msgtype":"m.text"},"ts":1243974243000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What really needs to happen is the core string manipulation stuff needs to be written out in C ","msgtype":"m.text"},"ts":1243974300000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"And then we make wrappers around it in all the appropriate languages ","msgtype":"m.text"},"ts":1243974301000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"or jgraham?","msgtype":"m.text"},"ts":1243974302000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ezyang: That's not the problem. The most expensive thing is the tree construction.","msgtype":"m.text"},"ts":1243974303000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ezyang: http://stuff.gsnedders.com/phphtml5lib/","msgtype":"m.text"},"ts":1243974304000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, well, then you should factor out the tree-specific stuff, and then make the SimpleTree impl. ","msgtype":"m.text"},"ts":1243974305000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Well, that isn't always true","msgtype":"m.text"},"ts":1243974306000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's never true :P","msgtype":"m.text"},"ts":1243974360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh well.","msgtype":"m.text"},"ts":1243974361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ignore me.","msgtype":"m.text"},"ts":1243974362000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1243974363000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"With the spec the most expensive thing is DOMNode->appendChild :P","msgtype":"m.text"},"ts":1243974364000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Screens don't do anything for me. The great thing about *CacheGrind is you can reframe the data and look further ","msgtype":"m.text"},"ts":1243974365000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: Indeed. But some people wanted to see","msgtype":"m.text"},"ts":1243974366000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Did you have an actual point about python html5lib or are you just casting aspersions?","msgtype":"m.text"},"ts":1243974420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders, hey, I read that!","msgtype":"m.text"},"ts":1243974421000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"jgraham: Just insofar as it diverges from the spec.","msgtype":"m.text"},"ts":1243974422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk2: :D","msgtype":"m.text"},"ts":1243974423000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"buys annevk2 a beer… next year.","msgtype":"m.emote"},"ts":1243974424000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: The spec is meant to be diverged from","msgtype":"m.text"},"ts":1243974425000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: In what way?","msgtype":"m.text"},"ts":1243974426000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: (That's why it says that any algorithm which produces equivalent output to the specified one is acceptable)","msgtype":"m.text"},"ts":1243974480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Apart from known issues with failing tests?","msgtype":"m.text"},"ts":1243974481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: You have to admit, though; it's a lot easier (w.r.t. to maintainability) to do that once the spec is stable. ","msgtype":"m.text"},"ts":1243974482000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Philip`: I know :P","msgtype":"m.text"},"ts":1243974483000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"would quite like to write an impl. that uses something like Parsec","msgtype":"m.emote"},"ts":1243974540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ezyang: Indeed, but hopefully there are enough test cases and enough independent implementations that any problems caused by spec changes can be found relatively easily","msgtype":"m.text"},"ts":1243974541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Somehow the headline \"Microsoft unveils new controller\" sounds rather sinister","msgtype":"m.text"},"ts":1243974542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"One Microsoft Way!","msgtype":"m.text"},"ts":1243974600000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"It takes me on average about thirty minutes to resolve a spec-code impedance. Maybe towards the end it was 15 minutes, after I got good at figuring out what was different. ","msgtype":"m.text"},"ts":1243974660000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: Practice! :P","msgtype":"m.text"},"ts":1243974840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"My point, though, is that even when the code is ~ the spec, it's nontrivial to resolve bugs. ","msgtype":"m.text"},"ts":1243974900000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"And it can onl get worse ","msgtype":"m.text"},"ts":1243974901000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: Solution: read all diffs with spec :P","msgtype":"m.text"},"ts":1243974902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ezyang: I brought the tokenizer up to date with the spec, FWIW","msgtype":"m.text"},"ts":1243974960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: That's not a very practical solution","msgtype":"m.text"},"ts":1243974961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Awesome ","msgtype":"m.text"},"ts":1243974962000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: (and had to update a few test cases which means probably everything else fails now)","msgtype":"m.text"},"ts":1243975020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ezyang: I rewrote the entire NCR handling so we don't consume so much","msgtype":"m.text"},"ts":1243975021000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"About 80% I thought I had to update a test-case, it was actually my fault ","msgtype":"m.text"},"ts":1243975080000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"You should probably double check. ","msgtype":"m.text"},"ts":1243975081000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: The aim of the commit in the spec was to reduce to one parse error from two. I just did that in the test :P","msgtype":"m.text"},"ts":1243975140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, that was the only change ","msgtype":"m.text"},"ts":1243975260000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Yeah, that sounds legit ","msgtype":"m.text"},"ts":1243975261000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"The other thing I did to test suite was add one test that I broke in uncommitted code locally","msgtype":"m.text"},"ts":1243975320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders about getting hsivonen's parser working as a PHP ext","msgtype":"m.emote"},"ts":1243975680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nonono! ","msgtype":"m.text"},"ts":1243975681000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"It has to be C. ","msgtype":"m.text"},"ts":1243975682000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: Uh, surely we can get C++ to work?","msgtype":"m.text"},"ts":1243975683000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"C++ is not acceptable ","msgtype":"m.text"},"ts":1243975684000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"It has a horrid time integrating back to C ","msgtype":"m.text"},"ts":1243975685000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"And most bindings work better with C code than C++ ","msgtype":"m.text"},"ts":1243975740000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"gsnedders: Write a parser in brainfuck and then write a brainfuck to C compiler","msgtype":"m.text"},"ts":1243975741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No need to write C","msgtype":"m.text"},"ts":1243975742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ezyang: That's more work :P","msgtype":"m.text"},"ts":1243975860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ezyang: Attributes like xlink:href in <body> should have local name \"xlink:href\" and be in no namespace, unless that changed recently","msgtype":"m.text"},"ts":1243976040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sees no evidence for such a change","msgtype":"m.emote"},"ts":1243976041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Oh? ","msgtype":"m.text"},"ts":1243976100000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Where in the spec does it say that? ","msgtype":"m.text"},"ts":1243976101000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: Where in the spec does it say otherwise :) ","msgtype":"m.text"},"ts":1243976160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The only time that you insert attributes in a namespace is when you adjust foreign attributes for a token","msgtype":"m.text"},"ts":1243976161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which only happens for foreigncontent","msgtype":"m.text"},"ts":1243976162000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"afaik","msgtype":"m.text"},"ts":1243976163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm… \"When an end tag token is emitted with attributes, that is a parse error.\" is hard to implement when once you've hit attributes you still don't know it'll actually be emitted","msgtype":"m.text"},"ts":1243976220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah. That's probably right. ","msgtype":"m.text"},"ts":1243976221000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: Also, why are there things related to foreign content commented out in tokenizer?","msgtype":"m.text"},"ts":1243976222000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You should revert those changes (or I can revert them) ","msgtype":"m.text"},"ts":1243976223000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"gsnedders: Not sure what you're talking about ","msgtype":"m.text"},"ts":1243976224000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: seee // XXX not implemented","msgtype":"m.text"},"ts":1243976225000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: I know exactly why I thought that was otherwise the case ","msgtype":"m.text"},"ts":1243976226000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: I can revert them if you like","msgtype":"m.text"},"ts":1243976280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Oh, I never implemented that ","msgtype":"m.text"},"ts":1243976281000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Please do so. ","msgtype":"m.text"},"ts":1243976340000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"wonders why test cases don't test that","msgtype":"m.emote"},"ts":1243976341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: That would be loverly. Also, update the wiki page to mention the difference between \"xlink href\" and \"xlink:href\" ","msgtype":"m.text"},"ts":1243976342000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"It's very subtle ","msgtype":"m.text"},"ts":1243976343000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"ezyang: If you have the wiki page can you update it? I would need to find it...","msgtype":"m.text"},"ts":1243976400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Parser_tests ","msgtype":"m.text"},"ts":1243976460000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"I lost my account info ","msgtype":"m.text"},"ts":1243976461000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"Hixie: it's not that I don't think the optimization is bad, it's that the dividing point between when and when not to optimize is not being determined by real-world scripts but rather by artificial use in benchmarks","msgtype":"m.text"},"ts":1243977720000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"heycam: fyi, http://lists.w3.org/Archives/Public/public-webapps/2009AprJun/0720.html","msgtype":"m.text"},"ts":1243977721000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"never ceases to be amazed by how bad RSS/Atom are created","msgtype":"m.emote"},"ts":1243977722000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1243977780000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"JF linking to his blog reminded me about \"small and narrow minds\"","msgtype":"m.text"},"ts":1243977840000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"We haven't really come far from back there...","msgtype":"m.text"},"ts":1243977841000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"Wow, cool! There’s been a rip in the space/time continuum and this article has slipped through from 1998!\" - http://www.molly.com/2009/06/02/the-real-why-xhtml-discussion/","msgtype":"m.text"},"ts":1243982100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, hah :)","msgtype":"m.text"},"ts":1243982400000,"senderName":"arun__","senderId":"arun__@irc"},
{"content":{"body":"He had me at \"books are dead.\"","msgtype":"m.text"},"ts":1243982460000,"senderName":"arun__","senderId":"arun__@irc"},
{"content":{"body":"\"XML parsing is really easy. It is rather trivial to write an XML parser.\"","msgtype":"m.text"},"ts":1243985700000,"senderName":"Dashiva","senderId":"Dashiva@irc"}
]