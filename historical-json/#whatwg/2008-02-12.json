[
{"content":{"body":"wonders whether to make Storage.setItem() throw or not after all","msgtype":"m.emote"},"ts":1202776200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.hixie.ch/specs/dom/messages/0.9 <-- proposal for a spec for sending messages between end points, including sending end points along","msgtype":"m.text"},"ts":1202780520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"uh oh","msgtype":"m.text"},"ts":1202781360000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you've invented the pi calculus!","msgtype":"m.text"},"ts":1202781361000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1202781362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't mean to invent anything!","msgtype":"m.text"},"ts":1202781363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oops, behind schedule. gotta go. back in a bit.","msgtype":"m.text"},"ts":1202781540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: not enough greek letters","msgtype":"m.text"},"ts":1202784900000,"senderName":"AwayEagle","senderId":"AwayEagle@irc"},
{"content":{"body":"what's the reason for target=_blank not being conforming in the current draft?","msgtype":"m.text"},"ts":1202788680000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"is it to discourage people from trying to open new windows like that?","msgtype":"m.text"},"ts":1202788740000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"because the consensus in Web-developer-land seems to be that you should use JavaScript to add them back in...","msgtype":"m.text"},"ts":1202789040000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"using javascript to add them back in is just as invalid as having them in in thefirst place","msgtype":"m.text"},"ts":1202790000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the correct thing to do is to not set target=\"\", and let the user decide on his own what to do with links","msgtype":"m.text"},"ts":1202790001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"inimino: ^","msgtype":"m.text"},"ts":1202790060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that sounds awfully polite for a website to do","msgtype":"m.text"},"ts":1202790061000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"shocking, i know","msgtype":"m.text"},"ts":1202790120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I agree, I'm just seeing people using the JavaScript approach anyway and I'm wondering if that's actually worse than just allowing it","msgtype":"m.text"},"ts":1202790180000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"why would it be worse?","msgtype":"m.text"},"ts":1202790240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was going to say it's harder for the user to configure how it's handled, but that's probably not true","msgtype":"m.text"},"ts":1202790360000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"though there are people using window.open(), which seems like it might be less configurable","msgtype":"m.text"},"ts":1202790420000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"it's all the same code in the browser in the end","msgtype":"m.text"},"ts":1202790480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1202790481000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"too bad people validate the markup and not the DOM ;-)","msgtype":"m.text"},"ts":1202790540000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202790541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would be nice for there to be scripting-aware validators","msgtype":"m.text"},"ts":1202790600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202790601000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"news about a new Webkit-based browser for mobile devices","msgtype":"m.text"},"ts":1202790780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://torchmobile.com/press/","msgtype":"m.text"},"ts":1202790781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Iris Browser","msgtype":"m.text"},"ts":1202790840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"George Staikos's company","msgtype":"m.text"},"ts":1202790841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"product page mentions HTML5 and canvas","msgtype":"m.text"},"ts":1202790900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://torchmobile.com/products/","msgtype":"m.text"},"ts":1202790901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't think people involved in QtWebKit want to mention canvas :-)","msgtype":"m.text"},"ts":1202790902000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle - why's that? implementation of canvas on Qt port not work so good?","msgtype":"m.text"},"ts":1202791140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: last I checked, \"not so good\" would be quite an understatement.","msgtype":"m.text"},"ts":1202791200000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"damn. I want me some canvas on mobile","msgtype":"m.text"},"ts":1202791320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"may be someone can make a khtml4.0.1 build of konqueror/embedded :-)","msgtype":"m.text"},"ts":1202791620000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I am sure it works pretty well. And the basics of canvas will work, too, but not things like arcs and shadows.","msgtype":"m.text"},"ts":1202791800000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"so it ironically sucks that we now have multiple implementations of postMessage()","msgtype":"m.text"},"ts":1202793360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as the ideal way of fixing some of the problems with it would involve minor (but incompatible) changes to how it works","msgtype":"m.text"},"ts":1202793361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't suppose adam barth is here?","msgtype":"m.text"},"ts":1202793480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: i assume we consider it too late to dramatically change postMessage() at this point?","msgtype":"m.text"},"ts":1202793481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: depends on what \"dramatically\" means; adding the extra args suggested for better targeting would be simple enough, createMessageReceiver might be harder, reply() would be easy, I think","msgtype":"m.text"},"ts":1202793540000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"well my ideal solution would be to change postMessage() from what it is now to being something that creates two endpoints as defined here: http://hixie.ch/specs/dom/messages/0.9","msgtype":"m.text"},"ts":1202793600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: which solves all the problems neatly","msgtype":"m.text"},"ts":1202793601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i understand if that's too drastic","msgtype":"m.text"},"ts":1202793602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm tempted to say that we should solve these problems by just waiting til we introduce end points","msgtype":"m.text"},"ts":1202793780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sec, fighting fire on a tinderbox","msgtype":"m.text"},"ts":1202793781000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1202793782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then the solution would be, you postMessage() a hello, then the other side checks the origin and if it likes it, postMessage()s you an ack with an endpoint, and then you check the origin yourself, and if you like it, you use the end points to communicate","msgtype":"m.text"},"ts":1202793840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, my first reaction is this interface is waaay too complicated","msgtype":"m.text"},"ts":1202794140000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"second, the whole numbering thing just confuses me","msgtype":"m.text"},"ts":1202794380000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and I've implemented Unix pipes before in a toy kernel","msgtype":"m.text"},"ts":1202794381000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I don't think you want to bring the pipe model into the picture here, to be honest","msgtype":"m.text"},"ts":1202794440000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I think there's far more potential for confusion with this API than with one in which it's plain and simple message-passing, perhaps with builtin filtering mechanisms at both ends","msgtype":"m.text"},"ts":1202794560000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and in the end, yes, I'm pretty sure this would be too drastic not just for Mozilla but for Opera and likely WebKit as well","msgtype":"m.text"},"ts":1202794860000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: yeah i figured it would be too much change at this stage","msgtype":"m.text"},"ts":1202799600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: the real question is whether it's a bad idea to use this on the long term as a solution for the issues raised","msgtype":"m.text"},"ts":1202799660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: (i'm not sure what's complicated about the proposal, are we talking about the same thing? this is a pretty trivial api)","msgtype":"m.text"},"ts":1202799661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: re target, I'd tend to agree that websites should let users open links as they want, although sometimes you'd want to open a new browsing context to avoid losing application state (i.e. don't lose the users data opening a link in a multipage tax form). I think there are at least three advantages to target over window.open: it's declarative so you can easily make UI to distinguish such links (iCab does IIRC), it's simpler to author, and if ","msgtype":"m.text"},"ts":1202800800000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"The biggest argument against target in particular (as opposed to against opening new windows in general) is that it shifts application behavior into a document markup layer, but HTML5 does so much of that it hardly seems like a relevant argument.","msgtype":"m.text"},"ts":1202800860000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"also, if i have a legit small popup open and something in the popup or an external app triggers a new page open i want the new tab to be on the main win not the popup.  (fe, media player)","msgtype":"m.text"},"ts":1202801040000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"so maybe allow specifying that a window isn't available for new tabs unless explicitly requested by user","msgtype":"m.text"},"ts":1202801100000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"I guess it's worth remembering that plenty of content will continue to be pulled in via iframe, and need target=\"_top\" if it wants to transition the user away from the host page.","msgtype":"m.text"},"ts":1202801101000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"(no idea if this is already covered by a spec but i've been bitten by it a few times recently with different sites)","msgtype":"m.text"},"ts":1202801102000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"target's horrible and basically bad practice, but it seems to be useful in certain limited but real circumstances","msgtype":"m.text"},"ts":1202801160000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"scratches head","msgtype":"m.emote"},"ts":1202801161000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"you need to use target=_top for an iframe?","msgtype":"m.text"},"ts":1202801162000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"makes testcase","msgtype":"m.emote"},"ts":1202801163000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"I think if you have a form in the iframe you do.","msgtype":"m.text"},"ts":1202801164000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"(at least)","msgtype":"m.text"},"ts":1202801165000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"it came up in #javascript the other day for someone making a facebook app","msgtype":"m.text"},"ts":1202801220000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"sees not any reason why a form would make a diff","msgtype":"m.emote"},"ts":1202801221000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"That's why I say \"at least\".","msgtype":"m.text"},"ts":1202801222000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"it might be interesting to see if UAs could detect when state is being stored or when they're in a frame/popup context, and use that to determine whether to obey the command to open a new window","msgtype":"m.text"},"ts":1202801400000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"yep, a quick test shows it applies to A as well as FORM.","msgtype":"m.text"},"ts":1202801460000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"yup, webben_'s right","msgtype":"m.text"},"ts":1202801880000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"data:text/html,<!doctype html><p>lskfjlakj-lskjf</p> <iframe src=\"data:text/html,<a%2520href=%2522http://www.google.com%2522>lksjflkj</a>\"></iframe>","msgtype":"m.text"},"ts":1202801881000,"senderName":"jeremyb","senderId":"jeremyb@irc"},
{"content":{"body":"ah looks like the current draft actually allows for _top etc: 'The base element can now have a target attribute as well mainly for consistency with the a element and because it was already widely supported. Also, the target attribute for the a and area elements is no longer deprecated, as it is useful in Web applications, for example in conjunction with iframe.'","msgtype":"m.text"},"ts":1202802780000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"http://www.w3.org/TR/html5-diff/#new-attributes","msgtype":"m.text"},"ts":1202802781000,"senderName":"webben_","senderId":"webben_@irc"},
{"content":{"body":"sees that http://www.angelfire.com/tx/rangerexes/heritage.htm really doesn't work very well in Opera (9.2 or 9.5)","msgtype":"m.emote"},"ts":1202810820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<table> :(","msgtype":"m.text"},"ts":1202810880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, and it's not centered in IE","msgtype":"m.text"},"ts":1202810881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so Firefox renders everything before <table>","msgtype":"m.text"},"ts":1202811060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it's still centered then","msgtype":"m.text"},"ts":1202811120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thinks more tree construction tests are needed, given that his code is full of 'XXX' and 'TODO' comments but still passes the current test cases","msgtype":"m.emote"},"ts":1202817060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Maybe there should be a list of such todos somewhere so it's easy to find out which testcases need writing","msgtype":"m.text"},"ts":1202817180000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I'm just trying to fill in the gaps myself at the moment - if I wrote down a list, I'd forget what anything meant by the time I looked at it again :-)","msgtype":"m.text"},"ts":1202817300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, awesome","msgtype":"m.text"},"ts":1202817600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we wrote our code and later added some tests on top of the 71 hixie made but that's it","msgtype":"m.text"},"ts":1202817601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then henri added some and we fixed some more bugs, mostly in unicode handling","msgtype":"m.text"},"ts":1202817602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"'s implementation only handles ASCII :-(","msgtype":"m.emote"},"ts":1202817660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"reminds me of arc","msgtype":"m.text"},"ts":1202817661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :)","msgtype":"m.text"},"ts":1202818320000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"\"SVGSVGTextElement.getNumberOfChars() counts UTF-16 surrogates as separate characters\"","msgtype":"m.text"},"ts":1202818321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mmmm","msgtype":"m.text"},"ts":1202818380000,"senderName":"roc_","senderId":"roc_@irc"},
{"content":{"body":"given that various languages already have surrogates build in, maybe SVG should follow?","msgtype":"m.text"},"ts":1202818381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The SVGSVG prefix seems accident-prone","msgtype":"m.text"},"ts":1202818382000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(failure for test 69 in Opera)","msgtype":"m.text"},"ts":1202818383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(in Acid3)","msgtype":"m.text"},"ts":1202818384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the DOM is pretty deeply in the territory of counting UTF-16 code units","msgtype":"m.text"},"ts":1202820180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: and too late to fix","msgtype":"m.text"},"ts":1202820181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://james.html5.org/cgi-bin/parsetree/parsetree.py?source=%3C!doctype%20html%3E%3Ctable%3E%3Cp%3E%3C/table%3E - the </table> should generate implied end tags, which should imply a </p>, which should cause a table-voodoo error","msgtype":"m.text"},"ts":1202820480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't know if that can have a more significant effect than a lack of error","msgtype":"m.emote"},"ts":1202820540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen, right, does it make sense for SVG to be different?","msgtype":"m.text"},"ts":1202821860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh it's different? no, that doesn't make sense at all","msgtype":"m.text"},"ts":1202821920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. is it defined anywhere in the html5 spec that elements implement appropriate interfaces when put in the dom by the xml processor? or elements created with createElementNS?","msgtype":"m.text"},"ts":1202823660000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i note that the html5 parser says that elements should implement the appropriate interfaces","msgtype":"m.text"},"ts":1202823720000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"perhaps it should be defined in a higher layer? like \"when an element is created and it is in the html namespace, it must implement the appropriate interfaces...\" or some such","msgtype":"m.text"},"ts":1202823780000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, since HTML5 is defined in terms of the DOM, it doesn't matter where the elements come from, they still implement the DOM APIs","msgtype":"m.text"},"ts":1202823900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: so why is there a requirement in the parser about elements implementing appropriate interfaces?","msgtype":"m.text"},"ts":1202823960000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I don't know","msgtype":"m.text"},"ts":1202823961000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"seems kind of redundant","msgtype":"m.text"},"ts":1202823962000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"zcorpan_: I think the spec needs to say that XML stuff needs to implement the right stuff","msgtype":"m.text"},"ts":1202823963000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, is there a summary somewhere of how DOM and ECMAScript assume UTF-16?","msgtype":"m.text"},"ts":1202827680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"defining it at an intermediate layer seems cleaner to me","msgtype":"m.text"},"ts":1202829180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lets his frustration out at the httpbis wg","msgtype":"m.emote"},"ts":1202833080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<http://lists.w3.org/Archives/Public/ietf-http-wg/2008JanMar/0227.html>","msgtype":"m.text"},"ts":1202833260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"now has 2000 lines of generated JavaScript to implement a tree constructor","msgtype":"m.emote"},"ts":1202833380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though unfortunately most of the lines say things like debug(\"TODO: ReprocessAsIf\"); because I haven't implemented them yet :-(","msgtype":"m.text"},"ts":1202833440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: User-Agents MUST ignore the user preferences? That's a nice one. ","msgtype":"m.text"},"ts":1202833500000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"wonders whether someone has stats on wrong content-type w/in http headers. He surely has seen it with http-equiv","msgtype":"m.emote"},"ts":1202833501000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: most of what the HTTPbis WG is working on is totally idealistic and backwards incompatible (well, compatible with conforming impls. of RFC2616, if there are any)","msgtype":"m.text"},"ts":1202833502000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SadEagle: content-type or charset?","msgtype":"m.text"},"ts":1202833560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SadEagle: charset's not that widespread. The issue is with implicit charsets (like on text/xml)","msgtype":"m.text"},"ts":1202833561000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I meant charset within content-type.","msgtype":"m.text"},"ts":1202833620000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"yeah, if it is explicitly given, it's normally right (except for one or two things, like ISO-8859-1 and GB2302)","msgtype":"m.text"},"ts":1202833621000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(not GB2302, GB2312)","msgtype":"m.text"},"ts":1202833680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"text/xml doesn't have explicit charsets","msgtype":"m.text"},"ts":1202833740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see RFC 3023","msgtype":"m.text"},"ts":1202833741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(within the file, that is)","msgtype":"m.text"},"ts":1202833742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-> food","msgtype":"m.emote"},"ts":1202833743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean on the actual MIME type","msgtype":"m.text"},"ts":1202833800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(i.e., parameters on the MIME type","msgtype":"m.text"},"ts":1202833801000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well, I've seen e.g. <meta http-equiv=\"content-type:text/html;charset=utf-16\"> .... encoded as ASCII. Also koi8/cp1251 messups. Now, w/meta one can claim it's html that defines it anyway, but still, I would expect the sequence in case of a misconfigured server to be:","msgtype":"m.text"},"ts":1202833860000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: that's specific to HTML, though. I'm talking in general HTTP terms. UTF-16 in meta@charset must be ignored","msgtype":"m.text"},"ts":1202833861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"1) User open a webpage, sees garbage. 2) User activates encoding auto-detection, which picks the right decoding. 3) The user keeps browsing the webpage with auto-detection (or manualyl chosen charset) \"sticky\", and has no problem. It seems to me that the proposal would require the user to repeat (2) every time they navigate. ","msgtype":"m.text"},"ts":1202833920000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"yeah, it would","msgtype":"m.text"},"ts":1202833980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: v.nu says that <p/> is an html4-only error","msgtype":"m.text"},"ts":1202835840000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: it seems that your encoding declaration warnings have gone amok: http://validator.nu/?doc=http%3A%2F%2Fvalidator.w3.org%2F","msgtype":"m.text"},"ts":1202837640000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"webben: target=_top is allowed, it's only _blank that isn't.","msgtype":"m.text"},"ts":1202837880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"notes that v.w.o has \"Group Error Messages by type\"","msgtype":"m.emote"},"ts":1202837940000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: Thanks, I did note that. :)","msgtype":"m.text"},"ts":1202837941000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"zcorpan_: oops. thanks","msgtype":"m.text"},"ts":1202840400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is feeling very naïve at the moment","msgtype":"m.emote"},"ts":1202840520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"knows nowhere near enough about Python","msgtype":"m.emote"},"ts":1202840521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan_: fixed. thanks","msgtype":"m.text"},"ts":1202841480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jwalden: yt?","msgtype":"m.text"},"ts":1202845920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sorta; you caught me just before a phone conference actually :-)","msgtype":"m.text"},"ts":1202845980000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"i just made a change to MessageEvent/postMessage() for security that fixed a separate problem from the one that was raised earlier","msgtype":"m.text"},"ts":1202846040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm about to send mail to whatwg explaining it","msgtype":"m.text"},"ts":1202846041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: see above also","msgtype":"m.text"},"ts":1202846042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically changing message.domain and message.uri to just message.origin","msgtype":"m.text"},"ts":1202846043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is what the .uri value used to be, but without the path","msgtype":"m.text"},"ts":1202846044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1202846100000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I await the explanation!","msgtype":"m.text"},"ts":1202846101000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1202846102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sent","msgtype":"m.text"},"ts":1202846220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nice catch on username/password; I should have thought of that in my testing","msgtype":"m.text"},"ts":1202847120000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I *did* think of it once you summarized the change above, tho :-)","msgtype":"m.text"},"ts":1202847121000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1202847122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think this, as a sideeffect, will simplify addressing one of the other problems","msgtype":"m.text"},"ts":1202847123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"instead of postMessage(message, [domain, [uri]]); we can just have postMessage(message, [origin]);","msgtype":"m.text"},"ts":1202847180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so everything before the path, *except* for username/password, then","msgtype":"m.text"},"ts":1202847181000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202847182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and later make it postMessage(message, [endPoint], [origin]), since those two are type-distinguishable)","msgtype":"m.text"},"ts":1202847183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what commit did this change occur in? I can't find it in the tracker","msgtype":"m.text"},"ts":1202848140000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"I sent my response","msgtype":"m.text"},"ts":1202848141000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"is writing a bug report for WebKit and wants to link to the change","msgtype":"m.emote"},"ts":1202848200000,"senderName":"aroben","senderId":"aroben@irc"},
{"content":{"body":"I'll note that I originally wanted .domain to always include a port number, which would have avoided the first problem even if I'd never have noticed that we'd avoided it  :-P","msgtype":"m.text"},"ts":1202848201000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and I definitely wouldn't have noticed the first problem","msgtype":"m.text"},"ts":1202848202000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I'm still a bit chagrined I missed the second","msgtype":"m.text"},"ts":1202848260000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"GAAAAH","msgtype":"m.text"},"ts":1202848261000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"gets bitten by forgetting +whatwg AGAIN","msgtype":"m.emote"},"ts":1202848320000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"bits jwalden ","msgtype":"m.emote"},"ts":1202848560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1202848561000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"*bites","msgtype":"m.text"},"ts":1202848562000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: I took a good look at the treebuilders today, and I really can't work out how the etree stuff works.","msgtype":"m.text"},"ts":1202848620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: By magic :)","msgtype":"m.text"},"ts":1202848621000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1202848680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(i.e., I can't get DOM to work in a similar way)","msgtype":"m.text"},"ts":1202848681000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What do you actually want to know?","msgtype":"m.text"},"ts":1202848682000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"I just don't really understand how the etree stuff works _at all_.","msgtype":"m.text"},"ts":1202848683000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"as in, how it works out what etree impl to use from the second param to getTreeBuilder","msgtype":"m.text"},"ts":1202848740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So, from memory, we do something like create a module-like object at runtime with a module-level variable ElementTree set to the module of the Element Tree implementation that we're using","msgtype":"m.text"},"ts":1202848800000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"what does getETreeBuilder() do?","msgtype":"m.text"},"ts":1202848860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"decides looking t the code would help","msgtype":"m.emote"},"ts":1202848861000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"what's **kwargs?","msgtype":"m.text"},"ts":1202848862000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heck, what does *arg and **arg mean?","msgtype":"m.text"},"ts":1202848920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's different ways of passing arguments in Python","msgtype":"m.text"},"ts":1202848921000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"IIRC kwargs is named parameters","msgtype":"m.text"},"ts":1202848922000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"can't remember the difference between *arg and **arg","msgtype":"m.text"},"ts":1202848923000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"*args means take the tuple args and expand its value as a set of arguments to a function ","msgtype":"m.text"},"ts":1202848980000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1202848981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so something like func(*(True, 3)) calls func with the args True and 3","msgtype":"m.text"},"ts":1202849040000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"and ** is reference?","msgtype":"m.text"},"ts":1202849041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"similarly **kwargs expands a dict kwargs as a set of named parameters to a function","msgtype":"m.text"},"ts":1202849042000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1202849043000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: you didn't update initMessageEvent(NS)?","msgtype":"m.text"},"ts":1202849044000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"then how do you pass by reference?","msgtype":"m.text"},"ts":1202849045000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so func(**{\"foo\":True, \"bar\":3}) == func(foo=True, bar=3)","msgtype":"m.text"},"ts":1202849100000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"gsnedders: You don't","msgtype":"m.text"},"ts":1202849101000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"yeah. that makes sense.","msgtype":"m.text"},"ts":1202849102000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham_: ah.","msgtype":"m.text"},"ts":1202849103000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham_: that's simple.","msgtype":"m.text"},"ts":1202849104000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"or rather, you always pass by _object_","msgtype":"m.text"},"ts":1202849105000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"now, back to treebuilders","msgtype":"m.text"},"ts":1202849106000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so something like \"a = [1,2]; func = lambda x:x.append(3);func(a);print a\" will print [1,2,3]","msgtype":"m.text"},"ts":1202849280000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"ya","msgtype":"m.text"},"ts":1202849281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: So, getETreeBuilder is like a function to return a set of functions which are all closures over the value of  ElementTreeImplementation","msgtype":"m.text"},"ts":1202849460000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"notice the return locals() at the end","msgtype":"m.text"},"ts":1202849520000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"those functions are turned into a module on the fly in getEtreeModule","msgtype":"m.text"},"ts":1202849521000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"This is kinda icky but I wasn't sure how else to reuse all the code for multiple etree implementations","msgtype":"m.text"},"ts":1202849580000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"has to go eat now, will be back later","msgtype":"m.emote"},"ts":1202849581000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Hixie: you have <code title\"\"> in html5, what's this meant to be?","msgtype":"m.text"},"ts":1202849640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(or is my in-head parser not got some quirky error handling?)","msgtype":"m.text"},"ts":1202849641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: (see \"<p>For the purposes of the interaction of HTML with Selectors' <code\")","msgtype":"m.text"},"ts":1202849700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"throws this proposal for recreating toc(1) and num(1) out the window for being far too expensive","msgtype":"m.emote"},"ts":1202850120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: that is per HTML 5 seemingly an empty title\"\" attribute. I guess you didn't mean that :)","msgtype":"m.text"},"ts":1202850240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is there some way I can construct a DOM element using JS so it has an attribute called something like title\"\" without throwing exceptions?","msgtype":"m.text"},"ts":1202850900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I can't make a very good HTML parser if there's no way to construct the things that are parsed :-(","msgtype":"m.text"},"ts":1202850960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can you use String.fromCharCode?","msgtype":"m.text"},"ts":1202850961000,"senderName":"blooberry","senderId":"blooberry@irc"},
{"content":{"body":"The problem is just when trying to pass the string into setAttribute","msgtype":"m.text"},"ts":1202851020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it throws an exception in that case?","msgtype":"m.text"},"ts":1202851021000,"senderName":"blooberry","senderId":"blooberry@irc"},
{"content":{"body":"In Firefox 2, yes","msgtype":"m.text"},"ts":1202851080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(In Opera 9.5, no)","msgtype":"m.text"},"ts":1202851081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(In Safari 3, yes)","msgtype":"m.text"},"ts":1202851082000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"presumably because it's a totally bogus attribute name","msgtype":"m.text"},"ts":1202851140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It should.","msgtype":"m.text"},"ts":1202851380000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"gsnedders: Did any of that help?","msgtype":"m.text"},"ts":1202851440000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"jgraham_: I'm still in the middle of finishing off an email :P","msgtype":"m.text"},"ts":1202851441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(ironically, this one email is probably longer than the total amount of writing I've done at school over the past two days)","msgtype":"m.text"},"ts":1202851442000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1202851800000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"isn't this domain hazard also common to document.domain as well?","msgtype":"m.text"},"ts":1202851860000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"OK, now what jgraham_ said","msgtype":"m.text"},"ts":1202851861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jwalden: as i understand it, doc.domain doesn't allow you to cross ports or schemes","msgtype":"m.text"},"ts":1202853060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I could have sworn Mozilla did differently last time I looked","msgtype":"m.text"},"ts":1202853120000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1202853121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham_: OK, that makes sense now.","msgtype":"m.text"},"ts":1202853360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(no, it didn't take 20 minutes, I went and procrastinated)","msgtype":"m.text"},"ts":1202853361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"From the looks of things, it'd be simplest to just do the same as etree does","msgtype":"m.text"},"ts":1202853420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Though it looks like the only thing that'll change for each DOM impl is the TreeBuilder class itself","msgtype":"m.text"},"ts":1202853421000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or rather, that's the only one that needs to reference the actual impl.","msgtype":"m.text"},"ts":1202853540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Has any browser implemented datagrid already?","msgtype":"m.text"},"ts":1202854260000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"is trying nigthtly build without success","msgtype":"m.emote"},"ts":1202854261000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"met_: not as fr as I know","msgtype":"m.text"},"ts":1202854380000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"s/fr/far/","msgtype":"m.text"},"ts":1202854381000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"wonders how much effort it would be to implement in js","msgtype":"m.emote"},"ts":1202854440000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"thx, it looks same for me","msgtype":"m.text"},"ts":1202854441000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"preparing some examples for html5 presentation and some datragrid example should be nice and powerfull 8-)","msgtype":"m.text"},"ts":1202854442000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"but I have nowhere to check it","msgtype":"m.text"},"ts":1202854500000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"jgraham_: would you say just chucking everything in dom.py into a function, like etree.py, would be the best way to go about it?","msgtype":"m.text"},"ts":1202854680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1202854740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I don't like to make claims about best :) But consistency is good and if we decide the whole design sucks later it's easier to change two similar things than two different things","msgtype":"m.text"},"ts":1202854800000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Philip`: no, you can't (re title\"\")","msgtype":"m.text"},"ts":1202854801000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham: I'll try and impl it tomorrow","msgtype":"m.text"},"ts":1202857200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie, as far as I can tell event listeners are asynchronous which means that the UA could decide to not run process them directly but instead process some code further on...","msgtype":"m.text"},"ts":1202859660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"event listeners are synchronous.","msgtype":"m.text"},"ts":1202859900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as in, when you dispatch an event, everything from that point to when it returns is synchronous","msgtype":"m.text"},"ts":1202859901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see dom2 events","msgtype":"m.text"},"ts":1202859902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i'll admit defeat","msgtype":"m.text"},"ts":1202859903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders why everyone fails","msgtype":"m.emote"},"ts":1202859904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if nobody allows click() to nest, i can remove the test","msgtype":"m.text"},"ts":1202860200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iirc, at least one browser nested at least once","msgtype":"m.text"},"ts":1202860201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"could be","msgtype":"m.text"},"ts":1202860260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sees that http://blogs.msdn.com/ie/archive/2008/01/21/compatibility-and-ie8.aspx has reached exactly 666 comments","msgtype":"m.emote"},"ts":1202860440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems a bit odd that it's generated more noise than the Acid 2 post","msgtype":"m.text"},"ts":1202860500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1202860501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"microsoft has an image problem. people aren't going to be pro-ms until they have proven over years of not being evil that they are in fact good.","msgtype":"m.text"},"ts":1202860502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"acid2 is a small step in the right direction. the compatibility meta header is a giant step backwards.","msgtype":"m.text"},"ts":1202860560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I love the suggestion in the thread that any unknown doctype be rendered as XHTML 1.1.  I think I'll stop reading the noise now.","msgtype":"m.text"},"ts":1202860561000,"senderName":"billmason","senderId":"billmason@irc"},
{"content":{"body":"Hmm, okay, maybe it's not actually odd :-)","msgtype":"m.text"},"ts":1202860680000,"senderName":"Philip`","senderId":"Philip`@irc"}
]