[
{"content":{"body":"hero ku uses git for pushing code; you need to force push to that a lot too","msgtype":"m.text"},"ts":1402963385000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also heroku; ios'a new habit of autocorrecting words when you type the *next* word is terrible","msgtype":"m.text"},"ts":1402963422000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Huh, Android just autocorrets when you hit space.","msgtype":"m.text"},"ts":1402963608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's what ios used to do; now it tries to figure out phrases","msgtype":"m.text"},"ts":1402964350000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which means you never really know when it'll insert a typo for you","msgtype":"m.text"},"ts":1402964382000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: lookin' good. https://whatwg.github.io/streams/","msgtype":"m.text"},"ts":1402965346000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Next up I think I need to steal some CSS and/or JS to get the anchor links working","msgtype":"m.text"},"ts":1402965374000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Happy to help.","msgtype":"m.text"},"ts":1402965383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The parts of the CSSWG stylesheet are pretty easy to find.","msgtype":"m.text"},"ts":1402965409000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://dev.w3.org/csswg/default.css","msgtype":"m.text"},"ts":1402965428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Look for a.self-link","msgtype":"m.text"},"ts":1402965437000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: whatwg specs should use the CSSWG toc styling, it's the best.","msgtype":"m.text"},"ts":1402965468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sweet. will play with this more tomorrow maybe. although at some point i have to consider this yak shaved and keep working on the actual text :P","msgtype":"m.text"},"ts":1402965563000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yak shaving considered harmful","msgtype":"m.text"},"ts":1402966593000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: last time you said that css spec styling was the best, i picked a random css spec, and it looked horrible. do you have a specific spec in mind?","msgtype":"m.text"},"ts":1402967063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"was the day April 1?","msgtype":"m.text"},"ts":1402967332000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"one of them was","msgtype":"m.text"},"ts":1402967436000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: dom-core.html is not too important I guess; https://github.com/whatwg/dom/ should be canonical; I use two definitions of throw, one is from DOM, one is from IDL","msgtype":"m.text"},"ts":1402982924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: yoav wants to put a link in his patch to my recent img spec changes. could you regen the spec?","msgtype":"m.text"},"ts":1402989425000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I am back online","msgtype":"m.text"},"ts":1402989701000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: cool","msgtype":"m.text"},"ts":1402989741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I checked mask-image and filter and think that both do not cause any problems if the resources are not allowed to load further resources","msgtype":"m.text"},"ts":1402989791000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: both do not affect layout","msgtype":"m.text"},"ts":1402989800000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: having written down the algorithms it does seem like SVG as image has a lot in common with the other cases","msgtype":"m.text"},"ts":1402989808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: it's just that rather than returning an element by ID, in that case you simply take the root","msgtype":"m.text"},"ts":1402989823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I presented the problem with clip-path to the WG in Tokyo and the WG decided that the attack pattern is not suitable enough","msgtype":"m.text"},"ts":1402989834000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: which WG?","msgtype":"m.text"},"ts":1402989858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: CSS WG","msgtype":"m.text"},"ts":1402989863000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what makes them good at security?","msgtype":"m.text"},"ts":1402989869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You don't go to the CSS WG for security recommendations","msgtype":"m.text"},"ts":1402989911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: All I was able to do as spec author is to present the problem, present alternatives and ask for approval… which I did","msgtype":"m.text"},"ts":1402989912000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"You ask abarth, bz, ...","msgtype":"m.text"},"ts":1402989925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we discussed it","msgtype":"m.text"},"ts":1402989935000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"WebAppSec copied","msgtype":"m.text"},"ts":1402989938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: bz was in the discussion","msgtype":"m.text"},"ts":1402989943000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"In Tokyo?","msgtype":"m.text"},"ts":1402989950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: He did not approve the outcome of the discussion but did not object either","msgtype":"m.text"},"ts":1402989965000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: no, we discussed the issue before the F2F on the mailing list","msgtype":"m.text"},"ts":1402989988000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"o_O sounds like a bad outcome to me","msgtype":"m.text"},"ts":1402989990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but irrelevant for the other properties that I care more about right now","msgtype":"m.text"},"ts":1402990010000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: we can bring up clip-path at any time again","msgtype":"m.text"},"ts":1402990022000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402990069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what that means is that mask-image, fill, stroke and filter do not need to check the resource after downloading again","msgtype":"m.text"},"ts":1402990131000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: something that was important for roc","msgtype":"m.text"},"ts":1402990139000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"but you do, no?","msgtype":"m.text"},"ts":1402990162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: even though he agreed that this is not a big issue if it would be necessary","msgtype":"m.text"},"ts":1402990164000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"you need to at least do a MIME type check?","msgtype":"m.text"},"ts":1402990170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, we don't","msgtype":"m.text"},"ts":1402990174000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1402990185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, this is done AFTER downloading the resource","msgtype":"m.text"},"ts":1402990188000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: the MIME checking","msgtype":"m.text"},"ts":1402990194000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1402990197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the policies prevent downloading the resource in the first place","msgtype":"m.text"},"ts":1402990213000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"What policies?","msgtype":"m.text"},"ts":1402990225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The CORS policies as implement","msgtype":"m.text"},"ts":1402990242000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I have the feeling you're compounding several issues onto one","msgtype":"m.text"},"ts":1402990250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk:  that is common between blink, gecko and WebKit","msgtype":"m.text"},"ts":1402990253000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: you mean?","msgtype":"m.text"},"ts":1402990271000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I don't see what CORS has to do with this","msgtype":"m.text"},"ts":1402990273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, lets say fetching policies … where CORS is still part of","msgtype":"m.text"},"ts":1402990298000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Sure, are you saying fetching mode is CORS for mask/fill/stroke/filter?","msgtype":"m.text"},"ts":1402990323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://src.chromium.org/viewvc/blink/trunk/Source/core/fetch/ResourceFetcher.cpp","msgtype":"m.text"},"ts":1402990341000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: no, “image\"","msgtype":"m.text"},"ts":1402990348000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"There's no \"image\" mode","msgtype":"m.text"},"ts":1402990366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that is because implementations use their own terms","msgtype":"m.text"},"ts":1402990395000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: we check what type we expect","msgtype":"m.text"},"ts":1402990414000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: font, image, stylesheet, script, SVG document (for <embed>), media","msgtype":"m.text"},"ts":1402990445000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"i've been reading along, but I need to go to sleep soon","msgtype":"m.text"},"ts":1402990482000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"can you summarize what the CSS WG decided?","msgtype":"m.text"},"ts":1402990492000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"You're not making much sense. But I guess what you mean is that mask/fill/stroke/filter use no CORS as mode and that the CSS WG decided that was okay.","msgtype":"m.text"},"ts":1402990499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402990516000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Even if the eventual thing was an SVG resource","msgtype":"m.text"},"ts":1402990518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1402990526000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"that's almost certainly insecure","msgtype":"m.text"},"ts":1402990543000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you can't load XML across origins without CORS","msgtype":"m.text"},"ts":1402990557000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: why wouldn’t you?","msgtype":"m.text"},"ts":1402990568000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"because XML is a confidential mime type","msgtype":"m.text"},"ts":1402990579000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"these features also let you probe inside the XML for ids and such","msgtype":"m.text"},"ts":1402990594000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"which isn't good","msgtype":"m.text"},"ts":1402990602000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: IIRC we discussed that earlier and you even opened a bug report and closed it right afterwards","msgtype":"m.text"},"ts":1402990641000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"abarth: we had this discussion before Blink fork","msgtype":"m.text"},"ts":1402990660000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"do you have a link to the discussion?","msgtype":"m.text"},"ts":1402990678000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I remember this issue came up before","msgtype":"m.text"},"ts":1402990687000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: it takes me some time to find it","msgtype":"m.text"},"ts":1402990691000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"but I didn't remember the details","msgtype":"m.text"},"ts":1402990693000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"maybe there's some specific thing that makes it safe, but in general its unsafe","msgtype":"m.text"},"ts":1402990712000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: the point is, that you can not do ID sniffing with CSS","msgtype":"m.text"},"ts":1402990718000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"abarth: if the resource exists, then you download it… there is no way for anyone to check if the ID was found or not","msgtype":"m.text"},"ts":1402990752000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"presumably you can tell if the mask was applied, right?","msgtype":"m.text"},"ts":1402990771000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: how?","msgtype":"m.text"},"ts":1402990779000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"abarth: it doesn’t apply, the url is still part of property style","msgtype":"m.text"},"ts":1402990800000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s/it/the mask/","msgtype":"m.text"},"ts":1402990817000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"sure, but the pixels on the screen will be different","msgtype":"m.text"},"ts":1402990822000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: for <img> I think we decided it was safe","msgtype":"m.text"},"ts":1402990827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: yes","msgtype":"m.text"},"ts":1402990828000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"if the pixels on the screen are different, the web site can learn that by interacting with the user","msgtype":"m.text"},"ts":1402990846000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: <img> does no CORS, and if the return MIME type is image/svg+xml we decode that as a bitmap and render it","msgtype":"m.text"},"ts":1402990849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there was a cute proof-of-concept on hacker news the other day","msgtype":"m.text"},"ts":1402990861000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"for history sniffing","msgtype":"m.text"},"ts":1402990865000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"using this technique","msgtype":"m.text"},"ts":1402990871000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402990880000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: that one needed visited pseudo selector","msgtype":"m.text"},"ts":1402990886000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you don't think you could build the same thing using mask?","msgtype":"m.text"},"ts":1402990897000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: which sadly is not specified enough","msgtype":"m.text"},"ts":1402990902000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"meaning make a game","msgtype":"m.text"},"ts":1402990908000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"where the player makes different clicks depending on if a mask applied?","msgtype":"m.text"},"ts":1402990923000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"annevk: we wouldn't do that today, but we're stuck with it because of the past","msgtype":"m.text"},"ts":1402990952000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: hit testing is not applied on mask, but like opacity, you can “hide” objects","msgtype":"m.text"},"ts":1402990953000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you're not understanding","msgtype":"m.text"},"ts":1402990962000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"mask changes the pixels on the screen","msgtype":"m.text"},"ts":1402990972000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"users react to pixels on the screen","msgtype":"m.text"},"ts":1402990978000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: yeah, we could have disallowed the cross-origin case there though and require the crossorigin attribute","msgtype":"m.text"},"ts":1402990985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meaning, they react to whether the mask applied","msgtype":"m.text"},"ts":1402990987000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"meaning they tell you whether your ID probe worked","msgtype":"m.text"},"ts":1402990997000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"annevk: exactly","msgtype":"m.text"},"ts":1402991008000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: e.g. if the response image/svg+xml but also tainted/opaque, act as if there was a network error","msgtype":"m.text"},"ts":1402991011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: sure you can do that","msgtype":"m.text"},"ts":1402991015000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hence, you're creating a security vulnerability","msgtype":"m.text"},"ts":1402991023000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"unless you use CORS","msgtype":"m.text"},"ts":1402991031000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: that seems like what we should do for mask et al","msgtype":"m.text"},"ts":1402991033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: if we want to keep the \"tainted\" cross-origin fetching for non-SVG resources","msgtype":"m.text"},"ts":1402991056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://news.ycombinator.com/item?id=7855168","msgtype":"m.text"},"ts":1402991125000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"is a recent demo of this approach","msgtype":"m.text"},"ts":1402991142000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you could build the same thing with mask","msgtype":"m.text"},"ts":1402991149000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"to probe cross-origin resources rather than history","msgtype":"m.text"},"ts":1402991156000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"needs to get to sleep","msgtype":"m.emote"},"ts":1402991232000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"security's no fun","msgtype":"m.text"},"ts":1402991237000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1402991239000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"thanks abarth, I was mostly trying to figure out the overall processing model, but this helps greatly with fetch specifics that we also need to nail down","msgtype":"m.text"},"ts":1402991250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: nn","msgtype":"m.text"},"ts":1402991287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: we should discuss that on the mailing list again","msgtype":"m.text"},"ts":1402991360000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"abarth: IIRC the issue was that you can figure out if the ID exists even without CSS.. pure JS","msgtype":"m.text"},"ts":1402991444000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"abarth: the URL of the resource is known at the point","msgtype":"m.text"},"ts":1402991461000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I don't understand the aversion to better safe than sorry","msgtype":"m.text"},"ts":1402992035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we always need to find the right balance between security and the expressiveness of authors… We don’t need to make the web as secure as possible but as secure as necessary to protect users","msgtype":"m.text"},"ts":1402992113000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Yes, and we have repeatedly learned that not using CORS is bad for users","msgtype":"m.text"},"ts":1402992157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and I think it is good to have people on the other side that challenge the need of overprotection :)","msgtype":"m.text"},"ts":1402992319000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Overprotection?","msgtype":"m.text"},"ts":1402992403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: anyway, I updated the algorithms in the etherpad","msgtype":"m.text"},"ts":1402992550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: they are now generic enough to cover both SVG as image, and whereever else we might need to take hold of a set of nodes","msgtype":"m.text"},"ts":1402992576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: if you don't pass in an ID it simply returns the root, otherwise it returns the element identified","msgtype":"m.text"},"ts":1402992594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: there's various entry points as well, as e.g. the mask/filter/ case will do its own fetching and then only if type is image/svg+xml hand it off to SVG","msgtype":"m.text"},"ts":1402992630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ?","msgtype":"m.text"},"ts":1402993493000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what is unclear?","msgtype":"m.text"},"ts":1402993522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, wanted to know if this is what you would like to see for mask-image/","msgtype":"m.text"},"ts":1402993800000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, it seems we should actually write out mask image processing","msgtype":"m.text"},"ts":1402993837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: because that is more complicated","msgtype":"m.text"},"ts":1402993843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: I also wonder if TabAtkins will be in a more convenient timezone at some point so we can fix this stuff in CSS","msgtype":"m.text"},"ts":1402993879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fill and stroke inherit the same behavior… so this could be ironed out for all SVG properties then","msgtype":"m.text"},"ts":1402993880000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: including clip-path and filter","msgtype":"m.text"},"ts":1402993883000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah, the algorithm \"To get an image or SVG element given a /url/:\"","msgtype":"m.text"},"ts":1402993909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems that should also take an environment URL and maybe an environment base URL","msgtype":"m.text"},"ts":1402993942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Tab is working on more parameters for url() that allows authors to specify CORS rules","msgtype":"m.text"},"ts":1402993958000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Fwiw, tend to agree with jgraham on the to('json') vs. asJSON.","msgtype":"m.text"},"ts":1402993959000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"krit: sure, again, that is not really important","msgtype":"m.text"},"ts":1402993991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: what is important is the basic setup","msgtype":"m.text"},"ts":1402993997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: without additional features","msgtype":"m.text"},"ts":1402994005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"please try to focus on that","msgtype":"m.text"},"ts":1402994014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: talk to JakeA or Domenic I guess","msgtype":"m.text"},"ts":1402994056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If people want to follow the SVG discussion, we moved to W3C, #svg","msgtype":"m.text"},"ts":1402994598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: so, about srcset, I have question that maybe I should hesitate to ask since I'm not sure I want to implement it, but I'll ask anyway","msgtype":"m.text"},"ts":1402999952000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is, should it be a conformance error if the same URL is specified multiple times in the same srcset value","msgtype":"m.text"},"ts":1402999990000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other words, is there ever a use case for specifying a URL with different descriptors in the same srcset value","msgtype":"m.text"},"ts":1403000043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: not sure","msgtype":"m.text"},"ts":1403000065000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g., srcset=\"image1.png 1X, image1.png 2X\"","msgtype":"m.text"},"ts":1403000068000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(though probably not that example)","msgtype":"m.text"},"ts":1403000084000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: can you file a bug?","msgtype":"m.text"},"ts":1403000102000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403000108000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1403000110000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: also I told you before I wasn't storing the URLs anyway. But I changed that and I am now, because I use them for reporting purposes in the error messages","msgtype":"m.text"},"ts":1403000229000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I do that because I can't report the exactly column number of where the error is","msgtype":"m.text"},"ts":1403000244000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is a general deficiency in the way the validator datatype/microsyntax error-reporting is designed","msgtype":"m.text"},"ts":1403000291000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"most of the time it's not a problem to no report the exacty column number because the attribute values are generally short and not complex","msgtype":"m.text"},"ts":1403000360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the case for srcset is a bit different","msgtype":"m.text"},"ts":1403000360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah i guess you'll highlight the entire value right?","msgtype":"m.text"},"ts":1403000467000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or the whole tag even","msgtype":"m.text"},"ts":1403000515000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1403000542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: it's less than ideal but it'd be a lot of work to change given the current design of the datatype-checking code","msgtype":"m.text"},"ts":1403000593000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403000600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess people can figure out what the error is anyway","msgtype":"m.text"},"ts":1403000630000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe you can do a hack and give a relevant extract in the message?","msgtype":"m.text"},"ts":1403000765000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Lovely, mask:url(#something) references an element in the document the stylesheet is associated with","msgtype":"m.text"},"ts":1403000861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However, they also allow mask:url(/elsewhere#something) which would parse relative to the stylesheet's URL, then be fetched, ...","msgtype":"m.text"},"ts":1403000896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is an opposite of composed? incomposed seems to have also some other meanings.","msgtype":"m.text"},"ts":1403000923000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MikeSmith: something like srcset=\"lala 1.5x, foo,, bar 2x\" -> Bad value for attribute srcset on element img: Found empty image candidate in `foo,,`","msgtype":"m.text"},"ts":1403000932000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess you could parse against the stylesheet's URL and then treat it as a document-reference if it's the same as the stylesheet's URL minus the fragment thing... But oh boy","msgtype":"m.text"},"ts":1403000954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: excited per Google","msgtype":"m.text"},"ts":1403000975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: also agitated, boisterous, disturbed, excited, fierce, frantic, frenzied, furious, heated, passionate, raging, roused, ruffled, stormy, turbulent, violent, wild, wrathful","msgtype":"m.text"},"ts":1403001017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"boisterousDocument","msgtype":"m.text"},"ts":1403001033000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sounds perfect","msgtype":"m.text"},"ts":1403001037000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1403001045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"flustered","msgtype":"m.text"},"ts":1403001047000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ruffled as technical term would also be fun","msgtype":"m.text"},"ts":1403001071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unsettled","msgtype":"m.text"},"ts":1403001080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I should probably post about IDNA being updated at some point","msgtype":"m.text"},"ts":1403001131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Now that http://www.unicode.org/reports/tr46/ is published with the revised algorithms","msgtype":"m.text"},"ts":1403001147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is trying to figure out names for the trees where document is the root node, and doesn't contain shadow dom, and the tree which does contain shadow dom. ComposedDoc for the latter","msgtype":"m.emote"},"ts":1403001166000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"raw?","msgtype":"m.text"},"ts":1403001214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: why does the former need to be different from Document","msgtype":"m.text"},"ts":1403001230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"untainted?","msgtype":"m.text"},"ts":1403001234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: document and composedDocument seems fine","msgtype":"m.text"},"ts":1403001240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this is mainly for Gecko internal stuff","msgtype":"m.text"},"ts":1403001246000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in order to force the API user to think whether shadow dom should be handled","msgtype":"m.text"},"ts":1403001279000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: PreComposed?","msgtype":"m.text"},"ts":1403001296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, it is not pre","msgtype":"m.text"},"ts":1403001303000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is Document","msgtype":"m.text"},"ts":1403001307000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"then Un-","msgtype":"m.text"},"ts":1403001326000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"UnComposed","msgtype":"m.text"},"ts":1403001340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"perhaps that","msgtype":"m.text"},"ts":1403001341000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyway it seems analogous the character composition, so maybe there are already some names that could be repurposed from the code around that","msgtype":"m.text"},"ts":1403001456000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"uses un-","msgtype":"m.emote"},"ts":1403001483000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I naively set out on srcet checking hoping I'd be able to get by without needing to create strings and store strings","msgtype":"m.text"},"ts":1403001745000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so much for that plan","msgtype":"m.text"},"ts":1403001749000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: ah I remember now that's why I was asking you about the URLs. So far the spec has no requirement that would make me need to compare the URLs to one another, so so far I don't need to create strings for them or store them as strings","msgtype":"m.text"},"ts":1403001971000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you need to store and compare the parsed descriptors though","msgtype":"m.text"},"ts":1403002346000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: I had a case not long ago in which better datatype error reporting would have been really nice, it was for a pretty long data: URL","msgtype":"m.text"},"ts":1403002390000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(but they're not strings, so yeah)","msgtype":"m.text"},"ts":1403002407000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and all it told me was that there was a character in there it didn't like (and that I should be careful with quotes and spaces, which wasn't the problem)","msgtype":"m.text"},"ts":1403002419000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"MikeSmith: still no schemaless validator?","msgtype":"m.text"},"ts":1403002504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that'd be a pretty big leap","msgtype":"m.text"},"ts":1403002572000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"one small step for the validator, ...","msgtype":"m.text"},"ts":1403002645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: yeah I noticed that same data: URL error-reporting problem","msgtype":"m.text"},"ts":1403005365000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I understand that giving the column number is nigh impossible (and I can imagine why), but if you could somehow surface the faulty character it would help lots","msgtype":"m.text"},"ts":1403005496000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: so that's possible at least. I mean obviously we have the problem character available at that point. we just need to add it to the error message","msgtype":"m.text"},"ts":1403005568000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the data: URL reporting code is some relatively old part","msgtype":"m.text"},"ts":1403005596000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it probably needs some attention in other parts too","msgtype":"m.text"},"ts":1403005625000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I've been moving away from the schema more and more when possible at least. e.g., for srscet the basic srcset-allowed-for-source-and-img constraint is all that the schema specifies, and the schema says the datatype for srcset is just \"string\". I put the actual real datatype association-and-checking for it into other code","msgtype":"m.text"},"ts":1403005773000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in part because srcset is unique in that it basically has two different dataypes depending on whether the \"sizes\" attribute is also specified","msgtype":"m.text"},"ts":1403005819000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and also because I tried it first in the schema and it exposed a bug in jing schema-checking code that I couldn't be assed to try to troubleshoot and fix","msgtype":"m.text"},"ts":1403005874000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it actually exposed a case in jing where the behavior was different depending on the *order* of the attributes -- different if sizes was specified before srcset, or after","msgtype":"m.text"},"ts":1403005935000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which, I didn't even think that would be possible given the way the parser and jing work","msgtype":"m.text"},"ts":1403005978000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess it actually use","msgtype":"m.text"},"ts":1403005984000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*is","msgtype":"m.text"},"ts":1403005987000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"darobin: if you have time to file a bug about the data URL thing, please do. It's an easy fix and I could do it this weekened","msgtype":"m.text"},"ts":1403006059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I was already on the bugzilla page :)","msgtype":"m.text"},"ts":1403006219000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and darobin putting the MPAA dollars to good use","msgtype":"m.emote"},"ts":1403006267000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1403006282000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"MikeSmith: note that srcset with w is allowed without sizes","msgtype":"m.text"},"ts":1403007314000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah I know that :) but the thing is internally in the vnu design I essentially need to handle it as a separate datatype when sizes is there too","msgtype":"m.text"},"ts":1403010081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: k :-)","msgtype":"m.text"},"ts":1403010113000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: http://dev.w3.org/csswg/cssom/#css-style-sheets is somewhat wrong","msgtype":"m.text"},"ts":1403010187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: location should be named href and you should have a field url or some such that's the actual location against which urls are resolved and such","msgtype":"m.text"},"ts":1403010210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: is the plan that everything else in CSS references this?","msgtype":"m.text"},"ts":1403010224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: please file a bug","msgtype":"m.text"},"ts":1403010230000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: not sure, but it needs to be well-defined at some point","msgtype":"m.text"},"ts":1403010280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=26116","msgtype":"m.text"},"ts":1403010318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm trying to figure out fetching for SVG","msgtype":"m.text"},"ts":1403010340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems CSS could use some cleanup there too","msgtype":"m.text"},"ts":1403010355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And SVG requires this thing where you load an external SVG document, but don't actually fetch anything from it that isn't a blob or data or other local URL","msgtype":"m.text"},"ts":1403010398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Styles need to be resolved however so that property needs to be supported by CSS too","msgtype":"m.text"},"ts":1403010415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However, it's unclear where in CSS such things would be defined","msgtype":"m.text"},"ts":1403010435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: ^^","msgtype":"m.text"},"ts":1403010440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"earlier today i was pondering how <img src=svg> works when it has a late well-formedness error","msgtype":"m.text"},"ts":1403010480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess that's not too different from a GIF or some such that has an error late?","msgtype":"m.text"},"ts":1403010579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ill-defined :/","msgtype":"m.text"},"ts":1403010586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: GIF either goes from unavailable -> error or unavailable -> partially available -> completely available (even if it has late errors, it doesn't make the whole thing corrupt). i think","msgtype":"m.text"},"ts":1403013778000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: zcorpan: maybe <img srcset=\"pixelized.png 1x, vectorized.svg 1.5x, pixelized-2 2x, vectorized.svg 2.5x\"> would be a use case for the same URL multiple times?","msgtype":"m.text"},"ts":1403014056000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe, but would you actually do that? instead of <img src=\"pixelated.png\" srcset=\"vectorized.svg\"> ?","msgtype":"m.text"},"ts":1403014138000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i kind of envisioned people creating specific breakpoint images for certain resolutions/densities, and then saying that they'd rather use a vectorized version in between for perfect scaling, instead of letting the browser do it fuzzily.","msgtype":"m.text"},"ts":1403014207000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"throws some lowsrc at zcorpan, just for funs","msgtype":"m.emote"},"ts":1403014209000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26072","msgtype":"m.text"},"ts":1403014372000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oh man, I was actually joking — but you mean business","msgtype":"m.text"},"ts":1403014421000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Good old lowsrc","msgtype":"m.text"},"ts":1403014424000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"recalls the jokes, \"Hey, unfortunately my ISP is France Telecom, could you add lowlowsrc to the spec please?\"","msgtype":"m.emote"},"ts":1403014466000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1403014519000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"zcorpan: FWIW, I think that any data URI/cached image can be used as a replacement image until the real resource is downloaded","msgtype":"m.text"},"ts":1403014757000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"See https://code.google.com/p/chromium/issues/detail?id=382591","msgtype":"m.text"},"ts":1403014760000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: And AFAICT, this is inside the \"UA resource selection optimization\" domain","msgtype":"m.text"},"ts":1403014789000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"So no need to spec it (even though we can add a note or something)","msgtype":"m.text"},"ts":1403014815000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: intredasting","msgtype":"m.text"},"ts":1403014971000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok wontfixed the lowsrc bug","msgtype":"m.text"},"ts":1403015145000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: thx for the bug","msgtype":"m.text"},"ts":1403015281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.openwebfoundation.org/legal/the-owf-1-0-agreements/owfa-1-0 redirects to bing??","msgtype":"m.text"},"ts":1403016903000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://sites.google.com/site/openwebfoundation/","msgtype":"m.text"},"ts":1403016965000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Wat","msgtype":"m.text"},"ts":1403016967000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"*blinks*","msgtype":"m.emote"},"ts":1403017179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: https://code.google.com/p/v8/source/detail?r=18683 does not seem good, writing invalid utf-8 should not be an option...","msgtype":"m.text"},"ts":1403017198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Traitor","msgtype":"m.text"},"ts":1403017204000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ?","msgtype":"m.text"},"ts":1403017219000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Don't worry","msgtype":"m.text"},"ts":1403017230000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1403017239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It wasn't funny anyway :)","msgtype":"m.text"},"ts":1403017244000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: felixge said it’s because the V8 team wants to keep the API stable :/","msgtype":"m.text"},"ts":1403017853000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"(note that it’s not just an option – it’s the default)","msgtype":"m.text"},"ts":1403017888000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"they are crazy","msgtype":"m.text"},"ts":1403018013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"V8? Crazy? Noooo","msgtype":"m.text"},"ts":1403018469000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"heard it here first","msgtype":"m.text"},"ts":1403018734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: i've added picture, i tried running anolis locally and i think the xrefs are OK now. let me know if something's still broken.","msgtype":"m.text"},"ts":1403019094000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: What is \"this thing where you load an external SVG document\"?","msgtype":"m.text"},"ts":1403019443000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'll need some more context :-)","msgtype":"m.text"},"ts":1403019466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The thing you mentioned me about 2 hours ago.","msgtype":"m.text"},"ts":1403019482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, SVG as image","msgtype":"m.text"},"ts":1403019522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, now I understand your sentence.","msgtype":"m.text"},"ts":1403019540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Referring to a \"property\" confused me, as it looked like you meant a CSS property, not an abstract property.","msgtype":"m.text"},"ts":1403019637000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I'm happy to buy a SSL cert for resources.whatwg.org","msgtype":"m.text"},"ts":1403020535000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://www.globalsign.com/ssl/ssl-open-source/ might apply","msgtype":"m.text"},"ts":1403020714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The main use case is avoiding mixed-content warnings on HTTPS sites, like github.io or github.com","msgtype":"m.text"},"ts":1403021035000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: might as well go for a *.whatwg.org cert then","msgtype":"m.text"},"ts":1403023480000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: if we can get a free one, sure, but we'd need a $300/year one to cover all the subdomains and sub-subdomains","msgtype":"m.text"},"ts":1403023509000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mathiasbynens: turns out wildcard certs ($100/year) only cover a single level","msgtype":"m.text"},"ts":1403023522000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: TIL","msgtype":"m.text"},"ts":1403023552000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"TabAtkins: I've been working with krit on figuring out how we should define those features that can reference both an SVG element and an image and it seems we're closing in on a solution","msgtype":"m.text"},"ts":1403023982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I guess at some point we should discuss what it'll take to define fetching for CSS properties in general","msgtype":"m.text"},"ts":1403024029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: it seems part of the infrastructure for that is defined in CSSOM today (the concept of a CSS style sheet and its various subconcepts)","msgtype":"m.text"},"ts":1403024060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but possibly not enough. More than happy to help figure this out whenever you have time, or to apply whatever you and krit bang out.","msgtype":"m.text"},"ts":1403025354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dunno if you heard, but we figured out how we want to allow passing flags and whatnot with urls.","msgtype":"m.text"},"ts":1403025391000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Within our existing budget of lookahead, I can change parsing to make *quoted* url() functions actually a FUNCTION token, so they can take additional values after the url string.  (Unquoted urls would still be the magical weird URL token.)","msgtype":"m.text"},"ts":1403025445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Passed dbaron's initial sanity check, so I'm happy about it.","msgtype":"m.text"},"ts":1403025458000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Also, would appreciate your feedback on the WHATWG bikeshed header, over in my github.","msgtype":"m.text"},"ts":1403025503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic has a couple of questions about variations between your headers and his.","msgtype":"m.text"},"ts":1403025521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: looking now","msgtype":"m.text"},"ts":1403025615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: if you mean CORS arguments as part of URL, we didn’t touch it… that would still be up to you and annevk","msgtype":"m.text"},"ts":1403025615000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: Yeah, that's what I'm talking about.","msgtype":"m.text"},"ts":1403025634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1403025635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As far as I can tell we need CORS mainly for @import","msgtype":"m.text"},"ts":1403025638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, so we can expose the stylesheets.","msgtype":"m.text"},"ts":1403025661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it might be good to make url() in general forward compatible with it at least","msgtype":"m.text"},"ts":1403025674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But also we'll need them if we ever expose more resources that are cors-restricted by default.","msgtype":"m.text"},"ts":1403025690000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: URL good enough for me to refer to it from V&U to define url parsing now?","msgtype":"m.text"},"ts":1403025720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, think so","msgtype":"m.text"},"ts":1403025750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: but note that you need access to a base URL","msgtype":"m.text"},"ts":1403025758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: you need some kind of environment setup too","msgtype":"m.text"},"ts":1403025770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, which the stylesheet should provide.","msgtype":"m.text"},"ts":1403025773000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1403025775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll read more into it.","msgtype":"m.text"},"ts":1403025782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well for now it's mostly base URL; but if we expose these properties in script somehow they might want to make blob URLs work somehow","msgtype":"m.text"},"ts":1403025813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: regenning...","msgtype":"m.text"},"ts":1403025854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: cool","msgtype":"m.text"},"ts":1403025882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder how you can get it to me safely","msgtype":"m.text"},"ts":1403025891000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's see","msgtype":"m.text"},"ts":1403025896000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, pgp, clearly","msgtype":"m.text"},"ts":1403026048000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: you around?","msgtype":"m.text"},"ts":1403026066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ya just got back","msgtype":"m.text"},"ts":1403026071000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: Possible xref problems:","msgtype":"m.text"},"ts":1403026902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"+   density</var> be the URL and pixel density that results from <span>selecting an image source</span>, respectively.</li>","msgtype":"m.text"},"ts":1403026903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: fixed","msgtype":"m.text"},"ts":1403027316000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: cool, will integrate that too","msgtype":"m.text"},"ts":1403027356000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: sorry i haven't been regenning much recently, i'm updating my pipeline","msgtype":"m.text"},"ts":1403027365000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: hopefully gonna make it sooo much quicker","msgtype":"m.text"},"ts":1403027375000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've got the parsing of the spec down to four seconds","msgtype":"m.text"},"ts":1403027386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's ok","msgtype":"m.text"},"ts":1403027388000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1403027398000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"takes 90MB to hold the parse tree, but...","msgtype":"m.text"},"ts":1403027406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: does that involve a lot of redundancy?","msgtype":"m.text"},"ts":1403027466000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"might be less memory to use the v.nu parser in streaming mode","msgtype":"m.text"},"ts":1403027484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"memory is cheap","msgtype":"m.text"},"ts":1403027494000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does that support Object Pascal?","msgtype":"m.text"},"ts":1403027498000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's time that i'm worried about","msgtype":"m.text"},"ts":1403027504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: i think only java and c++","msgtype":"m.text"},"ts":1403027517000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"actually dunno if the c++ version has the streaming mode","msgtype":"m.text"},"ts":1403027538000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SamB: most of the cost is my DOM, i think. The source is only 6MB, so even if i have two or three copies of it, I wouldn't get to 90MB just from that.","msgtype":"m.text"},"ts":1403027538000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: that's one more language than I expected you to mention","msgtype":"m.text"},"ts":1403027540000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"if i used validator.nu's parser i'd do it in Java or C++","msgtype":"m.text"},"ts":1403027555000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I didn't expect the source to even be included in that figure","msgtype":"m.text"},"ts":1403027576000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: firefox uses the c++ parser","msgtype":"m.text"},"ts":1403027583000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i dunno how fast validator.nu is though","msgtype":"m.text"},"ts":1403027589000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: 90MB is the memory usage of the process after it's parsed the spec","msgtype":"m.text"},"ts":1403027602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it includes everything","msgtype":"m.text"},"ts":1403027608000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i recently changed how i read the file to just be an mmap, dunno how that affects it","msgtype":"m.text"},"ts":1403027620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"medium-term i plan to move to a world where i don't copy the strings at all, since that's about 10% of the total time the process takes right now","msgtype":"m.text"},"ts":1403027647000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe even 20%","msgtype":"m.text"},"ts":1403027650000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what proxy for \"memory usage\" are you using?","msgtype":"m.text"},"ts":1403027655000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i forget the most recent numbers","msgtype":"m.text"},"ts":1403027656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://hsivonen.fi/cost-of-html/ - dunno if it tells you anything you can compare it to","msgtype":"m.text"},"ts":1403027656000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SamB: resident size","msgtype":"m.text"},"ts":1403027663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"might also be out of date","msgtype":"m.text"},"ts":1403027665000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hm, interesting","msgtype":"m.text"},"ts":1403027676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1403027677000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and, er, which OS is this?","msgtype":"m.text"},"ts":1403027713000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#dependencies-0 should be moved. should i file bugs or is irc ok?","msgtype":"m.text"},"ts":1403027753000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SamB: debian","msgtype":"m.text"},"ts":1403027784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, my favorite :-)","msgtype":"m.text"},"ts":1403027803000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zcorpan: file a bug, i'll do it when it's more stable","msgtype":"m.text"},"ts":1403027833000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: doesn't hurt to have it there for now","msgtype":"m.text"},"ts":1403027842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: k","msgtype":"m.text"},"ts":1403027846000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: i'll review the <picture> section in detail at some point","msgtype":"m.text"},"ts":1403027858000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: great, thanks","msgtype":"m.text"},"ts":1403027872000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no, thank _you_! i'm so glad i don't have to do this","msgtype":"m.text"},"ts":1403027889000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: anyway, I think I might look at the private size rather than the resident size","msgtype":"m.text"},"ts":1403027963000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: if i really cared about memory usage, i'd probably just instrument the internals","msgtype":"m.text"},"ts":1403027994000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: my pleasure","msgtype":"m.text"},"ts":1403027996000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SamB: my main concern is speed","msgtype":"m.text"},"ts":1403028003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403028005000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and four seconds is about 3.99 seconds too slow","msgtype":"m.text"},"ts":1403028009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1403028010000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gotta go","msgtype":"m.emote"},"ts":1403028024000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: maybe you're thrashing the cache","msgtype":"m.text"},"ts":1403028047000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: so btw, I'm happy to help out with URL / Fetch integration / CSS model setup","msgtype":"m.text"},"ts":1403028052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: however, I have a pretty serious timezone problem","msgtype":"m.text"},"ts":1403028061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah. ^_^","msgtype":"m.text"},"ts":1403028070000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: yeah, need to run it under valgrind-cachegrind","msgtype":"m.text"},"ts":1403028096000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: right now i still have a low-hanging fruit in the form of the string copying to deal with","msgtype":"m.text"},"ts":1403028111000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: I'll see if I can type out some advice soonish and we can do it the very slow way on www-style","msgtype":"m.text"},"ts":1403028135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: not gonna try to figure out cachegrind until i've got everything i can out of callgrind :-)","msgtype":"m.text"},"ts":1403028150000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm almost surprised they're distinct frontends, honestly","msgtype":"m.text"},"ts":1403028248000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"they have a hell of a lot of overlap","msgtype":"m.text"},"ts":1403028254000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah?","msgtype":"m.text"},"ts":1403028277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've never used cachegrind","msgtype":"m.text"},"ts":1403028281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then again i'd never used callgrind until a few days ago","msgtype":"m.text"},"ts":1403028290000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not saying that they have enough that you can just use cachegrind for everything","msgtype":"m.text"},"ts":1403028303000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but they've got more in common than any two other valgrind tools I can think of","msgtype":"m.text"},"ts":1403028334000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk: The very slow way is better for me, because it means I don't have to hold things in my head until I'm ready to do them. ^_^","msgtype":"m.text"},"ts":1403028390000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sounds good","msgtype":"m.text"},"ts":1403028431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: it did seem that way from the docs, yeah","msgtype":"m.text"},"ts":1403028461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<picture> changes not being announced on @WHATWG seems bad","msgtype":"m.text"},"ts":1403028603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's an artefact of my currnet pipeline and how they're being merged in","msgtype":"m.text"},"ts":1403028619000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll add it to the list of things to fix","msgtype":"m.text"},"ts":1403028630000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or, file a bug to remind me)","msgtype":"m.text"},"ts":1403028636000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(put \"tools\" in the whiteboard)","msgtype":"m.text"},"ts":1403028642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=26121","msgtype":"m.text"},"ts":1403028707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1403028795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hi, I would like to markup seconds (or milliseconds if needed) in rdfa, like <span property=\"aa:begin\" content=\"5.2\">00:00:05,2</span>. how can I specify the content is a float/a second value?","msgtype":"m.text"},"ts":1403039092000,"senderName":"aleray_","senderId":"aleray_@irc"},
{"content":{"body":"I doubt you'll find a lot of rdfa enthusiasts here","msgtype":"m.text"},"ts":1403039122000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"aleray_: use the datatype attribute, for example datatype=\"xsd:float\"","msgtype":"m.text"},"ts":1403039157000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"Wow RDFa and XSD? Good thing I left my sense of logic at the door","msgtype":"m.text"},"ts":1403039205000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"scor, thanks. probably a stupid question, but Is there anything specific datattype for time?","msgtype":"m.text"},"ts":1403039216000,"senderName":"aleray_","senderId":"aleray_@irc"},
{"content":{"body":"Ms2ger: because people around here don't like RDF, or because they dislike RDFa in particular?","msgtype":"m.text"},"ts":1403039225000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I think yes to both","msgtype":"m.text"},"ts":1403039250000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aren't the datatypes the only thing worth using from XML Schema?","msgtype":"m.text"},"ts":1403039283000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"aleray_: is it a duration, or a time that you want to represent?","msgtype":"m.text"},"ts":1403039319000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"scor, a timecode: begin and end times","msgtype":"m.text"},"ts":1403039392000,"senderName":"aleray_","senderId":"aleray_@irc"},
{"content":{"body":"aleray_: either way, #swig is a probably a better channel to ask your questions","msgtype":"m.text"},"ts":1403039396000,"senderName":"scor","senderId":"scor@irc"},
{"content":{"body":"scor, oups, that the chan I inteded to join","msgtype":"m.text"},"ts":1403039417000,"senderName":"aleray_","senderId":"aleray_@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1403039424000,"senderName":"aleray_","senderId":"aleray_@irc"}
]