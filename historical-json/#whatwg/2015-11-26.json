[
{"content":{"body":"annevk, Domenic so, one interesting part of http://www.publickey1.jp/blog/15/html5whatwgw3c_tpac_2015.html is that it translates the statement Travis made at the TPAC Future of HTML session where he said that the Edge team references/refers to the WHATWG HTML spec when doing their work","msgtype":"m.text"},"ts":1448497414000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it also says a bit more than what was actually minuted there","msgtype":"m.text"},"ts":1448497439000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it actually also says, \"...so, the Edge team wishes the WHATWG had a patent policy\"","msgtype":"m.text"},"ts":1448497470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*very* interesting","msgtype":"m.text"},"ts":1448497503000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"incidentally, just prior to all that, it mentions that there is a WHATWG CG but that it's not active, so therefore Microsoft isn't participating in it","msgtype":"m.text"},"ts":1448497564000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm pretty sure Travis did say that, even though it's not minuted, FWIW","msgtype":"m.text"},"ts":1448497724000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1448497736000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah Niino-san probably took very detailed notes","msgtype":"m.text"},"ts":1448497759000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he'ss a very careful guy","msgtype":"m.text"},"ts":1448497776000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(they guy who wrote that)","msgtype":"m.text"},"ts":1448497788000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and he's very widely read by a lot of people in the tech world here in Japan","msgtype":"m.text"},"ts":1448497818000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I particularly like Google translate rendering what I assume is \"unconference format\" as \"Anne conference format\"","msgtype":"m.text"},"ts":1448497856000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1448497880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Google Translate is near totally worthless for translating Japanese","msgtype":"m.text"},"ts":1448497908000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in my experience","msgtype":"m.text"},"ts":1448497912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, just after that part it says, \"So, because of the patent-policy issue and also because the WHATWG doesn't follow a consensus process, work on HTML at the W3C will continue","msgtype":"m.text"},"ts":1448497924000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Wellâ€¦ comapred to it being totally unintelligible, this is better. Obviously less good than actually understanding the Japanese though","msgtype":"m.text"},"ts":1448497950000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1448497997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so the next-to-last part mentions modularization and also says that some parts of the HTML spec that aren't needed can be dropped","msgtype":"m.text"},"ts":1448498015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1448498056000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually it doesn't say \"some parts of the HTML spec that aren't needed\" but more precisely it says, \"some parts of HTML that don't need to be maintained\"","msgtype":"m.text"},"ts":1448498144000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I guess by far the most interesting bit of the whole thing is that part that says \"the Edge team wishes the WHATWG had a patent policy\"","msgtype":"m.text"},"ts":1448498199000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Just read HTML5 by Jeremy Keith and this IRC was referenced in the back of the book. Greetings.","msgtype":"m.text"},"ts":1448498381000,"senderName":"jv_","senderId":"jv_@irc"},
{"content":{"body":"jv_: welcome","msgtype":"m.text"},"ts":1448498400000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"jv_: howdy","msgtype":"m.text"},"ts":1448498447000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"pretty cool that the channel is feature on a book cover","msgtype":"m.text"},"ts":1448498471000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"even if it's just the back cover","msgtype":"m.text"},"ts":1448498480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Jeremy++","msgtype":"m.text"},"ts":1448498485000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders where smaug does not have sufficient access to GitHub stuff","msgtype":"m.emote"},"ts":1448526871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: that is a pretty interesting read","msgtype":"m.text"},"ts":1448526913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: guess I left that session just when things got interesting","msgtype":"m.text"},"ts":1448526928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the first thirty or so minutes were just a lot of words for \"uhm, what should we do\"","msgtype":"m.text"},"ts":1448526963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which as someone pointed out to me, isn't that different from how those sessions have been going for the past decade or so","msgtype":"m.text"},"ts":1448527006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Do you think we should wait on https://github.com/whatwg/dom/issues/119 in order to move forward with the feature detection outlines in https://github.com/whatwg/dom/pull/114 ?","msgtype":"m.text"},"ts":1448528312000,"senderName":"yoav_","senderId":"yoav_@irc"},
{"content":{"body":"yoav_: nah","msgtype":"m.text"},"ts":1448528320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, that's what I thought","msgtype":"m.text"},"ts":1448528328000,"senderName":"yoav_","senderId":"yoav_@irc"},
{"content":{"body":"I'll prepare a separate PR with `supported()`","msgtype":"m.text"},"ts":1448528394000,"senderName":"yoav_","senderId":"yoav_@irc"},
{"content":{"body":"have we decided on A vs B vs C?","msgtype":"m.text"},"ts":1448528543000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i think i prefer A because it leaves classList alone and makes it obvious how to feature-check for something moving from like-classList to like-relList","msgtype":"m.text"},"ts":1448528642000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i can take a stab at merging the DOMTokenLists","msgtype":"m.text"},"ts":1448528716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I have no particular preference there, as I don't think it will make much of a difference","msgtype":"m.text"},"ts":1448528800000,"senderName":"yoav_","senderId":"yoav_@irc"},
{"content":{"body":"It's something that developers shouldn't do, as it tell them nothing","msgtype":"m.text"},"ts":1448528827000,"senderName":"yoav_","senderId":"yoav_@irc"},
{"content":{"body":"zcorpan: how are mutual DOM/HTML spec changes done?","msgtype":"m.text"},"ts":1448529383000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: PR both i guess?","msgtype":"m.text"},"ts":1448529463000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1448529479000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"in httparchive i only see http://www.gstatic.com/caja/5678/es53-taming-frame.opt.js?debug=1 containing \"DOMSettableTokenList.prototype\" but it was actually \"TameDOMSettableTokenList.prototype\"","msgtype":"m.text"},"ts":1448529654000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so, it should be safe to simply add `value` to DOMTokenList?","msgtype":"m.text"},"ts":1448530017000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: or should we keep the prototype around?","msgtype":"m.text"},"ts":1448530051000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"i think we don't need DOMSettableTokenList around. but there is a possibility of course that pages set prototype.value on DOMTokenList and assume it does not affect DOMSettableTokenList. unlikely though","msgtype":"m.text"},"ts":1448530152000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, I agree that it's unlikely","msgtype":"m.text"},"ts":1448530177000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"all i can find is classList polyfills","msgtype":"m.text"},"ts":1448530321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: \"Yes, the names {{DOMTokenList}} and {{DOMSettableTokenList}}are unfortunate legacy mishaps.\" does this note still apply if they are merged?","msgtype":"m.text"},"ts":1448530626000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yes","msgtype":"m.text"},"ts":1448531426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: they're ordered sets, lists can contain duplicates","msgtype":"m.text"},"ts":1448531451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, it wasn't clear to me what the note was referring to","msgtype":"m.text"},"ts":1448531484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm my bikeshed isn't curling the ' in <var>options</var>'","msgtype":"m.text"},"ts":1448531579000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: update?","msgtype":"m.text"},"ts":1448531608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah just did. looks like it fixed it","msgtype":"m.text"},"ts":1448531674000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ta","msgtype":"m.text"},"ts":1448532350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: ok i've PR-ed dom and html now","msgtype":"m.text"},"ts":1448533378000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: cool!","msgtype":"m.text"},"ts":1448536306000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: Is it well-known that replaceChild is badly-specified?","msgtype":"m.text"},"ts":1448540574000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"smaug____: with the removal of SVGSVGElement.currentView/useCurrentView, do you envision some other stuff also being ripped out, like #svgView(...)?","msgtype":"m.text"},"ts":1448540611000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"davve` is poking at this","msgtype":"m.text"},"ts":1448540620000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"nox: not to me","msgtype":"m.text"},"ts":1448540704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if node == child, how do we remove child once node was adopted?","msgtype":"m.text"},"ts":1448540723000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"philipj: hmm","msgtype":"m.text"},"ts":1448540817000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nox: I guess it needs a non-null parent check, good find","msgtype":"m.text"},"ts":1448540835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think we can just adopt only if node != child.","msgtype":"m.text"},"ts":1448540853000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"philipj: ask heycam?","msgtype":"m.text"},"ts":1448540855000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nox: fair","msgtype":"m.text"},"ts":1448540865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: do you want to patch or shall I?","msgtype":"m.text"},"ts":1448540871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Anyway, just tried that in Servo and WPT now timeouts even if I make a dummy test suite with 0 tests. :) Will look into it and make a patch in the end. :)","msgtype":"m.text"},"ts":1448540899000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"is slowly driven insane by this.","msgtype":"m.emote"},"ts":1448540908000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: interesting","msgtype":"m.text"},"ts":1448540935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: (not the part about you going insane)","msgtype":"m.text"},"ts":1448540942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Servo just doesn't mutate anything in the tree if node == child.","msgtype":"m.text"},"ts":1448540954000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It took me two days to realise that was why the range tests related to replaceChild were failing.","msgtype":"m.text"},"ts":1448540974000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So I remove that shortcut, and Servo now panics, trying to remove 'child' which doesn't have a parent anymore.","msgtype":"m.text"},"ts":1448540987000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"curious, (I wasn't aware of https://wicg.github.io/BackgroundSync/spec/ so started to think this) is there some comprehensive test suite for service workers, or will we end up with very different kinds of service workers in different UAs when new features are being added","msgtype":"m.text"},"ts":1448540992000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"So I conditionally adopt 'node' only if it is different than 'child', and now everything timeouts.","msgtype":"m.text"},"ts":1448541004000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"cries.","msgtype":"m.emote"},"ts":1448541006000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"last time I tried to do something with SW it was hard because blink implemented features Foo from the spec and Gecko features Bar","msgtype":"m.text"},"ts":1448541054000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I think WPT has tests","msgtype":"m.text"},"ts":1448541074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"luckily the spec has some redundancy (duplicated stuff) and FooBar worked in my case","msgtype":"m.text"},"ts":1448541082000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: btw, yesterday you mentioned not being able to edit the title on a GitHub issue, where did that happen? I might be able to give you the relevant permissions (if that is indeed the problem)","msgtype":"m.text"},"ts":1448541105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: :-(","msgtype":"m.text"},"ts":1448541139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it was webperf, but I think it was some network issue","msgtype":"m.text"},"ts":1448541139000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I closed that bug and just opened a new one","msgtype":"m.text"},"ts":1448541154000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Oh, don't really control that, MikeSmith can probably give you permissions there","msgtype":"m.text"},"ts":1448541165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, now I recall, I should file yet another bug. Resource hints spec doesn't hint what dns-prefetch should actually do","msgtype":"m.text"},"ts":1448541391000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"all it says \"The dns-prefetch relation is used to indicate an origin\"","msgtype":"m.text"},"ts":1448541415000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, hmm, maybe it is fine after all","msgtype":"m.text"},"ts":1448541464000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I've been working with Ilya on getting some of Resource Hints better defined","msgtype":"m.text"},"ts":1448541493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Haven't really looked at everything, but e.g., preconnect now hooks into primitives in Fetch","msgtype":"m.text"},"ts":1448541512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"preconnect case does talk about DNS lookup","msgtype":"m.text"},"ts":1448541536000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but dns-prefetch doesn't","msgtype":"m.text"},"ts":1448541545000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Oh yeah, the dns-prefetch definition is pretty vague","msgtype":"m.text"},"ts":1448541609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder when you want to use dns-prefetch but not preconnect","msgtype":"m.text"},"ts":1448541644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps dns-prefetch more and earlier, and then preconnect when mouse is moved over some link or so","msgtype":"m.text"},"ts":1448541801000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: lemme know if I need to set you up with perms for something","msgtype":"m.text"},"ts":1448542189000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nah, it was probably me doing something silly","msgtype":"m.text"},"ts":1448542227000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1448542242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(or even more likely some network issues)","msgtype":"m.text"},"ts":1448542288000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: http://logs.glob.uno/?c=mozilla%23servo#c307273 What do you think of this?","msgtype":"m.text"},"ts":1448551498000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Is that a spec bug, or an unfortunate thing we can't do anything about, and piggy-backing mutation observers to update childNodes was a bid idea?","msgtype":"m.text"},"ts":1448551526000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Mmmh wait, no never mind, that's still wrong.","msgtype":"m.text"},"ts":1448551601000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Thoughts on https://github.com/w3c/preload/issues/37 ?","msgtype":"m.text"},"ts":1448551810000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: *sigh*","msgtype":"m.text"},"ts":1448553611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: each time this thing comes up it takes me so long to wrap my head around all of it","msgtype":"m.text"},"ts":1448553650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can relate :)","msgtype":"m.text"},"ts":1448553663000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: so \"as\" is parallel to \"type\" precisely because we don't want it to interfere with CSP","msgtype":"m.text"},"ts":1448553709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: so I think CSP should just be connect-src","msgtype":"m.text"},"ts":1448553732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: having said that, we should really define preload in terms of Fetch, including the preload store and such","msgtype":"m.text"},"ts":1448553760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: has that already happened?","msgtype":"m.text"},"ts":1448553765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But then users need to define every domain/path twice","msgtype":"m.text"},"ts":1448553767000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: the last time I spoke with igrigorik that was the plan","msgtype":"m.text"},"ts":1448553776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think that preload was already defined in terms of Fetch","msgtype":"m.text"},"ts":1448553841000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: okay, so if the preload store has a strong tie between the request url and the request type/as, perhaps you can use the \"as\" value for CSP","msgtype":"m.text"},"ts":1448553845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: right, the plan was to define it in terms of Fetch, so it would be more clear what the various security properties would be and how we could keep things secure","msgtype":"m.text"},"ts":1448553870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I'm going with \"never mind\", if you still want me to look, let me know!","msgtype":"m.text"},"ts":1448553894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Never mind, but conditionally removing is wrong in replaceChild. The conditional operation if node != child should be the adoption.","msgtype":"m.text"},"ts":1448553925000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: That's why my code crashed.","msgtype":"m.text"},"ts":1448553931000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: okay, that's you suggested earlier today too, right?","msgtype":"m.text"},"ts":1448553955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you conditionally remove after adopting, mutation observers will see the original node being removed twice and added once. :)","msgtype":"m.text"},"ts":1448553959000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I want to get mkwst's blessing, but I think setting the context based on type would be best, avoiding the user to redefine everything twice, while not creating CSP holes","msgtype":"m.text"},"ts":1448553988000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: for that the \"preload store\" needs to have a strong tie between things","msgtype":"m.text"},"ts":1448554018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I went over this with igrigorik a while back","msgtype":"m.text"},"ts":1448554028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK. I think that the preload store is still in the \"to be defined\" stage","msgtype":"m.text"},"ts":1448554080000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I summarized my position in the issue","msgtype":"m.text"},"ts":1448554178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks! :)","msgtype":"m.text"},"ts":1448554189000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"nox: I'd appreciate a PR, but let me know if you want me to do it","msgtype":"m.text"},"ts":1448554226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Will do.","msgtype":"m.text"},"ts":1448554239000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Too fixated on making my code work first. :)","msgtype":"m.text"},"ts":1448554249000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"fair","msgtype":"m.text"},"ts":1448554256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone know websockets?","msgtype":"m.text"},"ts":1448555083000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If a server sends malformed utf-8 in a text frame, what should the event's data attribute return?","msgtype":"m.text"},"ts":1448555122000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"s/malformed sequence/\\uFFFD/?","msgtype":"m.text"},"ts":1448555163000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Eh","msgtype":"m.text"},"ts":1448555171000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"files a wpt issue","msgtype":"m.emote"},"ts":1448555175000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i'm just guessing, I have no idea","msgtype":"m.text"},"ts":1448555208000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I expect some implementations truncate the text, some replace with a ?, or \\uFFFD, or something else?","msgtype":"m.text"},"ts":1448555239000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"never seen anyone really use it","msgtype":"m.text"},"ts":1448555246000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/issues/2378","msgtype":"m.text"},"ts":1448555263000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://tools.ietf.org/html/rfc6455#section-8.1","msgtype":"m.text"},"ts":1448555336000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ms2ger: writing WebSocket impl for Servo?","msgtype":"m.text"},"ts":1448555459000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"No, reviewing an API change in the library we use","msgtype":"m.text"},"ts":1448555518000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"line-height is the most stupidly defined CSS property ever <_<","msgtype":"m.text"},"ts":1448555536000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I realise I voice this on a near weekly basis. It keeps on biting.)","msgtype":"m.text"},"ts":1448555550000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"igrigorik: do you have some good tools for testing Resource Hints implementations?","msgtype":"m.text"},"ts":1448555700000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyone want to review a wpt testchange?","msgtype":"m.text"},"ts":1448567028000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MutationObserver stuff","msgtype":"m.text"},"ts":1448567033000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: Mmmh. I still wonder whether it makes more sense to conditionally adopt `node` or to conditionally remove `child`. What do you think?","msgtype":"m.text"},"ts":1448570382000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If we conditionally adopt `node`, there should be a single mutation record queued, with addedNodes = removedNodes = [node].","msgtype":"m.text"},"ts":1448570428000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If we conditionally remove `child`, there should be two mutation records queued, the first with removedNodes = [node], the other with addedNodes = [child].","msgtype":"m.text"},"ts":1448570465000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: what do implementations do?","msgtype":"m.text"},"ts":1448570568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No clue.","msgtype":"m.text"},"ts":1448570578000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: You're the expert. :P","msgtype":"m.text"},"ts":1448570583000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I'd probably write a test first","msgtype":"m.text"},"ts":1448570589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: but not now","msgtype":"m.text"},"ts":1448570595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: There are tests. :'(","msgtype":"m.text"},"ts":1448570602000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Well, for ranges.","msgtype":"m.text"},"ts":1448570609000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"But there is a comment that makes me cry. Let me find it.","msgtype":"m.text"},"ts":1448570618000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hmm I gotta go, sorry, will look tomorrow","msgtype":"m.text"},"ts":1448570665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Safari queues 0 records, Firefox 2, my patch 1.","msgtype":"m.text"},"ts":1448572197000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Sorry.","msgtype":"m.text"},"ts":1448572202000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"is that good or bad","msgtype":"m.text"},"ts":1448572404000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: Bad, I would say.","msgtype":"m.text"},"ts":1448572421000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"oh :(","msgtype":"m.text"},"ts":1448572447000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"I think Safari returns early when replacing a child by itself (I wonder if it passes the related Range tests then).","msgtype":"m.text"},"ts":1448572454000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"And Firefox queues a removal, and then a replacement of the removed thing by itself.","msgtype":"m.text"},"ts":1448572469000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So (you see the thing being removed twice.)","msgtype":"m.text"},"ts":1448572479000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I can't parenthesis.","msgtype":"m.text"},"ts":1448572488000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Chrome says 0 too. So that must be in WebKit.","msgtype":"m.text"},"ts":1448573761000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"i'm still not even sure what you're talking about","msgtype":"m.text"},"ts":1448573844000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: I'm talking about the behaviour of https://dom.spec.whatwg.org/#concept-node-replace with regard to the queued mutation records for all the mutations done by the algorithm.","msgtype":"m.text"},"ts":1448574346000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"caitp-: That's for annevk's backlog. :)","msgtype":"m.text"},"ts":1448574358000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://github.com/WebKit/webkit/blob/master/Source/WebCore/dom/ContainerNode.cpp#L399-L400 WebKit shortcuts everything if node == child, even the sanity check done the method, that definitely doesn't seem the way to go.","msgtype":"m.text"},"ts":1448574401000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"as usual, the answer is to do the wrong thing faster than anyone else","msgtype":"m.text"},"ts":1448574420000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: Ah ah.","msgtype":"m.text"},"ts":1448574659000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/dom/pull/121#issue-119109540","msgtype":"m.text"},"ts":1448580027000,"senderName":"nox","senderId":"nox@irc"}
]