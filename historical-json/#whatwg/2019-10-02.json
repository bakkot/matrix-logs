[
{"content":{"body":"spent way too much time reading the DOM spec only to realise jQuery was at fault all along â€“ https://bugs.chromium.org/p/chromium/issues/detail?id=1010363","msgtype":"m.emote"},"ts":1569979841000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: does that mean the bug should be closed?","msgtype":"m.text"},"ts":1569993148000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: yep, can't do that myself it seems, though","msgtype":"m.text"},"ts":1569993875000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: done","msgtype":"m.text"},"ts":1569994107000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"MikeSmith, annevk: Actually updating the Java side of the HTML parser to the Encoding Standard is still a TODO item. :-(","msgtype":"m.text"},"ts":1569999579000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Using encoding_rs via JNI would probably be the easiest solutions but not the acceptable Java culture solution that would keep the parser reusable by others","msgtype":"m.text"},"ts":1569999646000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Ah, so the Gecko parser doesn't use that encoding code at all?","msgtype":"m.text"},"ts":1570000197000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it doesn't","msgtype":"m.text"},"ts":1570009419000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"https://wicg.github.io/contact-api/spec/#contactsmanager - this API takes a sequence of an enum type. Due to WebIDL, this means it'll throw if an unrecognised type is provided. This feels inconsistent with dictionary types which ignore additional keys. Is there any prior art here? Should the API take a sequence of DOM strings instead and filter manually?","msgtype":"m.text"},"ts":1570027867000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA, you means ContactsManager.select()? Note that it rejects anyway if you pass anything but a subset of ContactsManager.getAvailableContactProperties()","msgtype":"m.text"},"ts":1570028841000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, that's the behaviour I'm questioning. It does it in the prose, but IDL will be doing it anyway. It feels unlike how we usually design APIs, but I'm looking for a second opinion (or some prior art)","msgtype":"m.text"},"ts":1570028969000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm not aware of any prior art","msgtype":"m.text"},"ts":1570029028000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"o/ Hey folks, I'm currently testing the StorageManager API and I'm confused... navigator.storage.persist does not ask for a permission in Chrome (it does in Firefox) and just rejects it. I can't find anything in the interwebz about that problem. Any hints?","msgtype":"m.text"},"ts":1570034924000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"lgrahl: https://developers.google.com/web/updates/2016/06/persistent-storage explains some of chromes behavior (assuming it hasn't changed since then). I.e. it auto-grants in some conditions, and auto-denies in other conditions, but we'll never show a prompt.","msgtype":"m.text"},"ts":1570035349000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Tried bookmarking it and it didn't work :/","msgtype":"m.text"},"ts":1570035450000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"I'll try the home screen thing","msgtype":"m.text"},"ts":1570035455000,"senderName":"lgrahl","senderId":"lgrahl@irc"},
{"content":{"body":"Guess I'll call it a day and fiddle with it tomorrow. Thanks, Mek!","msgtype":"m.text"},"ts":1570035799000,"senderName":"lgrahl","senderId":"lgrahl@irc"}
]