[
{"content":{"body":"littledan: I'm not entirely following https://github.com/whatwg/html/pull/4352#issuecomment-496498523","msgtype":"m.text"},"ts":1559114848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: as I see it service workers relies on some functionality in HTML today","msgtype":"m.text"},"ts":1559114866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: if you change that functionality as per the PR, service workers either ends up broken or we change things for them they are not comfortable with","msgtype":"m.text"},"ts":1559114890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: is that an incorrect understanding of the situation?","msgtype":"m.text"},"ts":1559114899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Annevk, it seems like they are uncomfortable with the feature overall","msgtype":"m.text"},"ts":1559114909000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: sure","msgtype":"m.text"},"ts":1559114920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, I agree this can't land without the plumbing change on their side. I will write that change after this TC39 meeting if it gets to Stage 3","msgtype":"m.text"},"ts":1559114941000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: but either way, given that they directly plug into an HTML algorithm, it seems we need to take their needs into account somehow","msgtype":"m.text"},"ts":1559114946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: that is, we care quite strongly about preserving downstream \"invariants\"","msgtype":"m.text"},"ts":1559114978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, so, right now, the JS spec doesn't cleanly expose whether you encountered a TLA. The API is Promise-based. And now SW is asking to stick with a sync API","msgtype":"m.text"},"ts":1559114999000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"The JS spec API was based on Domenic's suggestion that I mentioned upthread, and I agree with the advice","msgtype":"m.text"},"ts":1559115039000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"So, I am not sure where to go from here","msgtype":"m.text"},"ts":1559115056000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I would prefer to just say, \"too bad SW, you have TLA anyway\" but I don't know enough about that world to do so","msgtype":"m.text"},"ts":1559115091000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"This reminds of me of audio worklets rather not having all kinds of new JS APIs either","msgtype":"m.text"},"ts":1559115092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm good analogy","msgtype":"m.text"},"ts":1559115108000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I suspect they wouldn't want some of this either necessarily","msgtype":"m.text"},"ts":1559115123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Audio worklets probably only wants some flavor of wasm, really","msgtype":"m.text"},"ts":1559115148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe they want to disable the Wasm instruction for Atomics.wait as well!","msgtype":"m.text"},"ts":1559115180000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'm surprised this doesn't come up from those embedding JS into microcontrollers and such","msgtype":"m.text"},"ts":1559115194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or the instruction to grow memory","msgtype":"m.text"},"ts":1559115199000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I hope Wasm's Atomics.wait pays attention to the Agent record, though of course none of that is properly layered","msgtype":"m.text"},"ts":1559115245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, we can go to TC53 and ask them, I suppose. We can start with rwaldron and Moddable at TC39. I don't know that world well.","msgtype":"m.text"},"ts":1559115260000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"It seems weird that browsers would be the first to raise the concern of the minimal JavaScript runtime being too big or having features that are incompatible with certain code architectures","msgtype":"m.text"},"ts":1559115311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, when embedded people come to TC39 historically, they used to ask for even more minimalism than this, leaving out some language features for simplicity and size. I think neither TC39 nor web standards are sympathetic to the idea of creating embedded profiles. There are lots of partial implementations of the web platform that just aren't seen as that interesting for standards (and I can't think of a better way to handle","msgtype":"m.text"},"ts":1559115774000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it).","msgtype":"m.text"},"ts":1559115775000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I see, yeah, profiles end up failing (see all the (X)HTML profiles back in the day). Hmm...","msgtype":"m.text"},"ts":1559115979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Step 6 of Atomics.wait checks the https://tc39.github.io/ecma262/#sec-atomics.wait , reading [[CanBlock]] from the \"agent record\", whereas HTML sets [[CanBlock]] in the \"agent\". It almost matches! https://html.spec.whatwg.org/#integration-with-the-javascript-agent-formalism","msgtype":"m.text"},"ts":1559115989000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"So it makes sense that restricted profiles start from the browser end, where it's about giving the capability to do work for the first time and getting interop there, rather than server or embedded use cases, where the motivation for using standards is more like compatibility with the web (which doesn't have the restrictions)","msgtype":"m.text"},"ts":1559116081000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: yeah, I guess I'll wait until agents are refactored to also account for Wasm","msgtype":"m.text"},"ts":1559116101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway now that we got here maybe we should go back and ask them what they need","msgtype":"m.text"},"ts":1559116120000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: it's also not really clear to me the agent <> agent record <> agent signifier separation is worth it","msgtype":"m.text"},"ts":1559116122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I don't understand either. I will talk with Shu to understand better","msgtype":"m.text"},"ts":1559116147000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Shu's reasoning seemed to be that you can only pass integers between agents or some such, but then if that were true it would mean that the whole structured serializing and deserializing specification is broken","msgtype":"m.text"},"ts":1559116197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So it seems better to accept the fact that there's need for sharing records across agents and at that point you might as well reconcile them all and make agent a record","msgtype":"m.text"},"ts":1559116235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, this is my intuition as well. I am not sure where the requirements on notation come from.  I don't think we should adopt this notation in structured serialization.","msgtype":"m.text"},"ts":1559116292000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"in general ES seems to like having some actual thing and something Record","msgtype":"m.text"},"ts":1559116306000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"like the properties of a realm are captured in a Realm Record, but a Realm Record isn't really a realm, which is an abstract thing","msgtype":"m.text"},"ts":1559116336000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: What do you make of the agent signifier?","msgtype":"m.text"},"ts":1559116388000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I feel like that's an unfortunate consequence of the fact that ES has this distinction between the thing and the Record","msgtype":"m.text"},"ts":1559116456000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I also don't think this impacts Structured Serialization/Deserialization in anyway","msgtype":"m.text"},"ts":1559116475000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"because for that, the records are the only thing being transferred â€“ there's no underlying entity like a realm or an agent","msgtype":"m.text"},"ts":1559116501000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Interesting observation, maybe the problem is the abstract thing indeed","msgtype":"m.text"},"ts":1559116596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yeah, I guess this is based on the idea that only objects have internal slots, whereas records have fields, and other things don't use this notation (though I guess we softened on this for Symbol's [[Description]]?). The . notation was initially pretty restricted, and then later generalized","msgtype":"m.text"},"ts":1559118495000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"annevk: is it intended that given s' = URL serializer(URL parser(s)), s' will parse without validation errors? (I note for example most but not all non-URL code points are percent encoded in the query state.)","msgtype":"m.text"},"ts":1559120323000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I don't think so","msgtype":"m.text"},"ts":1559122475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: e.g., https://example.com/% should not change afaik","msgtype":"m.text"},"ts":1559122512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://wiki.whatwg.org/wiki/DOM_XPath â€” should we create some spec for this somewhere?","msgtype":"m.text"},"ts":1559126621000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"or put it in a PR for DOM, that will probably hang around for ages because nobody will actually work on it? :/","msgtype":"m.text"},"ts":1559126638000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But it seems kinda bad having the actual IDL people are implementing only on the wiki","msgtype":"m.text"},"ts":1559126691000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: DOM is the place and someone doing the work is the problem","msgtype":"m.text"},"ts":1559128231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: a good next step might be to write up an issue with the TODO list for this","msgtype":"m.text"},"ts":1559128261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah, https://github.com/whatwg/dom/issues/67","msgtype":"m.text"},"ts":1559128340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that'sâ€¦ a while ago","msgtype":"m.text"},"ts":1559128351000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"meh, \"16:24, 12 September 2011â€Ž Annevk (talk | contribs | block)â€Ž . . (538 bytes) (+538)â€Ž . . (notes for a future XPath spec)\"","msgtype":"m.text"},"ts":1559128457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And even that doesn't seem that long ago ðŸ˜›","msgtype":"m.text"},"ts":1559128511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's super annoying having WebIDL that's not covered by any of the auto-extraction tools though. Dunno. :/","msgtype":"m.text"},"ts":1559129946000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I could see making a policy exception if we also add the appropriate XXX block","msgtype":"m.text"},"ts":1559131691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: in particular as having the IDL shared and in WPT is better than not having that indeed","msgtype":"m.text"},"ts":1559131720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: would you be willing to drive that?","msgtype":"m.text"},"ts":1559131734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it seems a bit different given it's one of the few interfaces we have that isn't actually in a spec yet is implemented everywhere.","msgtype":"m.text"},"ts":1559132258000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: bit marginal as to whether it's in scope for what I'm paid to do, though :/","msgtype":"m.text"},"ts":1559132268000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"maybe foolip can take it on","msgtype":"m.text"},"ts":1559132351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is it xpath IDL you'd like to have tested?","msgtype":"m.text"},"ts":1559132419000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: we have them tested, but having them somewhere where they're found by automatic tools would be good","msgtype":"m.text"},"ts":1559132447000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: interfaces/xpath.idl doesn't exist though","msgtype":"m.text"},"ts":1559132472000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: the idea is to take the DOM XPath wiki page and put it in the DOM Standard with a policy exception for detailed processing model and testing due to it already existing and have a XXX block explaining that situation","msgtype":"m.text"},"ts":1559132475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: this would a) make it clearer DOM XPath is in fact a (problematic) part of the platform and b) help with getting some test coverage in WPT","msgtype":"m.text"},"ts":1559132500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: putting it in a spec would be good, then it'd be picked up by reffy-reports as wel","msgtype":"m.text"},"ts":1559132509000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1559132516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: and I was volunteering gsnedders / you to do it ðŸ˜Š","msgtype":"m.text"},"ts":1559132546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: aha :) alright, I'll spend 15 minutes and see what happens","msgtype":"m.text"},"ts":1559132565000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah, getting it picked up by reffy-reports is basically the motivating factor, because then we keep the \"spec\" and WPT in sync, and tools that compare impls' IDL to the spec also get it","msgtype":"m.text"},"ts":1559132796000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"foolip: given I don't think anything is going to start crawling the current \"spec\" we have of WebXPath :)","msgtype":"m.text"},"ts":1559132811000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: no, I don't think setting that up would be time well spent :)","msgtype":"m.text"},"ts":1559132845000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/dom/pull/763","msgtype":"m.text"},"ts":1559135672000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Seems like I spent 52 minutes :)","msgtype":"m.text"},"ts":1559135700000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: thanks, it might take a while before I get to this, hope that's not a problem","msgtype":"m.text"},"ts":1559136294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can't imagine much bad stuff happening because of XPath maintenance falling behind a bit :D","msgtype":"m.text"},"ts":1559136331000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: https://github.com/web-platform-tests/wpt/pull/17060 is what prompted this, FWIW; you up for reviewing interface/dedicated-worker.idl?","msgtype":"m.text"},"ts":1559137527000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It this new Memorandum of Understanding big news?","msgtype":"m.text"},"ts":1559140240000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"if I understand this correctly, this means the W3C-published text will now be the WHATWG text verbatim?","msgtype":"m.text"},"ts":1559140395000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"annevk: Any thoughts on my latest changes: https://github.com/whatwg/html/pull/4664  were you waiting on @Domenic?","msgtype":"m.text"},"ts":1559140696000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"innovati: no, there will be no W3C-published text, just 302 redirects to whatwg.org","msgtype":"m.text"},"ts":1559141207000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ðŸ¥° that's the most beautiful thing I've ever heard","msgtype":"m.text"},"ts":1559141231000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"congrats on making progress!","msgtype":"m.text"},"ts":1559141278000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"gsnedders: done","msgtype":"m.text"},"ts":1559145719000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"dtapuska: I didn't get to it today and won't until Monday at the earliest","msgtype":"m.text"},"ts":1559148900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: if Domenic could do a pass that'd be good and maybe Domenic remembers the other person from Chrome looking at navigation, they might have good insights as well","msgtype":"m.text"},"ts":1559148929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can give a try, still kind of drowning in post long weekend + being sick backlog","msgtype":"m.text"},"ts":1559150929000,"senderName":"Domenic","senderId":"Domenic@irc"}
]