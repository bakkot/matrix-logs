[
{"content":{"body":"Domenic: service workers have their own environments right? (as in, a separate environment from the Window that created them)","msgtype":"m.text"},"ts":1538615908000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yes","msgtype":"m.text"},"ts":1538615927000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is it safe to assume then, the environment's creation URL would be the service worker's url? (https://w3c.github.io/ServiceWorker/#dfn-script-url)","msgtype":"m.text"},"ts":1538615957000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Depends on how they set up the environment...","msgtype":"m.text"},"ts":1538615980000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://w3c.github.io/ServiceWorker/#run-service-worker-algorithm seems to indicate so","msgtype":"m.text"},"ts":1538616016000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Exactly what I was looking for. Thanks","msgtype":"m.text"},"ts":1538616079000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"‚ÄúWhatWg is a controversial group. Their specs don't always follow official standards but Python does.‚Äù ‚Äî https://bugs.python.org/issue34875#msg327006","msgtype":"m.text"},"ts":1538632163000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: haha","msgtype":"m.text"},"ts":1538632992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"recently somebody went in to some MDN articles and changed the text/javascript mentions to application/javascript","msgtype":"m.text"},"ts":1538633044000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"based on that same rationale I guess","msgtype":"m.text"},"ts":1538633060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I changed them back","msgtype":"m.text"},"ts":1538633071000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ‚ô•","msgtype":"m.text"},"ts":1538634338000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: Since in main fetch, we always generate request referrers (unless the `no-referrer`), you'd expect requests \"passing through\" a service worker to always have their referrer set to the service worker's URL no?","msgtype":"m.text"},"ts":1538634675000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"(SW's URL because webappsec rp sets \"client\" referrers to the environment's creation URL)...oh wait, actually I think requests passing through a SW will only have their referrers set to the SW's URL in the case where a SW forwards the request with a non-empty RequestInit, resetting referrer to \"client\" (https://fetch.spec.whatwg.org/#ref-for-concept-request-referrer%E2%91%A0%E2%91%A0), and using SW's URL","msgtype":"m.text"},"ts":1538634943000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"If that's right, I guess it feels a little strange that SW requests will have non-SW-URL referrers if the SW fetches w/o RequestInit...seems almost unrelated hmm","msgtype":"m.text"},"ts":1538635041000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: for passthrough it would already be initialized to a URL","msgtype":"m.text"},"ts":1538639723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: and that is intentional so that adding a SW doesn‚Äôt impact observable bits (hence passthrough)","msgtype":"m.text"},"ts":1538639814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: gotcha, we‚Äôd only reset it would for non-null RequestInits though though it seems. (i.e., if the SW ‚Äúpass through‚Äù used fetch(..., {nonNull}))","msgtype":"m.text"},"ts":1538652527000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yeah, because if the SW muddles with it, the SW gets the blame","msgtype":"m.text"},"ts":1538654201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Makes sense. Doesn‚Äôt seem as arbitrary now üëç","msgtype":"m.text"},"ts":1538656975000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"\"wasm\" is the word of the day on wiktionary today","msgtype":"m.text"},"ts":1538668385000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"nice!","msgtype":"m.text"},"ts":1538669237000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"Even better when you read it https://en.wiktionary.org/wiki/wasm#English","msgtype":"m.text"},"ts":1538669272000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is a WebIDL dictionary \"empty\" if it contains no specified members, but was given unspecified/unexpected members?","msgtype":"m.text"},"ts":1538669290000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yes. The conversion from the JS object to Web IDL dictionary produced an empty dictionary.","msgtype":"m.text"},"ts":1538669320000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"perfect","msgtype":"m.text"},"ts":1538669328000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Extra members that are not specified in a dictionary's definition never get copied over into the dictionary structure","msgtype":"m.text"},"ts":1538669335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's what I expected. cool","msgtype":"m.text"},"ts":1538669370000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"...and of course I forgot to just check https://heycam.github.io/webidl/#es-dictionary","msgtype":"m.text"},"ts":1538669792000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Can document.domain share between http: and https:?","msgtype":"m.text"},"ts":1538678261000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Signs point to yes","msgtype":"m.text"},"ts":1538678470000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so the spec is wrong? (at least the spec seems to require two origins to have schemes that are equal to be considered same origin-domain)","msgtype":"m.text"},"ts":1538679595000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: well I was reading the spec, so more likely I misread it :)","msgtype":"m.text"},"ts":1538679827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"isn't the last example at https://html.spec.whatwg.org/multipage/origin.html#same-origin-domain your case? I.e. everything the same except http vs https, are not same origin-domain","msgtype":"m.text"},"ts":1538679889000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: ah yes you are right","msgtype":"m.text"},"ts":1538686727000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: MDN annotations at https://arcane-cove-57093.herokuapp.com/multipage/ now have browser-support tables","msgtype":"m.text"},"ts":1538688025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in the same style as the caniuse ones","msgtype":"m.text"},"ts":1538688054000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"except at a higher level of granularity","msgtype":"m.text"},"ts":1538688084000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"marked up with <details>/<summary>","msgtype":"m.text"},"ts":1538688132000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]