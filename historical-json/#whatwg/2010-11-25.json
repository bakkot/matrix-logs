[
{"content":{"body":"\"Authors must not use the lang attribute in the XML namespace on HTML elements in HTML documents. To ease migration to and from XHTML, authors may specify an attribute in no namespace with no prefix and with the literal localname \"xml:lang\" on HTML elements in HTML documents, but such attributes must only be specified if a lang attribute in no namespace is also specified, and both attributes...","msgtype":"m.text"},"ts":1290643920000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"...must have the same value when compared in an ASCII case-insensitive manner.\"","msgtype":"m.text"},"ts":1290643921000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"Unfortunately, XHTML 1.1 can now be served as text/html and that does not allow lang to be used.","msgtype":"m.text"},"ts":1290643922000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"http://www.w3.org/TR/2009/NOTE-xhtml-media-types-20090116/","msgtype":"m.text"},"ts":1290643923000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"Huh?  XHTML 1.1 allows lang to be used.","msgtype":"m.text"},"ts":1290643980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, 1.1.","msgtype":"m.text"},"ts":1290644040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Who uses 1.1?","msgtype":"m.text"},"ts":1290644041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I doubt HTML5 aims for compatibility with XHTML 1.1.","msgtype":"m.text"},"ts":1290644042000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Nobody so far, but that is partly because before it can't be served as text/html.","msgtype":"m.text"},"ts":1290644043000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"1.0, yes, more or less.","msgtype":"m.text"},"ts":1290644044000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Now it can.","msgtype":"m.text"},"ts":1290644045000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"Thanks to the second edition.","msgtype":"m.text"},"ts":1290644046000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"Okay, so is there a problem here?","msgtype":"m.text"},"ts":1290644100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Serve it as XHTML 1.1 and use xml:lang, or as HTML5 and use lang.","msgtype":"m.text"},"ts":1290644101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The XHTML 1.1 doctype isn't allowed by HTML5 either.","msgtype":"m.text"},"ts":1290644102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So you can't serve the same document for both.","msgtype":"m.text"},"ts":1290644103000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not to mention that if you tried that you couldn't use all the new HTML5 features like <canvas> and <video> and so forth.","msgtype":"m.text"},"ts":1290644104000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(in which case, why bother with HTML5 at all?)","msgtype":"m.text"},"ts":1290644105000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Would you like the spec to say \"To ease migration to and from XHTML 1.0, . . .\" instead?","msgtype":"m.text"},"ts":1290644220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that Wikipedia article is indeed suspicious","msgtype":"m.text"},"ts":1290644880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from the title, you'd expect there to be something about hash in there","msgtype":"m.text"},"ts":1290644881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but you read it and instead it's all about mathematical formulas or some damn thing","msgtype":"m.text"},"ts":1290644940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this article about this subject is much more straightforward:","msgtype":"m.text"},"ts":1290645000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Hashish","msgtype":"m.text"},"ts":1290645001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it gets to the point right away","msgtype":"m.text"},"ts":1290645002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i had a print of a 1973 poster from a katmandu shop","msgtype":"m.text"},"ts":1290645060000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"with a goddess who has a marijuana in her hand ","msgtype":"m.text"},"ts":1290645061000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"and the slogan","msgtype":"m.text"},"ts":1290645062000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"\"We Take You Higher\"","msgtype":"m.text"},"ts":1290645120000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"a marijuana leaf*","msgtype":"m.text"},"ts":1290645121000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1290645180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"relatedly: thx to MikeSmith i got a tshirt that says. \"HTML. So High!   Too much love.\"","msgtype":"m.text"},"ts":1290645360000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"yeah, there's lots more where that one came from","msgtype":"m.text"},"ts":1290645361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"too bad they dont do CSS","msgtype":"m.text"},"ts":1290645420000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"or SVG","msgtype":"m.text"},"ts":1290645421000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"i bet W3C will get lots of money if they start creating such t-shirts :D","msgtype":"m.text"},"ts":1290645422000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"fundraiser whaat!","msgtype":"m.text"},"ts":1290645423000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"i need an html so high! shirt ","msgtype":"m.text"},"ts":1290645424000,"senderName":"cardona507","senderId":"cardona507@irc"},
{"content":{"body":"boom.","msgtype":"m.text"},"ts":1290645425000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"we need a screenshot of sir tim wearing one of those shirts","msgtype":"m.text"},"ts":1290645426000,"senderName":"cardona507","senderId":"cardona507@irc"},
{"content":{"body":"that would be hot","msgtype":"m.text"},"ts":1290645427000,"senderName":"cardona507","senderId":"cardona507@irc"},
{"content":{"body":"i think we have a biz plan right here MikeSmith","msgtype":"m.text"},"ts":1290645480000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"yeah, we need to execute on this","msgtype":"m.text"},"ts":1290645540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's interesting that the words HTML and THC both have the letter H in themâ€¦ there's no way that could just be a simple coincidence","msgtype":"m.text"},"ts":1290645541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think we should rename XBL2 to THC","msgtype":"m.text"},"ts":1290645542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JonathanNeal: did you get any feedback yet on that bug you filed?","msgtype":"m.text"},"ts":1290645960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"none that I know of, let's check.","msgtype":"m.text"},"ts":1290645961000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"what's the bug number?","msgtype":"m.text"},"ts":1290646020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://bugs.webkit.org/show_bug.cgi?id=50006","msgtype":"m.text"},"ts":1290646140000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"UNCONFIRMED","msgtype":"m.text"},"ts":1290646141000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"ah, it's cool you added the red","msgtype":"m.text"},"ts":1290646320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in the test page","msgtype":"m.text"},"ts":1290646321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"makes it a lot easier to see","msgtype":"m.text"},"ts":1290646322000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yea, that was based on your initial reaction.","msgtype":"m.text"},"ts":1290646620000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"When I have free time I'd be interested in seeing how Firefox handles the spread, like, where it distributes the leftover pixels.","msgtype":"m.text"},"ts":1290646680000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"okay, time to bring pie to the gf's fam and then home for more coding. see you guys a little later (if you're on)","msgtype":"m.text"},"ts":1290646860000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1290646861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Sorry, I found out later actually XHTML 1.1 second edition did add the lang attribute, so there is no incompatibility anyway.","msgtype":"m.text"},"ts":1290650040000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"Look at the beginning of http://www.w3.org/TR/xhtml11/.","msgtype":"m.text"},"ts":1290650041000,"senderName":"yuhong","senderId":"yuhong@irc"},
{"content":{"body":"in C++ program, if I have an int, is there any way I can determine how many digits there in it?","msgtype":"m.text"},"ts":1290657540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, without repeatedly dividing by 10?","msgtype":"m.text"},"ts":1290659400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: yeah, preferably","msgtype":"m.text"},"ts":1290659460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I have since realized it's not going to help me to know it anyway","msgtype":"m.text"},"ts":1290659520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aha i knew there would be a bit twiddling hack for it","msgtype":"m.text"},"ts":1290659521000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://graphics.stanford.edu/~seander/bithacks.html#IntegerLog10","msgtype":"m.text"},"ts":1290659522000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1290659580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1290659581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that page is full of awesome","msgtype":"m.text"},"ts":1290659640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"see, I knew there was some obvious way to do it :)","msgtype":"m.text"},"ts":1290659641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1290659642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1290659643000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that page is indeed great","msgtype":"m.text"},"ts":1290659644000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my C++ programming skills are the complete opposite of awesome","msgtype":"m.text"},"ts":1290659700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I did just manage to find and fix another bug in the V8 date-parsing code","msgtype":"m.text"},"ts":1290659701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"despite my caveman-level programming chops","msgtype":"m.text"},"ts":1290659702000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and no thanks to gdb","msgtype":"m.text"},"ts":1290659760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe you can pick up a monetary reward for that","msgtype":"m.text"},"ts":1290659761000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I would be happy with a new skateboard","msgtype":"m.text"},"ts":1290659820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or a new deck at least","msgtype":"m.text"},"ts":1290659880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I have decided that debuggers are overkill","msgtype":"m.text"},"ts":1290660060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"printf and the like are the best debugging tool ever","msgtype":"m.text"},"ts":1290660061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"totally","msgtype":"m.text"},"ts":1290660120000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"is listening to \"Cadaverous / Ultraviolent Junglist\" by Venetian Snares on WFMU on HotRod's show from WFMU - Freeform Radio the Way it Oughta Be (âœ®âœ®âœ®âœ®âœ®)","msgtype":"m.emote"},"ts":1290660121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm also convinced that listening to breakcore helps me thinks better","msgtype":"m.text"},"ts":1290660360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or faster at least","msgtype":"m.text"},"ts":1290660361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kennyluck: http://blog.jclark.com/2010/11/xml-vs-web_24.html","msgtype":"m.text"},"ts":1290668220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"xhtml2 wg is still alive... http://www.w3.org/News/2010.html#entry-8962","msgtype":"m.text"},"ts":1290679440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I like how the top item on their homepage is \"XHTML 2 Working Group Expected to Stop Work End of 2009\". No one expects theâ€¦ well you see where I am going. Maybe it's not that surprising, since Steven Pemberton was involved with ABC which was the precursor to Python","msgtype":"m.text"},"ts":1290679620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"david_carlisle: I think the answer to your question about testsuites is something like \"use common sense\", i.e. if you make a test that is known to fail in some UA for a reason unrelated to what it purports to test, that is probably bad","msgtype":"m.text"},"ts":1290682320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and the less interoperable the features you use in your test, the more likely that is to happen","msgtype":"m.text"},"ts":1290682380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"should write something like that to the list","msgtype":"m.emote"},"ts":1290682381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"david_carlisle, if that innerHTML issue gets resolved I suspect it will be out of scope for the HTML WG test suite","msgtype":"m.text"},"ts":1290682440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, we could still add it I suppose, but HTML5 would not place the requirements","msgtype":"m.text"},"ts":1290682441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: but I haven't any javascript common sense (no natural feel for the language). Now if the test suite was in xslt it would be so much easier...","msgtype":"m.text"},"ts":1290682920000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Yeah, because you would be the only contributer :p","msgtype":"m.text"},"ts":1290683340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: if it's out of scope to test for innerHTML on math, then why $ grep innerHTML  approved/foreigncontent/foreign_content_009.html","msgtype":"m.text"},"ts":1290683460000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"for example","msgtype":"m.text"},"ts":1290683461000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"jgraham: on interoperability, I checked the thing worked as expected in webkit/opera/ff/ie is that \"interoperable enough\" in practice.  there are mathml systems that don't do javascript at all, which would no doubt have serious problems with the test harness, so it wasn't clear to me what was likely to be acceptable.","msgtype":"m.text"},"ts":1290683640000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle, is that testing innerHTML on an HTML or MathML element?","msgtype":"m.text"},"ts":1290683760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Neither, it is using innerHTML to set the results, afaict","msgtype":"m.text"},"ts":1290683761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: its on svg not mathml, but whatever its testing if innerHTML didn't work on svg the test would fall over","msgtype":"m.text"},"ts":1290684240000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"sorry, i need to move wifi only stays up for a minute at a time here","msgtype":"m.text"},"ts":1290684300000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: It only uses .innerHTML on a HTMLElement afaict","msgtype":"m.text"},"ts":1290684301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"does it, oops must look harder next time:-0","msgtype":"m.text"},"ts":1290684420000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"annevk: i still don't really see why it's out of scope for html5, .innerHTML works on math in html in  pre-html5 parsers eg opera. It's just the html5 spec as currently written that says it shouldn't work.","msgtype":"m.text"},"ts":1290685080000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: Surely it is in scope for the Math WG to put whatever they like on the interface implemented by MathML elements. But I guess annevk means it will become part of Web DOM Core","msgtype":"m.text"},"ts":1290685320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No reason not to test it in HTML5 testsuite if it does","msgtype":"m.text"},"ts":1290685321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But not strictly in scope","msgtype":"m.text"},"ts":1290685380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"david_carlisle, HTML5 can say what happens on HTML elements, not what happens on non-HTML elements","msgtype":"m.text"},"ts":1290685440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, that is how we have scoped it from the beginning anyway","msgtype":"m.text"},"ts":1290685500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, and the current proposal for generalizing innerHTML is outside HTML5","msgtype":"m.text"},"ts":1290685501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, it is this specification: http://html5.org/specs/dom-parsing.html","msgtype":"m.text"},"ts":1290685560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: but basically the browser manufacturers told us they didn't want a mathml specific dom as it was work for not much gain (and it was hard to disagree) so we currently don't have anywhere to specify a mathml specific interface, we assumed that in a browser context it would just do the right thing using a generaic interface (ie one more like HTMLElement than Element)","msgtype":"m.text"},"ts":1290685620000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"annevk: it is the html5 spec that has said what to do with math, if it haddnt said that it would be unknown html element and these methods would be available","msgtype":"m.text"},"ts":1290685621000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"as they are in FF3 or opera, or IE9","msgtype":"m.text"},"ts":1290685622000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: It seems like it should be rather easy to say that all elements in MathML implement HTMLElement rather than Element","msgtype":"m.text"},"ts":1290685740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes please!","msgtype":"m.text"},"ts":1290685741000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"curently as far as dom scripting support goes mathml elemnts get less functionality than <wibble-foo-bar> which can't be right","msgtype":"m.text"},"ts":1290685800000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: Well, strictly speaking it is for the Math WG to say, not HTML. But I suggest sending an email to public-html","msgtype":"m.text"},"ts":1290685920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham; As I say we have essentially retired the mathml dom spec (chapter 8 of mathml2 has no equiv in mathml3) but if necessary we would see if we could get ourself chartered to make a new rec trac document that said the one line  MathMLElement inherits from HTMLElement in a DOM that supports HTMLElement","msgtype":"m.text"},"ts":1290686040000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle, HTML5 cannot say what interface elements in a non-HTML namespace implement","msgtype":"m.text"},"ts":1290686100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Presumably HTML can say anything that we can get along the Rec. track","msgtype":"m.text"},"ts":1290686160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, I guess, but I would not agree to this approach","msgtype":"m.text"},"ts":1290686220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What, saying that MathMLElement inherits HTMLElement?","msgtype":"m.text"},"ts":1290686280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or saying that without rechartering the MathML WG?","msgtype":"m.text"},"ts":1290686281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That is, is your issue technical or procedural?","msgtype":"m.text"},"ts":1290686282000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"either","msgtype":"m.text"},"ts":1290686283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think innerHTML should move to Element","msgtype":"m.text"},"ts":1290686284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It seems like there is a lot of other stuff on HTMLElement that I would want on all elements in a text/html document","msgtype":"m.text"},"ts":1290686400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yes innerHTML is just one aspect that happened to bite first.","msgtype":"m.text"},"ts":1290686460000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"and not in a text/xml document?","msgtype":"m.text"},"ts":1290686461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and not for SVG elements?","msgtype":"m.text"},"ts":1290686462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't care about XML documents","msgtype":"m.text"},"ts":1290686463000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also for SVG, yes","msgtype":"m.text"},"ts":1290686464000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that is more complex as SVG has a non-trivial DOM of its own","msgtype":"m.text"},"ts":1290686520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, DOM consistency is important","msgtype":"m.text"},"ts":1290686521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In doms that support HTMLElement, in a pure XML world thinsg are different but mathml in html should behave like an html element and mathml in xhtml should behave like an xhtml one","msgtype":"m.text"},"ts":1290686522000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"I'm not sure what you mean with a pure XML world. From a browser's perspective there's hardly any difference.","msgtype":"m.text"},"ts":1290686580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And there's also hardly any difference between HTML and XHTML.","msgtype":"m.text"},"ts":1290686581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk:  I mean if you are not in a browser","msgtype":"m.text"},"ts":1290686582000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Even then the same considerations would apply I hope...","msgtype":"m.text"},"ts":1290686640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sorry you lost me.  i just want someone to say that if a DOM implements HTMLElement then MathML elements should inherit from that, and if the DOM doesn't implement  HTMLElement then they inherit from Element","msgtype":"m.text"},"ts":1290686700000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"That soundsâ€¦ odd","msgtype":"m.text"},"ts":1290686760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah...","msgtype":"m.text"},"ts":1290686761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I think you just want to inherit from HTMLElement, always)","msgtype":"m.text"},"ts":1290686762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aaaagh the firefly song is going through my head again!","msgtype":"m.text"},"ts":1290686820000,"senderName":"slartsa","senderId":"slartsa@irc"},
{"content":{"body":"._.","msgtype":"m.text"},"ts":1290686821000,"senderName":"FireFly","senderId":"FireFly@irc"},
{"content":{"body":"repeats himself","msgtype":"m.emote"},"ts":1290686822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Just make Element inherit from HTMLElement ","msgtype":"m.text"},"ts":1290686823000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I think you just want to inherit from HTMLElement, always)","msgtype":"m.text"},"ts":1290686824000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham:  it's consistent with the way xhtml works in practice. If you use a browser DOM it has HTML specific support, but if you just treat it as generic XML in an XML DOM then it's Element, isn't it?","msgtype":"m.text"},"ts":1290686880000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"jgraham:  \"I think you just want to inherit from HTMLElement, always\", I want that if HTMLElement is defined, but I don't want to say you can't use MathML without implementing HTML, The exact best way to say that in terms of dom inheritance I'd be happy to leave to someone who knows what they are talking about,","msgtype":"m.text"},"ts":1290687180000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"jgraham: I believe the sane invariants should be that a node implements HTMLElement if and only if its namespace is the HTML namespace (and analogously for SVG)","msgtype":"m.text"},"ts":1290687300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"there's something weird in Gecko that makes this not always hold for SVG","msgtype":"m.text"},"ts":1290687360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"might be some SVG spec badness that got implemented carefully","msgtype":"m.text"},"ts":1290687361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SVG said only known SVG elements implement SVGElement","msgtype":"m.text"},"ts":1290687362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsvionen: Is there a way (in IDL) to say MathMLElement is same as HTMLElement without saying it inherits from it, or are yiu saying we need to textually copy th espec of HTMLElement and then do s/HTML/MathML/g","msgtype":"m.text"},"ts":1290687420000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen: because if we really have to do the latter we'd do it ","msgtype":"m.text"},"ts":1290687480000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: I don't know, but I expect that IDL does not have such a feature","msgtype":"m.text"},"ts":1290687540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: can we change the SVG spec say that all elements in the SVG namespace implement SVGElement?","msgtype":"m.text"},"ts":1290687541000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: and is inheriting from HTMLElement really bad?","msgtype":"m.text"},"ts":1290687600000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen, yeah, I think that is the plan anyway","msgtype":"m.text"},"ts":1290687660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, it makes no sense?","msgtype":"m.text"},"ts":1290687661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what makes no sense?","msgtype":"m.text"},"ts":1290687720000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"to have Math elements inherit from HTML elements","msgtype":"m.text"},"ts":1290687721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why in 50 years time should anyone care that in an html/svg/mathml document that different elements got defined in different bits of the w3c?","msgtype":"m.text"},"ts":1290687780000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: in Gecko, it's nice to know that if a node is in one of the main namespaces, it can be unconditionally cast into certain interfaces/classes","msgtype":"m.text"},"ts":1290687840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: a math fragment is just a natural part of the sentence structure, all interaction and scripting should just work naturally across the tree","msgtype":"m.text"},"ts":1290687841000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: I'm not sure of the implications of MathML elements inheriting from HTMLElement","msgtype":"m.text"},"ts":1290687900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes exactly i want th einterfaces that you'd give to unknown html elemnts, not just get dropped on the floor with no support","msgtype":"m.text"},"ts":1290687901000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: Boris Zbarsky is likely to have a better idea of the consequences of such a change","msgtype":"m.text"},"ts":1290687960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe the discussion should be in bugzilla rather than here, but it's been fun chatting, got some xslt to attend to in the day job, better go (or at least stop watching)","msgtype":"m.text"},"ts":1290688020000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle, that is a good question -- I do not think that necessarily leads to what you think is the obvious answer though","msgtype":"m.text"},"ts":1290688260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reni: ping","msgtype":"m.text"},"ts":1290689580000,"senderName":"kling","senderId":"kling@irc"},
{"content":{"body":"kling: and here","msgtype":"m.text"},"ts":1290689581000,"senderName":"reni","senderId":"reni@irc"},
{"content":{"body":"Hi there, has anyone suggest a widget for developers to use that just selects a folder instead of a file","msgtype":"m.text"},"ts":1290692340000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"Why You Guys Taking So Much Time for HTML5.... -- http://www.w3.org/Bugs/Public/show_bug.cgi?id=11405","msgtype":"m.text"},"ts":1290692640000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"that was usefulâ€¦","msgtype":"m.text"},"ts":1290692641000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1290692700000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"I'm tempted to reply to the guy \"because you haven't pedal fast enough\"","msgtype":"m.text"},"ts":1290692701000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"openstandards: what is the question?","msgtype":"m.text"},"ts":1290692760000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"you should do, thats annoying... people will moan if theres problems with the spec if things aren't done properly ","msgtype":"m.text"},"ts":1290692761000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"I do not parse the \" a widget for developers to use that just selects a folder instead of a file\"","msgtype":"m.text"},"ts":1290692820000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow, has anything been purposed for selecting a download folder I know theres input=file but then the user will have to select a file for the widget to close","msgtype":"m.text"},"ts":1290692821000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"for FileAPI you mean?","msgtype":"m.text"},"ts":1290692822000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"there's no such thing","msgtype":"m.text"},"ts":1290692880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"damn thats annoying :(","msgtype":"m.text"},"ts":1290692881000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"<input type=file multiple> is what is closest","msgtype":"m.text"},"ts":1290692882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has this issue been mentioned before?","msgtype":"m.text"},"ts":1290692940000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"webkit has an implementation of a dir selection, can't remember the attribute","msgtype":"m.text"},"ts":1290693000000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"openstandards, yes","msgtype":"m.text"},"ts":1290693060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"openstandards, some consider it a UI issue","msgtype":"m.text"},"ts":1290693120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I started implementing the approach that puts the insertion mode onto the stack","msgtype":"m.text"},"ts":1290693240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I do thats partly why i asked i looked into the input types but didn't see anything, I saw someone mentioned input=\"directory\" for uploads but wasn't sure if this talks has been carried on","msgtype":"m.text"},"ts":1290693241000,"senderName":"openstandards","senderId":"openstandards@irc"},
{"content":{"body":"Hixie: then I figured it was too much trouble and reverted","msgtype":"m.text"},"ts":1290693242000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: however, I implemented the idea of getting rid of the \"in foreign content\" insertion mode and instead checking the namespace of the current element","msgtype":"m.text"},"ts":1290693300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: I'm pleased with the result","msgtype":"m.text"},"ts":1290693301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: I don't understand why some of your frameset-ok tests are in plain-text-unsafe.dat","msgtype":"m.text"},"ts":1290694920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think some of them might have been me noticing the open buffer had <frameset> tests, but not noticing that it was plaintext-unsafe","msgtype":"m.text"},"ts":1290695100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I see","msgtype":"m.text"},"ts":1290695101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: btw, you had also removed LF from the end of file in both plain-text-unsafe files","msgtype":"m.text"},"ts":1290695160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I put them back in a hex editor and will push to hg","msgtype":"m.text"},"ts":1290695161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1290695162000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess html5lib's test harness is less picky about LF at end of file","msgtype":"m.text"},"ts":1290695220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if U+FFFD for U+0000 is a safe substitution in text/plain","msgtype":"m.text"},"ts":1290695280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for reasons I fail to recall, I've made Gecko throw away U+0000 in <plaintext> ","msgtype":"m.text"},"ts":1290695340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and now the test cases want U+FFFD there","msgtype":"m.text"},"ts":1290695341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The spec specifically requires that and it also required a change in html5lib","msgtype":"m.text"},"ts":1290695400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Kinsd of silly really","msgtype":"m.text"},"ts":1290695401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Chrome 9 sniffs http://hsivonen.iki.fi/test/moz/null-crlf.txt as a file that gets downloaded instead of viewed as plain text","msgtype":"m.text"},"ts":1290695460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: The html5lib harness gets upset if there are >1 newlines at the end of a file","msgtype":"m.text"},"ts":1290695700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it is fine with 0 or 1","msgtype":"m.text"},"ts":1290695760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: my harness wants 1 newline at the end of file","msgtype":"m.text"},"ts":1290695820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I will try to make sure that happens","msgtype":"m.text"},"ts":1290695821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks","msgtype":"m.text"},"ts":1290695880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Firefox 3.6 and Opera don't throw away U+0000 in text/plain, so I guess I'm OK with what the new spec text / test cases","msgtype":"m.text"},"ts":1290695940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so why doesn't the 'plaintext' start tag token put the tree builder into the 'text' insertion mode?","msgtype":"m.text"},"ts":1290696120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What difference would it make?","msgtype":"m.text"},"ts":1290696420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1290696421000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no difference that the test suite could catch provided that original mode  is set also","msgtype":"m.text"},"ts":1290696480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Why would it matter if the original mode is set? You could only end up in the \"a character token\" branch","msgtype":"m.text"},"ts":1290696540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, wait I think it would make a difference","msgtype":"m.text"},"ts":1290696541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It wouldn't e.g. reconstruct active formatting elements","msgtype":"m.text"},"ts":1290696600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in what situation?","msgtype":"m.text"},"ts":1290696601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"<p><a><b><plaintext>c","msgtype":"m.text"},"ts":1290696660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that's an evil test that needs to be in the test suite!","msgtype":"m.text"},"ts":1290696720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do we really want to reconstruct the active formatting elements in that case?","msgtype":"m.text"},"ts":1290696721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Yeah. Although in all honestly zcorpan gets the credit for it","msgtype":"m.text"},"ts":1290696780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have no opinion what we do here because I think eorrying about interoperability of <plaintext> is rather silly","msgtype":"m.text"},"ts":1290696781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well interoperability is nice","msgtype":"m.text"},"ts":1290696840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but worrying about the exact behaviour is quite silly","msgtype":"m.text"},"ts":1290696841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, if it ends up in the test suite, everyone needs to worry about it","msgtype":"m.text"},"ts":1290696842000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Right. I think we should be interoperable. I am entirely unconcerned with what behaviour we interoperate on","msgtype":"m.text"},"ts":1290696900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/on/with/","msgtype":"m.text"},"ts":1290696901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. I don't care if we reconstruct or not","msgtype":"m.text"},"ts":1290696902000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the old WebKit behavior differs from the spec, FWIW","msgtype":"m.text"},"ts":1290696960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Seeming that Chrome and Firefox 4 already reconstruct it implies that changing now would be a bad idea","msgtype":"m.text"},"ts":1290696961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: well, not necessarily, since it looks like I'm going to change code around this area in the next few minutes anyhow","msgtype":"m.text"},"ts":1290697080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: So I should land that test now? :p","msgtype":"m.text"},"ts":1290697140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I haven't yet decided what I want","msgtype":"m.text"},"ts":1290697141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm a bit annoyed at having to think about this","msgtype":"m.text"},"ts":1290697142000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"IE9 agrees with old WebKit, FWIW","msgtype":"m.text"},"ts":1290697143000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think that it is a silly change but an entirely harmless one. I wonder if we could just have dropped <plaintext>","msgtype":"m.text"},"ts":1290697260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I guess it's OK to land the test in any case","msgtype":"m.text"},"ts":1290697320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"even if the test expectation ends up changing later","msgtype":"m.text"},"ts":1290697380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe I should just implement what the spec says to avoid the spec change process","msgtype":"m.text"},"ts":1290697381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"though I think it would make more sense to use the 'text' mode inside <plaintext> and to make <plaintext> not close p implicitly","msgtype":"m.text"},"ts":1290697382000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: It's only been deprecated for 17 years, you can't drop it yet","msgtype":"m.text"},"ts":1290697383000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: s/deprecated/obsolete/","msgtype":"m.text"},"ts":1290697440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: and it fulfils important use cases, like emulating HTML5 parsing behaviour in old browsers","msgtype":"m.text"},"ts":1290697441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ha! <plaintext> doesn't close <p> in any legacy browser. It's a new Hixie-ism.","msgtype":"m.text"},"ts":1290697500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"spec bug filing time","msgtype":"m.text"},"ts":1290697560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does in Safari?","msgtype":"m.text"},"ts":1290697620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nope","msgtype":"m.text"},"ts":1290697680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, Safari 5.0.3 has an updated parser then?","msgtype":"m.text"},"ts":1290697681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm.","msgtype":"m.text"},"ts":1290697800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rechecks","msgtype":"m.emote"},"ts":1290697801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: oh, you are right","msgtype":"m.text"},"ts":1290697860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has pushed the test for the current spec","msgtype":"m.emote"},"ts":1290697920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders if Hixie is away","msgtype":"m.emote"},"ts":1290697980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh well, I guess I'll just implement the spec","msgtype":"m.text"},"ts":1290698220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this resulted in one more special-case method :-(","msgtype":"m.text"},"ts":1290698460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think it's somehow distasteful that <plaintext> can get element children inserted by the parser ","msgtype":"m.text"},"ts":1290698580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should we special-case <plaintext> so that it doesn't reconstruct?","msgtype":"m.text"},"ts":1290698700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<p><b><xmp>x\\0","msgtype":"m.text"},"ts":1290698820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is that also an issue?","msgtype":"m.text"},"ts":1290698821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: we could make <plaintext> not implicitly close <p> and then use the 'text' insertion mode","msgtype":"m.text"},"ts":1290698880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that would match IE8, Opera and Firefox 3.6","msgtype":"m.text"},"ts":1290698881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"clearly, IE9 has very carefully cloned old WebKit here","msgtype":"m.text"},"ts":1290698882000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder what possessed them to clone old WebKit instead of implementing the spec","msgtype":"m.text"},"ts":1290698883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Maybe they think that you can be sure to get web compatibility from cloning web-compatible implementations and that people who write specs are by-and-large idealistic hippies who can't be relied on to do the right thing","msgtype":"m.text"},"ts":1290699180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: looks like xmp in the spec behaves like plaintext in Safari...","msgtype":"m.text"},"ts":1290699360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"consistency? what consistency?","msgtype":"m.text"},"ts":1290699361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: not entirely unreasonable :)","msgtype":"m.text"},"ts":1290699600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what HTMLElement can I use to embed content of a different type in the document.. something like","msgtype":"m.text"},"ts":1290702720000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"<embed type=\"text/something\"> content-inline-here </embed>","msgtype":"m.text"},"ts":1290702721000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: <script>","msgtype":"m.text"},"ts":1290702960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"webr3: See e.g. the <script type=\"text/x-game-map\"> in http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html","msgtype":"m.text"},"ts":1290703020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah that's what I am using, but I want the script to be human viewable too, on the page","msgtype":"m.text"},"ts":1290703140000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"If it should be visible as plain text, maybe just use <pre>?","msgtype":"m.text"},"ts":1290703260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aye, basically can see a use case where it's both, for instance with examples","msgtype":"m.text"},"ts":1290703620000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"<script type=\"text/custom\" showaspre=\"true\"> for example </script>","msgtype":"m.text"},"ts":1290703621000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"like script+pre merged","msgtype":"m.text"},"ts":1290703680000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"<script style=\"display:block; white-space:pre\"> should do that","msgtype":"m.text"},"ts":1290703800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though it's probably not great semantically","msgtype":"m.text"},"ts":1290703801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"A simple <pre> seems more appropriate when you want to display text, and you can have scripts that extract the textContent and process it if you want","msgtype":"m.text"},"ts":1290703860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes that's it! awesome","msgtype":"m.text"},"ts":1290703861000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"you can wrap a script in pre!","msgtype":"m.text"},"ts":1290703980000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"<pre><script ... etc - awesome","msgtype":"m.text"},"ts":1290703981000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1290704280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://webr3.org/apps/play/embeds/javascript","msgtype":"m.text"},"ts":1290704760000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"and now i can embed RDF and make it human viewable too, nice http://webr3.org/apps/play/embeds/turtle","msgtype":"m.text"},"ts":1290704761000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Philip`, ty :)","msgtype":"m.text"},"ts":1290704762000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Putting it in <script> will probably stop search engines from indexing it, which may not be what you want","msgtype":"m.text"},"ts":1290704940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"indeed, but I'm fine w/ that and linked data crawlers can start to use it - have always got RDFa as well which is deployed and stable, this is for a different use case","msgtype":"m.text"},"ts":1290705000000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"<plaintext>!","msgtype":"m.text"},"ts":1290705060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<xmp>!","msgtype":"m.text"},"ts":1290705061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"meh script does what i need, no stupid encoding, backwards comaptible expected functionality, and can make normal js libs to \"do things\" w/ the data - I'm quite happy as is","msgtype":"m.text"},"ts":1290705180000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"just drop in a css rule to toggle displaying it, why would i want or need or need any more?","msgtype":"m.text"},"ts":1290705240000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"and it's got the content @type and @charset encoding which I need too..","msgtype":"m.text"},"ts":1290705300000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"charset is illegal for inline data","msgtype":"m.text"},"ts":1290705600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"charset isn't on script..?","msgtype":"m.text"},"ts":1290705960000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"or you can't displauy:block a <script>?","msgtype":"m.text"},"ts":1290706020000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"no tab?","msgtype":"m.text"},"ts":1290710520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fwiw, Opera devs agreed with Philip` and remarked that we support rgba() in SVG","msgtype":"m.text"},"ts":1290710521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"re gradient thread","msgtype":"m.text"},"ts":1290710522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Will someone post to that thread?","msgtype":"m.text"},"ts":1290710580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"timj is busy with other things and the other relevant people are not on the WHATWG list","msgtype":"m.text"},"ts":1290710640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as I understand it","msgtype":"m.text"},"ts":1290710641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought of posting, but I wasn't sure whether it would be worth it just noting that","msgtype":"m.text"},"ts":1290710642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Might be worthwhile since otherwise people may assume there's consensus among the browser developers","msgtype":"m.text"},"ts":1290710820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1290711180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1290711540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what's the easiest way to get at the original DOM, pre-javascript-manipulation?","msgtype":"m.text"},"ts":1290713400000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"for instance if one has an extension which reads microformats/rdfa out of the dom, and a js manipulates the dom first, then this could cause significant problems","msgtype":"m.text"},"ts":1290713460000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: what sorts of problems?","msgtype":"m.text"},"ts":1290714420000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober, well malicous scripts can manipulate the dom to add new data and \"say\" things that are incorrect","msgtype":"m.text"},"ts":1290717120000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"like.. <a href=\"http://spammy-company.com\" rel=\"tag\"","msgtype":"m.text"},"ts":1290717180000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"and a parser running over the DOM will pull that info out and \"believe\" it, even though bad.js injected it in to the DOM","msgtype":"m.text"},"ts":1290717181000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"The web security model is that scripts that run on a page are as trusted as the page itself (because the page chose to run them)","msgtype":"m.text"},"ts":1290717540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so the raw HTML read over the wire before any JS execution is no more trustworthy than what you'll get after running its scripts","msgtype":"m.text"},"ts":1290717600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Parsing and script execution are entangled anyway, because of document.write - neither can happen entirely before the other","msgtype":"m.text"},"ts":1290717720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"good points Philip` - however to some degree I'd suggest that the HTML source document sent over the wire is \"purer\" and more trustworthy in some senses, because there's much less room for manipulation by scripts, trusted, untrusted or simply hijacked","msgtype":"m.text"},"ts":1290718260000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: wget?","msgtype":"m.text"},"ts":1290720180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean there isn't any way in a typical browser","msgtype":"m.text"},"ts":1290720181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although sometimes it is preserved for view-source","msgtype":"m.text"},"ts":1290720182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"webr3: another issue is thatâ€¦ servers send different content depending on the user agents or features.","msgtype":"m.text"},"ts":1290721800000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"so for example when you play with let say, curl -A \"here your favorite useragent string\" URI  ","msgtype":"m.text"},"ts":1290721801000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"you get different results. ","msgtype":"m.text"},"ts":1290721860000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I wonder if there should be a way to get doc/dom prior to any manipulation","msgtype":"m.text"},"ts":1290722040000,"senderName":"webr3","senderId":"webr3@irc"}
]